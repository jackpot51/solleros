     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> %include 'source/signature.asm'
     5                              <2> signature:	;used by bootloader to find SollerOS, is totally awesome
     6 00000000 EDA55ED1            <2> dd 0xD15EA5ED	;diseased
     7 00000004 15D000B1            <2> dd 0xB100D015	;blood is
     8 00000008 EDFED2BA            <2> dd 0xBAD2FEED	;bad to feed
     9 0000000C 95D0112A            <2> dd 0x2A11D095	;to all dogs
    10 00000010 52A71CA1            <2> dd 0xA11CA752	;all cats too.
    11 00000014 0F751015            <2> dd 0x1510750F   ;is lots of
    12 00000018 75CAADDE            <2> dd 0xDEADCA75   ;dead cats
    13 0000001C 95D0ADDE            <2> dd 0xDEADD095   ;dead dogs
    14 00000020 18000000            <2> dd 24			;version
    15 00000024 534F4C4C45524F53    <2> db "SOLLEROS"
    16                              <2> signatureend:
    17                              <1> menustart:	
    18 0000002C 8CC8                <1> 	mov ax, cs
    19 0000002E 8ED8                <1> 	mov ds, ax
    20 00000030 8EC0                <1> 	mov es, ax
    21 00000032 8ED0                <1> 	mov ss, ax
    22 00000034 880E[8701]          <1> 	mov [DriveNumber], cl
    23 00000038 668916[8801]        <1> 	mov [lbaad], edx
    24 0000003D B800A0              <1> 	mov ax, 0xA000
    25 00000040 8EE8                <1> 	mov gs, ax
    26 00000042 B81200              <1> 	mov ax, 12h
    27 00000045 BB0000              <1> 	mov bx, 0
    28 00000048 CD10                <1> 	int 10h
    29                              <1> guiload:
    30 0000004A BE[9802]            <1> 	mov si, bootmsg
    31 0000004D E85101              <1> 	call printrm
    32 00000050 B80000              <1> 	mov ax, 0
    33 00000053 CD16                <1> 	int 16h
    34 00000055 3C79                <1> 	cmp al, "y"
    35 00000057 0F85F900            <1> 	jne near guiload2
    36                              <1> guiloadagain:
    37 0000005B B8004F              <1> 	mov ax, 04F00h
    38 0000005E BF[AC83]            <1> 	mov di, VBEMODEBLOCK
    39 00000061 CD10                <1> 	int 10h
    40 00000063 BE[CE83]            <1> 	mov si, reserved
    41 00000066 81EE0200            <1> 	sub si, 2
    42                              <1> findvideomodes:
    43 0000006A 81C60200            <1> 	add si, 2
    44 0000006E 8B0C                <1> 	mov cx, [si]
    45 00000070 81F9FFFF            <1> 	cmp cx, 0xFFFF
    46 00000074 0F840A00            <1> 	je near nextvmode
    47 00000078 81FE[AC84]          <1> 	cmp si, oemdata
    48 0000007C 0F83D400            <1> 	jae near guiload2	;;kill if no valid list is found
    49 00000080 EBE8                <1> 	jmp findvideomodes 	
    50                              <1> ;;debug,shows vmodes available
    51                              <1> nextvmode:
    52 00000082 81EE0200            <1> 	sub si, 2
    53 00000086 81FE[CE83]          <1> 	cmp si, reserved
    54 0000008A 0F82CDFF            <1> 	jb near guiloadagain
    55 0000008E 8B0C                <1> 	mov cx, [si]
    56 00000090 81F9FFFF            <1> 	cmp cx, 0xFFFF
    57 00000094 0F84EAFF            <1> 	je near nextvmode
    58 00000098 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    59 0000009C B8014F              <1> 	mov ax, 04F01h
    60 0000009F BF[AC85]            <1> 	mov di, VBEMODEINFOBLOCK
    61 000000A2 890E[8C01]          <1> 	mov [vesamode], cx
    62 000000A6 CD10                <1> 	int 10h
    63 000000A8 A0[C585]            <1> 	mov al, [bitsperpixel]
    64 000000AB 3C10                <1> 	cmp al, 16
    65 000000AD 75D3                <1> 	jne nextvmode
    66 000000AF 8936[8E01]          <1> 	mov [videomodecache], si
    67 000000B3 80FC00              <1> 	cmp ah, 0
    68 000000B6 0F842200            <1> 	je near setvesamode
    69 000000BA EBC6                <1> 	jmp nextvmode
    70 000000BC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    71 000000C5 20766964656F206D6F- <1>
    72 000000CE 6465204F4B3F28792F- <1>
    73 000000D7 6E290D0A00          <1>
    74                              <1> setvesamode:
    75 000000DC 8B0E[BE85]          <1> 	mov cx, [xresolution]
    76 000000E0 E8D600              <1> 	call decshow
    77 000000E3 B078                <1> 	mov al, "x"
    78 000000E5 E83E01              <1> 	call char
    79 000000E8 8B0E[C085]          <1> 	mov cx, [yresolution]
    80 000000EC E8CA00              <1> 	call decshow
    81 000000EF B040                <1> 	mov al, "@"
    82 000000F1 E83201              <1> 	call char
    83 000000F4 8A0E[C585]          <1> 	mov cl, [bitsperpixel]
    84 000000F8 E8BE00              <1> 	call decshow
    85 000000FB BE[BC00]            <1> 	mov si, isthisvideook
    86 000000FE E8A000              <1> 	call printrm
    87 00000101 B80000              <1> 	mov ax, 0
    88 00000104 CD16                <1> 	int 16h
    89 00000106 8B36[8E01]          <1> 	mov si, [videomodecache]
    90 0000010A 3C79                <1> 	cmp al, "y"
    91 0000010C 0F8572FF            <1> 	jne near nextvmode
    92 00000110 8B16[BE85]          <1> 	mov dx, [xresolution]
    93 00000114 8B0E[C085]          <1> 	mov cx, [yresolution]
    94 00000118 8916[865E]          <1> 	mov [resolutionx], dx
    95 0000011C 890E[845E]          <1> 	mov [resolutiony], cx
    96 00000120 01D2                <1> 	add dx, dx
    97 00000122 8916[885E]          <1> 	mov [resolutionx2], dx
    98 00000126 BA0000              <1> 	mov dx, 0
    99 00000129 B90000              <1> 	mov cx, 0
   100 0000012C B8024F              <1> 	mov ax, 04F02h
   101 0000012F 8B1E[8C01]          <1> 	mov bx, [vesamode]
   102 00000133 CD10                <1> 	int 10h		;;enter VESA mode
   103 00000135 C606[9001]00        <1> 	mov byte [guinodo], 0
   104 0000013A C606[0450]01        <1> 	mov byte [guion], 1
   105 0000013F 6631C0              <1> 	xor eax, eax
   106 00000142 6631DB              <1> 	xor ebx, ebx
   107 00000145 6631C9              <1> 	xor ecx, ecx
   108 00000148 6631D2              <1> 	xor edx, edx
   109 0000014B 6631F6              <1> 	xor esi, esi
   110 0000014E 6631FF              <1> 	xor edi, edi	;;reset registers
   111 00000151 E95E01              <1> 	jmp pmode
   112                              <1> guiload2:
   113 00000154 B9E001              <1> 	mov cx, 480
   114 00000157 BA8002              <1> 	mov dx, 640
   115 0000015A 8916[865E]          <1> 	mov [resolutionx], dx
   116 0000015E 01D2                <1> 	add dx, dx
   117 00000160 8916[885E]          <1> 	mov [resolutionx2], dx
   118 00000164 890E[845E]          <1> 	mov [resolutiony], cx
   119 00000168 B81200              <1> 	mov ax, 12h
   120 0000016B BB0000              <1> 	mov bx, 0
   121 0000016E CD10                <1> 	int 10h
   122 00000170 C606[9001]01        <1> 	mov byte [guinodo], 1
   123 00000175 6631DB              <1> 	xor ebx, ebx
   124 00000178 6631C9              <1> 	xor ecx, ecx
   125 0000017B 6631D2              <1> 	xor edx, edx
   126 0000017E 6631F6              <1> 	xor esi, esi
   127 00000181 6631FF              <1> 	xor edi, edi
   128 00000184 E92B01              <1> 	jmp pmode
   129                              <1> 
   130 00000187 00                  <1> DriveNumber db 0
   131 00000188 00000000            <1> lbaad dd 0
   132                              <1> 	
   133 0000018C 0000                <1> vesamode dw 0
   134 0000018E 0000                <1> videomodecache dw 0
   135                              <1> 
   136 00000190 00                  <1> guinodo db 0
   137                              <1> tests:
   138 00000191 BB0700              <1> 	mov bx, 7
   139 00000194 B40E                <1> 	mov ah, 0Eh
   140 00000196 FEC0                <1> 	inc al
   141 00000198 3C02                <1> 	cmp al, 2
   142 0000019A 7501                <1> 	jne cnttest
   143 0000019C C3                  <1> 	ret
   144                              <1> cnttest:
   145 0000019D CD10                <1> 	int 10h
   146 0000019F EBF0                <1> 	jmp tests
   147                              <1> 
   148                              <1>     printrm:			; 'si' comes in with string address
   149 000001A1 BB0700              <1> 	    mov bx,07		; write to display
   150 000001A4 B40E                <1> 	    mov ah,0Eh		; screen function
   151 000001A6 8A04                <1>     prs2:    mov al,[si]         ; get next character
   152 000001A8 3C00                <1> 	    cmp al,0		; look for terminator 
   153 000001AA 7405                <1>             je finpr2		; zero byte at end of string
   154 000001AC CD10                <1> 	    int 10h		; write character to screen.    
   155 000001AE 46                  <1>      	    inc si	     	; move to next character
   156 000001AF EBF5                <1> 	    jmp prs2		; loop
   157 000001B1 C3                  <1>     finpr2: ret
   158                              <1> 
   159 000001B2 0000000000          <1> dcnm db 0,0,0,0,0
   160 000001B7 0000                <1> dcnmend db 0,0
   161                              <1> 
   162                              <1> 
   163                              <1> decshow:
   164 000001B9 BE[B201]            <1> 	mov si, dcnm
   165                              <1> decclear:
   166 000001BC B030                <1> 	mov al, "0"
   167 000001BE 8804                <1> 	mov [si], al
   168 000001C0 46                  <1> 	inc si
   169 000001C1 81FE[B701]          <1> 	cmp si, dcnmend
   170 000001C5 76F5                <1> 	jbe decclear
   171 000001C7 4E                  <1> 	dec si
   172 000001C8 E81500              <1> 	call convertrm
   173 000001CB BE[B201]            <1> 	mov si, dcnm
   174                              <1> dectst:
   175 000001CE 8A04                <1> 	mov al, [si]
   176 000001D0 46                  <1> 	inc si
   177 000001D1 81FE[B701]          <1> 	cmp si, dcnmend
   178 000001D5 7704                <1> 	ja dectstend
   179 000001D7 3C30                <1> 	cmp al, "0"
   180 000001D9 76F3                <1> 	jbe dectst
   181                              <1> dectstend:
   182 000001DB 4E                  <1> 	dec si
   183 000001DC E8C2FF              <1> 	call printrm
   184 000001DF C3                  <1> 	ret
   185                              <1> 	
   186                              <1> 	
   187                              <1> convertrm:
   188 000001E0 4E                  <1> 	dec si
   189 000001E1 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   190                              <1> cnvrtrm:
   191 000001E3 89DE                <1> 	mov si, bx
   192 000001E5 81EE0300            <1> 	sub si, 3
   193 000001E9 46                  <1> ten3rm:	inc si
   194 000001EA 81F9E803            <1> 	cmp cx, 1000
   195 000001EE 7208                <1> 	jb ten2rm
   196 000001F0 81E9E803            <1> 	sub cx, 1000
   197 000001F4 FE04                <1> 	inc byte [si]
   198 000001F6 EBEB                <1> 	jmp cnvrtrm
   199 000001F8 46                  <1> ten2rm:	inc si
   200 000001F9 81F96400            <1> 	cmp cx, 100
   201 000001FD 7208                <1> 	jb ten1rm
   202 000001FF 81E96400            <1> 	sub cx, 100
   203 00000203 FE04                <1> 	inc byte [si]
   204 00000205 EBDC                <1> 	jmp cnvrtrm
   205 00000207 46                  <1> ten1rm:	inc si
   206 00000208 81F90A00            <1> 	cmp cx, 10
   207 0000020C 7208                <1> 	jb ten0rm
   208 0000020E 81E90A00            <1> 	sub cx, 10
   209 00000212 FE04                <1> 	inc byte [si]
   210 00000214 EBCD                <1> 	jmp cnvrtrm
   211 00000216 46                  <1> ten0rm:	inc si
   212 00000217 81F90100            <1> 	cmp cx, 1
   213 0000021B 7208                <1> 	jb tendnrm
   214 0000021D 81E90100            <1> 	sub cx, 1
   215 00000221 FE04                <1> 	inc byte [si]
   216 00000223 EBBE                <1> 	jmp cnvrtrm
   217                              <1> tendnrm:
   218 00000225 C3                  <1> 	ret
   219                              <1> 
   220                              <1> 
   221                              <1> 
   222                              <1> 
   223                              <1>     char: 		    ;char must be in al
   224 00000226 BB0700              <1>        mov bx, 07
   225 00000229 B40E                <1> 	   mov ah, 0Eh
   226 0000022B CD10                <1> 	   int 10h
   227 0000022D C3                  <1> 	   ret
   228                              <1> 
   229                              <1> 		shutdown:
   230 0000022E 0F20C0              <1> 				mov eax, cr0
   231 00000231 24FE                <1> 				and al,0xFE     ; back to realmode
   232 00000233 0F22C0              <1> 				mov  cr0, eax   ; by toggling bit again
   233 00000236 FB                  <1> 				sti
   234 00000237 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   235 0000023A 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   236 0000023C CD15                <1> 			INT 15h		; shut down
   237 0000023E B80453              <1> 			MOV AX, 5304h
   238 00000241 31DB                <1> 			XOR BX, BX
   239 00000243 CD15                <1> 			INT 15h		; Interrupt 15h originally was
   240 00000245 B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   241 00000248 31DB                <1> 			XOR BX, BX	; but is still in use for
   242 0000024A CD15                <1> 			INT 15h		; diverse things
   243 0000024C B80753              <1> 			MOV AX, 5307h
   244 0000024F BB0100              <1> 			MOV BX, 1
   245 00000252 B90300              <1> 			MOV CX, 3
   246 00000255 CD15                <1> 			INT 15h
   247 00000257 CF                  <1> 			IRET
   248                              <1> 
   249                              <1> 	coldboot:
   250 00000258 0F20C0              <1> 			   mov eax, cr0
   251 0000025B 24FE                <1> 			   and al,0xFE     ; back to realmode
   252 0000025D 0F22C0              <1> 			   mov  cr0, eax   ; by toggling bit again
   253 00000260 FB                  <1> 			   sti
   254 00000261 B84000              <1> 			MOV AX, 0040h
   255 00000264 8EC0                <1> 			MOV ES, AX
   256 00000266 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   257 0000026D EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   258 00000272 CF                  <1> 			IRET
   259                              <1> 
   260                              <1> 		warmboot:
   261 00000273 E81200              <1> 			call realmode
   262 00000276 B84000              <1> 			MOV AX, 0040h
   263 00000279 8EC0                <1> 			MOV ES, AX
   264 0000027B 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   265 00000282 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   266 00000287 CF                  <1> 			IRET
   267                              <1> 
   268                              <1> 
   269                              <1> realmode:
   270 00000288 0F20C0              <1>    mov eax, cr0
   271 0000028B 24FE                <1>    and al,0xFE     ; back to realmode
   272 0000028D 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   273 00000290 FB                  <1>    sti
   274 00000291 66B800000000        <1>    mov eax, 0
   275 00000297 C3                  <1>    ret
   276                              <1>    
   277 00000298 426F6F7420696E746F- <1> bootmsg:	db "Boot into the GUI?(y/n)",10,13,0
   278 000002A1 20746865204755493F- <1>
   279 000002AA 28792F6E290A0D00    <1>
   280                                      %include 'source/pmode.asm'
   281                              <1> [BITS 16]
   282                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   283                              <1> ;	16-bit real mode
   284                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   285                              <1> 
   286                              <1> pmode:
   287 000002B2 BA9200              <1> 	mov dx, 0x92
   288 000002B5 EC                  <1> 	in al, dx	;;A20
   289 000002B6 0C02                <1> 	or al, 2
   290 000002B8 EE                  <1> 	out dx, al
   291 000002B9 66BB00000000        <1> 	mov ebx, 0
   292 000002BF 8CCB                <1> 	mov bx,cs		; EBX=segment
   293 000002C1 66C1E304            <1> 	shl ebx,4		;	<< 4
   294 000002C5 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   295 000002C9 A3[D904]            <1> 	mov [gdt2 + 2],ax
   296 000002CC A3[E104]            <1> 	mov [gdt3 + 2],ax
   297 000002CF 66C1E810            <1> 	shr eax,16
   298 000002D3 A2[DB04]            <1> 	mov [gdt2 + 4],al
   299 000002D6 A2[E304]            <1> 	mov [gdt3 + 4],al
   300 000002D9 8826[DE04]          <1> 	mov [gdt2 + 7],ah
   301 000002DD 8826[E604]          <1> 	mov [gdt3 + 7],ah
   302                              <1> 	
   303 000002E1 66B8[00000000]      <1> 	mov eax, stack
   304 000002E7 A3[E904]            <1> 	mov [gdts + 2],ax
   305 000002EA 66C1E810            <1> 	shr eax,16
   306 000002EE A2[EB04]            <1> 	mov [gdts + 4],al
   307 000002F1 8826[EE04]          <1> 	mov [gdts + 7],ah
   308 000002F5 66A1[4804]          <1> 	mov eax, [newcodecache]
   309 000002F9 A3[F104]            <1> 	mov [gdt4 + 2],ax
   310 000002FC A3[F904]            <1> 	mov [gdt5 + 2],ax
   311 000002FF 66C1E810            <1> 	shr eax,16
   312 00000303 A2[F304]            <1> 	mov [gdt4 + 4],al
   313 00000306 A2[FB04]            <1> 	mov [gdt5 + 4],al
   314 00000309 8826[F604]          <1> 	mov [gdt4 + 7],ah
   315 0000030D 8826[FE04]          <1> 	mov [gdt5 + 7],ah
   316                              <1> 	
   317                              <1> ; fix up gdt and idt
   318 00000311 67668D83[C7040000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   319 00000319 66A3[BD04]          <1> 	mov [gdtr + 2],eax
   320 0000031D 67668D83[FF040000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   321 00000325 66A3[C304]          <1> 	mov [idtr + 2],eax
   322 00000329 FA                  <1> 	cli
   323 0000032A 0F0116[BB04]        <1> 	lgdt [gdtr]
   324 0000032F 0F011E[C104]        <1> 	lidt [idtr]
   325 00000334 66BB00000000        <1> 	mov ebx, 0
   326 0000033A 8CDB                <1> 	mov bx, ds
   327 0000033C 66891E[4404]        <1> 	mov [basecache], ebx
   328 00000341 0F20C0              <1> 	mov eax,cr0
   329 00000344 0C01                <1> 	or al,1
   330 00000346 0F22C0              <1> 	mov cr0,eax
   331 00000349 EA[5203]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   332                              <1> [BITS 32]
   333 0000034E 90                  <1> 	nop
   334 0000034F 90                  <1> 	nop
   335 00000350 90                  <1> 	nop
   336 00000351 90                  <1> 	nop
   337                              <1> do_pm:
   338 00000352 B800000000          <1> 	mov eax, 0
   339 00000357 66B81800            <1> 	mov ax, SYS_DATA_SEL
   340 0000035B 8ED8                <1> 	mov ds,ax
   341 0000035D 8ED0                <1> 	mov ss,ax	;;can switch back to STACK_SEL later
   342 0000035F BC[00100000]        <1> 	mov esp, stackend	;;can switch back to 4096 later
   343 00000364 90                  <1> 	nop
   344 00000365 90                  <1> 	nop
   345 00000366 8EC0                <1> 	mov es, ax
   346 00000368 8EE0                <1> 	mov fs, ax
   347 0000036A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   348 0000036E 8EE8                <1> 	mov gs, ax
   349                              <1> 	
   350                              <1> copykernel:
   351 00000370 648B06              <1> 	mov eax, [fs:esi]
   352 00000373 658906              <1> 	mov [gs:esi], eax
   353 00000376 81C604000000        <1> 	add esi, 4
   354 0000037C 81FE[00000000]      <1> 	cmp esi, bssstart
   355 00000382 72EC                <1> 	jb copykernel
   356 00000384 EA[8B030000]2800    <1> 	jmp NEW_CODE_SEL:done_copy
   357                              <1> 	
   358                              <1> done_copy:
   359 0000038B 66B83000            <1> 	mov ax, NEW_DATA_SEL	;;these MUST be setup AFTER the kernel switches places!!!
   360 0000038F 8ED8                <1> 	mov ds, ax
   361 00000391 8ED0                <1> 	mov ss, ax
   362 00000393 BC[00100000]        <1> 	mov esp, stackend
   363 00000398 90                  <1> 	nop
   364 00000399 90                  <1> 	nop
   365 0000039A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   366 0000039E 8EC0                <1> 	mov es, ax
   367 000003A0 8EE0                <1> 	mov fs, ax
   368 000003A2 66B81800            <1> 	mov ax, SYS_DATA_SEL
   369 000003A6 8EE8                <1> 	mov gs, ax
   370                              <1> 	
   371                              <1> ;Now I will initialise the interrupt controllers and remap irq's
   372 000003A8 B011                <1> 	mov al, 0x11
   373 000003AA E620                <1> 	out 0x20, al
   374 000003AC E6A0                <1> 	out 0xA0, al
   375 000003AE B040                <1> 	mov al, 0x40	;interrupt for master
   376 000003B0 E621                <1> 	out 0x21, al
   377 000003B2 B048                <1> 	mov al, 0x48	;interrupt for slave
   378 000003B4 E6A1                <1> 	out 0xA1, al
   379 000003B6 B004                <1> 	mov al, 4
   380 000003B8 E621                <1> 	out 0x21, al
   381 000003BA B002                <1> 	mov al, 2
   382 000003BC E6A1                <1> 	out 0xA1, al
   383 000003BE B001                <1> 	mov al, 0x1
   384 000003C0 E621                <1> 	out 0x21, al
   385 000003C2 B001                <1> 	mov al, 0x1
   386 000003C4 E6A1                <1> 	out 0xA1, al
   387                              <1> 	;masks are set to zero so as not to mask
   388 000003C6 B000                <1> 	mov al, 0
   389 000003C8 E621                <1> 	out 0x21, al
   390 000003CA B000                <1> 	mov al, 0
   391 000003CC E6A1                <1> 	out 0xA1, al
   392 000003CE B020                <1> 	mov al, 0x20
   393 000003D0 E6A0                <1> 	out 0xA0, al
   394 000003D2 E620                <1> 	out 0x20, al
   395                              <1> 	;And now to initialize the fpu
   396 000003D4 0F20E0              <1> 	mov eax, cr4
   397 000003D7 0D00020000          <1> 	or eax, 0x200
   398 000003DC 0F22E0              <1> 	mov cr4, eax
   399 000003DF B87F0B0000          <1> 	mov eax, 0xB7F
   400 000003E4 50                  <1> 	push eax
   401 000003E5 D92C24              <1> 	fldcw [esp]
   402 000003E8 58                  <1> 	pop eax
   403 000003E9 B800000000          <1> 	mov eax, 0
   404 000003EE B900000000          <1> 	mov ecx, 0
   405                              <1> 
   406 000003F3 A1[48040000]        <1> 	mov eax, [newcodecache]
   407 000003F8 C1E804              <1> 	shr eax, 4
   408 000003FB A3[44040000]        <1> 	mov [basecache], eax
   409                              <1> 	
   410 00000400 89C3                <1> 	mov ebx, eax
   411 00000402 C1E304              <1> 	shl ebx, 4
   412 00000405 8B3D[D4850000]      <1> 	mov edi, [physbaseptr]
   413 0000040B 29DF                <1> 	sub edi, ebx
   414 0000040D 893D[D4850000]      <1> 	mov [physbaseptr], edi
   415                              <1> 	
   416 00000413 BE[00000000]        <1> 	mov esi, bssstart
   417 00000418 B800000000          <1> 	mov eax, 0
   418                              <1> clearkernelbuffers:
   419 0000041D 8906                <1> 	mov [esi], eax
   420 0000041F 81C604000000        <1> 	add esi, 4
   421 00000425 81FE[27652000]      <1> 	cmp esi, bssend
   422 0000042B 72F0                <1> 	jb clearkernelbuffers
   423 0000042D 803D[90010000]01    <1> 	cmp byte [guinodo], 1
   424 00000434 7405                <1> 	je guidonot
   425 00000436 E96F4A0000          <1> 	jmp gui
   426                              <1> guidonot:
   427 0000043B E9402B0000          <1> 	jmp os
   428                              <1> 	
   429 00000440 00000000            <1> user2codepoint dw 0,0
   430 00000444 00000000            <1> basecache dd 0
   431 00000448 00001000            <1> newcodecache dd 0x100000
   432                              <1> 
   433 0000044C 0A0D4B696C6C207468- <1> surekillmsg db 10,13,"Kill this application?",10,13,0
   434 00000455 6973206170706C6963- <1>
   435 0000045E 6174696F6E3F0A0D00  <1>
   436                              <1> 
   437                              <1> timerinterrupt:
   438 00000467 803D[576C0000]01    <1> 	cmp byte [threadson], 1
   439 0000046E 7505                <1> 	jne userinterrupt
   440 00000470 E99C6D0000          <1> 	jmp threadswitch
   441                              <1> userinterrupt:		;checks for escape, if pressed, it quits the program currently running
   442 00000475 FA                  <1> 	cli
   443 00000476 803D[576C0000]00    <1> 	cmp byte [threadson], 0
   444 0000047D 0F842E000000        <1> 	je near handled3
   445 00000483 50                  <1> 	push eax
   446 00000484 E460                <1> 	in al, 60h
   447 00000486 3C01                <1> 	cmp al, 1		;escape
   448 00000488 7405                <1> 	je userint
   449 0000048A E921000000          <1> 	jmp handled2
   450                              <1> userint:
   451 0000048F 56                  <1> 	push esi
   452 00000490 BE[4C040000]        <1> 	mov esi, surekillmsg
   453 00000495 E89A250000          <1> 	call print
   454 0000049A 5E                  <1> 	pop esi
   455 0000049B FB                  <1> 	sti
   456 0000049C E83E250000          <1> 	call getkey
   457 000004A1 3C79                <1> 	cmp al, 'y'
   458 000004A3 750B                <1> 	jne handled2
   459 000004A5 B020                <1> 	mov al, 0x20
   460 000004A7 E620                <1> 	out 0x20, al
   461 000004A9 58                  <1> 	pop eax
   462 000004AA FB                  <1> 	sti
   463 000004AB E9F42B0000          <1> 	jmp nwcmd
   464                              <1> handled2:
   465 000004B0 58                  <1> 	pop eax
   466                              <1> handled3:
   467 000004B1 FB                  <1> 	sti
   468                              <1> handled:
   469 000004B2 50                  <1> 	push eax
   470 000004B3 B020                <1> 	mov al, 0x20
   471 000004B5 E620                <1> 	out 0x20, al
   472 000004B7 58                  <1> 	pop eax
   473 000004B8 CF                  <1> 	iret
   474 000004B9 EBFE                <1> 	jmp $
   475                              <1> [BITS 16]
   476                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   477                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   478                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   479 000004BB 3700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   480 000004BD 00000000            <1> 	dd 0    		; filled with linear, physical address of GDT
   481                              <1> 
   482 000004C1 FF07                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   483 000004C3 00000000            <1> 	dd 0			; filled with linear, physical address of IDT
   484                              <1> 
   485                              <1> 
   486 000004C7 0000                <1> gdt:	dw 0			; limit 15:0
   487 000004C9 0000                <1> 	dw 0			; base 15:0
   488 000004CB 00                  <1> 	db 0			; base 23:16
   489 000004CC 00                  <1> 	db 0			; type
   490 000004CD 00                  <1> 	db 0			; limit 19:16, flags
   491 000004CE 00                  <1> 	db 0			; base 31:24
   492                              <1> ; linear data segment descriptor
   493                              <1> LINEAR_SEL	equ	$-gdt
   494 000004CF FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   495 000004D1 0000                <1> 	dw 0			; base for this one is always 0
   496 000004D3 00                  <1> 	db 0
   497 000004D4 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   498 000004D5 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   499 000004D6 00                  <1> 	db 0
   500                              <1> ; code segment descriptor
   501                              <1> SYS_CODE_SEL	equ	$-gdt
   502 000004D7 FFFF                <1> gdt2:	dw 0xFFFF
   503 000004D9 0000                <1> 	dw 0			; (base gets set above)
   504 000004DB 00                  <1> 	db 0
   505 000004DC 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   506 000004DD CF                  <1> 	db 0xCF
   507 000004DE 00                  <1> 	db 0
   508                              <1> ; data segment descriptor
   509                              <1> SYS_DATA_SEL	equ	$-gdt
   510 000004DF FFFF                <1> gdt3:	dw 0xFFFF
   511 000004E1 0000                <1> 	dw 0			; (base gets set above)
   512 000004E3 00                  <1> 	db 0
   513 000004E4 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   514 000004E5 CF                  <1> 	db 0xCF
   515 000004E6 00                  <1> 	db 0
   516                              <1> STACK_SEL	equ	$-gdt	;;this is no longer used for various reasons
   517 000004E7 0100                <1> gdts:	dw 1
   518 000004E9 0000                <1> 	dw 0			; (base gets set above)
   519 000004EB 00                  <1> 	db 0
   520 000004EC 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   521 000004ED C0                  <1> 	db 0xC0
   522 000004EE 00                  <1> 	db 0
   523                              <1> NEW_CODE_SEL	equ	$-gdt
   524 000004EF FFFF                <1> gdt4:	dw 0xFFFF
   525 000004F1 0000                <1> 	dw 0			; (base gets set above)
   526 000004F3 00                  <1> 	db 0
   527 000004F4 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   528 000004F5 CF                  <1> 	db 0xCF
   529 000004F6 00                  <1> 	db 0
   530                              <1> ; data segment descriptor
   531                              <1> NEW_DATA_SEL	equ	$-gdt
   532 000004F7 FFFF                <1> gdt5:	dw 0xFFFF
   533 000004F9 0000                <1> 	dw 0			; (base gets set above)
   534 000004FB 00                  <1> 	db 0
   535 000004FC 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   536 000004FD CF                  <1> 	db 0xCF
   537 000004FE 00                  <1> 	db 0
   538                              <1> gdt_end:
   539                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   540                              <1> ;	interrupt descriptor table (IDT)
   541                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   542                              <1> ; 32 reserved interrupts:
   543                              <1> idt:	
   544                              <1> %assign i 0
   545                              <1> %rep    33
   546                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   547                              <1> %assign i i+1
   548                              <1> %endrep
   549 000004FF [FF0C]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   550                              <2> %assign i i+1
   551 00000507 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   552                              <2> %assign i i+1
   553 0000050F [190D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   554                              <2> %assign i i+1
   555 00000517 [260D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   556                              <2> %assign i i+1
   557 0000051F [330D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   558                              <2> %assign i i+1
   559 00000527 [400D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   560                              <2> %assign i i+1
   561 0000052F [4D0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   562                              <2> %assign i i+1
   563 00000537 [5A0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   564                              <2> %assign i i+1
   565 0000053F [670D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   566                              <2> %assign i i+1
   567 00000547 [740D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   568                              <2> %assign i i+1
   569 0000054F [810D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   570                              <2> %assign i i+1
   571 00000557 [8E0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   572                              <2> %assign i i+1
   573 0000055F [9B0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   574                              <2> %assign i i+1
   575 00000567 [A80D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   576                              <2> %assign i i+1
   577 0000056F [B50D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   578                              <2> %assign i i+1
   579 00000577 [C20D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   580                              <2> %assign i i+1
   581 0000057F [CF0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   582                              <2> %assign i i+1
   583 00000587 [DC0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   584                              <2> %assign i i+1
   585 0000058F [E90D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   586                              <2> %assign i i+1
   587 00000597 [F60D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   588                              <2> %assign i i+1
   589 0000059F [030E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   590                              <2> %assign i i+1
   591 000005A7 [100E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   592                              <2> %assign i i+1
   593 000005AF [1D0E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   594                              <2> %assign i i+1
   595 000005B7 [2A0E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   596                              <2> %assign i i+1
   597 000005BF [370E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   598                              <2> %assign i i+1
   599 000005C7 [440E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   600                              <2> %assign i i+1
   601 000005CF [510E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   602                              <2> %assign i i+1
   603 000005D7 [5E0E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   604                              <2> %assign i i+1
   605 000005DF [6B0E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   606                              <2> %assign i i+1
   607 000005E7 [780E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   608                              <2> %assign i i+1
   609 000005EF [850E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   610                              <2> %assign i i+1
   611 000005F7 [920E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   612                              <2> %assign i i+1
   613 000005FF [9F0E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   614                              <2> %assign i i+1
   615                              <1> 		;dw handled,NEW_CODE_SEL,0x8E00,0
   616 00000607 [A62E]2800008E0000  <1> 		dw int21h,NEW_CODE_SEL,0x8E00,0
   617                              <1> %assign i 0x22
   618                              <1> %rep 14
   619                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   620                              <1> 		;dw handled,NEW_CODE_SEL,0x8E00,0
   621                              <1> %assign i +1
   622                              <1> %endrep
   623 0000060F [B90E]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   624                              <2> 
   625                              <2> %assign i +1
   626 00000617 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   627                              <2> 
   628                              <2> %assign i +1
   629 0000061F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   630                              <2> 
   631                              <2> %assign i +1
   632 00000627 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   633                              <2> 
   634                              <2> %assign i +1
   635 0000062F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   636                              <2> 
   637                              <2> %assign i +1
   638 00000637 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   639                              <2> 
   640                              <2> %assign i +1
   641 0000063F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   642                              <2> 
   643                              <2> %assign i +1
   644 00000647 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   645                              <2> 
   646                              <2> %assign i +1
   647 0000064F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   648                              <2> 
   649                              <2> %assign i +1
   650 00000657 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   651                              <2> 
   652                              <2> %assign i +1
   653 0000065F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   654                              <2> 
   655                              <2> %assign i +1
   656 00000667 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   657                              <2> 
   658                              <2> %assign i +1
   659 0000066F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   660                              <2> 
   661                              <2> %assign i +1
   662 00000677 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   663                              <2> 
   664                              <2> %assign i +1
   665                              <1> ;INT 30h for os use and 3rd party use:
   666 0000067F [2A27]2800008E0000  <1> 		dw newints,NEW_CODE_SEL,0x8E00,0
   667                              <1> ;here are all the irq's
   668                              <1> %assign i 0x31
   669                              <1> %rep 15
   670                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   671                              <1> 		;dw handled,NEW_CODE_SEL,0x8E00,0
   672                              <1> %assign i +1
   673                              <1> %endrep
   674 00000687 [7C0F]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   675                              <2> 
   676                              <2> %assign i +1
   677 0000068F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   678                              <2> 
   679                              <2> %assign i +1
   680 00000697 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   681                              <2> 
   682                              <2> %assign i +1
   683 0000069F [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   684                              <2> 
   685                              <2> %assign i +1
   686 000006A7 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   687                              <2> 
   688                              <2> %assign i +1
   689 000006AF [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   690                              <2> 
   691                              <2> %assign i +1
   692 000006B7 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   693                              <2> 
   694                              <2> %assign i +1
   695 000006BF [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   696                              <2> 
   697                              <2> %assign i +1
   698 000006C7 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   699                              <2> 
   700                              <2> %assign i +1
   701 000006CF [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   702                              <2> 
   703                              <2> %assign i +1
   704 000006D7 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   705                              <2> 
   706                              <2> %assign i +1
   707 000006DF [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   708                              <2> 
   709                              <2> %assign i +1
   710 000006E7 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   711                              <2> 
   712                              <2> %assign i +1
   713 000006EF [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   714                              <2> 
   715                              <2> %assign i +1
   716 000006F7 [0C0D]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   717                              <2> 
   718                              <2> %assign i +1
   719 000006FF [6704]2800008E0000  <1> 		dw timerinterrupt,NEW_CODE_SEL,0x8E00,0
   720 00000707 [7504]2800008E0000  <1> 		dw userinterrupt,NEW_CODE_SEL,0x8E00,0
   721                              <1> ;%assign i 0x42
   722                              <1> %rep 14
   723                              <1> 		;dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   724                              <1> 		dw handled,NEW_CODE_SEL,0x8E00,0
   725                              <1> ;%assign i +1
   726                              <1> %endrep
   727                              <2> 
   728 0000070F [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   729                              <2> 
   730                              <2> 
   731 00000717 [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   732                              <2> 
   733                              <2> 
   734 0000071F [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   735                              <2> 
   736                              <2> 
   737 00000727 [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   738                              <2> 
   739                              <2> 
   740 0000072F [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   741                              <2> 
   742                              <2> 
   743 00000737 [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   744                              <2> 
   745                              <2> 
   746 0000073F [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   747                              <2> 
   748                              <2> 
   749 00000747 [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   750                              <2> 
   751                              <2> 
   752 0000074F [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   753                              <2> 
   754                              <2> 
   755 00000757 [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   756                              <2> 
   757                              <2> 
   758 0000075F [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   759                              <2> 
   760                              <2> 
   761 00000767 [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   762                              <2> 
   763                              <2> 
   764 0000076F [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   765                              <2> 
   766                              <2> 
   767 00000777 [B204]2800008E0000  <2>  dw handled,NEW_CODE_SEL,0x8E00,0
   768                              <2> 
   769                              <1> ;This brings me up to something
   770                              <1> %assign i 0x50
   771                              <1> %rep 176
   772                              <1> 		dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   773                              <1> 		;dw handled,NEW_CODE_SEL,0x8E00,0
   774                              <1> %assign i +1
   775                              <1> %endrep
   776 0000077F [0F11]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   777                              <2> 
   778                              <2> %assign i +1
   779 00000787 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   780                              <2> 
   781                              <2> %assign i +1
   782 0000078F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   783                              <2> 
   784                              <2> %assign i +1
   785 00000797 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   786                              <2> 
   787                              <2> %assign i +1
   788 0000079F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   789                              <2> 
   790                              <2> %assign i +1
   791 000007A7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   792                              <2> 
   793                              <2> %assign i +1
   794 000007AF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   795                              <2> 
   796                              <2> %assign i +1
   797 000007B7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   798                              <2> 
   799                              <2> %assign i +1
   800 000007BF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   801                              <2> 
   802                              <2> %assign i +1
   803 000007C7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   804                              <2> 
   805                              <2> %assign i +1
   806 000007CF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   807                              <2> 
   808                              <2> %assign i +1
   809 000007D7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   810                              <2> 
   811                              <2> %assign i +1
   812 000007DF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   813                              <2> 
   814                              <2> %assign i +1
   815 000007E7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   816                              <2> 
   817                              <2> %assign i +1
   818 000007EF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   819                              <2> 
   820                              <2> %assign i +1
   821 000007F7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   822                              <2> 
   823                              <2> %assign i +1
   824 000007FF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   825                              <2> 
   826                              <2> %assign i +1
   827 00000807 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   828                              <2> 
   829                              <2> %assign i +1
   830 0000080F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   831                              <2> 
   832                              <2> %assign i +1
   833 00000817 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   834                              <2> 
   835                              <2> %assign i +1
   836 0000081F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   837                              <2> 
   838                              <2> %assign i +1
   839 00000827 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   840                              <2> 
   841                              <2> %assign i +1
   842 0000082F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   843                              <2> 
   844                              <2> %assign i +1
   845 00000837 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   846                              <2> 
   847                              <2> %assign i +1
   848 0000083F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   849                              <2> 
   850                              <2> %assign i +1
   851 00000847 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   852                              <2> 
   853                              <2> %assign i +1
   854 0000084F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   855                              <2> 
   856                              <2> %assign i +1
   857 00000857 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   858                              <2> 
   859                              <2> %assign i +1
   860 0000085F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   861                              <2> 
   862                              <2> %assign i +1
   863 00000867 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   864                              <2> 
   865                              <2> %assign i +1
   866 0000086F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   867                              <2> 
   868                              <2> %assign i +1
   869 00000877 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   870                              <2> 
   871                              <2> %assign i +1
   872 0000087F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   873                              <2> 
   874                              <2> %assign i +1
   875 00000887 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   876                              <2> 
   877                              <2> %assign i +1
   878 0000088F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   879                              <2> 
   880                              <2> %assign i +1
   881 00000897 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   882                              <2> 
   883                              <2> %assign i +1
   884 0000089F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   885                              <2> 
   886                              <2> %assign i +1
   887 000008A7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   888                              <2> 
   889                              <2> %assign i +1
   890 000008AF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   891                              <2> 
   892                              <2> %assign i +1
   893 000008B7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   894                              <2> 
   895                              <2> %assign i +1
   896 000008BF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   897                              <2> 
   898                              <2> %assign i +1
   899 000008C7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   900                              <2> 
   901                              <2> %assign i +1
   902 000008CF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   903                              <2> 
   904                              <2> %assign i +1
   905 000008D7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   906                              <2> 
   907                              <2> %assign i +1
   908 000008DF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   909                              <2> 
   910                              <2> %assign i +1
   911 000008E7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   912                              <2> 
   913                              <2> %assign i +1
   914 000008EF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   915                              <2> 
   916                              <2> %assign i +1
   917 000008F7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   918                              <2> 
   919                              <2> %assign i +1
   920 000008FF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   921                              <2> 
   922                              <2> %assign i +1
   923 00000907 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   924                              <2> 
   925                              <2> %assign i +1
   926 0000090F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   927                              <2> 
   928                              <2> %assign i +1
   929 00000917 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   930                              <2> 
   931                              <2> %assign i +1
   932 0000091F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   933                              <2> 
   934                              <2> %assign i +1
   935 00000927 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   936                              <2> 
   937                              <2> %assign i +1
   938 0000092F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   939                              <2> 
   940                              <2> %assign i +1
   941 00000937 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   942                              <2> 
   943                              <2> %assign i +1
   944 0000093F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   945                              <2> 
   946                              <2> %assign i +1
   947 00000947 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   948                              <2> 
   949                              <2> %assign i +1
   950 0000094F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   951                              <2> 
   952                              <2> %assign i +1
   953 00000957 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   954                              <2> 
   955                              <2> %assign i +1
   956 0000095F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   957                              <2> 
   958                              <2> %assign i +1
   959 00000967 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   960                              <2> 
   961                              <2> %assign i +1
   962 0000096F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   963                              <2> 
   964                              <2> %assign i +1
   965 00000977 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   966                              <2> 
   967                              <2> %assign i +1
   968 0000097F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   969                              <2> 
   970                              <2> %assign i +1
   971 00000987 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   972                              <2> 
   973                              <2> %assign i +1
   974 0000098F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   975                              <2> 
   976                              <2> %assign i +1
   977 00000997 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   978                              <2> 
   979                              <2> %assign i +1
   980 0000099F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   981                              <2> 
   982                              <2> %assign i +1
   983 000009A7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   984                              <2> 
   985                              <2> %assign i +1
   986 000009AF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   987                              <2> 
   988                              <2> %assign i +1
   989 000009B7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   990                              <2> 
   991                              <2> %assign i +1
   992 000009BF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   993                              <2> 
   994                              <2> %assign i +1
   995 000009C7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   996                              <2> 
   997                              <2> %assign i +1
   998 000009CF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
   999                              <2> 
  1000                              <2> %assign i +1
  1001 000009D7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1002                              <2> 
  1003                              <2> %assign i +1
  1004 000009DF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1005                              <2> 
  1006                              <2> %assign i +1
  1007 000009E7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1008                              <2> 
  1009                              <2> %assign i +1
  1010 000009EF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1011                              <2> 
  1012                              <2> %assign i +1
  1013 000009F7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1014                              <2> 
  1015                              <2> %assign i +1
  1016 000009FF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1017                              <2> 
  1018                              <2> %assign i +1
  1019 00000A07 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1020                              <2> 
  1021                              <2> %assign i +1
  1022 00000A0F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1023                              <2> 
  1024                              <2> %assign i +1
  1025 00000A17 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1026                              <2> 
  1027                              <2> %assign i +1
  1028 00000A1F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1029                              <2> 
  1030                              <2> %assign i +1
  1031 00000A27 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1032                              <2> 
  1033                              <2> %assign i +1
  1034 00000A2F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1035                              <2> 
  1036                              <2> %assign i +1
  1037 00000A37 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1038                              <2> 
  1039                              <2> %assign i +1
  1040 00000A3F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1041                              <2> 
  1042                              <2> %assign i +1
  1043 00000A47 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1044                              <2> 
  1045                              <2> %assign i +1
  1046 00000A4F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1047                              <2> 
  1048                              <2> %assign i +1
  1049 00000A57 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1050                              <2> 
  1051                              <2> %assign i +1
  1052 00000A5F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1053                              <2> 
  1054                              <2> %assign i +1
  1055 00000A67 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1056                              <2> 
  1057                              <2> %assign i +1
  1058 00000A6F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1059                              <2> 
  1060                              <2> %assign i +1
  1061 00000A77 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1062                              <2> 
  1063                              <2> %assign i +1
  1064 00000A7F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1065                              <2> 
  1066                              <2> %assign i +1
  1067 00000A87 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1068                              <2> 
  1069                              <2> %assign i +1
  1070 00000A8F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1071                              <2> 
  1072                              <2> %assign i +1
  1073 00000A97 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1074                              <2> 
  1075                              <2> %assign i +1
  1076 00000A9F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1077                              <2> 
  1078                              <2> %assign i +1
  1079 00000AA7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1080                              <2> 
  1081                              <2> %assign i +1
  1082 00000AAF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1083                              <2> 
  1084                              <2> %assign i +1
  1085 00000AB7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1086                              <2> 
  1087                              <2> %assign i +1
  1088 00000ABF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1089                              <2> 
  1090                              <2> %assign i +1
  1091 00000AC7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1092                              <2> 
  1093                              <2> %assign i +1
  1094 00000ACF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1095                              <2> 
  1096                              <2> %assign i +1
  1097 00000AD7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1098                              <2> 
  1099                              <2> %assign i +1
  1100 00000ADF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1101                              <2> 
  1102                              <2> %assign i +1
  1103 00000AE7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1104                              <2> 
  1105                              <2> %assign i +1
  1106 00000AEF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1107                              <2> 
  1108                              <2> %assign i +1
  1109 00000AF7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1110                              <2> 
  1111                              <2> %assign i +1
  1112 00000AFF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1113                              <2> 
  1114                              <2> %assign i +1
  1115 00000B07 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1116                              <2> 
  1117                              <2> %assign i +1
  1118 00000B0F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1119                              <2> 
  1120                              <2> %assign i +1
  1121 00000B17 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1122                              <2> 
  1123                              <2> %assign i +1
  1124 00000B1F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1125                              <2> 
  1126                              <2> %assign i +1
  1127 00000B27 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1128                              <2> 
  1129                              <2> %assign i +1
  1130 00000B2F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1131                              <2> 
  1132                              <2> %assign i +1
  1133 00000B37 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1134                              <2> 
  1135                              <2> %assign i +1
  1136 00000B3F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1137                              <2> 
  1138                              <2> %assign i +1
  1139 00000B47 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1140                              <2> 
  1141                              <2> %assign i +1
  1142 00000B4F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1143                              <2> 
  1144                              <2> %assign i +1
  1145 00000B57 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1146                              <2> 
  1147                              <2> %assign i +1
  1148 00000B5F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1149                              <2> 
  1150                              <2> %assign i +1
  1151 00000B67 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1152                              <2> 
  1153                              <2> %assign i +1
  1154 00000B6F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1155                              <2> 
  1156                              <2> %assign i +1
  1157 00000B77 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1158                              <2> 
  1159                              <2> %assign i +1
  1160 00000B7F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1161                              <2> 
  1162                              <2> %assign i +1
  1163 00000B87 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1164                              <2> 
  1165                              <2> %assign i +1
  1166 00000B8F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1167                              <2> 
  1168                              <2> %assign i +1
  1169 00000B97 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1170                              <2> 
  1171                              <2> %assign i +1
  1172 00000B9F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1173                              <2> 
  1174                              <2> %assign i +1
  1175 00000BA7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1176                              <2> 
  1177                              <2> %assign i +1
  1178 00000BAF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1179                              <2> 
  1180                              <2> %assign i +1
  1181 00000BB7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1182                              <2> 
  1183                              <2> %assign i +1
  1184 00000BBF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1185                              <2> 
  1186                              <2> %assign i +1
  1187 00000BC7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1188                              <2> 
  1189                              <2> %assign i +1
  1190 00000BCF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1191                              <2> 
  1192                              <2> %assign i +1
  1193 00000BD7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1194                              <2> 
  1195                              <2> %assign i +1
  1196 00000BDF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1197                              <2> 
  1198                              <2> %assign i +1
  1199 00000BE7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1200                              <2> 
  1201                              <2> %assign i +1
  1202 00000BEF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1203                              <2> 
  1204                              <2> %assign i +1
  1205 00000BF7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1206                              <2> 
  1207                              <2> %assign i +1
  1208 00000BFF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1209                              <2> 
  1210                              <2> %assign i +1
  1211 00000C07 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1212                              <2> 
  1213                              <2> %assign i +1
  1214 00000C0F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1215                              <2> 
  1216                              <2> %assign i +1
  1217 00000C17 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1218                              <2> 
  1219                              <2> %assign i +1
  1220 00000C1F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1221                              <2> 
  1222                              <2> %assign i +1
  1223 00000C27 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1224                              <2> 
  1225                              <2> %assign i +1
  1226 00000C2F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1227                              <2> 
  1228                              <2> %assign i +1
  1229 00000C37 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1230                              <2> 
  1231                              <2> %assign i +1
  1232 00000C3F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1233                              <2> 
  1234                              <2> %assign i +1
  1235 00000C47 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1236                              <2> 
  1237                              <2> %assign i +1
  1238 00000C4F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1239                              <2> 
  1240                              <2> %assign i +1
  1241 00000C57 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1242                              <2> 
  1243                              <2> %assign i +1
  1244 00000C5F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1245                              <2> 
  1246                              <2> %assign i +1
  1247 00000C67 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1248                              <2> 
  1249                              <2> %assign i +1
  1250 00000C6F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1251                              <2> 
  1252                              <2> %assign i +1
  1253 00000C77 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1254                              <2> 
  1255                              <2> %assign i +1
  1256 00000C7F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1257                              <2> 
  1258                              <2> %assign i +1
  1259 00000C87 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1260                              <2> 
  1261                              <2> %assign i +1
  1262 00000C8F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1263                              <2> 
  1264                              <2> %assign i +1
  1265 00000C97 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1266                              <2> 
  1267                              <2> %assign i +1
  1268 00000C9F [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1269                              <2> 
  1270                              <2> %assign i +1
  1271 00000CA7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1272                              <2> 
  1273                              <2> %assign i +1
  1274 00000CAF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1275                              <2> 
  1276                              <2> %assign i +1
  1277 00000CB7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1278                              <2> 
  1279                              <2> %assign i +1
  1280 00000CBF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1281                              <2> 
  1282                              <2> %assign i +1
  1283 00000CC7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1284                              <2> 
  1285                              <2> %assign i +1
  1286 00000CCF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1287                              <2> 
  1288                              <2> %assign i +1
  1289 00000CD7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1290                              <2> 
  1291                              <2> %assign i +1
  1292 00000CDF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1293                              <2> 
  1294                              <2> %assign i +1
  1295 00000CE7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1296                              <2> 
  1297                              <2> %assign i +1
  1298 00000CEF [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1299                              <2> 
  1300                              <2> %assign i +1
  1301 00000CF7 [0C0D]2800008E0000  <2>  dw unhand + i*13, NEW_CODE_SEL,0x8E00,0
  1302                              <2> 
  1303                              <2> %assign i +1
  1304                              <1> idt_end:
  1305                              <1> [BITS 32]
  1306                                  [BITS 32]
  1307                                  	%include 'source/exception.asm'
  1308                              <1> 
  1309                              <1> unhand:	
  1310                              <1> 	%assign i 0
  1311                              <1> 	%rep 256
  1312                              <1> 	cli
  1313                              <1> 	mov byte [intprob], i
  1314                              <1> 	jmp unhand2
  1315                              <1> 	%assign i i+1
  1316                              <1> 	%endrep
  1317 00000CFF FA                  <2>  cli
  1318 00000D00 C605[051D0000]00    <2>  mov byte [intprob], i
  1319 00000D07 E9F30C0000          <2>  jmp unhand2
  1320                              <2>  %assign i i+1
  1321 00000D0C FA                  <2>  cli
  1322 00000D0D C605[051D0000]01    <2>  mov byte [intprob], i
  1323 00000D14 E9E60C0000          <2>  jmp unhand2
  1324                              <2>  %assign i i+1
  1325 00000D19 FA                  <2>  cli
  1326 00000D1A C605[051D0000]02    <2>  mov byte [intprob], i
  1327 00000D21 E9D90C0000          <2>  jmp unhand2
  1328                              <2>  %assign i i+1
  1329 00000D26 FA                  <2>  cli
  1330 00000D27 C605[051D0000]03    <2>  mov byte [intprob], i
  1331 00000D2E E9CC0C0000          <2>  jmp unhand2
  1332                              <2>  %assign i i+1
  1333 00000D33 FA                  <2>  cli
  1334 00000D34 C605[051D0000]04    <2>  mov byte [intprob], i
  1335 00000D3B E9BF0C0000          <2>  jmp unhand2
  1336                              <2>  %assign i i+1
  1337 00000D40 FA                  <2>  cli
  1338 00000D41 C605[051D0000]05    <2>  mov byte [intprob], i
  1339 00000D48 E9B20C0000          <2>  jmp unhand2
  1340                              <2>  %assign i i+1
  1341 00000D4D FA                  <2>  cli
  1342 00000D4E C605[051D0000]06    <2>  mov byte [intprob], i
  1343 00000D55 E9A50C0000          <2>  jmp unhand2
  1344                              <2>  %assign i i+1
  1345 00000D5A FA                  <2>  cli
  1346 00000D5B C605[051D0000]07    <2>  mov byte [intprob], i
  1347 00000D62 E9980C0000          <2>  jmp unhand2
  1348                              <2>  %assign i i+1
  1349 00000D67 FA                  <2>  cli
  1350 00000D68 C605[051D0000]08    <2>  mov byte [intprob], i
  1351 00000D6F E98B0C0000          <2>  jmp unhand2
  1352                              <2>  %assign i i+1
  1353 00000D74 FA                  <2>  cli
  1354 00000D75 C605[051D0000]09    <2>  mov byte [intprob], i
  1355 00000D7C E97E0C0000          <2>  jmp unhand2
  1356                              <2>  %assign i i+1
  1357 00000D81 FA                  <2>  cli
  1358 00000D82 C605[051D0000]0A    <2>  mov byte [intprob], i
  1359 00000D89 E9710C0000          <2>  jmp unhand2
  1360                              <2>  %assign i i+1
  1361 00000D8E FA                  <2>  cli
  1362 00000D8F C605[051D0000]0B    <2>  mov byte [intprob], i
  1363 00000D96 E9640C0000          <2>  jmp unhand2
  1364                              <2>  %assign i i+1
  1365 00000D9B FA                  <2>  cli
  1366 00000D9C C605[051D0000]0C    <2>  mov byte [intprob], i
  1367 00000DA3 E9570C0000          <2>  jmp unhand2
  1368                              <2>  %assign i i+1
  1369 00000DA8 FA                  <2>  cli
  1370 00000DA9 C605[051D0000]0D    <2>  mov byte [intprob], i
  1371 00000DB0 E94A0C0000          <2>  jmp unhand2
  1372                              <2>  %assign i i+1
  1373 00000DB5 FA                  <2>  cli
  1374 00000DB6 C605[051D0000]0E    <2>  mov byte [intprob], i
  1375 00000DBD E93D0C0000          <2>  jmp unhand2
  1376                              <2>  %assign i i+1
  1377 00000DC2 FA                  <2>  cli
  1378 00000DC3 C605[051D0000]0F    <2>  mov byte [intprob], i
  1379 00000DCA E9300C0000          <2>  jmp unhand2
  1380                              <2>  %assign i i+1
  1381 00000DCF FA                  <2>  cli
  1382 00000DD0 C605[051D0000]10    <2>  mov byte [intprob], i
  1383 00000DD7 E9230C0000          <2>  jmp unhand2
  1384                              <2>  %assign i i+1
  1385 00000DDC FA                  <2>  cli
  1386 00000DDD C605[051D0000]11    <2>  mov byte [intprob], i
  1387 00000DE4 E9160C0000          <2>  jmp unhand2
  1388                              <2>  %assign i i+1
  1389 00000DE9 FA                  <2>  cli
  1390 00000DEA C605[051D0000]12    <2>  mov byte [intprob], i
  1391 00000DF1 E9090C0000          <2>  jmp unhand2
  1392                              <2>  %assign i i+1
  1393 00000DF6 FA                  <2>  cli
  1394 00000DF7 C605[051D0000]13    <2>  mov byte [intprob], i
  1395 00000DFE E9FC0B0000          <2>  jmp unhand2
  1396                              <2>  %assign i i+1
  1397 00000E03 FA                  <2>  cli
  1398 00000E04 C605[051D0000]14    <2>  mov byte [intprob], i
  1399 00000E0B E9EF0B0000          <2>  jmp unhand2
  1400                              <2>  %assign i i+1
  1401 00000E10 FA                  <2>  cli
  1402 00000E11 C605[051D0000]15    <2>  mov byte [intprob], i
  1403 00000E18 E9E20B0000          <2>  jmp unhand2
  1404                              <2>  %assign i i+1
  1405 00000E1D FA                  <2>  cli
  1406 00000E1E C605[051D0000]16    <2>  mov byte [intprob], i
  1407 00000E25 E9D50B0000          <2>  jmp unhand2
  1408                              <2>  %assign i i+1
  1409 00000E2A FA                  <2>  cli
  1410 00000E2B C605[051D0000]17    <2>  mov byte [intprob], i
  1411 00000E32 E9C80B0000          <2>  jmp unhand2
  1412                              <2>  %assign i i+1
  1413 00000E37 FA                  <2>  cli
  1414 00000E38 C605[051D0000]18    <2>  mov byte [intprob], i
  1415 00000E3F E9BB0B0000          <2>  jmp unhand2
  1416                              <2>  %assign i i+1
  1417 00000E44 FA                  <2>  cli
  1418 00000E45 C605[051D0000]19    <2>  mov byte [intprob], i
  1419 00000E4C E9AE0B0000          <2>  jmp unhand2
  1420                              <2>  %assign i i+1
  1421 00000E51 FA                  <2>  cli
  1422 00000E52 C605[051D0000]1A    <2>  mov byte [intprob], i
  1423 00000E59 E9A10B0000          <2>  jmp unhand2
  1424                              <2>  %assign i i+1
  1425 00000E5E FA                  <2>  cli
  1426 00000E5F C605[051D0000]1B    <2>  mov byte [intprob], i
  1427 00000E66 E9940B0000          <2>  jmp unhand2
  1428                              <2>  %assign i i+1
  1429 00000E6B FA                  <2>  cli
  1430 00000E6C C605[051D0000]1C    <2>  mov byte [intprob], i
  1431 00000E73 E9870B0000          <2>  jmp unhand2
  1432                              <2>  %assign i i+1
  1433 00000E78 FA                  <2>  cli
  1434 00000E79 C605[051D0000]1D    <2>  mov byte [intprob], i
  1435 00000E80 E97A0B0000          <2>  jmp unhand2
  1436                              <2>  %assign i i+1
  1437 00000E85 FA                  <2>  cli
  1438 00000E86 C605[051D0000]1E    <2>  mov byte [intprob], i
  1439 00000E8D E96D0B0000          <2>  jmp unhand2
  1440                              <2>  %assign i i+1
  1441 00000E92 FA                  <2>  cli
  1442 00000E93 C605[051D0000]1F    <2>  mov byte [intprob], i
  1443 00000E9A E9600B0000          <2>  jmp unhand2
  1444                              <2>  %assign i i+1
  1445 00000E9F FA                  <2>  cli
  1446 00000EA0 C605[051D0000]20    <2>  mov byte [intprob], i
  1447 00000EA7 E9530B0000          <2>  jmp unhand2
  1448                              <2>  %assign i i+1
  1449 00000EAC FA                  <2>  cli
  1450 00000EAD C605[051D0000]21    <2>  mov byte [intprob], i
  1451 00000EB4 E9460B0000          <2>  jmp unhand2
  1452                              <2>  %assign i i+1
  1453 00000EB9 FA                  <2>  cli
  1454 00000EBA C605[051D0000]22    <2>  mov byte [intprob], i
  1455 00000EC1 E9390B0000          <2>  jmp unhand2
  1456                              <2>  %assign i i+1
  1457 00000EC6 FA                  <2>  cli
  1458 00000EC7 C605[051D0000]23    <2>  mov byte [intprob], i
  1459 00000ECE E92C0B0000          <2>  jmp unhand2
  1460                              <2>  %assign i i+1
  1461 00000ED3 FA                  <2>  cli
  1462 00000ED4 C605[051D0000]24    <2>  mov byte [intprob], i
  1463 00000EDB E91F0B0000          <2>  jmp unhand2
  1464                              <2>  %assign i i+1
  1465 00000EE0 FA                  <2>  cli
  1466 00000EE1 C605[051D0000]25    <2>  mov byte [intprob], i
  1467 00000EE8 E9120B0000          <2>  jmp unhand2
  1468                              <2>  %assign i i+1
  1469 00000EED FA                  <2>  cli
  1470 00000EEE C605[051D0000]26    <2>  mov byte [intprob], i
  1471 00000EF5 E9050B0000          <2>  jmp unhand2
  1472                              <2>  %assign i i+1
  1473 00000EFA FA                  <2>  cli
  1474 00000EFB C605[051D0000]27    <2>  mov byte [intprob], i
  1475 00000F02 E9F80A0000          <2>  jmp unhand2
  1476                              <2>  %assign i i+1
  1477 00000F07 FA                  <2>  cli
  1478 00000F08 C605[051D0000]28    <2>  mov byte [intprob], i
  1479 00000F0F E9EB0A0000          <2>  jmp unhand2
  1480                              <2>  %assign i i+1
  1481 00000F14 FA                  <2>  cli
  1482 00000F15 C605[051D0000]29    <2>  mov byte [intprob], i
  1483 00000F1C E9DE0A0000          <2>  jmp unhand2
  1484                              <2>  %assign i i+1
  1485 00000F21 FA                  <2>  cli
  1486 00000F22 C605[051D0000]2A    <2>  mov byte [intprob], i
  1487 00000F29 E9D10A0000          <2>  jmp unhand2
  1488                              <2>  %assign i i+1
  1489 00000F2E FA                  <2>  cli
  1490 00000F2F C605[051D0000]2B    <2>  mov byte [intprob], i
  1491 00000F36 E9C40A0000          <2>  jmp unhand2
  1492                              <2>  %assign i i+1
  1493 00000F3B FA                  <2>  cli
  1494 00000F3C C605[051D0000]2C    <2>  mov byte [intprob], i
  1495 00000F43 E9B70A0000          <2>  jmp unhand2
  1496                              <2>  %assign i i+1
  1497 00000F48 FA                  <2>  cli
  1498 00000F49 C605[051D0000]2D    <2>  mov byte [intprob], i
  1499 00000F50 E9AA0A0000          <2>  jmp unhand2
  1500                              <2>  %assign i i+1
  1501 00000F55 FA                  <2>  cli
  1502 00000F56 C605[051D0000]2E    <2>  mov byte [intprob], i
  1503 00000F5D E99D0A0000          <2>  jmp unhand2
  1504                              <2>  %assign i i+1
  1505 00000F62 FA                  <2>  cli
  1506 00000F63 C605[051D0000]2F    <2>  mov byte [intprob], i
  1507 00000F6A E9900A0000          <2>  jmp unhand2
  1508                              <2>  %assign i i+1
  1509 00000F6F FA                  <2>  cli
  1510 00000F70 C605[051D0000]30    <2>  mov byte [intprob], i
  1511 00000F77 E9830A0000          <2>  jmp unhand2
  1512                              <2>  %assign i i+1
  1513 00000F7C FA                  <2>  cli
  1514 00000F7D C605[051D0000]31    <2>  mov byte [intprob], i
  1515 00000F84 E9760A0000          <2>  jmp unhand2
  1516                              <2>  %assign i i+1
  1517 00000F89 FA                  <2>  cli
  1518 00000F8A C605[051D0000]32    <2>  mov byte [intprob], i
  1519 00000F91 E9690A0000          <2>  jmp unhand2
  1520                              <2>  %assign i i+1
  1521 00000F96 FA                  <2>  cli
  1522 00000F97 C605[051D0000]33    <2>  mov byte [intprob], i
  1523 00000F9E E95C0A0000          <2>  jmp unhand2
  1524                              <2>  %assign i i+1
  1525 00000FA3 FA                  <2>  cli
  1526 00000FA4 C605[051D0000]34    <2>  mov byte [intprob], i
  1527 00000FAB E94F0A0000          <2>  jmp unhand2
  1528                              <2>  %assign i i+1
  1529 00000FB0 FA                  <2>  cli
  1530 00000FB1 C605[051D0000]35    <2>  mov byte [intprob], i
  1531 00000FB8 E9420A0000          <2>  jmp unhand2
  1532                              <2>  %assign i i+1
  1533 00000FBD FA                  <2>  cli
  1534 00000FBE C605[051D0000]36    <2>  mov byte [intprob], i
  1535 00000FC5 E9350A0000          <2>  jmp unhand2
  1536                              <2>  %assign i i+1
  1537 00000FCA FA                  <2>  cli
  1538 00000FCB C605[051D0000]37    <2>  mov byte [intprob], i
  1539 00000FD2 E9280A0000          <2>  jmp unhand2
  1540                              <2>  %assign i i+1
  1541 00000FD7 FA                  <2>  cli
  1542 00000FD8 C605[051D0000]38    <2>  mov byte [intprob], i
  1543 00000FDF E91B0A0000          <2>  jmp unhand2
  1544                              <2>  %assign i i+1
  1545 00000FE4 FA                  <2>  cli
  1546 00000FE5 C605[051D0000]39    <2>  mov byte [intprob], i
  1547 00000FEC E90E0A0000          <2>  jmp unhand2
  1548                              <2>  %assign i i+1
  1549 00000FF1 FA                  <2>  cli
  1550 00000FF2 C605[051D0000]3A    <2>  mov byte [intprob], i
  1551 00000FF9 E9010A0000          <2>  jmp unhand2
  1552                              <2>  %assign i i+1
  1553 00000FFE FA                  <2>  cli
  1554 00000FFF C605[051D0000]3B    <2>  mov byte [intprob], i
  1555 00001006 E9F4090000          <2>  jmp unhand2
  1556                              <2>  %assign i i+1
  1557 0000100B FA                  <2>  cli
  1558 0000100C C605[051D0000]3C    <2>  mov byte [intprob], i
  1559 00001013 E9E7090000          <2>  jmp unhand2
  1560                              <2>  %assign i i+1
  1561 00001018 FA                  <2>  cli
  1562 00001019 C605[051D0000]3D    <2>  mov byte [intprob], i
  1563 00001020 E9DA090000          <2>  jmp unhand2
  1564                              <2>  %assign i i+1
  1565 00001025 FA                  <2>  cli
  1566 00001026 C605[051D0000]3E    <2>  mov byte [intprob], i
  1567 0000102D E9CD090000          <2>  jmp unhand2
  1568                              <2>  %assign i i+1
  1569 00001032 FA                  <2>  cli
  1570 00001033 C605[051D0000]3F    <2>  mov byte [intprob], i
  1571 0000103A E9C0090000          <2>  jmp unhand2
  1572                              <2>  %assign i i+1
  1573 0000103F FA                  <2>  cli
  1574 00001040 C605[051D0000]40    <2>  mov byte [intprob], i
  1575 00001047 E9B3090000          <2>  jmp unhand2
  1576                              <2>  %assign i i+1
  1577 0000104C FA                  <2>  cli
  1578 0000104D C605[051D0000]41    <2>  mov byte [intprob], i
  1579 00001054 E9A6090000          <2>  jmp unhand2
  1580                              <2>  %assign i i+1
  1581 00001059 FA                  <2>  cli
  1582 0000105A C605[051D0000]42    <2>  mov byte [intprob], i
  1583 00001061 E999090000          <2>  jmp unhand2
  1584                              <2>  %assign i i+1
  1585 00001066 FA                  <2>  cli
  1586 00001067 C605[051D0000]43    <2>  mov byte [intprob], i
  1587 0000106E E98C090000          <2>  jmp unhand2
  1588                              <2>  %assign i i+1
  1589 00001073 FA                  <2>  cli
  1590 00001074 C605[051D0000]44    <2>  mov byte [intprob], i
  1591 0000107B E97F090000          <2>  jmp unhand2
  1592                              <2>  %assign i i+1
  1593 00001080 FA                  <2>  cli
  1594 00001081 C605[051D0000]45    <2>  mov byte [intprob], i
  1595 00001088 E972090000          <2>  jmp unhand2
  1596                              <2>  %assign i i+1
  1597 0000108D FA                  <2>  cli
  1598 0000108E C605[051D0000]46    <2>  mov byte [intprob], i
  1599 00001095 E965090000          <2>  jmp unhand2
  1600                              <2>  %assign i i+1
  1601 0000109A FA                  <2>  cli
  1602 0000109B C605[051D0000]47    <2>  mov byte [intprob], i
  1603 000010A2 E958090000          <2>  jmp unhand2
  1604                              <2>  %assign i i+1
  1605 000010A7 FA                  <2>  cli
  1606 000010A8 C605[051D0000]48    <2>  mov byte [intprob], i
  1607 000010AF E94B090000          <2>  jmp unhand2
  1608                              <2>  %assign i i+1
  1609 000010B4 FA                  <2>  cli
  1610 000010B5 C605[051D0000]49    <2>  mov byte [intprob], i
  1611 000010BC E93E090000          <2>  jmp unhand2
  1612                              <2>  %assign i i+1
  1613 000010C1 FA                  <2>  cli
  1614 000010C2 C605[051D0000]4A    <2>  mov byte [intprob], i
  1615 000010C9 E931090000          <2>  jmp unhand2
  1616                              <2>  %assign i i+1
  1617 000010CE FA                  <2>  cli
  1618 000010CF C605[051D0000]4B    <2>  mov byte [intprob], i
  1619 000010D6 E924090000          <2>  jmp unhand2
  1620                              <2>  %assign i i+1
  1621 000010DB FA                  <2>  cli
  1622 000010DC C605[051D0000]4C    <2>  mov byte [intprob], i
  1623 000010E3 E917090000          <2>  jmp unhand2
  1624                              <2>  %assign i i+1
  1625 000010E8 FA                  <2>  cli
  1626 000010E9 C605[051D0000]4D    <2>  mov byte [intprob], i
  1627 000010F0 E90A090000          <2>  jmp unhand2
  1628                              <2>  %assign i i+1
  1629 000010F5 FA                  <2>  cli
  1630 000010F6 C605[051D0000]4E    <2>  mov byte [intprob], i
  1631 000010FD E9FD080000          <2>  jmp unhand2
  1632                              <2>  %assign i i+1
  1633 00001102 FA                  <2>  cli
  1634 00001103 C605[051D0000]4F    <2>  mov byte [intprob], i
  1635 0000110A E9F0080000          <2>  jmp unhand2
  1636                              <2>  %assign i i+1
  1637 0000110F FA                  <2>  cli
  1638 00001110 C605[051D0000]50    <2>  mov byte [intprob], i
  1639 00001117 E9E3080000          <2>  jmp unhand2
  1640                              <2>  %assign i i+1
  1641 0000111C FA                  <2>  cli
  1642 0000111D C605[051D0000]51    <2>  mov byte [intprob], i
  1643 00001124 E9D6080000          <2>  jmp unhand2
  1644                              <2>  %assign i i+1
  1645 00001129 FA                  <2>  cli
  1646 0000112A C605[051D0000]52    <2>  mov byte [intprob], i
  1647 00001131 E9C9080000          <2>  jmp unhand2
  1648                              <2>  %assign i i+1
  1649 00001136 FA                  <2>  cli
  1650 00001137 C605[051D0000]53    <2>  mov byte [intprob], i
  1651 0000113E E9BC080000          <2>  jmp unhand2
  1652                              <2>  %assign i i+1
  1653 00001143 FA                  <2>  cli
  1654 00001144 C605[051D0000]54    <2>  mov byte [intprob], i
  1655 0000114B E9AF080000          <2>  jmp unhand2
  1656                              <2>  %assign i i+1
  1657 00001150 FA                  <2>  cli
  1658 00001151 C605[051D0000]55    <2>  mov byte [intprob], i
  1659 00001158 E9A2080000          <2>  jmp unhand2
  1660                              <2>  %assign i i+1
  1661 0000115D FA                  <2>  cli
  1662 0000115E C605[051D0000]56    <2>  mov byte [intprob], i
  1663 00001165 E995080000          <2>  jmp unhand2
  1664                              <2>  %assign i i+1
  1665 0000116A FA                  <2>  cli
  1666 0000116B C605[051D0000]57    <2>  mov byte [intprob], i
  1667 00001172 E988080000          <2>  jmp unhand2
  1668                              <2>  %assign i i+1
  1669 00001177 FA                  <2>  cli
  1670 00001178 C605[051D0000]58    <2>  mov byte [intprob], i
  1671 0000117F E97B080000          <2>  jmp unhand2
  1672                              <2>  %assign i i+1
  1673 00001184 FA                  <2>  cli
  1674 00001185 C605[051D0000]59    <2>  mov byte [intprob], i
  1675 0000118C E96E080000          <2>  jmp unhand2
  1676                              <2>  %assign i i+1
  1677 00001191 FA                  <2>  cli
  1678 00001192 C605[051D0000]5A    <2>  mov byte [intprob], i
  1679 00001199 E961080000          <2>  jmp unhand2
  1680                              <2>  %assign i i+1
  1681 0000119E FA                  <2>  cli
  1682 0000119F C605[051D0000]5B    <2>  mov byte [intprob], i
  1683 000011A6 E954080000          <2>  jmp unhand2
  1684                              <2>  %assign i i+1
  1685 000011AB FA                  <2>  cli
  1686 000011AC C605[051D0000]5C    <2>  mov byte [intprob], i
  1687 000011B3 E947080000          <2>  jmp unhand2
  1688                              <2>  %assign i i+1
  1689 000011B8 FA                  <2>  cli
  1690 000011B9 C605[051D0000]5D    <2>  mov byte [intprob], i
  1691 000011C0 E93A080000          <2>  jmp unhand2
  1692                              <2>  %assign i i+1
  1693 000011C5 FA                  <2>  cli
  1694 000011C6 C605[051D0000]5E    <2>  mov byte [intprob], i
  1695 000011CD E92D080000          <2>  jmp unhand2
  1696                              <2>  %assign i i+1
  1697 000011D2 FA                  <2>  cli
  1698 000011D3 C605[051D0000]5F    <2>  mov byte [intprob], i
  1699 000011DA E920080000          <2>  jmp unhand2
  1700                              <2>  %assign i i+1
  1701 000011DF FA                  <2>  cli
  1702 000011E0 C605[051D0000]60    <2>  mov byte [intprob], i
  1703 000011E7 E913080000          <2>  jmp unhand2
  1704                              <2>  %assign i i+1
  1705 000011EC FA                  <2>  cli
  1706 000011ED C605[051D0000]61    <2>  mov byte [intprob], i
  1707 000011F4 E906080000          <2>  jmp unhand2
  1708                              <2>  %assign i i+1
  1709 000011F9 FA                  <2>  cli
  1710 000011FA C605[051D0000]62    <2>  mov byte [intprob], i
  1711 00001201 E9F9070000          <2>  jmp unhand2
  1712                              <2>  %assign i i+1
  1713 00001206 FA                  <2>  cli
  1714 00001207 C605[051D0000]63    <2>  mov byte [intprob], i
  1715 0000120E E9EC070000          <2>  jmp unhand2
  1716                              <2>  %assign i i+1
  1717 00001213 FA                  <2>  cli
  1718 00001214 C605[051D0000]64    <2>  mov byte [intprob], i
  1719 0000121B E9DF070000          <2>  jmp unhand2
  1720                              <2>  %assign i i+1
  1721 00001220 FA                  <2>  cli
  1722 00001221 C605[051D0000]65    <2>  mov byte [intprob], i
  1723 00001228 E9D2070000          <2>  jmp unhand2
  1724                              <2>  %assign i i+1
  1725 0000122D FA                  <2>  cli
  1726 0000122E C605[051D0000]66    <2>  mov byte [intprob], i
  1727 00001235 E9C5070000          <2>  jmp unhand2
  1728                              <2>  %assign i i+1
  1729 0000123A FA                  <2>  cli
  1730 0000123B C605[051D0000]67    <2>  mov byte [intprob], i
  1731 00001242 E9B8070000          <2>  jmp unhand2
  1732                              <2>  %assign i i+1
  1733 00001247 FA                  <2>  cli
  1734 00001248 C605[051D0000]68    <2>  mov byte [intprob], i
  1735 0000124F E9AB070000          <2>  jmp unhand2
  1736                              <2>  %assign i i+1
  1737 00001254 FA                  <2>  cli
  1738 00001255 C605[051D0000]69    <2>  mov byte [intprob], i
  1739 0000125C E99E070000          <2>  jmp unhand2
  1740                              <2>  %assign i i+1
  1741 00001261 FA                  <2>  cli
  1742 00001262 C605[051D0000]6A    <2>  mov byte [intprob], i
  1743 00001269 E991070000          <2>  jmp unhand2
  1744                              <2>  %assign i i+1
  1745 0000126E FA                  <2>  cli
  1746 0000126F C605[051D0000]6B    <2>  mov byte [intprob], i
  1747 00001276 E984070000          <2>  jmp unhand2
  1748                              <2>  %assign i i+1
  1749 0000127B FA                  <2>  cli
  1750 0000127C C605[051D0000]6C    <2>  mov byte [intprob], i
  1751 00001283 E977070000          <2>  jmp unhand2
  1752                              <2>  %assign i i+1
  1753 00001288 FA                  <2>  cli
  1754 00001289 C605[051D0000]6D    <2>  mov byte [intprob], i
  1755 00001290 E96A070000          <2>  jmp unhand2
  1756                              <2>  %assign i i+1
  1757 00001295 FA                  <2>  cli
  1758 00001296 C605[051D0000]6E    <2>  mov byte [intprob], i
  1759 0000129D E95D070000          <2>  jmp unhand2
  1760                              <2>  %assign i i+1
  1761 000012A2 FA                  <2>  cli
  1762 000012A3 C605[051D0000]6F    <2>  mov byte [intprob], i
  1763 000012AA E950070000          <2>  jmp unhand2
  1764                              <2>  %assign i i+1
  1765 000012AF FA                  <2>  cli
  1766 000012B0 C605[051D0000]70    <2>  mov byte [intprob], i
  1767 000012B7 E943070000          <2>  jmp unhand2
  1768                              <2>  %assign i i+1
  1769 000012BC FA                  <2>  cli
  1770 000012BD C605[051D0000]71    <2>  mov byte [intprob], i
  1771 000012C4 E936070000          <2>  jmp unhand2
  1772                              <2>  %assign i i+1
  1773 000012C9 FA                  <2>  cli
  1774 000012CA C605[051D0000]72    <2>  mov byte [intprob], i
  1775 000012D1 E929070000          <2>  jmp unhand2
  1776                              <2>  %assign i i+1
  1777 000012D6 FA                  <2>  cli
  1778 000012D7 C605[051D0000]73    <2>  mov byte [intprob], i
  1779 000012DE E91C070000          <2>  jmp unhand2
  1780                              <2>  %assign i i+1
  1781 000012E3 FA                  <2>  cli
  1782 000012E4 C605[051D0000]74    <2>  mov byte [intprob], i
  1783 000012EB E90F070000          <2>  jmp unhand2
  1784                              <2>  %assign i i+1
  1785 000012F0 FA                  <2>  cli
  1786 000012F1 C605[051D0000]75    <2>  mov byte [intprob], i
  1787 000012F8 E902070000          <2>  jmp unhand2
  1788                              <2>  %assign i i+1
  1789 000012FD FA                  <2>  cli
  1790 000012FE C605[051D0000]76    <2>  mov byte [intprob], i
  1791 00001305 E9F5060000          <2>  jmp unhand2
  1792                              <2>  %assign i i+1
  1793 0000130A FA                  <2>  cli
  1794 0000130B C605[051D0000]77    <2>  mov byte [intprob], i
  1795 00001312 E9E8060000          <2>  jmp unhand2
  1796                              <2>  %assign i i+1
  1797 00001317 FA                  <2>  cli
  1798 00001318 C605[051D0000]78    <2>  mov byte [intprob], i
  1799 0000131F E9DB060000          <2>  jmp unhand2
  1800                              <2>  %assign i i+1
  1801 00001324 FA                  <2>  cli
  1802 00001325 C605[051D0000]79    <2>  mov byte [intprob], i
  1803 0000132C E9CE060000          <2>  jmp unhand2
  1804                              <2>  %assign i i+1
  1805 00001331 FA                  <2>  cli
  1806 00001332 C605[051D0000]7A    <2>  mov byte [intprob], i
  1807 00001339 E9C1060000          <2>  jmp unhand2
  1808                              <2>  %assign i i+1
  1809 0000133E FA                  <2>  cli
  1810 0000133F C605[051D0000]7B    <2>  mov byte [intprob], i
  1811 00001346 E9B4060000          <2>  jmp unhand2
  1812                              <2>  %assign i i+1
  1813 0000134B FA                  <2>  cli
  1814 0000134C C605[051D0000]7C    <2>  mov byte [intprob], i
  1815 00001353 E9A7060000          <2>  jmp unhand2
  1816                              <2>  %assign i i+1
  1817 00001358 FA                  <2>  cli
  1818 00001359 C605[051D0000]7D    <2>  mov byte [intprob], i
  1819 00001360 E99A060000          <2>  jmp unhand2
  1820                              <2>  %assign i i+1
  1821 00001365 FA                  <2>  cli
  1822 00001366 C605[051D0000]7E    <2>  mov byte [intprob], i
  1823 0000136D E98D060000          <2>  jmp unhand2
  1824                              <2>  %assign i i+1
  1825 00001372 FA                  <2>  cli
  1826 00001373 C605[051D0000]7F    <2>  mov byte [intprob], i
  1827 0000137A E980060000          <2>  jmp unhand2
  1828                              <2>  %assign i i+1
  1829 0000137F FA                  <2>  cli
  1830 00001380 C605[051D0000]80    <2>  mov byte [intprob], i
  1831 00001387 E973060000          <2>  jmp unhand2
  1832                              <2>  %assign i i+1
  1833 0000138C FA                  <2>  cli
  1834 0000138D C605[051D0000]81    <2>  mov byte [intprob], i
  1835 00001394 E966060000          <2>  jmp unhand2
  1836                              <2>  %assign i i+1
  1837 00001399 FA                  <2>  cli
  1838 0000139A C605[051D0000]82    <2>  mov byte [intprob], i
  1839 000013A1 E959060000          <2>  jmp unhand2
  1840                              <2>  %assign i i+1
  1841 000013A6 FA                  <2>  cli
  1842 000013A7 C605[051D0000]83    <2>  mov byte [intprob], i
  1843 000013AE E94C060000          <2>  jmp unhand2
  1844                              <2>  %assign i i+1
  1845 000013B3 FA                  <2>  cli
  1846 000013B4 C605[051D0000]84    <2>  mov byte [intprob], i
  1847 000013BB E93F060000          <2>  jmp unhand2
  1848                              <2>  %assign i i+1
  1849 000013C0 FA                  <2>  cli
  1850 000013C1 C605[051D0000]85    <2>  mov byte [intprob], i
  1851 000013C8 E932060000          <2>  jmp unhand2
  1852                              <2>  %assign i i+1
  1853 000013CD FA                  <2>  cli
  1854 000013CE C605[051D0000]86    <2>  mov byte [intprob], i
  1855 000013D5 E925060000          <2>  jmp unhand2
  1856                              <2>  %assign i i+1
  1857 000013DA FA                  <2>  cli
  1858 000013DB C605[051D0000]87    <2>  mov byte [intprob], i
  1859 000013E2 E918060000          <2>  jmp unhand2
  1860                              <2>  %assign i i+1
  1861 000013E7 FA                  <2>  cli
  1862 000013E8 C605[051D0000]88    <2>  mov byte [intprob], i
  1863 000013EF E90B060000          <2>  jmp unhand2
  1864                              <2>  %assign i i+1
  1865 000013F4 FA                  <2>  cli
  1866 000013F5 C605[051D0000]89    <2>  mov byte [intprob], i
  1867 000013FC E9FE050000          <2>  jmp unhand2
  1868                              <2>  %assign i i+1
  1869 00001401 FA                  <2>  cli
  1870 00001402 C605[051D0000]8A    <2>  mov byte [intprob], i
  1871 00001409 E9F1050000          <2>  jmp unhand2
  1872                              <2>  %assign i i+1
  1873 0000140E FA                  <2>  cli
  1874 0000140F C605[051D0000]8B    <2>  mov byte [intprob], i
  1875 00001416 E9E4050000          <2>  jmp unhand2
  1876                              <2>  %assign i i+1
  1877 0000141B FA                  <2>  cli
  1878 0000141C C605[051D0000]8C    <2>  mov byte [intprob], i
  1879 00001423 E9D7050000          <2>  jmp unhand2
  1880                              <2>  %assign i i+1
  1881 00001428 FA                  <2>  cli
  1882 00001429 C605[051D0000]8D    <2>  mov byte [intprob], i
  1883 00001430 E9CA050000          <2>  jmp unhand2
  1884                              <2>  %assign i i+1
  1885 00001435 FA                  <2>  cli
  1886 00001436 C605[051D0000]8E    <2>  mov byte [intprob], i
  1887 0000143D E9BD050000          <2>  jmp unhand2
  1888                              <2>  %assign i i+1
  1889 00001442 FA                  <2>  cli
  1890 00001443 C605[051D0000]8F    <2>  mov byte [intprob], i
  1891 0000144A E9B0050000          <2>  jmp unhand2
  1892                              <2>  %assign i i+1
  1893 0000144F FA                  <2>  cli
  1894 00001450 C605[051D0000]90    <2>  mov byte [intprob], i
  1895 00001457 E9A3050000          <2>  jmp unhand2
  1896                              <2>  %assign i i+1
  1897 0000145C FA                  <2>  cli
  1898 0000145D C605[051D0000]91    <2>  mov byte [intprob], i
  1899 00001464 E996050000          <2>  jmp unhand2
  1900                              <2>  %assign i i+1
  1901 00001469 FA                  <2>  cli
  1902 0000146A C605[051D0000]92    <2>  mov byte [intprob], i
  1903 00001471 E989050000          <2>  jmp unhand2
  1904                              <2>  %assign i i+1
  1905 00001476 FA                  <2>  cli
  1906 00001477 C605[051D0000]93    <2>  mov byte [intprob], i
  1907 0000147E E97C050000          <2>  jmp unhand2
  1908                              <2>  %assign i i+1
  1909 00001483 FA                  <2>  cli
  1910 00001484 C605[051D0000]94    <2>  mov byte [intprob], i
  1911 0000148B E96F050000          <2>  jmp unhand2
  1912                              <2>  %assign i i+1
  1913 00001490 FA                  <2>  cli
  1914 00001491 C605[051D0000]95    <2>  mov byte [intprob], i
  1915 00001498 E962050000          <2>  jmp unhand2
  1916                              <2>  %assign i i+1
  1917 0000149D FA                  <2>  cli
  1918 0000149E C605[051D0000]96    <2>  mov byte [intprob], i
  1919 000014A5 E955050000          <2>  jmp unhand2
  1920                              <2>  %assign i i+1
  1921 000014AA FA                  <2>  cli
  1922 000014AB C605[051D0000]97    <2>  mov byte [intprob], i
  1923 000014B2 E948050000          <2>  jmp unhand2
  1924                              <2>  %assign i i+1
  1925 000014B7 FA                  <2>  cli
  1926 000014B8 C605[051D0000]98    <2>  mov byte [intprob], i
  1927 000014BF E93B050000          <2>  jmp unhand2
  1928                              <2>  %assign i i+1
  1929 000014C4 FA                  <2>  cli
  1930 000014C5 C605[051D0000]99    <2>  mov byte [intprob], i
  1931 000014CC E92E050000          <2>  jmp unhand2
  1932                              <2>  %assign i i+1
  1933 000014D1 FA                  <2>  cli
  1934 000014D2 C605[051D0000]9A    <2>  mov byte [intprob], i
  1935 000014D9 E921050000          <2>  jmp unhand2
  1936                              <2>  %assign i i+1
  1937 000014DE FA                  <2>  cli
  1938 000014DF C605[051D0000]9B    <2>  mov byte [intprob], i
  1939 000014E6 E914050000          <2>  jmp unhand2
  1940                              <2>  %assign i i+1
  1941 000014EB FA                  <2>  cli
  1942 000014EC C605[051D0000]9C    <2>  mov byte [intprob], i
  1943 000014F3 E907050000          <2>  jmp unhand2
  1944                              <2>  %assign i i+1
  1945 000014F8 FA                  <2>  cli
  1946 000014F9 C605[051D0000]9D    <2>  mov byte [intprob], i
  1947 00001500 E9FA040000          <2>  jmp unhand2
  1948                              <2>  %assign i i+1
  1949 00001505 FA                  <2>  cli
  1950 00001506 C605[051D0000]9E    <2>  mov byte [intprob], i
  1951 0000150D E9ED040000          <2>  jmp unhand2
  1952                              <2>  %assign i i+1
  1953 00001512 FA                  <2>  cli
  1954 00001513 C605[051D0000]9F    <2>  mov byte [intprob], i
  1955 0000151A E9E0040000          <2>  jmp unhand2
  1956                              <2>  %assign i i+1
  1957 0000151F FA                  <2>  cli
  1958 00001520 C605[051D0000]A0    <2>  mov byte [intprob], i
  1959 00001527 E9D3040000          <2>  jmp unhand2
  1960                              <2>  %assign i i+1
  1961 0000152C FA                  <2>  cli
  1962 0000152D C605[051D0000]A1    <2>  mov byte [intprob], i
  1963 00001534 E9C6040000          <2>  jmp unhand2
  1964                              <2>  %assign i i+1
  1965 00001539 FA                  <2>  cli
  1966 0000153A C605[051D0000]A2    <2>  mov byte [intprob], i
  1967 00001541 E9B9040000          <2>  jmp unhand2
  1968                              <2>  %assign i i+1
  1969 00001546 FA                  <2>  cli
  1970 00001547 C605[051D0000]A3    <2>  mov byte [intprob], i
  1971 0000154E E9AC040000          <2>  jmp unhand2
  1972                              <2>  %assign i i+1
  1973 00001553 FA                  <2>  cli
  1974 00001554 C605[051D0000]A4    <2>  mov byte [intprob], i
  1975 0000155B E99F040000          <2>  jmp unhand2
  1976                              <2>  %assign i i+1
  1977 00001560 FA                  <2>  cli
  1978 00001561 C605[051D0000]A5    <2>  mov byte [intprob], i
  1979 00001568 E992040000          <2>  jmp unhand2
  1980                              <2>  %assign i i+1
  1981 0000156D FA                  <2>  cli
  1982 0000156E C605[051D0000]A6    <2>  mov byte [intprob], i
  1983 00001575 E985040000          <2>  jmp unhand2
  1984                              <2>  %assign i i+1
  1985 0000157A FA                  <2>  cli
  1986 0000157B C605[051D0000]A7    <2>  mov byte [intprob], i
  1987 00001582 E978040000          <2>  jmp unhand2
  1988                              <2>  %assign i i+1
  1989 00001587 FA                  <2>  cli
  1990 00001588 C605[051D0000]A8    <2>  mov byte [intprob], i
  1991 0000158F E96B040000          <2>  jmp unhand2
  1992                              <2>  %assign i i+1
  1993 00001594 FA                  <2>  cli
  1994 00001595 C605[051D0000]A9    <2>  mov byte [intprob], i
  1995 0000159C E95E040000          <2>  jmp unhand2
  1996                              <2>  %assign i i+1
  1997 000015A1 FA                  <2>  cli
  1998 000015A2 C605[051D0000]AA    <2>  mov byte [intprob], i
  1999 000015A9 E951040000          <2>  jmp unhand2
  2000                              <2>  %assign i i+1
  2001 000015AE FA                  <2>  cli
  2002 000015AF C605[051D0000]AB    <2>  mov byte [intprob], i
  2003 000015B6 E944040000          <2>  jmp unhand2
  2004                              <2>  %assign i i+1
  2005 000015BB FA                  <2>  cli
  2006 000015BC C605[051D0000]AC    <2>  mov byte [intprob], i
  2007 000015C3 E937040000          <2>  jmp unhand2
  2008                              <2>  %assign i i+1
  2009 000015C8 FA                  <2>  cli
  2010 000015C9 C605[051D0000]AD    <2>  mov byte [intprob], i
  2011 000015D0 E92A040000          <2>  jmp unhand2
  2012                              <2>  %assign i i+1
  2013 000015D5 FA                  <2>  cli
  2014 000015D6 C605[051D0000]AE    <2>  mov byte [intprob], i
  2015 000015DD E91D040000          <2>  jmp unhand2
  2016                              <2>  %assign i i+1
  2017 000015E2 FA                  <2>  cli
  2018 000015E3 C605[051D0000]AF    <2>  mov byte [intprob], i
  2019 000015EA E910040000          <2>  jmp unhand2
  2020                              <2>  %assign i i+1
  2021 000015EF FA                  <2>  cli
  2022 000015F0 C605[051D0000]B0    <2>  mov byte [intprob], i
  2023 000015F7 E903040000          <2>  jmp unhand2
  2024                              <2>  %assign i i+1
  2025 000015FC FA                  <2>  cli
  2026 000015FD C605[051D0000]B1    <2>  mov byte [intprob], i
  2027 00001604 E9F6030000          <2>  jmp unhand2
  2028                              <2>  %assign i i+1
  2029 00001609 FA                  <2>  cli
  2030 0000160A C605[051D0000]B2    <2>  mov byte [intprob], i
  2031 00001611 E9E9030000          <2>  jmp unhand2
  2032                              <2>  %assign i i+1
  2033 00001616 FA                  <2>  cli
  2034 00001617 C605[051D0000]B3    <2>  mov byte [intprob], i
  2035 0000161E E9DC030000          <2>  jmp unhand2
  2036                              <2>  %assign i i+1
  2037 00001623 FA                  <2>  cli
  2038 00001624 C605[051D0000]B4    <2>  mov byte [intprob], i
  2039 0000162B E9CF030000          <2>  jmp unhand2
  2040                              <2>  %assign i i+1
  2041 00001630 FA                  <2>  cli
  2042 00001631 C605[051D0000]B5    <2>  mov byte [intprob], i
  2043 00001638 E9C2030000          <2>  jmp unhand2
  2044                              <2>  %assign i i+1
  2045 0000163D FA                  <2>  cli
  2046 0000163E C605[051D0000]B6    <2>  mov byte [intprob], i
  2047 00001645 E9B5030000          <2>  jmp unhand2
  2048                              <2>  %assign i i+1
  2049 0000164A FA                  <2>  cli
  2050 0000164B C605[051D0000]B7    <2>  mov byte [intprob], i
  2051 00001652 E9A8030000          <2>  jmp unhand2
  2052                              <2>  %assign i i+1
  2053 00001657 FA                  <2>  cli
  2054 00001658 C605[051D0000]B8    <2>  mov byte [intprob], i
  2055 0000165F E99B030000          <2>  jmp unhand2
  2056                              <2>  %assign i i+1
  2057 00001664 FA                  <2>  cli
  2058 00001665 C605[051D0000]B9    <2>  mov byte [intprob], i
  2059 0000166C E98E030000          <2>  jmp unhand2
  2060                              <2>  %assign i i+1
  2061 00001671 FA                  <2>  cli
  2062 00001672 C605[051D0000]BA    <2>  mov byte [intprob], i
  2063 00001679 E981030000          <2>  jmp unhand2
  2064                              <2>  %assign i i+1
  2065 0000167E FA                  <2>  cli
  2066 0000167F C605[051D0000]BB    <2>  mov byte [intprob], i
  2067 00001686 E974030000          <2>  jmp unhand2
  2068                              <2>  %assign i i+1
  2069 0000168B FA                  <2>  cli
  2070 0000168C C605[051D0000]BC    <2>  mov byte [intprob], i
  2071 00001693 E967030000          <2>  jmp unhand2
  2072                              <2>  %assign i i+1
  2073 00001698 FA                  <2>  cli
  2074 00001699 C605[051D0000]BD    <2>  mov byte [intprob], i
  2075 000016A0 E95A030000          <2>  jmp unhand2
  2076                              <2>  %assign i i+1
  2077 000016A5 FA                  <2>  cli
  2078 000016A6 C605[051D0000]BE    <2>  mov byte [intprob], i
  2079 000016AD E94D030000          <2>  jmp unhand2
  2080                              <2>  %assign i i+1
  2081 000016B2 FA                  <2>  cli
  2082 000016B3 C605[051D0000]BF    <2>  mov byte [intprob], i
  2083 000016BA E940030000          <2>  jmp unhand2
  2084                              <2>  %assign i i+1
  2085 000016BF FA                  <2>  cli
  2086 000016C0 C605[051D0000]C0    <2>  mov byte [intprob], i
  2087 000016C7 E933030000          <2>  jmp unhand2
  2088                              <2>  %assign i i+1
  2089 000016CC FA                  <2>  cli
  2090 000016CD C605[051D0000]C1    <2>  mov byte [intprob], i
  2091 000016D4 E926030000          <2>  jmp unhand2
  2092                              <2>  %assign i i+1
  2093 000016D9 FA                  <2>  cli
  2094 000016DA C605[051D0000]C2    <2>  mov byte [intprob], i
  2095 000016E1 E919030000          <2>  jmp unhand2
  2096                              <2>  %assign i i+1
  2097 000016E6 FA                  <2>  cli
  2098 000016E7 C605[051D0000]C3    <2>  mov byte [intprob], i
  2099 000016EE E90C030000          <2>  jmp unhand2
  2100                              <2>  %assign i i+1
  2101 000016F3 FA                  <2>  cli
  2102 000016F4 C605[051D0000]C4    <2>  mov byte [intprob], i
  2103 000016FB E9FF020000          <2>  jmp unhand2
  2104                              <2>  %assign i i+1
  2105 00001700 FA                  <2>  cli
  2106 00001701 C605[051D0000]C5    <2>  mov byte [intprob], i
  2107 00001708 E9F2020000          <2>  jmp unhand2
  2108                              <2>  %assign i i+1
  2109 0000170D FA                  <2>  cli
  2110 0000170E C605[051D0000]C6    <2>  mov byte [intprob], i
  2111 00001715 E9E5020000          <2>  jmp unhand2
  2112                              <2>  %assign i i+1
  2113 0000171A FA                  <2>  cli
  2114 0000171B C605[051D0000]C7    <2>  mov byte [intprob], i
  2115 00001722 E9D8020000          <2>  jmp unhand2
  2116                              <2>  %assign i i+1
  2117 00001727 FA                  <2>  cli
  2118 00001728 C605[051D0000]C8    <2>  mov byte [intprob], i
  2119 0000172F E9CB020000          <2>  jmp unhand2
  2120                              <2>  %assign i i+1
  2121 00001734 FA                  <2>  cli
  2122 00001735 C605[051D0000]C9    <2>  mov byte [intprob], i
  2123 0000173C E9BE020000          <2>  jmp unhand2
  2124                              <2>  %assign i i+1
  2125 00001741 FA                  <2>  cli
  2126 00001742 C605[051D0000]CA    <2>  mov byte [intprob], i
  2127 00001749 E9B1020000          <2>  jmp unhand2
  2128                              <2>  %assign i i+1
  2129 0000174E FA                  <2>  cli
  2130 0000174F C605[051D0000]CB    <2>  mov byte [intprob], i
  2131 00001756 E9A4020000          <2>  jmp unhand2
  2132                              <2>  %assign i i+1
  2133 0000175B FA                  <2>  cli
  2134 0000175C C605[051D0000]CC    <2>  mov byte [intprob], i
  2135 00001763 E997020000          <2>  jmp unhand2
  2136                              <2>  %assign i i+1
  2137 00001768 FA                  <2>  cli
  2138 00001769 C605[051D0000]CD    <2>  mov byte [intprob], i
  2139 00001770 E98A020000          <2>  jmp unhand2
  2140                              <2>  %assign i i+1
  2141 00001775 FA                  <2>  cli
  2142 00001776 C605[051D0000]CE    <2>  mov byte [intprob], i
  2143 0000177D E97D020000          <2>  jmp unhand2
  2144                              <2>  %assign i i+1
  2145 00001782 FA                  <2>  cli
  2146 00001783 C605[051D0000]CF    <2>  mov byte [intprob], i
  2147 0000178A E970020000          <2>  jmp unhand2
  2148                              <2>  %assign i i+1
  2149 0000178F FA                  <2>  cli
  2150 00001790 C605[051D0000]D0    <2>  mov byte [intprob], i
  2151 00001797 E963020000          <2>  jmp unhand2
  2152                              <2>  %assign i i+1
  2153 0000179C FA                  <2>  cli
  2154 0000179D C605[051D0000]D1    <2>  mov byte [intprob], i
  2155 000017A4 E956020000          <2>  jmp unhand2
  2156                              <2>  %assign i i+1
  2157 000017A9 FA                  <2>  cli
  2158 000017AA C605[051D0000]D2    <2>  mov byte [intprob], i
  2159 000017B1 E949020000          <2>  jmp unhand2
  2160                              <2>  %assign i i+1
  2161 000017B6 FA                  <2>  cli
  2162 000017B7 C605[051D0000]D3    <2>  mov byte [intprob], i
  2163 000017BE E93C020000          <2>  jmp unhand2
  2164                              <2>  %assign i i+1
  2165 000017C3 FA                  <2>  cli
  2166 000017C4 C605[051D0000]D4    <2>  mov byte [intprob], i
  2167 000017CB E92F020000          <2>  jmp unhand2
  2168                              <2>  %assign i i+1
  2169 000017D0 FA                  <2>  cli
  2170 000017D1 C605[051D0000]D5    <2>  mov byte [intprob], i
  2171 000017D8 E922020000          <2>  jmp unhand2
  2172                              <2>  %assign i i+1
  2173 000017DD FA                  <2>  cli
  2174 000017DE C605[051D0000]D6    <2>  mov byte [intprob], i
  2175 000017E5 E915020000          <2>  jmp unhand2
  2176                              <2>  %assign i i+1
  2177 000017EA FA                  <2>  cli
  2178 000017EB C605[051D0000]D7    <2>  mov byte [intprob], i
  2179 000017F2 E908020000          <2>  jmp unhand2
  2180                              <2>  %assign i i+1
  2181 000017F7 FA                  <2>  cli
  2182 000017F8 C605[051D0000]D8    <2>  mov byte [intprob], i
  2183 000017FF E9FB010000          <2>  jmp unhand2
  2184                              <2>  %assign i i+1
  2185 00001804 FA                  <2>  cli
  2186 00001805 C605[051D0000]D9    <2>  mov byte [intprob], i
  2187 0000180C E9EE010000          <2>  jmp unhand2
  2188                              <2>  %assign i i+1
  2189 00001811 FA                  <2>  cli
  2190 00001812 C605[051D0000]DA    <2>  mov byte [intprob], i
  2191 00001819 E9E1010000          <2>  jmp unhand2
  2192                              <2>  %assign i i+1
  2193 0000181E FA                  <2>  cli
  2194 0000181F C605[051D0000]DB    <2>  mov byte [intprob], i
  2195 00001826 E9D4010000          <2>  jmp unhand2
  2196                              <2>  %assign i i+1
  2197 0000182B FA                  <2>  cli
  2198 0000182C C605[051D0000]DC    <2>  mov byte [intprob], i
  2199 00001833 E9C7010000          <2>  jmp unhand2
  2200                              <2>  %assign i i+1
  2201 00001838 FA                  <2>  cli
  2202 00001839 C605[051D0000]DD    <2>  mov byte [intprob], i
  2203 00001840 E9BA010000          <2>  jmp unhand2
  2204                              <2>  %assign i i+1
  2205 00001845 FA                  <2>  cli
  2206 00001846 C605[051D0000]DE    <2>  mov byte [intprob], i
  2207 0000184D E9AD010000          <2>  jmp unhand2
  2208                              <2>  %assign i i+1
  2209 00001852 FA                  <2>  cli
  2210 00001853 C605[051D0000]DF    <2>  mov byte [intprob], i
  2211 0000185A E9A0010000          <2>  jmp unhand2
  2212                              <2>  %assign i i+1
  2213 0000185F FA                  <2>  cli
  2214 00001860 C605[051D0000]E0    <2>  mov byte [intprob], i
  2215 00001867 E993010000          <2>  jmp unhand2
  2216                              <2>  %assign i i+1
  2217 0000186C FA                  <2>  cli
  2218 0000186D C605[051D0000]E1    <2>  mov byte [intprob], i
  2219 00001874 E986010000          <2>  jmp unhand2
  2220                              <2>  %assign i i+1
  2221 00001879 FA                  <2>  cli
  2222 0000187A C605[051D0000]E2    <2>  mov byte [intprob], i
  2223 00001881 E979010000          <2>  jmp unhand2
  2224                              <2>  %assign i i+1
  2225 00001886 FA                  <2>  cli
  2226 00001887 C605[051D0000]E3    <2>  mov byte [intprob], i
  2227 0000188E E96C010000          <2>  jmp unhand2
  2228                              <2>  %assign i i+1
  2229 00001893 FA                  <2>  cli
  2230 00001894 C605[051D0000]E4    <2>  mov byte [intprob], i
  2231 0000189B E95F010000          <2>  jmp unhand2
  2232                              <2>  %assign i i+1
  2233 000018A0 FA                  <2>  cli
  2234 000018A1 C605[051D0000]E5    <2>  mov byte [intprob], i
  2235 000018A8 E952010000          <2>  jmp unhand2
  2236                              <2>  %assign i i+1
  2237 000018AD FA                  <2>  cli
  2238 000018AE C605[051D0000]E6    <2>  mov byte [intprob], i
  2239 000018B5 E945010000          <2>  jmp unhand2
  2240                              <2>  %assign i i+1
  2241 000018BA FA                  <2>  cli
  2242 000018BB C605[051D0000]E7    <2>  mov byte [intprob], i
  2243 000018C2 E938010000          <2>  jmp unhand2
  2244                              <2>  %assign i i+1
  2245 000018C7 FA                  <2>  cli
  2246 000018C8 C605[051D0000]E8    <2>  mov byte [intprob], i
  2247 000018CF E92B010000          <2>  jmp unhand2
  2248                              <2>  %assign i i+1
  2249 000018D4 FA                  <2>  cli
  2250 000018D5 C605[051D0000]E9    <2>  mov byte [intprob], i
  2251 000018DC E91E010000          <2>  jmp unhand2
  2252                              <2>  %assign i i+1
  2253 000018E1 FA                  <2>  cli
  2254 000018E2 C605[051D0000]EA    <2>  mov byte [intprob], i
  2255 000018E9 E911010000          <2>  jmp unhand2
  2256                              <2>  %assign i i+1
  2257 000018EE FA                  <2>  cli
  2258 000018EF C605[051D0000]EB    <2>  mov byte [intprob], i
  2259 000018F6 E904010000          <2>  jmp unhand2
  2260                              <2>  %assign i i+1
  2261 000018FB FA                  <2>  cli
  2262 000018FC C605[051D0000]EC    <2>  mov byte [intprob], i
  2263 00001903 E9F7000000          <2>  jmp unhand2
  2264                              <2>  %assign i i+1
  2265 00001908 FA                  <2>  cli
  2266 00001909 C605[051D0000]ED    <2>  mov byte [intprob], i
  2267 00001910 E9EA000000          <2>  jmp unhand2
  2268                              <2>  %assign i i+1
  2269 00001915 FA                  <2>  cli
  2270 00001916 C605[051D0000]EE    <2>  mov byte [intprob], i
  2271 0000191D E9DD000000          <2>  jmp unhand2
  2272                              <2>  %assign i i+1
  2273 00001922 FA                  <2>  cli
  2274 00001923 C605[051D0000]EF    <2>  mov byte [intprob], i
  2275 0000192A E9D0000000          <2>  jmp unhand2
  2276                              <2>  %assign i i+1
  2277 0000192F FA                  <2>  cli
  2278 00001930 C605[051D0000]F0    <2>  mov byte [intprob], i
  2279 00001937 E9C3000000          <2>  jmp unhand2
  2280                              <2>  %assign i i+1
  2281 0000193C FA                  <2>  cli
  2282 0000193D C605[051D0000]F1    <2>  mov byte [intprob], i
  2283 00001944 E9B6000000          <2>  jmp unhand2
  2284                              <2>  %assign i i+1
  2285 00001949 FA                  <2>  cli
  2286 0000194A C605[051D0000]F2    <2>  mov byte [intprob], i
  2287 00001951 E9A9000000          <2>  jmp unhand2
  2288                              <2>  %assign i i+1
  2289 00001956 FA                  <2>  cli
  2290 00001957 C605[051D0000]F3    <2>  mov byte [intprob], i
  2291 0000195E E99C000000          <2>  jmp unhand2
  2292                              <2>  %assign i i+1
  2293 00001963 FA                  <2>  cli
  2294 00001964 C605[051D0000]F4    <2>  mov byte [intprob], i
  2295 0000196B E98F000000          <2>  jmp unhand2
  2296                              <2>  %assign i i+1
  2297 00001970 FA                  <2>  cli
  2298 00001971 C605[051D0000]F5    <2>  mov byte [intprob], i
  2299 00001978 E982000000          <2>  jmp unhand2
  2300                              <2>  %assign i i+1
  2301 0000197D FA                  <2>  cli
  2302 0000197E C605[051D0000]F6    <2>  mov byte [intprob], i
  2303 00001985 E975000000          <2>  jmp unhand2
  2304                              <2>  %assign i i+1
  2305 0000198A FA                  <2>  cli
  2306 0000198B C605[051D0000]F7    <2>  mov byte [intprob], i
  2307 00001992 E968000000          <2>  jmp unhand2
  2308                              <2>  %assign i i+1
  2309 00001997 FA                  <2>  cli
  2310 00001998 C605[051D0000]F8    <2>  mov byte [intprob], i
  2311 0000199F E95B000000          <2>  jmp unhand2
  2312                              <2>  %assign i i+1
  2313 000019A4 FA                  <2>  cli
  2314 000019A5 C605[051D0000]F9    <2>  mov byte [intprob], i
  2315 000019AC E94E000000          <2>  jmp unhand2
  2316                              <2>  %assign i i+1
  2317 000019B1 FA                  <2>  cli
  2318 000019B2 C605[051D0000]FA    <2>  mov byte [intprob], i
  2319 000019B9 E941000000          <2>  jmp unhand2
  2320                              <2>  %assign i i+1
  2321 000019BE FA                  <2>  cli
  2322 000019BF C605[051D0000]FB    <2>  mov byte [intprob], i
  2323 000019C6 E934000000          <2>  jmp unhand2
  2324                              <2>  %assign i i+1
  2325 000019CB FA                  <2>  cli
  2326 000019CC C605[051D0000]FC    <2>  mov byte [intprob], i
  2327 000019D3 E927000000          <2>  jmp unhand2
  2328                              <2>  %assign i i+1
  2329 000019D8 FA                  <2>  cli
  2330 000019D9 C605[051D0000]FD    <2>  mov byte [intprob], i
  2331 000019E0 E91A000000          <2>  jmp unhand2
  2332                              <2>  %assign i i+1
  2333 000019E5 FA                  <2>  cli
  2334 000019E6 C605[051D0000]FE    <2>  mov byte [intprob], i
  2335 000019ED E90D000000          <2>  jmp unhand2
  2336                              <2>  %assign i i+1
  2337 000019F2 FA                  <2>  cli
  2338 000019F3 C605[051D0000]FF    <2>  mov byte [intprob], i
  2339 000019FA E900000000          <2>  jmp unhand2
  2340                              <2>  %assign i i+1
  2341                              <1> unhand2:
  2342 000019FF FA                  <1> 	cli
  2343 00001A00 1E                  <1> 	push ds
  2344 00001A01 06                  <1> 	push es
  2345 00001A02 0FA0                <1> 	push fs
  2346 00001A04 0FA8                <1> 	push gs
  2347 00001A06 16                  <1> 	push ss
  2348 00001A07 60                  <1> 	pushad
  2349 00001A08 803D[04500000]00    <1> 	cmp byte [guion], 0
  2350 00001A0F 0F8432000000        <1> 	je near noguiunhandstuff
  2351 00001A15 66C705[FF1C0000]08- <1> 	mov word [locunhandy], 8
  2352 00001A1D 00                  <1>
  2353 00001A1E 66C705[011D0000]08- <1> 	mov word [locunhandx], 8
  2354 00001A26 00                  <1>
  2355 00001A27 668B1D[A84E0000]    <1> 	mov bx, [background]
  2356 00001A2E 66891D[031D0000]    <1> 	mov [backgroundcache], bx
  2357 00001A35 C605[99480000]01    <1> 	mov byte [mousedisabled],1
  2358 00001A3C 66BB00F8            <1> 	mov bx, 1111100000000000b
  2359 00001A40 66891D[A84E0000]    <1> 	mov [background], bx
  2360                              <1> noguiunhandstuff:
  2361 00001A47 89E6                <1> 	mov esi, esp
  2362 00001A49 8935[F31C0000]      <1> 	mov [espfirst], esi
  2363 00001A4F 81C6BC000000        <1> 	add esi, ((unhndrgend - unhndrg)/15)*4
  2364 00001A55 8935[EF1C0000]      <1> 	mov [esploc], esi
  2365 00001A5B BE[0E1D0000]        <1> 	mov esi, unhandmsg
  2366 00001A60 8935[F71C0000]      <1> 	mov [esiloc], esi
  2367 00001A66 B900000000          <1> 	mov ecx, 0
  2368 00001A6B 8A0D[051D0000]      <1> 	mov cl, [intprob]
  2369 00001A71 BB[A1200000]        <1> 	mov ebx, errortypes
  2370 00001A76 C1E102              <1> 	shl ecx, 2
  2371 00001A79 01CB                <1> 	add ebx, ecx
  2372 00001A7B 81FB[E1200000]      <1> 	cmp ebx, errortypesend
  2373 00001A81 7205                <1> 	jb gooderrortype
  2374 00001A83 BB[E1200000]        <1> 	mov ebx, errortypesend
  2375                              <1> gooderrortype:
  2376 00001A88 8B33                <1> 	mov esi, [ebx]
  2377 00001A8A 803D[04500000]00    <1> 	cmp byte [guion], 0
  2378 00001A91 0F842E000000        <1> 	je near errortext
  2379 00001A97 668B0D[FF1C0000]    <1> 	mov cx, [locunhandy]
  2380 00001A9E 668B15[011D0000]    <1> 	mov dx, [locunhandx]
  2381 00001AA5 66B80100            <1> 	mov ax, 1
  2382 00001AA9 66BB0000            <1> 	mov bx, 0
  2383 00001AAD E8443F0000          <1> 	call showstring2
  2384 00001AB2 66890D[FF1C0000]    <1> 	mov [locunhandy], cx
  2385 00001AB9 668915[011D0000]    <1> 	mov [locunhandx], dx
  2386 00001AC0 E905000000          <1> 	jmp errortextdone
  2387                              <1> errortext:
  2388 00001AC5 E86A0F0000          <1> 	call print		;;get the error message and print it
  2389                              <1> errortextdone:
  2390 00001ACA B900000000          <1> 	mov ecx, 0
  2391 00001ACF 8A0D[051D0000]      <1> 	mov cl, [intprob]
  2392 00001AD5 E8AD010000          <1> 	call expdump
  2393                              <1> dumpstack:
  2394 00001ADA 8B35[EF1C0000]      <1> 	mov esi, [esploc]
  2395 00001AE0 39E6                <1> 	cmp esi, esp
  2396 00001AE2 7216                <1> 	jb donedump
  2397 00001AE4 368B0E              <1> 	mov ecx, [ss:esi]
  2398 00001AE7 81EE04000000        <1> 	sub esi, 4
  2399 00001AED 8935[EF1C0000]      <1> 	mov [esploc], esi
  2400 00001AF3 E88F010000          <1> 	call expdump
  2401 00001AF8 EBE0                <1> 	jmp dumpstack
  2402                              <1> donedump:
  2403 00001AFA 0F20C1              <1> 	mov ecx, cr0
  2404 00001AFD E885010000          <1> 	call expdump
  2405 00001B02 0F20D1              <1> 	mov ecx, cr2
  2406 00001B05 E87D010000          <1> 	call expdump
  2407 00001B0A 0F20D9              <1> 	mov ecx, cr3
  2408 00001B0D E875010000          <1> 	call expdump
  2409 00001B12 0F20E1              <1> 	mov ecx, cr4
  2410 00001B15 E86D010000          <1> 	call expdump
  2411 00001B1A 8B35[EF1C0000]      <1> 	mov esi, [esploc]
  2412 00001B20 368B7C2434          <1> 	mov edi, [ss:esp + 52]
  2413 00001B25 81C710000000        <1> 	add edi, 16
  2414 00001B2B 893D[0A1D0000]      <1> 	mov [codelocend], edi
  2415 00001B31 81EF20000000        <1> 	sub edi, 32
  2416                              <1> dumpcodeloop:
  2417 00001B37 893D[061D0000]      <1> 	mov [codeloc], edi
  2418 00001B3D 8B0F                <1> 	mov ecx, [edi]
  2419 00001B3F E843010000          <1> 	call expdump
  2420 00001B44 8B3D[061D0000]      <1> 	mov edi, [codeloc]
  2421 00001B4A 81C704000000        <1> 	add edi, 4
  2422 00001B50 3B3D[0A1D0000]      <1> 	cmp edi, [codelocend]
  2423 00001B56 72DF                <1> 	jb dumpcodeloop
  2424 00001B58 BE[161C0000]        <1> 	mov esi, backtoosmsg
  2425 00001B5D 803D[04500000]00    <1> 	cmp byte [guion], 0
  2426 00001B64 750A                <1> 	jne guibacktomsg
  2427 00001B66 E8C90E0000          <1> 	call print
  2428 00001B6B E91B000000          <1> 	jmp backtomsgdone
  2429                              <1> guibacktomsg:
  2430 00001B70 668B15[011D0000]    <1> 	mov dx, [locunhandx]
  2431 00001B77 668B0D[FF1C0000]    <1> 	mov cx, [locunhandy]
  2432 00001B7E 66B80100            <1> 	mov ax, 1
  2433 00001B82 66BB0000            <1> 	mov bx, 0
  2434 00001B86 E86B3E0000          <1> 	call showstring2
  2435                              <1> backtomsgdone:
  2436 00001B8B B000                <1> 	mov al, 0
  2437 00001B8D E84F0E0000          <1> 	call int302
  2438 00001B92 803D[051D0000]03    <1> 	cmp byte [intprob], 3
  2439 00001B99 753D                <1> 	jne nodebugint
  2440 00001B9B 803D[04500000]00    <1> 	cmp byte [guion], 0
  2441 00001BA2 7423                <1> 	je nodebuggui
  2442 00001BA4 668B1D[031D0000]    <1> 	mov bx, [backgroundcache]
  2443 00001BAB 66891D[A84E0000]    <1> 	mov [background], bx
  2444 00001BB2 66BB0000            <1> 	mov bx, 0
  2445 00001BB6 C605[99480000]00    <1> 	mov byte [mousedisabled], 0
  2446 00001BBD E8A9320000          <1> 	call guiclear
  2447 00001BC2 E8D53A0000          <1> 	call reloadallgraphics
  2448                              <1> nodebuggui:
  2449 00001BC7 8B35[F31C0000]      <1> 	mov esi, [espfirst]
  2450 00001BCD 89F4                <1> 	mov esp, esi
  2451 00001BCF 61                  <1> 	popad
  2452 00001BD0 17                  <1> 	pop ss
  2453 00001BD1 0FA9                <1> 	pop gs
  2454 00001BD3 0FA1                <1> 	pop fs
  2455 00001BD5 07                  <1> 	pop es
  2456 00001BD6 1F                  <1> 	pop ds
  2457 00001BD7 CF                  <1> 	iret
  2458                              <1> nodebugint:
  2459 00001BD8 61                  <1> 	popad
  2460 00001BD9 17                  <1> 	pop ss
  2461 00001BDA 0FA9                <1> 	pop gs
  2462 00001BDC 0FA1                <1> 	pop fs
  2463 00001BDE 07                  <1> 	pop es
  2464 00001BDF 1F                  <1> 	pop ds
  2465 00001BE0 803D[04500000]00    <1> 	cmp byte [guion], 0
  2466 00001BE7 7428                <1> 	je returnunhandgui
  2467 00001BE9 668B1D[031D0000]    <1> 	mov bx, [backgroundcache]
  2468 00001BF0 66891D[A84E0000]    <1> 	mov [background], bx
  2469 00001BF7 66BB0000            <1> 	mov bx, 0
  2470 00001BFB C605[99480000]00    <1> 	mov byte [mousedisabled], 0
  2471 00001C02 E864320000          <1> 	call guiclear
  2472 00001C07 E8903A0000          <1> 	call reloadallgraphics
  2473 00001C0C E999320000          <1> 	jmp gui
  2474                              <1> returnunhandgui:
  2475 00001C11 E98E140000          <1> 	jmp nwcmd
  2476 00001C16 506C6561736520706F- <1> backtoosmsg db "Please post any problems in the Issues section at solleros.googlecode.com",10,13
  2477 00001C1F 737420616E79207072- <1>
  2478 00001C28 6F626C656D7320696E- <1>
  2479 00001C31 207468652049737375- <1>
  2480 00001C3A 65732073656374696F- <1>
  2481 00001C43 6E20617420736F6C6C- <1>
  2482 00001C4C 65726F732E676F6F67- <1>
  2483 00001C55 6C65636F64652E636F- <1>
  2484 00001C5E 6D0A0D              <1>
  2485 00001C61 507265737320616E79- <1> 			db "Press any key to return to SollerOS",10,13,0
  2486 00001C6A 206B657920746F2072- <1>
  2487 00001C73 657475726E20746F20- <1>
  2488 00001C7C 536F6C6C65724F530A- <1>
  2489 00001C85 0D00                <1>
  2490                              <1> expdump:
  2491 00001C87 8B35[F71C0000]      <1> 	mov esi, [esiloc]
  2492 00001C8D 89F7                <1> 	mov edi, esi
  2493 00001C8F 81C70F000000        <1> 	add edi, 15
  2494 00001C95 81C604000000        <1> 	add esi, 4
  2495 00001C9B 893D[F71C0000]      <1> 	mov [esiloc], edi
  2496 00001CA1 81EF03000000        <1> 	sub edi, 3
  2497 00001CA7 E862180000          <1> 	call converthex
  2498 00001CAC 81EE04000000        <1> 	sub esi, 4
  2499 00001CB2 803D[04500000]00    <1> 	cmp byte [guion], 0
  2500 00001CB9 0F842A000000        <1> 	je near expdumptext
  2501 00001CBF 668B0D[FF1C0000]    <1> 	mov cx, [locunhandy]
  2502 00001CC6 668B15[011D0000]    <1> 	mov dx, [locunhandx]
  2503 00001CCD 66B80100            <1> 	mov ax, 1
  2504 00001CD1 66BB0000            <1> 	mov bx, 0
  2505 00001CD5 E81C3D0000          <1> 	call showstring2
  2506 00001CDA 66890D[FF1C0000]    <1> 	mov [locunhandy], cx
  2507 00001CE1 668915[011D0000]    <1> 	mov [locunhandx], dx
  2508 00001CE8 C3                  <1> 	ret
  2509                              <1> expdumptext:
  2510 00001CE9 E8460D0000          <1> 	call print
  2511 00001CEE C3                  <1> 	ret
  2512 00001CEF 00000000            <1> esploc dd 0
  2513 00001CF3 00000000            <1> espfirst dd 0
  2514 00001CF7 00000000            <1> esiloc dd 0
  2515 00001CFB 00000000            <1> esiregbuf dd 0
  2516 00001CFF 0100                <1> locunhandy dw 1
  2517 00001D01 0100                <1> locunhandx dw 1
  2518 00001D03 0000                <1> backgroundcache dw 0
  2519 00001D05 00                  <1> intprob db 0
  2520 00001D06 00000000            <1> codeloc dd 0
  2521 00001D0A 00000000            <1> codelocend dd 0
  2522                              <1> 	unhandmsg:	
  2523 00001D0E 494E543D3030303030- <1> 			db "INT=00000000",10,13,0
  2524 00001D17 3030300A0D00        <1>
  2525                              <1> unhndrg:
  2526 00001D1D FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
  2527 00001D26 303030202000<rept>  <1>
  2528 00001D86 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
  2529 00001D8F 3030300A0D00        <1>
  2530 00001D95 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
  2531 00001D9E 303030202000<rept>  <1>
  2532 00001DFE FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
  2533 00001E07 3030300A0D00        <1>
  2534 00001E0D FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
  2535 00001E16 303030202000<rept>  <1>
  2536 00001E76 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
  2537 00001E7F 3030300A0D00        <1>
  2538 00001E85 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
  2539 00001E8E 303030202000<rept>  <1>
  2540 00001EEE FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
  2541 00001EF7 3030300A0D00        <1>
  2542                              <1> unhandregs:
  2543 00001EFD 45464C3D3030303030- <1> 			db "EFL=00000000  ",0
  2544 00001F06 303030202000        <1>
  2545 00001F0C 43533A3D3030303030- <1> 			db "CS:=00000000  ",0
  2546 00001F15 303030202000        <1>
  2547 00001F1B 4549503D3030303030- <1> 			db "EIP=00000000",10,13,0
  2548 00001F24 3030300A0D00        <1>
  2549 00001F2A 44533A3D3030303030- <1> 			db "DS:=00000000  ",0
  2550 00001F33 303030202000        <1>
  2551 00001F39 45533A3D3030303030- <1> 			db "ES:=00000000  ",0
  2552 00001F42 303030202000        <1>
  2553 00001F48 46533A3D3030303030- <1> 			db "FS:=00000000  ",0
  2554 00001F51 303030202000        <1>
  2555 00001F57 47533A3D3030303030- <1> 			db "GS:=00000000  ",0
  2556 00001F60 303030202000        <1>
  2557 00001F66 53533A3D3030303030- <1> 			db "SS:=00000000",10,13,0
  2558 00001F6F 3030300A0D00        <1>
  2559 00001F75 4541583D3030303030- <1> 			db "EAX=00000000  ",0
  2560 00001F7E 303030202000        <1>
  2561 00001F84 4543583D3030303030- <1> 			db "ECX=00000000  ",0
  2562 00001F8D 303030202000        <1>
  2563 00001F93 4544583D3030303030- <1> 			db "EDX=00000000  ",0
  2564 00001F9C 303030202000        <1>
  2565 00001FA2 4542583D3030303030- <1> 			db "EBX=00000000",10,13,0
  2566 00001FAB 3030300A0D00        <1>
  2567 00001FB1 4553503D3030303030- <1> 			db "ESP=00000000  ",0
  2568 00001FBA 303030202000        <1>
  2569 00001FC0 4542503D3030303030- <1> 			db "EBP=00000000  ",0
  2570 00001FC9 303030202000        <1>
  2571 00001FCF 4553493D3030303030- <1> 			db "ESI=00000000  ",0
  2572 00001FD8 303030202000        <1>
  2573 00001FDE 4544493D3030303030- <1> unhndrgend:	db "EDI=00000000",10,13,0
  2574 00001FE7 3030300A0D00        <1>
  2575 00001FED 4352303D3030303030- <1> 			db "CR0=00000000  ",0
  2576 00001FF6 303030202000        <1>
  2577 00001FFC 4352323D3030303030- <1> 			db "CR2=00000000  ",0
  2578 00002005 303030202000        <1>
  2579 0000200B 4352333D3030303030- <1> 			db "CR3=00000000  ",0
  2580 00002014 303030202000        <1>
  2581 0000201A 4352343D3030303030- <1> 			db "CR4=00000000",10,13,0
  2582 00002023 3030300A0D00        <1>
  2583 00002029 FFFFFFFF3030303030- <1> unhandcode: times 2 db 255,255,255,255,"00000000  ",0	;;this dumps the code before and after the interrupt in question
  2584 00002032 303030202000<rept>  <1>
  2585 00002047 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000 ",255,0
  2586 00002050 30303020FF00        <1>
  2587 00002056 FFFFFF5B3030303030- <1> 			db 255,255,255,"[00000000] ",0
  2588 0000205F 3030305D2000        <1>
  2589 00002065 FFFFFFFF3030303030- <1> 			times 3 db 255,255,255,255,"00000000  ",0
  2590 0000206E 303030202000<rept>  <1>
  2591 00002092 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
  2592 0000209B 3030300A0D00        <1>
  2593                              <1> unhandmsgend:
  2594                              <1> 
  2595                              <1> errortypes:
  2596 000020A1 [E5200000]          <1> 			dd err0
  2597 000020A5 [4C210000]          <1> 			dd err1
  2598 000020A9 [AF210000]          <1> 			dd err2
  2599 000020AD [05220000]          <1> 			dd err3
  2600 000020B1 [6C220000]          <1> 			dd err4
  2601 000020B5 [C0220000]          <1> 			dd err5
  2602 000020B9 [2D230000]          <1> 			dd err6
  2603 000020BD [98230000]          <1> 			dd err7
  2604 000020C1 [E4230000]          <1> 			dd err8
  2605 000020C5 [43240000]          <1> 			dd err9
  2606 000020C9 [9E240000]          <1> 			dd err10
  2607 000020CD [EB240000]          <1> 			dd err11
  2608 000020D1 [3D250000]          <1> 			dd err12
  2609 000020D5 [98250000]          <1> 			dd err13
  2610 000020D9 [FD250000]          <1> 			dd err14
  2611 000020DD [3B260000]          <1> 			dd err15
  2612                              <1> errortypesend:
  2613 000020E1 [C9260000]          <1> 			dd unknownerror
  2614                              <1> 			
  2615 000020E5 4469766973696F6E20- <1> err0	db "Division by zero:",10,13
  2616 000020EE 6279207A65726F3A0A- <1>
  2617 000020F7 0D                  <1>
  2618 000020F8 546563686E6963616C- <1> 		db "Technically lim a",246,"x = ",236," when a is any real number. Happy Easter!",10,13
  2619 00002101 6C79206C696D2061F6- <1>
  2620 0000210A 78203D20EC20776865- <1>
  2621 00002113 6E206120697320616E- <1>
  2622 0000211C 79207265616C206E75- <1>
  2623 00002125 6D6265722E20486170- <1>
  2624 0000212E 707920456173746572- <1>
  2625 00002137 210A0D              <1>
  2626 0000213A 202020202020202020- <1> 		db "            x",26,"0",10,13,0
  2627 00002143 202020781A300A0D00  <1>
  2628                              <1> 		
  2629 0000214C 53696E676C652D7374- <1> err1	db "Single-step/Breakpoint:",10,13
  2630 00002155 65702F427265616B70- <1>
  2631 0000215E 6F696E743A0A0D      <1>
  2632 00002165 4120627265616B706F- <1> 		db "A breakpoint fault, breakpoint trap, or single-step trap was triggered.",10,13,0
  2633 0000216E 696E74206661756C74- <1>
  2634 00002177 2C20627265616B706F- <1>
  2635 00002180 696E7420747261702C- <1>
  2636 00002189 206F722073696E676C- <1>
  2637 00002192 652D73746570207472- <1>
  2638 0000219B 617020776173207472- <1>
  2639 000021A4 696767657265642E0A- <1>
  2640 000021AD 0D00                <1>
  2641                              <1> 		
  2642 000021AF 4E6F6E6D61736B6162- <1> err2	db "Nonmaskable interrupt:",10,13
  2643 000021B8 6C6520696E74657272- <1>
  2644 000021C1 7570743A0A0D        <1>
  2645 000021C7 412068617264776172- <1> 		db "A hardware interrupt was triggered that could not be masked",10,13,0
  2646 000021D0 6520696E7465727275- <1>
  2647 000021D9 707420776173207472- <1>
  2648 000021E2 696767657265642074- <1>
  2649 000021EB 68617420636F756C64- <1>
  2650 000021F4 206E6F74206265206D- <1>
  2651 000021FD 61736B65640A0D00    <1>
  2652                              <1> 		
  2653 00002205 427265616B706F696E- <1> err3	db "Breakpoint:",10,13
  2654 0000220E 743A0A0D            <1>
  2655 00002212 5468697320696E7465- <1> 		db "This interrupt is used in programs to show the stack and registers and can be",10,13
  2656 0000221B 727275707420697320- <1>
  2657 00002224 7573656420696E2070- <1>
  2658 0000222D 726F6772616D732074- <1>
  2659 00002236 6F2073686F77207468- <1>
  2660 0000223F 6520737461636B2061- <1>
  2661 00002248 6E6420726567697374- <1>
  2662 00002251 65727320616E642063- <1>
  2663 0000225A 616E2062650A0D      <1>
  2664 00002261 69676E6F7265642E0A- <1> 		db "ignored.",10,13,0
  2665 0000226A 0D00                <1>
  2666                              <1> 		
  2667 0000226C 4F766572666C6F773A- <1> err4	db "Overflow:",10,13
  2668 00002275 0A0D                <1>
  2669 00002277 5468652070726F6365- <1> 		db "The processor ran into an INTO instruction with the overflow flag set.",10,13,0
  2670 00002280 73736F722072616E20- <1>
  2671 00002289 696E746F20616E2049- <1>
  2672 00002292 4E544F20696E737472- <1>
  2673 0000229B 756374696F6E207769- <1>
  2674 000022A4 746820746865206F76- <1>
  2675 000022AD 6572666C6F7720666C- <1>
  2676 000022B6 6167207365742E0A0D- <1>
  2677 000022BF 00                  <1>
  2678                              <1> 		
  2679 000022C0 426F756E6473206368- <1> err5	db "Bounds check:",10,13
  2680 000022C9 65636B3A0A0D        <1>
  2681 000022CF 5468652070726F6365- <1> 		db "The processor rebounded from a BOUND instruction run on an operand that was out",10,13
  2682 000022D8 73736F72207265626F- <1>
  2683 000022E1 756E6465642066726F- <1>
  2684 000022EA 6D206120424F554E44- <1>
  2685 000022F3 20696E737472756374- <1>
  2686 000022FC 696F6E2072756E206F- <1>
  2687 00002305 6E20616E206F706572- <1>
  2688 0000230E 616E64207468617420- <1>
  2689 00002317 776173206F75740A0D  <1>
  2690 00002320 6F6620626F756E6473- <1> 		db "of bounds.",10,13,0
  2691 00002329 2E0A0D00            <1>
  2692                              <1> 		
  2693 0000232D 496E76616C6964206F- <1> err6	db "Invalid opcode:",10,13
  2694 00002336 70636F64653A0A0D    <1>
  2695 0000233E 5468652070726F6365- <1> 		db "The processor has no idea what it was trying to execute. Don't run SSE4 code",10,13
  2696 00002347 73736F722068617320- <1>
  2697 00002350 6E6F20696465612077- <1>
  2698 00002359 686174206974207761- <1>
  2699 00002362 7320747279696E6720- <1>
  2700 0000236B 746F20657865637574- <1>
  2701 00002374 652E20446F6E277420- <1>
  2702 0000237D 72756E205353453420- <1>
  2703 00002386 636F64650A0D        <1>
  2704 0000238C 6F6E20343836277321- <1> 		db "on 486's!",10,13,0
  2705 00002395 0A0D00              <1>
  2706                              <1> 		
  2707 00002398 436F70726F63657373- <1> err7	db "Coprocessor not available:",10,13
  2708 000023A1 6F72206E6F74206176- <1>
  2709 000023AA 61696C61626C653A0A- <1>
  2710 000023B3 0D                  <1>
  2711 000023B4 446F6E277420796F75- <1> 		db "Don't you know they don't make those anymore!",10,13,0
  2712 000023BD 206B6E6F7720746865- <1>
  2713 000023C6 7920646F6E2774206D- <1>
  2714 000023CF 616B652074686F7365- <1>
  2715 000023D8 20616E796D6F726521- <1>
  2716 000023E1 0A0D00              <1>
  2717                              <1> 		
  2718 000023E4 446F75626C65206661- <1> err8	db "Double fault:",10,13
  2719 000023ED 756C743A0A0D        <1>
  2720 000023F3 546865206578636570- <1> 		db "The exception handler could not handle that it could not handle an exception.",10,13,0
  2721 000023FC 74696F6E2068616E64- <1>
  2722 00002405 6C657220636F756C64- <1>
  2723 0000240E 206E6F742068616E64- <1>
  2724 00002417 6C6520746861742069- <1>
  2725 00002420 7420636F756C64206E- <1>
  2726 00002429 6F742068616E646C65- <1>
  2727 00002432 20616E206578636570- <1>
  2728 0000243B 74696F6E2E0A0D00    <1>
  2729                              <1> 		
  2730 00002443 436F70726F63657373- <1> err9	db "Coprocessor segment overrun:",10,13,0
  2731 0000244C 6F72207365676D656E- <1>
  2732 00002455 74206F76657272756E- <1>
  2733 0000245E 3A0A0D00            <1>
  2734 00002462 54686973206E657665- <1> 		db "This never happens in modern computers, and never should.",10,13,0
  2735 0000246B 722068617070656E73- <1>
  2736 00002474 20696E206D6F646572- <1>
  2737 0000247D 6E20636F6D70757465- <1>
  2738 00002486 72732C20616E64206E- <1>
  2739 0000248F 657665722073686F75- <1>
  2740 00002498 6C642E0A0D00        <1>
  2741                              <1> 
  2742 0000249E 496E76616C69642054- <1> err10	db "Invalid TSS:",10,13
  2743 000024A7 53533A0A0D          <1>
  2744 000024AC 546865205453532074- <1> 		db "The TSS that was switched to is invalid. Nothing funny here.",10,13,0
  2745 000024B5 686174207761732073- <1>
  2746 000024BE 776974636865642074- <1>
  2747 000024C7 6F20697320696E7661- <1>
  2748 000024D0 6C69642E204E6F7468- <1>
  2749 000024D9 696E672066756E6E79- <1>
  2750 000024E2 20686572652E0A0D00  <1>
  2751                              <1> 		
  2752 000024EB 5365676D656E74206E- <1> err11	db "Segment not present:",10,13
  2753 000024F4 6F742070726573656E- <1>
  2754 000024FD 743A0A0D            <1>
  2755 00002501 546865207072657365- <1> 		db "The present bit of the segment descriptor is set to zero.",10,13,0
  2756 0000250A 6E7420626974206F66- <1>
  2757 00002513 20746865207365676D- <1>
  2758 0000251C 656E74206465736372- <1>
  2759 00002525 6970746F7220697320- <1>
  2760 0000252E 73657420746F207A65- <1>
  2761 00002537 726F2E0A0D00        <1>
  2762                              <1> 		
  2763 0000253D 537461636B20657863- <1> err12	db "Stack exception:",10,13
  2764 00002546 657074696F6E3A0A0D  <1>
  2765 0000254F 546865205353206465- <1> 		db "The SS descriptor is invalid or not present or its limit is too small.",10,13,0
  2766 00002558 7363726970746F7220- <1>
  2767 00002561 697320696E76616C69- <1>
  2768 0000256A 64206F72206E6F7420- <1>
  2769 00002573 70726573656E74206F- <1>
  2770 0000257C 7220697473206C696D- <1>
  2771 00002585 697420697320746F6F- <1>
  2772 0000258E 20736D616C6C2E0A0D- <1>
  2773 00002597 00                  <1>
  2774                              <1> 		
  2775 00002598 47656E6572616C2070- <1> err13	db "General protection violation:",10,13
  2776 000025A1 726F74656374696F6E- <1>
  2777 000025AA 2076696F6C6174696F- <1>
  2778 000025B3 6E3A0A0D            <1>
  2779 000025B7 596F752076696F6C61- <1> 		db "You violated the computer. Step away slowly. The FBI is on its way.",10,13,0
  2780 000025C0 746564207468652063- <1>
  2781 000025C9 6F6D70757465722E20- <1>
  2782 000025D2 537465702061776179- <1>
  2783 000025DB 20736C6F776C792E20- <1>
  2784 000025E4 546865204642492069- <1>
  2785 000025ED 73206F6E2069747320- <1>
  2786 000025F6 7761792E0A0D00      <1>
  2787                              <1> 		
  2788 000025FD 50616765206661756C- <1> err14	db "Page fault:",10,13
  2789 00002606 743A0A0D            <1>
  2790 0000260A 546865207061676520- <1> 		db "The page that was requested was not available.",10,13,0
  2791 00002613 746861742077617320- <1>
  2792 0000261C 726571756573746564- <1>
  2793 00002625 20776173206E6F7420- <1>
  2794 0000262E 617661696C61626C65- <1>
  2795 00002637 2E0A0D00            <1>
  2796                              <1> 		
  2797 0000263B 526573657276656420- <1> err15	db "Reserved for Plan R:",10,13
  2798 00002644 666F7220506C616E20- <1>
  2799 0000264D 523A0A0D            <1>
  2800 00002651 5468697320696E7465- <1> 		db "This interrupt is reserved for usage only by the military when it is necessary",10,13
  2801 0000265A 727275707420697320- <1>
  2802 00002663 726573657276656420- <1>
  2803 0000266C 666F72207573616765- <1>
  2804 00002675 206F6E6C7920627920- <1>
  2805 0000267E 746865206D696C6974- <1>
  2806 00002687 617279207768656E20- <1>
  2807 00002690 6974206973206E6563- <1>
  2808 00002699 6573736172790A0D    <1>
  2809 000026A1 746F20696E69746961- <1> 		db "to initiate a full-scale coup d'",130,"tat.",10,13,0
  2810 000026AA 746520612066756C6C- <1>
  2811 000026B3 2D7363616C6520636F- <1>
  2812 000026BC 757020642782746174- <1>
  2813 000026C5 2E0A0D00            <1>
  2814                              <1> 		
  2815 000026C9 576861742074686520- <1> unknownerror db "What the hell just happened? Is everyone okay? Hard drive? Video card?",10,13
  2816 000026D2 68656C6C206A757374- <1>
  2817 000026DB 2068617070656E6564- <1>
  2818 000026E4 3F2049732065766572- <1>
  2819 000026ED 796F6E65206F6B6179- <1>
  2820 000026F6 3F2048617264206472- <1>
  2821 000026FF 6976653F2056696465- <1>
  2822 00002708 6F20636172643F0A0D  <1>
  2823 00002711 4D656D6F72793F2041- <1> 			db	"Memory? Are you there?",10,13,0
  2824 0000271A 726520796F75207468- <1>
  2825 00002723 6572653F0A0D00      <1>
  2826                                      %include 'source/ints.asm'
  2827                              <1> newints:	;;for great justice
  2828 0000272A 80FC00              <1> 	cmp ah, 0		;;originally 0
  2829 0000272D 0F845B000000        <1> 	je near intx0   ;;0=kills app
  2830 00002733 80FC01              <1> 	cmp ah, 1		;;originally 1
  2831 00002736 0F8457000000        <1> 	je near intx1   ;;3=print string
  2832 0000273C 80FC02              <1> 	cmp ah, 2		;;originally 2
  2833 0000273F 0F8458000000        <1> 	je near intx2	;;4=read string
  2834 00002745 80FC03              <1> 	cmp ah, 3		;;originally 3
  2835 00002748 0F8459000000        <1> 	je near intx3	;;6=clear screen
  2836 0000274E 80FC04              <1> 	cmp ah, 4		;;originally 4
  2837 00002751 0F845A000000        <1> 	je near intx4	;;5=read and print string
  2838 00002757 80FC05              <1> 	cmp ah, 5		;;originally 5		
  2839 0000275A 0F845B000000        <1> 	je near intx5	;;2=get char
  2840 00002760 80FC06              <1> 	cmp ah, 6		;;originally 6
  2841 00002763 0F845C000000        <1> 	je near intx6	;;1=print char
  2842 00002769 80FC07              <1> 	cmp ah, 7
  2843 0000276C 0F845D000000        <1> 	je near intx7	;;read file
  2844 00002772 80FC09              <1> 	cmp ah, 9
  2845 00002775 0F845E000000        <1> 	je near intx9	;;convert number to string
  2846 0000277B 80FC0A              <1> 	cmp ah, 10
  2847 0000277E 0F846D000000        <1> 	je near intx10	;;convert string to number
  2848 00002784 80FC0B              <1> 	cmp ah, 11
  2849 00002787 0F846E000000        <1> 	je near intx11	;;create thread
  2850 0000278D C3                  <1> 	ret
  2851                              <1> 	
  2852                              <1> ;;the jmp timerinterrupt's ensure that task switches occur
  2853                              <1> 	
  2854                              <1> intx0:
  2855 0000278E E911090000          <1> 	jmp nwcmd
  2856                              <1> intx1:
  2857 00002793 E8A4020000          <1> 	call int303
  2858 00002798 E9CADCFFFF          <1> 	jmp timerinterrupt
  2859                              <1> intx2:
  2860 0000279D E8C2020000          <1> 	call int304
  2861 000027A2 E9C0DCFFFF          <1> 	jmp timerinterrupt
  2862                              <1> intx3:
  2863 000027A7 E8A6050000          <1> 	call int306
  2864 000027AC E9B6DCFFFF          <1> 	jmp timerinterrupt
  2865                              <1> intx4:
  2866 000027B1 E8ED020000          <1> 	call int305
  2867 000027B6 E9ACDCFFFF          <1> 	jmp timerinterrupt
  2868                              <1> intx5:
  2869 000027BB E821020000          <1> 	call int302
  2870 000027C0 E9A2DCFFFF          <1> 	jmp timerinterrupt
  2871                              <1> intx6:
  2872 000027C5 E841000000          <1> 	call int301
  2873 000027CA E998DCFFFF          <1> 	jmp timerinterrupt
  2874                              <1> intx7:
  2875 000027CF E849420000          <1> 	call loadfile
  2876 000027D4 E98EDCFFFF          <1> 	jmp timerinterrupt
  2877                              <1> intx9:
  2878 000027D9 3C00                <1> 	cmp al, 0
  2879 000027DB 750A                <1> 	jne intx9B
  2880 000027DD E87B0E0000          <1> 	call showdec
  2881 000027E2 E980DCFFFF          <1> 	jmp timerinterrupt
  2882                              <1> intx9B:
  2883 000027E7 E8CC0D0000          <1> 	call showhex
  2884 000027EC E976DCFFFF          <1> 	jmp timerinterrupt
  2885                              <1> intx10:
  2886 000027F1 E8300C0000          <1> 	call convert	;the string goes into esi, number into ecx
  2887 000027F6 E96CDCFFFF          <1> 	jmp timerinterrupt
  2888                              <1> intx11:
  2889 000027FB E860480000          <1> 	call threadfork
  2890 00002800 CF                  <1> 	iret
  2891                              <1> 	
  2892 00002801 0000                <1> linebeginpos dw 0
  2893 00002803 0000                <1> videobufpos: dw 0
  2894 00002805 0000                <1> charpos db 0,0
  2895 00002807 A01E                <1> charxy db 160,30
  2896 00002809 0000                <1> charbuf dw 0
  2897                              <1> 	
  2898                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
  2899 0000280B E808000000          <1> 	call int301prnt
  2900 00002810 E88D050000          <1> 	call termcopy
  2901 00002815 C3                  <1> 	ret
  2902 00002816 00                  <1> termguion db 0
  2903 00002817 00                  <1> termcopyon db 0
  2904                              <1> int301prnt:
  2905 00002818 88DC                <1> 	mov ah, bl
  2906 0000281A 66A3[09280000]      <1> 	mov [charbuf], ax
  2907 00002820 BB00000000          <1> 	mov ebx, 0
  2908 00002825 668B1D[03280000]    <1> 	mov bx, [videobufpos]
  2909 0000282C BF[8F1D0000]        <1> 	mov edi, videobuf2
  2910 00002831 01DF                <1> 	add edi, ebx
  2911 00002833 66A1[A02D0000]      <1> 	mov ax, [removedvideo]
  2912 00002839 668907              <1> 	mov [edi], ax
  2913 0000283C 66A1[09280000]      <1> 	mov ax, [charbuf]
  2914 00002842 BA00000000          <1> 	mov edx, 0
  2915 00002847 668B15[05280000]    <1> 	mov dx, [charpos]
  2916 0000284E B900000000          <1> 	mov ecx, 0
  2917 00002853 668B0D[07280000]    <1> 	mov cx, [charxy]
  2918 0000285A 3C09                <1> 	cmp al, 9
  2919 0000285C 0F8464000000        <1> 	je near int301tab
  2920 00002862 3C0D                <1> 	cmp al, 13
  2921 00002864 0F8479000000        <1> 	je near int301cr
  2922 0000286A 3C0A                <1> 	cmp al, 10
  2923 0000286C 0F84A7000000        <1> 	je near int301nl
  2924 00002872 3C08                <1> 	cmp al, 8
  2925 00002874 0F8480000000        <1> 	je near int301bs
  2926 0000287A 3CFF                <1> 	cmp al, 255		;;null character
  2927 0000287C 0F841C000000        <1> 	je near donescr
  2928 00002882 668907              <1> 	mov [edi], ax
  2929 00002885 81C702000000        <1> 	add edi, 2
  2930 0000288B 80C202              <1> 	add dl, 2
  2931                              <1> donecrnl:
  2932 0000288E 38CA                <1> 	cmp dl, cl
  2933 00002890 0F83B4000000        <1> 	jae near int301eol
  2934                              <1> doneeol:
  2935 00002896 38EE                <1> 	cmp dh, ch
  2936 00002898 0F83CA000000        <1> 	jae near int301scr	
  2937                              <1> donescr:
  2938 0000289E 89FB                <1> 	mov ebx, edi
  2939 000028A0 668B07              <1> 	mov ax, [edi]
  2940 000028A3 66A3[A02D0000]      <1> 	mov [removedvideo], ax
  2941 000028A9 81EB[8F1D0000]      <1> 	sub ebx, videobuf2
  2942 000028AF 66891D[03280000]    <1> 	mov [videobufpos], bx
  2943 000028B6 668915[05280000]    <1> 	mov [charpos], dx
  2944 000028BD 66A1[09280000]      <1> 	mov ax, [charbuf]
  2945 000028C3 88E3                <1> 	mov bl, ah
  2946 000028C5 C3                  <1> 	ret
  2947                              <1> 	
  2948                              <1> 	int301tab:
  2949 000028C6 47                  <1> 		inc edi
  2950 000028C7 FEC2                <1> 		inc dl	;make sure it works
  2951 000028C9 C1EF04              <1> 		shr edi, 4
  2952 000028CC C1E704              <1> 		shl edi, 4
  2953 000028CF 81C710000000        <1> 		add edi, 16
  2954 000028D5 C0EA04              <1> 		shr dl, 4
  2955 000028D8 C0E204              <1> 		shl dl, 4
  2956 000028DB 80C210              <1> 		add dl, 16
  2957 000028DE 4F                  <1> 		dec edi
  2958 000028DF FECA                <1> 		dec dl
  2959 000028E1 EBAB                <1> 		jmp donecrnl
  2960                              <1> 	
  2961                              <1> 	int301cr:
  2962 000028E3 B200                <1> 		mov dl, 0
  2963 000028E5 BB00000000          <1> 		mov ebx, 0
  2964 000028EA BF[8F1D0000]        <1> 		mov edi, videobuf2
  2965 000028EF 668B1D[01280000]    <1> 		mov bx, [linebeginpos]
  2966 000028F6 01DF                <1> 		add edi, ebx
  2967 000028F8 EB94                <1> 		jmp donecrnl
  2968                              <1> 			
  2969                              <1> 	int301bs:
  2970 000028FA 80FA00              <1> 		cmp dl, 0
  2971 000028FD 740F                <1> 		je int301backline
  2972                              <1> 	int301nobmr:
  2973 000028FF 80EA02              <1> 		sub dl, 2
  2974 00002902 66B80000            <1> 		mov ax, 0
  2975 00002906 81EF02000000        <1> 		sub edi, 2
  2976 0000290C EB80                <1> 		jmp donecrnl
  2977                              <1> 	int301backline:
  2978 0000290E 88CA                <1> 		mov dl, cl
  2979 00002910 80FE00              <1> 		cmp dh, 0
  2980 00002913 74EA                <1> 		je int301nobmr
  2981 00002915 FECE                <1> 		dec dh
  2982 00002917 EBE6                <1> 		jmp int301nobmr
  2983                              <1> 		
  2984                              <1> 	int301nl:
  2985 00002919 FEC6                <1> 		inc dh
  2986 0000291B BB00000000          <1> 		mov ebx, 0
  2987 00002920 88CB                <1> 		mov bl, cl
  2988 00002922 BF[8F1D0000]        <1> 		mov edi, videobuf2
  2989 00002927 66031D[03280000]    <1> 		add bx, [videobufpos]
  2990 0000292E 01DF                <1> 		add edi, ebx
  2991 00002930 BB00000000          <1> 		mov ebx, 0
  2992 00002935 88CB                <1> 		mov bl, cl
  2993 00002937 66031D[01280000]    <1> 		add bx, [linebeginpos]
  2994 0000293E 66891D[01280000]    <1> 		mov [linebeginpos], bx
  2995 00002945 E944FFFFFF          <1> 		jmp donecrnl
  2996                              <1> 		
  2997                              <1> 	int301eol:
  2998 0000294A B200                <1> 		mov dl, 0
  2999 0000294C FEC6                <1> 		inc dh
  3000 0000294E BB00000000          <1> 		mov ebx, 0
  3001 00002953 88CB                <1> 		mov bl, cl
  3002 00002955 66031D[01280000]    <1> 		add bx, [linebeginpos]
  3003 0000295C 66891D[01280000]    <1> 		mov [linebeginpos], bx
  3004 00002963 E92EFFFFFF          <1> 		jmp doneeol
  3005                              <1> 	int301scr:
  3006 00002968 FECE                <1> 		dec dh
  3007 0000296A BF[8F1D0000]        <1> 		mov edi, videobuf2
  3008 0000296F BB00000000          <1> 		mov ebx, 0
  3009 00002974 88CB                <1> 		mov bl, cl
  3010 00002976 01FB                <1> 		add ebx, edi
  3011                              <1> 	intscrollloop:
  3012 00002978 668B03              <1> 		mov ax, [ebx]
  3013 0000297B 668907              <1> 		mov [edi], ax
  3014 0000297E 81C702000000        <1> 		add edi, 2
  3015 00002984 81C302000000        <1> 		add ebx, 2
  3016 0000298A 80E902              <1> 		sub cl, 2
  3017 0000298D 80F900              <1> 		cmp cl, 0
  3018 00002990 75E6                <1> 		jne intscrollloop
  3019 00002992 8A0D[07280000]      <1> 		mov cl, [charxy]
  3020 00002998 FECD                <1> 		dec ch
  3021 0000299A 80FD01              <1> 		cmp ch, 1
  3022 0000299D 77D9                <1> 		ja intscrollloop
  3023 0000299F 66B80000            <1> 		mov ax, 0
  3024 000029A3 81EF[8F1D0000]      <1> 		sub edi, videobuf2
  3025 000029A9 66893D[01280000]    <1> 		mov [linebeginpos], di
  3026 000029B0 81C7[8F1D0000]      <1> 		add edi, videobuf2
  3027 000029B6 89FB                <1> 		mov ebx, edi
  3028                              <1> 	intloopclear:
  3029 000029B8 668903              <1> 		mov [ebx], ax
  3030 000029BB 81C302000000        <1> 		add ebx, 2
  3031 000029C1 80E902              <1> 		sub cl, 2
  3032 000029C4 80F900              <1> 		cmp cl, 0
  3033 000029C7 75EF                <1> 		jne intloopclear
  3034 000029C9 FECD                <1> 		dec ch
  3035 000029CB 80FD00              <1> 		cmp ch, 0
  3036 000029CE 75E8                <1> 		jne intloopclear
  3037 000029D0 668B0D[07280000]    <1> 		mov cx, [charxy]
  3038 000029D7 E9C2FEFFFF          <1> 		jmp donescr
  3039                              <1> 		
  3040                              <1> 		
  3041 000029DC 0000                <1> lastkey db 0,0
  3042 000029DE 00                  <1> trans db 0
  3043                              <1> getkey:
  3044 000029DF B000                <1> 	mov al, 0
  3045                              <1> 	int302:		;;get char, if al is 0, wait for key
  3046 000029E1 C605[DE290000]01    <1> 		mov byte [trans], 1
  3047 000029E8 3C01                <1> 		cmp al, 1
  3048 000029EA 7307                <1> 		jae transcheck
  3049 000029EC C605[DE290000]00    <1> 		mov byte [trans], 0
  3050                              <1> 	transcheck:
  3051 000029F3 E8C71E0000          <1> 		call guistartin
  3052 000029F8 8A3D[DE290000]      <1> 		mov bh, [trans]
  3053 000029FE 66A1[DC290000]      <1> 		mov ax, [lastkey]
  3054 00002A04 80FC1C              <1> 		cmp ah, 1Ch
  3055 00002A07 7419                <1> 		je int302enter
  3056 00002A09 803D[9A480000]E0    <1> 		cmp byte [specialkey], 0xE0
  3057 00002A10 7504                <1> 		jne nospecialtrans
  3058 00002A12 88C3                <1> 		mov bl, al
  3059 00002A14 B000                <1> 		mov al, 0
  3060                              <1> 	nospecialtrans:
  3061 00002A16 08C7                <1> 		or bh, al
  3062 00002A18 80FF00              <1> 		cmp bh, 0
  3063 00002A1B 74D6                <1> 		je transcheck
  3064 00002A1D E902000000          <1> 		jmp int302end
  3065                              <1> 	int302enter:
  3066 00002A22 B00D                <1> 		mov al, 13
  3067                              <1> 	int302end:
  3068 00002A24 C3                  <1> 		ret
  3069                              <1> 	
  3070 00002A25 00                  <1> endkey303 db 0
  3071                              <1> 	printquiet:
  3072 00002A26 66B80000            <1> 		mov ax, 0
  3073 00002A2A 66BB0700            <1> 		mov bx, 7
  3074 00002A2E E819000000          <1> 		call int303b
  3075 00002A33 C3                  <1> 		ret
  3076                              <1>     print:
  3077 00002A34 66B80000            <1> 		mov ax, 0
  3078 00002A38 66BB0700            <1> 		mov bx, 7
  3079                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  3080 00002A3C A2[252A0000]        <1> 		mov [endkey303], al
  3081 00002A41 E806000000          <1> 		call int303b
  3082 00002A46 E857030000          <1> 		call termcopy
  3083 00002A4B C3                  <1> 		ret
  3084                              <1> 	int303b:
  3085 00002A4C 8A06                <1> 		mov al, [esi]
  3086 00002A4E 3A05[252A0000]      <1> 		cmp al, [endkey303]
  3087 00002A54 7408                <1> 		je doneint303
  3088 00002A56 E8BDFDFFFF          <1> 		call int301prnt
  3089 00002A5B 46                  <1> 		inc esi
  3090 00002A5C EBEE                <1> 		jmp int303b
  3091                              <1> 	doneint303:
  3092 00002A5E C3                  <1> 		ret
  3093                              <1> 		
  3094 00002A5F 00                  <1> endkey304 db 0
  3095 00002A60 00000000            <1> endbuffer304 dd 0
  3096                              <1> 	int304:	;;get line, al=last key, esi = buffer, edi = endbuffer
  3097 00002A64 A2[5F2A0000]        <1> 		mov [endkey304], al
  3098 00002A69 893D[602A0000]      <1> 		mov [endbuffer304], edi
  3099                              <1> 	int304b:
  3100 00002A6F 56                  <1> 		push esi
  3101 00002A70 B000                <1> 		mov al, 0
  3102 00002A72 E86AFFFFFF          <1> 		call int302
  3103 00002A77 5E                  <1> 		pop esi
  3104 00002A78 8806                <1> 		mov [esi], al
  3105 00002A7A 46                  <1> 		inc esi
  3106 00002A7B 3B35[602A0000]      <1> 		cmp esi, [endbuffer304]
  3107 00002A81 7308                <1> 		jae int304done
  3108 00002A83 3A05[5F2A0000]      <1> 		cmp al, [endkey304]
  3109 00002A89 75E4                <1> 		jne int304b
  3110                              <1> 	int304done:
  3111 00002A8B 4E                  <1> 		dec esi
  3112 00002A8C C60600              <1> 		mov byte [esi], 0
  3113 00002A8F C3                  <1> 	ret
  3114                              <1> 	
  3115 00002A90 00                  <1> endkey305 db 0
  3116 00002A91 00                  <1> modkey305 db 0
  3117 00002A92 00000000            <1> firstesi305 dd 0
  3118 00002A96 00                  <1> commandedit db 0
  3119 00002A97 00                  <1> txtmask db 0
  3120 00002A98 00000000            <1> buftxtloc dd 0
  3121 00002A9C 00000000            <1> endbuffer305 dd 0
  3122 00002AA0 082000              <1> backcursor db 8," ",0
  3123                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer, edi=bufferend
  3124 00002AA3 8935[982A0000]      <1> 		mov [buftxtloc], esi
  3125 00002AA9 A2[902A0000]        <1> 		mov [endkey305], al
  3126 00002AAE 881D[912A0000]      <1> 		mov [modkey305], bl
  3127 00002AB4 8935[922A0000]      <1> 		mov [firstesi305], esi
  3128 00002ABA 893D[9C2A0000]      <1> 		mov [endbuffer305], edi
  3129                              <1> 	int305b:
  3130 00002AC0 56                  <1> 		push esi
  3131 00002AC1 B001                <1> 		mov al, 1
  3132 00002AC3 E819FFFFFF          <1> 		call int302	;then get it
  3133 00002AC8 5E                  <1> 		pop esi
  3134 00002AC9 80FC48              <1> 		cmp ah, 0x48
  3135 00002ACC 0F846F010000        <1> 		je near int305up
  3136 00002AD2 80FC50              <1> 		cmp ah, 0x50
  3137 00002AD5 0F8449010000        <1> 		je near int305down
  3138 00002ADB 80FC4D              <1> 		cmp ah, 0x4D
  3139 00002ADE 0F84FE000000        <1> 		je near int305right
  3140 00002AE4 80FC4B              <1> 		cmp ah, 0x4B
  3141 00002AE7 0F84BC000000        <1> 		je near int305left
  3142 00002AED 3C08                <1> 		cmp al, 8
  3143 00002AEF 0F843F020000        <1> 		je near int305bscheck
  3144 00002AF5 3C00                <1> 		cmp al, 0
  3145 00002AF7 74C7                <1> 		je int305b
  3146 00002AF9 80FC00              <1> 		cmp ah, 0
  3147 00002AFC 74C2                <1> 		je int305b
  3148 00002AFE 8806                <1> 		mov [esi], al
  3149 00002B00 46                  <1> 		inc esi
  3150                              <1> 	bscheckequal:
  3151 00002B01 8A1D[912A0000]      <1> 		mov bl, [modkey305]
  3152 00002B07 8A3D[972A0000]      <1> 		mov bh, [txtmask]
  3153 00002B0D 80FF00              <1> 		cmp bh, 0
  3154 00002B10 7402                <1> 		je nomasktxt
  3155 00002B12 88F8                <1> 		mov al, bh
  3156                              <1> 	nomasktxt:
  3157 00002B14 E8F2FCFFFF          <1> 		call int301
  3158 00002B19 56                  <1> 		push esi
  3159 00002B1A 66A3[A72B0000]      <1> 		mov [int305axcache], ax
  3160 00002B20 8A25[902A0000]      <1> 		mov ah, [endkey305]
  3161 00002B26 38E0                <1> 		cmp al, ah
  3162 00002B28 7429                <1> 		je nobackprintbuftxt2
  3163 00002B2A BE[701A0000]        <1> 		mov esi, buftxt2
  3164 00002B2F E8F2FEFFFF          <1> 		call printquiet
  3165 00002B34 B020                <1> 		mov al, " "
  3166 00002B36 E8DDFCFFFF          <1> 		call int301prnt
  3167 00002B3B B008                <1> 		mov al, 8
  3168 00002B3D 81FE[701A0000]      <1> 		cmp esi, buftxt2
  3169 00002B43 740E                <1> 		je nobackprintbuftxt2
  3170                              <1> 	backprintbuftxt2:
  3171 00002B45 E8CEFCFFFF          <1> 		call int301prnt
  3172 00002B4A 4E                  <1> 		dec esi
  3173 00002B4B 81FE[701A0000]      <1> 		cmp esi, buftxt2
  3174 00002B51 77F2                <1> 		ja backprintbuftxt2
  3175                              <1> 	nobackprintbuftxt2:
  3176 00002B53 E8B3FCFFFF          <1> 		call int301
  3177 00002B58 5E                  <1> 		pop esi
  3178 00002B59 3B35[9C2A0000]      <1> 		cmp esi, [endbuffer305]
  3179 00002B5F 0F8314000000        <1> 		jae near doneint305
  3180 00002B65 66A1[A72B0000]      <1> 		mov ax, [int305axcache]
  3181 00002B6B 8A25[902A0000]      <1> 		mov ah, [endkey305]
  3182 00002B71 38E0                <1> 		cmp al, ah
  3183 00002B73 0F8547FFFFFF        <1> 		jne int305b
  3184                              <1> 	doneint305:
  3185 00002B79 4E                  <1> 		dec esi
  3186 00002B7A BF[701A0000]        <1> 		mov edi, buftxt2
  3187                              <1> 	copylaterstuff:
  3188 00002B7F 8A07                <1> 		mov al, [edi]
  3189 00002B81 3C00                <1> 		cmp al, 0
  3190 00002B83 7406                <1> 		je nocopylaterstuff
  3191 00002B85 8806                <1> 		mov [esi], al
  3192 00002B87 47                  <1> 		inc edi
  3193 00002B88 46                  <1> 		inc esi
  3194 00002B89 EBF4                <1> 		jmp copylaterstuff
  3195                              <1> 	nocopylaterstuff:
  3196 00002B8B C60600              <1> 		mov byte [esi], 0
  3197 00002B8E E801000000          <1> 		call clearbuftxt2
  3198 00002B93 C3                  <1> 		ret
  3199                              <1> 	
  3200                              <1> 	clearbuftxt2:
  3201 00002B94 B000                <1> 		mov al, 0
  3202 00002B96 BF[701A0000]        <1> 		mov edi, buftxt2
  3203                              <1> 	clearbuftxt2lp:
  3204 00002B9B 8807                <1> 		mov [edi], al
  3205 00002B9D 47                  <1> 		inc edi
  3206 00002B9E 81FF[7A1B0000]      <1> 		cmp edi, buftxt
  3207 00002BA4 75F5                <1> 		jne clearbuftxt2lp
  3208 00002BA6 C3                  <1> 		ret
  3209                              <1> 		
  3210 00002BA7 0000                <1> 	int305axcache dw 0
  3211                              <1> 		
  3212                              <1> 	int305left:
  3213 00002BA9 3B35[982A0000]      <1> 		cmp esi, [buftxtloc]
  3214 00002BAF 0F840BFFFFFF        <1> 		je near int305b
  3215 00002BB5 BF[701A0000]        <1> 		mov edi, buftxt2
  3216 00002BBA 8A07                <1> 		mov al, [edi]
  3217                              <1> 	shiftbuftxt2:
  3218 00002BBC 3C00                <1> 		cmp al, 0
  3219 00002BBE 7409                <1> 		je noshiftbuftxt2
  3220 00002BC0 47                  <1> 		inc edi
  3221 00002BC1 8A27                <1> 		mov ah, [edi]
  3222 00002BC3 8807                <1> 		mov [edi], al
  3223 00002BC5 88E0                <1> 		mov al, ah
  3224 00002BC7 EBF3                <1> 		jmp shiftbuftxt2
  3225                              <1> 	noshiftbuftxt2:
  3226 00002BC9 BF[701A0000]        <1> 		mov edi, buftxt2
  3227 00002BCE 4E                  <1> 		dec esi
  3228 00002BCF 8A06                <1> 		mov al, [esi]
  3229 00002BD1 8807                <1> 		mov [edi], al
  3230 00002BD3 C60600              <1> 		mov byte [esi], 0
  3231 00002BD6 B008                <1> 		mov al, 8
  3232 00002BD8 E82EFCFFFF          <1> 		call int301
  3233 00002BDD E9DEFEFFFF          <1> 		jmp int305b
  3234                              <1> 		
  3235                              <1> 	int305right:
  3236 00002BE2 BF[701A0000]        <1> 		mov edi, buftxt2
  3237 00002BE7 8A07                <1> 		mov al, [edi]
  3238 00002BE9 3C00                <1> 		cmp al, 0
  3239 00002BEB 0F84CFFEFFFF        <1> 		je near int305b
  3240 00002BF1 8806                <1> 		mov [esi], al
  3241                              <1> 	shiftbuftxt2lft:
  3242 00002BF3 3C00                <1> 		cmp al, 0
  3243 00002BF5 7408                <1> 		je noshiftbuftxt2lft
  3244 00002BF7 47                  <1> 		inc edi
  3245 00002BF8 8A07                <1> 		mov al, [edi]
  3246 00002BFA 8847FF              <1> 		mov [edi - 1], al
  3247 00002BFD EBF4                <1> 		jmp shiftbuftxt2lft
  3248                              <1> 	noshiftbuftxt2lft:
  3249 00002BFF 8A06                <1> 		mov al, [esi]
  3250 00002C01 46                  <1> 		inc esi
  3251 00002C02 8A1D[912A0000]      <1> 		mov bl, [modkey305]
  3252 00002C08 E8FEFBFFFF          <1> 		call int301
  3253 00002C0D E9AEFEFFFF          <1> 		jmp int305b
  3254                              <1> 		
  3255                              <1> 	int305downbck:
  3256 00002C12 FECC                <1> 		dec ah
  3257 00002C14 8825[962A0000]      <1> 		mov [commandedit], ah
  3258 00002C1A E83A000000          <1> 		call int305bckspc
  3259 00002C1F E99CFEFFFF          <1> 		jmp int305b
  3260                              <1> 	
  3261                              <1> 	int305down:
  3262 00002C24 8A25[962A0000]      <1> 		mov ah, [commandedit]
  3263 00002C2A 80FC01              <1> 		cmp ah, 1
  3264 00002C2D 0F868DFEFFFF        <1> 		jbe near int305b
  3265 00002C33 80FC02              <1> 		cmp ah, 2
  3266 00002C36 74DA                <1> 		je int305downbck
  3267 00002C38 80EC02              <1> 		sub ah, 2
  3268 00002C3B 8825[962A0000]      <1> 		mov [commandedit], ah
  3269                              <1> 		
  3270                              <1> 	int305up:
  3271                              <1> 		;cmp bl, 0xE0
  3272                              <1> 		;jne int305b
  3273 00002C41 B000                <1> 		mov al, 0
  3274 00002C43 3805[962A0000]      <1> 		cmp [commandedit], al
  3275 00002C49 0F8471FEFFFF        <1> 		je near int305b
  3276 00002C4F E805000000          <1> 		call int305bckspc
  3277 00002C54 E93C000000          <1> 		jmp getcurrentcommandstr
  3278                              <1> 	int305bckspc:
  3279 00002C59 3B35[982A0000]      <1> 		cmp esi, [buftxtloc]
  3280 00002C5F 7426                <1> 		je noint305upbck
  3281                              <1> 	int305upbckspclp:
  3282 00002C61 B008                <1> 		mov al, 8
  3283 00002C63 8A1D[912A0000]      <1> 		mov bl, [modkey305]
  3284 00002C69 E8AAFBFFFF          <1> 		call int301prnt
  3285 00002C6E B020                <1> 		mov al, " "
  3286 00002C70 E8A3FBFFFF          <1> 		call int301prnt
  3287 00002C75 B008                <1> 		mov al, 8
  3288 00002C77 E88FFBFFFF          <1> 		call int301
  3289 00002C7C 4E                  <1> 		dec esi
  3290 00002C7D 3B35[982A0000]      <1> 		cmp esi, [buftxtloc]
  3291 00002C83 7402                <1> 		je noint305upbck
  3292 00002C85 EBDA                <1> 		jmp int305upbckspclp
  3293                              <1> 	noint305upbck:
  3294 00002C87 8B3D[1B310000]      <1> 		mov edi, [currentcommandpos]
  3295 00002C8D 81C7[1F310000]      <1> 		add edi, commandbuf
  3296 00002C93 4F                  <1> 		dec edi
  3297 00002C94 C3                  <1> 		ret
  3298                              <1> 	getcurrentcommandstr:
  3299 00002C95 8A25[962A0000]      <1> 		mov ah, [commandedit]
  3300 00002C9B FE05[962A0000]      <1> 		inc byte [commandedit]
  3301                              <1> 	getccmdlp:
  3302 00002CA1 4F                  <1> 		dec edi
  3303 00002CA2 8A07                <1> 		mov al, [edi]
  3304 00002CA4 81FF[1F310000]      <1> 		cmp edi, commandbuf
  3305 00002CAA 7231                <1> 		jb getcmdresetcommandbuf
  3306 00002CAC 81EF[1F310000]      <1> 		sub edi, commandbuf
  3307 00002CB2 3B3D[1B310000]      <1> 		cmp edi, [currentcommandpos]
  3308 00002CB8 0F8402FEFFFF        <1> 		je near int305b
  3309 00002CBE 81C7[1F310000]      <1> 		add edi, commandbuf
  3310 00002CC4 3C00                <1> 		cmp al, 0
  3311 00002CC6 75D9                <1> 		jne getccmdlp
  3312 00002CC8 FECC                <1> 		dec ah
  3313 00002CCA 80FC00              <1> 		cmp ah, 0
  3314 00002CCD 77D2                <1> 		ja getccmdlp
  3315 00002CCF 47                  <1> 		inc edi
  3316 00002CD0 81FF[1F350000]      <1> 		cmp edi, commandbufend
  3317 00002CD6 770D                <1> 		ja fixcmdbufb4moreint305
  3318 00002CD8 E915000000          <1> 		jmp moreint305up
  3319                              <1> 	getcmdresetcommandbuf:
  3320 00002CDD BF[1F350000]        <1> 		mov edi, commandbufend
  3321 00002CE2 47                  <1> 		inc edi
  3322 00002CE3 EBBC                <1> 		jmp getccmdlp
  3323                              <1> 	fixcmdbufb4moreint305:
  3324 00002CE5 4F                  <1> 		dec edi
  3325 00002CE6 81EF[1F350000]      <1> 		sub edi, commandbufend
  3326 00002CEC 81C7[1F310000]      <1> 		add edi, commandbuf
  3327                              <1> 	moreint305up:
  3328 00002CF2 8A07                <1> 		mov al, [edi]
  3329 00002CF4 47                  <1> 		inc edi
  3330 00002CF5 81EF[1F310000]      <1> 		sub edi, commandbuf
  3331 00002CFB 3C00                <1> 		cmp al, 0
  3332 00002CFD 0F84BDFDFFFF        <1> 		je near int305b
  3333 00002D03 3B3D[1B310000]      <1> 		cmp edi, [currentcommandpos]
  3334 00002D09 0F83B1FDFFFF        <1> 		jae near int305b
  3335 00002D0F 81C7[1F310000]      <1> 		add edi, commandbuf
  3336 00002D15 8806                <1> 		mov [esi], al
  3337 00002D17 46                  <1> 		inc esi
  3338 00002D18 57                  <1> 		push edi
  3339 00002D19 8A1D[912A0000]      <1> 		mov bl, [modkey305]
  3340 00002D1F E8E7FAFFFF          <1> 		call int301
  3341 00002D24 5F                  <1> 		pop edi
  3342 00002D25 81FF[1F350000]      <1> 		cmp edi, commandbufend
  3343 00002D2B 76C5                <1> 		jbe moreint305up
  3344 00002D2D BF[1F310000]        <1> 		mov edi, commandbuf
  3345 00002D32 EBBE                <1> 		jmp moreint305up
  3346                              <1> 	int305bscheck:
  3347 00002D34 3B35[922A0000]      <1> 		cmp esi, [firstesi305]
  3348 00002D3A 7705                <1> 		ja goodbscheck
  3349 00002D3C E97FFDFFFF          <1> 		jmp int305b
  3350                              <1> 	goodbscheck:
  3351 00002D41 4E                  <1> 		dec esi
  3352 00002D42 C60600              <1> 		mov byte [esi], 0
  3353 00002D45 8A1D[912A0000]      <1> 		mov bl, [modkey305]
  3354 00002D4B B008                <1> 		mov al, 8
  3355 00002D4D E9AFFDFFFF          <1> 		jmp bscheckequal
  3356                              <1> 	
  3357                              <1> 		
  3358                              <1> 	clear:		
  3359                              <1> 	
  3360                              <1> 	int306:	;;clear screen
  3361 00002D52 668B0D[07280000]    <1> 		mov cx, [charxy]
  3362 00002D59 BF[8F1D0000]        <1> 		mov edi, videobuf2
  3363 00002D5E 66B80000            <1> 		mov ax, 0
  3364 00002D62 66A3[01280000]      <1> 		mov [linebeginpos], ax
  3365 00002D68 66A3[03280000]      <1> 		mov [videobufpos], ax
  3366 00002D6E 66BA0000            <1> 		mov dx, 0
  3367 00002D72 66A3[05280000]      <1> 		mov [charpos], ax
  3368                              <1> 	int306b:
  3369 00002D78 668907              <1> 		mov [edi], ax
  3370 00002D7B 81C702000000        <1> 		add edi, 2
  3371 00002D81 80E902              <1> 		sub cl, 2
  3372 00002D84 80F900              <1> 		cmp cl, 0
  3373 00002D87 75EF                <1> 		jne int306b
  3374 00002D89 8A0D[07280000]      <1> 		mov cl, [charxy]
  3375 00002D8F FECD                <1> 		dec ch
  3376 00002D91 80FD00              <1> 		cmp ch, 0
  3377 00002D94 75E2                <1> 		jne int306b
  3378 00002D96 E807000000          <1> 		call termcopy
  3379 00002D9B C3                  <1> 		ret
  3380                              <1> 		
  3381 00002D9C 00000000            <1> 	termcursorpos dd 0
  3382 00002DA0 0000                <1> 	removedvideo dw 0
  3383                              <1> termcopy:	
  3384 00002DA2 60                  <1> 	pusha
  3385 00002DA3 BF[8F1D0000]        <1> 	mov edi, videobuf2
  3386 00002DA8 BB00000000          <1> 	mov ebx, 0
  3387 00002DAD 668B1D[03280000]    <1> 	mov bx, [videobufpos]
  3388 00002DB4 01DF                <1> 	add edi, ebx
  3389 00002DB6 893D[9C2D0000]      <1> 	mov [termcursorpos], edi
  3390 00002DBC E8C0000000          <1> 	call switchtermcursor
  3391 00002DC1 C605[03500000]00    <1> 	mov byte [mouseselecton], 0
  3392 00002DC8 C605[17280000]01    <1> 	mov byte [termcopyon], 1
  3393 00002DCF 803D[04500000]00    <1> 	cmp byte [guion], 0
  3394 00002DD6 0F8412000000        <1> 	je near nowincopy
  3395 00002DDC 803D[16280000]01    <1> 	cmp byte [termguion], 1
  3396 00002DE3 0F841A2E0000        <1> 	je near windowvideocopy
  3397 00002DE9 E98C000000          <1> 	jmp nocopytermatall
  3398                              <1> nowincopy:
  3399 00002DEE BE00000A00          <1> 	mov esi, 0xA0000
  3400 00002DF3 A1[44040000]        <1> 	mov eax, [basecache]
  3401 00002DF8 C1E004              <1> 	shl eax, 4
  3402 00002DFB 29C6                <1> 	sub esi, eax
  3403 00002DFD BF[8F1D0000]        <1> 	mov edi, videobuf2
  3404 00002E02 B900000000          <1> 	mov ecx, 0
  3405 00002E07 668B0D[07280000]    <1> 	mov cx, [charxy]
  3406                              <1> nowincopy2:
  3407 00002E0E BB[9C730000]        <1> 	mov ebx, fonts
  3408 00002E13 B800000000          <1> 	mov eax, 0
  3409 00002E18 8A07                <1> 	mov al, [edi]
  3410 00002E1A C1E004              <1> 	shl eax, 4
  3411 00002E1D 01C3                <1> 	add ebx, eax
  3412 00002E1F 47                  <1> 	inc edi
  3413 00002E20 8A27                <1> 	mov ah, [edi]
  3414 00002E22 BA00000000          <1> 	mov edx, 0
  3415 00002E27 8A15[07280000]      <1> 	mov dl, [charxy]
  3416 00002E2D D1EA                <1> 	shr edx, 1
  3417 00002E2F C1C110              <1> 	rol ecx, 16
  3418 00002E32 B110                <1> 	mov cl, 16
  3419                              <1> nowinfont:
  3420 00002E34 8A03                <1> 	mov al, [ebx]
  3421 00002E36 D0C8                <1> 	ror al, 1
  3422 00002E38 80FC07              <1> 	cmp ah, 7
  3423 00002E3B 7602                <1> 	jbe notnotfont
  3424 00002E3D F6D0                <1> 	not al
  3425                              <1> notnotfont:
  3426 00002E3F 8806                <1> 	mov [esi], al
  3427 00002E41 01D6                <1> 	add esi, edx
  3428 00002E43 43                  <1> 	inc ebx
  3429 00002E44 FEC9                <1> 	dec cl
  3430 00002E46 80F900              <1> 	cmp cl, 0
  3431 00002E49 75E9                <1> 	jne nowinfont
  3432 00002E4B C1E204              <1> 	shl edx, 4
  3433 00002E4E 29D6                <1> 	sub esi, edx
  3434 00002E50 C1C110              <1> 	rol ecx, 16
  3435                              <1> nopresentwinfont:
  3436 00002E53 47                  <1> 	inc edi
  3437 00002E54 46                  <1> 	inc esi
  3438 00002E55 80E902              <1> 	sub cl, 2
  3439 00002E58 80F900              <1> 	cmp cl, 0
  3440 00002E5B 75B1                <1> 	jne nowincopy2
  3441 00002E5D 8A0D[07280000]      <1> 	mov cl, [charxy]
  3442 00002E63 BA00000000          <1> 	mov edx, 0
  3443 00002E68 88CA                <1> 	mov dl, cl
  3444 00002E6A D1EA                <1> 	shr edx, 1
  3445 00002E6C 29D6                <1> 	sub esi, edx
  3446 00002E6E C1E204              <1> 	shl edx, 4
  3447 00002E71 01D6                <1> 	add esi, edx
  3448 00002E73 FECD                <1> 	dec ch
  3449 00002E75 80FD00              <1> 	cmp ch, 0
  3450 00002E78 7594                <1> 	jne nowincopy2
  3451                              <1> nocopytermatall:
  3452 00002E7A E802000000          <1> 	call switchtermcursor
  3453 00002E7F 61                  <1> 	popa
  3454 00002E80 C3                  <1> 	ret
  3455                              <1> 	
  3456                              <1> switchtermcursor:
  3457 00002E81 8B3D[9C2D0000]      <1> 	mov edi, [termcursorpos]
  3458 00002E87 8A4701              <1> 	mov al, [edi + 1]
  3459 00002E8A 8A27                <1> 	mov ah, [edi]
  3460 00002E8C 3C07                <1> 	cmp al, 7
  3461 00002E8E 7607                <1> 	jbe movlargecursorterm
  3462 00002E90 B007                <1> 	mov al, 7
  3463 00002E92 E902000000          <1> 	jmp movedcursorterm
  3464                              <1> movlargecursorterm:
  3465 00002E97 B0F0                <1> 	mov al, 0xF0
  3466                              <1> movedcursorterm:
  3467 00002E99 884701              <1> 	mov [edi + 1], al
  3468 00002E9C 80FC00              <1> 	cmp ah, 0
  3469 00002E9F 7504                <1> 	jne fixednocursorterm
  3470 00002EA1 B420                <1> 	mov ah, " "
  3471 00002EA3 8827                <1> 	mov [edi], ah
  3472                              <1> fixednocursorterm:
  3473 00002EA5 C3                  <1> 	ret
  3474                              <1> 	
  3475                                      %include 'source/dosints.asm'
  3476                              <1> int21h:
  3477 00002EA6 80FC01              <1> 	cmp ah, 1
  3478 00002EA9 0F8437000000        <1> 	je near dosgchar
  3479 00002EAF 80FC02              <1> 	cmp ah, 2
  3480 00002EB2 0F8435000000        <1> 	je near doswchar
  3481 00002EB8 80FC09              <1> 	cmp ah, 9
  3482 00002EBB 0F8433000000        <1> 	je near dosprintstr
  3483 00002EC1 80FC0A              <1> 	cmp ah, 0xA
  3484 00002EC4 0F8439000000        <1> 	je near dosgetstr
  3485 00002ECA 80FC2B              <1> 	cmp ah, 0x2B
  3486 00002ECD 0F846E000000        <1> 	je near dosgetdate
  3487 00002ED3 80FC2C              <1> 	cmp ah, 0x2C
  3488 00002ED6 0F8484000000        <1> 	je near dosgettime
  3489 00002EDC 80FC4C              <1> 	cmp ah, 0x4C
  3490 00002EDF 0F8495000000        <1> 	je near dosexit
  3491 00002EE5 C3                  <1> 	ret
  3492                              <1> 
  3493                              <1> dosgchar:
  3494 00002EE6 B405                <1> 	mov ah, 5
  3495 00002EE8 B000                <1> 	mov al, 0
  3496 00002EEA CD30                <1> 	int 30h
  3497 00002EEC C3                  <1> 	ret
  3498                              <1> 	
  3499                              <1> doswchar:
  3500 00002EED B307                <1> 	mov bl, 7
  3501 00002EEF B406                <1> 	mov ah, 6
  3502 00002EF1 CD30                <1> 	int 30h
  3503 00002EF3 C3                  <1> 	ret
  3504                              <1> 	
  3505                              <1> dosprintstr:
  3506 00002EF4 8B3424              <1> 	mov esi, [esp]
  3507 00002EF7 6689D6              <1> 	mov si, dx
  3508 00002EFA B024                <1> 	mov al, "$"
  3509 00002EFC B401                <1> 	mov ah, 1
  3510 00002EFE B307                <1> 	mov bl, 7
  3511 00002F00 CD30                <1> 	int 30h
  3512 00002F02 C3                  <1> 	ret
  3513                              <1> 	
  3514                              <1> dosgetstr:
  3515 00002F03 8B3424              <1> 	mov esi, [esp]
  3516 00002F06 6689D6              <1> 	mov si, dx
  3517 00002F09 B900000000          <1> 	mov ecx, 0
  3518 00002F0E 8A0E                <1> 	mov cl, [esi]
  3519 00002F10 81C603000000        <1> 	add esi, 3
  3520 00002F16 89F7                <1> 	mov edi, esi
  3521 00002F18 8935[3D2F0000]      <1> 	mov [stringstart], esi
  3522 00002F1E 01CF                <1> 	add edi, ecx
  3523 00002F20 B00D                <1> 	mov al, 13
  3524 00002F22 B404                <1> 	mov ah, 4
  3525 00002F24 B307                <1> 	mov bl, 7
  3526 00002F26 CD30                <1> 	int 30h
  3527 00002F28 89F1                <1> 	mov ecx, esi
  3528 00002F2A 2B0D[3D2F0000]      <1> 	sub ecx, [stringstart]
  3529 00002F30 8B35[3D2F0000]      <1> 	mov esi, [stringstart]
  3530 00002F36 884EFF              <1> 	mov [esi - 1], cl
  3531 00002F39 884EFE              <1> 	mov [esi - 2], cl
  3532 00002F3C C3                  <1> 	ret
  3533 00002F3D 00000000            <1> stringstart dd 0
  3534                              <1> 
  3535                              <1> dosgetdate:
  3536 00002F41 E8EB150000          <1> 	call time
  3537 00002F46 8A0D[18470000]      <1> 	mov cl, [RTCtimeYear]
  3538 00002F4C B500                <1> 	mov ch, 0
  3539 00002F4E 6681C1D007          <1> 	add cx, 2000
  3540 00002F53 8A35[17470000]      <1> 	mov dh, [RTCtimeMonth]
  3541 00002F59 8A15[16470000]      <1> 	mov dl, [RTCtimeDay]
  3542 00002F5F C3                  <1> 	ret
  3543                              <1> 
  3544                              <1> dosgettime:
  3545 00002F60 E8CC150000          <1> 	call time
  3546 00002F65 8A2D[15470000]      <1> 	mov ch, [RTCtimeHour]
  3547 00002F6B 8A0D[14470000]      <1> 	mov cl, [RTCtimeMinute]
  3548 00002F71 8A35[13470000]      <1> 	mov dh, [RTCtimeSecond]
  3549 00002F77 B200                <1> 	mov dl, 0
  3550 00002F79 C3                  <1> 	ret
  3551                              <1> 	
  3552                              <1> dosexit:
  3553 00002F7A 66B80000            <1> 	mov ax, 0
  3554 00002F7E CD30                <1> 	int 30h
  3555                                      %include 'source/solleros.asm'
  3556                              <1> 	;SOLLEROS.ASM
  3557                              <1> os:
  3558 00002F80 E8CDFDFFFF          <1> 	call clear
  3559 00002F85 BE[53730000]        <1> 	mov esi, userask
  3560 00002F8A E8A5FAFFFF          <1> 	call print
  3561                              <1> usercheck:
  3562 00002F8F BE[7A1B0000]        <1> 	mov esi, buftxt
  3563 00002F94 BF[7A1D0000]        <1> 	mov edi, buftxtend
  3564 00002F99 B00D                <1> 	mov al, 13
  3565 00002F9B E803FBFFFF          <1> 	call int305
  3566 00002FA0 56                  <1> 	push esi
  3567 00002FA1 BE[73730000]        <1> 	mov esi, line
  3568 00002FA6 E889FAFFFF          <1> 	call print
  3569 00002FAB BE[5D730000]        <1> 	mov esi, pwdask
  3570 00002FB0 E87FFAFFFF          <1> 	call print
  3571 00002FB5 5E                  <1> 	pop esi
  3572 00002FB6 46                  <1> 	inc esi
  3573 00002FB7 8935[6F300000]      <1> 	mov [esipass], esi
  3574                              <1> passcheck:
  3575 00002FBD B000                <1> 	mov al, 0
  3576 00002FBF E81DFAFFFF          <1> 	call int302
  3577 00002FC4 3C0D                <1> 	cmp al, 13
  3578 00002FC6 0F8436000000        <1> 	je near gotpass
  3579 00002FCC 3C08                <1> 	cmp al, 8
  3580 00002FCE 0F8410000000        <1> 	je near backpass
  3581 00002FD4 8806                <1> 	mov [esi], al
  3582 00002FD6 46                  <1> 	inc esi
  3583 00002FD7 B02A                <1> 	mov al, '*'
  3584 00002FD9 E82DF8FFFF          <1> 	call int301
  3585 00002FDE EBDD                <1> 	jmp passcheck
  3586 00002FE0 08200800            <1> backcursor2 db 8," ",8,0
  3587                              <1> backpass:
  3588 00002FE4 3B35[6F300000]      <1> 	cmp esi, [esipass]
  3589 00002FEA 0F84CDFFFFFF        <1> 	je near passcheck
  3590 00002FF0 4E                  <1> 	dec esi
  3591 00002FF1 C60600              <1> 	mov byte [esi], 0
  3592 00002FF4 56                  <1> 	push esi
  3593 00002FF5 BE[E02F0000]        <1> 	mov esi, backcursor2
  3594 00002FFA E835FAFFFF          <1> 	call print
  3595 00002FFF 5E                  <1> 	pop esi
  3596 00003000 EBBB                <1> 	jmp passcheck
  3597                              <1> gotpass:
  3598 00003002 B000                <1> 	mov al,0
  3599 00003004 8806                <1> 	mov [esi], al
  3600 00003006 BE[73730000]        <1> 	mov esi, line
  3601 0000300B E824FAFFFF          <1> 	call print
  3602 00003010 BB[79730000]        <1> 	mov ebx, userlst
  3603                              <1> userfind:
  3604 00003015 BE[7A1B0000]        <1> 	mov esi, buftxt
  3605 0000301A 8A06                <1> 	mov al, [esi]
  3606 0000301C 3C00                <1> 	cmp al, 0
  3607 0000301E 0F845CFFFFFF        <1> 	je near os
  3608 00003024 891D[73300000]      <1> 	mov [usercache], ebx
  3609 0000302A E87B020000          <1> 	call tester
  3610 0000302F 3C01                <1> 	cmp al, 1
  3611 00003031 7415                <1> 	je pwdtest
  3612                              <1> nxtuser:
  3613 00003033 43                  <1> 	inc ebx
  3614 00003034 8A03                <1> 	mov al, [ebx]
  3615 00003036 3C00                <1> 	cmp al, 0
  3616 00003038 74DB                <1> 	je userfind
  3617 0000303A 81FB[9C730000]      <1> 	cmp ebx, userlstend
  3618 00003040 0F833AFFFFFF        <1> 	jae near os
  3619 00003046 EBCD                <1> 	jmp userfind
  3620                              <1> pwdtest:
  3621 00003048 46                  <1> 	inc esi
  3622 00003049 43                  <1> 	inc ebx
  3623 0000304A E85B020000          <1> 	call tester
  3624 0000304F 3C01                <1> 	cmp al, 1
  3625 00003051 7402                <1> 	je pwdrgt
  3626 00003053 EBDE                <1> 	jmp nxtuser
  3627 00003055 E8F8FCFFFF          <1> pwdrgt:	call clear
  3628 0000305A 66B90002            <1> 	mov cx, 200h
  3629 0000305E BE[7A1B0000]        <1> 	mov esi, buftxt
  3630 00003063 B000                <1> 	mov al, 0
  3631 00003065 8806                <1> bufclr:	mov [esi], al
  3632 00003067 46                  <1> 	inc esi
  3633 00003068 E2FB                <1> 	loop bufclr
  3634                              <1> ;;;;;;;;;;;;;;;;
  3635 0000306A E935000000          <1> 	jmp nwcmd
  3636                              <1> 
  3637 0000306F 00000000            <1> esipass dd 0
  3638 00003073 [79730000]          <1> usercache dd userlst
  3639                              <1> 	
  3640                              <1> buftxtclear:
  3641 00003077 B000                <1> 	mov al, 0
  3642 00003079 BE[7A1B0000]        <1> 	mov esi, buftxt
  3643 0000307E 81FE[7A1D0000]      <1> clearbuftxt: cmp esi, buf2
  3644 00003084 730E                <1> 	jae retbufclr
  3645 00003086 8806                <1> 	mov [esi], al
  3646 00003088 46                  <1> 	inc esi
  3647 00003089 EBF3                <1> 	jmp clearbuftxt
  3648                              <1> 
  3649 0000308B 39DE                <1> clearitbuf: cmp esi, ebx
  3650 0000308D 7305                <1> 	jae retbufclr
  3651 0000308F 8806                <1> 	mov [esi], al
  3652 00003091 46                  <1> 	inc esi
  3653 00003092 EBF7                <1> 	jmp clearitbuf
  3654 00003094 C3                  <1> retbufclr: ret
  3655                              <1> 
  3656 00003095 E90A000000          <1> full:	jmp nwcmd
  3657                              <1> 
  3658                              <1> nwcmd2:
  3659 0000309A BE[73730000]        <1> 	mov esi, line
  3660 0000309F E890F9FFFF          <1> 	call print
  3661                              <1> 
  3662                              <1> nwcmd:	
  3663 000030A4 803D[576C0000]02    <1> 	cmp byte [threadson], 2
  3664 000030AB 7508                <1> 	jne noclinwcmd
  3665 000030AD FA                  <1> 	cli
  3666 000030AE C605[576C0000]00    <1> 	mov byte [threadson], 0
  3667                              <1> noclinwcmd:
  3668 000030B5 B001                <1> 	mov al, 1
  3669 000030B7 3805[69150000]      <1> 	cmp [BATCHISON], al
  3670 000030BD 0F83B2000000        <1> 	jae near batchran
  3671 000030C3 B000                <1> cancel:	mov al, 0
  3672 000030C5 A2[00150000]        <1> 	mov [IFON], al
  3673 000030CA A2[69150000]        <1> 	mov [BATCHISON], al
  3674 000030CF B05B                <1> 	mov al, '['
  3675 000030D1 B406                <1> 	mov ah, 6
  3676 000030D3 66BB0700            <1> 	mov bx, 7
  3677 000030D7 E83CF7FFFF          <1> 	call int301prnt
  3678 000030DC 8B35[73300000]      <1> 	mov esi, [usercache]
  3679 000030E2 E84DF9FFFF          <1> 	call print
  3680 000030E7 BE[67730000]        <1> 	mov esi, location
  3681 000030EC E843F9FFFF          <1> 	call print
  3682 000030F1 E881FFFFFF          <1> 	call buftxtclear
  3683 000030F6 BE[7A1B0000]        <1> 	mov esi, buftxt
  3684 000030FB C605[962A0000]01    <1> 	mov byte [commandedit], 1
  3685 00003102 B00D                <1> 	mov al, 13
  3686 00003104 66BB0700            <1> 	mov bx, 7
  3687 00003108 BF[7A1D0000]        <1> 	mov edi, buftxtend
  3688 0000310D E891F9FFFF          <1> 	call int305
  3689 00003112 C605[962A0000]00    <1> 	mov byte [commandedit], 0
  3690 00003119 803D[7A1B0000]00    <1> 	cmp byte [buftxt], 0
  3691 00003120 0F8474FFFFFF        <1> 	je near nwcmd2
  3692 00003126 8B35[1B310000]      <1> gotcmd:	mov esi, [currentcommandpos]
  3693 0000312C 8935[17310000]      <1> 	mov [lastcommandpos], esi
  3694 00003132 BF[7A1B0000]        <1> 	mov edi, buftxt
  3695 00003137 81C6[1F310000]      <1> 	add esi, commandbuf
  3696 0000313D 81FE[1F350000]      <1> 	cmp esi, commandbufend
  3697 00003143 7605                <1> 	jbe copycommand
  3698 00003145 BE[1F310000]        <1> 	mov esi, commandbuf
  3699                              <1> copycommand:
  3700 0000314A 8A07                <1> 	mov al, [edi]
  3701 0000314C 8806                <1> 	mov [esi], al
  3702 0000314E 47                  <1> 	inc edi
  3703 0000314F 46                  <1> 	inc esi
  3704 00003150 3C00                <1> 	cmp al, 0
  3705 00003152 740F                <1> 	je donecopy
  3706 00003154 81FE[1F350000]      <1> 	cmp esi, commandbufend
  3707 0000315A 76EE                <1> 	jbe copycommand
  3708 0000315C BE[1F310000]        <1> 	mov esi, commandbuf
  3709 00003161 EBE7                <1> 	jmp copycommand
  3710                              <1> donecopy:
  3711 00003163 81EE[1F310000]      <1> 	sub esi, commandbuf
  3712 00003169 8935[1B310000]      <1> 	mov [currentcommandpos], esi
  3713 0000316F FB                  <1> 	sti
  3714 00003170 E985000000          <1> 	jmp run
  3715                              <1> 	
  3716                              <1> batchran:
  3717 00003175 C3                  <1> 	ret
  3718                              <1> 
  3719 00003176 E8FCFEFFFF          <1> input:	call buftxtclear
  3720 0000317B BE[7A1B0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  3721 00003180 BF[7A1D0000]        <1> 	mov edi, buftxtend
  3722 00003185 B00D                <1> stdin:	mov al, 13
  3723 00003187 B307                <1> 	mov bl, 7
  3724 00003189 B404                <1> 	mov ah, 4
  3725 0000318B CD30                <1> 	int 30h
  3726 0000318D C3                  <1> 	ret
  3727                              <1> 
  3728                              <1> replacevariable:
  3729 0000318E 56                  <1> 	push esi
  3730 0000318F 81EE[7A1B0000]      <1> 	sub esi, buftxt
  3731 00003195 89F7                <1> 	mov edi, esi
  3732 00003197 81C6[7A1B0000]      <1> 	add esi, buftxt
  3733 0000319D 47                  <1> 	inc edi
  3734 0000319E BB[6F150000]        <1> 	mov ebx, variables
  3735 000031A3 E886070000          <1> 	call nxtvrech
  3736 000031A8 89F7                <1> 	mov edi, esi
  3737 000031AA BB00000000          <1> 	mov ebx, 0
  3738 000031AF 4E                  <1> 	dec esi
  3739                              <1> findvarname:
  3740 000031B0 4E                  <1> 	dec esi
  3741 000031B1 8A06                <1> 	mov al, [esi]
  3742 000031B3 43                  <1> 	inc ebx
  3743 000031B4 3C04                <1> 	cmp al, 4
  3744 000031B6 75F8                <1> 	jne findvarname
  3745 000031B8 5E                  <1> 	pop esi
  3746                              <1> replacevarloop:
  3747 000031B9 8A07                <1> 	mov al, [edi]
  3748 000031BB 3C00                <1> 	cmp al, 0
  3749 000031BD 0F8446000000        <1> 	je near fixvariables
  3750 000031C3 81FB00000000        <1> 	cmp ebx, 0
  3751 000031C9 0F8407000000        <1> 	je near expandbuftxt
  3752 000031CF 8806                <1> 	mov [esi], al
  3753 000031D1 4B                  <1> 	dec ebx
  3754 000031D2 46                  <1> 	inc esi
  3755 000031D3 47                  <1> 	inc edi
  3756 000031D4 EBE3                <1> 	jmp replacevarloop
  3757                              <1> expandbuftxt:
  3758 000031D6 89F1                <1> 	mov ecx, esi
  3759 000031D8 8A26                <1> 	mov ah, [esi]
  3760                              <1> expandbuftxtlp:
  3761 000031DA 8A1E                <1> 	mov bl, [esi]
  3762 000031DC 46                  <1> 	inc esi
  3763 000031DD 8A3E                <1> 	mov bh, [esi]
  3764 000031DF 8826                <1> 	mov [esi], ah
  3765 000031E1 88FC                <1> 	mov ah, bh
  3766 000031E3 80FB00              <1> 	cmp bl, 0
  3767 000031E6 75F2                <1> 	jne expandbuftxtlp
  3768 000031E8 89CE                <1> 	mov esi, ecx
  3769 000031EA 8806                <1> 	mov [esi], al
  3770 000031EC 47                  <1> 	inc edi
  3771 000031ED 8A07                <1> 	mov al, [edi]
  3772 000031EF 3C00                <1> 	cmp al, 0
  3773 000031F1 0F8412000000        <1> 	je near fixvariables
  3774 000031F7 46                  <1> 	inc esi
  3775 000031F8 EBDC                <1> 	jmp expandbuftxt
  3776                              <1> 	
  3777                              <1> 	
  3778                              <1> run:	
  3779 000031FA BE[73730000]        <1> 	mov esi, line		;;I should add some sort of command line parsing before it is processed to replace variables with stuff
  3780 000031FF E830F8FFFF          <1> 	call print
  3781 00003204 BE[7A1B0000]        <1> 	mov esi, buftxt
  3782                              <1> fixvariables:
  3783 00003209 46                  <1> 	inc esi
  3784 0000320A 8A06                <1> 	mov al, [esi]
  3785 0000320C 3C24                <1> 	cmp al, '$'
  3786 0000320E 0F847AFFFFFF        <1> 	je near replacevariable
  3787 00003214 3C00                <1> 	cmp al, 0
  3788 00003216 75F1                <1> 	jne fixvariables
  3789                              <1> 
  3790 00003218 803D[1E380000]00    <1> 	cmp byte [indexdone], 0
  3791 0000321F 7505                <1> 	jne progtest
  3792 00003221 E863050000          <1> 	call indexfiles
  3793                              <1> progtest:
  3794 00003226 BE[7A1B0000]        <1> 	mov esi, buftxt
  3795 0000322B BB[00130000]        <1> 	mov ebx, fileindex
  3796 00003230 668B03              <1> prgnxt:	mov ax, [ebx]
  3797 00003233 B105                <1> 	mov cl, 5
  3798 00003235 B504                <1> 	mov ch, 4
  3799 00003237 6639C8              <1> 	cmp ax, cx
  3800 0000323A 740B                <1> 	je fndprg
  3801 0000323C 43                  <1> 	inc ebx
  3802 0000323D 81FB[00150000]      <1> 	cmp ebx, fileindexend
  3803 00003243 7339                <1> 	jae prgnf
  3804 00003245 EBE9                <1> 	jmp prgnxt
  3805 00003247 81C302000000        <1> fndprg: add ebx, 2
  3806 0000324D BE[7A1B0000]        <1> 	mov esi, buftxt
  3807 00003252 66B90000            <1> 	mov cx, 0
  3808 00003256 E889000000          <1> 	call cndtest
  3809 0000325B 3C01                <1> 	cmp al, 1
  3810 0000325D 7302                <1> 	jae prggood
  3811 0000325F EBCF                <1> 	jmp prgnxt
  3812 00003261 81FB[00150000]      <1> prggood: cmp ebx, fileindexend
  3813 00003267 733C                <1> 	jae prgdn
  3814 00003269 81C303000000        <1> 	add ebx, 3
  3815 0000326F 8B3B                <1> 	mov edi, [ebx]
  3816 00003271 C605[576C0000]02    <1> 	mov byte [threadson], 2
  3817 00003278 B020                <1> 	mov al, 0x20
  3818 0000327A E620                <1> 	out 0x20, al
  3819                              <1> 	;sti
  3820 0000327C FFE7                <1> 	jmp edi
  3821                              <1> prgnf:	
  3822 0000327E A0[7A1B0000]        <1> 	mov al, [buftxt]
  3823 00003283 3C00                <1> 	cmp al, 0
  3824 00003285 741E                <1> 	je prgdn
  3825 00003287 BE[3A730000]        <1> 	mov esi, notfound1
  3826 0000328C E8A3F7FFFF          <1> 	call print
  3827 00003291 BE[7A1B0000]        <1> 	mov esi, buftxt
  3828 00003296 E899F7FFFF          <1> 	call print
  3829 0000329B BE[44730000]        <1> 	mov esi, notfound2
  3830 000032A0 E88FF7FFFF          <1> 	call print
  3831 000032A5 E9FAFDFFFF          <1> prgdn:	jmp nwcmd
  3832                              <1> 
  3833                              <1> 
  3834                              <1> tester:			;si=user bx=prog returns 1 in al if true
  3835 000032AA B000                <1> 	mov al, 0
  3836 000032AC 8A06                <1> retest:	mov al, [esi]
  3837 000032AE 8A23                <1> 	mov ah, [ebx]
  3838 000032B0 3C00                <1> 	cmp al, 0
  3839 000032B2 7408                <1> 	je testtrue
  3840 000032B4 38E0                <1> 	cmp al, ah
  3841 000032B6 750C                <1> 	jne testfalse
  3842 000032B8 43                  <1> 	inc ebx
  3843 000032B9 46                  <1> 	inc esi
  3844 000032BA EBF0                <1> 	jmp retest
  3845                              <1> testtrue:
  3846 000032BC 80FC00              <1> 	cmp ah, 0
  3847 000032BF 7503                <1> 	jne testfalse
  3848 000032C1 B001                <1> 	mov al, 1
  3849 000032C3 C3                  <1> 	ret
  3850                              <1> testfalse:
  3851 000032C4 B000                <1> 	mov al, 0
  3852 000032C6 C3                  <1> 	ret
  3853                              <1> 
  3854                              <1> optest:			;si=user bx=prog returns 1 in al if true
  3855 000032C7 B000                <1> 	mov al, 0
  3856                              <1> opretest:
  3857 000032C9 8A06                <1> 	mov al, [esi]
  3858 000032CB 8A23                <1> 	mov ah, [ebx]
  3859 000032CD 38E0                <1> 	cmp al, ah
  3860 000032CF 7510                <1> 	jne optestfalse
  3861 000032D1 80FC00              <1> 	cmp ah, 0
  3862 000032D4 7404                <1> 	je optesttrue
  3863 000032D6 43                  <1> 	inc ebx
  3864 000032D7 46                  <1> 	inc esi
  3865 000032D8 EBEF                <1> 	jmp opretest
  3866                              <1> optesttrue:
  3867 000032DA 3C00                <1> 	cmp al, 0
  3868 000032DC 7503                <1> 	jne optestfalse
  3869 000032DE B001                <1> 	mov al, 1
  3870 000032E0 C3                  <1> 	ret
  3871                              <1> optestfalse:
  3872 000032E1 B000                <1> 	mov al, 0
  3873 000032E3 C3                  <1> 	ret
  3874                              <1> 
  3875                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  3876 000032E4 B000                <1> 	mov al, 0
  3877 000032E6 8A06                <1> cndretest:	mov al, [esi]
  3878 000032E8 8A23                <1> 	mov ah, [ebx]
  3879 000032EA 38CC                <1> 	cmp ah, cl
  3880 000032EC 7408                <1> 	je cndtesttrue
  3881 000032EE 38E0                <1> 	cmp al, ah
  3882 000032F0 750B                <1> 	jne cndtestfalse
  3883 000032F2 43                  <1> 	inc ebx
  3884 000032F3 46                  <1> 	inc esi
  3885 000032F4 EBF0                <1> 	jmp cndretest
  3886                              <1> cndtesttrue:
  3887 000032F6 38C8                <1> 	cmp al, cl
  3888 000032F8 7506                <1> 	jne cndtestalmost
  3889 000032FA B001                <1> 	mov al, 1
  3890 000032FC C3                  <1> 	ret
  3891                              <1> cndtestfalse:
  3892 000032FD B000                <1> 	mov al, 0
  3893 000032FF C3                  <1> 	ret
  3894                              <1> cndtestalmost:
  3895 00003300 B002                <1> 	mov al, 2
  3896 00003302 C3                  <1> 	ret
  3897 00003303 00                  <1> currentdir db 0
  3898 00003304 BE[00130000]        <1> dir:	mov esi, fileindex
  3899 00003309 8A06                <1> 	dirnxt:	mov al, [esi]
  3900 0000330B B400                <1> 		mov ah, 0
  3901 0000330D 3C05                <1> 		cmp al, 5
  3902 0000330F 744A                <1> 		je dirfnd
  3903 00003311 3C07                <1> 		cmp al, 7
  3904 00003313 743C                <1> 		je dirfnd3
  3905 00003315 3C06                <1> 		cmp al, 6
  3906 00003317 7438                <1> 		je dirfnd3
  3907 00003319 46                  <1> 		inc esi
  3908 0000331A 81FE[00150000]      <1> 		cmp esi,  fileindexend
  3909 00003320 737B                <1> 		jae dirdn
  3910 00003322 EBE5                <1> 		jmp dirnxt
  3911 00003324 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  3912 0000332D 070400646F63756D65- <1>
  3913 00003336 6E74000A0400666F6C- <1>
  3914 0000333F 646572000504006578- <1>
  3915 00003348 6563757461626C6500  <1>
  3916                              <1> 	dirfnd3:
  3917 00003351 46                  <1> 		inc esi
  3918 00003352 81FE[00150000]      <1> 		cmp esi, fileindexend
  3919 00003358 76AF                <1> 		jbe dirnxt
  3920 0000335A 4E                  <1> 		dec esi
  3921 0000335B 46                  <1> 	dirfnd:	inc esi
  3922 0000335C 8A06                <1> 		mov al, [esi]
  3923 0000335E B400                <1> 		mov ah, 0
  3924 00003360 3C04                <1> 		cmp al, 4
  3925 00003362 740B                <1> 		je dirfnd2
  3926 00003364 46                  <1> 		inc esi
  3927 00003365 81FE[00150000]      <1> 		cmp esi,  fileindexend
  3928 0000336B 7330                <1> 		jae dirdn
  3929 0000336D EB9A                <1> 		jmp dirnxt
  3930 0000336F 81C601000000        <1> 	dirfnd2: add esi, 1
  3931 00003375 E8BAF6FFFF          <1> 		call print
  3932 0000337A 8935[AC330000]      <1> 		mov [esidir], esi
  3933 00003380 BE[76730000]        <1> 		mov esi, dirtab
  3934 00003385 E8AAF6FFFF          <1> 		call print
  3935 0000338A 8B35[AC330000]      <1> 		mov esi, [esidir]
  3936 00003390 81FE[00150000]      <1> 		cmp esi,  fileindexend
  3937 00003396 7305                <1> 		jae dirdn
  3938 00003398 E96CFFFFFF          <1> 		jmp dirnxt
  3939 0000339D BE[73730000]        <1> 	dirdn:	mov esi, line
  3940 000033A2 E88DF6FFFF          <1> 			call print
  3941 000033A7 E9F8FCFFFF          <1> 			jmp nwcmd
  3942 000033AC 00000000            <1> esidir dd 0
  3943                              <1> 
  3944                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  3945                              <1> 		                ;ends if array seperator is found backwards after 0
  3946                              <1> 	arnxt:	      
  3947 000033B0 88E8                <1> 		mov al, ch
  3948 000033B2 88CC                <1> 		mov ah, cl        
  3949 000033B4 663906              <1> 		cmp [esi], ax
  3950 000033B7 744D                <1> 		je ardn
  3951 000033B9 66390E              <1> 		cmp [esi], cx
  3952 000033BC 7407                <1> 		je arfnd
  3953 000033BE 46                  <1> 		inc esi
  3954 000033BF 39DE                <1> 		cmp esi, ebx
  3955 000033C1 7343                <1> 		jae ardn
  3956 000033C3 EBEB                <1> 		jmp arnxt
  3957 000033C5 81C602000000        <1> 	arfnd: add esi, 2
  3958 000033CB 891D[07340000]      <1> 		mov [arbx], ebx
  3959 000033D1 890D[0B340000]      <1> 		mov [arcx], ecx
  3960 000033D7 E858F6FFFF          <1> 		call print
  3961 000033DC 8935[0D340000]      <1> 		mov [arsi], esi
  3962 000033E2 BE[73730000]        <1> 		mov esi, line
  3963 000033E7 E848F6FFFF          <1> 		call print
  3964 000033EC 8B1D[07340000]      <1> 		mov ebx, [arbx]
  3965 000033F2 668B0D[0B340000]    <1> 		mov cx, [arcx]
  3966 000033F9 8B35[0D340000]      <1> 		mov esi, [arsi]
  3967 000033FF 46                  <1> 		inc esi
  3968 00003400 39DE                <1> 		cmp esi, ebx
  3969 00003402 7302                <1> 		jae ardn
  3970 00003404 EBAA                <1> 		jmp arnxt
  3971 00003406 C3                  <1> 	ardn:	ret
  3972 00003407 00000000            <1> arbx:	dw 0,0
  3973 0000340B 0000                <1> arcx:	db 0,0
  3974 0000340D 00000000            <1> arsi:	dw 0,0
  3975                              <1> 
  3976                              <1> clearbuffer:
  3977 00003411 BE[7A1D0000]        <1> 	mov esi, buf2
  3978 00003416 B030                <1> 	mov al, '0'
  3979 00003418 81FE[8E1D0000]      <1> clearbuf: cmp esi, numbuf
  3980 0000341E 7305                <1> 	jae doneclearbuff
  3981 00003420 8806                <1> 	mov [esi], al
  3982 00003422 46                  <1> 	inc esi
  3983 00003423 EBF3                <1> 	jmp clearbuf
  3984                              <1> doneclearbuff: 
  3985 00003425 C3                  <1> 		ret
  3986                              <1> 
  3987                              <1> convert:
  3988 00003426 4E                  <1> 	dec esi
  3989 00003427 89F3                <1> 	mov ebx, esi		;place to convert into must be in esi, number to convert must be in ecx
  3990                              <1> cnvrt:
  3991 00003429 89DE                <1> 	mov esi, ebx
  3992 0000342B 81EE09000000        <1> 	sub esi, 9
  3993 00003431 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  3994 00003437 720A                <1> 	jb ten8
  3995 00003439 81E900CA9A3B        <1> 	sub ecx, 1000000000
  3996 0000343F FE06                <1> 	inc byte [esi]
  3997 00003441 EBE6                <1> 	jmp cnvrt
  3998 00003443 46                  <1> ten8:	inc esi
  3999 00003444 81F900E1F505        <1> 	cmp ecx, 100000000
  4000 0000344A 720A                <1> 	jb ten7
  4001 0000344C 81E900E1F505        <1> 	sub ecx, 100000000
  4002 00003452 FE06                <1> 	inc byte [esi]
  4003 00003454 EBD3                <1> 	jmp cnvrt
  4004 00003456 46                  <1> ten7:	inc esi
  4005 00003457 81F980969800        <1> 	cmp ecx, 10000000
  4006 0000345D 720A                <1> 	jb ten6
  4007 0000345F 81E980969800        <1> 	sub ecx, 10000000
  4008 00003465 FE06                <1> 	inc byte [esi]
  4009 00003467 EBC0                <1> 	jmp cnvrt
  4010 00003469 46                  <1> ten6:	inc esi
  4011 0000346A 81F940420F00        <1> 	cmp ecx, 1000000
  4012 00003470 720A                <1> 	jb ten5
  4013 00003472 81E940420F00        <1> 	sub ecx, 1000000
  4014 00003478 FE06                <1> 	inc byte [esi]
  4015 0000347A EBAD                <1> 	jmp cnvrt
  4016 0000347C 46                  <1> ten5:	inc esi
  4017 0000347D 81F9A0860100        <1> 	cmp ecx, 100000
  4018 00003483 720A                <1> 	jb ten4
  4019 00003485 81E9A0860100        <1> 	sub ecx, 100000
  4020 0000348B FE06                <1> 	inc byte [esi]
  4021 0000348D EB9A                <1> 	jmp cnvrt
  4022 0000348F 46                  <1> ten4:	inc esi
  4023 00003490 81F910270000        <1> 	cmp ecx, 10000
  4024 00003496 720A                <1> 	jb ten3
  4025 00003498 81E910270000        <1> 	sub ecx, 10000
  4026 0000349E FE06                <1> 	inc byte [esi]
  4027 000034A0 EB87                <1> 	jmp cnvrt
  4028 000034A2 46                  <1> ten3:	inc esi
  4029 000034A3 81F9E8030000        <1> 	cmp ecx, 1000
  4030 000034A9 720D                <1> 	jb ten2
  4031 000034AB 81E9E8030000        <1> 	sub ecx, 1000
  4032 000034B1 FE06                <1> 	inc byte [esi]
  4033 000034B3 E971FFFFFF          <1> 	jmp cnvrt
  4034 000034B8 46                  <1> ten2:	inc esi
  4035 000034B9 81F964000000        <1> 	cmp ecx, 100
  4036 000034BF 720D                <1> 	jb ten1
  4037 000034C1 81E964000000        <1> 	sub ecx, 100
  4038 000034C7 FE06                <1> 	inc byte [esi]
  4039 000034C9 E95BFFFFFF          <1> 	jmp cnvrt
  4040 000034CE 46                  <1> ten1:	inc esi
  4041 000034CF 81F90A000000        <1> 	cmp ecx, 10
  4042 000034D5 720D                <1> 	jb ten0
  4043 000034D7 81E90A000000        <1> 	sub ecx, 10
  4044 000034DD FE06                <1> 	inc byte [esi]
  4045 000034DF E945FFFFFF          <1> 	jmp cnvrt
  4046 000034E4 46                  <1> ten0:	inc esi
  4047 000034E5 81F901000000        <1> 	cmp ecx, 1
  4048 000034EB 720D                <1> 	jb tendn
  4049 000034ED 81E901000000        <1> 	sub ecx, 1
  4050 000034F3 FE06                <1> 	inc byte [esi]
  4051 000034F5 E92FFFFFFF          <1> 	jmp cnvrt
  4052                              <1> tendn:
  4053 000034FA C3                  <1> 	ret
  4054                              <1> 
  4055                              <1> 	
  4056                              <1> 
  4057 000034FB 00<rept>            <1> hexnumber times 8 db 0
  4058 00003503 202000              <1> hexnumberend db "  ",0
  4059                              <1> 
  4060                              <1> 
  4061 00003506 00000000            <1> sibuf dw 0,0
  4062 0000350A 00000000            <1> dibuf dw 0,0
  4063                              <1> 
  4064                              <1> converthex:
  4065                              <1> clearbufferhex:
  4066 0000350E B030                <1> 	mov al, '0'
  4067 00003510 8935[06350000]      <1> 	mov [sibuf], esi
  4068 00003516 893D[0A350000]      <1> 	mov [dibuf], edi
  4069 0000351C 39FE                <1> clearbufhex: cmp esi, edi
  4070 0000351E 7305                <1> 	jae doneclearbuffhex
  4071 00003520 8806                <1> 	mov [esi], al
  4072 00003522 46                  <1> 	inc esi
  4073 00003523 EBF7                <1> 	jmp clearbufhex
  4074                              <1> doneclearbuffhex:
  4075 00003525 8B35[0A350000]      <1> 	mov esi, [dibuf]
  4076 0000352B 89CA                <1> 	mov edx, ecx
  4077 0000352D 81FA00000000        <1> 	cmp edx, 0
  4078 00003533 741F                <1> 	je donenxtephx
  4079                              <1> nxtexphx:	;0x10^x
  4080 00003535 4E                  <1> 	dec esi
  4081 00003536 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  4082 00003538 89D1                <1> 	mov ecx, edx
  4083 0000353A 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  4084 00003540 E81C000000          <1> 	call cnvrtexphx		;;get this digit
  4085 00003545 89FE                <1> 	mov esi, edi
  4086 00003547 C1EA04              <1> 	shr edx, 4		;;next digit
  4087 0000354A 81FA00000000        <1> 	cmp edx, 0
  4088 00003550 7402                <1> 	je donenxtephx
  4089 00003552 EBE1                <1> 	jmp nxtexphx
  4090                              <1> donenxtephx:
  4091 00003554 8B35[06350000]      <1> 	mov esi, [sibuf]
  4092 0000355A 8B3D[0A350000]      <1> 	mov edi, [dibuf]
  4093 00003560 C3                  <1> 	ret
  4094                              <1> cnvrtexphx:			;;convert this number
  4095 00003561 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  4096 00003563 81F900000000        <1> 	cmp ecx, 0
  4097 00003569 7429                <1> 	je zerohx
  4098 0000356B 8A06                <1> cnvrthx:  mov al, [esi]
  4099 0000356D 3C39                <1> 	cmp al, '9'
  4100 0000356F 741B                <1> 	je lettershx
  4101 00003571 3C46                <1> lttrhxdn: cmp al, 'F'
  4102 00003573 741F                <1> 	je zerohx
  4103 00003575 8A06                <1> 	mov al, [esi]
  4104 00003577 FEC0                <1> 	inc al
  4105 00003579 8806                <1> 	mov [esi], al
  4106 0000357B 89DE                <1> 	mov esi, ebx
  4107 0000357D 81E901000000        <1> cnvrtlphx: sub ecx, 1
  4108 00003583 81F900000000        <1> 	cmp ecx, 0
  4109 00003589 75E0                <1> 	jne cnvrthx
  4110 0000358B C3                  <1> 	ret
  4111                              <1> lettershx:
  4112 0000358C B041                <1> 	mov al, 'A'
  4113 0000358E 2C01                <1> 	sub al, 1
  4114 00003590 8806                <1> 	mov [esi], al
  4115 00003592 EBDD                <1> 	jmp lttrhxdn
  4116 00003594 B030                <1> zerohx:	mov al, '0'
  4117 00003596 8806                <1> 	mov [esi], al
  4118 00003598 4E                  <1> 	dec esi
  4119 00003599 8A06                <1> 	mov al, [esi]
  4120 0000359B 3C46                <1> 	cmp al, 'F'
  4121 0000359D 74F5                <1> 	je zerohx
  4122 0000359F 41                  <1> 	inc ecx
  4123 000035A0 EBDB                <1> 	jmp cnvrtlphx
  4124 000035A2 00                  <1> smallhex db 0
  4125 000035A3 01                  <1> firsthexshown db 1
  4126                              <1> showhexsmall:
  4127 000035A4 C605[A2350000]01    <1> 	mov byte [smallhex], 1
  4128 000035AB E808000000          <1> 	call showhex
  4129 000035B0 C605[A2350000]00    <1> 	mov byte [smallhex], 0
  4130 000035B7 C3                  <1> 	ret
  4131                              <1> showhex:
  4132 000035B8 60                  <1> 	pusha
  4133 000035B9 BE[FB340000]        <1> 	mov esi, hexnumber
  4134 000035BE BF[03350000]        <1> 	mov edi, hexnumberend
  4135 000035C3 E846FFFFFF          <1> 	call converthex
  4136 000035C8 803D[A3350000]01    <1> 	cmp byte [firsthexshown], 1
  4137 000035CF 7504                <1> 	jne showthathex
  4138 000035D1 66BA0000            <1> 	mov dx, 0
  4139                              <1> showthathex:
  4140 000035D5 803D[A3350000]03    <1> 	cmp byte [firsthexshown], 3
  4141 000035DC 750A                <1> 	jne nonewhexline
  4142 000035DE BE[73730000]        <1> 	mov esi, line
  4143 000035E3 E84CF4FFFF          <1> 	call print
  4144                              <1> nonewhexline:
  4145 000035E8 803D[A3350000]04    <1> 	cmp byte [firsthexshown], 4
  4146 000035EF 7527                <1> 	jne notabfixhex
  4147 000035F1 B1A0                <1> 	mov cl, 160
  4148 000035F3 28D1                <1> 	sub cl, dl
  4149 000035F5 C0E905              <1> 	shr cl, 5
  4150 000035F8 C0E105              <1> 	shl cl, 5
  4151 000035FB 80F900              <1> 	cmp cl, 0
  4152 000035FE 750F                <1> 	jne nonewlinetabfixhex
  4153 00003600 BE[73730000]        <1> 	mov esi, line
  4154 00003605 E82AF4FFFF          <1> 	call print
  4155 0000360A E909000000          <1> 	jmp notabfixhex
  4156                              <1> nonewlinetabfixhex:
  4157 0000360F 80C20F              <1> 	add dl, 15
  4158 00003612 C0EA04              <1> 	shr dl, 4
  4159 00003615 C0E204              <1> 	shl dl, 4
  4160                              <1> notabfixhex:
  4161 00003618 BE[FB340000]        <1> 	mov esi, hexnumber
  4162 0000361D 803D[A2350000]01    <1> 	cmp byte [smallhex],1
  4163 00003624 7506                <1> 	jne printnosmallhex
  4164 00003626 81C606000000        <1> 	add esi, 6
  4165                              <1> printnosmallhex:
  4166 0000362C E803F4FFFF          <1> 	call print
  4167 00003631 803D[A3350000]02    <1> 	cmp byte [firsthexshown], 2
  4168 00003638 750A                <1> 	jne hexshown
  4169 0000363A BE[73730000]        <1> 	mov esi, line
  4170 0000363F E8F0F3FFFF          <1> 	call print
  4171                              <1> hexshown:
  4172 00003644 C605[A3350000]00    <1> 	mov byte [firsthexshown], 0
  4173 0000364B 61                  <1> 	popa
  4174 0000364C C3                  <1> 	ret
  4175                              <1> 
  4176                              <1> 
  4177 0000364D 303030303030303030- <1> decnumber db "00000000000000"
  4178 00003656 3030303030          <1>
  4179 0000365B 2000                <1> decnumberend: db " ",0
  4180                              <1> 
  4181                              <1> showdec: ;;same as showhex, just uses decimal conversion
  4182 0000365D 60                  <1> 	pusha
  4183 0000365E BF[4D360000]        <1> 	mov edi, decnumber
  4184 00003663 BE[5B360000]        <1> 	mov esi, decnumberend
  4185                              <1> cleardecbuf:
  4186 00003668 C60730              <1> 	mov byte [edi], '0'
  4187 0000366B 47                  <1> 	inc edi
  4188 0000366C 39F7                <1> 	cmp edi, esi
  4189 0000366E 72F8                <1> 	jb cleardecbuf
  4190 00003670 BF[4D360000]        <1> 	mov edi, decnumber
  4191 00003675 E8ACFDFFFF          <1> 	call convert
  4192 0000367A 803D[A3350000]01    <1> 	cmp byte [firsthexshown], 1
  4193 00003681 7504                <1> 	jne showthatdec
  4194 00003683 66BA0000            <1> 	mov dx, 0
  4195                              <1> showthatdec:
  4196 00003687 803D[A3350000]03    <1> 	cmp byte [firsthexshown], 3
  4197 0000368E 750A                <1> 	jne nonewdecline
  4198 00003690 BE[73730000]        <1> 	mov esi, line
  4199 00003695 E89AF3FFFF          <1> 	call print
  4200                              <1> nonewdecline:
  4201 0000369A 803D[A3350000]04    <1> 	cmp byte [firsthexshown], 4
  4202 000036A1 7527                <1> 	jne notabfixdec
  4203 000036A3 B1A0                <1> 	mov cl, 160
  4204 000036A5 28D1                <1> 	sub cl, dl
  4205 000036A7 C0E905              <1> 	shr cl, 5
  4206 000036AA C0E105              <1> 	shl cl, 5
  4207 000036AD 80F900              <1> 	cmp cl, 0
  4208 000036B0 750F                <1> 	jne nonewlinetabfixdec
  4209 000036B2 BE[73730000]        <1> 	mov esi, line
  4210 000036B7 E878F3FFFF          <1> 	call print
  4211 000036BC E909000000          <1> 	jmp notabfixdec
  4212                              <1> nonewlinetabfixdec:
  4213 000036C1 80C20F              <1> 	add dl, 15
  4214 000036C4 C0EA04              <1> 	shr dl, 4
  4215 000036C7 C0E204              <1> 	shl dl, 4
  4216                              <1> notabfixdec:
  4217 000036CA BE[4D360000]        <1> 	mov esi, decnumber
  4218 000036CF 4E                  <1> 	dec esi
  4219                              <1> sifind:
  4220 000036D0 46                  <1> 	inc esi
  4221 000036D1 803E30              <1> 	cmp byte [esi], '0'
  4222 000036D4 74FA                <1> 	je sifind
  4223 000036D6 E859F3FFFF          <1> 	call print
  4224 000036DB 803D[A3350000]02    <1> 	cmp byte [firsthexshown], 2
  4225 000036E2 750A                <1> 	jne decshown
  4226 000036E4 BE[73730000]        <1> 	mov esi, line
  4227 000036E9 E846F3FFFF          <1> 	call print
  4228                              <1> decshown:
  4229 000036EE C605[A3350000]00    <1> 	mov byte [firsthexshown], 0
  4230 000036F5 61                  <1> 	popa
  4231 000036F6 C3                  <1> 	ret
  4232                              <1> 	
  4233                              <1> cnvrttxt: 
  4234 000036F7 B900000000          <1> 	mov ecx, 0
  4235 000036FC B800000000          <1> 	mov eax, 0
  4236 00003701 BA00000000          <1> 	mov edx, 0
  4237 00003706 BB00000000          <1> 	mov ebx, 0
  4238 0000370B 4E                  <1> 	dec esi
  4239                              <1> cnvrtlptxt:
  4240 0000370C 46                  <1> 	inc esi
  4241 0000370D 8A06                <1> 	mov al, [esi]
  4242 0000370F 3C00                <1> 	cmp al, 0
  4243 00003711 75F9                <1> 	jne cnvrtlptxt
  4244 00003713 4E                  <1> 	dec esi
  4245 00003714 8A06                <1> 	mov al, [esi]
  4246 00003716 3C2E                <1> 	cmp al, '.'
  4247 00003718 7503                <1> 	jne nocnvrtdot
  4248 0000371A 46                  <1> 	inc esi
  4249 0000371B EBEF                <1> 	jmp cnvrtlptxt
  4250                              <1> nocnvrtdot:
  4251 0000371D 3C30                <1> 	cmp al, '0'
  4252 0000371F 7504                <1> 	jne txtlp
  4253 00003721 39FE                <1> zerotest: cmp esi, edi
  4254 00003723 745B                <1> 	je donecnvrt
  4255                              <1> txtlp:	
  4256 00003725 B800000000          <1> 	mov eax, 0
  4257 0000372A 8A06                <1> 	mov al, [esi]
  4258 0000372C 3C3D                <1> 	cmp al, '='
  4259 0000372E 7450                <1> 	je donecnvrt
  4260 00003730 3C30                <1> 	cmp al, 48
  4261 00003732 724C                <1> 	jb donecnvrt
  4262 00003734 3C23                <1> 	cmp al, '#'
  4263 00003736 7448                <1> 	je donecnvrt
  4264 00003738 39FE                <1> 	cmp esi, edi
  4265 0000373A 7244                <1> 	jb donecnvrt
  4266 0000373C 81F900000000        <1> 	cmp ecx, 0
  4267 00003742 7708                <1> 	ja exp
  4268 00003744 2C30                <1> noexp:	sub al, 48
  4269 00003746 01C2                <1> 	add edx, eax
  4270 00003748 4E                  <1> 	dec esi
  4271 00003749 41                  <1> 	inc ecx
  4272 0000374A EBD9                <1> 	jmp txtlp
  4273 0000374C 81F900000000        <1> exp:	cmp ecx, 0
  4274 00003752 74F0                <1> 	je noexp
  4275 00003754 2C30                <1> 	sub al, 48
  4276 00003756 51                  <1> 	push ecx
  4277 00003757 89C3                <1> expmul:	mov ebx, eax
  4278 00003759 01D8                <1> 	add eax, ebx
  4279 0000375B 01D8                <1> 	add eax, ebx
  4280 0000375D 01D8                <1> 	add eax, ebx
  4281 0000375F 01D8                <1> 	add eax, ebx
  4282 00003761 01D8                <1> 	add eax, ebx
  4283 00003763 01D8                <1> 	add eax, ebx
  4284 00003765 01D8                <1> 	add eax, ebx
  4285 00003767 01D8                <1> 	add eax, ebx
  4286 00003769 01D8                <1> 	add eax, ebx
  4287 0000376B 81E901000000        <1> 	sub ecx, 1
  4288 00003771 81F900000000        <1> 	cmp ecx, 0
  4289 00003777 77DE                <1> 	ja expmul
  4290 00003779 01C2                <1> 	add edx, eax
  4291 0000377B 59                  <1> 	pop ecx
  4292 0000377C 4E                  <1> 	dec esi
  4293 0000377D 41                  <1> 	inc ecx
  4294 0000377E EBA5                <1> 	jmp txtlp
  4295 00003780 89D1                <1> donecnvrt: mov ecx, edx
  4296 00003782 C3                  <1> 	ret
  4297                                      %include 'source/builtinprogs.asm'
  4298 00003783 050406040704        <1> filetypes db 5,4,6,4,7,4
  4299                              <1> progstart:		;programs start here
  4300                              <1> ;db 5,4,"index",0
  4301                              <1> ;	call indexfiles
  4302                              <1> ;	jmp nwcmd
  4303                              <1> 
  4304                              <1> 
  4305                              <1> indexfiles:
  4306 00003789 BE[89370000]        <1> 	mov esi, progstart
  4307 0000378E BB[00130000]        <1> 	mov ebx, fileindex
  4308 00003793 BF[89370000]        <1> 	mov edi, progstart
  4309 00003798 81EF02000000        <1> 	sub edi, 2
  4310                              <1> indexloop:
  4311 0000379E 668B0E              <1> 	mov cx, [esi]
  4312                              <1> 	indexloop2:
  4313 000037A1 663B0F              <1> 		cmp cx, [edi]
  4314 000037A4 7424                <1> 		je indexloop2done
  4315 000037A6 81EF02000000        <1> 		sub edi, 2
  4316 000037AC 81FF[83370000]      <1> 		cmp edi, filetypes
  4317 000037B2 73ED                <1> 		jae indexloop2
  4318 000037B4 BF[89370000]        <1> 	mov edi, progstart
  4319 000037B9 81EF02000000        <1> 	sub edi, 2
  4320 000037BF 46                  <1> 	inc esi
  4321 000037C0 81FE[1C480000]      <1> 	cmp esi, batchprogend
  4322 000037C6 734E                <1> 	jae indexloopdone
  4323 000037C8 EBD4                <1> 	jmp indexloop
  4324                              <1> indexloop2done:
  4325 000037CA 66890B              <1> 	mov [ebx], cx
  4326 000037CD 81C302000000        <1> 	add ebx, 2
  4327 000037D3 81C602000000        <1> 	add esi, 2
  4328                              <1> 	nameindex:
  4329 000037D9 8A0E                <1> 		mov cl, [esi]
  4330 000037DB 80F900              <1> 		cmp cl, 0
  4331 000037DE 7406                <1> 		je nameindexdone
  4332 000037E0 880B                <1> 		mov [ebx], cl
  4333 000037E2 46                  <1> 		inc esi
  4334 000037E3 43                  <1> 		inc ebx
  4335 000037E4 EBF3                <1> 		jmp nameindex
  4336                              <1> 	nameindexdone:
  4337 000037E6 43                  <1> 		inc ebx
  4338 000037E7 66C7030000          <1> 		mov word [ebx], 0
  4339 000037EC 81C302000000        <1> 		add ebx, 2
  4340 000037F2 46                  <1> 		inc esi
  4341 000037F3 8933                <1> 		mov [ebx], esi
  4342 000037F5 81C304000000        <1> 		add ebx, 4
  4343 000037FB 66C7030000          <1> 		mov word [ebx], 0
  4344 00003800 81C302000000        <1> 		add ebx, 2
  4345 00003806 81FB[00150000]      <1> 		cmp ebx, fileindexend
  4346 0000380C 7308                <1> 		jae indexloopdone
  4347 0000380E 81C601000000        <1> 		add esi, 1
  4348 00003814 EB88                <1> 		jmp indexloop
  4349 00003816 C605[1E380000]01    <1> indexloopdone: 	mov byte [indexdone], 1
  4350 0000381D C3                  <1> 		ret
  4351                              <1> 
  4352 0000381E 00                  <1> indexdone db 0
  4353                              <1> 
  4354                              <1> 
  4355                              <1> ;db 5,4,"showindex",0
  4356                              <1> ;	mov esi, fileindex
  4357                              <1> ;	mov ebx, fileindexend
  4358                              <1> ;	mov cl, 5
  4359                              <1> ;	mov ch, 4
  4360                              <1> ;	call array
  4361                              <1> ;	mov esi, fileindex
  4362                              <1> ;	mov ebx, fileindexend
  4363                              <1> ;	mov cl, 6
  4364                              <1> ;	mov ch, 4
  4365                              <1> ;	call array
  4366                              <1> ;	mov esi, fileindex
  4367                              <1> ;	mov ebx, fileindexend
  4368                              <1> ;	mov cl, 7
  4369                              <1> ;	mov ch, 4
  4370                              <1> ;	call array
  4371                              <1> ;	jmp nwcmd
  4372                              <1> 
  4373 0000381F 05046C7300          <1> db 5,4,"ls",0
  4374 00003824 BE[89370000]        <1> 	lscmd:	mov esi, progstart
  4375 00003829 BB[1C480000]        <1> 		mov ebx, progend
  4376 0000382E E9D1FAFFFF          <1> 		jmp dir
  4377                              <1> 		
  4378 00003833 05046469736B00      <1> db 5,4,"disk",0
  4379 0000383A B900000000          <1> 		mov ecx, 0
  4380 0000383F 8A0D[87010000]      <1> 		mov cl, [DriveNumber]
  4381 00003845 C605[A3350000]00    <1> 		mov byte [firsthexshown], 0
  4382 0000384C E867FDFFFF          <1> 		call showhex
  4383 00003851 BE[73730000]        <1> 		mov esi, line
  4384 00003856 E8D9F1FFFF          <1> 		call print
  4385 0000385B BE[7A720000]        <1> 		mov esi, diskfileindex
  4386                              <1> 	diskindexdir:
  4387 00003860 E8CFF1FFFF          <1> 		call print
  4388 00003865 56                  <1> 		push esi
  4389 00003866 BE[93380000]        <1> 		mov esi, disktab
  4390 0000386B E8C4F1FFFF          <1> 		call print
  4391 00003870 5E                  <1> 		pop esi
  4392 00003871 8B4E05              <1> 		mov ecx, [esi + 5]
  4393 00003874 C605[A3350000]02    <1> 		mov byte [firsthexshown], 2
  4394 0000387B E8DDFDFFFF          <1> 		call showdec
  4395 00003880 81C609000000        <1> 		add esi, 9
  4396 00003886 81FE[35730000]      <1> 		cmp esi, enddiskfileindex
  4397 0000388C 72D2                <1> 		jb diskindexdir
  4398 0000388E E911F8FFFF          <1> 		jmp nwcmd
  4399                              <1> 		
  4400 00003893 0D09090900          <1> 		disktab db 13,9,9,9,0
  4401                              <1> 
  4402 00003898 0504636C65617200    <1> db 5,4,"clear",0
  4403 000038A0 E8ADF4FFFF          <1> 	cls:	call clear
  4404 000038A5 E9FAF7FFFF          <1> 		jmp nwcmd
  4405                              <1> 		
  4406 000038AA 05047761697400      <1> db 5,4,"wait",0
  4407 000038B1 B000                <1> 		mov al, 0
  4408 000038B3 E829F1FFFF          <1> 		call int302
  4409 000038B8 E9E7F7FFFF          <1> 		jmp nwcmd
  4410                              <1> 
  4411 000038BD 05046563686F00      <1> db 5,4,"echo",0
  4412 000038C4 BE[7A1B0000]        <1> 	echo:	mov esi, buftxt
  4413 000038C9 81C605000000        <1> 		add esi, 5
  4414 000038CF 8A06                <1> 		mov al, [esi]
  4415                              <1> 		;cmp al, '$'
  4416                              <1> 		;je echovr		;;now unnecessary
  4417 000038D1 E85EF1FFFF          <1> 		call print
  4418 000038D6 BE[73730000]        <1> 		mov esi, line
  4419 000038DB E854F1FFFF          <1> 		call print
  4420 000038E0 E9BFF7FFFF          <1> 		jmp nwcmd
  4421 000038E5 BB[6F150000]        <1> 	echovr:	mov ebx, variables
  4422 000038EA BF06000000          <1> 		mov edi, 6
  4423 000038EF E83A000000          <1> 		call nxtvrech
  4424 000038F4 E952000000          <1> 		jmp prntvr2
  4425 000038F9 B13D                <1> 	echvar:	mov cl, '='
  4426 000038FB 43                  <1> 		inc ebx
  4427 000038FC 8A03                <1> 		mov al, [ebx]
  4428 000038FE 3C00                <1> 		cmp al, 0
  4429 00003900 742C                <1> 		je nxtvrech
  4430 00003902 3C3D                <1> 		cmp al, '='
  4431 00003904 7420                <1> 		je nxtvrechb1
  4432 00003906 BE[7A1B0000]        <1> 		mov esi, buftxt
  4433 0000390B 01FE                <1> 		add esi, edi
  4434 0000390D E8D2F9FFFF          <1> 		call cndtest
  4435 00003912 3C02                <1> 		cmp al, 2
  4436 00003914 7431                <1> 		je prntvr
  4437 00003916 3C01                <1> 		cmp al, 1
  4438 00003918 742D                <1> 		je prntvr
  4439 0000391A BE[7A1B0000]        <1> 		mov esi, buftxt
  4440 0000391F 01FE                <1> 		add esi, edi
  4441 00003921 E908000000          <1> 		jmp nxtvrech
  4442                              <1> 	nxtvrechb1:
  4443 00003926 81EB02000000        <1> 		sub ebx, 2
  4444 0000392C EBCB                <1> 		jmp echvar
  4445 0000392E 8A03                <1> 	nxtvrech: mov al, [ebx]
  4446 00003930 3C05                <1> 		cmp al, 5
  4447 00003932 740A                <1> 		je nxtvrec2
  4448 00003934 43                  <1> 		inc ebx
  4449 00003935 81FB[6F1A0000]      <1> 		cmp ebx, varend
  4450 0000393B 72F1                <1> 		jb nxtvrech
  4451 0000393D C3                  <1> 		ret
  4452 0000393E 43                  <1> 	nxtvrec2: inc ebx
  4453 0000393F 8A03                <1> 		mov al, [ebx]
  4454 00003941 3C04                <1> 		cmp al, 4
  4455 00003943 74B4                <1> 		je echvar
  4456 00003945 EBE7                <1> 		jmp nxtvrech
  4457 00003947 43                  <1> 	prntvr: inc ebx
  4458 00003948 89DE                <1> 		mov esi, ebx
  4459 0000394A C3                  <1> 		ret
  4460 0000394B E8E4F0FFFF          <1> 	prntvr2: call print
  4461 00003950 BE[73730000]        <1> 		mov esi, line
  4462 00003955 E8DAF0FFFF          <1> 		call print
  4463 0000395A E945F7FFFF          <1> 		jmp nwcmd
  4464                              <1> 		
  4465                              <1> 
  4466 0000395F 05042300            <1> db 5,4,"#",0
  4467                              <1> 	num:	
  4468 00003963 E8A9FAFFFF          <1> 		call clearbuffer
  4469 00003968 C605[F73B0000]00    <1> 		mov byte [decimal], 0
  4470 0000396F C605[F83B0000]00    <1> 		mov byte [decimal2], 0
  4471 00003976 BE[7A1B0000]        <1> 		mov esi, buftxt
  4472 0000397B B800000000          <1> 		mov eax, 0
  4473 00003980 B900000000          <1> 		mov ecx, 0
  4474 00003985 BB00000000          <1> 		mov ebx, 0
  4475 0000398A 8A06                <1> 	num2:	mov al, [esi]
  4476 0000398C 3C2B                <1> 		cmp al, '+'
  4477 0000398E 741B                <1> 		je operatorfound
  4478 00003990 3C2D                <1> 		cmp al, '-'
  4479 00003992 7417                <1> 		je operatorfound
  4480 00003994 3C2A                <1> 		cmp al, '*'
  4481 00003996 7413                <1> 		je operatorfound
  4482 00003998 3C2F                <1> 		cmp al, '/'
  4483 0000399A 740F                <1> 		je operatorfound
  4484 0000399C 3C5E                <1> 		cmp al, '^'
  4485 0000399E 740B                <1> 		je operatorfound
  4486 000039A0 46                  <1> 		inc esi
  4487 000039A1 3C00                <1> 		cmp al, 0
  4488 000039A3 0F84FBF6FFFF        <1> 		je near nwcmd
  4489 000039A9 EBDF                <1> 		jmp num2
  4490 000039AB 50                  <1> 	operatorfound: push eax
  4491 000039AC B400                <1> 		mov ah, 0
  4492 000039AE 8826                <1> 		mov [esi], ah
  4493 000039B0 89F7                <1> 		mov edi, esi
  4494 000039B2 46                  <1> 		inc esi
  4495 000039B3 8A06                <1> 		mov al, [esi]
  4496                              <1> 		;cmp al, '$'
  4497                              <1> 		;je near varnum1	;;unnecessary
  4498 000039B5 3C25                <1> 		cmp al, '%'
  4499 000039B7 0F8461000000        <1> 		je near resultnum1
  4500                              <1> 	varnum2: 
  4501 000039BD 57                  <1> 		push edi
  4502 000039BE E8A3000000          <1> 		call checkdecimal
  4503 000039C3 5F                  <1> 		pop edi
  4504 000039C4 E82EFDFFFF          <1> 		call cnvrttxt
  4505                              <1> 	vrnm2:
  4506 000039C9 89CB                <1> 		mov ebx, ecx
  4507 000039CB 53                  <1> 		push ebx
  4508 000039CC E840FAFFFF          <1> 		call clearbuffer
  4509 000039D1 BE[7A1B0000]        <1> 		mov esi, buftxt
  4510 000039D6 89F7                <1> 		mov edi, esi
  4511 000039D8 46                  <1> 		inc esi
  4512 000039D9 8A06                <1> 		mov al, [esi]
  4513                              <1> 		;cmp al, '$'
  4514                              <1> 		;je near varnum3	;;unnecessary
  4515 000039DB 3C25                <1> 		cmp al, '%'
  4516 000039DD 0F844F000000        <1> 		je near resultnum2
  4517                              <1> 	varnum4: 
  4518 000039E3 57                  <1> 		push edi
  4519 000039E4 E869000000          <1> 		call checkdecimal2
  4520 000039E9 5F                  <1> 		pop edi
  4521 000039EA E808FDFFFF          <1> 		call cnvrttxt
  4522                              <1> 	vrnm4:
  4523 000039EF 5B                  <1> 		pop ebx
  4524 000039F0 58                  <1> 		pop eax
  4525 000039F1 3C2B                <1> 		cmp al, '+'
  4526 000039F3 0F849B000000        <1> 		je near plusnum
  4527 000039F9 3C2D                <1> 		cmp al, '-'
  4528 000039FB 0F849F000000        <1> 		je near subnum
  4529 00003A01 3C2A                <1> 		cmp al, '*'
  4530 00003A03 0F84A3000000        <1> 		je near mulnum
  4531 00003A09 3C2F                <1> 		cmp al, '/'
  4532 00003A0B 0F84B1000000        <1> 		je near divnum
  4533 00003A11 3C5E                <1> 		cmp al, '^'
  4534 00003A13 0F84CF000000        <1> 		je near expnum
  4535 00003A19 E986F6FFFF          <1> 		jmp nwcmd
  4536                              <1> 	resultnum1:
  4537 00003A1E 8A0D[F93B0000]      <1> 		mov cl, [decimalresult]
  4538 00003A24 880D[F73B0000]      <1> 		mov [decimal], cl
  4539 00003A2A 8B0D[FA3B0000]      <1> 		mov ecx, [result]
  4540 00003A30 EB97                <1> 		jmp vrnm2
  4541                              <1> 	resultnum2:
  4542 00003A32 8A0D[F73B0000]      <1> 		mov cl, [decimal]
  4543 00003A38 880D[F83B0000]      <1> 		mov [decimal2], cl
  4544 00003A3E 8A0D[F93B0000]      <1> 		mov cl, [decimalresult]
  4545 00003A44 880D[F73B0000]      <1> 		mov [decimal], cl
  4546 00003A4A 8B0D[FA3B0000]      <1> 		mov ecx, [result]
  4547 00003A50 EB9D                <1> 		jmp vrnm4
  4548                              <1> ;	varnum1: sub esi, buftxt
  4549                              <1> ;		mov edi, esi
  4550                              <1> ;		add esi, buftxt
  4551                              <1> ;		inc edi
  4552                              <1> ;		mov ebx, variables
  4553                              <1> ;		call nxtvrech
  4554                              <1> ;		mov edi, esi
  4555                              <1> ;		dec edi
  4556                              <1> ;		jmp varnum2
  4557                              <1> ;	varnum3: sub esi, buftxt
  4558                              <1> ;		mov edi, esi
  4559                              <1> ;		add esi, buftxt
  4560                              <1> ;		inc edi
  4561                              <1> ;		mov ebx, variables
  4562                              <1> ;		call nxtvrech
  4563                              <1> ;		mov edi, esi
  4564                              <1> ;		dec edi
  4565                              <1> ;		jmp varnum4
  4566                              <1> 	checkdecimal2:
  4567 00003A52 8A25[F73B0000]      <1> 		mov ah, [decimal]
  4568 00003A58 8825[F83B0000]      <1> 		mov [decimal2], ah
  4569 00003A5E B400                <1> 		mov ah, 0
  4570 00003A60 8825[F73B0000]      <1> 		mov [decimal], ah
  4571                              <1> 	checkdecimal:
  4572 00003A66 89F7                <1> 		mov edi, esi
  4573                              <1> 	chkdec1:
  4574 00003A68 8A07                <1> 		mov al, [edi]
  4575 00003A6A 3C2E                <1> 		cmp al, '.'
  4576 00003A6C 0F840B000000        <1> 		je near fnddec
  4577 00003A72 3C00                <1> 		cmp al, 0
  4578 00003A74 0F8419000000        <1> 		je near nodecimal
  4579 00003A7A 47                  <1> 		inc edi
  4580 00003A7B EBEB                <1> 		jmp chkdec1
  4581                              <1> 	fnddec:
  4582 00003A7D 8A4701              <1> 		mov al, [edi + 1]
  4583 00003A80 8807                <1> 		mov [edi], al
  4584 00003A82 3C00                <1> 		cmp al, 0
  4585 00003A84 0F8409000000        <1> 		je near nodecimal
  4586 00003A8A FE05[F73B0000]      <1> 		inc byte [decimal]
  4587 00003A90 47                  <1> 		inc edi
  4588 00003A91 EBEA                <1> 		jmp fnddec
  4589                              <1> 	nodecimal:
  4590 00003A93 C3                  <1> 		ret
  4591                              <1> 	plusnum:
  4592 00003A94 E81C010000          <1> 		call decaddfix
  4593 00003A99 01D9                <1> 		add ecx, ebx
  4594 00003A9B E991000000          <1> 		jmp retnum
  4595                              <1> 	subnum:
  4596 00003AA0 E810010000          <1> 		call decaddfix
  4597 00003AA5 29D9                <1> 		sub ecx, ebx
  4598 00003AA7 E985000000          <1> 		jmp retnum
  4599                              <1> 	mulnum:
  4600 00003AAC A0[F83B0000]        <1> 		mov al, [decimal2]
  4601 00003AB1 0005[F73B0000]      <1> 		add [decimal], al
  4602 00003AB7 89C8                <1> 		mov eax, ecx
  4603 00003AB9 F7E3                <1> 		mul ebx
  4604 00003ABB 89C1                <1> 		mov ecx, eax
  4605 00003ABD E96F000000          <1> 		jmp retnum
  4606                              <1> 	divnum:
  4607 00003AC2 E8EE000000          <1> 		call decaddfix
  4608 00003AC7 B000                <1> 		mov al, 0
  4609 00003AC9 A2[F73B0000]        <1> 		mov [decimal], al
  4610 00003ACE 6689C8              <1> 		mov ax, cx
  4611 00003AD1 80FB00              <1> 		cmp bl, 0
  4612 00003AD4 0F8457000000        <1> 		je near retnum
  4613 00003ADA F6F3                <1> 		div bl
  4614 00003ADC B900000000          <1> 		mov ecx, 0
  4615 00003AE1 88C1                <1> 		mov cl, al
  4616 00003AE3 E949000000          <1> 		jmp retnum
  4617                              <1> 	expnum:
  4618 00003AE8 8A15[F73B0000]      <1> 		mov dl, [decimal]
  4619 00003AEE 8815[F83B0000]      <1> 		mov [decimal2], dl
  4620 00003AF4 BA00000000          <1> 		mov edx, 0
  4621 00003AF9 89C8                <1> 		mov eax, ecx
  4622 00003AFB 89D9                <1> 		mov ecx, ebx
  4623 00003AFD 89C3                <1> 		mov ebx, eax
  4624 00003AFF 81F900000000        <1> 		cmp ecx, 0
  4625 00003B05 7425                <1> 		je noexpnum
  4626 00003B07 49                  <1> 		dec ecx
  4627 00003B08 81F900000000        <1> 		cmp ecx, 0
  4628 00003B0E 7415                <1> 		je noexpnumlp
  4629 00003B10 F7E3                <1> 	expnumlp: mul ebx
  4630 00003B12 8A15[F83B0000]      <1> 		mov dl, [decimal2]
  4631 00003B18 0015[F73B0000]      <1> 		add [decimal], dl
  4632 00003B1E BA00000000          <1> 		mov edx, 0
  4633 00003B23 E2EB                <1> 		loop expnumlp
  4634                              <1> 	noexpnumlp:
  4635 00003B25 89C1                <1> 		mov ecx, eax
  4636 00003B27 E905000000          <1> 		jmp retnum
  4637                              <1> 	noexpnum:
  4638 00003B2C B901000000          <1> 		mov ecx, 1
  4639                              <1> 	retnum: 
  4640 00003B31 BE[8E1D0000]        <1> 		mov esi, numbuf
  4641 00003B36 890D[FA3B0000]      <1> 		mov [result], ecx
  4642 00003B3C E8E5F8FFFF          <1> 		call convert
  4643 00003B41 BE[8E1D0000]        <1> 		mov esi, numbuf
  4644 00003B46 8A25[F73B0000]      <1> 		mov ah, [decimal]
  4645 00003B4C 8825[F93B0000]      <1> 		mov [decimalresult], ah
  4646 00003B52 80FC00              <1> 		cmp ah, 0
  4647 00003B55 0F8425000000        <1> 		je near noputdecimal
  4648                              <1> 	putdecimal:
  4649 00003B5B 4E                  <1> 		dec esi
  4650 00003B5C FECC                <1> 		dec ah
  4651 00003B5E 80FC00              <1> 		cmp ah, 0
  4652 00003B61 0F87F4FFFFFF        <1> 		ja near putdecimal
  4653 00003B67 4E                  <1> 		dec esi
  4654 00003B68 8A06                <1> 		mov al, [esi]
  4655 00003B6A C6062E              <1> 		mov byte [esi], '.'
  4656                              <1> 	decputloop:
  4657 00003B6D 4E                  <1> 		dec esi
  4658 00003B6E 8A26                <1> 		mov ah, [esi]
  4659 00003B70 8806                <1> 		mov [esi], al
  4660 00003B72 88E0                <1> 		mov al, ah
  4661 00003B74 81FE[7A1D0000]      <1> 		cmp esi, buf2
  4662 00003B7A 0F87EDFFFFFF        <1> 		ja near decputloop
  4663                              <1> 	noputdecimal:
  4664 00003B80 BE[7A1D0000]        <1> 		mov esi, buf2
  4665 00003B85 E809000000          <1> 		call chkadd
  4666 00003B8A E915F5FFFF          <1> 		jmp nwcmd
  4667 00003B8F 00000000            <1> edxnumbuf dw 0,0
  4668 00003B93 8A06                <1> 	chkadd: mov al, [esi]
  4669 00003B95 3C30                <1> 		cmp al, '0'
  4670 00003B97 750C                <1> 		jne dnadd
  4671 00003B99 46                  <1> 		inc esi
  4672 00003B9A 81FE[8E1D0000]      <1> 		cmp esi, numbuf
  4673 00003BA0 7402                <1> 		je dnaddm1
  4674 00003BA2 EBEF                <1> 		jmp chkadd
  4675 00003BA4 4E                  <1> 	dnaddm1: dec esi
  4676 00003BA5 E88AEEFFFF          <1> 	dnadd:	call print
  4677 00003BAA BE[73730000]        <1> 		mov esi, line
  4678 00003BAF E880EEFFFF          <1> 		call print
  4679 00003BB4 C3                  <1> 		ret
  4680                              <1> 		
  4681                              <1> 	decaddfix:
  4682 00003BB5 A0[F83B0000]        <1> 		mov al, [decimal2]
  4683 00003BBA 8A25[F73B0000]      <1> 		mov ah, [decimal]
  4684 00003BC0 38E0                <1> 		cmp al, ah
  4685 00003BC2 7432                <1> 		je gooddecadd
  4686 00003BC4 38E0                <1> 		cmp al, ah
  4687 00003BC6 721A                <1> 		jb lowdecadd
  4688                              <1> 	highdecadd:
  4689 00003BC8 FEC4                <1> 		inc ah
  4690 00003BCA 89CA                <1> 		mov edx, ecx
  4691 00003BCC C1E103              <1> 		shl ecx, 3
  4692 00003BCF 01D1                <1> 		add ecx, edx
  4693 00003BD1 01D1                <1> 		add ecx, edx
  4694 00003BD3 38E0                <1> 		cmp al, ah
  4695 00003BD5 77F1                <1> 		ja highdecadd
  4696 00003BD7 8825[F73B0000]      <1> 		mov [decimal], ah
  4697 00003BDD E914000000          <1> 		jmp gooddecadd
  4698                              <1> 	lowdecadd:
  4699 00003BE2 FEC0                <1> 		inc al
  4700 00003BE4 89DA                <1> 		mov edx, ebx
  4701 00003BE6 C1E303              <1> 		shl ebx, 3
  4702 00003BE9 01D3                <1> 		add ebx, edx
  4703 00003BEB 01D3                <1> 		add ebx, edx
  4704 00003BED 38E0                <1> 		cmp al, ah
  4705 00003BEF 72F1                <1> 		jb lowdecadd
  4706 00003BF1 A2[F73B0000]        <1> 		mov [decimal], al
  4707                              <1> 	gooddecadd:
  4708 00003BF6 C3                  <1> 		ret
  4709                              <1> 		
  4710 00003BF7 00                  <1> decimal db 0
  4711 00003BF8 00                  <1> decimal2 db 0
  4712 00003BF9 00                  <1> decimalresult db 0
  4713 00003BFA 00000000            <1> result db 0,0,0,0
  4714                              <1> 	
  4715 00003BFE 05042500            <1> db 5,4,"%",0
  4716 00003C02 E80AF8FFFF          <1> 	ans:	call clearbuffer
  4717 00003C07 8B0D[FA3B0000]      <1> 		mov ecx, [result]
  4718 00003C0D BE[7A1D0000]        <1> 		mov esi, buf2
  4719 00003C12 E80FF8FFFF          <1> 		call convert
  4720 00003C17 BE[7A1D0000]        <1> 		mov esi, buf2
  4721 00003C1C E872FFFFFF          <1> 		call chkadd
  4722 00003C21 E97EF4FFFF          <1> 		jmp nwcmd
  4723                              <1> 
  4724 00003C26 05042400            <1> db 5,4,"$",0
  4725 00003C2A BE[7A1B0000]        <1> var: mov esi, buftxt
  4726 00003C2F BB[6F150000]        <1> 	mov ebx, variables
  4727 00003C34 8A06                <1> lkeq:	mov al, [esi]
  4728 00003C36 3C3D                <1> 	cmp al, '='
  4729 00003C38 741F                <1> 	je eqfnd	;is there an '=' sign?
  4730 00003C3A 3C00                <1> 	cmp al, 0
  4731 00003C3C 7403                <1> 	je echovars
  4732 00003C3E 46                  <1> 	inc esi
  4733 00003C3F EBF3                <1> 	jmp lkeq
  4734 00003C41 BE[6F150000]        <1> echovars: mov esi, variables
  4735 00003C46 BB[6F1A0000]        <1> 	mov ebx, varend
  4736 00003C4B B105                <1> 	mov cl, 5
  4737 00003C4D B504                <1> 	mov ch, 4
  4738 00003C4F E85CF7FFFF          <1> 	call array
  4739 00003C54 E94BF4FFFF          <1> 	jmp nwcmd
  4740 00003C59 46                  <1> eqfnd:	inc esi
  4741 00003C5A 8A06                <1> 	mov al, [esi]
  4742 00003C5C 3C00                <1> 	cmp al, 0
  4743 00003C5E 740F                <1> 	je readvar
  4744 00003C60 BE[7A1B0000]        <1> 	mov esi, buftxt
  4745 00003C65 BB[6F150000]        <1> 	mov ebx, variables
  4746 00003C6A E923000000          <1> 	jmp seek
  4747                              <1> readvar:
  4748 00003C6F B00D                <1> 	mov al, 13
  4749 00003C71 66BB0700            <1> 	mov bx, 7
  4750 00003C75 C605[962A0000]00    <1> 	mov byte [commandedit], 0
  4751 00003C7C BF[7A1D0000]        <1> 	mov edi, buftxtend
  4752 00003C81 E81DEEFFFF          <1> 	call int305
  4753 00003C86 BE[73730000]        <1> 	mov esi, line
  4754 00003C8B E8A4EDFFFF          <1> 	call print
  4755 00003C90 EB98                <1> 	jmp var
  4756 00003C92 668B03              <1> seek:	mov ax, [ebx]
  4757 00003C95 B105                <1> 	mov cl, 5
  4758 00003C97 B504                <1> 	mov ch, 4
  4759 00003C99 663D0000            <1> 	cmp ax, 0
  4760 00003C9D 0F8459000000        <1> 	je near save
  4761 00003CA3 6639C8              <1> 	cmp ax, cx
  4762 00003CA6 7403                <1> 	je skfnd
  4763 00003CA8 43                  <1> 	inc ebx
  4764 00003CA9 EBE7                <1> 	jmp seek
  4765 00003CAB BE[7A1B0000]        <1> skfnd:	mov esi, buftxt
  4766 00003CB0 46                  <1> 	inc esi
  4767 00003CB1 81C302000000        <1> 	add ebx, 2
  4768 00003CB7 89DF                <1> 	mov edi, ebx
  4769 00003CB9 B13D                <1> 	mov cl, '='
  4770 00003CBB E824F6FFFF          <1> 	call cndtest
  4771 00003CC0 3C01                <1> 	cmp al, 1	
  4772 00003CC2 7417                <1> 	je varfnd
  4773 00003CC4 89FB                <1> 	mov ebx, edi
  4774 00003CC6 BE[7A1B0000]        <1> 	mov esi, buftxt
  4775 00003CCB 668B03              <1> 	mov ax, [ebx]
  4776 00003CCE 663D0000            <1> 	cmp ax, 0
  4777 00003CD2 0F8424000000        <1> 	je near save
  4778 00003CD8 43                  <1> 	inc ebx
  4779 00003CD9 EBB7                <1> 	jmp seek
  4780 00003CDB 8A03                <1> varfnd:	mov al, [ebx]
  4781 00003CDD 3C04                <1> 	cmp al, 4
  4782 00003CDF 7404                <1> 	je save2
  4783 00003CE1 4B                  <1> 	dec ebx
  4784 00003CE2 4E                  <1> 	dec esi
  4785 00003CE3 EBF6                <1> 	jmp varfnd
  4786 00003CE5 4B                  <1> save2:	dec ebx
  4787 00003CE6 4E                  <1> 	dec esi
  4788 00003CE7 8A03                <1> 	mov al, [ebx]
  4789 00003CE9 3C05                <1> 	cmp al, 5
  4790 00003CEB 7402                <1> 	je remove
  4791 00003CED EBEC                <1> 	jmp varfnd
  4792 00003CEF 8A03                <1> remove: mov al, [ebx]
  4793 00003CF1 3C00                <1> 	cmp al, 0
  4794 00003CF3 749D                <1> 	je seek
  4795 00003CF5 B000                <1> 	mov al, 0
  4796 00003CF7 8803                <1> 	mov [ebx], al
  4797 00003CF9 43                  <1> 	inc ebx
  4798 00003CFA EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  4799 00003CFC BE[7A1B0000]        <1> save:	mov esi, buftxt
  4800 00003D01 43                  <1> 	inc ebx
  4801 00003D02 B005                <1> 	mov al, 5
  4802 00003D04 B404                <1> 	mov ah, 4
  4803 00003D06 668903              <1> 	mov [ebx], ax
  4804 00003D09 43                  <1> 	inc ebx
  4805 00003D0A 43                  <1> svhere:	inc ebx
  4806 00003D0B 46                  <1> 	inc esi
  4807 00003D0C 8A06                <1> 	mov al, [esi]
  4808 00003D0E 3C00                <1> 	cmp al, 0
  4809 00003D10 0F8442000000        <1> 	je near svdone
  4810 00003D16 3C25                <1> 	cmp al, '%'
  4811 00003D18 7404                <1> 	je ans2
  4812 00003D1A 8803                <1> 	mov [ebx], al	
  4813 00003D1C EBEC                <1> 	jmp svhere
  4814 00003D1E 56                  <1> ans2:	push esi
  4815 00003D1F BE[7A1D0000]        <1> 	mov esi, buf2
  4816 00003D24 E823000000          <1> 	call ansfnd
  4817 00003D29 E803000000          <1> 	call anscp
  4818 00003D2E 5E                  <1> 	pop esi
  4819 00003D2F EBD9                <1> 	jmp svhere
  4820 00003D31 8A06                <1> anscp:	mov al, [esi]
  4821 00003D33 8803                <1> 	mov [ebx], al
  4822 00003D35 81FE[8E1D0000]      <1> 	cmp esi, numbuf
  4823 00003D3B 74CD                <1> 	je svhere
  4824 00003D3D 3C00                <1> 	cmp al, 0
  4825 00003D3F 74C9                <1> 	je svhere
  4826 00003D41 43                  <1> 	inc ebx
  4827 00003D42 46                  <1> 	inc esi
  4828 00003D43 EBEC                <1> 	jmp anscp
  4829 00003D45 5E                  <1> ansnf:	pop esi
  4830 00003D46 8A06                <1> 	mov al, [esi]
  4831 00003D48 8803                <1> 	mov [ebx], al
  4832 00003D4A EBBE                <1> 	jmp svhere
  4833 00003D4C 46                  <1> ansfnd:	inc esi
  4834 00003D4D 8A06                <1> 	mov al, [esi]
  4835 00003D4F 3C00                <1> 	cmp al, 0
  4836 00003D51 74F2                <1> 	je ansnf
  4837 00003D53 3C30                <1> 	cmp al, '0'
  4838 00003D55 74F5                <1> 	je ansfnd
  4839 00003D57 C3                  <1> 	ret
  4840 00003D58 B000                <1> svdone:	mov al, 0
  4841 00003D5A 8803                <1> 	mov [ebx], al
  4842 00003D5C E943F3FFFF          <1> 	jmp nwcmd
  4843                              <1> 	
  4844 00003D61 05046C6F676F757400  <1> 	db 5,4,"logout",0
  4845                              <1> logout:
  4846 00003D6A E911F2FFFF          <1> 	jmp os
  4847                              <1> 	
  4848 00003D6F 05047265626F6F7400  <1> 	db 5,4,"reboot",0
  4849                              <1> rebootcomp:
  4850 00003D78 E9DBC4FFFF          <1> 	jmp coldboot
  4851                              <1> 
  4852 00003D7D 050473687574646F77- <1> 	db 5,4,"shutdown",0
  4853 00003D86 6E00                <1>
  4854                              <1> shutdowncomp:
  4855 00003D88 E9A1C4FFFF          <1> 	jmp shutdown
  4856                              <1> 	
  4857 00003D8D 05042E2F00          <1> 	db 5,4,"./",0
  4858                              <1> rundiskprog:
  4859 00003D92 BF[7A1B0000]        <1> 	mov edi, buftxt
  4860 00003D97 81C702000000        <1> 	add edi, 2
  4861 00003D9D BE00004000          <1> 	mov esi, 0x400000
  4862 00003DA2 E8762C0000          <1> 	call loadfile
  4863 00003DA7 81FA94010000        <1> 	cmp edx, 404
  4864 00003DAD 742E                <1> 	je noprogfound
  4865 00003DAF BB00004000          <1> 	mov ebx, 0x400000
  4866 00003DB4 66813B4558          <1> 	cmp word [ebx], "EX"
  4867 00003DB9 754B                <1> 	jne progbatchfound
  4868 00003DBB 81C302000000        <1> 	add ebx, 2
  4869 00003DC1 BF[7A1B0000]        <1> 	mov edi, buftxt
  4870 00003DC6 81C702000000        <1> 	add edi, 2
  4871                              <1> findspaceprog:
  4872 00003DCC 8A07                <1> 	mov al, [edi]
  4873 00003DCE 47                  <1> 	inc edi
  4874 00003DCF 3C20                <1> 	cmp al, " "
  4875 00003DD1 75F9                <1> 	jne findspaceprog
  4876                              <1> findnonspaceprog:
  4877 00003DD3 8A07                <1> 	mov al, [edi]
  4878 00003DD5 47                  <1> 	inc edi
  4879 00003DD6 3C20                <1> 	cmp al, " "
  4880 00003DD8 74F9                <1> 	je findnonspaceprog
  4881 00003DDA 4F                  <1> 	dec edi
  4882 00003DDB FFE3                <1> 	jmp ebx
  4883                              <1> noprogfound:
  4884 00003DDD BE[3A730000]        <1> 	mov esi, notfound1
  4885 00003DE2 E84DECFFFF          <1> 	call print
  4886 00003DE7 BE[7A1B0000]        <1> 	mov esi, buftxt
  4887 00003DEC 81C602000000        <1> 	add esi, 2
  4888 00003DF2 E83DECFFFF          <1> 	call print
  4889 00003DF7 BE[44730000]        <1> 	mov esi, notfound2
  4890 00003DFC E833ECFFFF          <1> 	call print
  4891 00003E01 E99EF2FFFF          <1> 	jmp nwcmd
  4892                              <1> progbatchfound:
  4893 00003E06 BF00004000          <1> 		mov edi, 0x400000
  4894 00003E0B C605[69150000]01    <1> 		mov byte [BATCHISON], 1
  4895                              <1> 	batchrunloop:
  4896 00003E12 E860F2FFFF          <1> 		call buftxtclear
  4897 00003E17 BE[7A1B0000]        <1> 		mov esi, buftxt
  4898                              <1> 	batchrunloop2:
  4899 00003E1C B10D                <1> 		mov cl, 13
  4900 00003E1E B50A                <1> 		mov ch, 10
  4901 00003E20 66390F              <1> 		cmp [edi], cx
  4902 00003E23 0F841E000000        <1> 		je near nxtbatchrunline
  4903 00003E29 66C1C108            <1> 		rol cx, 8
  4904 00003E2D 66390F              <1> 		cmp [edi], cx
  4905 00003E30 0F8411000000        <1> 		je near nxtbatchrunline
  4906 00003E36 803F00              <1> 		cmp byte [edi], 0
  4907 00003E39 0F8408000000        <1> 		je near nxtbatchrunline
  4908 00003E3F 8A07                <1> 		mov al, [edi]
  4909 00003E41 8806                <1> 		mov [esi], al
  4910 00003E43 46                  <1> 		inc esi
  4911 00003E44 47                  <1> 		inc edi
  4912 00003E45 EBD5                <1> 		jmp batchrunloop2
  4913                              <1> 	nxtbatchrunline:
  4914 00003E47 81C702000000        <1> 		add edi, 2
  4915 00003E4D 893D[AC3E0000]      <1> 		mov [batchedi], edi
  4916 00003E53 C60600              <1> 		mov byte [esi], 0
  4917 00003E56 BE[7A1B0000]        <1> 		mov esi, buftxt
  4918 00003E5B 803E00              <1> 		cmp byte [esi], 0
  4919 00003E5E 0F843C000000        <1> 		je near nobatchfoundrun
  4920 00003E64 BB00000000          <1> 		mov ebx, 0
  4921 00003E69 8A1D[00150000]      <1> 		mov bl, [IFON]
  4922 00003E6F 80FB01              <1> 		cmp bl, 1
  4923 00003E72 0F8338000000        <1> 		jae near iftestbatch
  4924                              <1> 	doneiftest:
  4925 00003E78 803D[733F0000]00    <1> 		cmp byte [runnextline], 0
  4926 00003E7F 0F8405000000        <1> 		je near noruniftest
  4927 00003E85 E89CF3FFFF          <1> 		call progtest
  4928                              <1> 	noruniftest:
  4929 00003E8A C605[733F0000]01    <1> 		mov byte [runnextline], 1
  4930 00003E91 8B3D[AC3E0000]      <1> 		mov edi, [batchedi]
  4931 00003E97 803F00              <1> 		cmp byte [edi], 0
  4932 00003E9A 0F8572FFFFFF        <1> 		jne near batchrunloop
  4933                              <1> 	nobatchfoundrun:
  4934 00003EA0 C605[69150000]00    <1> 		mov byte [BATCHISON], 0
  4935 00003EA7 E9F8F1FFFF          <1> 		jmp nwcmd
  4936                              <1> 	
  4937 00003EAC 00000000            <1> batchedi dd 0	
  4938                              <1> 	
  4939                              <1> 	iftestbatch:
  4940 00003EB0 BE[01150000]        <1> 		mov esi, IFTRUE
  4941 00003EB5 01DE                <1> 		add esi, ebx
  4942 00003EB7 803E00              <1> 		cmp byte [esi], 0
  4943 00003EBA 0F85B8FFFFFF        <1> 		jne near doneiftest
  4944 00003EC0 881D[743F0000]      <1> 		mov [iffalsebuf], bl
  4945 00003EC6 803D[6A150000]01    <1> 		cmp byte [LOOPON], 1
  4946 00003ECD 750B                <1> 		jne fifindbatch
  4947 00003ECF 8B3D[6B150000]      <1> 		mov edi, [LOOPPOS]
  4948 00003ED5 E938FFFFFF          <1> 		jmp batchrunloop
  4949                              <1> 	fifindbatch:
  4950 00003EDA 66B96966            <1> 		mov cx, "if"
  4951 00003EDE 66B86669            <1> 		mov ax, "fi"
  4952 00003EE2 663907              <1> 		cmp [edi], ax
  4953 00003EE5 0F841A000000        <1> 		je near fifoundbatch
  4954 00003EEB 66390F              <1> 		cmp [edi], cx
  4955 00003EEE 0F8462000000        <1> 		je near iffoundbatch
  4956 00003EF4 803F00              <1> 		cmp byte [edi], 0
  4957 00003EF7 0F8408000000        <1> 		je near fifoundbatch
  4958 00003EFD 81C702000000        <1> 		add edi, 2
  4959 00003F03 EBD5                <1> 		jmp fifindbatch
  4960                              <1> 	fifoundbatch:
  4961 00003F05 81C702000000        <1> 		add edi, 2
  4962 00003F0B B00D                <1> 		mov al, 13
  4963 00003F0D B40A                <1> 		mov ah, 10
  4964 00003F0F 663907              <1> 		cmp [edi], ax
  4965 00003F12 7414                <1> 		je goodfibatch
  4966 00003F14 66C1C008            <1> 		rol ax, 8
  4967 00003F18 663907              <1> 		cmp [edi], ax
  4968 00003F1B 740B                <1> 		je goodfibatch
  4969 00003F1D 803F00              <1> 		cmp byte [edi], 0
  4970 00003F20 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  4971 00003F26 EBB2                <1> 		jmp fifindbatch
  4972                              <1> 	goodfibatch:
  4973 00003F28 B001                <1> 		mov al, 1
  4974 00003F2A 2805[00150000]      <1> 		sub [IFON], al 
  4975 00003F30 A0[00150000]        <1> 		mov al, [IFON]
  4976 00003F35 8A1D[743F0000]      <1> 		mov bl, [iffalsebuf]
  4977 00003F3B 38D8                <1> 		cmp al, bl
  4978 00003F3D 779B                <1> 		ja fifindbatch
  4979 00003F3F BE[7A1B0000]        <1> 		mov esi, buftxt
  4980 00003F44 81EF02000000        <1> 		sub edi, 2
  4981 00003F4A C605[733F0000]00    <1> 		mov byte [runnextline], 0
  4982 00003F51 E9BCFEFFFF          <1> 		jmp batchrunloop
  4983                              <1> 	iffoundbatch:
  4984 00003F56 B020                <1> 		mov al, ' '
  4985 00003F58 81C702000000        <1> 		add edi, 2
  4986 00003F5E 3807                <1> 		cmp [edi], al
  4987 00003F60 0F8574FFFFFF        <1> 		jne near fifindbatch
  4988 00003F66 B001                <1> 		mov al, 1
  4989 00003F68 0005[00150000]      <1> 		add [IFON], al
  4990 00003F6E E967FFFFFF          <1> 		jmp fifindbatch
  4991                              <1> 		
  4992                              <1> 		
  4993 00003F73 01                  <1> runnextline db 1
  4994 00003F74 00                  <1> iffalsebuf db 0
  4995                              <1> 
  4996 00003F75 E92AF1FFFF          <1> notbatch: jmp nwcmd
  4997                              <1> 
  4998 00003F7A 05047768696C6500    <1> 	db 5,4,"while",0
  4999 00003F82 B000                <1> whilecmd:  mov al, 0
  5000 00003F84 3805[69150000]      <1> 	cmp [BATCHISON], al
  5001 00003F8A 0F84E5FFFFFF        <1> 	je near notbatch
  5002 00003F90 8B35[65150000]      <1> 	MOV esi, [BATCHPOS]
  5003 00003F96 4E                  <1> whilefnd: dec esi
  5004 00003F97 8A06                <1> 	mov al, [esi]
  5005 00003F99 3C0A                <1> 	cmp al, 10
  5006 00003F9B 0F8412000000        <1> 	je near whilefnd2
  5007 00003FA1 3C0D                <1> 	cmp al, 13
  5008 00003FA3 0F840A000000        <1> 	je near whilefnd2
  5009 00003FA9 3C00                <1> 	cmp al, 0
  5010 00003FAB 0F8402000000        <1> 	je near whilefnd2
  5011 00003FB1 EBE3                <1> 	jmp whilefnd
  5012                              <1> whilefnd2:
  5013 00003FB3 8935[6B150000]      <1> 	mov [LOOPPOS], esi
  5014 00003FB9 C605[6A150000]01    <1> 	mov BYTE [LOOPON], 1
  5015 00003FC0 0005[00150000]      <1> 	add [IFON], al
  5016 00003FC6 BE[7A1B0000]        <1> 	mov esi, buftxt
  5017 00003FCB BB[7A1B0000]        <1> 	mov ebx, buftxt
  5018 00003FD0 81C306000000        <1> 	add ebx, 6
  5019 00003FD6 E923000000          <1> 	jmp chkeqsn
  5020                              <1> 
  5021                              <1> 
  5022 00003FDB 0504696600          <1> 	db 5,4,"if",0
  5023 00003FE0 B000                <1> ifcmd:	mov al, 0
  5024 00003FE2 3805[69150000]      <1> 	cmp [BATCHISON], al
  5025 00003FE8 0F8487FFFFFF        <1> 	je near notbatch
  5026 00003FEE BE[7A1B0000]        <1> 	mov esi, buftxt
  5027 00003FF3 BB[7A1B0000]        <1> 	mov ebx, buftxt
  5028 00003FF8 81C303000000        <1> 	add ebx, 3
  5029 00003FFE 8A06                <1> chkeqsn: mov al, [esi]
  5030 00004000 3C00                <1> 	cmp al, 0
  5031 00004002 0F846DFFFFFF        <1> 	je near notbatch
  5032 00004008 3C3D                <1> 	cmp al, '='
  5033 0000400A 0F8403000000        <1> 	je near chkeqdn
  5034 00004010 46                  <1> 	inc esi
  5035 00004011 EBEB                <1> 	jmp chkeqsn
  5036 00004013 B000                <1> chkeqdn: mov al, 0 
  5037 00004015 8806                <1> 	mov [esi], al
  5038 00004017 46                  <1> 	inc esi
  5039 00004018 8A06                <1> 	mov al, [esi]
  5040 0000401A 3C24                <1> 	cmp al, '$'
  5041 0000401C 0F8462000000        <1> 	je near ifvar1
  5042 00004022 8A03                <1> ifvar2: mov al, [ebx]
  5043 00004024 3C24                <1> 	cmp al, '$'
  5044 00004026 0F847B000000        <1> 	je near ifvar3
  5045 0000402C E879F2FFFF          <1> ifvar4:	call tester
  5046 00004031 3C01                <1> 	cmp al, 1
  5047 00004033 0F8405000000        <1> 	je near trueif
  5048 00004039 E923000000          <1> 	jmp falseif
  5049 0000403E B800000000          <1> trueif:	mov eax, 0
  5050 00004043 A0[00150000]        <1> 	mov al, [IFON]
  5051 00004048 FEC0                <1> 	inc al
  5052 0000404A A2[00150000]        <1> 	mov [IFON], al
  5053 0000404F B400                <1> 	mov ah, 0
  5054 00004051 BE[01150000]        <1> 	mov esi, IFTRUE
  5055 00004056 01C6                <1> 	add esi, eax
  5056 00004058 B401                <1> 	mov ah, 1
  5057 0000405A 8826                <1> 	mov [esi], ah
  5058 0000405C E943F0FFFF          <1> 	jmp nwcmd
  5059 00004061 B800000000          <1> falseif: mov eax, 0
  5060 00004066 A0[00150000]        <1> 	mov al, [IFON]
  5061 0000406B FEC0                <1> 	inc al
  5062 0000406D A2[00150000]        <1> 	mov [IFON], al
  5063 00004072 B400                <1> 	mov ah, 0
  5064 00004074 BE[01150000]        <1> 	mov esi, IFTRUE
  5065 00004079 01C6                <1> 	add esi, eax
  5066 0000407B B400                <1> 	mov ah, 0
  5067 0000407D 8826                <1> 	mov [esi], ah
  5068 0000407F E920F0FFFF          <1> 	jmp nwcmd
  5069 00004084 89F7                <1> ifvar1: mov edi, esi
  5070 00004086 81EF[7A1B0000]      <1> 	sub edi, buftxt
  5071 0000408C 47                  <1> 	inc edi
  5072 0000408D BB[6F150000]        <1> 	mov ebx, variables
  5073 00004092 E897F8FFFF          <1> 	call nxtvrech
  5074 00004097 BB[7A1B0000]        <1> 	mov ebx, buftxt
  5075 0000409C 81C303000000        <1> 	add ebx, 3
  5076 000040A2 E97BFFFFFF          <1> 	jmp ifvar2
  5077 000040A7 8935[C7400000]      <1> ifvar3: mov [esiif], esi
  5078 000040AD BF04000000          <1> 	mov edi, 4
  5079 000040B2 BB[6F150000]        <1> 	mov ebx, variables
  5080 000040B7 E872F8FFFF          <1> 	call nxtvrech
  5081 000040BC 8B35[C7400000]      <1> 	mov esi, [esiif]
  5082 000040C2 E965FFFFFF          <1> 	jmp ifvar4
  5083                              <1> 
  5084 000040C7 00000000            <1> esiif dd 0
  5085                              <1> 	
  5086 000040CB 0504656C736500      <1> 	db 5,4,"else",0
  5087 000040D2 B800000000          <1> elsecmd:	mov eax, 0
  5088 000040D7 A0[00150000]        <1> 	mov al, [IFON]
  5089 000040DC BE[01150000]        <1> 	mov esi, IFTRUE
  5090 000040E1 01C6                <1> 	add esi, eax
  5091 000040E3 8A06                <1> 	mov al, [esi]
  5092 000040E5 3C00                <1> 	cmp al, 0		
  5093 000040E7 7409                <1> 	je else1
  5094 000040E9 3C01                <1> 	cmp al, 1
  5095 000040EB 740E                <1> 	je else2
  5096 000040ED E9B2EFFFFF          <1> 	jmp nwcmd
  5097 000040F2 B001                <1> else1:  mov al, 1
  5098 000040F4 8806                <1> 	mov [esi], al
  5099 000040F6 E9A9EFFFFF          <1> 	jmp nwcmd
  5100 000040FB B000                <1> else2:	mov al, 0
  5101 000040FD 8806                <1> 	mov [esi], al
  5102 000040FF E9A0EFFFFF          <1> 	jmp nwcmd
  5103                              <1> 
  5104 00004104 05046C6F6F7000      <1> 	db 5,4,"loop",0
  5105 0000410B 3805[6A150000]      <1> 	cmp [LOOPON], al
  5106 00004111 0F8405000000        <1> 	je near filoop
  5107 00004117 E988EFFFFF          <1> 	jmp nwcmd
  5108 0000411C 8B35[6B150000]      <1> filoop: mov esi, [LOOPPOS]
  5109 00004122 8935[65150000]      <1> 	mov [BATCHPOS], esi
  5110 00004128 E977EFFFFF          <1> 	jmp nwcmd
  5111                              <1> 	
  5112                              <1> 
  5113 0000412D 0504666900          <1> 	db 5,4,"fi",0
  5114 00004132 B000                <1> 	mov al, 0
  5115 00004134 3805[69150000]      <1> 	cmp [BATCHISON], al
  5116 0000413A 0F8435FEFFFF        <1> 	je near notbatch
  5117 00004140 B001                <1> fi:	mov al, 1
  5118 00004142 2805[00150000]      <1> 	sub [IFON],al
  5119 00004148 E957EFFFFF          <1> 	jmp nwcmd
  5120                              <1> 
  5121 0000414D 050473746F7000      <1> 	db 5,4,"stop",0
  5122 00004154 B000                <1> stop:	mov al, 0
  5123 00004156 A2[69150000]        <1> 	mov [BATCHISON], al
  5124 0000415B A2[00150000]        <1> 	mov [IFON], al
  5125 00004160 A2[01150000]        <1> 	mov [IFTRUE], al
  5126 00004165 A2[6A150000]        <1> 	mov [LOOPON], al
  5127 0000416A E935EFFFFF          <1> 	jmp nwcmd
  5128                                      %include 'source/programs.asm'
  5129                              <1> ;db 5,4,"internet",0
  5130                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  5131                              <1> 							;;^^used to^^, now tests int 30h functions		
  5132 0000416F B403                <1> 		mov ah, 3
  5133 00004171 CD30                <1> 		int 30h
  5134 00004173 B401                <1> 		mov ah, 1
  5135                              <1> 		;mov esi, datmsg
  5136 00004175 66BB0700            <1> 		mov bx, 7
  5137 00004179 B000                <1> 		mov al, 0
  5138 0000417B CD30                <1> 		int 30h
  5139                              <1> 	    ;jmp packettest
  5140 0000417D E922EFFFFF          <1> 		jmp nwcmd
  5141                              <1> ;datmsg: db "Internet has not been implemented yet.",10,13,0
  5142                              <1> 	
  5143 00004182 0504636C696E6500    <1> db 5,4, "cline",0
  5144 0000418A B800000000          <1> 	mov eax, 0
  5145 0000418F A2[A3350000]        <1> 	mov [firsthexshown], al
  5146 00004194 A3[AD410000]        <1> 	mov [clinebuf], eax
  5147                              <1> clinelp:
  5148 00004199 8B0D[AD410000]      <1> 	mov ecx, [clinebuf]
  5149 0000419F 41                  <1> 	inc ecx
  5150 000041A0 890D[AD410000]      <1> 	mov [clinebuf], ecx
  5151 000041A6 E80DF4FFFF          <1> 	call showhex
  5152 000041AB EBEC                <1> 	jmp clinelp
  5153 000041AD 00000000            <1> 	clinebuf dd 0
  5154                              <1> 	
  5155 000041B1 050474687265616473- <1> db 5,4,"threads",0
  5156 000041BA 00                  <1>
  5157 000041BB E94E2A0000          <1> 	jmp threadstarttest
  5158                              <1> 	
  5159 000041C0 050472656700        <1> db 5,4,"reg",0
  5160 000041C6 CD03                <1> 	int 3
  5161 000041C8 E9D7EEFFFF          <1> 	jmp nwcmd
  5162                              <1> 	
  5163 000041CD 0504636861726D6170- <1> db 5,4,"charmap",0
  5164 000041D6 00                  <1>
  5165 000041D7 B000                <1> 	mov al, 0
  5166 000041D9 66BB0700            <1> 	mov bx, 7
  5167                              <1> charmapcopy:
  5168 000041DD FEC0                <1> 	inc al
  5169 000041DF 3C08                <1> 	cmp al, 8
  5170 000041E1 7426                <1> 	je charmapnocopy
  5171 000041E3 3C09                <1> 	cmp al, 9
  5172 000041E5 7422                <1> 	je charmapnocopy
  5173 000041E7 3C0A                <1> 	cmp al, 10
  5174 000041E9 741E                <1> 	je charmapnocopy
  5175 000041EB 3C0D                <1> 	cmp al, 13
  5176 000041ED 741A                <1> 	je charmapnocopy
  5177 000041EF 3C00                <1> 	cmp al, 0
  5178 000041F1 7407                <1> 	je nomorecharmap
  5179 000041F3 E820E6FFFF          <1> 	call int301prnt
  5180 000041F8 EBE3                <1> 	jmp charmapcopy
  5181                              <1> nomorecharmap:
  5182 000041FA BE[73730000]        <1> 	mov esi, line
  5183 000041FF E830E8FFFF          <1> 	call print
  5184 00004204 E99BEEFFFF          <1> 	jmp nwcmd
  5185                              <1> charmapnocopy:
  5186 00004209 6650                <1> 	push ax
  5187 0000420B B020                <1> 	mov al, " "
  5188 0000420D E806E6FFFF          <1> 	call int301prnt
  5189 00004212 6658                <1> 	pop ax
  5190 00004214 EBC7                <1> 	jmp charmapcopy
  5191                              <1> 	
  5192 00004216 05046B6579636F6465- <1> db 5,4,"keycode",0
  5193 0000421F 00                  <1>
  5194                              <1> keycode:
  5195 00004220 C605[DE290000]00    <1> 	mov byte [trans], 0
  5196 00004227 E893060000          <1> 	call guistartin
  5197 0000422C B800000000          <1> 	mov eax, 0
  5198 00004231 B900000000          <1> 	mov ecx, 0
  5199 00004236 8A0D[9A480000]      <1> 	mov cl, [specialkey]
  5200 0000423C 80F900              <1> 	cmp cl, 0
  5201 0000423F 0F8405000000        <1> 	je near nospecialkeycode
  5202 00004245 E85AF3FFFF          <1> 	call showhexsmall
  5203                              <1> nospecialkeycode:
  5204 0000424A 66A1[DC290000]      <1> 	mov ax, [lastkey]
  5205 00004250 88E1                <1> 	mov cl, ah
  5206 00004252 E84DF3FFFF          <1> 	call showhexsmall
  5207 00004257 EBC7                <1> 	jmp keycode
  5208                              <1> 
  5209 00004259 050470636900        <1> db 5,4,"pci",0
  5210                              <1> 	pcishow:
  5211 0000425F E8FF250000          <1> 	call pcidump
  5212 00004264 E93BEEFFFF          <1> 	jmp nwcmd
  5213                              <1> 	
  5214 00004269 050461727000        <1> db 5,4,"arp",0
  5215 0000426F E8EA240000          <1> 	call arptest
  5216 00004274 E92BEEFFFF          <1> 	jmp nwcmd
  5217                              <1> 
  5218 00004279 0504626174636800    <1> db 5,4,"batch",0
  5219                              <1> 	batchst: 
  5220 00004281 BF[7A1B0000]        <1> 		mov edi, buftxt
  5221 00004286 81C706000000        <1> 		add edi, 6
  5222 0000428C 803F00              <1> 		cmp byte [edi], 0
  5223 0000428F 0F8473000000        <1> 		je near nonamefound
  5224 00004295 BE00004000          <1> 		mov esi, 0x400000
  5225 0000429A E87E270000          <1> 		call loadfile
  5226 0000429F 89D0                <1> 		mov eax, edx
  5227 000042A1 3D94010000          <1> 		cmp eax, 404
  5228 000042A6 746F                <1> 		je goodbatchname
  5229 000042A8 BE[B7420000]        <1> 		mov esi, badbatchname
  5230 000042AD E882E7FFFF          <1> 		call print
  5231 000042B2 E9EDEDFFFF          <1> 		jmp nwcmd
  5232 000042B7 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  5233 000042C0 20616C726561647920- <1>
  5234 000042C9 657869737473210A0D- <1>
  5235 000042D2 00                  <1>
  5236 000042D3 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  5237 000042DC 746F20747970652061- <1>
  5238 000042E5 206E616D6520616674- <1>
  5239 000042EE 65722074686520636F- <1>
  5240 000042F7 6D6D616E642E0A0D00  <1>
  5241 00004300 00000000            <1> 		esicache3 dd 0
  5242 00004304 00000000            <1> 		esicache2 dd 0
  5243                              <1> 	nonamefound:
  5244 00004308 BE[D3420000]        <1> 		mov esi, namenotfoundbatch
  5245 0000430D E822E7FFFF          <1> 		call print
  5246 00004312 E98DEDFFFF          <1> 		jmp nwcmd
  5247                              <1> 	goodbatchname:
  5248 00004317 BE00004000          <1> 		mov esi, 0x400000
  5249                              <1> 	batchcreate:
  5250 0000431C 8935[00430000]      <1> 		mov [esicache3], esi
  5251 00004322 BF00008000          <1> 		mov edi, 0x800000
  5252 00004327 B00D                <1> 		mov al, 13
  5253 00004329 B307                <1> 		mov bl, 7
  5254 0000432B B404                <1> 		mov ah, 4
  5255 0000432D CD30                <1> 		int 30h
  5256 0000432F 8935[04430000]      <1> 		mov [esicache2], esi
  5257 00004335 8A0E                <1> 		mov cl, [esi]
  5258 00004337 8B35[00430000]      <1> 		mov esi, [esicache3]
  5259 0000433D BB[94430000]        <1> 		mov ebx, exitword
  5260 00004342 E89DEFFFFF          <1> 		call cndtest
  5261 00004347 3C01                <1> 		cmp al, 1
  5262 00004349 7423                <1> 		je endbatchcreate
  5263 0000434B 3C02                <1> 		cmp al, 2
  5264 0000434D 741F                <1> 		je endbatchcreate
  5265 0000434F BE[73730000]        <1> 		mov esi, line
  5266 00004354 E8DBE6FFFF          <1> 		call print
  5267 00004359 8B35[04430000]      <1> 		mov esi, [esicache2]
  5268 0000435F B00D                <1> 		mov al, 13
  5269 00004361 B40A                <1> 		mov ah, 10
  5270 00004363 668906              <1> 		mov [esi], ax
  5271 00004366 81C602000000        <1> 		add esi, 2
  5272 0000436C EBAE                <1> 		jmp batchcreate
  5273                              <1> 	endbatchcreate:
  5274 0000436E 8B35[00430000]      <1> 		mov esi, [esicache3]
  5275 00004374 B800000000          <1> 		mov eax, 0
  5276 00004379 8806                <1> 		mov [esi], al
  5277 0000437B BE[73730000]        <1> 		mov esi, line
  5278 00004380 E8AFE6FFFF          <1> 		call print
  5279 00004385 BE00004000          <1> 		mov esi, 0x400000
  5280 0000438A E8A5E6FFFF          <1> 		call print
  5281 0000438F E910EDFFFF          <1> 		jmp nwcmd
  5282                              <1> 	
  5283 00004394 5C7800              <1> 	exitword db "\x",0
  5284 00004397 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  5285 000043A0 6F20657869742E0A0D- <1>
  5286 000043A9 00                  <1>
  5287                              <1> 		
  5288 000043AA 050473686F7700      <1> db 5,4,"show",0
  5289 000043B1 BF[7A1B0000]        <1> 		mov edi, buftxt
  5290 000043B6 81C705000000        <1> 		add edi, 5
  5291 000043BC BE00004000          <1> 		mov esi, 0x400000
  5292 000043C1 E857260000          <1> 		call loadfile
  5293 000043C6 BE00004000          <1> 		mov esi, 0x400000
  5294 000043CB 66813E424D          <1> 		cmp word [esi], "BM"
  5295 000043D0 7414                <1> 		je bmpfound
  5296 000043D2 E85DE6FFFF          <1> 		call print
  5297 000043D7 BE[73730000]        <1> 		mov esi, line
  5298 000043DC E853E6FFFF          <1> 		call print
  5299 000043E1 E9BEECFFFF          <1> 		jmp nwcmd
  5300                              <1> bmpfound:
  5301 000043E6 803D[04500000]00    <1> 		cmp byte [guion], 0
  5302 000043ED 0F8452000000        <1> 		je near noguibmp
  5303 000043F3 BE00004000          <1> 		mov esi, 0x400000
  5304 000043F8 B900000000          <1> 		mov ecx, 0
  5305 000043FD BA00000000          <1> 		mov edx, 0
  5306 00004402 B800000000          <1> 		mov eax, 0
  5307 00004407 BB00000000          <1> 		mov ebx, 0
  5308 0000440C E8AB1C0000          <1> 		call showbmp
  5309 00004411 B000                <1> 		mov al, 0
  5310 00004413 B405                <1> 		mov ah, 5
  5311 00004415 CD30                <1> 		int 30h
  5312 00004417 E84F0A0000          <1> 		call guiclear
  5313 0000441C E8E40B0000          <1> 		call clearmousecursor
  5314 00004421 E876120000          <1> 		call reloadallgraphics
  5315 00004426 BE[7A1B0000]        <1> 		mov esi, buftxt
  5316 0000442B 81C605000000        <1> 		add esi, 5
  5317 00004431 E8FEE5FFFF          <1> 		call print
  5318 00004436 BE[C8440000]        <1> 		mov esi, loadedbmpmsg
  5319 0000443B E8F4E5FFFF          <1> 		call print
  5320 00004440 E95FECFFFF          <1> 		jmp nwcmd
  5321                              <1> noguibmp:
  5322 00004445 BE[54440000]        <1> 		mov esi, warnguibmp
  5323 0000444A E8E5E5FFFF          <1> 		call print
  5324 0000444F E950ECFFFF          <1> 		jmp nwcmd
  5325 00004454 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  5326 0000445D 6E6F7420626520646F- <1>
  5327 00004466 6E6520776974686F75- <1>
  5328 0000446F 742074686520677569- <1>
  5329 00004478 2E0A0D00            <1>
  5330                              <1> 
  5331                              <1> 		
  5332                              <1> filenotfound:
  5333 0000447C BE[A5440000]        <1> 		mov esi, filenf
  5334 00004481 E8AEE5FFFF          <1> 		call print
  5335 00004486 BE[7A1B0000]        <1> 		mov esi, buftxt
  5336 0000448B 81C608000000        <1> 		add esi, 8
  5337 00004491 E89EE5FFFF          <1> 		call print
  5338 00004496 BE[B0440000]        <1> 		mov esi, filenf2
  5339 0000449B E894E5FFFF          <1> 		call print
  5340 000044A0 E9FFEBFFFF          <1> 		jmp nwcmd
  5341 000044A5 5468652066696C6520- <1> filenf db "The file ",34,0
  5342 000044AE 2200                <1>
  5343 000044B0 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  5344 000044B9 6F7420626520666F75- <1>
  5345 000044C2 6E642E0D0A00        <1>
  5346                              <1> 		
  5347 000044C8 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  5348 000044D1 0A00                <1>
  5349                              <1> 
  5350 000044D3 050464756D7000      <1> 	db 5,4,"dump",0
  5351 000044DA BE[7A1B0000]        <1> 	mov esi, buftxt
  5352 000044DF 81C605000000        <1> 	add esi, 5
  5353 000044E5 B900000000          <1> 	mov ecx, 0
  5354 000044EA E808F2FFFF          <1> 	call cnvrttxt
  5355 000044EF 89CF                <1> 	mov edi, ecx
  5356 000044F1 89FE                <1> 	mov esi, edi
  5357 000044F3 81C680030000        <1> 	add esi, 896
  5358 000044F9 C605[A3350000]00    <1> 	mov byte [firsthexshown],0
  5359                              <1> dumphexloop:
  5360 00004500 8B0F                <1> 	mov ecx, [edi]
  5361 00004502 E8B1F0FFFF          <1> 	call showhex
  5362 00004507 81C704000000        <1> 	add edi, 4
  5363 0000450D 39F7                <1> 	cmp edi, esi
  5364 0000450F 72EF                <1> 	jb dumphexloop
  5365 00004511 E98EEBFFFF          <1> 	jmp nwcmd
  5366                              <1> 
  5367 00004516 050474696D6500      <1> db 5,4,"time",0
  5368 0000451D E80F000000          <1> 	call time
  5369 00004522 BE[1C470000]        <1> 	mov esi, timeshow
  5370 00004527 E808E5FFFF          <1> 	call print
  5371 0000452C E9C1000000          <1> 	jmp findday
  5372                              <1> time:
  5373 00004531 E86E010000          <1> 	call tstackput1
  5374 00004536 B00A                <1> 	mov al,10			;Get RTC register A
  5375 00004538 E898010000          <1> 	call tget1
  5376 0000453D A880                <1> 	test al,0x80			;Is update in progress?
  5377 0000453F 75F0                <1> 	jne time				; yes, wait
  5378                              <1> 
  5379 00004541 B000                <1> 	mov al,0			;Get seconds (00 to 59)
  5380 00004543 E88D010000          <1> 	call tget1
  5381 00004548 A2[13470000]        <1> 	mov [RTCtimeSecond],al
  5382                              <1> 
  5383 0000454D B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  5384 0000454F E881010000          <1> 	call tget1
  5385 00004554 A2[14470000]        <1> 	mov [RTCtimeMinute],al
  5386                              <1> 
  5387 00004559 B004                <1> 	mov al,0x04			;Get hours (see notes)
  5388 0000455B E875010000          <1> 	call tget1
  5389 00004560 A2[15470000]        <1> 	mov [RTCtimeHour],al
  5390                              <1> 
  5391 00004565 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  5392 00004567 E869010000          <1> 	call tget1
  5393                              <1> ;	mov ah, 0			;;fix day
  5394                              <1> ;	mov ah, al
  5395                              <1> ;	shr ah, 4
  5396                              <1> ;	shl al, 4
  5397                              <1> ;	shr al, 4
  5398                              <1> ;	cmp al, 0
  5399                              <1> ;	jne nodecahday
  5400                              <1> ;	mov al, 10
  5401                              <1> ;	dec ah
  5402                              <1> ;nodecahday:
  5403                              <1> ;	dec al
  5404                              <1> ;	shl ah, 4
  5405                              <1> ;	or al, ah
  5406 0000456C A2[16470000]        <1> 	mov [RTCtimeDay],al
  5407                              <1> 
  5408 00004571 B008                <1> 	mov al,0x08			;Get month (01 to 12)
  5409 00004573 E85D010000          <1> 	call tget1
  5410 00004578 A2[17470000]        <1> 	mov [RTCtimeMonth],al
  5411                              <1> 
  5412 0000457D B009                <1> 	mov al,0x09			;Get year (00 to 99)
  5413 0000457F E851010000          <1> 	call tget1
  5414 00004584 A2[18470000]        <1> 	mov [RTCtimeYear],al
  5415                              <1> 	
  5416 00004589 BE[1C470000]        <1> 	mov esi, timeshow
  5417 0000458E 8A2D[15470000]      <1> 	mov ch, [RTCtimeHour]
  5418 00004594 E847010000          <1> 	call tput1
  5419 00004599 8A2D[14470000]      <1> 	mov ch, [RTCtimeMinute]
  5420 0000459F E83C010000          <1> 	call tput1
  5421 000045A4 8A2D[13470000]      <1> 	mov ch, [RTCtimeSecond]
  5422 000045AA E831010000          <1> 	call tput1
  5423 000045AF BE[26470000]        <1> 	mov esi, dateshow
  5424 000045B4 8A2D[17470000]      <1> 	mov ch, [RTCtimeMonth]
  5425 000045BA E821010000          <1> 	call tput1
  5426 000045BF 8A2D[16470000]      <1> 	mov ch, [RTCtimeDay]
  5427 000045C5 E816010000          <1> 	call tput1
  5428 000045CA B520                <1> 	mov ch, 0x20
  5429 000045CC E80F010000          <1> 	call tput1
  5430 000045D1 4E                  <1> 	dec esi
  5431 000045D2 8A2D[18470000]      <1> 	mov ch, [RTCtimeYear]
  5432 000045D8 E803010000          <1> 	call tput1
  5433 000045DD E8DC000000          <1> 	call tstackget1
  5434 000045E2 C3                  <1> 	ret
  5435 000045E3 BE[1C470000]        <1> 	mov esi, timeshow
  5436 000045E8 66BB0700            <1> 	mov bx, 7
  5437 000045EC B401                <1> 	mov ah, 1
  5438 000045EE B000                <1> 	mov al, 0
  5439 000045F0 CD30                <1> 	int 30h
  5440                              <1> ;;get day of week
  5441                              <1> ;;add these:
  5442                              <1> ;;century value
  5443                              <1> ;;last 2 digits of year
  5444                              <1> ;;last 2 digits of year right shifted twice
  5445                              <1> ;;month table value
  5446                              <1> ;;day of the month
  5447                              <1> ;;divide these by 7
  5448                              <1> ;;the remainder is the day
  5449                              <1> findday:
  5450 000045F2 B800000000          <1> 	mov eax, 0
  5451                              <1> ;;first convert the values from BCD to hex
  5452 000045F7 A0[16470000]        <1> 	mov al, [RTCtimeDay]
  5453 000045FC E88A000000          <1> 	call converttohex
  5454 00004601 8825[19470000]      <1> 	mov [dayhex], ah
  5455 00004607 A0[17470000]        <1> 	mov al, [RTCtimeMonth]
  5456 0000460C E87A000000          <1> 	call converttohex
  5457 00004611 8825[1A470000]      <1> 	mov [monthhex], ah
  5458 00004617 A0[18470000]        <1> 	mov al, [RTCtimeYear]
  5459 0000461C E86A000000          <1> 	call converttohex
  5460 00004621 8825[1B470000]      <1> 	mov [yearhex], ah
  5461 00004627 B800000000          <1> 	mov eax, 0
  5462 0000462C A0[1B470000]        <1> 	mov al, [yearhex]
  5463 00004631 C0E802              <1> 	shr al, 2
  5464 00004634 0205[1B470000]      <1> 	add al, [yearhex]
  5465 0000463A 0506000000          <1> 	add eax, 6
  5466 0000463F BB00000000          <1> 	mov ebx, 0
  5467 00004644 8A1D[1A470000]      <1> 	mov bl, [monthhex]
  5468 0000464A FECB                <1> 	dec bl
  5469 0000464C 81C3[3C470000]      <1> 	add ebx, month
  5470 00004652 B900000000          <1> 	mov ecx, 0
  5471 00004657 8A0B                <1> 	mov cl, [ebx]
  5472 00004659 01C8                <1> 	add eax, ecx
  5473 0000465B 8A0D[19470000]      <1> 	mov cl, [dayhex]
  5474 00004661 01C8                <1> 	add eax, ecx
  5475 00004663 66BB0700            <1> 	mov bx, 7
  5476 00004667 BA00000000          <1> 	mov edx, 0
  5477 0000466C 66F7F3              <1> 	div bx
  5478 0000466F C1E202              <1> 	shl edx, 2
  5479 00004672 81C2[48470000]      <1> 	add edx, day
  5480 00004678 8B32                <1> 	mov esi, [edx]
  5481 0000467A 66BB0700            <1> 	mov bx, 7
  5482 0000467E B401                <1> 	mov ah, 1
  5483 00004680 B000                <1> 	mov al, 0
  5484 00004682 CD30                <1> 	int 30h
  5485 00004684 66B80000            <1> 	mov ax, 0
  5486 00004688 CD30                <1> 	int 30h
  5487 0000468A F4                  <1> 	hlt
  5488                              <1> 	
  5489                              <1> converttohex:
  5490 0000468B 88C4                <1> 	mov ah, al
  5491 0000468D C0E804              <1> 	shr al, 4
  5492 00004690 C0E404              <1> 	shl ah, 4
  5493 00004693 C0EC04              <1> 	shr ah, 4
  5494 00004696 3C00                <1> 	cmp al, 0
  5495 00004698 7409                <1> 	je noconverttohex
  5496                              <1> converttohexlp:
  5497 0000469A 80C40A              <1> 	add ah, 10
  5498 0000469D FEC8                <1> 	dec al
  5499 0000469F 3C00                <1> 	cmp al, 0
  5500 000046A1 75F7                <1> 	jne converttohexlp
  5501                              <1> noconverttohex:
  5502 000046A3 C3                  <1> 	ret
  5503                              <1> 	
  5504                              <1> tstackput1:
  5505 000046A4 8935[0F470000]      <1> 	mov [tstack + 20], esi
  5506 000046AA BE[FB460000]        <1> 	mov esi, tstack
  5507 000046AF 8906                <1> 	mov [esi], eax
  5508 000046B1 895E04              <1> 	mov [esi + 4], ebx
  5509 000046B4 894E08              <1> 	mov [esi + 8], ecx
  5510 000046B7 89560C              <1> 	mov [esi + 12], edx
  5511 000046BA 897E10              <1> 	mov [esi + 16], edi
  5512 000046BD C3                  <1> 	ret
  5513                              <1> 	
  5514                              <1> tstackget1:
  5515 000046BE BE[FB460000]        <1> 	mov esi, tstack
  5516 000046C3 8B06                <1> 	mov eax, [esi]
  5517 000046C5 8B5E04              <1> 	mov ebx, [esi + 4]
  5518 000046C8 8B4E08              <1> 	mov ecx, [esi + 8]
  5519 000046CB 8B560C              <1> 	mov edx, [esi + 12]
  5520 000046CE 8B7E10              <1> 	mov edi, [esi + 16]
  5521 000046D1 8B7614              <1> 	mov esi, [esi + 20]
  5522 000046D4 C3                  <1> 	ret
  5523                              <1> 	
  5524                              <1> tget1:
  5525 000046D5 66BA7000            <1> 	mov dx, 0x70
  5526 000046D9 EE                  <1> 	out dx, al
  5527 000046DA 6642                <1> 	inc dx
  5528 000046DC EC                  <1> 	in al, dx
  5529 000046DD 664A                <1> 	dec dx
  5530 000046DF C3                  <1> 	ret
  5531                              <1> 	
  5532                              <1> tput1:
  5533 000046E0 66C1E904            <1> 	shr cx, 4
  5534 000046E4 B030                <1> 	mov al, 48
  5535 000046E6 00E8                <1> 	add al, ch
  5536 000046E8 8806                <1> 	mov [esi], al
  5537 000046EA 46                  <1> 	inc esi
  5538 000046EB B030                <1> 	mov al, 48
  5539 000046ED C0E904              <1> 	shr cl, 4
  5540 000046F0 00C8                <1> 	add al, cl
  5541 000046F2 8806                <1> 	mov [esi], al
  5542 000046F4 81C602000000        <1> 	add esi, 2
  5543 000046FA C3                  <1> 	ret
  5544                              <1> 		
  5545 000046FB 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  5546 00004704 000000000000000000- <1>
  5547 0000470D 000000000000        <1>
  5548 00004713 00                  <1> 	RTCtimeSecond db 0
  5549 00004714 00                  <1> 	RTCtimeMinute db 0
  5550 00004715 00                  <1> 	RTCtimeHour db 0
  5551 00004716 00                  <1> 	RTCtimeDay db 0
  5552 00004717 00                  <1> 	RTCtimeMonth db 0
  5553 00004718 00                  <1> 	RTCtimeYear db 0
  5554 00004719 00                  <1> 	dayhex db 0
  5555 0000471A 00                  <1> 	monthhex db 0
  5556 0000471B 00                  <1> 	yearhex db 0
  5557 0000471C 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  5558 00004725 0A                  <1>
  5559 00004726 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  5560 0000472F 300D0A00            <1>
  5561                              <1> 	oldcentury:	;;from 1700 to 1900
  5562 00004733 040200              <1> 	db 4,2,0
  5563                              <1> 	century:	;;from 2000 to 2500
  5564 00004736 060402000604        <1> 	db 6,4,2,0,6,4
  5565                              <1> 	month:
  5566 0000473C 000303060104060205- <1> 	db 0,3,3,6,1,4,6,2,5,0,3,5
  5567 00004745 000305              <1>
  5568                              <1> 	day:
  5569 00004748 [64470000]          <1> 	dd sunday
  5570 0000474C [6D470000]          <1> 	dd monday
  5571 00004750 [76470000]          <1> 	dd tuesday
  5572 00004754 [80470000]          <1> 	dd wednesday
  5573 00004758 [8C470000]          <1> 	dd thursday
  5574 0000475C [97470000]          <1> 	dd friday
  5575 00004760 [A0470000]          <1> 	dd saturday
  5576                              <1> sunday:
  5577 00004764 53756E6461790D0A00  <1> 	db "Sunday",13,10,0
  5578                              <1> monday:
  5579 0000476D 4D6F6E6461790D0A00  <1> 	db "Monday",13,10,0
  5580                              <1> tuesday:
  5581 00004776 547565736461790D0A- <1> 	db "Tuesday",13,10,0
  5582 0000477F 00                  <1>
  5583                              <1> wednesday:
  5584 00004780 5765646E6573646179- <1> 	db "Wednesday",13,10,0
  5585 00004789 0D0A00              <1>
  5586                              <1> thursday:
  5587 0000478C 54687572736461790D- <1> 	db "Thursday",13,10,0
  5588 00004795 0A00                <1>
  5589                              <1> friday:
  5590 00004797 4672696461790D0A00  <1> 	db "Friday",13,10,0
  5591                              <1> saturday:
  5592 000047A0 53617475726461790D- <1> 	db "Saturday",13,10,0
  5593 000047A9 0A00                <1>
  5594                              <1> 
  5595 000047AB 0504637075696400    <1> db 5,4,"cpuid",0
  5596 000047B3 B800000000          <1> 	mov eax, 0
  5597 000047B8 0FA2                <1> 	cpuid
  5598 000047BA 891D[0F480000]      <1> 	mov [cpuidbuf], ebx
  5599 000047C0 8915[13480000]      <1> 	mov [cpuidbuf + 4], edx
  5600 000047C6 890D[17480000]      <1> 	mov [cpuidbuf + 8], ecx
  5601 000047CC BE[0F480000]        <1> 	mov esi, cpuidbuf
  5602 000047D1 E85EE2FFFF          <1> 	call print
  5603 000047D6 BE[73730000]        <1> 	mov esi, line
  5604 000047DB E854E2FFFF          <1> 	call print
  5605 000047E0 B801000000          <1> 	mov eax, 1
  5606 000047E5 0FA2                <1> 	cpuid
  5607 000047E7 89C1                <1> 	mov ecx, eax
  5608 000047E9 C605[A3350000]02    <1> 	mov byte [firsthexshown], 2
  5609 000047F0 E8C3EDFFFF          <1> 	call showhex
  5610 000047F5 B808000080          <1> 	mov eax, 0x80000008
  5611 000047FA 0FA2                <1> 	cpuid
  5612 000047FC 89C1                <1> 	mov ecx, eax
  5613 000047FE C605[A3350000]02    <1> 	mov byte [firsthexshown], 2
  5614 00004805 E8AEEDFFFF          <1> 	call showhex
  5615 0000480A E995E8FFFF          <1> 	jmp nwcmd
  5616                              <1> 	
  5617 0000480F 00<rept>            <1> cpuidbuf times 13 db 0
  5618                              <1> cpuidvendorend:
  5619                              <1> progend:		;programs end here	
  5620                              <1> batchprogend:
  5621                                      %include 'source/input.asm'
  5622                              <1> PS2SET:
  5623 0000481C B0A8                <1>   mov  al, 0xa8		; enable mouse port
  5624 0000481E E664                <1>   out  0x64, al		; write to keyboardcontroller
  5625 00004820 E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  5626 00004825 C3                  <1> ret
  5627                              <1> 
  5628                              <1> CHKPRT:
  5629 00004826 66B96400            <1>   mov  cx, 100
  5630                              <1>  .again:
  5631 0000482A E464                <1>   in   al, 0x64		; read from keyboardcontroller
  5632 0000482C A802                <1>   test al, 2		; Check if input buffer is empty
  5633 0000482E 7402                <1>   je .go
  5634 00004830 E2F8                <1>   loop .again
  5635                              <1>  .go:
  5636 00004832 C3                  <1> ret
  5637                              <1> 
  5638                              <1> WMOUS:
  5639 00004833 B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  5640 00004835 E664                <1>   out  0x64, al		; write to keyboardcontroller
  5641 00004837 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  5642 0000483C C3                  <1> ret
  5643                              <1> 
  5644                              <1> MBUFFUL:
  5645 0000483D 66B96400            <1>   mov cx, 100
  5646                              <1>  .mn:
  5647 00004841 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  5648 00004843 A820                <1>   test al, 0x20		; check if mouse output buffer is full
  5649 00004845 7402                <1>   jz  .mnn
  5650 00004847 E2F8                <1>   loop .mn
  5651                              <1>  .mnn:
  5652 00004849 C3                  <1> ret
  5653                              <1> 
  5654                              <1> 
  5655                              <1> ACTMOUS:
  5656 0000484A E8E4FFFFFF          <1>   call WMOUS
  5657 0000484F B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  5658 00004851 E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  5659 00004853 E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  5660 00004858 E801000000          <1>   call CHKMOUS		; check if a byte is available
  5661 0000485D C3                  <1> ret
  5662                              <1> 
  5663                              <1> CHKMOUS:
  5664 0000485E B300                <1>   mov  bl, 0
  5665 00004860 66B96400            <1>   mov cx, 100
  5666                              <1>  .vrd:
  5667 00004864 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  5668 00004866 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  5669 00004868 7504                <1>   jnz .yy
  5670 0000486A E2F8                <1>   loop .vrd
  5671 0000486C B301                <1>   mov  bl, 1
  5672                              <1>  .yy:
  5673 0000486E C3                  <1> ret
  5674                              <1> 
  5675                              <1> GETB:
  5676                              <1>  .cagain:
  5677 0000486F E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  5678 00004874 08DB                <1>   or bl, bl
  5679 00004876 75F7                <1>   jnz .cagain
  5680 00004878 B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  5681 0000487A E664                <1>   out  0x64, al		; write to keyboardcontroller
  5682 0000487C E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  5683 00004881 6631C0              <1>   xor  ax, ax
  5684 00004884 E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  5685 00004886 88C2                <1>   mov  dl, al
  5686 00004888 B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  5687 0000488A E664                <1>   out  0x64, al		; write to keyboardcontroller
  5688 0000488C E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  5689 00004891 88D0                <1>   mov  al, dl
  5690 00004893 C3                  <1> ret
  5691                              <1> 
  5692 00004894 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  5693 00004895 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  5694 00004896 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  5695 00004897 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  5696 00004898 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  5697 00004899 00                  <1> mousedisabled db 0
  5698 0000489A 00                  <1> specialkey db 0
  5699                              <1> guistartin2:		;;this is basically the idle process
  5700                              <1> 					;;this halts the cpu for a small amount of time and then sees if there was a keypress
  5701                              <1> 					;;this lets the cpu stay at close to 0% instead of 100%
  5702 0000489B 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  5703 0000489F E640                <1> 	out 0x40, al
  5704 000048A1 66C1C008            <1> 	rol ax, 8
  5705 000048A5 E640                <1> 	out 0x40, al
  5706 000048A7 A0[576C0000]        <1> 	mov al, [threadson]
  5707 000048AC C605[576C0000]00    <1> 	mov byte [threadson], 0
  5708 000048B3 FB                  <1> 	sti
  5709 000048B4 F4                  <1> 	hlt
  5710 000048B5 A2[576C0000]        <1> 	mov [threadson], al
  5711 000048BA 3C02                <1> 	cmp al, 2
  5712 000048BC 7401                <1> 	je guistartin
  5713 000048BE FA                  <1> 	cli
  5714                              <1> guistartin:
  5715 000048BF B800000000          <1> 		mov eax, 0
  5716 000048C4 A2[9A480000]        <1> 		mov [specialkey], al
  5717 000048C9 66A3[DC290000]      <1> 		mov [lastkey], ax
  5718 000048CF E464                <1> 		in al, 64h ; Status
  5719 000048D1 A820                <1> 		test al, 20h ; PS2-Mouse?
  5720 000048D3 0F85EA010000        <1> 		jnz near maincall2
  5721 000048D9 A801                <1> 		test al, 1 
  5722 000048DB 74BE                <1> 		jz guistartin2 ; if output buffer full or no keypress, jump to idle process (only works when it is jz guistartin2, use jz guistartin to disable)
  5723                              <1> 	guigetkey:
  5724 000048DD E460                <1> 		in al, 60h
  5725 000048DF 88C4                <1> 		mov ah, al
  5726 000048E1 B000                <1> 		mov al, 0
  5727 000048E3 8825[DD290000]      <1> 		mov [lastkey + 1], ah
  5728 000048E9 88E0                <1> 		mov al, ah
  5729 000048EB BF[0F4D0000]        <1> 		mov edi, scancode
  5730                              <1> 	guisearchscan: 
  5731 000048F0 3C3A                <1> 		cmp al, 3Ah
  5732 000048F2 731A                <1> 		jae guiscanother
  5733 000048F4 B400                <1> 		mov ah, 0
  5734 000048F6 C0E002              <1> 		shl al, 2
  5735 000048F9 01C7                <1> 		add edi, eax
  5736 000048FB D0E8                <1> 		shr al, 1
  5737 000048FD 01C7                <1> 		add edi, eax
  5738 000048FF D0E8                <1> 		shr al, 1
  5739 00004901 8A27                <1> 		mov ah, [edi]
  5740 00004903 80FC00              <1> 		cmp ah, 0
  5741 00004906 7406                <1> 		je guiscanother
  5742 00004908 E9D7000000          <1> 		jmp guiscanfound
  5743 0000490D 00                  <1> guiupper db 0
  5744                              <1> guiscanother:
  5745 0000490E 88C4                <1> 		mov ah, al
  5746 00004910 B000                <1> 		mov al, 0
  5747 00004912 66A3[DC290000]      <1> 		mov [lastkey], ax
  5748 00004918 80FCE0              <1> 		cmp ah, 0E0h
  5749 0000491B 0F847D000000        <1> 		je near guigetkeyspecial
  5750 00004921 803D[9A480000]E0    <1> 		cmp byte [specialkey], 0xE0
  5751 00004928 752B                <1> 		jne nospecialkey
  5752 0000492A 80FC38              <1> 		cmp ah, 38h
  5753 0000492D 0F84A0000000        <1> 		je near guialton
  5754 00004933 80FCB8              <1> 		cmp ah, 0B8h
  5755 00004936 0F849F000000        <1> 		je near guialtoff
  5756 0000493C 80FC1D              <1> 		cmp ah, 1Dh
  5757 0000493F 0F847E000000        <1> 		je near guictron
  5758 00004945 80FC9D              <1> 		cmp ah, 9Dh
  5759 00004948 0F847D000000        <1> 		je near guictroff
  5760 0000494E 66A3[DC290000]      <1> 		mov [lastkey], ax
  5761 00004954 C3                  <1> 		ret
  5762                              <1> nospecialkey:
  5763                              <1> 		;cmp ah, 4Dh
  5764                              <1> 		;je near nextimage
  5765 00004955 80FC2A              <1> 		cmp ah, 2Ah
  5766 00004958 0F8455000000        <1> 		je near guishifton
  5767 0000495E 80FC36              <1> 		cmp ah, 36h
  5768 00004961 0F844C000000        <1> 		je near guishifton
  5769 00004967 80FC1C              <1> 		cmp ah, 1Ch
  5770 0000496A 0F8473000000        <1> 		je near guientdown
  5771 00004970 80FCAA              <1> 		cmp ah, 0AAh
  5772 00004973 0F8442000000        <1> 		je near guishiftoff
  5773 00004979 80FCB6              <1> 		cmp ah, 0B6h
  5774 0000497C 0F8439000000        <1> 		je near guishiftoff
  5775 00004982 80FC3A              <1> 		cmp ah, 3Ah
  5776 00004985 0F84A5000000        <1> 		je near guicaps
  5777 0000498B 80FC45              <1> 		cmp ah, 0x45
  5778 0000498E 0F84AD000000        <1> 		je near guinumlock
  5779 00004994 80FC46              <1> 		cmp ah, 0x46
  5780 00004997 0F84BC000000        <1> 		je near guiscrolllock
  5781 0000499D C3                  <1> 		ret
  5782                              <1> 	guigetkeyspecial:
  5783 0000499E C605[9A480000]E0    <1> 		mov byte [specialkey], 0xE0
  5784 000049A5 E933FFFFFF          <1> 		jmp guigetkey
  5785                              <1> 	guishift:
  5786 000049AA A0[0D490000]        <1> 		mov al, [guiupper]
  5787 000049AF 3C01                <1> 		cmp al, 1
  5788 000049B1 7308                <1> 		jae guishiftoff
  5789                              <1> 	guishifton:
  5790 000049B3 C605[0D490000]01    <1> 		mov byte [guiupper], 1
  5791 000049BA C3                  <1> 		ret
  5792                              <1> 		;jmp guistartin
  5793                              <1> 	guishiftoff:
  5794 000049BB C605[0D490000]00    <1> 		mov byte [guiupper], 0
  5795 000049C2 C3                  <1> 		ret
  5796                              <1> 		;jmp guistartin
  5797                              <1> 	guictron:
  5798 000049C3 C605[2F4A0000]01    <1> 		mov byte [guictr], 1
  5799 000049CA C3                  <1> 		ret
  5800                              <1> 	guictroff:
  5801 000049CB C605[2F4A0000]00    <1> 		mov byte [guictr], 0
  5802 000049D2 C3                  <1> 		ret
  5803                              <1> 	guialton:
  5804 000049D3 C605[2E4A0000]01    <1> 		mov byte [guialt], 1
  5805 000049DA C3                  <1> 		ret
  5806                              <1> 		;jmp guistartin
  5807                              <1> 	guialtoff:
  5808 000049DB C605[2E4A0000]00    <1> 		mov byte [guialt], 0
  5809 000049E2 C3                  <1> 		ret
  5810                              <1> 		;jmp guistartin
  5811                              <1> 	guientdown:
  5812 000049E3 C3                  <1> 		ret
  5813                              <1> 	guiscanfound:
  5814 000049E4 81C704000000        <1> 		add edi, 4
  5815 000049EA 803D[2F4A0000]01    <1> 		cmp byte [guictr], 1
  5816 000049F1 731B                <1> 		jae altguiin
  5817 000049F3 81EF04000000        <1> 		sub edi, 4
  5818 000049F9 81C702000000        <1> 		add edi, 2
  5819 000049FF 803D[2E4A0000]01    <1> 		cmp byte [guialt], 1
  5820 00004A06 7306                <1> 		jae altguiin
  5821 00004A08 81EF02000000        <1> 		sub edi, 2
  5822                              <1> altguiin:
  5823 00004A0E 81C701000000        <1> 		add edi, 1
  5824 00004A14 803D[0D490000]01    <1> 		cmp byte [guiupper], 1
  5825 00004A1B 7306                <1> 		jae uppercasegui
  5826 00004A1D 81EF01000000        <1> 		sub edi, 1
  5827                              <1> uppercasegui:
  5828 00004A23 8A07                <1> 		mov al,[edi]
  5829 00004A25 A2[DC290000]        <1> 		mov [lastkey], al
  5830 00004A2A C3                  <1> 		ret
  5831                              <1> 		
  5832 00004A2B 00                  <1> keyboardstatus db 0
  5833 00004A2C 00                  <1> numlockstatus db 0
  5834 00004A2D 00                  <1> scrolllockstatus db 0
  5835 00004A2E 00                  <1> guialt db 0
  5836 00004A2F 00                  <1> guictr db 0
  5837                              <1> 	guicaps:
  5838 00004A30 8035[2B4A0000]04    <1> 		xor byte [keyboardstatus], 00000100b
  5839 00004A37 E835000000          <1> 		call updatekblights
  5840 00004A3C E969FFFFFF          <1> 		jmp guishift
  5841                              <1> 		
  5842                              <1> 	guinumlock:
  5843 00004A41 8035[2B4A0000]02    <1> 		xor byte [keyboardstatus], 00000010b
  5844 00004A48 8035[2C4A0000]01    <1> 		xor byte [numlockstatus], 1
  5845 00004A4F E81D000000          <1> 		call updatekblights
  5846 00004A54 E966FEFFFF          <1> 		jmp guistartin
  5847                              <1> 	
  5848                              <1> 	guiscrolllock:
  5849 00004A59 8035[2B4A0000]01    <1> 		xor byte [keyboardstatus], 00000001b
  5850 00004A60 8035[2D4A0000]01    <1> 		xor byte [scrolllockstatus], 1
  5851 00004A67 E805000000          <1> 		call updatekblights
  5852 00004A6C E94EFEFFFF          <1> 		jmp guistartin
  5853                              <1> 		
  5854                              <1> 	updatekblights:
  5855 00004A71 B0ED                <1> 		mov al, 0xED
  5856 00004A73 66BA6000            <1> 		mov dx, 0x60
  5857 00004A77 EE                  <1> 		out dx, al
  5858                              <1> 	chkkbdack:
  5859 00004A78 EC                  <1> 		in al, dx
  5860 00004A79 3CFA                <1> 		cmp al, 0xFA
  5861 00004A7B 75FB                <1> 		jne chkkbdack
  5862 00004A7D A0[2B4A0000]        <1> 		mov al, [keyboardstatus]
  5863 00004A82 EE                  <1> 		out dx, al
  5864 00004A83 C3                  <1> 		ret
  5865                              <1> 	
  5866                              <1> 	cursorgui:
  5867 00004A84 803D[65610000]01    <1> 		cmp byte [mouseon], 1
  5868 00004A8B 0F8432000000        <1> 		je near maincall2
  5869 00004A91 803D[04500000]00    <1> 		cmp byte [guion], 0
  5870 00004A98 0F8445FFFFFF        <1> 		je guientdown
  5871                              <1> 	initmouse:
  5872 00004A9E 803D[04500000]00    <1> 		cmp byte [guion], 0
  5873 00004AA5 7405                <1> 		je noswmsposinit
  5874 00004AA7 E825060000          <1> 		call switchmousepos2
  5875                              <1> 	noswmsposinit:
  5876 00004AAC E86BFDFFFF          <1> 	  	call PS2SET
  5877 00004AB1 E894FDFFFF          <1> 		call ACTMOUS
  5878 00004AB6 C605[65610000]01    <1> 		mov byte [mouseon],1
  5879 00004ABD E8ADFDFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  5880                              <1> 				;;If the bytes are mixed up,
  5881                              <1> 				;;remove this line or add another of this line.
  5882                              <1> 		;call GETB
  5883                              <1> 	nomouse:
  5884 00004AC2 C3                  <1> 		ret
  5885                              <1> 	maincall2:
  5886 00004AC3 803D[99480000]01    <1> 		cmp byte [mousedisabled], 1
  5887 00004ACA 74F6                <1> 		je nomouse
  5888 00004ACC 803D[65610000]01    <1> 		  cmp byte [mouseon], 1
  5889 00004AD3 75C9                <1> 		  jne initmouse
  5890 00004AD5 E895FDFFFF          <1> 		  call GETB
  5891 00004ADA 88C3                <1> 		  mov  bl, al
  5892 00004ADC 80E301              <1> 		  and  bl, 1
  5893 00004ADF 881D[94480000]      <1> 		  mov  BYTE [LBUTTON], bl
  5894 00004AE5 88C3                <1> 		  mov  bl, al
  5895 00004AE7 80E302              <1> 		  and  bl, 2
  5896 00004AEA D0EB                <1> 		  shr  bl, 1
  5897 00004AEC 881D[95480000]      <1> 		  mov  BYTE [RBUTTON], bl
  5898 00004AF2 88C3                <1> 		  mov  bl, al
  5899 00004AF4 80E304              <1> 		  and  bl, 4
  5900 00004AF7 C0EB02              <1> 		  shr  bl, 2
  5901 00004AFA 881D[96480000]      <1> 		  mov  BYTE [MBUTTON], bl
  5902 00004B00 E86AFDFFFF          <1> 		  call GETB
  5903 00004B05 A2[97480000]        <1> 		  mov  BYTE [XCOORD], al
  5904 00004B0A E860FDFFFF          <1> 		  call GETB
  5905 00004B0F A2[98480000]        <1> 		  mov  BYTE [YCOORD], al
  5906                              <1> 
  5907                              <1> 	showpixelcursor:
  5908 00004B14 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  5909 00004B1B 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  5910 00004B22 668915[6A4C0000]    <1> 		mov [lastmouseposition], dx
  5911 00004B29 66890D[6C4C0000]    <1> 		mov [lastmouseposition + 2], cx
  5912 00004B30 A0[97480000]        <1> 		mov al, [XCOORD]
  5913 00004B35 3C80                <1> 		cmp al, 128
  5914 00004B37 730C                <1> 		jae subxcoord
  5915 00004B39 00C0                <1> 		add al, al
  5916 00004B3B B400                <1> 		mov ah, 0
  5917 00004B3D 6601C2              <1> 		add dx, ax
  5918 00004B40 E90B000000          <1> 		jmp subxcoorddn
  5919                              <1> 	subxcoord:
  5920 00004B45 00C0                <1> 		add al, al
  5921 00004B47 B300                <1> 		mov bl, 0
  5922 00004B49 28C3                <1> 		sub bl, al
  5923 00004B4B B700                <1> 		mov bh, 0
  5924 00004B4D 6629DA              <1> 		sub dx, bx
  5925                              <1> 	subxcoorddn:
  5926 00004B50 8A1D[98480000]      <1> 		mov bl, [YCOORD]
  5927 00004B56 B000                <1> 		mov al, 0
  5928 00004B58 28D8                <1> 		sub al, bl
  5929 00004B5A 3C80                <1> 		cmp al, 128
  5930 00004B5C 730A                <1> 		jae subycoord
  5931 00004B5E B400                <1> 		mov ah, 0
  5932 00004B60 6601C1              <1> 		add cx, ax
  5933 00004B63 E909000000          <1> 		jmp subycoorddn
  5934                              <1> 	subycoord:
  5935 00004B68 B300                <1> 		mov bl, 0
  5936 00004B6A 28C3                <1> 		sub bl, al
  5937 00004B6C B700                <1> 		mov bh, 0
  5938 00004B6E 6629D9              <1> 		sub cx, bx
  5939                              <1> 	subycoorddn:
  5940 00004B71 6681FA204E          <1> 		cmp dx, 20000
  5941 00004B76 7604                <1> 		jbe nooriginx2
  5942 00004B78 66BA0000            <1> 		mov dx, 0
  5943                              <1> 	nooriginx2:
  5944 00004B7C 6681F9204E          <1> 		cmp cx, 20000
  5945 00004B81 7604                <1> 		jbe nooriginy2
  5946 00004B83 66B90000            <1> 		mov cx, 0
  5947                              <1> 	nooriginy2:
  5948 00004B87 6681FA0000          <1> 		cmp dx, 0
  5949 00004B8C 7415                <1> 		je nofixxcolumn2
  5950 00004B8E 663B15[885E0000]    <1> 		cmp dx, [resolutionx2]
  5951 00004B95 720C                <1> 		jb nofixxcolumn2
  5952 00004B97 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  5953 00004B9E 6681EA0200          <1> 		sub dx, 2
  5954                              <1> 	nofixxcolumn2:
  5955 00004BA3 6681F90000          <1> 		cmp cx, 0
  5956 00004BA8 7415                <1> 		je nofixyrow2
  5957 00004BAA 663B0D[845E0000]    <1> 		cmp cx, [resolutiony]
  5958 00004BB1 720C                <1> 		jb nofixyrow2
  5959 00004BB3 668B0D[845E0000]    <1> 		mov cx, [resolutiony]
  5960 00004BBA 6681E90100          <1> 		sub cx, 1
  5961                              <1> 	nofixyrow2:
  5962 00004BBF 668915[6E4C0000]    <1> 		mov [mousecursorposition], dx
  5963 00004BC6 66890D[704C0000]    <1> 		mov [mousecursorposition + 2], cx
  5964 00004BCD 803D[04500000]00    <1> 		cmp byte [guion], 0
  5965 00004BD4 0F8498000000        <1> 		je near termmouse
  5966 00004BDA E889040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  5967 00004BDF 803D[94480000]01    <1> 		cmp byte [LBUTTON], 1
  5968 00004BE6 0F8462050000        <1> 		je near clickicon
  5969 00004BEC 803D[95480000]01    <1> 		cmp byte [RBUTTON], 1
  5970 00004BF3 0F8455050000        <1> 		je near clickicon
  5971 00004BF9 A0[3B510000]        <1> 		mov al, [pbutton]
  5972 00004BFE C705[3E510000]0000- <1> 		mov dword [dragging], 0
  5973 00004C06 0000                <1>
  5974 00004C08 3C00                <1> 		cmp al, 0
  5975 00004C0A 740F                <1> 		je nopreviousbutton
  5976 00004C0C E8F4030000          <1> 		call clearmousecursor
  5977 00004C11 E8860A0000          <1> 		call reloadallgraphics
  5978                              <1> 	windowtermcopyend:
  5979 00004C16 E8B6040000          <1> 		call switchmousepos2
  5980                              <1> 	nopreviousbutton:
  5981 00004C1B B000                <1> 		mov al, 0
  5982 00004C1D A2[3B510000]        <1> 		mov [pbutton], al
  5983 00004C22 A0[94480000]        <1> 		mov al, [LBUTTON]
  5984 00004C27 A2[3C510000]        <1> 		mov [pLBUTTON], al
  5985 00004C2C A0[95480000]        <1> 		mov al, [RBUTTON]
  5986 00004C31 A2[3D510000]        <1> 		mov [pRBUTTON], al
  5987 00004C36 B900000000          <1> 		mov ecx, 0
  5988 00004C3B BA00000000          <1> 		mov edx, 0
  5989 00004C40 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  5990 00004C47 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  5991 00004C4E 66BB18C7            <1> 		mov bx, 1100011100011000b
  5992 00004C52 B400                <1> 		mov ah, 0
  5993 00004C54 B0FE                <1> 		mov al, 254
  5994 00004C56 C605[01500000]01    <1> 		mov byte [showcursorfonton], 1
  5995 00004C5D E836120000          <1> 		call showfontvesa
  5996 00004C62 C605[01500000]00    <1> 		mov byte [showcursorfonton], 0
  5997 00004C69 C3                  <1> 		ret
  5998                              <1> 
  5999 00004C6A 84008400            <1> lastmouseposition dw 132,132
  6000 00004C6E 84008400            <1> mousecursorposition dw 132,132	
  6001                              <1> 
  6002                              <1> termmouse:
  6003 00004C72 BE[8F1D0000]        <1> 		mov esi, videobuf2
  6004 00004C77 BA00000000          <1> 		mov edx, 0
  6005 00004C7C 668B15[6A4C0000]    <1> 		mov dx, [lastmouseposition]
  6006 00004C83 668B0D[6C4C0000]    <1> 		mov cx, [lastmouseposition + 2]
  6007 00004C8A 66A1[0D4D0000]      <1> 		mov ax, [cursorcache]
  6008 00004C90 663D0000            <1> 		cmp ax, 0
  6009 00004C94 7426                <1> 		je nocopycursorcache
  6010 00004C96 66C1E104            <1> 		shl cx, 4
  6011 00004C9A 66C1E203            <1> 		shl dx, 3
  6012 00004C9E 01D6                <1> 		add esi, edx
  6013 00004CA0 66BA0000            <1> 		mov dx, 0
  6014 00004CA4 8A15[07280000]      <1> 		mov dl, [charxy]
  6015 00004CAA 6641                <1> 		inc cx
  6016                              <1> termmousecplp1:
  6017 00004CAC 01D6                <1> 		add esi, edx
  6018 00004CAE 6649                <1> 		dec cx
  6019 00004CB0 6681F90000          <1> 		cmp cx, 0
  6020 00004CB5 75F5                <1> 		jne termmousecplp1
  6021 00004CB7 29D6                <1> 		sub esi, edx
  6022 00004CB9 668906              <1> 		mov [esi], ax
  6023                              <1> nocopycursorcache:
  6024 00004CBC BE[8F1D0000]        <1> 		mov esi, videobuf2
  6025 00004CC1 BA00000000          <1> 		mov edx, 0
  6026 00004CC6 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  6027 00004CCD 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  6028 00004CD4 66C1E104            <1> 		shl cx, 4
  6029 00004CD8 66C1E203            <1> 		shl dx, 3
  6030 00004CDC 01D6                <1> 		add esi, edx
  6031 00004CDE 66BA0000            <1> 		mov dx, 0
  6032 00004CE2 8A15[07280000]      <1> 		mov dl, [charxy]
  6033 00004CE8 6641                <1> 		inc cx
  6034                              <1> termmousecplp2:
  6035 00004CEA 01D6                <1> 		add esi, edx
  6036 00004CEC 6649                <1> 		dec cx
  6037 00004CEE 6681F90000          <1> 		cmp cx, 0
  6038 00004CF3 75F5                <1> 		jne termmousecplp2
  6039 00004CF5 29D6                <1> 		sub esi, edx
  6040 00004CF7 668B06              <1> 		mov ax, [esi]
  6041 00004CFA 66A3[0D4D0000]      <1> 		mov [cursorcache], ax
  6042 00004D00 B080                <1> 		mov al, 128
  6043 00004D02 B407                <1> 		mov ah, 7
  6044 00004D04 668906              <1> 		mov [esi], ax
  6045 00004D07 E896E0FFFF          <1> 		call termcopy
  6046 00004D0C C3                  <1> 		ret
  6047 00004D0D 0000                <1> cursorcache db 0,0
  6048                              <1> 	
  6049                              <1> scancode:
  6050 00004D0F 000000000000        <1> 	db 0,0,0,0,0,0			;,0h
  6051 00004D15 000000000000        <1> 	db 0,0,0,0,0,0			;,1h
  6052 00004D1B 3121AD000000        <1> 	db '1','!',173,0,0,0	;,2h
  6053 00004D21 3240FDFB0000        <1> 	db '2','@',253,251,0,0	;,3h
  6054 00004D27 332300000000        <1> 	db '3','#',0,0,0,0		;,4h
  6055 00004D2D 34249B9C0000        <1> 	db '4','$',155,156,0,0	;,5h
  6056 00004D33 3525EE000000        <1> 	db '5','%',238,0,0,0	;,6h
  6057 00004D39 365EAC000000        <1> 	db '6','^',172,0,0,0	;,7h
  6058 00004D3F 3726AB000000        <1> 	db '7','&',171,0,0,0	;,8h
  6059 00004D45 382A00000000        <1> 	db '8','*',0,0,0,0		;,9h
  6060 00004D4B 392800000000        <1> 	db '9','(',0,0,0,0		;,0Ah
  6061 00004D51 302900000000        <1> 	db '0',')',0,0,0,0		;,0Bh
  6062 00004D57 2D5F9DF10000        <1> 	db '-','_',157,241,0,0	;,0Ch
  6063 00004D5D 3D2BF7F60000        <1> 	db '=','+',247,246,0,0	;,0Dh
  6064 00004D63 080800000000        <1> 	db 8,8,0,0,0,0			;,0Eh
  6065 00004D69 000000000000        <1> 	db 0,0,0,0,0,0			;,0Fh
  6066 00004D6F 7151848E0000        <1> 	db 'q','Q',132,142,0,0	;,10h
  6067 00004D75 7757868F0000        <1> 	db 'w','W',134,143,0,0	;,11h
  6068 00004D7B 65458290EE45        <1> 	db 'e','E',130,144,238,'E'	;,12h
  6069 00004D81 7252898A7050        <1> 	db 'r','R',137,138,'p','P'		;,13h
  6070 00004D87 7454819AE754        <1> 	db 't','T',129,154,231,'T'		;,14h
  6071 00004D8D 795998007559        <1> 	db 'y','Y',152,0,'u','Y'	;,15h
  6072 00004D93 7555A3970000        <1> 	db 'u','U',163,151,0,0	;,16h
  6073 00004D99 6949A18D6949        <1> 	db 'i','I',161,141,'i','I'	;,17h
  6074 00004D9F 6F4FA29577EA        <1> 	db 'o','O',162,149,'w',234	;,18h
  6075 00004DA5 70509499E3EF        <1> 	db 'p','P',148,153,227,239	;,19h
  6076 00004DAB 5B7BF4000000        <1> 	db '[','{',244,0,0,0		;,1Ah
  6077 00004DB1 5D7DF5000000        <1> 	db ']','}',245,0,0,0		;,1Bh
  6078 00004DB7 000000000000        <1> 	db 0,0,0,0,0,0			;,1Ch
  6079 00004DBD 000000000000        <1> 	db 0,0,0,0,0,0			;,1Dh
  6080 00004DC3 6141A085E041        <1> 	db 'a','A',160,133,224,'A'	;,1Eh
  6081 00004DC9 73531500E5E4        <1> 	db 's','S',21,0,229,228		;,1Fh
  6082 00004DCF 6444F800EB7F        <1> 	db 'd','D',248,0,235,127	;,20h
  6083 00004DD5 66469F00EDE8        <1> 	db 'f','F',159,0,237,232	;,21h
  6084 00004DDB 6747000079E2        <1> 	db 'g','G',0,0,'y',226		;,22h
  6085 00004DE1 684800006E48        <1> 	db 'h','H',0,0,'n','H'		;,23h
  6086 00004DE7 6A4A00000000        <1> 	db 'j','J',0,0,0,0		;,24h
  6087 00004DED 6B4B00006B4B        <1> 	db 'k','K',0,0,'k','K'		;,25h
  6088 00004DF3 6C4C0000E9E9        <1> 	db 'l','L',0,0,233,233		;,26h
  6089 00004DF9 3B3A14000000        <1> 	db ';',':',20,0,0,0		;,27h
  6090 00004DFF 272200000000        <1> 	db 27h,22h,0,0,0,0		;,28h
  6091 00004E05 607E00000000        <1> 	db '`','~',0,0,0,0		;,29h
  6092 00004E0B 000000000000        <1> 	db 0,0,0,0,0,0			;,2Ah
  6093 00004E11 5C7CAAB30000        <1> 	db '\','|',170,179,0,0	;,2Bh
  6094 00004E17 7A5A91927A5A        <1> 	db 'z','Z',145,146,'z','Z'	;,2Ch
  6095 00004E1D 7858000000F0        <1> 	db 'x','X',0,0,0,240		;,2Dh
  6096 00004E23 634387800000        <1> 	db 'c','C',135,128,0,0	;,2Eh
  6097 00004E29 765600000000        <1> 	db 'v','V',0,0,0,0		;,2Fh
  6098 00004E2F 62420000E142        <1> 	db 'b','B',0,0,225,'B'	;,30h
  6099 00004E35 6E4EA4A5764E        <1> 	db 'n','N',164,165,'v','N'	;,31h
  6100 00004E3B 6D4D0000E64D        <1> 	db 'm','M',0,0,230,'M'		;,32h
  6101 00004E41 2C3CF3AE0000        <1> 	db ',','<',243,174,0,0	;,33h
  6102 00004E47 2E3EF2AF0000        <1> 	db '.','>',242,175,0,0	;,34h
  6103 00004E4D 2F3FA8000000        <1> 	db '/','?',168,0,0,0	;,35h
  6104 00004E53 000000000000        <1> 	db 0,0,0,0,0,0			;,36h
  6105 00004E59 000000000000        <1> 	db 0,0,0,0,0,0			;,37h
  6106 00004E5F 000000000000        <1> 	db 0,0,0,0,0,0			;,38h
  6107 00004E65 202000000000        <1> 	db ' ',' ',0,0,0,0		;,39h
  6108                              <1> noscan:
  6109                                      %include 'source/gui.asm'
  6110                              <1> guiclear:
  6111 00004E6B 8B3D[D4850000]      <1> 	mov edi, [physbaseptr]
  6112 00004E71 668B15[865E0000]    <1> 	mov dx, [resolutionx]
  6113 00004E78 668B0D[845E0000]    <1> 	mov cx, [resolutiony]
  6114 00004E7F 66A1[A84E0000]      <1> 	mov ax, [background]
  6115                              <1> guiclearloop:
  6116 00004E85 668907              <1> 	mov [edi], ax
  6117 00004E88 81C702000000        <1> 	add edi, 2
  6118 00004E8E 664A                <1> 	dec dx
  6119 00004E90 6681FA0000          <1> 	cmp dx, 0
  6120 00004E95 77EE                <1> 	ja guiclearloop
  6121 00004E97 6649                <1> 	dec cx
  6122 00004E99 668B15[865E0000]    <1> 	mov dx, [resolutionx]
  6123 00004EA0 6681F90000          <1> 	cmp cx, 0
  6124 00004EA5 77DE                <1> 	ja guiclearloop
  6125 00004EA7 C3                  <1> 	ret
  6126                              <1> 
  6127 00004EA8 CF7B                <1> background dw 0111101111001111b
  6128                              <1> 
  6129                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  6130 00004EAA B800000000          <1> 	mov eax, 0
  6131 00004EAF BB00000000          <1> 	mov ebx, 0
  6132 00004EB4 B900000000          <1> 	mov ecx, 0
  6133 00004EB9 BA00000000          <1> 	mov edx, 0
  6134 00004EBE 8B3D[D4850000]      <1> 	mov edi, [physbaseptr]
  6135 00004EC4 668B15[865E0000]    <1> 	mov dx, [resolutionx]
  6136 00004ECB 668B0D[845E0000]    <1> 	mov cx, [resolutiony]
  6137 00004ED2 668B1D[A84E0000]    <1> 	mov bx, [background]
  6138                              <1> guiclearloop2:
  6139 00004ED9 66891F              <1> 	mov [edi], bx
  6140 00004EDC 81C702000000        <1> 	add edi, 2
  6141 00004EE2 664A                <1> 	dec dx
  6142 00004EE4 6681FA0000          <1> 	cmp dx, 0
  6143 00004EE9 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  6144 00004EEF 6649                <1> 	dec cx
  6145 00004EF1 668B15[865E0000]    <1> 	mov dx, [resolutionx]
  6146 00004EF8 6681F90000          <1> 	cmp cx, 0
  6147 00004EFD 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  6148 00004F03 C605[04500000]01    <1> 	mov byte [guion], 1
  6149 00004F0A C605[03500000]00    <1> 	mov byte [mouseselecton], 0
  6150 00004F11 B800000000          <1> 	mov eax, 0
  6151 00004F16 BB00000000          <1> 	mov ebx, 0
  6152 00004F1B B900000000          <1> 	mov ecx, 0
  6153 00004F20 BA00000000          <1> 	mov edx, 0
  6154                              <1> 	
  6155 00004F25 BE[7A610000]        <1> 	mov esi, pacmsg
  6156 00004F2A 66B80000            <1> 	mov ax, 0
  6157 00004F2E BB00000000          <1> 	mov ebx, 0
  6158 00004F33 66B99000            <1> 	mov cx, 144
  6159 00004F37 66BA0400            <1> 	mov dx, 4
  6160 00004F3B E8A30A0000          <1> 	call showstring
  6161                              <1> 	
  6162 00004F40 BE[90620000]        <1> 	mov esi, interneticon
  6163 00004F45 66B80000            <1> 	mov ax, 0
  6164 00004F49 BB[EF610000]        <1> 	mov ebx, noie
  6165 00004F4E 66B91800            <1> 	mov cx, 24
  6166 00004F52 66BA0400            <1> 	mov dx, 4
  6167 00004F56 E8500E0000          <1> 	call showicon
  6168                              <1> 	
  6169 00004F5B BE[12630000]        <1> 	mov esi, wordicon
  6170 00004F60 66B80000            <1> 	mov ax, 0
  6171 00004F64 BB00000000          <1> 	mov ebx, 0
  6172 00004F69 66B91800            <1> 	mov cx, 24
  6173 00004F6D 66BA3000            <1> 	mov dx, 48
  6174 00004F71 E8350E0000          <1> 	call showicon
  6175                              <1> 	
  6176 00004F76 BE[94630000]        <1> 	mov esi, pacmanpellet
  6177 00004F7B 66B80000            <1> 	mov ax, 0
  6178 00004F7F BB00000000          <1> 	mov ebx, 0
  6179 00004F84 66B94000            <1> 	mov cx, 64
  6180 00004F88 66BA0400            <1> 	mov dx, 4
  6181 00004F8C E81A0E0000          <1> 	call showicon
  6182                              <1> 	
  6183 00004F91 BE[98640000]        <1> 	mov esi, pacman
  6184 00004F96 66B80000            <1> 	mov ax, 0
  6185 00004F9A BB[D4610000]        <1> 	mov ebx, pacmannomnom
  6186 00004F9F 66B94000            <1> 	mov cx, 64
  6187 00004FA3 66BA3000            <1> 	mov dx, 48
  6188 00004FA7 E8FF0D0000          <1> 	call showicon
  6189                              <1> 	
  6190 00004FAC BE[16640000]        <1> 	mov esi, ghostie
  6191 00004FB1 66B80000            <1> 	mov ax, 0
  6192 00004FB5 BB[B9610000]        <1> 	mov ebx, boo
  6193 00004FBA 66B96C00            <1> 	mov cx, 108
  6194 00004FBE 66BA0400            <1> 	mov dx, 4
  6195 00004FC2 E8E40D0000          <1> 	call showicon
  6196                              <1> 
  6197 00004FC7 BE[66610000]        <1> 	mov esi, start
  6198 00004FCC 668B0D[845E0000]    <1> 	mov cx, [resolutiony]
  6199 00004FD3 6681E91000          <1> 	sub cx, 16
  6200 00004FD8 66BA0200            <1> 	mov dx, 2
  6201 00004FDC B400                <1> 	mov ah, 0
  6202 00004FDE B010                <1> 	mov al, 00010000b
  6203 00004FE0 BB[3D620000]        <1> 	mov ebx, winblows
  6204 00004FE5 E8F9090000          <1> 	call showstring
  6205                              <1> 	
  6206 00004FEA E895FAFFFF          <1> 	call cursorgui
  6207                              <1> guistart:
  6208 00004FEF E8CBF8FFFF          <1> 	call guistartin
  6209 00004FF4 C605[FD4F0000]00    <1> 	mov byte [copygui], 0
  6210 00004FFB EBF2                <1> 	jmp guistart
  6211                              <1> 	
  6212                              <1> ;guicopy:	;;for double buffering
  6213                              <1> ;	mov byte [copygui], 1
  6214                              <1> ;	mov edi, [offscreenmemoffset]
  6215                              <1> ;	mov edx, 0
  6216                              <1> ;	mov ecx, 0
  6217                              <1> ;	mov dx, [mousecursorposition]
  6218                              <1> ;	mov cx, [mousecursorposition + 2]
  6219                              <1> ;	add edi, edx
  6220                              <1> ;	mov dx, [resolutionx2]
  6221                              <1> ;	inc cx
  6222                              <1> ;guicp2:
  6223                              <1> ;	add edi, edx
  6224                              <1> ;	dec cx
  6225                              <1> ;	cmp cx, 0
  6226                              <1> ;	jne guicp2
  6227                              <1> ;	sub edi, edx
  6228                              <1> ;	mov [cursorloc], edi
  6229                              <1> ;	mov ebx, cursorbmp
  6230                              <1> ;	mov cx, [resolutiony]
  6231                              <1> ;	rol ecx, 16
  6232                              <1> ;	mov cx, [resolutionx]
  6233                              <1> ;	mov esi, [physbaseptr]
  6234                              <1> ;	mov edi, [offscreenmemoffset]
  6235                              <1> ;guicp1:
  6236                              <1> ;	mov ax, [esi]
  6237                              <1> ;	mov [edi], ax
  6238                              <1> ;	add esi, 2
  6239                              <1> ;	add edi, 2
  6240                              <1> ;	cmp edi, [cursorloc]
  6241                              <1> ;	je copycursor
  6242                              <1> ;dncopycursor:
  6243                              <1> ;	dec cx
  6244                              <1> ;	cmp cx, 0
  6245                              <1> ;	jne guicp1
  6246                              <1> ;	mov cx, [resolutionx]
  6247                              <1> ;	rol ecx, 16
  6248                              <1> ;	dec cx
  6249                              <1> ;	cmp cx, 0
  6250                              <1> ;	rol ecx, 16
  6251                              <1> ;	jne guicp1
  6252                              <1> ;	mov byte [copygui], 0
  6253                              <1> ;	ret
  6254                              <1> ;copycursor:
  6255                              <1> ;	cmp ebx, cursorbmpend
  6256                              <1> ;	jae dncopycursor
  6257                              <1> ;	mov dx, [resolutionx2]
  6258                              <1> ;	add edi, edx
  6259                              <1> ;	mov [cursorloc], edi
  6260                              <1> ;	sub edi, edx
  6261                              <1> ;	dec ebx
  6262                              <1> ;	sub edi, 2
  6263                              <1> ;	sub esi, 2
  6264                              <1> ;	mov dx, 9
  6265                              <1> ;curscplp:
  6266                              <1> ;	inc ebx
  6267                              <1> ;	add esi, 2
  6268                              <1> ;	add edi, 2
  6269                              <1> ;	mov ax, [esi]
  6270                              <1> ;	mov [edi], ax
  6271                              <1> ;	mov al, [ebx]
  6272                              <1> ;	cmp al, 0
  6273                              <1> ;	je curscplp2
  6274                              <1> ;	mov word [edi], 1110011110011100b
  6275                              <1> ;curscplp2:
  6276                              <1> ;	dec cx
  6277                              <1> ;	cmp cx, 0
  6278                              <1> ;	je dncopycursor
  6279                              <1> ;	dec dx
  6280                              <1> ;	cmp dx, 0
  6281                              <1> ;	jne curscplp
  6282                              <1> ;	jmp dncopycursor
  6283                              <1> 	
  6284                              <1> 	
  6285                              <1> ;cursorloc: dd 0
  6286                              <1> 		
  6287                              <1> ;nextimage:	
  6288                              <1> ;	call guiclear
  6289                              <1> ;	mov esi, [bmpend]
  6290                              <1> ;	mov eax, 0
  6291                              <1> ;	mov ebx, 0
  6292                              <1> ;	mov ecx, 0
  6293                              <1> ;	mov edx, 0
  6294                              <1> ;	call showbmp
  6295                              <1> ;	jmp guistartin
  6296                              <1> 		
  6297 00004FFD 00                  <1> copygui db 0
  6298 00004FFE 00                  <1> graphicsset db 0
  6299 00004FFF 0000                <1> graphicspos db 0,0
  6300 00005001 00                  <1> showcursorfonton db 0
  6301 00005002 00                  <1> savefonton db 0
  6302 00005003 00                  <1> mouseselecton db 0
  6303 00005004 00                  <1> guion db 0
  6304                              <1> 
  6305                              <1> 		
  6306                              <1> clearmousecursor:
  6307 00005005 BE[A84E0000]        <1> 		mov esi, background
  6308 0000500A 8B3D[D4850000]      <1> 		mov edi, [physbaseptr]
  6309 00005010 BA00000000          <1> 		mov edx, 0
  6310 00005015 B900000000          <1> 		mov ecx, 0
  6311 0000501A 668B15[6A4C0000]    <1> 		mov dx, [lastmouseposition]
  6312 00005021 668B0D[6C4C0000]    <1> 		mov cx, [lastmouseposition + 2]
  6313 00005028 01D7                <1> 		add edi, edx
  6314 0000502A BA00000000          <1> 		mov edx, 0
  6315 0000502F 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  6316 00005036 6681F90000          <1> 		cmp cx, 0
  6317 0000503B 740B                <1> 		je noyclr
  6318 0000503D 01D7                <1> yclr:	add edi, edx
  6319 0000503F 6649                <1> 		dec cx
  6320 00005041 6681F90000          <1> 		cmp cx, 0
  6321 00005046 75F5                <1> 		jne yclr
  6322 00005048 668B06              <1> noyclr:	mov ax, [esi]
  6323 0000504B C1C010              <1> 		rol eax, 16
  6324 0000504E 668B06              <1> 		mov ax, [esi]
  6325 00005051 8907                <1> 		mov [edi], eax
  6326 00005053 894704              <1> 		mov [edi + 4], eax
  6327 00005056 894708              <1> 		mov [edi + 8], eax
  6328 00005059 89470C              <1> 		mov [edi + 12], eax
  6329 0000505C 01D7                <1> 		add edi, edx
  6330 0000505E 6641                <1> 		inc cx
  6331 00005060 6681F91000          <1> 		cmp cx, 16
  6332 00005065 72E1                <1> 		jb noyclr
  6333 00005067 C3                  <1> 		ret
  6334                              <1> 
  6335                              <1> switchmousepos:		;;switch were the mouse is located
  6336 00005068 BE[00120000]        <1> 		mov esi, mousecolorbuf
  6337 0000506D 8B3D[D4850000]      <1> 		mov edi, [physbaseptr]
  6338 00005073 BA00000000          <1> 		mov edx, 0
  6339 00005078 B900000000          <1> 		mov ecx, 0
  6340 0000507D 668B15[6A4C0000]    <1> 		mov dx, [lastmouseposition]
  6341 00005084 668B0D[6C4C0000]    <1> 		mov cx, [lastmouseposition + 2]
  6342 0000508B 01D7                <1> 		add edi, edx
  6343 0000508D BA00000000          <1> 		mov edx, 0
  6344 00005092 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  6345 00005099 6681F90000          <1> 		cmp cx, 0
  6346 0000509E 740B                <1> 		je noswmsy
  6347 000050A0 01D7                <1> swmsy:		add edi, edx
  6348 000050A2 6649                <1> 		dec cx
  6349 000050A4 6681F90000          <1> 		cmp cx, 0
  6350 000050A9 75F5                <1> 		jne swmsy
  6351 000050AB 8B06                <1> noswmsy:	mov eax, [esi]
  6352 000050AD 8B5E04              <1> 		mov ebx, [esi + 4]
  6353 000050B0 8907                <1> 		mov [edi], eax
  6354 000050B2 895F04              <1> 		mov [edi + 4], ebx
  6355 000050B5 8B4608              <1> 		mov eax, [esi + 8]
  6356 000050B8 8B5E0C              <1> 		mov ebx, [esi + 12]
  6357 000050BB 894708              <1> 		mov [edi + 8], eax
  6358 000050BE 895F0C              <1> 		mov [edi + 12], ebx
  6359 000050C1 01D7                <1> 		add edi, edx
  6360 000050C3 81C610000000        <1> 		add esi, 16
  6361 000050C9 81FE[00130000]      <1> 		cmp esi, mcolorend
  6362 000050CF 72DA                <1> 		jb noswmsy
  6363                              <1> 		
  6364                              <1> switchmousepos2:
  6365 000050D1 BE[00120000]        <1> 		mov esi, mousecolorbuf
  6366 000050D6 8B3D[D4850000]      <1> 		mov edi, [physbaseptr]
  6367 000050DC BA00000000          <1> 		mov edx, 0
  6368 000050E1 B900000000          <1> 		mov ecx, 0
  6369 000050E6 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  6370 000050ED 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  6371 000050F4 01D7                <1> 		add edi, edx
  6372 000050F6 BA00000000          <1> 		mov edx, 0
  6373 000050FB 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  6374 00005102 6681F90000          <1> 		cmp cx, 0
  6375 00005107 740B                <1> 		je noswmsy2
  6376 00005109 01D7                <1> swmsy2:		add edi, edx
  6377 0000510B 6649                <1> 		dec cx
  6378 0000510D 6681F90000          <1> 		cmp cx, 0
  6379 00005112 75F5                <1> 		jne swmsy2
  6380 00005114 8B07                <1> noswmsy2:	mov eax, [edi]
  6381 00005116 8B5F04              <1> 		mov ebx, [edi + 4]
  6382 00005119 8906                <1> 		mov [esi], eax
  6383 0000511B 895E04              <1> 		mov [esi + 4], ebx
  6384 0000511E 8B4708              <1> 		mov eax, [edi + 8]
  6385 00005121 8B5F0C              <1> 		mov ebx, [edi + 12]
  6386 00005124 894608              <1> 		mov [esi + 8], eax
  6387 00005127 895E0C              <1> 		mov [esi + 12], ebx
  6388 0000512A 01D7                <1> 		add edi, edx
  6389 0000512C 81C610000000        <1> 		add esi, 16
  6390 00005132 81FE[00130000]      <1> 		cmp esi, mcolorend
  6391 00005138 72DA                <1> 		jb noswmsy2
  6392 0000513A C3                  <1> 		ret
  6393                              <1> 
  6394 0000513B 00                  <1> pbutton db 0
  6395 0000513C 00                  <1> pLBUTTON db 0
  6396 0000513D 00                  <1> pRBUTTON db 0
  6397 0000513E 00000000            <1> dragging dw 0,0
  6398 00005142 0000000000000000    <1> lastpos dw 0,0,0,0
  6399 0000514A 00000000            <1> colorbuf dw 0,0
  6400                              <1> 	
  6401                              <1> 	clickicon:
  6402 0000514E B001                <1> 		mov al, 1
  6403 00005150 A2[3B510000]        <1> 		mov [pbutton], al
  6404 00005155 A0[3C510000]        <1> 		mov al, [pLBUTTON]
  6405 0000515A 2205[94480000]      <1> 		and al, [LBUTTON]
  6406 00005160 8A25[3D510000]      <1> 		mov ah, [pRBUTTON]
  6407 00005166 2225[95480000]      <1> 		and ah, [RBUTTON]
  6408 0000516C 08E0                <1> 		or al, ah
  6409 0000516E 3C00                <1> 		cmp al, 0
  6410 00005170 741B                <1> 		je nodragclick
  6411 00005172 813D[3E510000]0100- <1> 		cmp dword [dragging], 1
  6412 0000517A 0000                <1>
  6413 0000517C 732D                <1> 		jae dragclick
  6414 0000517E C705[3E510000]0100- <1> 		mov dword [dragging], 1
  6415 00005186 0000                <1>
  6416 00005188 E91E000000          <1> 		jmp dragclick
  6417                              <1> 	nodragclick:
  6418 0000518D C705[3E510000]0000- <1> 		mov dword [dragging], 0
  6419 00005195 0000                <1>
  6420 00005197 A0[94480000]        <1> 		mov al, [LBUTTON]
  6421 0000519C A2[3C510000]        <1> 		mov [pLBUTTON], al
  6422 000051A1 A0[95480000]        <1> 		mov al, [RBUTTON]
  6423 000051A6 A2[3D510000]        <1> 		mov [pRBUTTON], al
  6424                              <1> 	dragclick:
  6425 000051AB 66B80000            <1> 		mov ax, 0
  6426 000051AF BE[00100000]        <1> 		mov esi, graphicstable
  6427 000051B4 C705[B4610000]0000- <1> 		mov dword [codepointer], 0
  6428 000051BC 0000                <1>
  6429                              <1> 	clicon2:
  6430 000051BE BA00000000          <1> 		mov edx, 0
  6431 000051C3 B900000000          <1> 		mov ecx, 0
  6432 000051C8 66813E0100          <1> 		cmp word [esi], 1
  6433 000051CD 0F841B000000        <1> 		je near iconselect
  6434 000051D3 66813E0200          <1> 		cmp word [esi], 2
  6435 000051D8 0F8472010000        <1> 		je near textselected
  6436 000051DE 66813E0300          <1> 		cmp word [esi], 3
  6437 000051E3 0F84C7020000        <1> 		je near windowselect
  6438 000051E9 E90B040000          <1> 		jmp nexticonsel
  6439                              <1> 	iconselect:
  6440 000051EE 668B5606            <1> 		mov dx, [esi + 6]
  6441 000051F2 6689D0              <1> 		mov ax, dx
  6442 000051F5 668B4E08            <1> 		mov cx, [esi + 8]
  6443 000051F9 6689CB              <1> 		mov bx, cx
  6444 000051FC 6681C32000          <1> 		add bx, 32
  6445 00005201 6601D0              <1> 		add ax, dx
  6446 00005204 813D[3E510000]0100- <1> 		cmp dword [dragging], 1
  6447 0000520C 0000                <1>
  6448 0000520E 746F                <1> 		je dragicon
  6449 00005210 813D[3E510000]0000- <1> 		cmp dword [dragging], 0
  6450 00005218 0000                <1>
  6451 0000521A 7411                <1> 		je nodragiconcheck
  6452 0000521C 3935[3E510000]      <1> 		cmp dword [dragging], esi
  6453 00005222 0F85D1030000        <1> 		jne near nexticonsel
  6454 00005228 E952000000          <1> 		jmp dragicon
  6455                              <1> 	nodragiconcheck:
  6456 0000522D 663905[6E4C0000]    <1> 		cmp [mousecursorposition], ax
  6457 00005234 0F82BF030000        <1> 		jb near nexticonsel
  6458 0000523A 66054000            <1> 		add ax, 64
  6459 0000523E 663905[6E4C0000]    <1> 		cmp [mousecursorposition], ax
  6460 00005245 0F87AE030000        <1> 		ja near nexticonsel
  6461 0000524B 6629D0              <1> 		sub ax, dx
  6462 0000524E 66390D[704C0000]    <1> 		cmp [mousecursorposition + 2], cx
  6463 00005255 0F829E030000        <1> 		jb near nexticonsel
  6464 0000525B 66391D[704C0000]    <1> 		cmp [mousecursorposition + 2], bx
  6465 00005262 0F8791030000        <1> 		ja near nexticonsel
  6466 00005268 668B460A            <1> 		mov ax, [esi + 10]
  6467 0000526C 66250100            <1> 		and ax, 1
  6468 00005270 663D0100            <1> 		cmp ax, 1
  6469 00005274 0F84B6000000        <1> 		je near unselecticon
  6470 0000527A E98D000000          <1> 		jmp nodragicon
  6471                              <1> 	dragicon:
  6472 0000527F 663905[6A4C0000]    <1> 		cmp [lastmouseposition], ax
  6473 00005286 0F826D030000        <1> 		jb near nexticonsel
  6474 0000528C 66054000            <1> 		add ax, 64
  6475 00005290 663905[6A4C0000]    <1> 		cmp [lastmouseposition], ax
  6476 00005297 0F875C030000        <1> 		ja near nexticonsel
  6477 0000529D 6629D0              <1> 		sub ax, dx
  6478 000052A0 66390D[6C4C0000]    <1> 		cmp [lastmouseposition + 2], cx
  6479 000052A7 0F824C030000        <1> 		jb near nexticonsel
  6480 000052AD 66391D[6C4C0000]    <1> 		cmp [lastmouseposition + 2], bx
  6481 000052B4 0F873F030000        <1> 		ja near nexticonsel
  6482 000052BA 668B460A            <1> 		mov ax, [esi + 10]
  6483 000052BE 2410                <1> 		and al, 00010000b
  6484 000052C0 3C10                <1> 		cmp al, 00010000b
  6485 000052C2 7448                <1> 		je nodragicon
  6486 000052C4 8935[3E510000]      <1> 		mov [dragging], esi
  6487 000052CA 66D1E2              <1> 		shl dx, 1
  6488 000052CD 662B15[6A4C0000]    <1> 		sub dx, [lastmouseposition]
  6489 000052D4 660315[6E4C0000]    <1> 		add dx, [mousecursorposition]
  6490 000052DB 66D1EA              <1> 		shr dx, 1
  6491 000052DE 66030D[704C0000]    <1> 		add cx, [mousecursorposition + 2]
  6492 000052E5 662B0D[6C4C0000]    <1> 		sub cx, [lastmouseposition + 2]
  6493 000052EC 663B15[885E0000]    <1> 		cmp dx, [resolutionx2]
  6494 000052F3 7607                <1> 		jbe chkyresdrgicn
  6495 000052F5 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  6496                              <1> 	chkyresdrgicn:
  6497 000052FC 663B0D[845E0000]    <1> 		cmp cx, [resolutiony]
  6498 00005303 7607                <1> 		jbe nodragicon
  6499 00005305 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  6500                              <1> 	nodragicon:
  6501 0000530C 66814E0A0100        <1> 		or word [esi + 10], 1
  6502 00005312 8B5E0C              <1> 		mov ebx, [esi + 12]
  6503 00005315 668B460A            <1> 		mov ax, [esi + 10]
  6504 00005319 8B7602              <1> 		mov esi, [esi + 2]
  6505 0000531C C705[B4610000]0000- <1> 		mov dword [codepointer], 0
  6506 00005324 0000                <1>
  6507 00005326 E8800A0000          <1> 		call showicon
  6508 0000532B E9E2020000          <1> 		jmp doneiconsel
  6509                              <1> 	unselecticon:
  6510 00005330 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  6511 00005336 8B5E0C              <1> 		mov ebx, [esi + 12]
  6512 00005339 668B460A            <1> 		mov ax, [esi + 10]
  6513 0000533D 8B7602              <1> 		mov esi, [esi + 2]
  6514 00005340 891D[B4610000]      <1> 		mov [codepointer], ebx
  6515 00005346 E8600A0000          <1> 		call showicon
  6516 0000534B E9C2020000          <1> 		jmp doneiconsel
  6517                              <1> 	textselected:
  6518 00005350 8B5E02              <1> 		mov ebx, [esi + 2]
  6519 00005353 668B5606            <1> 		mov dx, [esi + 6]
  6520 00005357 6689D0              <1> 		mov ax, dx
  6521 0000535A 668B4E08            <1> 		mov cx, [esi + 8]
  6522                              <1> 	lengthtesttext:
  6523 0000535E 803B00              <1> 		cmp byte [ebx], 0
  6524 00005361 7407                <1> 		je donetesttextlength
  6525 00005363 43                  <1> 		inc ebx
  6526 00005364 66051000            <1> 		add ax, 16
  6527 00005368 EBF4                <1> 		jmp lengthtesttext
  6528                              <1> 	donetesttextlength:
  6529 0000536A 6689CB              <1> 		mov bx, cx
  6530 0000536D 6681C30F00          <1> 		add bx, 15
  6531 00005372 813D[3E510000]0100- <1> 		cmp dword [dragging], 1
  6532 0000537A 0000                <1>
  6533 0000537C 7468                <1> 		je dragtext
  6534 0000537E 813D[3E510000]0000- <1> 		cmp dword [dragging], 0
  6535 00005386 0000                <1>
  6536 00005388 7411                <1> 		je nodragtextcheck
  6537 0000538A 3935[3E510000]      <1> 		cmp dword [dragging], esi
  6538 00005390 0F8563020000        <1> 		jne near nexticonsel
  6539 00005396 E94B000000          <1> 		jmp dragtext
  6540                              <1> 	nodragtextcheck:
  6541 0000539B 663915[6E4C0000]    <1> 		cmp [mousecursorposition], dx
  6542 000053A2 0F8251020000        <1> 		jb near nexticonsel
  6543 000053A8 663905[6E4C0000]    <1> 		cmp [mousecursorposition], ax
  6544 000053AF 0F8744020000        <1> 		ja near nexticonsel
  6545 000053B5 66390D[704C0000]    <1> 		cmp [mousecursorposition + 2], cx
  6546 000053BC 0F8237020000        <1> 		jb near nexticonsel
  6547 000053C2 66391D[704C0000]    <1> 		cmp [mousecursorposition + 2], bx
  6548 000053C9 0F872A020000        <1> 		ja near nexticonsel
  6549 000053CF 668B460A            <1> 		mov ax, [esi + 10]
  6550 000053D3 66250100            <1> 		and ax, 1
  6551 000053D7 663D0100            <1> 		cmp ax, 1
  6552 000053DB 0F84AB000000        <1> 		je near unselecttext
  6553 000053E1 E986000000          <1> 		jmp nodragtext
  6554                              <1> 	dragtext:
  6555 000053E6 663915[6A4C0000]    <1> 		cmp [lastmouseposition], dx
  6556 000053ED 0F8206020000        <1> 		jb near nexticonsel
  6557 000053F3 663905[6A4C0000]    <1> 		cmp [lastmouseposition], ax
  6558 000053FA 0F87F9010000        <1> 		ja near nexticonsel
  6559 00005400 66390D[6C4C0000]    <1> 		cmp [lastmouseposition + 2], cx
  6560 00005407 0F82EC010000        <1> 		jb near nexticonsel
  6561 0000540D 66391D[6C4C0000]    <1> 		cmp [lastmouseposition + 2], bx
  6562 00005414 0F87DF010000        <1> 		ja near nexticonsel
  6563 0000541A 668B460A            <1> 		mov ax, [esi + 10]
  6564 0000541E 2410                <1> 		and al, 00010000b
  6565 00005420 663D1000            <1> 		cmp ax, 00010000b
  6566 00005424 0F8442000000        <1> 		je near nodragtext
  6567 0000542A 8935[3E510000]      <1> 		mov [dragging], esi
  6568 00005430 662B15[6A4C0000]    <1> 		sub dx, [lastmouseposition]
  6569 00005437 660315[6E4C0000]    <1> 		add dx, [mousecursorposition]
  6570 0000543E 66030D[704C0000]    <1> 		add cx, [mousecursorposition + 2]
  6571 00005445 662B0D[6C4C0000]    <1> 		sub cx, [lastmouseposition + 2]
  6572 0000544C 663B15[885E0000]    <1> 		cmp dx, [resolutionx2]
  6573 00005453 7607                <1> 		jbe chkyresdrgtxt
  6574 00005455 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  6575                              <1> 	chkyresdrgtxt:
  6576 0000545C 663B0D[845E0000]    <1> 		cmp cx, [resolutiony]
  6577 00005463 7607                <1> 		jbe nodragtext
  6578 00005465 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  6579                              <1> 	nodragtext:
  6580 0000546C 66814E0A0100        <1> 		or word [esi + 10], 1
  6581 00005472 8B5E0C              <1> 		mov ebx, [esi + 12]
  6582 00005475 891D[B4610000]      <1> 		mov [codepointer], ebx
  6583 0000547B 668B460A            <1> 		mov ax, [esi + 10]
  6584 0000547F 8B7602              <1> 		mov esi, [esi + 2]
  6585 00005482 E85C050000          <1> 		call showstring
  6586 00005487 E986010000          <1> 		jmp doneiconsel
  6587                              <1> 	unselecttext:
  6588 0000548C 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  6589 00005492 8B5E0C              <1> 		mov ebx, [esi + 12]
  6590 00005495 668B460A            <1> 		mov ax, [esi + 10]
  6591 00005499 8B7602              <1> 		mov esi, [esi + 2]
  6592 0000549C C705[B4610000]0000- <1> 		mov dword [codepointer], 0
  6593 000054A4 0000                <1>
  6594 000054A6 E838050000          <1> 		call showstring
  6595 000054AB E962010000          <1> 		jmp doneiconsel
  6596                              <1> windowselect:
  6597 000054B0 8B7E02              <1> 		mov edi, [esi + 2]
  6598 000054B3 668B5606            <1> 		mov dx, [esi + 6]
  6599 000054B7 6689D0              <1> 		mov ax, dx
  6600 000054BA 668B4E08            <1> 		mov cx, [esi + 8]
  6601 000054BE 6689CB              <1> 		mov bx, cx
  6602 000054C1 6681C31000          <1> 		add bx, 16
  6603 000054C6 813D[3E510000]0100- <1> 		cmp dword [dragging], 1
  6604 000054CE 0000                <1>
  6605 000054D0 746D                <1> 		je dragwin
  6606 000054D2 813D[3E510000]0000- <1> 		cmp dword [dragging], 0
  6607 000054DA 0000                <1>
  6608 000054DC 7411                <1> 		je nodragwincheck
  6609 000054DE 3935[3E510000]      <1> 		cmp dword [dragging], esi
  6610 000054E4 0F850F010000        <1> 		jne near nexticonsel
  6611 000054EA E950000000          <1> 		jmp dragwin
  6612                              <1> 	nodragwincheck:
  6613 000054EF 663905[6E4C0000]    <1> 		cmp [mousecursorposition], ax
  6614 000054F6 0F82FD000000        <1> 		jb near nexticonsel
  6615 000054FC 660307              <1> 		add ax, [edi]
  6616 000054FF 660307              <1> 		add ax, [edi]
  6617 00005502 663905[6E4C0000]    <1> 		cmp [mousecursorposition], ax
  6618 00005509 0F87EA000000        <1> 		ja near nexticonsel
  6619 0000550F 66390D[704C0000]    <1> 		cmp [mousecursorposition + 2], cx
  6620 00005516 0F82DD000000        <1> 		jb near nexticonsel
  6621 0000551C 66391D[704C0000]    <1> 		cmp [mousecursorposition + 2], bx
  6622 00005523 0F87D0000000        <1> 		ja near nexticonsel
  6623 00005529 662D1400            <1> 		sub ax, 20
  6624 0000552D 663905[6E4C0000]    <1> 		cmp [mousecursorposition], ax
  6625 00005534 0F8795000000        <1> 		ja near killwin
  6626 0000553A E97C000000          <1> 		jmp nodragwin
  6627                              <1> 	dragwin:
  6628 0000553F 663905[6A4C0000]    <1> 		cmp [lastmouseposition], ax
  6629 00005546 0F82AD000000        <1> 		jb near nexticonsel
  6630 0000554C 660307              <1> 		add ax, [edi]
  6631 0000554F 660307              <1> 		add ax, [edi]
  6632 00005552 663905[6A4C0000]    <1> 		cmp [lastmouseposition], ax
  6633 00005559 0F879A000000        <1> 		ja near nexticonsel
  6634 0000555F 66390D[6C4C0000]    <1> 		cmp [lastmouseposition + 2], cx
  6635 00005566 0F828D000000        <1> 		jb near nexticonsel
  6636 0000556C 66391D[6C4C0000]    <1> 		cmp [lastmouseposition + 2], bx
  6637 00005573 0F8780000000        <1> 		ja near nexticonsel
  6638 00005579 8935[3E510000]      <1> 		mov [dragging], esi
  6639 0000557F 662B15[6A4C0000]    <1> 		sub dx, [lastmouseposition]
  6640 00005586 660315[6E4C0000]    <1> 		add dx, [mousecursorposition]
  6641 0000558D 66030D[704C0000]    <1> 		add cx, [mousecursorposition + 2]
  6642 00005594 662B0D[6C4C0000]    <1> 		sub cx, [lastmouseposition + 2]
  6643 0000559B 663B15[885E0000]    <1> 		cmp dx, [resolutionx2]
  6644 000055A2 7607                <1> 		jbe chkyresdrgwin
  6645 000055A4 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  6646                              <1> 	chkyresdrgwin:
  6647 000055AB 663B0D[845E0000]    <1> 		cmp cx, [resolutiony]
  6648 000055B2 7607                <1> 		jbe nodragwin
  6649 000055B4 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  6650                              <1> 	nodragwin:
  6651 000055BB 8B5E0C              <1> 		mov ebx, [esi + 12]
  6652 000055BE 668B460A            <1> 		mov ax, [esi + 10]
  6653 000055C2 8B7602              <1> 		mov esi, [esi + 2]
  6654 000055C5 E87B040000          <1> 		call showwindow
  6655 000055CA E943000000          <1> 		jmp doneiconsel
  6656                              <1> 	killwin:
  6657 000055CF 66C7060000          <1> 		mov word [esi], 0
  6658 000055D4 C705[40040000]0000- <1> 		mov dword [user2codepoint], 0
  6659 000055DC 0000                <1>
  6660 000055DE C605[16280000]00    <1> 		mov byte [termguion], 0
  6661 000055E5 E881F8FFFF          <1> 		call guiclear
  6662 000055EA E8AD000000          <1> 		call reloadallgraphics
  6663 000055EF E9FBF9FFFF          <1> 		jmp guistart
  6664 000055F4 E93A000000          <1> 		jmp doneiconsel2
  6665                              <1> 	nexticonsel:
  6666 000055F9 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  6667 000055FF 81C610000000        <1> 		add esi, 16
  6668 00005605 81FE[00120000]      <1> 		cmp esi, graphicstableend
  6669 0000560B 7305                <1> 		jae doneiconsel
  6670 0000560D E9ACFBFFFF          <1> 		jmp clicon2
  6671                              <1> 	doneiconsel:
  6672 00005612 813D[3E510000]0100- <1> 		cmp dword [dragging], 1
  6673 0000561A 0000                <1>
  6674 0000561C 7315                <1> 		jae doneiconsel2
  6675 0000561E 813D[B4610000]0000- <1> 		cmp dword [codepointer], 0
  6676 00005626 0000                <1>
  6677 00005628 7409                <1> 		je doneiconsel2
  6678 0000562A 8B1D[B4610000]      <1> 		mov ebx, [codepointer]
  6679 00005630 FFD3                <1> 		call ebx 
  6680 00005632 C3                  <1> 		ret
  6681                              <1> 	doneiconsel2:
  6682 00005633 A0[94480000]        <1> 		mov al, [LBUTTON]
  6683 00005638 A2[3C510000]        <1> 		mov [pLBUTTON], al
  6684 0000563D A0[95480000]        <1> 		mov al, [RBUTTON]
  6685 00005642 A2[3D510000]        <1> 		mov [pRBUTTON], al
  6686 00005647 66813D[3E510000]01- <1> 		cmp word [dragging], 1
  6687 0000564F 00                  <1>
  6688 00005650 0F860A000000        <1> 		jbe near noreloadgraphicsclick
  6689 00005656 E8AAF9FFFF          <1> call clearmousecursor
  6690 0000565B E83C000000          <1> call reloadallgraphics
  6691                              <1> noreloadgraphicsclick:
  6692 00005660 B900000000          <1> 		mov ecx, 0
  6693 00005665 BA00000000          <1> 		mov edx, 0
  6694 0000566A B400                <1> 		mov ah, 0
  6695 0000566C B0FE                <1> 		mov al, 254
  6696 0000566E 668B15[6E4C0000]    <1> 		mov dx, [mousecursorposition]
  6697 00005675 668B0D[704C0000]    <1> 		mov cx, [mousecursorposition + 2]
  6698 0000567C 66BBE738            <1> 		mov bx, 0011100011100111b
  6699 00005680 C605[01500000]01    <1> 		mov byte [showcursorfonton], 1
  6700 00005687 E80C080000          <1> 		call showfontvesa
  6701 0000568C C605[01500000]00    <1> 		mov byte [showcursorfonton], 0
  6702 00005693 C3                  <1> 		ret
  6703 00005694 00000000            <1> lastdrag dw 0,0
  6704 00005698 00000000            <1> grpctblpos dw 0,0
  6705                              <1> 
  6706                              <1> reloadallgraphics:
  6707 0000569C BF[00100000]        <1> 		mov edi, graphicstable
  6708                              <1> reloadgraphicsloop:
  6709 000056A1 8B7702              <1> 		mov esi, [edi + 2]
  6710 000056A4 668B5706            <1> 		mov dx, [edi + 6]
  6711 000056A8 668B4F08            <1> 		mov cx, [edi + 8]
  6712 000056AC 668B07              <1> 		mov ax, [edi]
  6713 000056AF 668B5F0A            <1> 		mov bx, [edi + 10]
  6714 000056B3 893D[98560000]      <1> 		mov [grpctblpos], edi
  6715 000056B9 3B3D[3E510000]      <1> 		cmp edi, [dragging]
  6716 000056BF 741E                <1> 		je loadedgraphic
  6717 000056C1 663D0100            <1> 		cmp ax, 1
  6718 000056C5 0F8431000000        <1> 		je near icongraphic
  6719 000056CB 663D0200            <1> 		cmp ax, 2
  6720 000056CF 0F8437000000        <1> 		je near stringgraphic
  6721 000056D5 663D0300            <1> 		cmp ax, 3
  6722 000056D9 0F8416000000        <1> 		je near windowgraphic
  6723 000056DF 8B3D[98560000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  6724 000056E5 81C710000000        <1> 		add edi, 16
  6725 000056EB 81FF[00120000]      <1> 		cmp edi, graphicstableend
  6726 000056F1 7329                <1> 		jae donereloadgraphics
  6727 000056F3 EBAC                <1> 		jmp reloadgraphicsloop
  6728 000056F5 E89E030000          <1> windowgraphic:	call showwindow2
  6729 000056FA EBE3                <1> 		jmp loadedgraphic
  6730 000056FC 80E301              <1> icongraphic:	and bl, 1
  6731 000056FF 881D[B8610000]      <1> 		mov [iconselected], bl
  6732 00005705 E8B4060000          <1> 		call showicon2
  6733 0000570A EBD3                <1> 		jmp loadedgraphic
  6734 0000570C 80E301              <1> stringgraphic:  and bl, 1
  6735 0000570F 881D[03500000]      <1> 		mov [mouseselecton], bl
  6736 00005715 E8DC020000          <1> 		call showstring2
  6737 0000571A EBC3                <1> 		jmp loadedgraphic
  6738                              <1> donereloadgraphics:
  6739 0000571C 8B3D[3E510000]      <1> 		mov edi, [dragging]
  6740 00005722 81FF[00100000]      <1> 		cmp edi, graphicstable
  6741 00005728 7226                <1> 		jb notcorrectdrag
  6742 0000572A 668B07              <1> 		mov ax, [edi]
  6743 0000572D 8B7702              <1> 		mov esi, [edi + 2]
  6744 00005730 668B5706            <1> 		mov dx, [edi + 6]
  6745 00005734 668B4F08            <1> 		mov cx, [edi + 8]
  6746 00005738 668B5F0A            <1> 		mov bx, [edi + 10]
  6747 0000573C 663D0100            <1> 		cmp ax, 1
  6748 00005740 750F                <1> 		jne noticondragging
  6749 00005742 80E301              <1> 		and bl, 1
  6750 00005745 881D[B8610000]      <1> 		mov [iconselected], bl
  6751 0000574B E86E060000          <1> 		call showicon2
  6752                              <1> notcorrectdrag:
  6753 00005750 C3                  <1> 		ret
  6754                              <1> 
  6755                              <1> 	noticondragging:
  6756 00005751 663D0200            <1> 		cmp ax, 2
  6757 00005755 75F9                <1> 		jne notcorrectdrag
  6758 00005757 80E301              <1> 		and bl, 1
  6759 0000575A 881D[03500000]      <1> 		mov [mouseselecton], bl
  6760 00005760 E891020000          <1> 		call showstring2
  6761 00005765 EBE9                <1> 		jmp notcorrectdrag
  6762                              <1> 
  6763 00005767 00<rept>            <1> grphbuf times 16 db 0
  6764                              <1> 	graphicsadd:
  6765 00005777 BF[00100000]        <1> 		mov edi, graphicstable
  6766                              <1> 	shwgrph1:
  6767 0000577C 397702              <1> 		cmp dword [edi + 2], esi
  6768 0000577F 7414                <1> 		je showgraphicsreplace2
  6769 00005781 81C710000000        <1> 		add edi, 16
  6770 00005787 81FF[00120000]      <1> 		cmp edi, graphicstableend
  6771 0000578D 0F8335020000        <1> 		jae near showgraphicsnew
  6772 00005793 EBE7                <1> 		jmp shwgrph1
  6773                              <1> 	showgraphicsreplace2:
  6774 00005795 8935[69570000]      <1> 		mov [grphbuf + 2], esi
  6775 0000579B 668915[6D570000]    <1> 		mov [grphbuf + 6], dx
  6776 000057A2 66890D[6F570000]    <1> 		mov [grphbuf + 8], cx
  6777 000057A9 891D[73570000]      <1> 		mov [grphbuf + 12], ebx
  6778 000057AF B700                <1> 		mov bh, 0
  6779 000057B1 88E3                <1> 		mov bl, ah
  6780 000057B3 B400                <1> 		mov ah, 0
  6781 000057B5 66A3[71570000]      <1> 		mov [grphbuf + 10], ax	
  6782 000057BB 66891D[67570000]    <1> 		mov [grphbuf], bx
  6783 000057C2 66A1[67570000]      <1> 		mov ax, [grphbuf]
  6784 000057C8 663D0100            <1> 		cmp ax, 1
  6785 000057CC 0F8419000000        <1> 		je near replaceicon
  6786 000057D2 663D0200            <1> 		cmp ax, 2
  6787 000057D6 0F8493000000        <1> 		je near replacestring
  6788 000057DC 663D0300            <1> 		cmp ax, 3
  6789 000057E0 0F840F010000        <1> 		je near replacewindow
  6790 000057E6 E9BA010000          <1> 		jmp showgraphicsreplace
  6791                              <1> 	replaceicon:
  6792 000057EB 893D[42510000]      <1> 		mov [lastpos], edi
  6793 000057F1 8935[46510000]      <1> 		mov [lastpos + 4], esi
  6794 000057F7 8B7702              <1> 		mov esi, [edi + 2]
  6795 000057FA 668B5F0C            <1> 		mov bx, [edi + 12]
  6796 000057FE 668B5706            <1> 		mov dx, [edi + 6]
  6797 00005802 668B4F08            <1> 		mov cx, [edi + 8]
  6798 00005806 668B06              <1> 		mov ax, [esi]
  6799 00005809 66A3[4A510000]      <1> 		mov [colorbuf], ax
  6800 0000580F 66A1[A84E0000]      <1> 		mov ax, [background]
  6801 00005815 668906              <1> 		mov [esi], ax
  6802 00005818 8B5F0C              <1> 		mov ebx, [edi + 12]
  6803 0000581B 668B470A            <1> 		mov ax, [edi + 10]
  6804 0000581F 2401                <1> 		and al, 1
  6805 00005821 A2[B8610000]        <1> 		mov [iconselected], al
  6806 00005826 668B470A            <1> 		mov ax, [edi + 10]
  6807 0000582A E88F050000          <1> 		call showicon2
  6808 0000582F 8B3D[42510000]      <1> 		mov edi, [lastpos]
  6809 00005835 8B7702              <1> 		mov esi, [edi + 2]
  6810 00005838 66A1[4A510000]      <1> 		mov ax, [colorbuf]
  6811 0000583E 668906              <1> 		mov [esi], ax
  6812 00005841 8B35[46510000]      <1> 		mov esi, [lastpos + 4]
  6813 00005847 668B15[6D570000]    <1> 		mov dx, [grphbuf + 6]
  6814 0000584E 668B0D[6F570000]    <1> 		mov cx, [grphbuf + 8]
  6815 00005855 668B1D[67570000]    <1> 		mov bx, [grphbuf]
  6816 0000585C 66A1[71570000]      <1> 		mov ax, [grphbuf + 10]
  6817 00005862 88DC                <1> 		mov ah, bl
  6818 00005864 8B1D[73570000]      <1> 		mov ebx, [grphbuf + 12]
  6819 0000586A E936010000          <1> 		jmp showgraphicsreplace
  6820                              <1> 	replacestring:
  6821 0000586F 893D[42510000]      <1> 		mov [lastpos], edi
  6822 00005875 8935[46510000]      <1> 		mov [lastpos + 4], esi
  6823 0000587B 8B5F0C              <1> 		mov ebx, [edi + 12]
  6824 0000587E 8B7702              <1> 		mov esi, [edi + 2]
  6825 00005881 668B5706            <1> 		mov dx, [edi + 6]
  6826 00005885 668B4F08            <1> 		mov cx, [edi + 8]
  6827 00005889 66A1[325A0000]      <1> 		mov ax, [colorfont2]
  6828 0000588F 66A3[4A510000]      <1> 		mov [colorbuf], ax
  6829 00005895 66A1[A84E0000]      <1> 		mov ax, [background]
  6830 0000589B 66A3[325A0000]      <1> 		mov [colorfont2], ax		
  6831 000058A1 8B5F0C              <1> 		mov ebx, [edi + 12]
  6832 000058A4 668B470A            <1> 		mov ax, [edi + 10]
  6833 000058A8 2401                <1> 		and al, 1
  6834 000058AA A2[03500000]        <1> 		mov [mouseselecton], al
  6835 000058AF 668B470A            <1> 		mov ax, [edi + 10]
  6836 000058B3 E83E010000          <1> 		call showstring2
  6837 000058B8 66A1[4A510000]      <1> 		mov ax, [colorbuf]
  6838 000058BE 66A3[325A0000]      <1> 		mov [colorfont2], ax
  6839 000058C4 8B3D[42510000]      <1> 		mov edi, [lastpos]
  6840 000058CA 8B7702              <1> 		mov esi, [edi + 2]
  6841 000058CD 668B15[6D570000]    <1> 		mov dx, [grphbuf + 6]
  6842 000058D4 668B0D[6F570000]    <1> 		mov cx, [grphbuf + 8]
  6843 000058DB 668B1D[67570000]    <1> 		mov bx, [grphbuf]
  6844 000058E2 66A1[71570000]      <1> 		mov ax, [grphbuf + 10]
  6845 000058E8 88DC                <1> 		mov ah, bl
  6846 000058EA 8B1D[73570000]      <1> 		mov ebx, [grphbuf + 12]
  6847 000058F0 E9B0000000          <1> 		jmp showgraphicsreplace
  6848                              <1> 	replacewindow:
  6849 000058F5 893D[42510000]      <1> 		mov [lastpos], edi
  6850 000058FB 8935[46510000]      <1> 		mov [lastpos + 4], esi
  6851 00005901 8B7702              <1> 		mov esi, [edi + 2]
  6852 00005904 8B3D[415A0000]      <1> 		mov edi, [windowbufloc]
  6853 0000590A BA00000000          <1> 		mov edx, 0
  6854 0000590F 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  6855 00005916 C1E204              <1> 		shl edx, 4
  6856 00005919 29D7                <1> 		sub edi, edx
  6857 0000591B BA00000000          <1> 		mov edx, 0
  6858 00005920 668B16              <1> 		mov dx, [esi]
  6859 00005923 660316              <1> 		add dx, [esi]
  6860 00005926 668B4E02            <1> 		mov cx, [esi + 2]
  6861 0000592A 6681C11000          <1> 		add cx, 16
  6862 0000592F 66A1[A84E0000]      <1> 		mov ax, [background]
  6863                              <1> 	clearwindow:
  6864 00005935 668907              <1> 		mov [edi], ax
  6865 00005938 81C702000000        <1> 		add edi, 2
  6866 0000593E 81EA02000000        <1> 		sub edx, 2
  6867 00005944 81FA00000000        <1> 		cmp edx, 0
  6868 0000594A 75E9                <1> 		jne clearwindow
  6869 0000594C 6649                <1> 		dec cx
  6870 0000594E 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  6871 00005955 662B16              <1> 		sub dx, [esi]
  6872 00005958 662B16              <1> 		sub dx, [esi]
  6873 0000595B 01D7                <1> 		add edi, edx
  6874 0000595D 668B16              <1> 		mov dx, [esi]
  6875 00005960 660316              <1> 		add dx, [esi]
  6876 00005963 6681F90000          <1> 		cmp cx, 0
  6877 00005968 75CB                <1> 		jne clearwindow
  6878 0000596A C605[17280000]00    <1> 		mov byte [termcopyon], 0
  6879 00005971 8B3D[42510000]      <1> 		mov edi, [lastpos]
  6880 00005977 8B35[69570000]      <1> 		mov esi, [grphbuf + 2]
  6881 0000597D 668B15[6D570000]    <1> 		mov dx, [grphbuf + 6]
  6882 00005984 668B0D[6F570000]    <1> 		mov cx, [grphbuf + 8]
  6883 0000598B 668B1D[67570000]    <1> 		mov bx, [grphbuf]
  6884 00005992 66A1[71570000]      <1> 		mov ax, [grphbuf + 10]
  6885 00005998 88DC                <1> 		mov ah, bl
  6886 0000599A 8B1D[73570000]      <1> 		mov ebx, [grphbuf + 12]
  6887 000059A0 E900000000          <1> 		jmp showgraphicsreplace
  6888                              <1> 	showgraphicsreplace:
  6889 000059A5 897702              <1> 		mov [edi + 2], esi
  6890 000059A8 66895706            <1> 		mov [edi + 6], dx
  6891 000059AC 66894F08            <1> 		mov [edi + 8], cx
  6892 000059B0 895F0C              <1> 		mov [edi + 12], ebx
  6893 000059B3 B700                <1> 		mov bh, 0
  6894 000059B5 88E3                <1> 		mov bl, ah
  6895 000059B7 B400                <1> 		mov ah, 0
  6896 000059B9 6689470A            <1> 		mov [edi + 10], ax
  6897 000059BD 66891F              <1> 		mov [edi], bx
  6898 000059C0 8B5F0C              <1> 		mov ebx, [edi + 12]
  6899 000059C3 668B470A            <1> 		mov ax, [edi + 10]
  6900 000059C7 C3                  <1> 		ret
  6901                              <1> 	showgraphicsnew:
  6902 000059C8 BF[00100000]        <1> 		mov edi, graphicstable
  6903                              <1> 	shwgrph2:
  6904 000059CD 66813F0000          <1> 		cmp word [edi], 0
  6905 000059D2 74D1                <1> 		je showgraphicsreplace
  6906 000059D4 81C710000000        <1> 		add edi, 16
  6907 000059DA 81FF[00120000]      <1> 		cmp edi, graphicstableend
  6908 000059E0 72EB                <1> 		jb shwgrph2
  6909                              <1> 	showgraphicsdone:
  6910 000059E2 C3                  <1> 		ret
  6911                              <1> 
  6912                              <1> 	showstring:
  6913 000059E3 A2[03500000]        <1> 		mov [mouseselecton], al
  6914 000059E8 8025[03500000]01    <1> 		and byte [mouseselecton], 1
  6915 000059EF B402                <1> 		mov ah, 2
  6916 000059F1 E881FDFFFF          <1> 		call graphicsadd
  6917                              <1> 	showstring2:
  6918 000059F6 B400                <1> 		mov ah, 0
  6919 000059F8 8A06                <1> 		mov al, [esi]
  6920 000059FA 3C00                <1> 		cmp al, 0
  6921 000059FC 742C                <1> 		je doneshowstring
  6922 000059FE 46                  <1> 		inc esi
  6923 000059FF 3CFF                <1> 		cmp al, 255
  6924 00005A01 74F3                <1> 		je showstring2
  6925 00005A03 8935[61610000]      <1> 		mov [showstringesi], esi
  6926 00005A09 668B1D[325A0000]    <1> 		mov bx, [colorfont2]
  6927 00005A10 E883040000          <1> 		call showfontvesa
  6928 00005A15 3C0D                <1> 		cmp al, 13
  6929 00005A17 7409                <1> 		je noproceedshst
  6930 00005A19 3C0A                <1> 		cmp al, 10
  6931 00005A1B 7405                <1> 		je noproceedshst
  6932 00005A1D 6681C20800          <1> 		add dx, 8
  6933                              <1> 		noproceedshst
  6934 00005A22 8B35[61610000]      <1> 		mov esi, [showstringesi]
  6935 00005A28 EBCC                <1> 		jmp showstring2
  6936                              <1> 	doneshowstring:
  6937 00005A2A C605[03500000]00    <1> 		mov byte [mouseselecton], 0
  6938 00005A31 C3                  <1> 		ret
  6939                              <1> 
  6940 00005A32 FFFF                <1> colorfont2 dw 0xFFFF
  6941 00005A34 00                  <1> colorcache db 0
  6942 00005A35 0000                <1> winvcopystx dw 0
  6943 00005A37 0000                <1> winvcopysty dw 0
  6944 00005A39 0000                <1> winvcopydx dw 0
  6945 00005A3B 0000                <1> winvcopycx dw 0
  6946 00005A3D FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  6947 00005A41 00000000            <1> windowbufloc: dw 0,0
  6948                              <1> 
  6949                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  6950 00005A45 C605[16280000]01    <1> 		mov byte [termguion], 1
  6951 00005A4C 6681C11000          <1> 		add cx, 16
  6952 00005A51 668915[355A0000]    <1> 		mov [winvcopystx], dx
  6953 00005A58 66890D[375A0000]    <1> 		mov [winvcopysty], cx
  6954 00005A5F 668B16              <1> 		mov dx, [esi]
  6955 00005A62 668B4E02            <1> 		mov cx, [esi + 2]
  6956 00005A66 6601D2              <1> 		add dx, dx
  6957 00005A69 668915[395A0000]    <1> 		mov [winvcopydx], dx
  6958 00005A70 66890D[3B5A0000]    <1> 		mov [winvcopycx], cx
  6959 00005A77 668B0D[375A0000]    <1> 		mov cx, [winvcopysty]
  6960 00005A7E 6681E91000          <1> 		sub cx, 16
  6961 00005A83 668B15[355A0000]    <1> 		mov dx, [winvcopystx]
  6962 00005A8A C605[17280000]00    <1> 		mov byte [termcopyon], 0
  6963 00005A91 B403                <1> 		mov ah, 3
  6964 00005A93 E8DFFCFFFF          <1> 		call graphicsadd
  6965                              <1> 	showwindow2:
  6966 00005A98 6681C11000          <1> 		add cx, 16
  6967 00005A9D 668915[355A0000]    <1> 		mov [winvcopystx], dx
  6968 00005AA4 66890D[375A0000]    <1> 		mov [winvcopysty], cx
  6969 00005AAB 668B16              <1> 		mov dx, [esi]
  6970 00005AAE 668B4E02            <1> 		mov cx, [esi + 2]
  6971 00005AB2 6601D2              <1> 		add dx, dx
  6972 00005AB5 668915[395A0000]    <1> 		mov [winvcopydx], dx
  6973 00005ABC 66890D[3B5A0000]    <1> 		mov [winvcopycx], cx
  6974 00005AC3 8B3D[415A0000]      <1> 		mov edi, [windowbufloc]
  6975 00005AC9 BA00000000          <1> 		mov edx, 0
  6976 00005ACE 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  6977 00005AD5 C1E204              <1> 		shl edx, 4
  6978 00005AD8 29D7                <1> 		sub edi, edx
  6979 00005ADA 803D[17280000]00    <1> 		cmp byte [termcopyon], 0
  6980 00005AE1 753E                <1> 		jne nocleartitlebarpos
  6981 00005AE3 8B3D[D4850000]      <1> 		mov edi, [physbaseptr]
  6982 00005AE9 BA00000000          <1> 		mov edx, 0
  6983 00005AEE 668B15[355A0000]    <1> 		mov dx, [winvcopystx]
  6984 00005AF5 01D7                <1> 		add edi, edx
  6985 00005AF7 668B0D[375A0000]    <1> 		mov cx, [winvcopysty]
  6986 00005AFE 6681E91000          <1> 		sub cx, 16
  6987 00005B03 6681F90000          <1> 		cmp cx, 0
  6988 00005B08 7417                <1> 		je nocleartitlebarpos
  6989                              <1> 	cleartitlebarpos:
  6990 00005B0A BA00000000          <1> 		mov edx, 0
  6991 00005B0F 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  6992 00005B16 01D7                <1> 		add edi, edx
  6993 00005B18 6649                <1> 		dec cx
  6994 00005B1A 6681F90000          <1> 		cmp cx, 0
  6995 00005B1F 75E9                <1> 		jne cleartitlebarpos
  6996                              <1> 	nocleartitlebarpos:
  6997 00005B21 66B91000            <1> 		mov cx, 16
  6998 00005B25 668B15[395A0000]    <1> 		mov dx, [winvcopydx]
  6999 00005B2C 6681F90000          <1> 		cmp cx, 0
  7000 00005B31 0F844B000000        <1> 		je near canceltitlebarput
  7001 00005B37 6681FA0000          <1> 		cmp dx, 0
  7002 00005B3C 0F8440000000        <1> 		je near canceltitlebarput
  7003                              <1> 	titlebarput:
  7004 00005B42 66A1[3D5A0000]      <1> 		mov ax, [windowcolor]
  7005 00005B48 668907              <1> 		mov [edi], ax
  7006 00005B4B 6681EA0200          <1> 		sub dx, 2
  7007 00005B50 81C702000000        <1> 		add edi, 2
  7008 00005B56 6681FA0000          <1> 		cmp dx, 0
  7009 00005B5B 75E5                <1> 		jne titlebarput
  7010 00005B5D BA00000000          <1> 		mov edx, 0
  7011 00005B62 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  7012 00005B69 6649                <1> 		dec cx
  7013 00005B6B 662B15[395A0000]    <1> 		sub dx, [winvcopydx]
  7014 00005B72 01D7                <1> 		add edi, edx
  7015 00005B74 668B15[395A0000]    <1> 		mov dx, [winvcopydx]
  7016 00005B7B 6681F90000          <1> 		cmp cx, 0
  7017 00005B80 75C0                <1> 		jne titlebarput
  7018                              <1> 	canceltitlebarput:
  7019 00005B82 893D[415A0000]      <1> 		mov [windowbufloc], edi
  7020 00005B88 803D[17280000]02    <1> 		cmp byte [termcopyon], 2
  7021 00005B8F 0F8463000000        <1> 		je near winvcpst
  7022 00005B95 66B80000            <1> 		mov ax, 0
  7023 00005B99 81C604000000        <1> 		add esi, 4
  7024 00005B9F 668B15[355A0000]    <1> 		mov dx, [winvcopystx]
  7025 00005BA6 668B0D[375A0000]    <1> 		mov cx, [winvcopysty]
  7026 00005BAD 6681E91000          <1> 		sub cx, 16
  7027 00005BB2 66BB0000            <1> 		mov bx, 0
  7028 00005BB6 C605[03500000]01    <1> 		mov byte [mouseselecton], 1
  7029 00005BBD E834FEFFFF          <1> 		call showstring2
  7030 00005BC2 B058                <1> 		mov al, "X"
  7031 00005BC4 B400                <1> 		mov ah, 0
  7032 00005BC6 668B1D[325A0000]    <1> 		mov bx, [colorfont2]
  7033 00005BCD 668B15[355A0000]    <1> 		mov dx, [winvcopystx]
  7034 00005BD4 668B0D[375A0000]    <1> 		mov cx, [winvcopysty]
  7035 00005BDB 6681E91000          <1> 		sub cx, 16
  7036 00005BE0 6681EA1400          <1> 		sub dx, 20
  7037 00005BE5 660315[395A0000]    <1> 		add dx, [winvcopydx]
  7038 00005BEC C605[03500000]01    <1> 		mov byte [mouseselecton], 1
  7039 00005BF3 E8A0020000          <1> 		call showfontvesa
  7040                              <1> 	winvcpst:
  7041 00005BF8 8B3D[415A0000]      <1> 		mov edi, [windowbufloc]
  7042 00005BFE E957000000          <1> 		jmp windowvideocopyset
  7043                              <1> 
  7044                              <1> 	windowvideocopy:
  7045 00005C03 8B3D[415A0000]      <1> 		mov edi, [windowbufloc]
  7046 00005C09 3B3D[D4850000]      <1> 		cmp edi, [physbaseptr]
  7047 00005C0F 0F8345000000        <1> 		jae near windowvideocopyset
  7048 00005C15 B900000000          <1> 		mov ecx, 0
  7049 00005C1A BA00000000          <1> 		mov edx, 0
  7050 00005C1F 668B15[355A0000]    <1> 		mov dx, [winvcopystx]
  7051 00005C26 668B0D[375A0000]    <1> 		mov cx, [winvcopysty]
  7052 00005C2D 8B3D[D4850000]      <1> 		mov edi, [physbaseptr]
  7053 00005C33 01D7                <1> 		add edi, edx
  7054 00005C35 81F900000000        <1> 		cmp ecx, 0
  7055 00005C3B 741D                <1> 		je windowvideocopyset
  7056                              <1> 	yrescopylp:
  7057 00005C3D BA00000000          <1> 		mov edx, 0
  7058 00005C42 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  7059 00005C49 01D7                <1> 		add edi, edx
  7060 00005C4B 6649                <1> 		dec cx
  7061 00005C4D 6681F90000          <1> 		cmp cx, 0
  7062 00005C52 75E9                <1> 		jne yrescopylp
  7063 00005C54 893D[415A0000]      <1> 		mov [windowbufloc], edi
  7064                              <1> 	windowvideocopyset:
  7065 00005C5A 66B90000            <1> 		mov cx, 0
  7066 00005C5E 66890D[A35D0000]    <1> 		mov [charposline], cx
  7067 00005C65 BE[8F1D0000]        <1> 		mov esi, videobuf2
  7068 00005C6A 8935[A55D0000]      <1> 		mov [charposvbuf], esi
  7069 00005C70 8A5E01              <1> 		mov bl, [esi + 1]
  7070 00005C73 881D[345A0000]      <1> 		mov [colorcache], bl
  7071 00005C79 8A1E                <1> 		mov bl, [esi]
  7072 00005C7B B700                <1> 		mov bh, 0
  7073 00005C7D 66C1E304            <1> 		shl bx, 4
  7074 00005C81 678AB7[9C73]        <1> 		mov dh, [fonts + bx]
  7075 00005C86 D0CE                <1> 		ror dh, 1
  7076 00005C88 89FE                <1> 		mov esi, edi
  7077                              <1> 	copywindow:
  7078 00005C8A B201                <1> 		mov dl, 1
  7079 00005C8C D0C6                <1> 		rol dh, 1
  7080 00005C8E 20F2                <1> 		and dl, dh
  7081 00005C90 803D[345A0000]10    <1> 		cmp byte [colorcache], 0x10
  7082 00005C97 731C                <1> 		jae switchwincolors
  7083 00005C99 66A1[3F5A0000]      <1> 		mov ax, [windowcolor + 2]
  7084 00005C9F 668907              <1> 		mov [edi], ax
  7085 00005CA2 80FA00              <1> 		cmp dl, 0
  7086 00005CA5 7425                <1> 		je nowritewin
  7087 00005CA7 66A1[3D5A0000]      <1> 		mov ax, [windowcolor]
  7088 00005CAD 668907              <1> 		mov [edi], ax
  7089 00005CB0 E917000000          <1> 		jmp nowritewin
  7090                              <1> 	switchwincolors:
  7091 00005CB5 66A1[3D5A0000]      <1> 		mov ax, [windowcolor]
  7092 00005CBB 668907              <1> 		mov [edi], ax
  7093 00005CBE 80FA00              <1> 		cmp dl, 0
  7094 00005CC1 7409                <1> 		je nowritewin
  7095 00005CC3 66A1[3F5A0000]      <1> 		mov ax, [windowcolor + 2]
  7096 00005CC9 668907              <1> 		mov [edi], ax
  7097                              <1> 	nowritewin:
  7098 00005CCC 81C702000000        <1> 		add edi, 2
  7099 00005CD2 FEC1                <1> 		inc cl
  7100 00005CD4 80F908              <1> 		cmp cl, 8
  7101 00005CD7 75B1                <1> 		jne copywindow
  7102 00005CD9 6643                <1> 		inc bx
  7103 00005CDB B100                <1> 		mov cl, 0
  7104 00005CDD BA00000000          <1> 		mov edx, 0
  7105 00005CE2 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  7106 00005CE9 01D6                <1> 		add esi, edx
  7107 00005CEB 89F7                <1> 		mov edi, esi
  7108 00005CED 678AB7[9C73]        <1> 		mov dh, [fonts + bx]
  7109 00005CF2 D0CE                <1> 		ror dh, 1
  7110 00005CF4 FEC5                <1> 		inc ch
  7111 00005CF6 80FD10              <1> 		cmp ch, 16
  7112 00005CF9 758F                <1> 		jne copywindow
  7113 00005CFB 66B90000            <1> 		mov cx, 0
  7114 00005CFF 8B3D[A55D0000]      <1> 		mov edi, [charposvbuf]
  7115 00005D05 81C702000000        <1> 		add edi, 2
  7116 00005D0B 81FF[4F300000]      <1> 		cmp edi, videobufend
  7117 00005D11 7379                <1> 		jae donewincopynow
  7118 00005D13 8A5F01              <1> 		mov bl, [edi + 1]
  7119 00005D16 881D[345A0000]      <1> 		mov [colorcache], bl
  7120 00005D1C 8A1F                <1> 		mov bl, [edi]
  7121 00005D1E B700                <1> 		mov bh, 0
  7122 00005D20 66C1E304            <1> 		shl bx, 4
  7123 00005D24 893D[A55D0000]      <1> 		mov [charposvbuf], edi
  7124 00005D2A BA00000000          <1> 		mov edx, 0
  7125 00005D2F 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  7126 00005D36 C1E204              <1> 		shl edx, 4
  7127 00005D39 29D6                <1> 		sub esi, edx
  7128 00005D3B 81C610000000        <1> 		add esi, 16
  7129 00005D41 89F7                <1> 		mov edi, esi
  7130 00005D43 668B0D[A35D0000]    <1> 		mov cx, [charposline]
  7131 00005D4A 6641                <1> 		inc cx
  7132 00005D4C 6681F95000          <1> 		cmp cx, 80
  7133 00005D51 7317                <1> 		jae fixwindowcopy
  7134 00005D53 66890D[A35D0000]    <1> 		mov [charposline], cx
  7135 00005D5A 66B90000            <1> 		mov cx, 0
  7136 00005D5E 678AB7[9C73]        <1> 		mov dh, [fonts + bx]
  7137 00005D63 D0CE                <1> 		ror dh, 1
  7138 00005D65 E920FFFFFF          <1> 		jmp copywindow
  7139                              <1> fixwindowcopy:
  7140 00005D6A 66B90000            <1> 		mov cx, 0
  7141 00005D6E 66890D[A35D0000]    <1> 		mov [charposline], cx
  7142 00005D75 662B15[395A0000]    <1> 		sub dx, [winvcopydx]
  7143 00005D7C 01D6                <1> 		add esi, edx
  7144 00005D7E 89F7                <1> 		mov edi, esi
  7145 00005D80 678AB7[9C73]        <1> 		mov dh, [fonts + bx]
  7146 00005D85 D0CE                <1> 		ror dh, 1
  7147 00005D87 E9FEFEFFFF          <1> 		jmp copywindow
  7148                              <1> donewincopynow:
  7149 00005D8C E8F0D0FFFF          <1> 		call switchtermcursor
  7150 00005D91 803D[17280000]01    <1> 		cmp byte [termcopyon], 1
  7151 00005D98 7501                <1> 		jne forgetresetstuff
  7152 00005D9A 61                  <1> 		popa
  7153                              <1> forgetresetstuff:
  7154 00005D9B C605[17280000]00    <1> 		mov byte [termcopyon], 0
  7155 00005DA2 C3                  <1> 		ret
  7156                              <1> 
  7157 00005DA3 0000                <1> charposline dw 0
  7158 00005DA5 00000000            <1> charposvbuf dw 0,0
  7159 00005DA9 0000                <1> iconcolor dw 0
  7160                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  7161 00005DAB A2[B8610000]        <1> 		mov [iconselected], al
  7162 00005DB0 8025[B8610000]01    <1> 		and byte [iconselected], 1
  7163 00005DB7 B401                <1> 		mov ah, 1
  7164 00005DB9 E8B9F9FFFF          <1> 		call graphicsadd
  7165                              <1> 	showicon2:
  7166 00005DBE 8B3D[D4850000]      <1> 		mov edi, [physbaseptr]
  7167 00005DC4 6601D2              <1> 		add dx, dx
  7168 00005DC7 663B15[885E0000]    <1> 		cmp dx, [resolutionx2]
  7169 00005DCE 720C                <1> 		jb screenxgood
  7170 00005DD0 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  7171 00005DD7 6681EA4000          <1> 		sub dx, 64
  7172                              <1> 	screenxgood:
  7173 00005DDC 6681F90000          <1> 		cmp cx, 0
  7174 00005DE1 7425                <1> 		je noscreenygoodchk
  7175 00005DE3 663B0D[845E0000]    <1> 		cmp cx, [resolutiony]
  7176 00005DEA 720C                <1> 		jb screenygood
  7177 00005DEC 668B0D[845E0000]    <1> 		mov cx, [resolutiony]
  7178 00005DF3 6681E92000          <1> 		sub cx, 32
  7179                              <1> 	screenygood:
  7180 00005DF8 BB00000000          <1> 		mov ebx, 0
  7181 00005DFD 668B1D[885E0000]    <1> 		mov bx, [resolutionx2]
  7182 00005E04 01DF                <1> 		add edi, ebx
  7183 00005E06 E2F0                <1> 		loop screenygood
  7184                              <1> 	noscreenygoodchk:
  7185 00005E08 BB00000000          <1> 		mov ebx, 0
  7186 00005E0D 6689D3              <1> 		mov bx, dx
  7187 00005E10 01DF                <1> 		add edi, ebx
  7188 00005E12 66B90000            <1> 		mov cx, 0
  7189 00005E16 668B06              <1> 		mov ax, [esi]
  7190 00005E19 81C602000000        <1> 		add esi, 2
  7191 00005E1F 66A3[A95D0000]      <1> 		mov [iconcolor], ax
  7192                              <1> 	writeicon:
  7193 00005E25 8B06                <1> 		mov eax, [esi]
  7194 00005E27 D1C0                <1> 		rol eax, 1
  7195 00005E29 B100                <1> 		mov cl, 0
  7196                              <1> 	writeiconline:
  7197 00005E2B B201                <1> 		mov dl, 1
  7198 00005E2D 20C2                <1> 		and dl, al
  7199 00005E2F 3215[B8610000]      <1> 		xor dl, [iconselected]
  7200 00005E35 668B1D[A84E0000]    <1> 		mov bx, [background]
  7201 00005E3C 66891F              <1> 		mov [edi], bx
  7202 00005E3F 80FA00              <1> 		cmp dl, 0
  7203 00005E42 740A                <1> 		je noiconline
  7204 00005E44 668B15[A95D0000]    <1> 		mov dx, [iconcolor]
  7205 00005E4B 668917              <1> 		mov [edi], dx
  7206                              <1> 	noiconline:
  7207 00005E4E 81C702000000        <1> 		add edi, 2
  7208 00005E54 D1C0                <1> 		rol eax, 1
  7209 00005E56 FEC1                <1> 		inc cl
  7210 00005E58 80F920              <1> 		cmp cl, 32
  7211 00005E5B 72CE                <1> 		jb writeiconline
  7212 00005E5D 81C604000000        <1> 		add esi, 4
  7213 00005E63 FEC5                <1> 		inc ch
  7214 00005E65 BA00000000          <1> 		mov edx, 0
  7215 00005E6A 668B15[885E0000]    <1> 		mov dx, [resolutionx2]
  7216 00005E71 01D7                <1> 		add edi, edx
  7217 00005E73 81EF40000000        <1> 		sub edi, 64
  7218 00005E79 80FD20              <1> 		cmp ch, 32
  7219 00005E7C 72A7                <1> 		jb writeicon
  7220 00005E7E B800000000          <1> 		mov eax, 0
  7221 00005E83 C3                  <1> 		ret
  7222                              <1> 
  7223 00005E84 0000                <1> resolutiony dw 0
  7224 00005E86 0000                <1> resolutionx dw 0
  7225 00005E88 0000                <1> resolutionx2 dw 0
  7226 00005E8A 02                  <1> resolutionbytes db 2
  7227 00005E8B 0000                <1> posxvesa dw 0
  7228 00005E8D 0000                <1> posyvesa dw 0
  7229 00005E8F FFFF                <1> colorfont dw 0xFFFF
  7230                              <1> savefontvesa:		;;same rules as showfontvesa
  7231 00005E91 C605[02500000]01    <1> 	mov byte [savefonton], 1
  7232                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  7233 00005E98 3CFF                <1> 	cmp al, 255
  7234 00005E9A 7501                <1> 	jne nostopshowfont
  7235 00005E9C C3                  <1> 	ret
  7236                              <1> nostopshowfont:
  7237 00005E9D 66890D[8D5E0000]    <1> 	mov [posyvesa], cx
  7238 00005EA4 3C0A                <1> 	cmp al, 10
  7239 00005EA6 0F8435000000        <1> 	je near goodvesafontx
  7240 00005EAC 3C0D                <1> 	cmp al, 13
  7241 00005EAE 0F842D000000        <1> 	je near goodvesafontx
  7242 00005EB4 B900000000          <1> 	mov ecx, 0
  7243 00005EB9 668B0D[885E0000]    <1> 	mov cx, [resolutionx2]
  7244 00005EC0 6681E91000          <1> 	sub cx, 16
  7245 00005EC5 6639CA              <1> 	cmp dx, cx
  7246 00005EC8 7617                <1> 	jbe goodvesafontx
  7247 00005ECA 66BA0000            <1> 	mov dx, 0
  7248 00005ECE 668B0D[8D5E0000]    <1> 	mov cx, [posyvesa]
  7249 00005ED5 6681C11000          <1> 	add cx, 16
  7250 00005EDA 66890D[8D5E0000]    <1> 	mov [posyvesa], cx
  7251                              <1> goodvesafontx:
  7252 00005EE1 668B0D[8D5E0000]    <1> 	mov cx, [posyvesa]
  7253 00005EE8 668915[8B5E0000]    <1> 	mov [posxvesa], dx
  7254 00005EEF 8B3D[D4850000]      <1> 	mov edi, [physbaseptr]
  7255 00005EF5 66891D[8F5E0000]    <1> 	mov [colorfont], bx
  7256 00005EFC BB00000000          <1> 	mov ebx, 0
  7257 00005F01 88C3                <1> 	mov bl, al
  7258 00005F03 B800000000          <1> 	mov eax, 0
  7259 00005F08 88D8                <1> 	mov al, bl
  7260 00005F0A 6689D3              <1> 	mov bx, dx
  7261 00005F0D 89DA                <1> 	mov edx, ebx
  7262 00005F0F BB00000000          <1> 	mov ebx, 0
  7263 00005F14 6681F90000          <1> 	cmp cx, 0
  7264 00005F19 7415                <1> 	je vesaposloopdn
  7265 00005F1B 668B1D[885E0000]    <1> 	mov bx, [resolutionx2]
  7266                              <1> vesaposloop:
  7267 00005F22 01DA                <1> 	add edx, ebx
  7268 00005F24 6681E90100          <1> 	sub cx, 1
  7269 00005F29 6681F90000          <1> 	cmp cx, 0
  7270 00005F2E 75F2                <1> 	jne vesaposloop
  7271                              <1> vesaposloopdn:
  7272 00005F30 01D7                <1> 	add edi, edx
  7273 00005F32 BE[9C730000]        <1> 	mov esi, fonts
  7274                              <1> findfontvesa:
  7275 00005F37 B400                <1> 	mov ah, 0
  7276 00005F39 3C0A                <1> 	cmp al, 10
  7277 00005F3B 0F840C010000        <1> 	je near nwlinevesa
  7278 00005F41 3C0D                <1> 	cmp al, 13
  7279 00005F43 0F8419010000        <1> 	je near cretvesa
  7280 00005F49 C1E004              <1> 	shl eax, 4
  7281 00005F4C 01C6                <1> 	add esi, eax
  7282 00005F4E C1E804              <1> 	shr eax, 4
  7283 00005F51 81FE[9C830000]      <1> 	cmp esi, fontend
  7284 00005F57 0F83BF000000        <1> 	jae near donefontvesa
  7285 00005F5D 4E                  <1> 	dec esi
  7286                              <1> foundfontvesa:
  7287 00005F5E 46                  <1> 	inc esi
  7288 00005F5F 803D[02500000]01    <1> 	cmp byte [savefonton], 1
  7289 00005F66 0F840A010000        <1> 	je near vesafontsaver
  7290 00005F6C B100                <1> 	mov cl, 0
  7291 00005F6E 8A06                <1> 	mov al, [esi]
  7292 00005F70 668B15[885E0000]    <1> 	mov dx, [resolutionx2]
  7293 00005F77 662B15[8B5E0000]    <1> 	sub dx, [posxvesa]
  7294 00005F7E 6681FA1000          <1> 	cmp dx, 16
  7295 00005F83 7708                <1> 	ja paintfontvesa
  7296 00005F85 D0EA                <1> 	shr dl, 1
  7297 00005F87 8815[4C600000]      <1> 	mov [charwidth], dl
  7298                              <1> paintfontvesa:
  7299 00005F8D B201                <1> 	mov dl, 1
  7300 00005F8F 20C2                <1> 	and dl, al
  7301 00005F91 803D[01500000]01    <1> 	cmp byte [showcursorfonton], 1
  7302 00005F98 0F8435000000        <1> 	je near nodelpaintedfont
  7303 00005F9E 803D[01500000]02    <1> 	cmp byte [showcursorfonton], 2
  7304 00005FA5 0F8518000000        <1> 	jne near noswitchcursorfonton
  7305 00005FAB 80FA00              <1> 	cmp dl, 0
  7306 00005FAE 0F842E000000        <1> 	je near nopixelset
  7307 00005FB4 668B1D[8F5E0000]    <1> 	mov bx, [colorfont]
  7308 00005FBB 66891F              <1> 	mov [edi], bx
  7309 00005FBE E91F000000          <1> 	jmp nopixelset
  7310                              <1> noswitchcursorfonton:
  7311 00005FC3 3215[03500000]      <1> 	xor dl, [mouseselecton]
  7312 00005FC9 668B1D[A84E0000]    <1> 	mov bx, [background]
  7313 00005FD0 66891F              <1> 	mov [edi], bx
  7314                              <1> nodelpaintedfont:
  7315 00005FD3 80FA00              <1> 	cmp dl, 0
  7316 00005FD6 740A                <1> 	je nopixelset
  7317 00005FD8 668B15[8F5E0000]    <1> 	mov dx, [colorfont]
  7318 00005FDF 668917              <1> 	mov [edi], dx
  7319                              <1> nopixelset:
  7320 00005FE2 81C702000000        <1> 	add edi, 2
  7321 00005FE8 D0C0                <1> 	rol al, 1
  7322 00005FEA FEC1                <1> 	inc cl
  7323 00005FEC 3A0D[4C600000]      <1> 	cmp cl, [charwidth]
  7324 00005FF2 7299                <1> 	jb paintfontvesa
  7325 00005FF4 FEC5                <1> 	inc ch
  7326 00005FF6 BA00000000          <1> 	mov edx, 0
  7327 00005FFB 668B15[885E0000]    <1> 	mov dx, [resolutionx2]
  7328 00006002 01D7                <1> 	add edi, edx
  7329 00006004 BA00000000          <1> 	mov edx, 0
  7330 00006009 8A15[4C600000]      <1> 	mov dl, [charwidth]
  7331 0000600F 00D2                <1> 	add dl, dl
  7332 00006011 29D7                <1> 	sub edi, edx
  7333 00006013 80FD10              <1> 	cmp ch, 16
  7334 00006016 0F8242FFFFFF        <1> 	jb foundfontvesa
  7335                              <1> donefontvesa:
  7336 0000601C B208                <1> 	mov dl, 8
  7337 0000601E 8815[4C600000]      <1> 	mov [charwidth], dl
  7338 00006024 668B15[8B5E0000]    <1> 	mov dx, [posxvesa]
  7339 0000602B 8A1D[4C600000]      <1> 	mov bl, [charwidth]
  7340 00006031 B700                <1> 	mov bh, 0
  7341 00006033 6601DA              <1> 	add dx, bx
  7342 00006036 668B1D[8F5E0000]    <1> 	mov bx, [colorfont]
  7343 0000603D 668B0D[8D5E0000]    <1> 	mov cx, [posyvesa]
  7344 00006044 C605[02500000]00    <1> 	mov byte [savefonton], 0
  7345 0000604B C3                  <1> 	ret
  7346 0000604C 08                  <1> charwidth db 8
  7347                              <1> nwlinevesa:
  7348 0000604D 668B0D[8D5E0000]    <1> 	mov cx, [posyvesa]
  7349 00006054 6681C11000          <1> 	add cx, 16
  7350 00006059 66890D[8D5E0000]    <1> 	mov [posyvesa], cx
  7351 00006060 EBBA                <1> 	jmp donefontvesa
  7352                              <1> cretvesa:
  7353 00006062 668B15[8B5E0000]    <1> 	mov dx, [posxvesa]
  7354 00006069 66BA0000            <1> 	mov dx, 0
  7355 0000606D 668915[8B5E0000]    <1> 	mov [posxvesa], dx
  7356 00006074 EBA6                <1> 	jmp donefontvesa
  7357                              <1> vesafontsaver:
  7358 00006076 B000                <1> 	mov al, 0
  7359 00006078 B100                <1> 	mov cl, 0
  7360                              <1> vesafontsaver2:
  7361 0000607A 668B17              <1> 	mov dx, [edi]
  7362 0000607D 663B15[8F5E0000]    <1> 	cmp dx, [colorfont]
  7363 00006084 7432                <1> 	je colorfontmatch
  7364                              <1> donecolormatch:
  7365 00006086 81C702000000        <1> 	add edi, 2
  7366 0000608C D0C0                <1> 	rol al, 1
  7367 0000608E FEC1                <1> 	inc cl
  7368 00006090 80F908              <1> 	cmp cl, 8
  7369 00006093 72E5                <1> 	jb vesafontsaver2
  7370 00006095 8806                <1> 	mov [esi], al
  7371 00006097 46                  <1> 	inc esi
  7372 00006098 FEC5                <1> 	inc ch
  7373 0000609A BA00000000          <1> 	mov edx, 0
  7374 0000609F 668B15[885E0000]    <1> 	mov dx, [resolutionx2]
  7375 000060A6 01D7                <1> 	add edi, edx
  7376 000060A8 81EF10000000        <1> 	sub edi, 16
  7377 000060AE 80FD10              <1> 	cmp ch, 16
  7378 000060B1 72C3                <1> 	jb vesafontsaver
  7379 000060B3 E964FFFFFF          <1> 	jmp donefontvesa
  7380                              <1> colorfontmatch:
  7381 000060B8 0401                <1> 	add al, 1
  7382 000060BA EBCA                <1> 	jmp donecolormatch
  7383                              <1> 	
  7384                              <1> showbmp:
  7385 000060BC 668B06              <1> 	mov ax, [esi]
  7386 000060BF 663D424D            <1> 	cmp ax, "BM"
  7387 000060C3 0F858E000000        <1> 	jne near endedbmp
  7388 000060C9 8B3D[D4850000]      <1> 	mov edi, [physbaseptr]
  7389 000060CF 6689D0              <1> 	mov ax, dx
  7390 000060D2 6689CB              <1> 	mov bx, cx
  7391 000060D5 B900000000          <1> 	mov ecx, 0
  7392 000060DA BA00000000          <1> 	mov edx, 0
  7393 000060DF 6689D9              <1> 	mov cx, bx
  7394 000060E2 6689C2              <1> 	mov dx, ax
  7395 000060E5 01D7                <1> 	add edi, edx
  7396 000060E7 01D7                <1> 	add edi, edx
  7397 000060E9 BA00000000          <1> 	mov edx, 0
  7398 000060EE 668B15[885E0000]    <1> 	mov dx, [resolutionx2]
  7399 000060F5 41                  <1> 	inc ecx
  7400 000060F6 034E16              <1> 	add ecx, [esi + 22]
  7401                              <1> bmplocloop:
  7402 000060F9 01D7                <1> 	add edi, edx
  7403 000060FB E2FC                <1> 	loop bmplocloop
  7404 000060FD 29D7                <1> 	sub edi, edx
  7405 000060FF 8B5612              <1> 	mov edx, [esi + 18]
  7406 00006102 8B4E16              <1> 	mov ecx, [esi + 22]
  7407 00006105 8B460A              <1> 	mov eax, [esi + 10]
  7408 00006108 8B5E02              <1> 	mov ebx, [esi + 2]
  7409 0000610B 01F3                <1> 	add ebx, esi
  7410 0000610D 891D[5D610000]      <1> 	mov [bmpend], ebx
  7411 00006113 89D3                <1> 	mov ebx, edx
  7412 00006115 01C6                <1> 	add esi, eax
  7413                              <1> ldxbmp:
  7414 00006117 668B06              <1> 	mov ax, [esi]
  7415 0000611A 668907              <1> 	mov [edi], ax
  7416 0000611D 81C702000000        <1> 	add edi, 2
  7417 00006123 81C602000000        <1> 	add esi, 2
  7418 00006129 3B35[5D610000]      <1> 	cmp esi, [bmpend]
  7419 0000612F 7726                <1> 	ja endedbmp
  7420 00006131 4A                  <1> 	dec edx
  7421 00006132 81FA00000000        <1> 	cmp edx, 0
  7422 00006138 77DD                <1> 	ja ldxbmp
  7423 0000613A BA00000000          <1> 	mov edx, 0
  7424 0000613F 668B15[885E0000]    <1> 	mov dx, [resolutionx2]
  7425 00006146 29DF                <1> 	sub edi, ebx
  7426 00006148 29DF                <1> 	sub edi, ebx
  7427 0000614A 29D7                <1> 	sub edi, edx
  7428 0000614C 49                  <1> 	dec ecx
  7429 0000614D 89DA                <1> 	mov edx, ebx
  7430 0000614F 81F900000000        <1> 	cmp ecx, 0
  7431 00006155 77C0                <1> 	ja ldxbmp
  7432                              <1> endedbmp:
  7433 00006157 E875EFFFFF          <1> 	call switchmousepos2
  7434 0000615C C3                  <1> 	ret
  7435                              <1> 	
  7436 0000615D 00000000            <1> 	bmpend dd 0
  7437                              <1> 
  7438                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  7439 00006161 00000000            <1> 	showstringesi dw 0,0
  7440 00006165 00                  <1> 	mouseon db 0
  7441 00006166 737461727400        <1> 	start	db "start",0
  7442 0000616C 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  7443 00006175 426F6F2100          <1> 	boomsg db "Boo!",0
  7444 0000617A 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  7445 00006183 73206561737920746F- <1>
  7446 0000618C 20647261772E00      <1>
  7447 00006193 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  7448 0000619C 6D206E6F6D00        <1>
  7449 000061A2 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  7450 000061AB 75636B7300          <1>
  7451 000061B0 5800                <1> 	xmsg db "X",0
  7452 000061B2 0000                <1> 	icon dw 0	;pointer to icon
  7453 000061B4 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  7454 000061B8 00                  <1> 	iconselected db 0
  7455                              <1> 	
  7456                              <1> 	boo:
  7457 000061B9 BE[75610000]        <1> 		mov esi, boomsg
  7458 000061BE 66BA6400            <1> 		mov dx, 100
  7459 000061C2 66B94001            <1> 		mov cx, 320
  7460 000061C6 BB00000000          <1> 		mov ebx, 0
  7461 000061CB 66B80000            <1> 		mov ax, 0
  7462 000061CF E90FF8FFFF          <1> 		jmp showstring
  7463                              <1> 
  7464                              <1> 	pacmannomnom:
  7465 000061D4 BE[93610000]        <1> 		mov esi, pacnom
  7466 000061D9 66BA8200            <1> 		mov dx, 130
  7467 000061DD 66B93C00            <1> 		mov cx, 60
  7468 000061E1 BB00000000          <1> 		mov ebx, 0
  7469 000061E6 66B80000            <1> 		mov ax, 0
  7470 000061EA E9F4F7FFFF          <1> 		jmp showstring	
  7471                              <1> 	
  7472                              <1> 	noie:
  7473 000061EF BE[83620000]        <1> 		mov esi, termwindow
  7474 000061F4 66BA0000            <1> 		mov dx, 0
  7475 000061F8 66B90000            <1> 		mov cx, 0
  7476 000061FC BB[802F0000]        <1> 		mov ebx, os
  7477                              <1> ;;		mov ebx, internettest
  7478 00006201 891D[40040000]      <1> 		mov [user2codepoint], ebx
  7479 00006207 66B80000            <1> 		mov ax, 0
  7480 0000620B E835F8FFFF          <1> 		call showwindow
  7481                              <1> ;;		jmp internettest
  7482 00006210 E96BCDFFFF          <1> 		jmp os
  7483 00006215 C3                  <1> 		ret
  7484                              <1> 
  7485                              <1> 	gotomenuboot:
  7486 00006216 BE[83620000]        <1> 		mov esi, termwindow
  7487 0000621B 66BA0000            <1> 		mov dx, 0
  7488 0000621F 66B90000            <1> 		mov cx, 0
  7489 00006223 BB[802F0000]        <1> 		mov ebx, os
  7490 00006228 891D[40040000]      <1> 		mov [user2codepoint], ebx
  7491 0000622E 66B80000            <1> 		mov ax, 0
  7492 00006232 E80EF8FFFF          <1> 		call showwindow
  7493 00006237 E944CDFFFF          <1> 		jmp os
  7494 0000623C C3                  <1> 		ret
  7495                              <1> 
  7496                              <1> 	winblows:
  7497 0000623D BE[A2610000]        <1> 		mov esi, winmsg
  7498 00006242 66BA0000            <1> 		mov dx, 0
  7499 00006246 668B0D[845E0000]    <1> 		mov cx, [resolutiony]
  7500 0000624D 6681E92000          <1> 		sub cx, 32
  7501 00006252 BB00000000          <1> 		mov ebx, 0
  7502 00006257 B400                <1> 		mov ah, 0
  7503 00006259 B011                <1> 		mov al, 00010001b
  7504 0000625B E883F7FFFF          <1> 		call showstring
  7505 00006260 BE[6C610000]        <1> 		mov esi, gotomenu
  7506 00006265 668B0D[845E0000]    <1> 		mov cx, [resolutiony]
  7507 0000626C 6681E93000          <1> 		sub cx, 48
  7508 00006271 66BA0000            <1> 		mov dx, 0
  7509 00006275 B400                <1> 		mov ah, 0
  7510 00006277 B010                <1> 		mov al, 00010000b
  7511 00006279 BB[16620000]        <1> 		mov ebx, gotomenuboot
  7512 0000627E E960F7FFFF          <1> 		jmp showstring
  7513                              <1> 
  7514 00006283 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  7515 00006287 5465726D696E616C00  <1> 	termmsg:	db "Terminal",0	;;window title
  7516                              <1> 	
  7517 00006287 <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  7518 00006287 <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  7519 00006287 <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  7520 00006287 <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  7521 00006287 <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  7522                                      ;%include 'source/network.asm'
  7523                                  	%include 'source/rtl8139.asm'
  7524                              <1> ;;rtl8139.asm
  7525                              <1> initcard:	;;should find card, get mac, and initialize card
  7526 0000651A B800000000          <1> 	mov eax, 0
  7527 0000651F A2[54680000]        <1> 	mov [pcifunction], al
  7528 00006524 A2[52680000]        <1> 	mov [pcibus], al
  7529 00006529 A2[53680000]        <1> 	mov [pcidevice], al
  7530 0000652E B002                <1> 	mov al, 0x02 ;;type code
  7531 00006530 A2[D7680000]        <1> 	mov [pcitype], al
  7532 00006535 E81D030000          <1> 	call getpciport
  7533                              <1> initnic:		;;;;Here i tried the rtl8139 interface, fuck it
  7534 0000653A 8915[29670000]      <1> 	mov [basenicaddr], edx
  7535 00006540 89D1                <1> 	mov ecx, edx
  7536 00006542 C605[A3350000]03    <1> 	mov byte [firsthexshown], 3
  7537 00006549 E86AD0FFFF          <1> 	call showhex	;;for debugging, please remove
  7538 0000654E BE[1F350000]        <1> 	mov esi, rbuffstart
  7539 00006553 B900200000          <1> 	mov ecx, 8192
  7540 00006558 B800000000          <1> 	mov eax, 0
  7541                              <1> clearrbuff:		;;clear receive buffer which starts at rbuffstart
  7542 0000655D 8806                <1> 	mov [esi], al
  7543 0000655F 46                  <1> 	inc esi
  7544 00006560 6649                <1> 	dec cx
  7545 00006562 6681F90000          <1> 	cmp cx, 0
  7546 00006567 75F4                <1> 	jne clearrbuff
  7547                              <1> findmac:
  7548 00006569 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7549 0000656F BF[31670000]        <1> 	mov edi, sysmac
  7550 00006574 B906000000          <1> 	mov ecx, 6
  7551                              <1> macputloop:
  7552 00006579 EC                  <1> 	in al, dx
  7553 0000657A 8807                <1> 	mov [edi], al
  7554 0000657C 47                  <1> 	inc edi
  7555 0000657D 42                  <1> 	inc edx
  7556 0000657E 49                  <1> 	dec ecx
  7557 0000657F 75F8                <1> 	jnz macputloop
  7558 00006581 B9[31670000]        <1> 	mov ecx, sysmac
  7559 00006586 E837010000          <1> 	call showmac
  7560                              <1> resetnic:
  7561 0000658B 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7562 00006591 81C252000000        <1> 	add edx, 0x52
  7563 00006597 B000                <1> 	mov al, 0
  7564 00006599 EE                  <1> 	out dx, al	;;WAKE UP!!!!
  7565 0000659A 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7566 000065A0 81C237000000        <1> 	add edx, 0x37
  7567 000065A6 B010                <1> 	mov al, 0x10
  7568 000065A8 EE                  <1> 	out dx, al	;;Reset
  7569                              <1> resetnicwait:
  7570 000065A9 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7571 000065AF 81C237000000        <1> 	add edx, 0x37
  7572 000065B5 EC                  <1> 	in al, dx
  7573 000065B6 2410                <1> 	and al, 0x10
  7574 000065B8 3C10                <1> 	cmp al, 0x10
  7575 000065BA 0F84E9FFFFFF        <1> 	je near resetnicwait
  7576 000065C0 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7577 000065C6 81C230000000        <1> 	add edx, 0x30
  7578 000065CC B8[1F350000]        <1> 	mov eax, rbuffstart
  7579 000065D1 EF                  <1> 	out dx, eax	;;give nic receive buffer location
  7580 000065D2 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7581 000065D8 81C23C000000        <1> 	add edx, 0x3C
  7582 000065DE 66B80500            <1> 	mov ax, 0x0005
  7583 000065E2 66EF                <1> 	out dx, ax	;;set TOK and ROK
  7584 000065E4 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7585 000065EA 81C244000000        <1> 	add edx, 0x44
  7586 000065F0 B80F000000          <1> 	mov eax, 0xf
  7587 000065F5 EF                  <1> 	out dx, eax	;;recieve packets from all matches
  7588 000065F6 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7589 000065FC 81C237000000        <1> 	add edx, 0x37
  7590 00006602 B00C                <1> 	mov al, 0x0C
  7591 00006604 EE                  <1> 	out dx, al	;;use transmit and receive
  7592 00006605 C605[12670000]01    <1> 	mov byte [nicconfig], 1
  7593 0000660C C3                  <1> 	ret
  7594                              <1> 	
  7595                              <1> sendframe:	;;padded frame with beginning in edi and end in esi
  7596 0000660D 56                  <1> 	push esi
  7597 0000660E 57                  <1> 	push edi
  7598                              <1> nic2:		;;here come the low level drivers :(
  7599                              <1> 			;;frame begins at esi, ends at edi 			;;0x0200 is the class code for ethernet cards
  7600 0000660F 803D[12670000]01    <1> 	cmp byte [nicconfig], 1
  7601 00006616 7405                <1> 	je sendcachedata
  7602 00006618 E8FDFEFFFF          <1> 	call initcard
  7603                              <1> sendcachedata:
  7604 0000661D 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7605 00006623 81C210000000        <1> 	add edx, 0x10
  7606 00006629 ED                  <1> 	in eax, dx
  7607 0000662A 89C1                <1> 	mov ecx, eax
  7608 0000662C E887CFFFFF          <1> 	call showhex
  7609 00006631 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7610 00006637 81C213000000        <1> 	add edx, 0x13
  7611 0000663D ED                  <1> 	in eax, dx
  7612 0000663E 89C1                <1> 	mov ecx, eax
  7613 00006640 E873CFFFFF          <1> 	call showhex
  7614 00006645 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7615 0000664B 81C223000000        <1> 	add edx, 0x23	;;23 or 20?
  7616 00006651 5F                  <1> 	pop edi
  7617 00006652 89F8                <1> 	mov eax, edi
  7618 00006654 EF                  <1> 	out dx, eax	;;here's Johnny!
  7619 00006655 5E                  <1> 	pop esi
  7620 00006656 29FE                <1> 	sub esi, edi
  7621 00006658 89F0                <1> 	mov eax, esi
  7622 0000665A 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7623 00006660 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  7624 00006666 EF                  <1> 	out dx, eax
  7625                              <1> checknicstatus1:
  7626 00006667 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7627 0000666D 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  7628 00006673 ED                  <1> 	in eax, dx
  7629 00006674 2500200000          <1> 	and eax, 0x2000
  7630 00006679 3D00200000          <1> 	cmp eax, 0x2000
  7631 0000667E 75E7                <1> 	jne checknicstatus1
  7632                              <1> checknicstatus:
  7633 00006680 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7634 00006686 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  7635 0000668C ED                  <1> 	in eax, dx
  7636 0000668D 2500800000          <1> 	and eax, 0x8000
  7637 00006692 3D00800000          <1> 	cmp eax, 0x8000
  7638 00006697 75E7                <1> 	jne checknicstatus
  7639 00006699 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7640 0000669F 81C210000000        <1> 	add edx, 0x10
  7641 000066A5 ED                  <1> 	in eax, dx
  7642 000066A6 89C1                <1> 	mov ecx, eax
  7643 000066A8 E80BCFFFFF          <1> 	call showhex
  7644 000066AD 8B15[29670000]      <1> 	mov edx, [basenicaddr]
  7645 000066B3 81C213000000        <1> 	add edx, 0x13
  7646 000066B9 ED                  <1> 	in eax, dx
  7647 000066BA 89C1                <1> 	mov ecx, eax
  7648 000066BC E8F7CEFFFF          <1> 	call showhex
  7649 000066C1 C3                  <1> 	ret
  7650                              <1> 	
  7651                              <1> showmac:	;;mac begins in [ecx]
  7652 000066C2 BE[FA660000]        <1> 	mov esi, macprint
  7653 000066C7 89CF                <1> 	mov edi, ecx
  7654 000066C9 81C106000000        <1> 	add ecx, 6
  7655                              <1> showmacloop:
  7656 000066CF 8A07                <1> 	mov al, [edi]
  7657 000066D1 8A27                <1> 	mov ah, [edi]
  7658 000066D3 C0E804              <1> 	shr al, 4
  7659 000066D6 C0E404              <1> 	shl ah, 4
  7660 000066D9 C0EC04              <1> 	shr ah, 4
  7661 000066DC 0430                <1> 	add al, 48
  7662 000066DE 80C430              <1> 	add ah, 48
  7663 000066E1 668906              <1> 	mov [esi], ax
  7664 000066E4 81C603000000        <1> 	add esi, 3
  7665 000066EA 47                  <1> 	inc edi
  7666 000066EB 39CF                <1> 	cmp edi, ecx
  7667 000066ED 72E0                <1> 	jb showmacloop
  7668 000066EF BE[FA660000]        <1> 	mov esi, macprint
  7669 000066F4 E83BC3FFFF          <1> 	call print
  7670 000066F9 C3                  <1> 	ret
  7671                              <1> 	
  7672 000066FA 30302D30302D30302D- <1> macprint db "00-00-00-00-00-00  ",0
  7673 00006703 30302D30302D303020- <1>
  7674 0000670C 2000                <1>
  7675 0000670E 00000000            <1> ethernetend dw 0,0
  7676 00006712 00                  <1> nicconfig db 0
  7677 00006713 4E4F204E494300      <1> nonicfoundmsg db "NO NIC",0
  7678 0000671A 496E6974696174696E- <1> initnicmsg	db "Initiating NIC",0
  7679 00006723 67204E494300        <1>
  7680 00006729 00000000            <1> basenicaddr	db 0,0,0,0
  7681 0000672D C0A80005            <1> sysip db 192,168,0,5
  7682 00006731 000000000000        <1> sysmac	db 0,0,0,0,0,0		;;my mac address
  7683                                  	%include 'source/arp.asm'
  7684                              <1> ;;let's try something else
  7685                              <1> ;;arp.asm
  7686                              <1> arpinit:
  7687 00006737 BE[EE670000]        <1> 	mov esi, arptable
  7688 0000673C BF[31670000]        <1> 	mov edi, sysmac
  7689 00006741 BB[2D670000]        <1> 	mov ebx, sysip
  7690 00006746 8B0F                <1> 	mov ecx, [edi]
  7691 00006748 890E                <1> 	mov [esi], ecx
  7692 0000674A 668B4F04            <1> 	mov cx, [edi + 4]
  7693 0000674E 894E04              <1> 	mov [esi + 4], ecx
  7694 00006751 8B0B                <1> 	mov ecx, [ebx]
  7695 00006753 894E06              <1> 	mov [esi + 6], ecx
  7696 00006756 C605[ED670000]01    <1> 	mov byte [arpconfig], 1
  7697 0000675D C3                  <1> 	ret
  7698                              <1> arptest:
  7699 0000675E 803D[ED670000]01    <1> 	cmp byte [arpconfig], 1
  7700 00006765 7405                <1> 	je arptest2
  7701 00006767 E8CBFFFFFF          <1> 	call arpinit
  7702                              <1> arptest2:	;;try to reach 192.168.0.1
  7703 0000676C 8B0D[31670000]      <1> 	mov ecx, [sysmac]
  7704 00006772 668B1D[35670000]    <1> 	mov bx, [sysmac + 4]
  7705 00006779 890D[B3670000]      <1> 	mov [sourcemac], ecx
  7706 0000677F 66891D[B7670000]    <1> 	mov [sourcemac + 4],bx
  7707 00006786 890D[C3670000]      <1> 	mov [arpsenderinfo], ecx
  7708 0000678C 66891D[C7670000]    <1> 	mov [arpsenderinfo + 4], bx
  7709 00006793 BF[AD670000]        <1> 	mov edi, frame
  7710 00006798 BE[ED670000]        <1> 	mov esi, framend
  7711 0000679D E86BFEFFFF          <1> 	call sendframe
  7712 000067A2 BE[73730000]        <1> 	mov esi, line
  7713 000067A7 E888C2FFFF          <1> 	call print
  7714 000067AC C3                  <1> 	ret
  7715                              <1> 	
  7716                              <1> ;;example frame
  7717                              <1> frame:
  7718 000067AD FFFFFFFFFFFF        <1> destinationmac:	db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  7719 000067B3 000000000000        <1> sourcemac:		db 0,0,0,0,0,0
  7720 000067B9 0608                <1> ethertype:		dw 0x0806			;;arp
  7721                              <1> 	;;example packet
  7722 000067BB 0100                <1> 	arppacket: 		dw 1				;;ethernet is 1
  7723 000067BD 0008                <1> 	arpprotocol: 	dw 0x0800			;;ip is 0x800
  7724 000067BF 0604                <1> 					db 6,4				;;length of mac, length of ip
  7725 000067C1 0100                <1> 	arpoperation: 	dw 1				;;one for arp request
  7726 000067C3 000000000000        <1> 	arpsenderinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;mac
  7727 000067C9 C0A80005            <1> 					db 192,168,0,5			;;ip
  7728 000067CD 000000000000        <1> 	arptargetinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;ignored in requests
  7729 000067D3 C0A80001            <1> 					db 192,168,0,1			;;ip
  7730 000067D7 00<rept>            <1> padding:		times (64-($-frame)) db 0
  7731                              <1> framend:
  7732                              <1> 
  7733 000067ED 00                  <1> arpconfig db 0
  7734                              <1> arptable:	;;mac,ip
  7735 000067EE 000000000000000000- <1> 	times 10 db 0,0,0,0,0,0,0,0,0,0
  7736 000067F7 00<rept>            <1>
  7737                              <1> arptableend:
  7738                                  	%include 'source/pci.asm'
  7739 00006852 00                  <1> pcibus		db 0
  7740 00006853 00                  <1> pcidevice	db 0
  7741 00006854 00                  <1> pcifunction	db 0
  7742 00006855 00                  <1> pciregister	db 0
  7743 00006856 00                  <1> pcireqtype db 0
  7744                              <1> 
  7745                              <1> getpciport:
  7746 00006857 B001                <1> 	mov al, 1
  7747 00006859 A2[56680000]        <1> 	mov [pcireqtype], al
  7748 0000685E E91E000000          <1> 	jmp searchpci
  7749                              <1> pcidump:
  7750 00006863 B800000000          <1> 	mov eax, 0
  7751 00006868 A2[54680000]        <1> 	mov [pcifunction], al
  7752 0000686D A2[52680000]        <1> 	mov [pcibus], al
  7753 00006872 A2[53680000]        <1> 	mov [pcidevice], al
  7754 00006877 A2[56680000]        <1> 	mov [pcireqtype], al
  7755 0000687C E900000000          <1> 	jmp searchpci
  7756                              <1> searchpci:		;;return in ebx, start X in pciX
  7757 00006881 B000                <1> 	mov al, 0
  7758 00006883 A2[55680000]        <1> 	mov [pciregister], al
  7759 00006888 E84F010000          <1> 	call getpciaddr
  7760 0000688D BAF80C0000          <1> 	mov edx, 0xCF8
  7761 00006892 EF                  <1> 	out dx, eax	;;request pci config
  7762 00006893 BAFC0C0000          <1> 	mov edx, 0xCFC
  7763 00006898 ED                  <1> 	in eax, dx 	;;read in pci config
  7764 00006899 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  7765 0000689E 0F8237000000        <1> 	jb near checkpcidevice
  7766                              <1> searchpciret:
  7767                              <1> nextpcidevice:
  7768 000068A4 B000                <1> 	mov al, 0
  7769 000068A6 A2[54680000]        <1> 	mov [pcifunction], al
  7770 000068AB A0[53680000]        <1> 	mov al, [pcidevice]
  7771 000068B0 3C1F                <1> 	cmp al, 11111b
  7772 000068B2 0F83B8000000        <1> 	jae near nextpcibus
  7773 000068B8 FEC0                <1> 	inc al
  7774 000068BA A2[53680000]        <1> 	mov [pcidevice], al
  7775 000068BF EBC0                <1> 	jmp searchpci
  7776 000068C1 A0[54680000]        <1> 	mov al, [pcifunction]
  7777 000068C6 3C07                <1> 	cmp al, 111b
  7778 000068C8 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  7779 000068CE FEC0                <1> 	inc al
  7780 000068D0 A2[54680000]        <1> 	mov [pcifunction], al
  7781 000068D5 EBAA                <1> 	jmp searchpci
  7782 000068D7 00000000            <1> pcitype: db 0,0,0,0
  7783                              <1> checkpcidevice:
  7784 000068DB B000                <1> 	mov al, 0
  7785 000068DD 3805[56680000]      <1> 	cmp [pcireqtype], al
  7786 000068E3 0F842B000000        <1> 	je near dumppcidevice
  7787 000068E9 B008                <1> 	mov al, 0x08
  7788 000068EB A2[55680000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  7789 000068F0 E8E7000000          <1> 	call getpciaddr
  7790 000068F5 BAF80C0000          <1> 	mov edx, 0xCF8
  7791 000068FA EF                  <1> 	out dx, eax
  7792 000068FB BAFC0C0000          <1> 	mov edx, 0xCFC
  7793 00006900 ED                  <1> 	in eax, dx
  7794 00006901 C1C008              <1> 	rol eax, 8
  7795 00006904 8A1D[D7680000]      <1> 	mov bl, [pcitype]
  7796 0000690A 38D8                <1> 	cmp al, bl
  7797 0000690C 0F8480000000        <1> 	je near foundpciaddr
  7798 00006912 EB90                <1> 	jmp searchpciret
  7799                              <1> dumppcidevice:
  7800 00006914 B000                <1> 	mov al, 0
  7801 00006916 A2[55680000]        <1> 	mov [pciregister], al
  7802 0000691B E8BC000000          <1> 	call getpciaddr
  7803 00006920 89C1                <1> 	mov ecx, eax
  7804 00006922 C605[A3350000]00    <1> 	mov byte [firsthexshown],0
  7805 00006929 E88ACCFFFF          <1> 	call showhex
  7806                              <1> dumppcidevicelp:
  7807 0000692E A2[55680000]        <1> 	mov [pciregister], al
  7808 00006933 E8A4000000          <1> 	call getpciaddr
  7809 00006938 BAF80C0000          <1> 	mov edx, 0xCF8
  7810 0000693D EF                  <1> 	out dx, eax
  7811 0000693E BAFC0C0000          <1> 	mov edx, 0xCFC
  7812 00006943 ED                  <1> 	in eax, dx
  7813 00006944 89C1                <1> 	mov ecx, eax
  7814 00006946 A0[55680000]        <1> 	mov al, [pciregister]
  7815 0000694B 0404                <1> 	add al, 4
  7816 0000694D 3C1A                <1> 	cmp al, 0x1A
  7817 0000694F 730E                <1> 	jae dumppcidn
  7818 00006951 C605[A3350000]00    <1> 	mov byte [firsthexshown],0
  7819 00006958 E85BCCFFFF          <1> 	call showhex
  7820 0000695D EBCF                <1> 	jmp dumppcidevicelp
  7821                              <1> dumppcidn:
  7822 0000695F C605[A3350000]00    <1> 	mov byte [firsthexshown],0
  7823 00006966 E84DCCFFFF          <1> 	call showhex
  7824 0000696B E934FFFFFF          <1> 	jmp searchpciret
  7825                              <1> nextpcibus:
  7826 00006970 B000                <1> 	mov al, 0
  7827 00006972 A2[53680000]        <1> 	mov [pcidevice], al
  7828 00006977 A0[52680000]        <1> 	mov al, [pcibus]
  7829 0000697C 3C7F                <1> 	cmp al, 1111111b
  7830 0000697E 730C                <1> 	jae donesearchpci
  7831 00006980 FEC0                <1> 	inc al
  7832 00006982 A2[52680000]        <1> 	mov [pcibus], al
  7833 00006987 E9F5FEFFFF          <1> 	jmp searchpci
  7834                              <1> donesearchpci:
  7835 0000698C BA00000000          <1> 	mov edx, 0
  7836 00006991 C3                  <1> 	ret
  7837                              <1> foundpciaddr:
  7838 00006992 B010                <1> 	mov al, 0x10
  7839 00006994 A2[55680000]        <1> 	mov [pciregister], al
  7840                              <1> findpciioaddr:
  7841 00006999 E83E000000          <1> 	call getpciaddr
  7842 0000699E BAF80C0000          <1> 	mov edx, 0xCF8
  7843 000069A3 EF                  <1> 	out dx, eax
  7844 000069A4 BAFC0C0000          <1> 	mov edx, 0xCFC
  7845 000069A9 ED                  <1> 	in eax, dx
  7846 000069AA 89C3                <1> 	mov ebx, eax
  7847 000069AC 81E301000000        <1> 	and ebx, 1
  7848 000069B2 81FB00000000        <1> 	cmp ebx, 0
  7849 000069B8 0F8408000000        <1> 	je near notpciioaddr
  7850 000069BE 2D01000000          <1> 	sub eax, 1
  7851 000069C3 89C2                <1> 	mov edx, eax
  7852 000069C5 C3                  <1> 	ret
  7853                              <1> notpciioaddr:
  7854 000069C6 A0[55680000]        <1> 	mov al, [pciregister]
  7855 000069CB 0404                <1> 	add al, 4
  7856 000069CD 3C28                <1> 	cmp al, 0x28
  7857 000069CF 0F87CFFEFFFF        <1> 	ja near searchpciret
  7858 000069D5 A2[55680000]        <1> 	mov [pciregister], al
  7859 000069DA EBBD                <1> 	jmp findpciioaddr
  7860                              <1> getpciaddr:		;;puts it in eax and ebx
  7861 000069DC B800000000          <1> 			mov eax, 0
  7862 000069E1 BB00000080          <1> 			mov ebx, 0x80000000
  7863 000069E6 A0[52680000]        <1> 			mov al, [pcibus]
  7864 000069EB C1E010              <1> 			shl eax, 16
  7865 000069EE 01C3                <1> 			add ebx, eax
  7866 000069F0 B800000000          <1> 			mov eax, 0
  7867 000069F5 A0[53680000]        <1> 			mov al, [pcidevice]
  7868 000069FA C1E00B              <1> 			shl eax, 11
  7869 000069FD 01C3                <1> 			add ebx, eax
  7870 000069FF B800000000          <1> 			mov eax, 0
  7871 00006A04 A0[54680000]        <1> 			mov al, [pcifunction]
  7872 00006A09 C1E008              <1> 			shl eax, 8
  7873 00006A0C 01C3                <1> 			add ebx, eax
  7874 00006A0E B800000000          <1> 			mov eax, 0
  7875 00006A13 A0[55680000]        <1> 			mov al, [pciregister]
  7876 00006A18 01C3                <1> 			add ebx, eax
  7877 00006A1A 89D8                <1> 			mov eax, ebx
  7878 00006A1C C3                  <1> 			ret
  7879                              <1> 			
  7880                                  	;%include 'source/process.asm'
  7881                                      %include 'source/disk.asm'
  7882                              <1> ;;disk.asm - new - using lba
  7883                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  7884 00006A1D 803F00              <1> 	cmp byte [edi], 0
  7885 00006A20 0F8444000000        <1> 	je near nofileload
  7886 00006A26 89FA                <1> 	mov edx, edi
  7887 00006A28 BB[7A720000]        <1> 	mov ebx, diskfileindex
  7888                              <1> nextnamechar:
  7889 00006A2D 8A07                <1> 	mov al, [edi]
  7890 00006A2F 8A23                <1> 	mov ah, [ebx]
  7891 00006A31 47                  <1> 	inc edi
  7892 00006A32 43                  <1> 	inc ebx
  7893 00006A33 88C1                <1> 	mov cl, al
  7894 00006A35 08E1                <1> 	or cl, ah
  7895 00006A37 80F900              <1> 	cmp cl, 0
  7896 00006A3A 744E                <1> 	je equalfilenames
  7897 00006A3C 80F920              <1> 	cmp cl, ' '
  7898 00006A3F 7449                <1> 	je equalfilenames
  7899 00006A41 3C2A                <1> 	cmp al, '*'
  7900 00006A43 742B                <1> 	je equalfilenames2
  7901 00006A45 80FC00              <1> 	cmp ah, 0
  7902 00006A48 7410                <1> 	je nextfilename
  7903 00006A4A 3C00                <1> 	cmp al, 0
  7904 00006A4C 740C                <1> 	je nextfilename
  7905 00006A4E 38E0                <1> 	cmp al, ah
  7906 00006A50 74DB                <1> 	je nextnamechar
  7907                              <1> getebxzero:
  7908 00006A52 8A23                <1> 	mov ah, [ebx]
  7909 00006A54 43                  <1> 	inc ebx
  7910 00006A55 80FC00              <1> 	cmp ah, 0
  7911 00006A58 75F8                <1> 	jne getebxzero
  7912                              <1> nextfilename:
  7913 00006A5A 81C308000000        <1> 	add ebx, 8		;;next descriptor
  7914 00006A60 89D7                <1> 	mov edi, edx
  7915 00006A62 81FB[35730000]      <1> 	cmp ebx, enddiskfileindex
  7916 00006A68 72C3                <1> 	jb nextnamechar
  7917                              <1> nofileload:
  7918 00006A6A BA94010000          <1> 	mov edx, 404	;;indicate not found error
  7919 00006A6F C3                  <1> 	ret
  7920                              <1> equalfilenames2:
  7921 00006A70 81EB02000000        <1> 	sub ebx, 2
  7922                              <1> eqfilefind:
  7923 00006A76 43                  <1> 	inc ebx
  7924 00006A77 81FB[35730000]      <1> 	cmp ebx, enddiskfileindex
  7925 00006A7D 0F83E7FFFFFF        <1> 	jae near nofileload
  7926 00006A83 8A03                <1> 	mov al, [ebx]
  7927 00006A85 3C00                <1> 	cmp al, 0
  7928 00006A87 75ED                <1> 	jne eqfilefind
  7929 00006A89 43                  <1> 	inc ebx
  7930                              <1> equalfilenames:
  7931 00006A8A 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  7932 00006A8D 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  7933 00006A8F 031D[88010000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  7934 00006A95 B900000000          <1> 	mov ecx, 0
  7935 00006A9A 88C1                <1> 	mov cl, al			;;get excess number of sectors
  7936 00006A9C D0E1                <1> 	shl cl, 1
  7937 00006A9E D0E9                <1> 	shr cl, 1			;;cut off at 128
  7938 00006AA0 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  7939 00006AA2 B500                <1> 	mov ch, 0			;;drive 0
  7940 00006AA4 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  7941                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  7942 00006AA7 A3[E56A0000]        <1> 	mov [filetracks], eax
  7943 00006AAC 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  7944 00006AAE 89DA                <1> 	mov edx, ebx
  7945 00006AB0 80F900              <1> 	cmp cl, 0
  7946 00006AB3 7405                <1> 	je copytracksforfile
  7947 00006AB5 E837000000          <1> 	call diskr		;;take care of excess sectors
  7948                              <1> copytracksforfile:
  7949 00006ABA A1[E56A0000]        <1> 	mov eax, [filetracks]
  7950 00006ABF 3D00000000          <1> 	cmp eax, 0
  7951 00006AC4 7419                <1> 	je donecopyfile
  7952 00006AC6 48                  <1> 	dec eax
  7953 00006AC7 A3[E56A0000]        <1> 	mov [filetracks], eax
  7954 00006ACC 89D3                <1> 	mov ebx, edx	;;get end lba
  7955 00006ACE B180                <1> 	mov cl, 0x80
  7956 00006AD0 8A2D[87010000]      <1> 	mov ch, [DriveNumber]
  7957 00006AD6 89FE                <1> 	mov esi, edi	;;reset buffer
  7958 00006AD8 E814000000          <1> 	call diskr
  7959 00006ADD EBDB                <1> 	jmp copytracksforfile
  7960                              <1> donecopyfile:
  7961 00006ADF BA00000000          <1> 	mov edx, 0	;;no error
  7962 00006AE4 C3                  <1> 	ret
  7963                              <1> 	
  7964 00006AE5 00000000            <1> filetracks dd 0
  7965 00006AE9 00                  <1> lbad1 db 0
  7966 00006AEA 00                  <1> lbad2 db 0
  7967 00006AEB 00                  <1> lbad3 db 0
  7968 00006AEC 00                  <1> lbad4 db 0
  7969 00006AED 00                  <1> lbad5 db 0
  7970 00006AEE 00                  <1> lbad6 db 0
  7971 00006AEF 6400                <1> segments dw 100
  7972                              <1> 
  7973                              <1> diskr:		;;sector count in cl, disk number in ch, 48 bit address with last 32 bits in ebx, buffer in esi, puts end buffer in edi and end lba in edx
  7974                              <1> 
  7975 00006AF1 8935[0A6C0000]      <1> 	mov [bufferstartesi], esi
  7976 00006AF7 891D[066C0000]      <1> 	mov [lbaadstartebx], ebx
  7977 00006AFD BA00000000          <1> 	mov edx, 0
  7978 00006B02 88CA                <1> 	mov dl, cl
  7979 00006B04 01DA                <1> 	add edx, ebx
  7980 00006B06 8915[026C0000]      <1> 	mov [lbaadend], edx
  7981 00006B0C 881D[E96A0000]      <1> 	mov [lbad1], bl
  7982 00006B12 883D[EA6A0000]      <1> 	mov [lbad2], bh
  7983 00006B18 C1C310              <1> 	rol ebx, 16
  7984 00006B1B 881D[EB6A0000]      <1> 	mov [lbad3], bl
  7985 00006B21 883D[EC6A0000]      <1> 	mov [lbad4], bh
  7986 00006B27 C1CB10              <1> 	ror ebx, 16
  7987                              <1> 
  7988 00006B2A B840000000          <1> 	mov eax, 0x40
  7989 00006B2F 66BAF601            <1> 	mov dx, 0x1F6
  7990 00006B33 EE                  <1> 	out dx, al	;;send magic bits-add drive indicator later
  7991                              <1> 	
  7992 00006B34 B000                <1> 	mov al, 0
  7993 00006B36 66BAF201            <1> 	mov dx, 0x1F2
  7994 00006B3A EE                  <1> 	out dx, al	;;16 bit sector count-last byte now 0
  7995                              <1> 	
  7996 00006B3B A0[EC6A0000]        <1> 	mov al, [lbad4]
  7997 00006B40 6642                <1> 	inc dx
  7998 00006B42 EE                  <1> 	out dx, al
  7999                              <1> 	
  8000 00006B43 A0[ED6A0000]        <1> 	mov al, [lbad5]
  8001 00006B48 6642                <1> 	inc dx
  8002 00006B4A EE                  <1> 	out dx, al
  8003                              <1> 	
  8004 00006B4B A0[EE6A0000]        <1> 	mov al, [lbad6]
  8005 00006B50 6642                <1> 	inc dx
  8006 00006B52 EE                  <1> 	out dx, al
  8007                              <1> 	
  8008 00006B53 88C8                <1> 	mov al, cl
  8009 00006B55 66BAF201            <1> 	mov dx, 0x1F2
  8010 00006B59 EE                  <1> 	out dx, al	;;low byte of 16 bit sector count
  8011                              <1> 	
  8012 00006B5A A0[E96A0000]        <1> 	mov al, [lbad1]
  8013 00006B5F 6642                <1> 	inc dx
  8014 00006B61 EE                  <1> 	out dx, al
  8015                              <1> 	
  8016 00006B62 A0[EA6A0000]        <1> 	mov al, [lbad2]
  8017 00006B67 6642                <1> 	inc dx
  8018 00006B69 EE                  <1> 	out dx, al
  8019                              <1> 	
  8020 00006B6A A0[EB6A0000]        <1> 	mov al, [lbad3]
  8021 00006B6F 6642                <1> 	inc dx
  8022 00006B71 EE                  <1> 	out dx, al
  8023                              <1> 	
  8024 00006B72 B024                <1> 	mov al, 0x24
  8025 00006B74 66BAF701            <1> 	mov dx, 0x1F7
  8026 00006B78 EE                  <1> 	out dx, al	;;READ!!!
  8027 00006B79 66BBFFFF            <1> 	mov bx, 0xFFFF		;;try 65536 times before forcing
  8028                              <1> diskrwait:
  8029 00006B7D 66BAF701            <1> 	mov dx, 0x1F7
  8030 00006B81 EC                  <1> 	in al, dx
  8031 00006B82 2408                <1> 	and al, 0x08
  8032 00006B84 664B                <1> 	dec bx
  8033 00006B86 6681FB0000          <1> 	cmp bx, 0
  8034 00006B8B 7404                <1> 	je nomorediskwait
  8035 00006B8D 3C08                <1> 	cmp al, 0x08
  8036 00006B8F 75EC                <1> 	jne diskrwait
  8037                              <1> nomorediskwait:
  8038 00006B91 66BB0001            <1> 	mov bx, 256
  8039                              <1> diskdataread:
  8040 00006B95 66BAF001            <1> 	mov dx, 0x1F0
  8041 00006B99 66ED                <1> 	in ax, dx
  8042 00006B9B 668906              <1> 	mov [esi], ax
  8043 00006B9E 81C602000000        <1> 	add esi, 2
  8044 00006BA4 664B                <1> 	dec bx
  8045 00006BA6 6681FB0000          <1> 	cmp bx, 0
  8046 00006BAB 75E8                <1> 	jne diskdataread		;;read a sector
  8047 00006BAD FEC9                <1> 	dec cl
  8048 00006BAF 80F900              <1> 	cmp cl, 0
  8049 00006BB2 75C9                <1> 	jne diskrwait
  8050 00006BB4 89F7                <1> 	mov edi, esi
  8051 00006BB6 8B15[026C0000]      <1> 	mov edx, [lbaadend]
  8052 00006BBC 8B35[0A6C0000]      <1> 	mov esi, [bufferstartesi]
  8053 00006BC2 8B1D[066C0000]      <1> 	mov ebx, [lbaadstartebx]
  8054 00006BC8 C3                  <1> 	ret
  8055                              <1> 	
  8056                              <1> 	
  8057                              <1> diskold: ;;28 bits
  8058 00006BC9 66B80000            <1> 	mov ax, 0
  8059 00006BCD 66BAF101            <1> 	mov dx, 0x1F1
  8060 00006BD1 EE                  <1> 	out dx, al	;;send null byte to port
  8061 00006BD2 6642                <1> 	inc dx	;;0x1F2
  8062 00006BD4 88C8                <1> 	mov al, cl	;;get sector count
  8063 00006BD6 EE                  <1> 	out dx, al	;;send sector count
  8064 00006BD7 6642                <1> 	inc dx	;;0x1F3
  8065 00006BD9 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  8066 00006BDB EE                  <1> 	out dx, al	;;send them
  8067 00006BDC 6642                <1> 	inc dx	;;0x1F4
  8068 00006BDE C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  8069 00006BE1 88D8                <1> 	mov al, bl
  8070 00006BE3 EE                  <1> 	out dx, al
  8071 00006BE4 6642                <1> 	inc dx	;;0x1F5
  8072 00006BE6 C1CB08              <1> 	ror ebx, 8	;;again
  8073 00006BE9 88D8                <1> 	mov al, bl
  8074 00006BEB EE                  <1> 	out dx, al
  8075 00006BEC 6642                <1> 	inc dx	;;0x1F6
  8076 00006BEE C1CB08              <1> 	ror ebx, 8
  8077 00006BF1 88D8                <1> 	mov al, bl
  8078 00006BF3 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  8079 00006BF5 0CE0                <1> 	or al, 0xE0			;;majic number
  8080 00006BF7 C0E504              <1> 	shl ch, 4
  8081 00006BFA 08E8                <1> 	or al, ch
  8082 00006BFC EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  8083 00006BFD 6642                <1> 	inc dx	;;0x1F7
  8084 00006BFF B020                <1> 	mov al, 0x20
  8085 00006C01 EE                  <1> 	out dx, al			;;execute read command
  8086                              <1> 	
  8087 00006C02 00000000            <1> lbaadend dd 0
  8088 00006C06 00000000            <1> lbaadstartebx dd 0
  8089 00006C0A 00000000            <1> bufferstartesi dd 0
  8090                                  	%include 'source/threads.asm'
  8091                              <1> ;;THIS IS MY FIRST ATTEMPT AT IMPLEMENTING THREADS
  8092                              <1> threadstarttest:
  8093 00006C0E E9E2040000          <1>     jmp startthreads
  8094                              <1> mainthread:
  8095 00006C13 F4                  <1> 	hlt		;;this does not work properly
  8096 00006C14 EBFD                <1> 	jmp mainthread
  8097                              <1> 	
  8098                              <1> nwcmdst:
  8099 00006C16 B0FD                <1> 	mov al, 11111101b
  8100 00006C18 E621                <1> 	out 0x21, al
  8101 00006C1A C605[576C0000]00    <1> 	mov byte [threadson], 0
  8102 00006C21 E97EC4FFFF          <1> 	jmp nwcmd
  8103                              <1> 	
  8104                              <1> modelthread:
  8105 00006C26 668B1D[78720000]    <1> 	mov bx, [currentthread]
  8106 00006C2D B001                <1> 	mov al, 1
  8107 00006C2F B409                <1> 	mov ah, 9
  8108 00006C31 B900000000          <1> 	mov ecx, 0
  8109 00006C36 6689D9              <1> 	mov cx, bx
  8110 00006C39 CD30                <1> 	int 0x30
  8111                              <1> 	
  8112 00006C3B B90000DEC0          <1> 	mov ecx, 0xC0DE0000
  8113 00006C40 6689D9              <1> 	mov cx, bx
  8114 00006C43 CD30                <1> 	int 0x30
  8115                              <1> 	
  8116 00006C45 B90000ADDE          <1> 	mov ecx, 0xDEAD0000
  8117 00006C4A 6689D9              <1> 	mov cx, bx
  8118 00006C4D CD30                <1> 	int 0x30
  8119                              <1> 	
  8120 00006C4F CD40                <1> 	int 0x40	;;skip this thread three times to ensure that all threads run
  8121 00006C51 CD40                <1> 	int 0x40
  8122 00006C53 CD40                <1> 	int 0x40
  8123                              <1> 	
  8124 00006C55 EBBF                <1> 	jmp nwcmdst
  8125                              <1> 	
  8126                              <1> 	
  8127 00006C57 00                  <1> threadson db 0
  8128 00006C58 04000000            <1> lastthread dd 4
  8129                              <1> 
  8130                              <1> thrdtst:
  8131 00006C5C [266C0000]<rept>    <1> times 256 dd modelthread	;;could go up to 2048, but that takes too long
  8132                              <1> thrdtstend:
  8133                              <1> 
  8134 0000705C 00000000            <1> 	espold dd 0
  8135                              <1> 
  8136                              <1> threadfork:
  8137 00007060 C605[576C0000]01    <1> 	mov byte [threadson], 1
  8138 00007067 60                  <1> 	pushad
  8139 00007068 66B80040            <1> 	mov ax, 0x4000	;;this is the divider for the PIT
  8140 0000706C E640                <1> 	out 0x40, al
  8141 0000706E 66C1C008            <1> 	rol ax, 8
  8142 00007072 E640                <1> 	out 0x40, al
  8143                              <1> 	
  8144 00007074 8CC8                <1> 	mov eax, cs
  8145 00007076 89C2                <1> 	mov edx, eax
  8146 00007078 8B4C2428            <1> 	mov ecx, [esp + 40]
  8147 0000707C 81C900020000        <1> 	or ecx, 0x200
  8148 00007082 89E3                <1> 	mov ebx, esp
  8149 00007084 BC[27590000]        <1> 	mov esp, stackdummy
  8150 00007089 90                  <1> 	nop
  8151                              <1> 	
  8152 0000708A 60                  <1> 	pushad
  8153 0000708B B8[136C0000]        <1> 	mov eax, mainthread
  8154 00007090 89442420            <1> 	mov [esp + 32], eax
  8155 00007094 89542424            <1> 	mov [esp + 36], edx
  8156 00007098 894C2428            <1> 	mov [esp + 40], ecx
  8157 0000709C 8925[1F350000]      <1> 	mov [threadlist], esp
  8158                              <1> 	
  8159 000070A2 891D[5C700000]      <1> 	mov [espold], ebx
  8160 000070A8 89F0                <1> 	mov eax, esi
  8161 000070AA BC[275D0000]        <1> 	mov esp, stack1
  8162 000070AF 8B1D[586C0000]      <1> 	mov ebx, [lastthread]
  8163 000070B5 C1E30A              <1> 	shl ebx, 10
  8164 000070B8 01DC                <1> 	add esp, ebx
  8165 000070BA C1EB0A              <1> 	shr ebx, 10
  8166 000070BD 90                  <1> 	nop
  8167 000070BE 60                  <1> 	pushad
  8168 000070BF 89442420            <1> 	mov [esp + 32], eax
  8169 000070C3 89542424            <1> 	mov [esp + 36], edx
  8170 000070C7 894C2428            <1> 	mov [esp + 40], ecx
  8171 000070CB 89A3[1F350000]      <1> 	mov [threadlist + ebx], esp
  8172 000070D1 8B25[5C700000]      <1> 	mov esp, [espold]
  8173 000070D7 81C304000000        <1> 	add ebx, 4
  8174 000070DD 89A3[1F350000]      <1> 	mov [threadlist + ebx], esp
  8175 000070E3 81C304000000        <1> 	add ebx, 4
  8176 000070E9 891D[586C0000]      <1> 	mov [lastthread], ebx
  8177 000070EF B020                <1> 	mov al, 0x20
  8178 000070F1 E620                <1> 	out 0x20, al
  8179 000070F3 61                  <1> 	popad
  8180 000070F4 C3                  <1> 	ret
  8181                              <1> 
  8182                              <1> startthreads:
  8183 000070F5 C605[576C0000]01    <1> 	mov byte [threadson], 1
  8184 000070FC 60                  <1> 	pushad
  8185 000070FD 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  8186 00007101 E640                <1> 	out 0x40, al
  8187 00007103 66C1C008            <1> 	rol ax, 8
  8188 00007107 E640                <1> 	out 0x40, al
  8189                              <1> 	
  8190 00007109 8CC8                <1> 	mov eax, cs
  8191 0000710B 89C2                <1> 	mov edx, eax
  8192 0000710D 8B4C2428            <1> 	mov ecx, [esp + 40]
  8193 00007111 81C900020000        <1> 	or ecx, 0x200
  8194 00007117 89E3                <1> 	mov ebx, esp
  8195 00007119 BC[27590000]        <1> 	mov esp, stackdummy
  8196 0000711E 90                  <1> 	nop
  8197                              <1> 	
  8198 0000711F 60                  <1> 	pushad
  8199 00007120 B8[136C0000]        <1> 	mov eax, mainthread
  8200 00007125 89442420            <1> 	mov [esp + 32], eax
  8201 00007129 89542424            <1> 	mov [esp + 36], edx
  8202 0000712D 894C2428            <1> 	mov [esp + 40], ecx
  8203 00007131 8925[1F350000]      <1> 	mov [threadlist], esp
  8204                              <1> 
  8205                              <1> 			;;that above setup the dummy thread which for some reason does not run
  8206                              <1> 			;;this below will setup the threads found in thrdtst
  8207                              <1> 
  8208                              <1> testthreads:
  8209 00007137 BE[5C6C0000]        <1> 	mov esi, thrdtst
  8210 0000713C BC[275D0000]        <1> 	mov esp, stack1
  8211 00007141 BF[1F350000]        <1> 	mov edi, threadlist
  8212 00007146 81C704000000        <1> 	add edi, 4
  8213                              <1> nxtthreadld:
  8214 0000714C 60                  <1> 	pushad
  8215 0000714D 8B06                <1> 	mov eax, [esi]
  8216 0000714F 89442420            <1> 	mov [esp + 32], eax
  8217 00007153 89542424            <1> 	mov [esp + 36], edx
  8218 00007157 894C2428            <1> 	mov [esp + 40], ecx
  8219 0000715B 8927                <1> 	mov [edi], esp
  8220 0000715D 81C400040000        <1> 	add esp, 1024
  8221 00007163 81C604000000        <1> 	add esi, 4
  8222 00007169 81C704000000        <1> 	add edi, 4
  8223 0000716F 81FF[27550000]      <1> 	cmp edi, threadlistend
  8224 00007175 0F8322000000        <1> 	jae near nomorethreadspace
  8225 0000717B 81FC[27652000]      <1> 	cmp esp, bssend
  8226 00007181 0F8350000000        <1> 	jae near nomorestackspace
  8227 00007187 81FE[5C700000]      <1> 	cmp esi, thrdtstend
  8228 0000718D 72BD                <1> 	jb nxtthreadld
  8229 0000718F 89DC                <1> 	mov esp, ebx	
  8230                              <1> 	;mov al, 0xFE
  8231                              <1> 	;out 0x21, al
  8232 00007191 B000                <1> 	mov al, 0
  8233 00007193 E621                <1> 	out 0x21, al
  8234 00007195 B020                <1> 	mov al, 0x20
  8235 00007197 E620                <1> 	out 0x20, al
  8236 00007199 61                  <1> 	popad
  8237 0000719A FB                  <1> 	sti
  8238 0000719B EBFE                <1> 	jmp $	;;wait for the irq to hook
  8239                              <1> 	
  8240                              <1> nomorethreadspace:
  8241 0000719D BE[B3710000]        <1> 	mov esi, nmts
  8242 000071A2 E88DB8FFFF          <1> 	call print
  8243 000071A7 C605[576C0000]00    <1> 	mov byte [threadson], 0
  8244 000071AE E9F1BEFFFF          <1> 	jmp nwcmd
  8245 000071B3 74656820636F6C6F6E- <1> nmts	db "teh colonel no can haz moar treds",13,10,0
  8246 000071BC 656C206E6F2063616E- <1>
  8247 000071C5 2068617A206D6F6172- <1>
  8248 000071CE 2074726564730D0A00  <1>
  8249                              <1> 
  8250                              <1> nomorestackspace:
  8251 000071D7 BE[ED710000]        <1> 	mov esi, nmss
  8252 000071DC E853B8FFFF          <1> 	call print
  8253 000071E1 C605[576C0000]00    <1> 	mov byte [threadson], 0
  8254 000071E8 E9B7BEFFFF          <1> 	jmp nwcmd
  8255 000071ED 74656820636F6C6F6E- <1> nmss	db "teh colonel no can haz moar staqz",13,10,0
  8256 000071F6 656C206E6F2063616E- <1>
  8257 000071FF 2068617A206D6F6172- <1>
  8258 00007208 20737461717A0D0A00  <1>
  8259                              <1> 	
  8260                              <1> threadswitch:
  8261 00007211 FA                  <1> 	cli
  8262 00007212 60                  <1> 	pushad
  8263 00007213 BF[1F350000]        <1> 	mov edi, threadlist
  8264 00007218 B800000000          <1> 	mov eax, 0
  8265 0000721D 66A1[78720000]      <1> 	mov ax, [currentthread]
  8266 00007223 6640                <1> 	inc ax
  8267 00007225 66A3[78720000]      <1> 	mov [currentthread], ax
  8268 0000722B 6648                <1> 	dec ax
  8269 0000722D C1E002              <1> 	shl eax, 2
  8270 00007230 01C7                <1> 	add edi, eax
  8271 00007232 8927                <1> 	mov [edi], esp
  8272 00007234 81C704000000        <1> 	add edi, 4
  8273 0000723A 81FF[27550000]      <1> 	cmp edi, threadlistend
  8274 00007240 0F830D000000        <1> 	jae near nookespthread
  8275 00007246 8B07                <1> 	mov eax, [edi]
  8276 00007248 3D00000000          <1> 	cmp eax, 0
  8277 0000724D 0F851C000000        <1> 	jne near okespthread
  8278                              <1> nookespthread:
  8279 00007253 BF[1F350000]        <1> 	mov edi, threadlist
  8280 00007258 66B80000            <1> 	mov ax, 0
  8281 0000725C 66A3[78720000]      <1> 	mov [currentthread], ax
  8282 00007262 8B07                <1> 	mov eax, [edi]
  8283 00007264 3D00000000          <1> 	cmp eax, 0
  8284 00007269 0F84A7F9FFFF        <1> 	je near nwcmdst
  8285                              <1> okespthread:
  8286 0000726F 89C4                <1> 	mov esp, eax
  8287 00007271 B020                <1> 	mov al, 0x20
  8288 00007273 E620                <1> 	out 0x20, al
  8289 00007275 61                  <1> 	popad
  8290 00007276 FB                  <1> 	sti
  8291 00007277 CF                  <1> 	iretd
  8292                              <1> 	
  8293 00007278 0000                <1> currentthread dw 0
  8294                                      %include 'fileindex.asm'
  8295                              <1> diskfileindex:
  8296 0000727A 646F7300            <1> db "dos",0
  8297 0000727E 44000000            <1> dd (f0-$$)/512
  8298 00007282 01000000            <1> dd (f1-f0)/512
  8299 00007286 65787000            <1> db "exp",0
  8300 0000728A 45000000            <1> dd (f1-$$)/512
  8301 0000728E 01000000            <1> dd (f2-f1)/512
  8302 00007292 666F726B00          <1> db "fork",0
  8303 00007297 46000000            <1> dd (f2-$$)/512
  8304 0000729B 01000000            <1> dd (f3-f2)/512
  8305 0000729F 6670757465737400    <1> db "fputest",0
  8306 000072A7 47000000            <1> dd (f3-$$)/512
  8307 000072AB 01000000            <1> dd (f4-f3)/512
  8308 000072AF 6C696E757800        <1> db "linux",0
  8309 000072B5 48000000            <1> dd (f4-$$)/512
  8310 000072B9 01000000            <1> dd (f5-f4)/512
  8311 000072BD 736F6C6C65726F732E- <1> db "solleros.bmp",0
  8312 000072C6 626D7000            <1>
  8313 000072CA 49000000            <1> dd (f5-$$)/512
  8314 000072CE B0020000            <1> dd (f6-f5)/512
  8315 000072D2 736F6C6C65726F732E- <1> db "solleros.txt",0
  8316 000072DB 74787400            <1>
  8317 000072DF F9020000            <1> dd (f6-$$)/512
  8318 000072E3 01000000            <1> dd (f7-f6)/512
  8319 000072E7 736F756E6400        <1> db "sound",0
  8320 000072ED FA020000            <1> dd (f7-$$)/512
  8321 000072F1 01000000            <1> dd (f8-f7)/512
  8322 000072F5 74656C7900          <1> db "tely",0
  8323 000072FA FB020000            <1> dd (f8-$$)/512
  8324 000072FE 01000000            <1> dd (f9-f8)/512
  8325 00007302 74696D6500          <1> db "time",0
  8326 00007307 FC020000            <1> dd (f9-$$)/512
  8327 0000730B 02000000            <1> dd (f10-f9)/512
  8328 0000730F 7475746F7269616C2E- <1> db "tutorial.bat",0
  8329 00007318 62617400            <1>
  8330 0000731C FE020000            <1> dd (f10-$$)/512
  8331 00007320 03000000            <1> dd (f11-f10)/512
  8332 00007324 756E66737465737400  <1> db "unfstest",0
  8333 0000732D 01030000            <1> dd (f11-$$)/512
  8334 00007331 B9020000            <1> dd (f12-f11)/512
  8335                              <1> enddiskfileindex:
  8336                              <1> 
  8337                                  	%include 'source/msg.asm'
  8338 00007335 6578697400          <1> 	exitmsg db	"exit",0
  8339 0000733A 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  8340 00007343 00                  <1>
  8341 00007344 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  8342 0000734D 6E642E0D0A00        <1>
  8343 00007353 757365726E616D653A- <1> 	userask db "username:",0
  8344 0000735C 00                  <1>
  8345 0000735D 70617373776F72643A- <1> 	pwdask	db	"password:",0
  8346 00007366 00                  <1>
  8347 00007367 40536F6C6C65724F53- <1> 	location	db	"@SollerOS]:",0
  8348 00007370 5D3A00              <1>
  8349 00007373 0D0A00              <1> 	line	db	13,10,0
  8350 00007376 200900              <1> 	dirtab 	db " ",9,0
  8351                              <1> 	userlst:
  8352 00007379 7573657200          <1> 			db "user",0
  8353 0000737E 70617373776F726400  <1> 			db "password",0
  8354 00007387 726F6F7400          <1> 			db "root",0
  8355 0000738C 617765736F6D65706F- <1> 			db "awesomepower",0
  8356 00007395 77657200            <1>
  8357 00007399 6E00                <1> 			db "n",0	;;use for quick entry-a quick double n followed by a double enter will get you in
  8358 0000739B 00                  <1> 			db 0
  8359                              <1> 	userlstend:
  8360                              <1> 	
  8361 0000739B <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  8362                              <1> fontend:
  8363                              <1> 
  8364                              <1> 
  8365                              <1> mcursor:
  8366 0000839C 01                  <1> 	db	00000001b
  8367 0000839D 81                  <1> 	db	10000001b
  8368 0000839E C1                  <1> 	db	11000001b
  8369 0000839F E1                  <1> 	db	11100001b
  8370 000083A0 F1                  <1> 	db	11110001b
  8371 000083A1 F9                  <1> 	db	11111001b
  8372 000083A2 FD                  <1> 	db	11111101b
  8373 000083A3 FF                  <1> 	db	11111111b
  8374 000083A4 F9                  <1> 	db	11111001b
  8375 000083A5 B9                  <1> 	db	10111001b
  8376 000083A6 39                  <1> 	db	00111001b
  8377 000083A7 1C                  <1> 	db	00011100b
  8378 000083A8 1C                  <1> 	db	00011100b
  8379 000083A9 0E                  <1> 	db	00001110b
  8380 000083AA 0E                  <1> 	db	00001110b
  8381 000083AB 0C                  <1> 	db	00001100b
  8382                              <1> 
  8383                              <1> ;cursorbmp:
  8384                              <1> ;	db	1,0,0,0,0,0,0,0
  8385                              <1> ;	db	1,1,0,0,0,0,0,0
  8386                              <1> ;	db	1,1,1,0,0,0,0,0
  8387                              <1> ;	db	1,1,1,1,0,0,0,0
  8388                              <1> ;	db	1,1,1,1,1,0,0,0
  8389                              <1> ;	db	1,1,1,1,1,1,0,0
  8390                              <1> ;	db	1,1,1,1,1,1,1,0
  8391                              <1> ;	db	1,1,1,1,1,1,1,1
  8392                              <1> ;	db	1,1,1,1,1,1,0,0
  8393                              <1> ;	db	1,1,0,1,1,1,0,0
  8394                              <1> ;	db	1,0,0,1,1,1,0,0
  8395                              <1> ;	db	0,0,0,0,1,1,1,0
  8396                              <1> ;	db	0,0,0,0,1,1,1,0
  8397                              <1> ;	db	0,0,0,0,0,1,1,1
  8398                              <1> ;	db	0,0,0,0,0,1,1,1
  8399                              <1> ;	db	0,0,0,0,0,1,1,0
  8400                              <1> ;cursorbmpend:
  8401                              <1> 
  8402                              <1> 
  8403                              <1> VBEMODEBLOCK:
  8404 000083AC 00<rept>            <1> vbesignature 		times 4 db 0	;VBE Signature
  8405 000083B0 00<rept>            <1> vbeversion  		times 2 db 0	;VBE Version
  8406 000083B2 00<rept>            <1> oemstringptr  		times 4 db 0	;Pointer to OEM String
  8407 000083B6 00<rept>            <1> capabilities 		times 4 db 0	;Capabilities of graphics cont.
  8408 000083BA 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  8409 000083BE 00<rept>            <1> totalmemory   		times 2 db 0	;number of 64Kb memory blocks
  8410 000083C0 00<rept>            <1> oemsoftwarerev  	times 2 db 0	;VBE implementation Software revision
  8411 000083C2 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  8412 000083C6 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  8413 000083CA 00<rept>            <1> oemproductrevptr 	times 4 db 0	;Pointer to Product Revision String
  8414 000083CE 00<rept>            <1> reserved			times 222 db 0	;Reserved for VBE implementation scratch area
  8415 000084AC 00<rept>            <1> oemdata 			times 256 db 0	;Data Area for OEM Strings
  8416                              <1> 
  8417                              <1> 
  8418                              <1> VBEMODEINFOBLOCK:
  8419                              <1> ;Mandatory information for all VBE revision
  8420 000085AC 00<rept>            <1> modeattributes   	times 2 db 0	;Mode attributes
  8421 000085AE 00                  <1> winaattributes   	times 1 db 0	;Window A attributes
  8422 000085AF 00                  <1> winbattributes   	times 1 db 0	;Window B attributes
  8423 000085B0 00<rept>            <1> wingranularity   	times 2 db 0	;Window granularity
  8424 000085B2 00<rept>            <1> winsize          	times 2 db 0	;Window size
  8425 000085B4 00<rept>            <1> winasegment      	times 2 db 0	;Window A start segment
  8426 000085B6 00<rept>            <1> winbsegment      	times 2 db 0	;Window B start segment
  8427 000085B8 00<rept>            <1> winfuncptr       	times 4 db 0	;pointer to window function
  8428 000085BC 00<rept>            <1> bytesperscanline 	times 2 db 0	;Bytes per scan line
  8429                              <1> 
  8430                              <1> ;Mandatory information for VBE 1.2 and above
  8431 000085BE 00<rept>            <1> xresolution     	times 2 db 0	;Horizontal resolution in pixel or chars
  8432 000085C0 00<rept>            <1> yresolution	    	times 2 db 0	;Vertical resolution in pixel or chars
  8433 000085C2 00                  <1> xcharsize       	times 1 db 0	;Character cell width in pixel
  8434 000085C3 00                  <1> ycharsize       	times 1 db 0	;Character cell height in pixel
  8435 000085C4 00                  <1> numberofplanes  	times 1 db 0	;Number of memory planes
  8436 000085C5 00                  <1> bitsperpixel    	times 1 db 0	;Bits per pixel
  8437 000085C6 00                  <1> numberofbanks   	times 1 db 0	;Number of banks
  8438 000085C7 00                  <1> memorymodel     	times 1 db 0	;Memory model type
  8439 000085C8 00                  <1> banksize        	times 1 db 0	;Bank size in KB
  8440 000085C9 00                  <1> numberofimagepages	times 1 db 0	;Number of images
  8441 000085CA 00                  <1> reserved1       	times 1 db 0	;Reserved for page function
  8442                              <1> 
  8443                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  8444 000085CB 00                  <1> redmasksize			times 1 db 0	;Size of direct color red mask in bits
  8445 000085CC 00                  <1> redfieldposition	times 1 db 0	;Bit position of lsb of red bask
  8446 000085CD 00                  <1> greenmasksize   	times 1 db 0	;Size of direct color green mask in bits
  8447 000085CE 00                  <1> greenfieldposition	times 1 db 0	;Bit position of lsb of green bask
  8448 000085CF 00                  <1> bluemasksize		times 1 db 0	;Size of direct color blue mask in bits
  8449 000085D0 00                  <1> bluefieldposition	times 1 db 0	;Bit position of lsb of blue bask
  8450 000085D1 00                  <1> rsvdmasksize        times 1	db 0	;Size of direct color reserved mask in bits
  8451 000085D2 00                  <1> rsvdfieldposition	times 1	db 0	;Bit position of lsb of reserved bask
  8452 000085D3 00                  <1> directcolormodeinfo	times 1 db 0	;Direct color mode attributes
  8453                              <1> 
  8454                              <1> ;Mandatory information for VBE 2.0 and above
  8455 000085D4 00<rept>            <1> physbaseptr 		times 4 db 0	;Physical address for flat frame buffer
  8456 000085D8 00<rept>            <1> offscreenmemoffset 	times 4 db 0	;Pointer to start of off screen memory
  8457 000085DC 00<rept>            <1> offscreenmemsize 	times 2 db 0    ;Amount of off screen memory in 1Kb units
  8458 000085DE 00<rept>            <1> reserved2 			times 206 db 0  ;Remainder of ModeInfoBlock
  8459                                  	;%include 'source/memory.asm'
  8460                                  	%include 'source/buf.asm'
  8461 000086AC 4255465354415254    <1> db "BUFSTART"
  8462                              <1> [section .bss]
  8463                              <1> bssstart:
  8464                              <1> stack:
  8465 00000000 <res 00001000>      <1> 	resb 4096
  8466                              <1> stackend:
  8467                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  8468 00001000 <res 00000200>      <1> 	resb 200h 
  8469                              <1> 	graphicstableend:
  8470                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  8471 00001200 <res 00000100>      <1> 	resb 256
  8472                              <1> mcolorend:
  8473 00001300 <res 00000200>      <1> fileindex: resb 200h
  8474                              <1> fileindexend:
  8475 00001500 <res 00000001>      <1> IFON resb 1 
  8476 00001501 <res 00000064>      <1> IFTRUE resb 100 
  8477 00001565 <res 00000004>      <1> BATCHPOS resb 4 
  8478 00001569 <res 00000001>      <1> BATCHISON resb 1 
  8479 0000156A <res 00000001>      <1> LOOPON resb 1 
  8480 0000156B <res 00000004>      <1> LOOPPOS	resb 4 
  8481 0000156F <res 00000500>      <1> variables: 	resb 500h 
  8482 00001A6F <res 00000001>      <1> varend: resb 1
  8483 00001A70 <res 00000100>      <1> buftxt2: resb 100h
  8484 00001B70 <res 0000000A>      <1> resb 10
  8485 00001B7A <res 00000200>      <1> buftxt: resb 200h 
  8486                              <1> buftxtend:
  8487 00001D7A <res 00000014>      <1> buf2:	resb 20 
  8488 00001D8E <res 00000001>      <1> numbuf: resb 1 
  8489 00001D8F <res 000012C0>      <1> videobuf2 		resb 0x12C0 
  8490 0000304F <res 000000C8>      <1> videobufend		resb 200
  8491 00003117 <res 00000004>      <1> lastcommandpos: resb 4
  8492 0000311B <res 00000004>      <1> currentcommandpos: resb 4
  8493                              <1> commandbuf:
  8494 0000311F <res 00000400>      <1> resb 1024
  8495                              <1> commandbufend:
  8496                              <1> rbuffstart: ;for use with networking
  8497                              <1> ;resb 8212
  8498                              <1> threadlist:	;;this buffer will hold the stack locations of all of the threads, up to 2048
  8499 0000351F <res 00002008>      <1> 	resb 2050*4
  8500                              <1> threadlistend:
  8501                              <1> stacks:		;;the stacks will go on forever until end of memory
  8502 00005527 <res 00000400>      <1> 	resb 1024
  8503                              <1> stackdummy:
  8504 00005927 <res 00000400>      <1> 	resb 1024
  8505                              <1> stack1:
  8506 00005D27 <res 00200800>      <1> 	resb 1024*2050	;;woah, thats a lot of space for stacks
  8507                              <1> bssend:		;;from here on, it is not kernel space so apps can be loaded here.
  8508                              <1> [section .text]
  8509                                      %include 'files.asm'
  8510 000086B4 00<rept>            <1> align 512,db 0
  8511                              <1> f0:
  8512 000086B4 <incbin>            <1> incbin "included/dos"
  8513 00008945 00<rept>            <1> align 512,db 0
  8514                              <1> f1:
  8515 00008945 <incbin>            <1> incbin "included/exp"
  8516 00008B27 00<rept>            <1> align 512,db 0
  8517                              <1> f2:
  8518 00008B27 <incbin>            <1> incbin "included/fork"
  8519 00008C67 00<rept>            <1> align 512,db 0
  8520                              <1> f3:
  8521 00008C67 <incbin>            <1> incbin "included/fputest"
  8522 00008E9F 00<rept>            <1> align 512,db 0
  8523                              <1> f4:
  8524 00008E9F <incbin>            <1> incbin "included/linux"
  8525 00009004 00<rept>            <1> align 512,db 0
  8526                              <1> f5:
  8527 00009004 <incbin>            <1> incbin "included/solleros.bmp"
  8528 0005F1E6 00<rept>            <1> align 512,db 0
  8529                              <1> f6:
  8530 0005F1E6 <incbin>            <1> incbin "included/solleros.txt"
  8531 0005F376 00<rept>            <1> align 512,db 0
  8532                              <1> f7:
  8533 0005F376 <incbin>            <1> incbin "included/sound"
  8534 0005F462 00<rept>            <1> align 512,db 0
  8535                              <1> f8:
  8536 0005F462 <incbin>            <1> incbin "included/tely"
  8537 0005F779 00<rept>            <1> align 512,db 0
  8538                              <1> f9:
  8539 0005F779 <incbin>            <1> incbin "included/time"
  8540 0005FA7B 00<rept>            <1> align 512,db 0
  8541                              <1> f10:
  8542 0005FA7B <incbin>            <1> incbin "included/tutorial.bat"
  8543 000600AA 00<rept>            <1> align 512,db 0
  8544                              <1> f11:
  8545 000600AA <incbin>            <1> incbin "included/unfstest"
  8546                              <1> align 512,db 0
  8547                              <1> f12:
