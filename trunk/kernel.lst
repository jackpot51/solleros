     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> prog:	
     5 00000000 8CC8                <1> 	    mov ax, cs
     6 00000002 E90400              <1> 	    jmp mainindex	;;this command gives the solleros user the location of mainindex
     7 00000005 4A525300            <1> 	    db "JRS",0	;;this gives the bootloader a key to look for
     8                              <1> mainindex:
     9 00000009 E90000              <1> 	    jmp mainindexdn	;;this gives the size of the index
    10                              <1> 	    ;not needed;dw 0405h,progstart,batchprogend,fileindex,fileindexend,variables,varend,nwcmd,int30h,physbaseptr,0
    11                              <1> mainindexdn:
    12 0000000C 8ED8                <1> 	mov ds, ax
    13 0000000E 8EC0                <1> 	mov es, ax
    14 00000010 8ED0                <1> 	mov ss, ax
    15 00000012 880E[4200]          <1> 	mov [DriveNumber], cl
    16 00000016 668916[4300]        <1> 	mov [lbaad], edx
    17 0000001B B800A0              <1> 	mov ax, 0xA000
    18 0000001E 8EE8                <1> 	mov gs, ax
    19 00000020 B81200              <1> 	mov ax, 12h
    20 00000023 BB0000              <1> 	mov bx, 0
    21 00000026 CD10                <1> 	int 10h
    22 00000028 BE[0000]            <1> 	mov si, graphicstable
    23 0000002B BF[0D23]            <1> 	mov di, endbss
    24 0000002E 66B800000000        <1> 	mov eax, 0
    25                              <1> initmemory:
    26 00000034 668904              <1> 	mov [si], eax
    27 00000037 81C60400            <1> 	add si, 4
    28 0000003B 39FE                <1> 	cmp si, di
    29 0000003D 76F5                <1> 	jbe initmemory
    30 0000003F E90900              <1> 	jmp guiload
    31                              <1> 
    32 00000042 00                  <1> DriveNumber db 0
    33 00000043 00000000            <1> lbaad dd 0
    34                              <1> 	
    35 00000047 0000                <1> vesamode dw 0
    36 00000049 0000                <1> videomodecache dw 0
    37                              <1> 
    38                              <1> guiload:
    39 0000004B B8004F              <1> 	mov ax, 04F00h
    40 0000004E BF[0D20]            <1> 	mov di, VBEMODEBLOCK
    41 00000051 CD10                <1> 	int 10h
    42 00000053 BE[2F20]            <1> 	mov si, reserved
    43 00000056 81EE0200            <1> 	sub si, 2
    44                              <1> findvideomodes:
    45 0000005A 81C60200            <1> 	add si, 2
    46 0000005E 8B0C                <1> 	mov cx, [si]
    47 00000060 81F9FFFF            <1> 	cmp cx, 0xFFFF
    48 00000064 0F840A00            <1> 	je near nextvmode
    49 00000068 81FE[0D21]          <1> 	cmp si, oemdata
    50 0000006C 0F83CF00            <1> 	jae near guiload2	;;kill if no valid list is found
    51 00000070 EBE8                <1> 	jmp findvideomodes 	
    52                              <1> ;;debug,shows vmodes available
    53                              <1> nextvmode:
    54 00000072 81EE0200            <1> 	sub si, 2
    55 00000076 81FE[2F20]          <1> 	cmp si, reserved
    56 0000007A 0F82C100            <1> 	jb near guiload2
    57 0000007E 8B0C                <1> 	mov cx, [si]
    58 00000080 81F9FFFF            <1> 	cmp cx, 0xFFFF
    59 00000084 0F84EAFF            <1> 	je near nextvmode
    60 00000088 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    61 0000008C B8014F              <1> 	mov ax, 04F01h
    62 0000008F BF[0D22]            <1> 	mov di, VBEMODEINFOBLOCK
    63 00000092 890E[4700]          <1> 	mov [vesamode], cx
    64 00000096 CD10                <1> 	int 10h
    65 00000098 A0[2622]            <1> 	mov al, [bitsperpixel]
    66 0000009B 3C10                <1> 	cmp al, 16
    67 0000009D 75D3                <1> 	jne nextvmode
    68 0000009F 8936[4900]          <1> 	mov [videomodecache], si
    69 000000A3 80FC00              <1> 	cmp ah, 0
    70 000000A6 0F842200            <1> 	je near setvesamode
    71 000000AA EBC6                <1> 	jmp nextvmode
    72 000000AC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    73 000000B5 20766964656F206D6F- <1>
    74 000000BE 6465204F4B3F28792F- <1>
    75 000000C7 6E290D0A00          <1>
    76                              <1> setvesamode:
    77 000000CC 8B0E[1F22]          <1> 	mov cx, [xresolution]
    78 000000D0 E8B800              <1> 	call decshow
    79 000000D3 B078                <1> 	mov al, "x"
    80 000000D5 E82001              <1> 	call char
    81 000000D8 8B0E[2122]          <1> 	mov cx, [yresolution]
    82 000000DC E8AC00              <1> 	call decshow
    83 000000DF B040                <1> 	mov al, "@"
    84 000000E1 E81401              <1> 	call char
    85 000000E4 8A0E[2622]          <1> 	mov cl, [bitsperpixel]
    86 000000E8 E8A000              <1> 	call decshow
    87 000000EB BE[AC00]            <1> 	mov si, isthisvideook
    88 000000EE E88200              <1> 	call printrm
    89 000000F1 B80000              <1> 	mov ax, 0
    90 000000F4 CD16                <1> 	int 16h
    91 000000F6 8B36[4900]          <1> 	mov si, [videomodecache]
    92 000000FA 3C79                <1> 	cmp al, "y"
    93 000000FC 0F8572FF            <1> 	jne near nextvmode
    94 00000100 8B16[1F22]          <1> 	mov dx, [xresolution]
    95 00000104 8B0E[2122]          <1> 	mov cx, [yresolution]
    96 00000108 8916[E236]          <1> 	mov [resolutionx], dx
    97 0000010C 890E[E036]          <1> 	mov [resolutiony], cx
    98 00000110 01D2                <1> 	add dx, dx
    99 00000112 8916[E436]          <1> 	mov [resolutionx2], dx
   100 00000116 BA0000              <1> 	mov dx, 0
   101 00000119 B90000              <1> 	mov cx, 0
   102 0000011C B8024F              <1> 	mov ax, 04F02h
   103 0000011F 8B1E[4700]          <1> 	mov bx, [vesamode]
   104 00000123 CD10                <1> 	int 10h		;;enter VESA mode
   105 00000125 C606[7201]00        <1> 	mov byte [guinodo], 0
   106 0000012A 6631C0              <1> 	xor eax, eax
   107 0000012D 6631DB              <1> 	xor ebx, ebx
   108 00000130 6631C9              <1> 	xor ecx, ecx
   109 00000133 6631D2              <1> 	xor edx, edx
   110 00000136 6631F6              <1> 	xor esi, esi
   111 00000139 6631FF              <1> 	xor edi, edi	;;reset registers
   112 0000013C E91F01              <1> 	jmp pmode
   113                              <1> guiload2:
   114 0000013F B9E001              <1> 	mov cx, 480
   115 00000142 BA8002              <1> 	mov dx, 640
   116 00000145 8916[E236]          <1> 	mov [resolutionx], dx
   117 00000149 01D2                <1> 	add dx, dx
   118 0000014B 8916[E436]          <1> 	mov [resolutionx2], dx
   119 0000014F 890E[E036]          <1> 	mov [resolutiony], cx
   120 00000153 B81200              <1> 	mov ax, 12h
   121 00000156 BB0000              <1> 	mov bx, 0
   122 00000159 CD10                <1> 	int 10h
   123 0000015B C606[7201]01        <1> 	mov byte [guinodo], 1
   124 00000160 6631DB              <1> 	xor ebx, ebx
   125 00000163 6631C9              <1> 	xor ecx, ecx
   126 00000166 6631D2              <1> 	xor edx, edx
   127 00000169 6631F6              <1> 	xor esi, esi
   128 0000016C 6631FF              <1> 	xor edi, edi
   129 0000016F E9EC00              <1> 	jmp pmode
   130                              <1> ;;	jmp gui ;;test vesa
   131                              <1> 
   132 00000172 00                  <1> guinodo db 0
   133                              <1> 
   134                              <1>     printrm:			; 'si' comes in with string address
   135 00000173 BB0700              <1> 	    mov bx,07		; write to display
   136 00000176 B40E                <1> 	    mov ah,0Eh		; screen function
   137 00000178 8A04                <1>     prs2:    mov al,[si]         ; get next character
   138 0000017A 3C00                <1> 	    cmp al,0		; look for terminator 
   139 0000017C 7405                <1>             je finpr2		; zero byte at end of string
   140 0000017E CD10                <1> 	    int 10h		; write character to screen.    
   141 00000180 46                  <1>      	    inc si	     	; move to next character
   142 00000181 EBF5                <1> 	    jmp prs2		; loop
   143 00000183 C3                  <1>     finpr2: ret
   144                              <1> 
   145 00000184 0000000000          <1> dcnm db 0,0,0,0,0
   146 00000189 0000                <1> dcnmend db 0,0
   147                              <1> 
   148                              <1> 
   149                              <1> decshow:
   150 0000018B BE[8401]            <1> 	mov si, dcnm
   151                              <1> decclear:
   152 0000018E B030                <1> 	mov al, "0"
   153 00000190 8804                <1> 	mov [si], al
   154 00000192 46                  <1> 	inc si
   155 00000193 81FE[8901]          <1> 	cmp si, dcnmend
   156 00000197 76F5                <1> 	jbe decclear
   157 00000199 4E                  <1> 	dec si
   158 0000019A E81500              <1> 	call convertrm
   159 0000019D BE[8401]            <1> 	mov si, dcnm
   160                              <1> dectst:
   161 000001A0 8A04                <1> 	mov al, [si]
   162 000001A2 46                  <1> 	inc si
   163 000001A3 81FE[8901]          <1> 	cmp si, dcnmend
   164 000001A7 7704                <1> 	ja dectstend
   165 000001A9 3C30                <1> 	cmp al, "0"
   166 000001AB 76F3                <1> 	jbe dectst
   167                              <1> dectstend:
   168 000001AD 4E                  <1> 	dec si
   169 000001AE E8C2FF              <1> 	call printrm
   170 000001B1 C3                  <1> 	ret
   171                              <1> 	
   172                              <1> 	
   173                              <1> convertrm:
   174 000001B2 4E                  <1> 	dec si
   175 000001B3 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   176                              <1> cnvrtrm:
   177 000001B5 89DE                <1> 	mov si, bx
   178 000001B7 81EE0300            <1> 	sub si, 3
   179 000001BB 46                  <1> ten3rm:	inc si
   180 000001BC 81F9E803            <1> 	cmp cx, 1000
   181 000001C0 7208                <1> 	jb ten2rm
   182 000001C2 81E9E803            <1> 	sub cx, 1000
   183 000001C6 FE04                <1> 	inc byte [si]
   184 000001C8 EBEB                <1> 	jmp cnvrtrm
   185 000001CA 46                  <1> ten2rm:	inc si
   186 000001CB 81F96400            <1> 	cmp cx, 100
   187 000001CF 7208                <1> 	jb ten1rm
   188 000001D1 81E96400            <1> 	sub cx, 100
   189 000001D5 FE04                <1> 	inc byte [si]
   190 000001D7 EBDC                <1> 	jmp cnvrtrm
   191 000001D9 46                  <1> ten1rm:	inc si
   192 000001DA 81F90A00            <1> 	cmp cx, 10
   193 000001DE 7208                <1> 	jb ten0rm
   194 000001E0 81E90A00            <1> 	sub cx, 10
   195 000001E4 FE04                <1> 	inc byte [si]
   196 000001E6 EBCD                <1> 	jmp cnvrtrm
   197 000001E8 46                  <1> ten0rm:	inc si
   198 000001E9 81F90100            <1> 	cmp cx, 1
   199 000001ED 7208                <1> 	jb tendnrm
   200 000001EF 81E90100            <1> 	sub cx, 1
   201 000001F3 FE04                <1> 	inc byte [si]
   202 000001F5 EBBE                <1> 	jmp cnvrtrm
   203                              <1> tendnrm:
   204 000001F7 C3                  <1> 	ret
   205                              <1> 
   206                              <1> 
   207                              <1> 
   208                              <1> 
   209                              <1>     char: 		    ;char must be in al
   210 000001F8 BB0700              <1>            mov bx, 07
   211 000001FB B40E                <1> 	   mov ah, 0Eh
   212 000001FD CD10                <1> 	   int 10h
   213 000001FF C3                  <1> 	    ret
   214                              <1> 
   215                              <1> 		shutdown:
   216 00000200 E84B00              <1> 			call realmode	
   217 00000203 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   218 00000206 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   219 00000208 CD15                <1> 			INT 15h		; shut down
   220 0000020A B80453              <1> 			MOV AX, 5304h
   221 0000020D 31DB                <1> 			XOR BX, BX
   222 0000020F CD15                <1> 			INT 15h		; Interrupt 15h originally was
   223 00000211 B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   224 00000214 31DB                <1> 			XOR BX, BX	; but is still in use for
   225 00000216 CD15                <1> 			INT 15h		; diverse things
   226 00000218 B80753              <1> 			MOV AX, 5307h
   227 0000021B BB0100              <1> 			MOV BX, 1
   228 0000021E B90300              <1> 			MOV CX, 3
   229 00000221 CD15                <1> 			INT 15h
   230 00000223 CF                  <1> 			IRET
   231                              <1> 
   232                              <1> 	coldboot:
   233 00000224 E82700              <1> 			call realmode
   234 00000227 B84000              <1> 			MOV AX, 0040h
   235 0000022A 8EC0                <1> 			MOV ES, AX
   236 0000022C 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   237 00000233 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   238 00000238 CF                  <1> 			IRET
   239                              <1> 
   240                              <1> 		warmboot:
   241 00000239 E81200              <1> 			call realmode
   242 0000023C B84000              <1> 			MOV AX, 0040h
   243 0000023F 8EC0                <1> 			MOV ES, AX
   244 00000241 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   245 00000248 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   246 0000024D CF                  <1> 			IRET
   247                              <1> 
   248                              <1> 
   249                              <1> realmode:
   250 0000024E 0F20C0              <1>    mov eax, cr0
   251 00000251 24FE                <1>    and al,0xFE     ; back to realmode
   252 00000253 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   253 00000256 FB                  <1>    sti
   254                              <1> 
   255 00000257 66B800000000        <1>    mov eax, 0
   256 0000025D C3                  <1>    ret
   257                                      %include 'source/pmode.asm'
   258                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   259                              <1> ;	16-bit real mode
   260                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   261                              <1> [BITS 16]
   262                              <1> pmode:
   263 0000025E BA9200              <1> 	mov dx, 0x92
   264 00000261 EC                  <1> 	in al, dx	;;A20
   265 00000262 0C02                <1> 	or al, 2
   266 00000264 EE                  <1> 	out dx, al
   267 00000265 6631DB              <1> 	xor ebx,ebx
   268 00000268 8CCB                <1> 	mov bx,cs		; EBX=segment
   269 0000026A 66C1E304            <1> 	shl ebx,4		;	<< 4
   270 0000026E 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   271 00000272 A3[D906]            <1> 	mov [gdt2 + 2],ax
   272 00000275 A3[E106]            <1> 	mov [gdt3 + 2],ax
   273 00000278 66C1E810            <1> 	shr eax,16
   274 0000027C A2[DB06]            <1> 	mov [gdt2 + 4],al
   275 0000027F A2[E306]            <1> 	mov [gdt3 + 4],al
   276 00000282 8826[DE06]          <1> 	mov [gdt2 + 7],ah
   277 00000286 8826[E606]          <1> 	mov [gdt3 + 7],ah
   278                              <1> ; fix up gdt and idt
   279 0000028A 67668D83[C7060000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   280 00000292 66A3[BD06]          <1> 	mov [gdtr + 2],eax
   281 00000296 67668D83[EC060000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   282 0000029E 66A3[C306]          <1> 	mov [idtr + 2],eax
   283 000002A2 FA                  <1> 	cli
   284 000002A3 0F0116[BB06]        <1> 	lgdt [gdtr]
   285 000002A8 0F011E[C106]        <1> 	lidt [idtr]
   286 000002AD 8CD8                <1> 	mov ax, ds
   287 000002AF A3[0003]            <1> 	mov [cscache], ax
   288 000002B2 0F20C0              <1> 	mov eax,cr0
   289 000002B5 0C01                <1> 	or al,1
   290 000002B7 0F22C0              <1> 	mov cr0,eax
   291 000002BA EA[BF02]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   292                              <1> [BITS 32]
   293                              <1> do_pm:
   294 000002BF 66B81800            <1> 	mov ax, SYS_DATA_SEL
   295 000002C3 8ED8                <1> 	mov ds,ax
   296 000002C5 8ED0                <1> 	mov ss,ax
   297 000002C7 90                  <1> 	nop
   298 000002C8 8EC0                <1> 	mov es,ax
   299 000002CA 8EE0                <1> 	mov fs,ax
   300 000002CC 8EE8                <1> 	mov gs,ax
   301                              <1> 
   302 000002CE 8B3D[35220000]      <1> 	mov edi, [physbaseptr]
   303 000002D4 B800000000          <1> 	mov eax, 0
   304 000002D9 66A1[00030000]      <1> 	mov ax, [cscache]
   305 000002DF C1E004              <1> 	shl eax, 4
   306 000002E2 29C7                <1> 	sub edi, eax
   307 000002E4 893D[35220000]      <1> 	mov [physbaseptr], edi
   308                              <1> 	
   309 000002EA 803D[72010000]00    <1> 	cmp byte [guinodo], 0
   310 000002F1 0F8457230000        <1> 	je near gui
   311 000002F7 E96F090000          <1> 	jmp os
   312                              <1> 	
   313 000002FC 00000000            <1> user2codepoint dw 0,0
   314 00000300 0000                <1> cscache dw 0
   315                              <1> 
   316                              <1> handled:
   317 00000302 C3                  <1> 	ret
   318                              <1> 
   319                              <1> unhand:	
   320                              <1> 	%assign i 0
   321                              <1> 	%rep 40
   322                              <1> 	cli
   323                              <1> 	mov byte [intprob], i
   324                              <1> 	jmp unhand2
   325                              <1> 	%assign i i+1
   326                              <1> 	%endrep
   327 00000303 FA                  <2>  cli
   328 00000304 C605[04060000]00    <2>  mov byte [intprob], i
   329 0000030B E9FB010000          <2>  jmp unhand2
   330                              <2>  %assign i i+1
   331 00000310 FA                  <2>  cli
   332 00000311 C605[04060000]01    <2>  mov byte [intprob], i
   333 00000318 E9EE010000          <2>  jmp unhand2
   334                              <2>  %assign i i+1
   335 0000031D FA                  <2>  cli
   336 0000031E C605[04060000]02    <2>  mov byte [intprob], i
   337 00000325 E9E1010000          <2>  jmp unhand2
   338                              <2>  %assign i i+1
   339 0000032A FA                  <2>  cli
   340 0000032B C605[04060000]03    <2>  mov byte [intprob], i
   341 00000332 E9D4010000          <2>  jmp unhand2
   342                              <2>  %assign i i+1
   343 00000337 FA                  <2>  cli
   344 00000338 C605[04060000]04    <2>  mov byte [intprob], i
   345 0000033F E9C7010000          <2>  jmp unhand2
   346                              <2>  %assign i i+1
   347 00000344 FA                  <2>  cli
   348 00000345 C605[04060000]05    <2>  mov byte [intprob], i
   349 0000034C E9BA010000          <2>  jmp unhand2
   350                              <2>  %assign i i+1
   351 00000351 FA                  <2>  cli
   352 00000352 C605[04060000]06    <2>  mov byte [intprob], i
   353 00000359 E9AD010000          <2>  jmp unhand2
   354                              <2>  %assign i i+1
   355 0000035E FA                  <2>  cli
   356 0000035F C605[04060000]07    <2>  mov byte [intprob], i
   357 00000366 E9A0010000          <2>  jmp unhand2
   358                              <2>  %assign i i+1
   359 0000036B FA                  <2>  cli
   360 0000036C C605[04060000]08    <2>  mov byte [intprob], i
   361 00000373 E993010000          <2>  jmp unhand2
   362                              <2>  %assign i i+1
   363 00000378 FA                  <2>  cli
   364 00000379 C605[04060000]09    <2>  mov byte [intprob], i
   365 00000380 E986010000          <2>  jmp unhand2
   366                              <2>  %assign i i+1
   367 00000385 FA                  <2>  cli
   368 00000386 C605[04060000]0A    <2>  mov byte [intprob], i
   369 0000038D E979010000          <2>  jmp unhand2
   370                              <2>  %assign i i+1
   371 00000392 FA                  <2>  cli
   372 00000393 C605[04060000]0B    <2>  mov byte [intprob], i
   373 0000039A E96C010000          <2>  jmp unhand2
   374                              <2>  %assign i i+1
   375 0000039F FA                  <2>  cli
   376 000003A0 C605[04060000]0C    <2>  mov byte [intprob], i
   377 000003A7 E95F010000          <2>  jmp unhand2
   378                              <2>  %assign i i+1
   379 000003AC FA                  <2>  cli
   380 000003AD C605[04060000]0D    <2>  mov byte [intprob], i
   381 000003B4 E952010000          <2>  jmp unhand2
   382                              <2>  %assign i i+1
   383 000003B9 FA                  <2>  cli
   384 000003BA C605[04060000]0E    <2>  mov byte [intprob], i
   385 000003C1 E945010000          <2>  jmp unhand2
   386                              <2>  %assign i i+1
   387 000003C6 FA                  <2>  cli
   388 000003C7 C605[04060000]0F    <2>  mov byte [intprob], i
   389 000003CE E938010000          <2>  jmp unhand2
   390                              <2>  %assign i i+1
   391 000003D3 FA                  <2>  cli
   392 000003D4 C605[04060000]10    <2>  mov byte [intprob], i
   393 000003DB E92B010000          <2>  jmp unhand2
   394                              <2>  %assign i i+1
   395 000003E0 FA                  <2>  cli
   396 000003E1 C605[04060000]11    <2>  mov byte [intprob], i
   397 000003E8 E91E010000          <2>  jmp unhand2
   398                              <2>  %assign i i+1
   399 000003ED FA                  <2>  cli
   400 000003EE C605[04060000]12    <2>  mov byte [intprob], i
   401 000003F5 E911010000          <2>  jmp unhand2
   402                              <2>  %assign i i+1
   403 000003FA FA                  <2>  cli
   404 000003FB C605[04060000]13    <2>  mov byte [intprob], i
   405 00000402 E904010000          <2>  jmp unhand2
   406                              <2>  %assign i i+1
   407 00000407 FA                  <2>  cli
   408 00000408 C605[04060000]14    <2>  mov byte [intprob], i
   409 0000040F E9F7000000          <2>  jmp unhand2
   410                              <2>  %assign i i+1
   411 00000414 FA                  <2>  cli
   412 00000415 C605[04060000]15    <2>  mov byte [intprob], i
   413 0000041C E9EA000000          <2>  jmp unhand2
   414                              <2>  %assign i i+1
   415 00000421 FA                  <2>  cli
   416 00000422 C605[04060000]16    <2>  mov byte [intprob], i
   417 00000429 E9DD000000          <2>  jmp unhand2
   418                              <2>  %assign i i+1
   419 0000042E FA                  <2>  cli
   420 0000042F C605[04060000]17    <2>  mov byte [intprob], i
   421 00000436 E9D0000000          <2>  jmp unhand2
   422                              <2>  %assign i i+1
   423 0000043B FA                  <2>  cli
   424 0000043C C605[04060000]18    <2>  mov byte [intprob], i
   425 00000443 E9C3000000          <2>  jmp unhand2
   426                              <2>  %assign i i+1
   427 00000448 FA                  <2>  cli
   428 00000449 C605[04060000]19    <2>  mov byte [intprob], i
   429 00000450 E9B6000000          <2>  jmp unhand2
   430                              <2>  %assign i i+1
   431 00000455 FA                  <2>  cli
   432 00000456 C605[04060000]1A    <2>  mov byte [intprob], i
   433 0000045D E9A9000000          <2>  jmp unhand2
   434                              <2>  %assign i i+1
   435 00000462 FA                  <2>  cli
   436 00000463 C605[04060000]1B    <2>  mov byte [intprob], i
   437 0000046A E99C000000          <2>  jmp unhand2
   438                              <2>  %assign i i+1
   439 0000046F FA                  <2>  cli
   440 00000470 C605[04060000]1C    <2>  mov byte [intprob], i
   441 00000477 E98F000000          <2>  jmp unhand2
   442                              <2>  %assign i i+1
   443 0000047C FA                  <2>  cli
   444 0000047D C605[04060000]1D    <2>  mov byte [intprob], i
   445 00000484 E982000000          <2>  jmp unhand2
   446                              <2>  %assign i i+1
   447 00000489 FA                  <2>  cli
   448 0000048A C605[04060000]1E    <2>  mov byte [intprob], i
   449 00000491 E975000000          <2>  jmp unhand2
   450                              <2>  %assign i i+1
   451 00000496 FA                  <2>  cli
   452 00000497 C605[04060000]1F    <2>  mov byte [intprob], i
   453 0000049E E968000000          <2>  jmp unhand2
   454                              <2>  %assign i i+1
   455 000004A3 FA                  <2>  cli
   456 000004A4 C605[04060000]20    <2>  mov byte [intprob], i
   457 000004AB E95B000000          <2>  jmp unhand2
   458                              <2>  %assign i i+1
   459 000004B0 FA                  <2>  cli
   460 000004B1 C605[04060000]21    <2>  mov byte [intprob], i
   461 000004B8 E94E000000          <2>  jmp unhand2
   462                              <2>  %assign i i+1
   463 000004BD FA                  <2>  cli
   464 000004BE C605[04060000]22    <2>  mov byte [intprob], i
   465 000004C5 E941000000          <2>  jmp unhand2
   466                              <2>  %assign i i+1
   467 000004CA FA                  <2>  cli
   468 000004CB C605[04060000]23    <2>  mov byte [intprob], i
   469 000004D2 E934000000          <2>  jmp unhand2
   470                              <2>  %assign i i+1
   471 000004D7 FA                  <2>  cli
   472 000004D8 C605[04060000]24    <2>  mov byte [intprob], i
   473 000004DF E927000000          <2>  jmp unhand2
   474                              <2>  %assign i i+1
   475 000004E4 FA                  <2>  cli
   476 000004E5 C605[04060000]25    <2>  mov byte [intprob], i
   477 000004EC E91A000000          <2>  jmp unhand2
   478                              <2>  %assign i i+1
   479 000004F1 FA                  <2>  cli
   480 000004F2 C605[04060000]26    <2>  mov byte [intprob], i
   481 000004F9 E90D000000          <2>  jmp unhand2
   482                              <2>  %assign i i+1
   483 000004FE FA                  <2>  cli
   484 000004FF C605[04060000]27    <2>  mov byte [intprob], i
   485 00000506 E900000000          <2>  jmp unhand2
   486                              <2>  %assign i i+1
   487                              <1> unhand2:
   488 0000050B 60                  <1> 	pushad
   489 0000050C C705[FC020000]0000- <1> 	mov dword [user2codepoint], 0
   490 00000514 0000                <1>
   491 00000516 89E6                <1> 	mov esi, esp
   492 00000518 81C624000000        <1> 	add esi, 36
   493 0000051E 8935[FA050000]      <1> 	mov [esploc], esi
   494 00000524 BE[05060000]        <1> 	mov esi, unhandmsg
   495 00000529 8935[FE050000]      <1> 	mov [esiloc], esi
   496 0000052F B900000000          <1> 	mov ecx, 0
   497 00000534 8A0D[04060000]      <1> 	mov cl, [intprob]
   498 0000053A E856000000          <1> 	call expdump
   499                              <1> dumpstack:
   500 0000053F 8B35[FA050000]      <1> 	mov esi, [esploc]
   501 00000545 39E6                <1> 	cmp esi, esp
   502 00000547 7215                <1> 	jb donedump
   503 00000549 8B0E                <1> 	mov ecx, [esi]
   504 0000054B 81EE04000000        <1> 	sub esi, 4
   505 00000551 8935[FA050000]      <1> 	mov [esploc], esi
   506 00000557 E839000000          <1> 	call expdump
   507 0000055C EBE1                <1> 	jmp dumpstack
   508                              <1> donedump:
   509 0000055E 8B35[FA050000]      <1> 	mov esi, [esploc]
   510 00000564 8B7C2420            <1> 	mov edi, [esp + 32]
   511 00000568 8B4FFC              <1> 	mov ecx, [edi - 4]
   512 0000056B E825000000          <1> 	call expdump
   513 00000570 8B35[FA050000]      <1> 	mov esi, [esploc]
   514 00000576 8B7C2420            <1> 	mov edi, [esp + 32]
   515 0000057A 8B0F                <1> 	mov ecx, [edi]
   516 0000057C E814000000          <1> 	call expdump
   517 00000581 8B35[FA050000]      <1> 	mov esi, [esploc]
   518 00000587 8B7C2420            <1> 	mov edi, [esp + 32]
   519 0000058B 8B4F04              <1> 	mov ecx, [edi + 4]
   520 0000058E E802000000          <1> 	call expdump
   521 00000593 EBFE                <1> 	jmp $
   522                              <1> expdump:
   523 00000595 8B35[FE050000]      <1> 	mov esi, [esiloc]
   524 0000059B 89F7                <1> 	mov edi, esi
   525 0000059D 81C70D000000        <1> 	add edi, 13
   526 000005A3 81C604000000        <1> 	add esi, 4
   527 000005A9 893D[FE050000]      <1> 	mov [esiloc], edi
   528 000005AF 4F                  <1> 	dec edi
   529 000005B0 E89D0A0000          <1> 	call converthex
   530 000005B5 81EE04000000        <1> 	sub esi, 4
   531 000005BB 803D[C4280000]00    <1> 	cmp byte [guion], 0
   532 000005C2 0F8422000000        <1> 	je near expdumptext
   533 000005C8 668B0D[02060000]    <1> 	mov cx, [locunhand]
   534 000005CF 668105[02060000]10- <1> 	add word [locunhand], 16
   535 000005D7 00                  <1>
   536 000005D8 66BA0200            <1> 	mov dx, 2
   537 000005DC 66B80100            <1> 	mov ax, 1
   538 000005E0 66BB0000            <1> 	mov bx, 0
   539 000005E4 E89F2C0000          <1> 	call showstring
   540 000005E9 C3                  <1> 	ret
   541                              <1> expdumptext:
   542 000005EA E8CF040000          <1> 	call print
   543 000005EF BE[C5400000]        <1> 	mov esi, line
   544 000005F4 E8C5040000          <1> 	call print
   545 000005F9 C3                  <1> 	ret
   546 000005FA 00000000            <1> esploc dd 0
   547 000005FE 00000000            <1> esiloc dd 0
   548 00000602 0100                <1> locunhand dw 1
   549 00000604 00                  <1> intprob db 0
   550 00000605 494E54203030303030- <1> 	unhandmsg	db "INT 00000000",0
   551 0000060E 30303000            <1>
   552 00000612 43533A3D3030303030- <1> 			db "CS:=00000000",0
   553 0000061B 30303000            <1>
   554 0000061F 4549503D3030303030- <1> 			db "EIP=00000000",0
   555 00000628 30303000            <1>
   556 0000062C 4541583D3030303030- <1> 			db "EAX=00000000",0
   557 00000635 30303000            <1>
   558 00000639 4543583D3030303030- <1> 			db "ECX=00000000",0
   559 00000642 30303000            <1>
   560 00000646 4544583D3030303030- <1> 			db "EDX=00000000",0
   561 0000064F 30303000            <1>
   562 00000653 4542583D3030303030- <1> 			db "EBX=00000000",0
   563 0000065C 30303000            <1>
   564 00000660 4553503D3030303030- <1> 			db "ESP=00000000",0
   565 00000669 30303000            <1>
   566 0000066D 4542503D3030303030- <1> 			db "EBP=00000000",0
   567 00000676 30303000            <1>
   568 0000067A 4553493D3030303030- <1> 			db "ESI=00000000",0
   569 00000683 30303000            <1>
   570 00000687 4544493D3030303030- <1> 			db "EDI=00000000",0
   571 00000690 30303000            <1>
   572 00000694 434D443D3030303030- <1> 			db "CMD=00000000",0
   573 0000069D 30303000            <1>
   574 000006A1 434D443D3030303030- <1> 			db "CMD=00000000",0
   575 000006AA 30303000            <1>
   576 000006AE 434D443D3030303030- <1> 			db "CMD=00000000",0
   577 000006B7 30303000            <1>
   578                              <1> unhandmsgend:
   579                              <1> 
   580                              <1> [BITS 16]
   581                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   582                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   583                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   584 000006BB 1F00                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   585 000006BD [C7060000]          <1> 	dd gdt			; linear, physical address of GDT
   586                              <1> 
   587 000006C1 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   588 000006C3 [EC060000]          <1> 	dd idt			; linear, physical address of IDT
   589                              <1> 
   590                              <1> 
   591 000006C7 0000                <1> gdt:	dw 0			; limit 15:0
   592 000006C9 0000                <1> 	dw 0			; base 15:0
   593 000006CB 00                  <1> 	db 0			; base 23:16
   594 000006CC 00                  <1> 	db 0			; type
   595 000006CD 00                  <1> 	db 0			; limit 19:16, flags
   596 000006CE 00                  <1> 	db 0			; base 31:24
   597                              <1> ; linear data segment descriptor
   598                              <1> LINEAR_SEL	equ	$-gdt
   599 000006CF FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   600 000006D1 0000                <1> 	dw 0			; base for this one is always 0
   601 000006D3 00                  <1> 	db 0
   602 000006D4 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   603 000006D5 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   604 000006D6 00                  <1> 	db 0
   605                              <1> ; code segment descriptor
   606                              <1> SYS_CODE_SEL	equ	$-gdt
   607 000006D7 FFFF                <1> gdt2:	dw 0xFFFF
   608 000006D9 0000                <1> 	dw 0			; (base gets set above)
   609 000006DB 00                  <1> 	db 0
   610 000006DC 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   611 000006DD CF                  <1> 	db 0xCF
   612 000006DE 00                  <1> 	db 0
   613                              <1> ; data segment descriptor
   614                              <1> SYS_DATA_SEL	equ	$-gdt
   615 000006DF FFFF                <1> gdt3:	dw 0xFFFF
   616 000006E1 0000                <1> 	dw 0			; (base gets set above)
   617 000006E3 00                  <1> 	db 0
   618 000006E4 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   619 000006E5 CF                  <1> 	db 0xCF
   620 000006E6 00                  <1> 	db 0
   621                              <1> gdt_end:
   622                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   623                              <1> ;	interrupt descriptor table (IDT)
   624                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   625                              <1> ; 32 reserved interrupts:
   626 000006E7 494454              <1> db "IDT"
   627 000006EA [0303]              <1> dw unhand
   628                              <1> idt:	
   629                              <1> %assign i 0 
   630                              <1> %rep    8
   631                              <1>         dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   632                              <1> %assign i i+1 
   633                              <1> %endrep
   634 000006EC [0303]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   635                              <2> %assign i i+1
   636 000006F4 [1003]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   637                              <2> %assign i i+1
   638 000006FC [1D03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   639                              <2> %assign i i+1
   640 00000704 [2A03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   641                              <2> %assign i i+1
   642 0000070C [3703]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   643                              <2> %assign i i+1
   644 00000714 [4403]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   645                              <2> %assign i i+1
   646 0000071C [5103]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   647                              <2> %assign i i+1
   648 00000724 [5E03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   649                              <2> %assign i i+1
   650                              <1> 
   651 0000072C [0203]1000008E0000  <1> 	dw handled, SYS_CODE_SEL, 0x8E00, 0
   652                              <1> 
   653                              <1> %assign i 9
   654                              <1> %rep    39
   655                              <1>         dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   656                              <1> %assign i i+1 
   657                              <1> %endrep
   658 00000734 [7803]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   659                              <2> %assign i i+1
   660 0000073C [8503]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   661                              <2> %assign i i+1
   662 00000744 [9203]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   663                              <2> %assign i i+1
   664 0000074C [9F03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   665                              <2> %assign i i+1
   666 00000754 [AC03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   667                              <2> %assign i i+1
   668 0000075C [B903]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   669                              <2> %assign i i+1
   670 00000764 [C603]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   671                              <2> %assign i i+1
   672 0000076C [D303]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   673                              <2> %assign i i+1
   674 00000774 [E003]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   675                              <2> %assign i i+1
   676 0000077C [ED03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   677                              <2> %assign i i+1
   678 00000784 [FA03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   679                              <2> %assign i i+1
   680 0000078C [0704]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   681                              <2> %assign i i+1
   682 00000794 [1404]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   683                              <2> %assign i i+1
   684 0000079C [2104]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   685                              <2> %assign i i+1
   686 000007A4 [2E04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   687                              <2> %assign i i+1
   688 000007AC [3B04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   689                              <2> %assign i i+1
   690 000007B4 [4804]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   691                              <2> %assign i i+1
   692 000007BC [5504]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   693                              <2> %assign i i+1
   694 000007C4 [6204]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   695                              <2> %assign i i+1
   696 000007CC [6F04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   697                              <2> %assign i i+1
   698 000007D4 [7C04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   699                              <2> %assign i i+1
   700 000007DC [8904]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   701                              <2> %assign i i+1
   702 000007E4 [9604]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   703                              <2> %assign i i+1
   704 000007EC [A304]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   705                              <2> %assign i i+1
   706 000007F4 [B004]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   707                              <2> %assign i i+1
   708 000007FC [BD04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   709                              <2> %assign i i+1
   710 00000804 [CA04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   711                              <2> %assign i i+1
   712 0000080C [D704]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   713                              <2> %assign i i+1
   714 00000814 [E404]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   715                              <2> %assign i i+1
   716 0000081C [F104]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   717                              <2> %assign i i+1
   718 00000824 [FE04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   719                              <2> %assign i i+1
   720 0000082C [0B05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   721                              <2> %assign i i+1
   722 00000834 [1805]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   723                              <2> %assign i i+1
   724 0000083C [2505]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   725                              <2> %assign i i+1
   726 00000844 [3205]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   727                              <2> %assign i i+1
   728 0000084C [3F05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   729                              <2> %assign i i+1
   730 00000854 [4C05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   731                              <2> %assign i i+1
   732 0000085C [5905]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   733                              <2> %assign i i+1
   734 00000864 [6605]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   735                              <2> %assign i i+1
   736                              <1> 
   737                              <1> ;;INT 30h for os use and 3rd party use:
   738 0000086C [7408]1000008E0000  <1> 	dw newints,SYS_CODE_SEL,0x8E00,0
   739                              <1> idt_end:
   740                              <1> [BITS 32]
   741                                  [BITS 32]
   742                                      %include 'source/ints.asm'
   743                              <1> newints:	;;for great justice
   744 00000874 80FC00              <1> 	cmp ah, 0		;;originally 0
   745 00000877 0F8449000000        <1> 	je near intx0   ;;0=kills app
   746 0000087D 80FC01              <1> 	cmp ah, 1		;;originally 1
   747 00000880 0F8445000000        <1> 	je near intx1   ;;3=print string
   748 00000886 80FC02              <1> 	cmp ah, 2		;;originally 2
   749 00000889 0F8442000000        <1> 	je near intx2	;;4=read string
   750 0000088F 80FC03              <1> 	cmp ah, 3		;;originally 3
   751 00000892 0F843F000000        <1> 	je near intx3	;;6=clear screen
   752 00000898 80FC04              <1> 	cmp ah, 4		;;originally 4
   753 0000089B 0F843C000000        <1> 	je near intx4	;;5=read and print string
   754 000008A1 80FC05              <1> 	cmp ah, 5		;;originally 5		
   755 000008A4 0F8439000000        <1> 	je near intx5	;;2=get char
   756 000008AA 80FC06              <1> 	cmp ah, 6		;;originally 6
   757 000008AD 0F8436000000        <1> 	je near intx6	;;1=print char
   758 000008B3 80FC07              <1> 	cmp ah, 7
   759 000008B6 0F8433000000        <1> 	je near intx7	;;read file
   760 000008BC 80FC0A              <1> 	cmp ah, 10
   761 000008BF 0F8430000000        <1> 	je near intx10	;;create thread
   762 000008C5 C3                  <1> 	ret
   763                              <1> 	
   764                              <1> intx0:
   765 000008C6 E962040000          <1> 	jmp nwcmd
   766                              <1> intx1:
   767 000008CB E8F6010000          <1> 	call int303
   768 000008D0 C3                  <1> 	ret
   769                              <1> intx2:
   770 000008D1 E80D020000          <1> 	call int304
   771 000008D6 C3                  <1> 	ret
   772                              <1> intx3:
   773 000008D7 E88E020000          <1> 	call int306
   774 000008DC C3                  <1> 	ret
   775                              <1> intx4:
   776 000008DD E825020000          <1> 	call int305
   777 000008E2 C3                  <1> 	ret
   778                              <1> intx5:
   779 000008E3 E8A6010000          <1> 	call int302
   780 000008E8 C3                  <1> 	ret
   781                              <1> intx6:
   782 000008E9 E812000000          <1> 	call int301
   783 000008EE C3                  <1> 	ret
   784                              <1> intx7:
   785 000008EF E8BF350000          <1> 	call loadfile
   786 000008F4 C3                  <1> 	ret
   787                              <1> intx10:
   788                              <1> ;	call thread
   789 000008F5 C3                  <1> 	ret
   790                              <1> 	
   791 000008F6 0000                <1> linebeginpos dw 0
   792 000008F8 0000                <1> videobufpos: dw 0
   793 000008FA 0000                <1> charpos db 0,0
   794 000008FC A01E                <1> charxy db 160,30
   795 000008FE 0000                <1> charbuf dw 0
   796                              <1> 
   797                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
   798 00000900 E807000000          <1> 	call int301prnt
   799 00000905 E9A4020000          <1> 	jmp termcopy
   800 0000090A 00                  <1> termguion db 0
   801 0000090B 00                  <1> termcopyon db 0
   802                              <1> int301prnt:
   803 0000090C 88DC                <1> 	mov ah, bl
   804 0000090E 66A3[FE080000]      <1> 	mov [charbuf], ax
   805 00000914 BB00000000          <1> 	mov ebx, 0
   806 00000919 668B1D[F8080000]    <1> 	mov bx, [videobufpos]
   807 00000920 BF[850C0000]        <1> 	mov edi, videobuf2
   808 00000925 01DF                <1> 	add edi, ebx
   809 00000927 BA00000000          <1> 	mov edx, 0
   810 0000092C 668B15[FA080000]    <1> 	mov dx, [charpos]
   811 00000933 B900000000          <1> 	mov ecx, 0
   812 00000938 668B0D[FC080000]    <1> 	mov cx, [charxy]
   813 0000093F 3C0D                <1> 	cmp al, 13
   814 00000941 0F844B000000        <1> 	je near int301cr
   815 00000947 3C0A                <1> 	cmp al, 10
   816 00000949 0F8479000000        <1> 	je near int301nl
   817 0000094F 3C08                <1> 	cmp al, 8
   818 00000951 0F8452000000        <1> 	je near int301bs
   819 00000957 668907              <1> 	mov [edi], ax
   820 0000095A 81C702000000        <1> 	add edi, 2
   821 00000960 80C202              <1> 	add dl, 2
   822                              <1> donecrnl:
   823 00000963 38CA                <1> 	cmp dl, cl
   824 00000965 0F838E000000        <1> 	jae near int301eol
   825                              <1> doneeol:
   826 0000096B 38EE                <1> 	cmp dh, ch
   827 0000096D 0F83A4000000        <1> 	jae near int301scr	
   828                              <1> donescr:
   829 00000973 89FB                <1> 	mov ebx, edi
   830 00000975 81EB[850C0000]      <1> 	sub ebx, videobuf2
   831 0000097B 66891D[F8080000]    <1> 	mov [videobufpos], bx
   832 00000982 668915[FA080000]    <1> 	mov [charpos], dx
   833 00000989 66A1[FE080000]      <1> 	mov ax, [charbuf]
   834 0000098F 88E3                <1> 	mov bl, ah
   835 00000991 C3                  <1> 	ret
   836                              <1> 	
   837                              <1> 	int301cr:
   838 00000992 B200                <1> 		mov dl, 0
   839 00000994 BB00000000          <1> 		mov ebx, 0
   840 00000999 BF[850C0000]        <1> 		mov edi, videobuf2
   841 0000099E 668B1D[F6080000]    <1> 		mov bx, [linebeginpos]
   842 000009A5 01DF                <1> 		add edi, ebx
   843 000009A7 EBBA                <1> 		jmp donecrnl
   844                              <1> 			
   845                              <1> 	int301bs:
   846 000009A9 80FA00              <1> 		cmp dl, 0
   847 000009AC 740F                <1> 		je int301backline
   848                              <1> 	int301nobmr:
   849 000009AE 80EA02              <1> 		sub dl, 2
   850 000009B1 66B80000            <1> 		mov ax, 0
   851 000009B5 81EF02000000        <1> 		sub edi, 2
   852 000009BB EBA6                <1> 		jmp donecrnl
   853                              <1> 	int301backline:
   854 000009BD 88CA                <1> 		mov dl, cl
   855 000009BF 80FE00              <1> 		cmp dh, 0
   856 000009C2 74EA                <1> 		je int301nobmr
   857 000009C4 FECE                <1> 		dec dh
   858 000009C6 EBE6                <1> 		jmp int301nobmr
   859                              <1> 		
   860                              <1> 	int301nl:
   861 000009C8 FEC6                <1> 		inc dh
   862 000009CA BB00000000          <1> 		mov ebx, 0
   863 000009CF 88CB                <1> 		mov bl, cl
   864 000009D1 BF[850C0000]        <1> 		mov edi, videobuf2
   865 000009D6 66031D[F8080000]    <1> 		add bx, [videobufpos]
   866 000009DD 01DF                <1> 		add edi, ebx
   867 000009DF BB00000000          <1> 		mov ebx, 0
   868 000009E4 88CB                <1> 		mov bl, cl
   869 000009E6 66031D[F6080000]    <1> 		add bx, [linebeginpos]
   870 000009ED 66891D[F6080000]    <1> 		mov [linebeginpos], bx
   871 000009F4 E96AFFFFFF          <1> 		jmp donecrnl
   872                              <1> 		
   873                              <1> 	int301eol:
   874 000009F9 B200                <1> 		mov dl, 0
   875 000009FB FEC6                <1> 		inc dh
   876 000009FD BB00000000          <1> 		mov ebx, 0
   877 00000A02 88CB                <1> 		mov bl, cl
   878 00000A04 66031D[F6080000]    <1> 		add bx, [linebeginpos]
   879 00000A0B 66891D[F6080000]    <1> 		mov [linebeginpos], bx
   880 00000A12 E954FFFFFF          <1> 		jmp doneeol
   881                              <1> 		
   882                              <1> 	int301scr:
   883 00000A17 FECE                <1> 		dec dh
   884 00000A19 BF[850C0000]        <1> 		mov edi, videobuf2
   885 00000A1E BB00000000          <1> 		mov ebx, 0
   886 00000A23 88CB                <1> 		mov bl, cl
   887 00000A25 01FB                <1> 		add ebx, edi
   888                              <1> 	intscrollloop:
   889 00000A27 668B03              <1> 		mov ax, [ebx]
   890 00000A2A 668907              <1> 		mov [edi], ax
   891 00000A2D 81C702000000        <1> 		add edi, 2
   892 00000A33 81C302000000        <1> 		add ebx, 2
   893 00000A39 80E902              <1> 		sub cl, 2
   894 00000A3C 80F900              <1> 		cmp cl, 0
   895 00000A3F 75E6                <1> 		jne intscrollloop
   896 00000A41 8A0D[FC080000]      <1> 		mov cl, [charxy]
   897 00000A47 FECD                <1> 		dec ch
   898 00000A49 80FD01              <1> 		cmp ch, 1
   899 00000A4C 77D9                <1> 		ja intscrollloop
   900 00000A4E 66B80000            <1> 		mov ax, 0
   901 00000A52 81EF[850C0000]      <1> 		sub edi, videobuf2
   902 00000A58 66893D[F6080000]    <1> 		mov [linebeginpos], di
   903 00000A5F 81C7[850C0000]      <1> 		add edi, videobuf2
   904 00000A65 89FB                <1> 		mov ebx, edi
   905                              <1> 	intloopclear:
   906 00000A67 668903              <1> 		mov [ebx], ax
   907 00000A6A 81C302000000        <1> 		add ebx, 2
   908 00000A70 80E902              <1> 		sub cl, 2
   909 00000A73 80F900              <1> 		cmp cl, 0
   910 00000A76 75EF                <1> 		jne intloopclear
   911 00000A78 FECD                <1> 		dec ch
   912 00000A7A 80FD00              <1> 		cmp ch, 0
   913 00000A7D 75E8                <1> 		jne intloopclear
   914 00000A7F 668B0D[FC080000]    <1> 		mov cx, [charxy]
   915 00000A86 E9E8FEFFFF          <1> 		jmp donescr
   916                              <1> 		
   917                              <1> 		
   918 00000A8B 0000                <1> lastkey db 0,0
   919 00000A8D 00                  <1> trans db 0
   920                              <1> 
   921                              <1> 	int302:		;;get char, if al is 0, wait for key
   922 00000A8E A2[8D0A0000]        <1> 		mov [trans], al
   923                              <1> 	transcheck:
   924 00000A93 E8C8170000          <1> 		call guistartin
   925 00000A98 8A3D[8D0A0000]      <1> 		mov bh, [trans]
   926 00000A9E 66A1[8B0A0000]      <1> 		mov ax, [lastkey]
   927 00000AA4 80FC1C              <1> 		cmp ah, 1Ch
   928 00000AA7 740C                <1> 		je int302enter
   929 00000AA9 08C7                <1> 		or bh, al
   930 00000AAB 80FF00              <1> 		cmp bh, 0
   931 00000AAE 74E3                <1> 		je transcheck
   932 00000AB0 E907000000          <1> 		jmp int302end
   933                              <1> 	int302enter:
   934 00000AB5 B00D                <1> 		mov al, 13
   935 00000AB7 E900000000          <1> 		jmp int302end
   936                              <1> 	int302end:
   937 00000ABC C3                  <1> 		ret
   938                              <1> 	
   939 00000ABD 00                  <1> endkey303 db 0
   940                              <1>     print:
   941 00000ABE 66B80000            <1> 		mov ax, 0
   942 00000AC2 66BB0700            <1> 		mov bx, 7
   943                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
   944 00000AC6 A2[BD0A0000]        <1> 		mov [endkey303], al
   945                              <1> 	int303b:
   946 00000ACB 8A06                <1> 		mov al, [esi]
   947 00000ACD 3A05[BD0A0000]      <1> 		cmp al, [endkey303]
   948 00000AD3 7408                <1> 		je doneint303
   949 00000AD5 E832FEFFFF          <1> 		call int301prnt
   950 00000ADA 46                  <1> 		inc esi
   951 00000ADB EBEE                <1> 		jmp int303b
   952                              <1> 	doneint303:
   953 00000ADD E9CC000000          <1> 		jmp termcopy
   954                              <1> 	
   955 00000AE2 00                  <1> endkey304 db 0
   956                              <1> 	int304:	;;get line, al=last key, esi = buffer
   957 00000AE3 A2[E20A0000]        <1> 		mov [endkey304], al
   958                              <1> 	int304b:
   959 00000AE8 56                  <1> 		push esi
   960 00000AE9 B000                <1> 		mov al, 0
   961 00000AEB E89EFFFFFF          <1> 		call int302
   962 00000AF0 5E                  <1> 		pop esi
   963 00000AF1 8806                <1> 		mov [esi], al
   964 00000AF3 46                  <1> 		inc esi
   965 00000AF4 3A05[E20A0000]      <1> 		cmp al, [endkey304]
   966 00000AFA 75EC                <1> 		jne int304b
   967 00000AFC 4E                  <1> 		dec esi
   968 00000AFD C60600              <1> 		mov byte [esi], 0
   969 00000B00 C3                  <1> 	ret
   970                              <1> 	
   971 00000B01 00                  <1> endkey305 db 0
   972 00000B02 00                  <1> modkey305 db 0
   973 00000B03 00000000            <1> firstesi305 dd 0
   974                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
   975 00000B07 A2[010B0000]        <1> 		mov [endkey305], al
   976 00000B0C 881D[020B0000]      <1> 		mov [modkey305], bl
   977 00000B12 8935[030B0000]      <1> 		mov [firstesi305], esi
   978                              <1> 	int305b:
   979 00000B18 56                  <1> 		push esi
   980 00000B19 B000                <1> 		mov al, 0
   981 00000B1B E86EFFFFFF          <1> 		call int302
   982 00000B20 5E                  <1> 		pop esi
   983 00000B21 3C08                <1> 		cmp al, 8
   984 00000B23 0F841D000000        <1> 		je near int305bscheck
   985 00000B29 8806                <1> 		mov [esi], al
   986 00000B2B 46                  <1> 		inc esi
   987                              <1> 	bscheckequal:
   988 00000B2C 8A1D[020B0000]      <1> 		mov bl, [modkey305]
   989 00000B32 E8C9FDFFFF          <1> 		call int301
   990 00000B37 8A25[010B0000]      <1> 		mov ah, [endkey305]
   991 00000B3D 38E0                <1> 		cmp al, ah
   992 00000B3F 75D7                <1> 		jne int305b
   993 00000B41 4E                  <1> 		dec esi
   994 00000B42 C60600              <1> 		mov byte [esi], 0
   995 00000B45 C3                  <1> 		ret
   996                              <1> 	
   997                              <1> 	int305bscheck:
   998 00000B46 3B35[030B0000]      <1> 		cmp esi, [firstesi305]
   999 00000B4C 7702                <1> 		ja goodbscheck
  1000 00000B4E EBC8                <1> 		jmp int305b
  1001                              <1> 	goodbscheck:
  1002 00000B50 4E                  <1> 		dec esi
  1003 00000B51 C60600              <1> 		mov byte [esi], 0
  1004 00000B54 8A1D[020B0000]      <1> 		mov bl, [modkey305]
  1005 00000B5A E8A1FDFFFF          <1> 		call int301
  1006 00000B5F B020                <1> 		mov al, " "
  1007 00000B61 E89AFDFFFF          <1> 		call int301
  1008 00000B66 B008                <1> 		mov al, 8
  1009 00000B68 EBC2                <1> 		jmp bscheckequal
  1010                              <1> 		
  1011                              <1> 	clear:		
  1012                              <1> 	
  1013                              <1> 	int306:	;;clear screen
  1014 00000B6A 668B0D[FC080000]    <1> 		mov cx, [charxy]
  1015 00000B71 BF[850C0000]        <1> 		mov edi, videobuf2
  1016 00000B76 66B80000            <1> 		mov ax, 0
  1017 00000B7A 66A3[F6080000]      <1> 		mov [linebeginpos], ax
  1018 00000B80 66A3[F8080000]      <1> 		mov [videobufpos], ax
  1019 00000B86 66BA0000            <1> 		mov dx, 0
  1020 00000B8A 66A3[FA080000]      <1> 		mov [charpos], ax
  1021                              <1> 	int306b:
  1022 00000B90 668907              <1> 		mov [edi], ax
  1023 00000B93 81C702000000        <1> 		add edi, 2
  1024 00000B99 80E902              <1> 		sub cl, 2
  1025 00000B9C 80F900              <1> 		cmp cl, 0
  1026 00000B9F 75EF                <1> 		jne int306b
  1027 00000BA1 8A0D[FC080000]      <1> 		mov cl, [charxy]
  1028 00000BA7 FECD                <1> 		dec ch
  1029 00000BA9 80FD00              <1> 		cmp ch, 0
  1030 00000BAC 75E2                <1> 		jne int306b
  1031                              <1> 	
  1032                              <1> termcopy:	
  1033 00000BAE 60                  <1> 	pusha
  1034 00000BAF C605[C3280000]00    <1> 	mov byte [mouseselecton], 0
  1035 00000BB6 C605[0B090000]01    <1> 	mov byte [termcopyon], 1
  1036 00000BBD 803D[C4280000]00    <1> 	cmp byte [guion], 0
  1037 00000BC4 0F840D000000        <1> 	je near nowincopy
  1038 00000BCA 803D[0A090000]01    <1> 	cmp byte [termguion], 1
  1039 00000BD1 0F84C4280000        <1> 	je near windowvideocopy
  1040                              <1> nowincopy:
  1041 00000BD7 BE00000A00          <1> 	mov esi, 0xA0000
  1042 00000BDC B800000000          <1> 	mov eax, 0
  1043 00000BE1 66A1[00030000]      <1> 	mov ax, [cscache]
  1044 00000BE7 C1E004              <1> 	shl eax, 4
  1045 00000BEA 29C6                <1> 	sub esi, eax
  1046 00000BEC BF[850C0000]        <1> 	mov edi, videobuf2
  1047 00000BF1 B900000000          <1> 	mov ecx, 0
  1048 00000BF6 668B0D[FC080000]    <1> 	mov cx, [charxy]
  1049                              <1> nowincopy2:
  1050 00000BFD BB[6E410000]        <1> 	mov ebx, fonts
  1051 00000C02 B800000000          <1> 	mov eax, 0
  1052 00000C07 8A07                <1> 	mov al, [edi]
  1053 00000C09 C1E004              <1> 	shl eax, 4
  1054 00000C0C 01C3                <1> 	add ebx, eax
  1055 00000C0E 47                  <1> 	inc edi
  1056 00000C0F 8A27                <1> 	mov ah, [edi]
  1057 00000C11 BA00000000          <1> 	mov edx, 0
  1058 00000C16 8A15[FC080000]      <1> 	mov dl, [charxy]
  1059 00000C1C D1EA                <1> 	shr edx, 1
  1060 00000C1E C1C110              <1> 	rol ecx, 16
  1061 00000C21 B110                <1> 	mov cl, 16
  1062                              <1> nowinfont
  1063 00000C23 8A03                <1> 	mov al, [ebx]
  1064 00000C25 D0C8                <1> 	ror al, 1
  1065 00000C27 80FC07              <1> 	cmp ah, 7
  1066 00000C2A 7602                <1> 	jbe notnotfont
  1067 00000C2C F6D0                <1> 	not al
  1068                              <1> notnotfont:
  1069 00000C2E 8806                <1> 	mov [esi], al
  1070 00000C30 01D6                <1> 	add esi, edx
  1071 00000C32 43                  <1> 	inc ebx
  1072 00000C33 FEC9                <1> 	dec cl
  1073 00000C35 80F900              <1> 	cmp cl, 0
  1074 00000C38 75E9                <1> 	jne nowinfont
  1075 00000C3A C1E204              <1> 	shl edx, 4
  1076 00000C3D 29D6                <1> 	sub esi, edx
  1077 00000C3F C1C110              <1> 	rol ecx, 16
  1078                              <1> nopresentwinfont:
  1079 00000C42 47                  <1> 	inc edi
  1080 00000C43 46                  <1> 	inc esi
  1081 00000C44 80E902              <1> 	sub cl, 2
  1082 00000C47 80F900              <1> 	cmp cl, 0
  1083 00000C4A 75B1                <1> 	jne nowincopy2
  1084 00000C4C 8A0D[FC080000]      <1> 	mov cl, [charxy]
  1085 00000C52 BA00000000          <1> 	mov edx, 0
  1086 00000C57 88CA                <1> 	mov dl, cl
  1087 00000C59 D1EA                <1> 	shr edx, 1
  1088 00000C5B 29D6                <1> 	sub esi, edx
  1089 00000C5D C1E204              <1> 	shl edx, 4
  1090 00000C60 01D6                <1> 	add esi, edx
  1091 00000C62 FECD                <1> 	dec ch
  1092 00000C64 80FD00              <1> 	cmp ch, 0
  1093 00000C67 7594                <1> 	jne nowincopy2
  1094 00000C69 61                  <1> 	popa
  1095 00000C6A C3                  <1> 	ret
  1096                                      %include 'source/solleros.asm'
  1097                              <1> 	;SOLLEROS.ASM
  1098                              <1> os:
  1099 00000C6B E844060000          <1> 	call indexfiles
  1100 00000C70 B403                <1> 	mov ah, 3
  1101 00000C72 CD30                <1> 	int 30h
  1102 00000C74 BE[94400000]        <1> 	mov esi, pwdask
  1103 00000C79 E840FEFFFF          <1> 	call print
  1104 00000C7E E8A2160000          <1> 	call cursorgui
  1105                              <1> passcheck:
  1106 00000C83 BE[700A0000]        <1> 	mov esi, buftxt
  1107                              <1> passcheck2:
  1108 00000C88 B000                <1> 	mov al, 0
  1109 00000C8A B405                <1> 	mov ah, 5
  1110 00000C8C CD30                <1> 	int 30h
  1111 00000C8E 3C0D                <1> 	cmp al, 13
  1112 00000C90 0F8434000000        <1> 	je near gotpass
  1113 00000C96 3C08                <1> 	cmp al, 8
  1114 00000C98 0F840B000000        <1> 	je near backpass
  1115 00000C9E 8806                <1> 	mov [esi], al
  1116 00000CA0 46                  <1> 	inc esi
  1117 00000CA1 B02A                <1> 	mov al, '*'
  1118 00000CA3 B406                <1> 	mov ah, 6
  1119 00000CA5 CD30                <1> 	int 30h
  1120 00000CA7 EBDF                <1> 	jmp passcheck2
  1121                              <1> backpass:
  1122 00000CA9 81FE[700A0000]      <1> 	cmp esi, buftxt
  1123 00000CAF 0F84D3FFFFFF        <1> 	je near passcheck2
  1124 00000CB5 4E                  <1> 	dec esi
  1125 00000CB6 B008                <1> 	mov al, 8
  1126 00000CB8 B406                <1> 	mov ah, 6
  1127 00000CBA CD30                <1> 	int 30h
  1128 00000CBC B020                <1> 	mov al, " "
  1129 00000CBE B406                <1> 	mov ah, 6
  1130 00000CC0 CD30                <1> 	int 30h
  1131 00000CC2 B008                <1> 	mov al, 8
  1132 00000CC4 B406                <1> 	mov ah, 6
  1133 00000CC6 CD30                <1> 	int 30h
  1134 00000CC8 EBBE                <1> 	jmp passcheck2
  1135                              <1> gotpass:
  1136 00000CCA B000                <1> 	mov al,0
  1137 00000CCC 8806                <1> 	mov [esi], al
  1138 00000CCE BE[C5400000]        <1> 	mov esi, line
  1139 00000CD3 E8E6FDFFFF          <1> 	call print
  1140 00000CD8 BE[700A0000]        <1> 	mov esi, buftxt
  1141 00000CDD BB[A4400000]        <1> 	mov ebx, pwd
  1142 00000CE2 E811010000          <1> 	call tester
  1143 00000CE7 3C01                <1> 	cmp al, 1
  1144 00000CE9 7405                <1> 	je pwdrgt
  1145 00000CEB E97BFFFFFF          <1> 	jmp os
  1146 00000CF0 E875FEFFFF          <1> pwdrgt:	call clear
  1147 00000CF5 66B90002            <1> 	mov cx, 200h
  1148 00000CF9 BE[700A0000]        <1> 	mov esi, buftxt
  1149 00000CFE B000                <1> 	mov al, 0
  1150 00000D00 8806                <1> bufclr:	mov [esi], al
  1151 00000D02 46                  <1> 	inc esi
  1152 00000D03 E2FB                <1> 	loop bufclr
  1153 00000D05 E923000000          <1> 	jmp nwcmd
  1154                              <1> 
  1155                              <1> buftxtclear:
  1156 00000D0A B000                <1> 	mov al, 0
  1157 00000D0C BE[700A0000]        <1> 	mov esi, buftxt
  1158 00000D11 81FE[700C0000]      <1> clearbuftxt: cmp esi, buf2
  1159 00000D17 730E                <1> 	jae retbufclr
  1160 00000D19 8806                <1> 	mov [esi], al
  1161 00000D1B 46                  <1> 	inc esi
  1162 00000D1C EBF3                <1> 	jmp clearbuftxt
  1163                              <1> 
  1164 00000D1E 39DE                <1> clearitbuf: cmp esi, ebx
  1165 00000D20 7305                <1> 	jae retbufclr
  1166 00000D22 8806                <1> 	mov [esi], al
  1167 00000D24 46                  <1> 	inc esi
  1168 00000D25 EBF7                <1> 	jmp clearitbuf
  1169 00000D27 C3                  <1> retbufclr: ret
  1170                              <1> 
  1171 00000D28 E900000000          <1> full:	jmp nwcmd
  1172                              <1> 
  1173                              <1> 
  1174 00000D2D B001                <1> nwcmd:	mov al, 1
  1175 00000D2F 3805[69030000]      <1> 	cmp [BATCHISON], al
  1176 00000D35 0F832D000000        <1> 	jae near batchran
  1177 00000D3B B000                <1> cancel:	mov al, 0
  1178 00000D3D A2[00030000]        <1> 	mov [IFON], al
  1179 00000D42 A2[69030000]        <1> 	mov [BATCHISON], al
  1180 00000D47 BE[AD400000]        <1> 	mov esi, cmd
  1181 00000D4C E86DFDFFFF          <1> 	call print
  1182 00000D51 E8B4FFFFFF          <1> 	call buftxtclear
  1183 00000D56 BE[700A0000]        <1> 	mov esi, buftxt
  1184 00000D5B B00D                <1> 	mov al, 13
  1185 00000D5D B307                <1> 	mov bl, 7
  1186 00000D5F B404                <1> 	mov ah, 4
  1187 00000D61 CD30                <1> 	int 30h
  1188                              <1> gotcmd:	
  1189 00000D63 E914000000          <1> 	jmp run
  1190                              <1> 	
  1191                              <1> batchran:
  1192 00000D68 C3                  <1> 	ret
  1193                              <1> 
  1194 00000D69 E89CFFFFFF          <1> input:	call buftxtclear
  1195 00000D6E BE[700A0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1196 00000D73 B00D                <1> stdin:	mov al, 13
  1197 00000D75 B307                <1> 	mov bl, 7
  1198 00000D77 B404                <1> 	mov ah, 4
  1199 00000D79 CD30                <1> 	int 30h
  1200 00000D7B C3                  <1> 	ret
  1201                              <1> 
  1202 00000D7C BE[C5400000]        <1> run:	mov esi, line
  1203 00000D81 E838FDFFFF          <1> 		call print
  1204                              <1> progtest:
  1205 00000D86 BE[700A0000]        <1> 	mov esi, buftxt
  1206 00000D8B BB[6F030000]        <1> 	mov ebx, fileindex
  1207 00000D90 668B03              <1> prgnxt:	mov ax, [ebx]
  1208 00000D93 B105                <1> 	mov cl, 5
  1209 00000D95 B504                <1> 	mov ch, 4
  1210 00000D97 6639C8              <1> 	cmp ax, cx
  1211 00000D9A 740B                <1> 	je fndprg
  1212 00000D9C 43                  <1> 	inc ebx
  1213 00000D9D 81FB[6F050000]      <1> 	cmp ebx, fileindexend
  1214 00000DA3 7330                <1> 	jae prgnf
  1215 00000DA5 EBE9                <1> 	jmp prgnxt
  1216 00000DA7 81C302000000        <1> fndprg: add ebx, 2
  1217 00000DAD BE[700A0000]        <1> 	mov esi, buftxt
  1218 00000DB2 66B90000            <1> 	mov cx, 0
  1219 00000DB6 E877000000          <1> 	call cndtest
  1220 00000DBB 3C01                <1> 	cmp al, 1
  1221 00000DBD 7302                <1> 	jae prggood
  1222 00000DBF EBCF                <1> 	jmp prgnxt
  1223 00000DC1 81FB[6F050000]      <1> prggood: cmp ebx, fileindexend
  1224 00000DC7 732A                <1> 	jae prgdn
  1225 00000DC9 81C303000000        <1> 	add ebx, 3
  1226 00000DCF 8B3B                <1> 	mov edi, [ebx]
  1227 00000DD1 90                  <1> 	nop
  1228 00000DD2 90                  <1> 	nop
  1229 00000DD3 FFE7                <1> 	jmp edi
  1230 00000DD5 BE[7B400000]        <1> prgnf:	mov esi, notfound1
  1231 00000DDA E8DFFCFFFF          <1> 	call print
  1232 00000DDF BE[700A0000]        <1> 	mov esi, buftxt
  1233 00000DE4 E8D5FCFFFF          <1> 	call print
  1234 00000DE9 BE[85400000]        <1> 	mov esi, notfound2
  1235 00000DEE E8CBFCFFFF          <1> 	call print
  1236 00000DF3 E935FFFFFF          <1> prgdn:	jmp nwcmd
  1237                              <1> 
  1238                              <1> 
  1239                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1240 00000DF8 B000                <1> 	mov al, 0
  1241 00000DFA 8A06                <1> retest:	mov al, [esi]
  1242 00000DFC 8A23                <1> 	mov ah, [ebx]
  1243 00000DFE 3C00                <1> 	cmp al, 0
  1244 00000E00 7408                <1> 	je testtrue
  1245 00000E02 38E0                <1> 	cmp al, ah
  1246 00000E04 750C                <1> 	jne testfalse
  1247 00000E06 43                  <1> 	inc ebx
  1248 00000E07 46                  <1> 	inc esi
  1249 00000E08 EBF0                <1> 	jmp retest
  1250                              <1> testtrue:
  1251 00000E0A 80FC00              <1> 	cmp ah, 0
  1252 00000E0D 7503                <1> 	jne testfalse
  1253 00000E0F B001                <1> 	mov al, 1
  1254 00000E11 C3                  <1> 	ret
  1255                              <1> testfalse:
  1256 00000E12 B000                <1> 	mov al, 0
  1257 00000E14 C3                  <1> 	ret
  1258                              <1> 
  1259                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1260 00000E15 B000                <1> 	mov al, 0
  1261                              <1> opretest:
  1262 00000E17 8A06                <1> 	mov al, [esi]
  1263 00000E19 8A23                <1> 	mov ah, [ebx]
  1264 00000E1B 38E0                <1> 	cmp al, ah
  1265 00000E1D 7510                <1> 	jne optestfalse
  1266 00000E1F 80FC00              <1> 	cmp ah, 0
  1267 00000E22 7404                <1> 	je optesttrue
  1268 00000E24 43                  <1> 	inc ebx
  1269 00000E25 46                  <1> 	inc esi
  1270 00000E26 EBEF                <1> 	jmp opretest
  1271                              <1> optesttrue:
  1272 00000E28 3C00                <1> 	cmp al, 0
  1273 00000E2A 7503                <1> 	jne optestfalse
  1274 00000E2C B001                <1> 	mov al, 1
  1275 00000E2E C3                  <1> 	ret
  1276                              <1> optestfalse:
  1277 00000E2F B000                <1> 	mov al, 0
  1278 00000E31 C3                  <1> 	ret
  1279                              <1> 
  1280                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1281 00000E32 B000                <1> 	mov al, 0
  1282 00000E34 8A06                <1> cndretest:	mov al, [esi]
  1283 00000E36 8A23                <1> 	mov ah, [ebx]
  1284 00000E38 38CC                <1> 	cmp ah, cl
  1285 00000E3A 7408                <1> 	je cndtesttrue
  1286 00000E3C 38E0                <1> 	cmp al, ah
  1287 00000E3E 750B                <1> 	jne cndtestfalse
  1288 00000E40 43                  <1> 	inc ebx
  1289 00000E41 46                  <1> 	inc esi
  1290 00000E42 EBF0                <1> 	jmp cndretest
  1291                              <1> cndtesttrue:
  1292 00000E44 38C8                <1> 	cmp al, cl
  1293 00000E46 7506                <1> 	jne cndtestalmost
  1294 00000E48 B001                <1> 	mov al, 1
  1295 00000E4A C3                  <1> 	ret
  1296                              <1> cndtestfalse:
  1297 00000E4B B000                <1> 	mov al, 0
  1298 00000E4D C3                  <1> 	ret
  1299                              <1> cndtestalmost:
  1300 00000E4E B002                <1> 	mov al, 2
  1301 00000E50 C3                  <1> 	ret
  1302 00000E51 00                  <1> currentdir db 0
  1303 00000E52 BE[6F030000]        <1> dir:	mov esi, fileindex
  1304 00000E57 8A06                <1> 	dirnxt:	mov al, [esi]
  1305 00000E59 B400                <1> 		mov ah, 0
  1306 00000E5B 3C05                <1> 		cmp al, 5
  1307 00000E5D 744A                <1> 		je dirfnd
  1308 00000E5F 3C07                <1> 		cmp al, 7
  1309 00000E61 743C                <1> 		je dirfnd3
  1310 00000E63 3C06                <1> 		cmp al, 6
  1311 00000E65 7438                <1> 		je dirfnd3
  1312 00000E67 46                  <1> 		inc esi
  1313 00000E68 81FE[6F050000]      <1> 		cmp esi,  fileindexend
  1314 00000E6E 737B                <1> 		jae dirdn
  1315 00000E70 EBE5                <1> 		jmp dirnxt
  1316 00000E72 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1317 00000E7B 070400646F63756D65- <1>
  1318 00000E84 6E74000A0400666F6C- <1>
  1319 00000E8D 646572000504006578- <1>
  1320 00000E96 6563757461626C6500  <1>
  1321                              <1> 	dirfnd3:
  1322 00000E9F 46                  <1> 		inc esi
  1323 00000EA0 81FE[6F050000]      <1> 		cmp esi, fileindexend
  1324 00000EA6 76AF                <1> 		jbe dirnxt
  1325 00000EA8 4E                  <1> 		dec esi
  1326 00000EA9 46                  <1> 	dirfnd:	inc esi
  1327 00000EAA 8A06                <1> 		mov al, [esi]
  1328 00000EAC B400                <1> 		mov ah, 0
  1329 00000EAE 3C04                <1> 		cmp al, 4
  1330 00000EB0 740B                <1> 		je dirfnd2
  1331 00000EB2 46                  <1> 		inc esi
  1332 00000EB3 81FE[6F050000]      <1> 		cmp esi,  fileindexend
  1333 00000EB9 7330                <1> 		jae dirdn
  1334 00000EBB EB9A                <1> 		jmp dirnxt
  1335 00000EBD 81C601000000        <1> 	dirfnd2: add esi, 1
  1336 00000EC3 E8F6FBFFFF          <1> 		call print
  1337 00000EC8 8935[F00E0000]      <1> 		mov [esidir], esi
  1338 00000ECE BE[C5400000]        <1> 		mov esi, line
  1339 00000ED3 E8E6FBFFFF          <1> 		call print
  1340 00000ED8 8B35[F00E0000]      <1> 		mov esi, [esidir]
  1341 00000EDE 81FE[6F050000]      <1> 		cmp esi,  fileindexend
  1342 00000EE4 7305                <1> 		jae dirdn
  1343 00000EE6 E96CFFFFFF          <1> 		jmp dirnxt
  1344 00000EEB E93DFEFFFF          <1> 	dirdn:	jmp nwcmd
  1345 00000EF0 00000000            <1> esidir dd 0
  1346                              <1> 
  1347                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1348                              <1> 		                ;ends if array seperator is found backwards after 0
  1349                              <1> 	arnxt:	      
  1350 00000EF4 88E8                <1> 		mov al, ch
  1351 00000EF6 88CC                <1> 		mov ah, cl        
  1352 00000EF8 663906              <1> 		cmp [esi], ax
  1353 00000EFB 744D                <1> 		je ardn
  1354 00000EFD 66390E              <1> 		cmp [esi], cx
  1355 00000F00 7407                <1> 		je arfnd
  1356 00000F02 46                  <1> 		inc esi
  1357 00000F03 39DE                <1> 		cmp esi, ebx
  1358 00000F05 7343                <1> 		jae ardn
  1359 00000F07 EBEB                <1> 		jmp arnxt
  1360 00000F09 81C602000000        <1> 	arfnd: add esi, 2
  1361 00000F0F 891D[4B0F0000]      <1> 		mov [arbx], ebx
  1362 00000F15 890D[4F0F0000]      <1> 		mov [arcx], ecx
  1363 00000F1B E89EFBFFFF          <1> 		call print
  1364 00000F20 8935[510F0000]      <1> 		mov [arsi], esi
  1365 00000F26 BE[C5400000]        <1> 		mov esi, line
  1366 00000F2B E88EFBFFFF          <1> 		call print
  1367 00000F30 8B1D[4B0F0000]      <1> 		mov ebx, [arbx]
  1368 00000F36 668B0D[4F0F0000]    <1> 		mov cx, [arcx]
  1369 00000F3D 8B35[510F0000]      <1> 		mov esi, [arsi]
  1370 00000F43 46                  <1> 		inc esi
  1371 00000F44 39DE                <1> 		cmp esi, ebx
  1372 00000F46 7302                <1> 		jae ardn
  1373 00000F48 EBAA                <1> 		jmp arnxt
  1374 00000F4A C3                  <1> 	ardn:	ret
  1375 00000F4B 00000000            <1> arbx:	dw 0,0
  1376 00000F4F 0000                <1> arcx:	db 0,0
  1377 00000F51 00000000            <1> arsi:	dw 0,0
  1378                              <1> 
  1379                              <1> clearbuffer:
  1380 00000F55 BE[700C0000]        <1> 	mov esi, buf2
  1381 00000F5A B030                <1> 	mov al, '0'
  1382 00000F5C 81FE[840C0000]      <1> clearbuf: cmp esi, numbuf
  1383 00000F62 7305                <1> 	jae doneclearbuff
  1384 00000F64 8806                <1> 	mov [esi], al
  1385 00000F66 46                  <1> 	inc esi
  1386 00000F67 EBF3                <1> 	jmp clearbuf
  1387                              <1> doneclearbuff: 
  1388 00000F69 C3                  <1> 		ret
  1389                              <1> 
  1390                              <1> convert:
  1391 00000F6A 4E                  <1> 	dec esi
  1392 00000F6B 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  1393                              <1> cnvrt:
  1394 00000F6D 89DE                <1> 	mov esi, ebx
  1395 00000F6F 81EE09000000        <1> 	sub esi, 9
  1396 00000F75 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  1397 00000F7B 720A                <1> 	jb ten8
  1398 00000F7D 81E900CA9A3B        <1> 	sub ecx, 1000000000
  1399 00000F83 FE06                <1> 	inc byte [esi]
  1400 00000F85 EBE6                <1> 	jmp cnvrt
  1401 00000F87 46                  <1> ten8:	inc esi
  1402 00000F88 81F900E1F505        <1> 	cmp ecx, 100000000
  1403 00000F8E 720A                <1> 	jb ten7
  1404 00000F90 81E900E1F505        <1> 	sub ecx, 100000000
  1405 00000F96 FE06                <1> 	inc byte [esi]
  1406 00000F98 EBD3                <1> 	jmp cnvrt
  1407 00000F9A 46                  <1> ten7:	inc esi
  1408 00000F9B 81F980969800        <1> 	cmp ecx, 10000000
  1409 00000FA1 720A                <1> 	jb ten6
  1410 00000FA3 81E980969800        <1> 	sub ecx, 10000000
  1411 00000FA9 FE06                <1> 	inc byte [esi]
  1412 00000FAB EBC0                <1> 	jmp cnvrt
  1413 00000FAD 46                  <1> ten6:	inc esi
  1414 00000FAE 81F940420F00        <1> 	cmp ecx, 1000000
  1415 00000FB4 720A                <1> 	jb ten5
  1416 00000FB6 81E940420F00        <1> 	sub ecx, 1000000
  1417 00000FBC FE06                <1> 	inc byte [esi]
  1418 00000FBE EBAD                <1> 	jmp cnvrt
  1419 00000FC0 46                  <1> ten5:	inc esi
  1420 00000FC1 81F9A0860100        <1> 	cmp ecx, 100000
  1421 00000FC7 720A                <1> 	jb ten4
  1422 00000FC9 81E9A0860100        <1> 	sub ecx, 100000
  1423 00000FCF FE06                <1> 	inc byte [esi]
  1424 00000FD1 EB9A                <1> 	jmp cnvrt
  1425 00000FD3 46                  <1> ten4:	inc esi
  1426 00000FD4 81F910270000        <1> 	cmp ecx, 10000
  1427 00000FDA 720A                <1> 	jb ten3
  1428 00000FDC 81E910270000        <1> 	sub ecx, 10000
  1429 00000FE2 FE06                <1> 	inc byte [esi]
  1430 00000FE4 EB87                <1> 	jmp cnvrt
  1431 00000FE6 46                  <1> ten3:	inc esi
  1432 00000FE7 81F9E8030000        <1> 	cmp ecx, 1000
  1433 00000FED 720D                <1> 	jb ten2
  1434 00000FEF 81E9E8030000        <1> 	sub ecx, 1000
  1435 00000FF5 FE06                <1> 	inc byte [esi]
  1436 00000FF7 E971FFFFFF          <1> 	jmp cnvrt
  1437 00000FFC 46                  <1> ten2:	inc esi
  1438 00000FFD 81F964000000        <1> 	cmp ecx, 100
  1439 00001003 720D                <1> 	jb ten1
  1440 00001005 81E964000000        <1> 	sub ecx, 100
  1441 0000100B FE06                <1> 	inc byte [esi]
  1442 0000100D E95BFFFFFF          <1> 	jmp cnvrt
  1443 00001012 46                  <1> ten1:	inc esi
  1444 00001013 81F90A000000        <1> 	cmp ecx, 10
  1445 00001019 720D                <1> 	jb ten0
  1446 0000101B 81E90A000000        <1> 	sub ecx, 10
  1447 00001021 FE06                <1> 	inc byte [esi]
  1448 00001023 E945FFFFFF          <1> 	jmp cnvrt
  1449 00001028 46                  <1> ten0:	inc esi
  1450 00001029 81F901000000        <1> 	cmp ecx, 1
  1451 0000102F 720D                <1> 	jb tendn
  1452 00001031 81E901000000        <1> 	sub ecx, 1
  1453 00001037 FE06                <1> 	inc byte [esi]
  1454 00001039 E92FFFFFFF          <1> 	jmp cnvrt
  1455                              <1> tendn:
  1456 0000103E C3                  <1> 	ret
  1457                              <1> 
  1458                              <1> 	
  1459                              <1> 
  1460 0000103F 00<rept>            <1> hexnumber times 8 db 0
  1461 00001047 202000              <1> hexnumberend db "  ",0
  1462                              <1> 
  1463                              <1> 
  1464 0000104A 00000000            <1> sibuf dw 0,0
  1465 0000104E 00000000            <1> dibuf dw 0,0
  1466                              <1> 
  1467                              <1> converthex:
  1468                              <1> clearbufferhex:
  1469 00001052 B030                <1> 	mov al, '0'
  1470 00001054 8935[4A100000]      <1> 	mov [sibuf], esi
  1471 0000105A 893D[4E100000]      <1> 	mov [dibuf], edi
  1472 00001060 39FE                <1> clearbufhex: cmp esi, edi
  1473 00001062 7305                <1> 	jae doneclearbuffhex
  1474 00001064 8806                <1> 	mov [esi], al
  1475 00001066 46                  <1> 	inc esi
  1476 00001067 EBF7                <1> 	jmp clearbufhex
  1477                              <1> doneclearbuffhex:
  1478 00001069 8B35[4E100000]      <1> 	mov esi, [dibuf]
  1479 0000106F 89CA                <1> 	mov edx, ecx
  1480 00001071 81FA00000000        <1> 	cmp edx, 0
  1481 00001077 741F                <1> 	je donenxtephx
  1482                              <1> nxtexphx:	;0x10^x
  1483 00001079 4E                  <1> 	dec esi
  1484 0000107A 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  1485 0000107C 89D1                <1> 	mov ecx, edx
  1486 0000107E 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  1487 00001084 E81C000000          <1> 	call cnvrtexphx		;;get this digit
  1488 00001089 89FE                <1> 	mov esi, edi
  1489 0000108B C1EA04              <1> 	shr edx, 4		;;next digit
  1490 0000108E 81FA00000000        <1> 	cmp edx, 0
  1491 00001094 7402                <1> 	je donenxtephx
  1492 00001096 EBE1                <1> 	jmp nxtexphx
  1493                              <1> donenxtephx:
  1494 00001098 8B35[4A100000]      <1> 	mov esi, [sibuf]
  1495 0000109E 8B3D[4E100000]      <1> 	mov edi, [dibuf]
  1496 000010A4 C3                  <1> 	ret
  1497                              <1> cnvrtexphx:			;;convert this number
  1498 000010A5 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  1499 000010A7 81F900000000        <1> 	cmp ecx, 0
  1500 000010AD 7429                <1> 	je zerohx
  1501 000010AF 8A06                <1> cnvrthx:  mov al, [esi]
  1502 000010B1 3C39                <1> 	cmp al, '9'
  1503 000010B3 741B                <1> 	je lettershx
  1504 000010B5 3C46                <1> lttrhxdn: cmp al, 'F'
  1505 000010B7 741F                <1> 	je zerohx
  1506 000010B9 8A06                <1> 	mov al, [esi]
  1507 000010BB FEC0                <1> 	inc al
  1508 000010BD 8806                <1> 	mov [esi], al
  1509 000010BF 89DE                <1> 	mov esi, ebx
  1510 000010C1 81E901000000        <1> cnvrtlphx: sub ecx, 1
  1511 000010C7 81F900000000        <1> 	cmp ecx, 0
  1512 000010CD 75E0                <1> 	jne cnvrthx
  1513 000010CF C3                  <1> 	ret
  1514                              <1> lettershx:
  1515 000010D0 B041                <1> 	mov al, 'A'
  1516 000010D2 2C01                <1> 	sub al, 1
  1517 000010D4 8806                <1> 	mov [esi], al
  1518 000010D6 EBDD                <1> 	jmp lttrhxdn
  1519 000010D8 B030                <1> zerohx:	mov al, '0'
  1520 000010DA 8806                <1> 	mov [esi], al
  1521 000010DC 4E                  <1> 	dec esi
  1522 000010DD 8A06                <1> 	mov al, [esi]
  1523 000010DF 3C46                <1> 	cmp al, 'F'
  1524 000010E1 74F5                <1> 	je zerohx
  1525 000010E3 41                  <1> 	inc ecx
  1526 000010E4 EBDB                <1> 	jmp cnvrtlphx
  1527                              <1> 
  1528 000010E6 01                  <1> firsthexshown db 1
  1529                              <1> showhex:
  1530 000010E7 60                  <1> 	pusha
  1531 000010E8 BE[3F100000]        <1> 	mov esi, hexnumber
  1532 000010ED BF[47100000]        <1> 	mov edi, hexnumberend
  1533 000010F2 E85BFFFFFF          <1> 	call converthex
  1534 000010F7 803D[E6100000]01    <1> 	cmp byte [firsthexshown], 1
  1535 000010FE 7504                <1> 	jne showthathex
  1536 00001100 66BA0000            <1> 	mov dx, 0
  1537                              <1> showthathex:
  1538 00001104 803D[E6100000]03    <1> 	cmp byte [firsthexshown], 3
  1539 0000110B 750A                <1> 	jne nonewhexline
  1540 0000110D BE[C5400000]        <1> 	mov esi, line
  1541 00001112 E8A7F9FFFF          <1> 	call print
  1542                              <1> nonewhexline:
  1543 00001117 803D[E6100000]04    <1> 	cmp byte [firsthexshown], 4
  1544 0000111E 7527                <1> 	jne notabfixhex
  1545 00001120 B1A0                <1> 	mov cl, 160
  1546 00001122 28D1                <1> 	sub cl, dl
  1547 00001124 C0E905              <1> 	shr cl, 5
  1548 00001127 C0E105              <1> 	shl cl, 5
  1549 0000112A 80F900              <1> 	cmp cl, 0
  1550 0000112D 750F                <1> 	jne nonewlinetabfixhex
  1551 0000112F BE[C5400000]        <1> 	mov esi, line
  1552 00001134 E885F9FFFF          <1> 	call print
  1553 00001139 E909000000          <1> 	jmp notabfixhex
  1554                              <1> nonewlinetabfixhex:
  1555 0000113E 80C20F              <1> 	add dl, 15
  1556 00001141 C0EA04              <1> 	shr dl, 4
  1557 00001144 C0E204              <1> 	shl dl, 4
  1558                              <1> notabfixhex:
  1559 00001147 BE[3F100000]        <1> 	mov esi, hexnumber
  1560 0000114C E86DF9FFFF          <1> 	call print
  1561 00001151 803D[E6100000]02    <1> 	cmp byte [firsthexshown], 2
  1562 00001158 750A                <1> 	jne hexshown
  1563 0000115A BE[C5400000]        <1> 	mov esi, line
  1564 0000115F E85AF9FFFF          <1> 	call print
  1565                              <1> hexshown:
  1566 00001164 C605[E6100000]00    <1> 	mov byte [firsthexshown], 0
  1567 0000116B 61                  <1> 	popa
  1568 0000116C C3                  <1> 	ret
  1569                              <1> 
  1570                              <1> 
  1571 0000116D 303030303030303030- <1> decnumber db "00000000000000"
  1572 00001176 3030303030          <1>
  1573 0000117B 2000                <1> decnumberend: db " ",0
  1574                              <1> 
  1575                              <1> showdec: ;;same as showhex, just uses decimal conversion
  1576 0000117D 60                  <1> 	pusha
  1577 0000117E BF[6D110000]        <1> 	mov edi, decnumber
  1578 00001183 BE[7B110000]        <1> 	mov esi, decnumberend
  1579                              <1> cleardecbuf:
  1580 00001188 C60730              <1> 	mov byte [edi], '0'
  1581 0000118B 47                  <1> 	inc edi
  1582 0000118C 39F7                <1> 	cmp edi, esi
  1583 0000118E 72F8                <1> 	jb cleardecbuf
  1584 00001190 BF[6D110000]        <1> 	mov edi, decnumber
  1585 00001195 E8D0FDFFFF          <1> 	call convert
  1586 0000119A 803D[E6100000]01    <1> 	cmp byte [firsthexshown], 1
  1587 000011A1 7504                <1> 	jne showthatdec
  1588 000011A3 66BA0000            <1> 	mov dx, 0
  1589                              <1> showthatdec:
  1590 000011A7 803D[E6100000]03    <1> 	cmp byte [firsthexshown], 3
  1591 000011AE 750A                <1> 	jne nonewdecline
  1592 000011B0 BE[C5400000]        <1> 	mov esi, line
  1593 000011B5 E804F9FFFF          <1> 	call print
  1594                              <1> nonewdecline:
  1595 000011BA 803D[E6100000]04    <1> 	cmp byte [firsthexshown], 4
  1596 000011C1 7527                <1> 	jne notabfixdec
  1597 000011C3 B1A0                <1> 	mov cl, 160
  1598 000011C5 28D1                <1> 	sub cl, dl
  1599 000011C7 C0E905              <1> 	shr cl, 5
  1600 000011CA C0E105              <1> 	shl cl, 5
  1601 000011CD 80F900              <1> 	cmp cl, 0
  1602 000011D0 750F                <1> 	jne nonewlinetabfixdec
  1603 000011D2 BE[C5400000]        <1> 	mov esi, line
  1604 000011D7 E8E2F8FFFF          <1> 	call print
  1605 000011DC E909000000          <1> 	jmp notabfixdec
  1606                              <1> nonewlinetabfixdec:
  1607 000011E1 80C20F              <1> 	add dl, 15
  1608 000011E4 C0EA04              <1> 	shr dl, 4
  1609 000011E7 C0E204              <1> 	shl dl, 4
  1610                              <1> notabfixdec:
  1611 000011EA BE[6D110000]        <1> 	mov esi, decnumber
  1612 000011EF 4E                  <1> 	dec esi
  1613                              <1> sifind:
  1614 000011F0 46                  <1> 	inc esi
  1615 000011F1 803E30              <1> 	cmp byte [esi], '0'
  1616 000011F4 74FA                <1> 	je sifind
  1617 000011F6 E8C3F8FFFF          <1> 	call print
  1618 000011FB 803D[E6100000]02    <1> 	cmp byte [firsthexshown], 2
  1619 00001202 750A                <1> 	jne decshown
  1620 00001204 BE[C5400000]        <1> 	mov esi, line
  1621 00001209 E8B0F8FFFF          <1> 	call print
  1622                              <1> decshown:
  1623 0000120E C605[E6100000]00    <1> 	mov byte [firsthexshown], 0
  1624 00001215 61                  <1> 	popa
  1625 00001216 C3                  <1> 	ret
  1626                              <1> 	
  1627                              <1> cnvrttxt: 
  1628 00001217 B900000000          <1> 	mov ecx, 0
  1629 0000121C B800000000          <1> 	mov eax, 0
  1630 00001221 BA00000000          <1> 	mov edx, 0
  1631 00001226 BB00000000          <1> 	mov ebx, 0
  1632 0000122B 4E                  <1> 	dec esi
  1633                              <1> cnvrtlptxt:
  1634 0000122C 46                  <1> 	inc esi
  1635 0000122D 8A06                <1> 	mov al, [esi]
  1636 0000122F 3C00                <1> 	cmp al, 0
  1637 00001231 75F9                <1> 	jne cnvrtlptxt
  1638 00001233 4E                  <1> 	dec esi
  1639 00001234 8A06                <1> 	mov al, [esi]
  1640 00001236 3C30                <1> 	cmp al, '0'
  1641 00001238 7504                <1> 	jne txtlp
  1642 0000123A 39FE                <1> zerotest: cmp esi, edi
  1643 0000123C 745B                <1> 	je donecnvrt
  1644                              <1> txtlp:	
  1645 0000123E B800000000          <1> 	mov eax, 0
  1646 00001243 8A06                <1> 	mov al, [esi]
  1647 00001245 3C3D                <1> 	cmp al, '='
  1648 00001247 7450                <1> 	je donecnvrt
  1649 00001249 3C30                <1> 	cmp al, 48
  1650 0000124B 724C                <1> 	jb donecnvrt
  1651 0000124D 3C23                <1> 	cmp al, '#'
  1652 0000124F 7448                <1> 	je donecnvrt
  1653 00001251 39FE                <1> 	cmp esi, edi
  1654 00001253 7244                <1> 	jb donecnvrt
  1655 00001255 81F900000000        <1> 	cmp ecx, 0
  1656 0000125B 7708                <1> 	ja exp
  1657 0000125D 2C30                <1> noexp:	sub al, 48
  1658 0000125F 01C2                <1> 	add edx, eax
  1659 00001261 4E                  <1> 	dec esi
  1660 00001262 41                  <1> 	inc ecx
  1661 00001263 EBD9                <1> 	jmp txtlp
  1662 00001265 81F900000000        <1> exp:	cmp ecx, 0
  1663 0000126B 74F0                <1> 	je noexp
  1664 0000126D 2C30                <1> 	sub al, 48
  1665 0000126F 51                  <1> 	push ecx
  1666 00001270 89C3                <1> expmul:	mov ebx, eax
  1667 00001272 01D8                <1> 	add eax, ebx
  1668 00001274 01D8                <1> 	add eax, ebx
  1669 00001276 01D8                <1> 	add eax, ebx
  1670 00001278 01D8                <1> 	add eax, ebx
  1671 0000127A 01D8                <1> 	add eax, ebx
  1672 0000127C 01D8                <1> 	add eax, ebx
  1673 0000127E 01D8                <1> 	add eax, ebx
  1674 00001280 01D8                <1> 	add eax, ebx
  1675 00001282 01D8                <1> 	add eax, ebx
  1676 00001284 81E901000000        <1> 	sub ecx, 1
  1677 0000128A 81F900000000        <1> 	cmp ecx, 0
  1678 00001290 77DE                <1> 	ja expmul
  1679 00001292 01C2                <1> 	add edx, eax
  1680 00001294 59                  <1> 	pop ecx
  1681 00001295 4E                  <1> 	dec esi
  1682 00001296 41                  <1> 	inc ecx
  1683 00001297 EBA5                <1> 	jmp txtlp
  1684 00001299 89D1                <1> donecnvrt: mov ecx, edx
  1685 0000129B C3                  <1> 	ret
  1686                                      %include 'source/builtinprogs.asm'
  1687 0000129C 050406040704        <1> filetypes db 5,4,6,4,7,4
  1688                              <1> progstart:		;programs start here
  1689 000012A2 0504696E64657800    <1> db 5,4,"index",0
  1690 000012AA E805000000          <1> 	call indexfiles
  1691 000012AF E979FAFFFF          <1> 	jmp nwcmd
  1692                              <1> indexfiles:
  1693 000012B4 BE[A2120000]        <1> 	mov esi, progstart
  1694 000012B9 BB[6F030000]        <1> 	mov ebx, fileindex
  1695 000012BE BF[A2120000]        <1> 	mov edi, progstart
  1696 000012C3 81EF02000000        <1> 	sub edi, 2
  1697                              <1> indexloop:
  1698 000012C9 668B0E              <1> 	mov cx, [esi]
  1699                              <1> 	indexloop2:
  1700 000012CC 663B0F              <1> 		cmp cx, [edi]
  1701 000012CF 7424                <1> 		je indexloop2done
  1702 000012D1 81EF02000000        <1> 		sub edi, 2
  1703 000012D7 81FF[9C120000]      <1> 		cmp edi, filetypes
  1704 000012DD 73ED                <1> 		jae indexloop2
  1705 000012DF BF[A2120000]        <1> 	mov edi, progstart
  1706 000012E4 81EF02000000        <1> 	sub edi, 2
  1707 000012EA 46                  <1> 	inc esi
  1708 000012EB 81FE[E3210000]      <1> 	cmp esi, batchprogend
  1709 000012F1 734E                <1> 	jae indexloopdone
  1710 000012F3 EBD4                <1> 	jmp indexloop
  1711                              <1> indexloop2done:
  1712 000012F5 66890B              <1> 	mov [ebx], cx
  1713 000012F8 81C302000000        <1> 	add ebx, 2
  1714 000012FE 81C602000000        <1> 	add esi, 2
  1715                              <1> 	nameindex:
  1716 00001304 8A0E                <1> 		mov cl, [esi]
  1717 00001306 80F900              <1> 		cmp cl, 0
  1718 00001309 7406                <1> 		je nameindexdone
  1719 0000130B 880B                <1> 		mov [ebx], cl
  1720 0000130D 46                  <1> 		inc esi
  1721 0000130E 43                  <1> 		inc ebx
  1722 0000130F EBF3                <1> 		jmp nameindex
  1723                              <1> 	nameindexdone:
  1724 00001311 43                  <1> 		inc ebx
  1725 00001312 66C7030000          <1> 		mov word [ebx], 0
  1726 00001317 81C302000000        <1> 		add ebx, 2
  1727 0000131D 46                  <1> 		inc esi
  1728 0000131E 8933                <1> 		mov [ebx], esi
  1729 00001320 81C304000000        <1> 		add ebx, 4
  1730 00001326 66C7030000          <1> 		mov word [ebx], 0
  1731 0000132B 81C302000000        <1> 		add ebx, 2
  1732 00001331 81FB[6F050000]      <1> 		cmp ebx, fileindexend
  1733 00001337 7308                <1> 		jae indexloopdone
  1734 00001339 81C601000000        <1> 		add esi, 1
  1735 0000133F EB88                <1> 		jmp indexloop
  1736 00001341 C3                  <1> indexloopdone: 	ret
  1737                              <1> 
  1738                              <1> 
  1739 00001342 050473686F77696E64- <1> db 5,4,"showindex",0
  1740 0000134B 657800              <1>
  1741 0000134E BE[6F030000]        <1> 	mov esi, fileindex
  1742 00001353 BB[6F050000]        <1> 	mov ebx, fileindexend
  1743 00001358 B105                <1> 	mov cl, 5
  1744 0000135A B504                <1> 	mov ch, 4
  1745 0000135C E893FBFFFF          <1> 	call array
  1746 00001361 BE[6F030000]        <1> 	mov esi, fileindex
  1747 00001366 BB[6F050000]        <1> 	mov ebx, fileindexend
  1748 0000136B B106                <1> 	mov cl, 6
  1749 0000136D B504                <1> 	mov ch, 4
  1750 0000136F E880FBFFFF          <1> 	call array
  1751 00001374 BE[6F030000]        <1> 	mov esi, fileindex
  1752 00001379 BB[6F050000]        <1> 	mov ebx, fileindexend
  1753 0000137E B107                <1> 	mov cl, 7
  1754 00001380 B504                <1> 	mov ch, 4
  1755 00001382 E86DFBFFFF          <1> 	call array
  1756 00001387 E9A1F9FFFF          <1> 	jmp nwcmd
  1757                              <1> 
  1758 0000138C 05046C7300          <1> db 5,4,"ls",0
  1759 00001391 BE[A2120000]        <1> 	lscmd:	mov esi, progstart
  1760 00001396 BB[E3210000]        <1> 		mov ebx, progend
  1761 0000139B E9B2FAFFFF          <1> 		jmp dir
  1762                              <1> 		
  1763 000013A0 05046469736B00      <1> db 5,4,"disk",0
  1764 000013A7 B900000000          <1> 		mov ecx, 0
  1765 000013AC 8A0D[42000000]      <1> 		mov cl, [DriveNumber]
  1766 000013B2 C605[E6100000]00    <1> 		mov byte [firsthexshown], 0
  1767 000013B9 E829FDFFFF          <1> 		call showhex
  1768 000013BE BE[C5400000]        <1> 		mov esi, line
  1769 000013C3 E8F6F6FFFF          <1> 		call print
  1770 000013C8 BE[1D400000]        <1> 		mov esi, diskfileindex
  1771                              <1> 	diskindexdir:
  1772 000013CD E8ECF6FFFF          <1> 		call print
  1773 000013D2 8B4E05              <1> 		mov ecx, [esi + 5]
  1774 000013D5 C605[E6100000]03    <1> 		mov byte [firsthexshown], 3
  1775 000013DC E89CFDFFFF          <1> 		call showdec
  1776 000013E1 56                  <1> 		push esi
  1777 000013E2 BE[C5400000]        <1> 		mov esi, line
  1778 000013E7 E8D2F6FFFF          <1> 		call print
  1779 000013EC 5E                  <1> 		pop esi
  1780 000013ED 81C609000000        <1> 		add esi, 9
  1781 000013F3 81FE[76400000]      <1> 		cmp esi, enddiskfileindex
  1782 000013F9 72D2                <1> 		jb diskindexdir
  1783 000013FB E92DF9FFFF          <1> 		jmp nwcmd
  1784                              <1> 
  1785 00001400 0504636C65617200    <1> db 5,4,"clear",0
  1786 00001408 E85DF7FFFF          <1> 	cls:	call clear
  1787 0000140D E91BF9FFFF          <1> 		jmp nwcmd
  1788                              <1> 		
  1789 00001412 05047761697400      <1> db 5,4,"wait",0
  1790 00001419 B000                <1> 		mov al, 0
  1791 0000141B E86EF6FFFF          <1> 		call int302
  1792 00001420 E908F9FFFF          <1> 		jmp nwcmd
  1793                              <1> 
  1794 00001425 05046563686F00      <1> db 5,4,"echo",0
  1795 0000142C BE[700A0000]        <1> 	echo:	mov esi, buftxt
  1796 00001431 81C605000000        <1> 		add esi, 5
  1797 00001437 8A06                <1> 		mov al, [esi]
  1798 00001439 3C24                <1> 		cmp al, '$'
  1799 0000143B 7414                <1> 		je echovr
  1800 0000143D E87CF6FFFF          <1> 		call print
  1801 00001442 BE[C5400000]        <1> 		mov esi, line
  1802 00001447 E872F6FFFF          <1> 		call print
  1803 0000144C E9DCF8FFFF          <1> 		jmp nwcmd
  1804 00001451 BB[6F050000]        <1> 	echovr:	mov ebx, variables
  1805 00001456 BF06000000          <1> 		mov edi, 6
  1806 0000145B E83A000000          <1> 		call nxtvrech
  1807 00001460 E957000000          <1> 		jmp prntvr2
  1808 00001465 B13D                <1> 	echvar:	mov cl, '='
  1809 00001467 43                  <1> 		inc ebx
  1810 00001468 8A03                <1> 		mov al, [ebx]
  1811 0000146A 3C00                <1> 		cmp al, 0
  1812 0000146C 742C                <1> 		je nxtvrech
  1813 0000146E 3C3D                <1> 		cmp al, '='
  1814 00001470 7420                <1> 		je nxtvrechb1
  1815 00001472 BE[700A0000]        <1> 		mov esi, buftxt
  1816 00001477 01FE                <1> 		add esi, edi
  1817 00001479 E8B4F9FFFF          <1> 		call cndtest
  1818 0000147E 3C02                <1> 		cmp al, 2
  1819 00001480 7436                <1> 		je prntvr
  1820 00001482 3C01                <1> 		cmp al, 1
  1821 00001484 7432                <1> 		je prntvr
  1822 00001486 BE[700A0000]        <1> 		mov esi, buftxt
  1823 0000148B 01FE                <1> 		add esi, edi
  1824 0000148D E908000000          <1> 		jmp nxtvrech
  1825                              <1> 	nxtvrechb1:
  1826 00001492 81EB02000000        <1> 		sub ebx, 2
  1827 00001498 EBCB                <1> 		jmp echvar
  1828 0000149A 8A03                <1> 	nxtvrech: mov al, [ebx]
  1829 0000149C 3C05                <1> 		cmp al, 5
  1830 0000149E 740F                <1> 		je nxtvrec2
  1831 000014A0 43                  <1> 		inc ebx
  1832 000014A1 81FB[6F0A0000]      <1> 		cmp ebx, varend
  1833 000014A7 0F8380F8FFFF        <1> 		jae nwcmd
  1834 000014AD EBEB                <1> 		jmp nxtvrech
  1835 000014AF 43                  <1> 	nxtvrec2: inc ebx
  1836 000014B0 8A03                <1> 		mov al, [ebx]
  1837 000014B2 3C04                <1> 		cmp al, 4
  1838 000014B4 74AF                <1> 		je echvar
  1839 000014B6 EBE2                <1> 		jmp nxtvrech
  1840 000014B8 43                  <1> 	prntvr: inc ebx
  1841 000014B9 89DE                <1> 		mov esi, ebx
  1842 000014BB C3                  <1> 		ret
  1843 000014BC E8FDF5FFFF          <1> 	prntvr2: call print
  1844 000014C1 BE[C5400000]        <1> 		mov esi, line
  1845 000014C6 E8F3F5FFFF          <1> 		call print
  1846 000014CB E95DF8FFFF          <1> 		jmp nwcmd
  1847                              <1> 		
  1848                              <1> 
  1849 000014D0 05042300            <1> db 5,4,"#",0
  1850                              <1> 	num:	
  1851 000014D4 E87CFAFFFF          <1> 		call clearbuffer
  1852 000014D9 C605[90170000]00    <1> 		mov byte [decimal], 0
  1853 000014E0 C605[91170000]00    <1> 		mov byte [decimal2], 0
  1854 000014E7 BE[700A0000]        <1> 		mov esi, buftxt
  1855 000014EC B800000000          <1> 		mov eax, 0
  1856 000014F1 B900000000          <1> 		mov ecx, 0
  1857 000014F6 BB00000000          <1> 		mov ebx, 0
  1858 000014FB 8A06                <1> 	num2:	mov al, [esi]
  1859 000014FD 3C2B                <1> 		cmp al, '+'
  1860 000014FF 741B                <1> 		je operatorfound
  1861 00001501 3C2D                <1> 		cmp al, '-'
  1862 00001503 7417                <1> 		je operatorfound
  1863 00001505 3C2A                <1> 		cmp al, '*'
  1864 00001507 7413                <1> 		je operatorfound
  1865 00001509 3C2F                <1> 		cmp al, '/'
  1866 0000150B 740F                <1> 		je operatorfound
  1867 0000150D 3C5E                <1> 		cmp al, '^'
  1868 0000150F 740B                <1> 		je operatorfound
  1869 00001511 46                  <1> 		inc esi
  1870 00001512 3C00                <1> 		cmp al, 0
  1871 00001514 0F8413F8FFFF        <1> 		je near nwcmd
  1872 0000151A EBDF                <1> 		jmp num2
  1873 0000151C 50                  <1> 	operatorfound: push eax
  1874 0000151D B400                <1> 		mov ah, 0
  1875 0000151F 8826                <1> 		mov [esi], ah
  1876 00001521 89F7                <1> 		mov edi, esi
  1877 00001523 46                  <1> 		inc esi
  1878 00001524 8A06                <1> 		mov al, [esi]
  1879 00001526 3C24                <1> 		cmp al, '$'
  1880 00001528 0F8481000000        <1> 		je near varnum1
  1881 0000152E 3C25                <1> 		cmp al, '%'
  1882 00001530 0F8469000000        <1> 		je near resultnum1
  1883                              <1> 	varnum2: 
  1884 00001536 57                  <1> 		push edi
  1885 00001537 E8C9000000          <1> 		call checkdecimal
  1886 0000153C 5F                  <1> 		pop edi
  1887 0000153D E8D5FCFFFF          <1> 		call cnvrttxt
  1888                              <1> 	vrnm2:
  1889 00001542 89CB                <1> 		mov ebx, ecx
  1890 00001544 53                  <1> 		push ebx
  1891 00001545 E80BFAFFFF          <1> 		call clearbuffer
  1892 0000154A BE[700A0000]        <1> 		mov esi, buftxt
  1893 0000154F 89F7                <1> 		mov edi, esi
  1894 00001551 46                  <1> 		inc esi
  1895 00001552 8A06                <1> 		mov al, [esi]
  1896 00001554 3C24                <1> 		cmp al, '$'
  1897 00001556 0F8474000000        <1> 		je near varnum3
  1898 0000155C 3C25                <1> 		cmp al, '%'
  1899 0000155E 0F8443000000        <1> 		je near resultnum2
  1900                              <1> 	varnum4: 
  1901 00001564 57                  <1> 		push edi
  1902 00001565 E887000000          <1> 		call checkdecimal2
  1903 0000156A 5F                  <1> 		pop edi
  1904 0000156B E8A7FCFFFF          <1> 		call cnvrttxt
  1905                              <1> 	vrnm4:
  1906 00001570 5B                  <1> 		pop ebx
  1907 00001571 58                  <1> 		pop eax
  1908 00001572 3C2B                <1> 		cmp al, '+'
  1909 00001574 0F84B9000000        <1> 		je near plusnum
  1910 0000157A 3C2D                <1> 		cmp al, '-'
  1911 0000157C 0F84BD000000        <1> 		je near subnum
  1912 00001582 3C2A                <1> 		cmp al, '*'
  1913 00001584 0F84C1000000        <1> 		je near mulnum
  1914 0000158A 3C2F                <1> 		cmp al, '/'
  1915 0000158C 0F84CF000000        <1> 		je near divnum
  1916 00001592 3C5E                <1> 		cmp al, '^'
  1917 00001594 0F84ED000000        <1> 		je near expnum
  1918 0000159A E98EF7FFFF          <1> 		jmp nwcmd
  1919                              <1> 	resultnum1:
  1920 0000159F 8B0D[92170000]      <1> 		mov ecx, [result]
  1921 000015A5 EB9B                <1> 		jmp vrnm2
  1922                              <1> 	resultnum2:
  1923 000015A7 8B0D[92170000]      <1> 		mov ecx, [result]
  1924 000015AD EBC1                <1> 		jmp vrnm4
  1925 000015AF 81EE[700A0000]      <1> 	varnum1: sub esi, buftxt
  1926 000015B5 89F7                <1> 		mov edi, esi
  1927 000015B7 81C6[700A0000]      <1> 		add esi, buftxt
  1928 000015BD 47                  <1> 		inc edi
  1929 000015BE BB[6F050000]        <1> 		mov ebx, variables
  1930 000015C3 E8D2FEFFFF          <1> 		call nxtvrech
  1931 000015C8 89F7                <1> 		mov edi, esi
  1932 000015CA 4F                  <1> 		dec edi
  1933 000015CB E966FFFFFF          <1> 		jmp varnum2
  1934 000015D0 81EE[700A0000]      <1> 	varnum3: sub esi, buftxt
  1935 000015D6 89F7                <1> 		mov edi, esi
  1936 000015D8 81C6[700A0000]      <1> 		add esi, buftxt
  1937 000015DE 47                  <1> 		inc edi
  1938 000015DF BB[6F050000]        <1> 		mov ebx, variables
  1939 000015E4 E8B1FEFFFF          <1> 		call nxtvrech
  1940 000015E9 89F7                <1> 		mov edi, esi
  1941 000015EB 4F                  <1> 		dec edi
  1942 000015EC E973FFFFFF          <1> 		jmp varnum4
  1943                              <1> 	checkdecimal2:
  1944 000015F1 8A25[90170000]      <1> 		mov ah, [decimal]
  1945 000015F7 8825[91170000]      <1> 		mov [decimal2], ah
  1946 000015FD B400                <1> 		mov ah, 0
  1947 000015FF 8825[90170000]      <1> 		mov [decimal], ah
  1948                              <1> 	checkdecimal:
  1949 00001605 89F7                <1> 		mov edi, esi
  1950                              <1> 	chkdec1:
  1951 00001607 8A07                <1> 		mov al, [edi]
  1952 00001609 3C2E                <1> 		cmp al, '.'
  1953 0000160B 0F840B000000        <1> 		je near fnddec
  1954 00001611 3C00                <1> 		cmp al, 0
  1955 00001613 0F8419000000        <1> 		je near nodecimal
  1956 00001619 47                  <1> 		inc edi
  1957 0000161A EBEB                <1> 		jmp chkdec1
  1958                              <1> 	fnddec:
  1959 0000161C 8A4701              <1> 		mov al, [edi + 1]
  1960 0000161F 8807                <1> 		mov [edi], al
  1961 00001621 3C00                <1> 		cmp al, 0
  1962 00001623 0F8409000000        <1> 		je near nodecimal
  1963 00001629 FE05[90170000]      <1> 		inc byte [decimal]
  1964 0000162F 47                  <1> 		inc edi
  1965 00001630 EBEA                <1> 		jmp fnddec
  1966                              <1> 	nodecimal:
  1967 00001632 C3                  <1> 		ret
  1968                              <1> 	plusnum:
  1969 00001633 E816010000          <1> 		call decaddfix
  1970 00001638 01D9                <1> 		add ecx, ebx
  1971 0000163A E991000000          <1> 		jmp retnum
  1972                              <1> 	subnum:
  1973 0000163F E80A010000          <1> 		call decaddfix
  1974 00001644 29D9                <1> 		sub ecx, ebx
  1975 00001646 E985000000          <1> 		jmp retnum
  1976                              <1> 	mulnum:
  1977 0000164B A0[91170000]        <1> 		mov al, [decimal2]
  1978 00001650 0005[90170000]      <1> 		add [decimal], al
  1979 00001656 89C8                <1> 		mov eax, ecx
  1980 00001658 F7E3                <1> 		mul ebx
  1981 0000165A 89C1                <1> 		mov ecx, eax
  1982 0000165C E96F000000          <1> 		jmp retnum
  1983                              <1> 	divnum:
  1984 00001661 E8E8000000          <1> 		call decaddfix
  1985 00001666 B000                <1> 		mov al, 0
  1986 00001668 A2[90170000]        <1> 		mov [decimal], al
  1987 0000166D 6689C8              <1> 		mov ax, cx
  1988 00001670 80FB00              <1> 		cmp bl, 0
  1989 00001673 0F8457000000        <1> 		je near retnum
  1990 00001679 F6F3                <1> 		div bl
  1991 0000167B B900000000          <1> 		mov ecx, 0
  1992 00001680 88C1                <1> 		mov cl, al
  1993 00001682 E949000000          <1> 		jmp retnum
  1994                              <1> 	expnum:
  1995 00001687 8A15[90170000]      <1> 		mov dl, [decimal]
  1996 0000168D 8815[91170000]      <1> 		mov [decimal2], dl
  1997 00001693 BA00000000          <1> 		mov edx, 0
  1998 00001698 89C8                <1> 		mov eax, ecx
  1999 0000169A 89D9                <1> 		mov ecx, ebx
  2000 0000169C 89C3                <1> 		mov ebx, eax
  2001 0000169E 81F900000000        <1> 		cmp ecx, 0
  2002 000016A4 7425                <1> 		je noexpnum
  2003 000016A6 49                  <1> 		dec ecx
  2004 000016A7 81F900000000        <1> 		cmp ecx, 0
  2005 000016AD 7415                <1> 		je noexpnumlp
  2006 000016AF F7E3                <1> 	expnumlp: mul ebx
  2007 000016B1 8A15[91170000]      <1> 		mov dl, [decimal2]
  2008 000016B7 0015[90170000]      <1> 		add [decimal], dl
  2009 000016BD BA00000000          <1> 		mov edx, 0
  2010 000016C2 E2EB                <1> 		loop expnumlp
  2011                              <1> 	noexpnumlp:
  2012 000016C4 89C1                <1> 		mov ecx, eax
  2013 000016C6 E905000000          <1> 		jmp retnum
  2014                              <1> 	noexpnum:
  2015 000016CB B901000000          <1> 		mov ecx, 1
  2016                              <1> 	retnum: 
  2017 000016D0 BE[840C0000]        <1> 		mov esi, numbuf
  2018 000016D5 890D[92170000]      <1> 		mov [result], ecx
  2019 000016DB E88AF8FFFF          <1> 		call convert
  2020 000016E0 BE[840C0000]        <1> 		mov esi, numbuf
  2021 000016E5 8A25[90170000]      <1> 		mov ah, [decimal]
  2022 000016EB 80FC00              <1> 		cmp ah, 0
  2023 000016EE 0F8425000000        <1> 		je near noputdecimal
  2024                              <1> 	putdecimal:
  2025 000016F4 4E                  <1> 		dec esi
  2026 000016F5 FECC                <1> 		dec ah
  2027 000016F7 80FC00              <1> 		cmp ah, 0
  2028 000016FA 0F87F4FFFFFF        <1> 		ja near putdecimal
  2029 00001700 4E                  <1> 		dec esi
  2030 00001701 8A06                <1> 		mov al, [esi]
  2031 00001703 C6062E              <1> 		mov byte [esi], '.'
  2032                              <1> 	decputloop:
  2033 00001706 4E                  <1> 		dec esi
  2034 00001707 8A26                <1> 		mov ah, [esi]
  2035 00001709 8806                <1> 		mov [esi], al
  2036 0000170B 88E0                <1> 		mov al, ah
  2037 0000170D 81FE[700C0000]      <1> 		cmp esi, buf2
  2038 00001713 0F87EDFFFFFF        <1> 		ja near decputloop
  2039                              <1> 	noputdecimal:
  2040 00001719 BE[700C0000]        <1> 		mov esi, buf2
  2041 0000171E E809000000          <1> 		call chkadd
  2042 00001723 E905F6FFFF          <1> 		jmp nwcmd
  2043 00001728 00000000            <1> edxnumbuf dw 0,0
  2044 0000172C 8A06                <1> 	chkadd: mov al, [esi]
  2045 0000172E 3C30                <1> 		cmp al, '0'
  2046 00001730 750C                <1> 		jne dnadd
  2047 00001732 46                  <1> 		inc esi
  2048 00001733 81FE[840C0000]      <1> 		cmp esi, numbuf
  2049 00001739 7402                <1> 		je dnaddm1
  2050 0000173B EBEF                <1> 		jmp chkadd
  2051 0000173D 4E                  <1> 	dnaddm1: dec esi
  2052 0000173E E87BF3FFFF          <1> 	dnadd:	call print
  2053 00001743 BE[C5400000]        <1> 		mov esi, line
  2054 00001748 E871F3FFFF          <1> 		call print
  2055 0000174D C3                  <1> 		ret
  2056                              <1> 		
  2057                              <1> 	decaddfix:
  2058 0000174E A0[91170000]        <1> 		mov al, [decimal2]
  2059 00001753 8A25[90170000]      <1> 		mov ah, [decimal]
  2060 00001759 38E0                <1> 		cmp al, ah
  2061 0000175B 7432                <1> 		je gooddecadd
  2062 0000175D 38E0                <1> 		cmp al, ah
  2063 0000175F 721A                <1> 		jb lowdecadd
  2064                              <1> 	highdecadd:
  2065 00001761 FEC4                <1> 		inc ah
  2066 00001763 89CA                <1> 		mov edx, ecx
  2067 00001765 C1E103              <1> 		shl ecx, 3
  2068 00001768 01D1                <1> 		add ecx, edx
  2069 0000176A 01D1                <1> 		add ecx, edx
  2070 0000176C 38E0                <1> 		cmp al, ah
  2071 0000176E 77F1                <1> 		ja highdecadd
  2072 00001770 8825[90170000]      <1> 		mov [decimal], ah
  2073 00001776 E914000000          <1> 		jmp gooddecadd
  2074                              <1> 	lowdecadd:
  2075 0000177B FEC0                <1> 		inc al
  2076 0000177D 89DA                <1> 		mov edx, ebx
  2077 0000177F C1E303              <1> 		shl ebx, 3
  2078 00001782 01D3                <1> 		add ebx, edx
  2079 00001784 01D3                <1> 		add ebx, edx
  2080 00001786 38E0                <1> 		cmp al, ah
  2081 00001788 72F1                <1> 		jb lowdecadd
  2082 0000178A A2[90170000]        <1> 		mov [decimal], al
  2083                              <1> 	gooddecadd:
  2084 0000178F C3                  <1> 		ret
  2085                              <1> 		
  2086 00001790 00                  <1> decimal db 0
  2087 00001791 00                  <1> decimal2 db 0
  2088 00001792 00000000            <1> result db 0,0,0,0
  2089                              <1> 	
  2090 00001796 05042500            <1> db 5,4,"%",0
  2091 0000179A E8B6F7FFFF          <1> 	ans:	call clearbuffer
  2092 0000179F 8B0D[92170000]      <1> 		mov ecx, [result]
  2093 000017A5 BE[700C0000]        <1> 		mov esi, buf2
  2094 000017AA E8BBF7FFFF          <1> 		call convert
  2095 000017AF BE[700C0000]        <1> 		mov esi, buf2
  2096 000017B4 E873FFFFFF          <1> 		call chkadd
  2097 000017B9 E96FF5FFFF          <1> 		jmp nwcmd
  2098                              <1> 
  2099 000017BE 05042400            <1> db 5,4,"$",0
  2100 000017C2 BE[700A0000]        <1> var:	mov esi, buftxt
  2101 000017C7 BB[6F050000]        <1> 	mov ebx, variables
  2102 000017CC 8A06                <1> lkeq:	mov al, [esi]
  2103 000017CE 3C3D                <1> 	cmp al, '='
  2104 000017D0 741F                <1> 	je eqfnd	;is there an '=' sign?
  2105 000017D2 3C00                <1> 	cmp al, 0
  2106 000017D4 7403                <1> 	je echovars
  2107 000017D6 46                  <1> 	inc esi
  2108 000017D7 EBF3                <1> 	jmp lkeq
  2109 000017D9 BE[6F050000]        <1> echovars: mov esi, variables
  2110 000017DE BB[6F0A0000]        <1> 	mov ebx, varend
  2111 000017E3 B105                <1> 	mov cl, 5
  2112 000017E5 B504                <1> 	mov ch, 4
  2113 000017E7 E808F7FFFF          <1> 	call array
  2114 000017EC E93CF5FFFF          <1> 	jmp nwcmd
  2115 000017F1 46                  <1> eqfnd:	inc esi
  2116 000017F2 8A06                <1> 	mov al, [esi]
  2117 000017F4 3C00                <1> 	cmp al, 0
  2118 000017F6 740F                <1> 	je readvar
  2119 000017F8 BE[700A0000]        <1> 	mov esi, buftxt
  2120 000017FD BB[6F050000]        <1> 	mov ebx, variables
  2121 00001802 E917000000          <1> 	jmp seek
  2122                              <1> readvar: 
  2123 00001807 B00D                <1> 	mov al, 13
  2124 00001809 B404                <1> 	mov ah, 4
  2125 0000180B B307                <1> 	mov bl, 7
  2126 0000180D E8CBF0FFFF          <1> 	call intx4
  2127 00001812 BE[C5400000]        <1> 	mov esi, line
  2128 00001817 E8A2F2FFFF          <1> 	call print
  2129 0000181C EBA4                <1> 	jmp var
  2130 0000181E 668B03              <1> seek:	mov ax, [ebx]
  2131 00001821 B105                <1> 	mov cl, 5
  2132 00001823 B504                <1> 	mov ch, 4
  2133 00001825 663D0000            <1> 	cmp ax, 0
  2134 00001829 0F8459000000        <1> 	je near save
  2135 0000182F 6639C8              <1> 	cmp ax, cx
  2136 00001832 7403                <1> 	je skfnd
  2137 00001834 43                  <1> 	inc ebx
  2138 00001835 EBE7                <1> 	jmp seek
  2139 00001837 BE[700A0000]        <1> skfnd:	mov esi, buftxt
  2140 0000183C 46                  <1> 	inc esi
  2141 0000183D 81C302000000        <1> 	add ebx, 2
  2142 00001843 89DF                <1> 	mov edi, ebx
  2143 00001845 B13D                <1> 	mov cl, '='
  2144 00001847 E8E6F5FFFF          <1> 	call cndtest
  2145 0000184C 3C01                <1> 	cmp al, 1	
  2146 0000184E 7417                <1> 	je varfnd
  2147 00001850 89FB                <1> 	mov ebx, edi
  2148 00001852 BE[700A0000]        <1> 	mov esi, buftxt
  2149 00001857 668B03              <1> 	mov ax, [ebx]
  2150 0000185A 663D0000            <1> 	cmp ax, 0
  2151 0000185E 0F8424000000        <1> 	je near save
  2152 00001864 43                  <1> 	inc ebx
  2153 00001865 EBB7                <1> 	jmp seek
  2154 00001867 8A03                <1> varfnd:	mov al, [ebx]
  2155 00001869 3C04                <1> 	cmp al, 4
  2156 0000186B 7404                <1> 	je save2
  2157 0000186D 4B                  <1> 	dec ebx
  2158 0000186E 4E                  <1> 	dec esi
  2159 0000186F EBF6                <1> 	jmp varfnd
  2160 00001871 4B                  <1> save2:	dec ebx
  2161 00001872 4E                  <1> 	dec esi
  2162 00001873 8A03                <1> 	mov al, [ebx]
  2163 00001875 3C05                <1> 	cmp al, 5
  2164 00001877 7402                <1> 	je remove
  2165 00001879 EBEC                <1> 	jmp varfnd
  2166 0000187B 8A03                <1> remove: mov al, [ebx]
  2167 0000187D 3C00                <1> 	cmp al, 0
  2168 0000187F 749D                <1> 	je seek
  2169 00001881 B000                <1> 	mov al, 0
  2170 00001883 8803                <1> 	mov [ebx], al
  2171 00001885 43                  <1> 	inc ebx
  2172 00001886 EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2173 00001888 BE[700A0000]        <1> save:	mov esi, buftxt
  2174 0000188D 43                  <1> 	inc ebx
  2175 0000188E B005                <1> 	mov al, 5
  2176 00001890 B404                <1> 	mov ah, 4
  2177 00001892 668903              <1> 	mov [ebx], ax
  2178 00001895 43                  <1> 	inc ebx
  2179 00001896 43                  <1> svhere:	inc ebx
  2180 00001897 46                  <1> 	inc esi
  2181 00001898 8A06                <1> 	mov al, [esi]
  2182 0000189A 3C00                <1> 	cmp al, 0
  2183 0000189C 0F8442000000        <1> 	je near svdone
  2184 000018A2 3C25                <1> 	cmp al, '%'
  2185 000018A4 7404                <1> 	je ans2
  2186 000018A6 8803                <1> 	mov [ebx], al	
  2187 000018A8 EBEC                <1> 	jmp svhere
  2188 000018AA 56                  <1> ans2:	push esi
  2189 000018AB BE[700C0000]        <1> 	mov esi, buf2
  2190 000018B0 E823000000          <1> 	call ansfnd
  2191 000018B5 E803000000          <1> 	call anscp
  2192 000018BA 5E                  <1> 	pop esi
  2193 000018BB EBD9                <1> 	jmp svhere
  2194 000018BD 8A06                <1> anscp:	mov al, [esi]
  2195 000018BF 8803                <1> 	mov [ebx], al
  2196 000018C1 81FE[840C0000]      <1> 	cmp esi, numbuf
  2197 000018C7 74CD                <1> 	je svhere
  2198 000018C9 3C00                <1> 	cmp al, 0
  2199 000018CB 74C9                <1> 	je svhere
  2200 000018CD 43                  <1> 	inc ebx
  2201 000018CE 46                  <1> 	inc esi
  2202 000018CF EBEC                <1> 	jmp anscp
  2203 000018D1 5E                  <1> ansnf:	pop esi
  2204 000018D2 8A06                <1> 	mov al, [esi]
  2205 000018D4 8803                <1> 	mov [ebx], al
  2206 000018D6 EBBE                <1> 	jmp svhere
  2207 000018D8 46                  <1> ansfnd:	inc esi
  2208 000018D9 8A06                <1> 	mov al, [esi]
  2209 000018DB 3C00                <1> 	cmp al, 0
  2210 000018DD 74F2                <1> 	je ansnf
  2211 000018DF 3C30                <1> 	cmp al, '0'
  2212 000018E1 74F5                <1> 	je ansfnd
  2213 000018E3 C3                  <1> 	ret
  2214 000018E4 B000                <1> svdone:	mov al, 0
  2215 000018E6 8803                <1> 	mov [ebx], al
  2216 000018E8 E940F4FFFF          <1> 	jmp nwcmd
  2217                              <1> 	
  2218                              <1> 	
  2219 000018ED 05042E2F00          <1> 	db 5,4,"./",0
  2220                              <1> rundiskprog:
  2221 000018F2 BF[700A0000]        <1> 	mov edi, buftxt
  2222 000018F7 81C702000000        <1> 	add edi, 2
  2223 000018FD BE00001000          <1> 	mov esi, 0x100000
  2224 00001902 E8AC250000          <1> 	call loadfile
  2225 00001907 81FA94010000        <1> 	cmp edx, 404
  2226 0000190D 7414                <1> 	je noprogfound
  2227 0000190F BB00001000          <1> 	mov ebx, 0x100000
  2228 00001914 66813B4558          <1> 	cmp word [ebx], "EX"
  2229 00001919 7508                <1> 	jne noprogfound
  2230 0000191B 81C302000000        <1> 	add ebx, 2
  2231 00001921 FFE3                <1> 	jmp ebx
  2232                              <1> noprogfound:
  2233 00001923 BE[7B400000]        <1> 	mov esi, notfound1
  2234 00001928 E891F1FFFF          <1> 	call print
  2235 0000192D BE[700A0000]        <1> 	mov esi, buftxt
  2236 00001932 81C602000000        <1> 	add esi, 2
  2237 00001938 E881F1FFFF          <1> 	call print
  2238 0000193D BE[85400000]        <1> 	mov esi, notfound2
  2239 00001942 E877F1FFFF          <1> 	call print
  2240 00001947 E9E1F3FFFF          <1> 	jmp nwcmd
  2241                              <1> 
  2242 0000194C E9DCF3FFFF          <1> notbatch: jmp nwcmd
  2243                              <1> 
  2244 00001951 05047768696C6500    <1> 	db 5,4,"while",0
  2245 00001959 B000                <1> while:  mov al, 0
  2246 0000195B 3805[69030000]      <1> 	cmp [BATCHISON], al
  2247 00001961 0F84E5FFFFFF        <1> 	je near notbatch
  2248 00001967 8B35[65030000]      <1> 	MOV esi, [BATCHPOS]
  2249 0000196D 4E                  <1> whilefnd: dec esi
  2250 0000196E 8A06                <1> 	mov al, [esi]
  2251 00001970 3C0A                <1> 	cmp al, 10
  2252 00001972 0F8412000000        <1> 	je near whilefnd2
  2253 00001978 3C0D                <1> 	cmp al, 13
  2254 0000197A 0F840A000000        <1> 	je near whilefnd2
  2255 00001980 3C00                <1> 	cmp al, 0
  2256 00001982 0F8402000000        <1> 	je near whilefnd2
  2257 00001988 EBE3                <1> 	jmp whilefnd
  2258                              <1> whilefnd2:
  2259 0000198A 8935[6B030000]      <1> 	mov [LOOPPOS], esi
  2260 00001990 C605[6A030000]01    <1> 	mov BYTE [LOOPON], 1
  2261 00001997 0005[00030000]      <1> 	add [IFON], al
  2262 0000199D BE[700A0000]        <1> 	mov esi, buftxt
  2263 000019A2 BB[700A0000]        <1> 	mov ebx, buftxt
  2264 000019A7 81C306000000        <1> 	add ebx, 6
  2265 000019AD E923000000          <1> 	jmp chkeqsn
  2266                              <1> 
  2267                              <1> 
  2268 000019B2 0504696600          <1> 	db 5,4,"if",0
  2269 000019B7 B000                <1> if:	mov al, 0
  2270 000019B9 3805[69030000]      <1> 	cmp [BATCHISON], al
  2271 000019BF 0F8487FFFFFF        <1> 	je near notbatch
  2272 000019C5 BE[700A0000]        <1> 	mov esi, buftxt
  2273 000019CA BB[700A0000]        <1> 	mov ebx, buftxt
  2274 000019CF 81C303000000        <1> 	add ebx, 3
  2275 000019D5 8A06                <1> chkeqsn: mov al, [esi]
  2276 000019D7 3C00                <1> 	cmp al, 0
  2277 000019D9 0F846DFFFFFF        <1> 	je near notbatch
  2278 000019DF 3C3D                <1> 	cmp al, '='
  2279 000019E1 0F8403000000        <1> 	je near chkeqdn
  2280 000019E7 46                  <1> 	inc esi
  2281 000019E8 EBEB                <1> 	jmp chkeqsn
  2282 000019EA B000                <1> chkeqdn: mov al, 0 
  2283 000019EC 8806                <1> 	mov [esi], al
  2284 000019EE 46                  <1> 	inc esi
  2285 000019EF 8A06                <1> 	mov al, [esi]
  2286 000019F1 3C24                <1> 	cmp al, '$'
  2287 000019F3 0F8462000000        <1> 	je near ifvar1
  2288 000019F9 8A03                <1> ifvar2: mov al, [ebx]
  2289 000019FB 3C24                <1> 	cmp al, '$'
  2290 000019FD 0F847B000000        <1> 	je near ifvar3
  2291 00001A03 E8F0F3FFFF          <1> ifvar4:	call tester
  2292 00001A08 3C01                <1> 	cmp al, 1
  2293 00001A0A 0F8405000000        <1> 	je near trueif
  2294 00001A10 E923000000          <1> 	jmp falseif
  2295 00001A15 B800000000          <1> trueif:	mov eax, 0
  2296 00001A1A A0[00030000]        <1> 	mov al, [IFON]
  2297 00001A1F FEC0                <1> 	inc al
  2298 00001A21 A2[00030000]        <1> 	mov [IFON], al
  2299 00001A26 B400                <1> 	mov ah, 0
  2300 00001A28 BE[01030000]        <1> 	mov esi, IFTRUE
  2301 00001A2D 01C6                <1> 	add esi, eax
  2302 00001A2F B401                <1> 	mov ah, 1
  2303 00001A31 8826                <1> 	mov [esi], ah
  2304 00001A33 E9F5F2FFFF          <1> 	jmp nwcmd
  2305 00001A38 B800000000          <1> falseif: mov eax, 0
  2306 00001A3D A0[00030000]        <1> 	mov al, [IFON]
  2307 00001A42 FEC0                <1> 	inc al
  2308 00001A44 A2[00030000]        <1> 	mov [IFON], al
  2309 00001A49 B400                <1> 	mov ah, 0
  2310 00001A4B BE[01030000]        <1> 	mov esi, IFTRUE
  2311 00001A50 01C6                <1> 	add esi, eax
  2312 00001A52 B400                <1> 	mov ah, 0
  2313 00001A54 8826                <1> 	mov [esi], ah
  2314 00001A56 E9D2F2FFFF          <1> 	jmp nwcmd
  2315 00001A5B 89F7                <1> ifvar1: mov edi, esi
  2316 00001A5D 81EF[700A0000]      <1> 	sub edi, buftxt
  2317 00001A63 47                  <1> 	inc edi
  2318 00001A64 BB[6F050000]        <1> 	mov ebx, variables
  2319 00001A69 E82CFAFFFF          <1> 	call nxtvrech
  2320 00001A6E BB[700A0000]        <1> 	mov ebx, buftxt
  2321 00001A73 81C303000000        <1> 	add ebx, 3
  2322 00001A79 E97BFFFFFF          <1> 	jmp ifvar2
  2323 00001A7E 8935[9E1A0000]      <1> ifvar3: mov [esiif], esi
  2324 00001A84 BF04000000          <1> 	mov edi, 4
  2325 00001A89 BB[6F050000]        <1> 	mov ebx, variables
  2326 00001A8E E807FAFFFF          <1> 	call nxtvrech
  2327 00001A93 8B35[9E1A0000]      <1> 	mov esi, [esiif]
  2328 00001A99 E965FFFFFF          <1> 	jmp ifvar4
  2329                              <1> 
  2330 00001A9E 00000000            <1> esiif dd 0
  2331                              <1> 	
  2332 00001AA2 0504656C736500      <1> 	db 5,4,"else",0
  2333 00001AA9 B800000000          <1> else:	mov eax, 0
  2334 00001AAE A0[00030000]        <1> 	mov al, [IFON]
  2335 00001AB3 BE[01030000]        <1> 	mov esi, IFTRUE
  2336 00001AB8 01C6                <1> 	add esi, eax
  2337 00001ABA 8A06                <1> 	mov al, [esi]
  2338 00001ABC 3C00                <1> 	cmp al, 0		
  2339 00001ABE 7409                <1> 	je else1
  2340 00001AC0 3C01                <1> 	cmp al, 1
  2341 00001AC2 740E                <1> 	je else2
  2342 00001AC4 E964F2FFFF          <1> 	jmp nwcmd
  2343 00001AC9 B001                <1> else1:  mov al, 1
  2344 00001ACB 8806                <1> 	mov [esi], al
  2345 00001ACD E95BF2FFFF          <1> 	jmp nwcmd
  2346 00001AD2 B000                <1> else2:	mov al, 0
  2347 00001AD4 8806                <1> 	mov [esi], al
  2348 00001AD6 E952F2FFFF          <1> 	jmp nwcmd
  2349                              <1> 
  2350 00001ADB 05046C6F6F7000      <1> 	db 5,4,"loop",0
  2351 00001AE2 3805[6A030000]      <1> 	cmp [LOOPON], al
  2352 00001AE8 0F8405000000        <1> 	je near filoop
  2353 00001AEE E93AF2FFFF          <1> 	jmp nwcmd
  2354 00001AF3 8B35[6B030000]      <1> filoop: mov esi, [LOOPPOS]
  2355 00001AF9 8935[65030000]      <1> 	mov [BATCHPOS], esi
  2356 00001AFF E929F2FFFF          <1> 	jmp nwcmd
  2357                              <1> 	
  2358                              <1> 
  2359 00001B04 0504666900          <1> 	db 5,4,"fi",0
  2360 00001B09 B000                <1> 	mov al, 0
  2361 00001B0B 3805[69030000]      <1> 	cmp [BATCHISON], al
  2362 00001B11 0F8435FEFFFF        <1> 	je near notbatch
  2363 00001B17 B001                <1> fi:	mov al, 1
  2364 00001B19 2805[00030000]      <1> 	sub [IFON],al
  2365 00001B1F E909F2FFFF          <1> 	jmp nwcmd
  2366                              <1> 
  2367 00001B24 050473746F7000      <1> 	db 5,4,"stop",0
  2368 00001B2B B000                <1> stop:	mov al, 0
  2369 00001B2D A2[69030000]        <1> 	mov [BATCHISON], al
  2370 00001B32 A2[00030000]        <1> 	mov [IFON], al
  2371 00001B37 A2[01030000]        <1> 	mov [IFTRUE], al
  2372 00001B3C A2[6A030000]        <1> 	mov [LOOPON], al
  2373 00001B41 E9E7F1FFFF          <1> 	jmp nwcmd
  2374                                      %include 'source/programs.asm'
  2375                              <1> 
  2376 00001B46 0504696E7465726E65- <1> db 5,4,"internet",0
  2377 00001B4F 7400                <1>
  2378                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  2379                              <1> 							;;^^used to^^, now tests int 30h functions		
  2380 00001B51 B403                <1> 		mov ah, 3
  2381 00001B53 CD30                <1> 		int 30h
  2382 00001B55 B401                <1> 		mov ah, 1
  2383 00001B57 BE[691B0000]        <1> 		mov esi, datmsg
  2384 00001B5C 66BB0700            <1> 		mov bx, 7
  2385 00001B60 B000                <1> 		mov al, 0
  2386 00001B62 CD30                <1> 		int 30h
  2387                              <1> 	;jmp packettest
  2388 00001B64 E9C4F1FFFF          <1> 		jmp nwcmd
  2389 00001B69 496E7465726E657420- <1> datmsg: db "Internet has not been implemented yet.",10,13,0
  2390 00001B72 686173206E6F742062- <1>
  2391 00001B7B 65656E20696D706C65- <1>
  2392 00001B84 6D656E746564207965- <1>
  2393 00001B8D 742E0A0D00          <1>
  2394                              <1> 		
  2395 00001B92 050470636900        <1> db 5,4,"pci",0
  2396                              <1> 	pcishow:
  2397 00001B98 E85C210000          <1> 	call pcidump
  2398 00001B9D E98BF1FFFF          <1> 	jmp nwcmd
  2399 00001BA2 050472756E62617400  <1> db 5,4,"runbat",0
  2400                              <1> 	runbatch2:
  2401 00001BAB BE[C5400000]        <1> 		mov esi, line
  2402 00001BB0 E809EFFFFF          <1> 		call print
  2403 00001BB5 BF[700A0000]        <1> 		mov edi, buftxt
  2404 00001BBA 81C707000000        <1> 		add edi, 7
  2405 00001BC0 BE00001000          <1> 		mov esi, 0x100000
  2406 00001BC5 E8E9220000          <1> 		call loadfile
  2407 00001BCA BF00001000          <1> 		mov edi, 0x100000
  2408 00001BCF C605[69030000]01    <1> 		mov byte [BATCHISON], 1
  2409                              <1> 	batchrunloop:
  2410 00001BD6 E82FF1FFFF          <1> 		call buftxtclear
  2411 00001BDB BE[700A0000]        <1> 		mov esi, buftxt
  2412                              <1> 	batchrunloop2:
  2413 00001BE0 B10D                <1> 		mov cl, 13
  2414 00001BE2 B50A                <1> 		mov ch, 10
  2415 00001BE4 66390F              <1> 		cmp [edi], cx
  2416 00001BE7 0F841E000000        <1> 		je near nxtbatchrunline
  2417 00001BED 66C1C108            <1> 		rol cx, 8
  2418 00001BF1 66390F              <1> 		cmp [edi], cx
  2419 00001BF4 0F8411000000        <1> 		je near nxtbatchrunline
  2420 00001BFA 803F00              <1> 		cmp byte [edi], 0
  2421 00001BFD 0F8408000000        <1> 		je near nxtbatchrunline
  2422 00001C03 8A07                <1> 		mov al, [edi]
  2423 00001C05 8806                <1> 		mov [esi], al
  2424 00001C07 46                  <1> 		inc esi
  2425 00001C08 47                  <1> 		inc edi
  2426 00001C09 EBD5                <1> 		jmp batchrunloop2
  2427                              <1> 	nxtbatchrunline:
  2428 00001C0B 81C702000000        <1> 		add edi, 2
  2429 00001C11 893D[701C0000]      <1> 		mov [batchedi], edi
  2430 00001C17 C60600              <1> 		mov byte [esi], 0
  2431 00001C1A BE[700A0000]        <1> 		mov esi, buftxt
  2432 00001C1F 803E00              <1> 		cmp byte [esi], 0
  2433 00001C22 0F843C000000        <1> 		je near nobatchfoundrun
  2434 00001C28 BB00000000          <1> 		mov ebx, 0
  2435 00001C2D 8A1D[00030000]      <1> 		mov bl, [IFON]
  2436 00001C33 80FB01              <1> 		cmp bl, 1
  2437 00001C36 0F8338000000        <1> 		jae near iftestbatch
  2438                              <1> 	doneiftest:
  2439 00001C3C 803D[371D0000]00    <1> 		cmp byte [runnextline], 0
  2440 00001C43 0F8405000000        <1> 		je near noruniftest
  2441 00001C49 E838F1FFFF          <1> 		call progtest
  2442                              <1> 	noruniftest:
  2443 00001C4E C605[371D0000]01    <1> 		mov byte [runnextline], 1
  2444 00001C55 8B3D[701C0000]      <1> 		mov edi, [batchedi]
  2445 00001C5B 803F00              <1> 		cmp byte [edi], 0
  2446 00001C5E 0F8572FFFFFF        <1> 		jne near batchrunloop
  2447                              <1> 	nobatchfoundrun:
  2448 00001C64 C605[69030000]00    <1> 		mov byte [BATCHISON], 0
  2449 00001C6B E9BDF0FFFF          <1> 		jmp nwcmd
  2450                              <1> 	
  2451 00001C70 00000000            <1> batchedi dd 0	
  2452                              <1> 	
  2453                              <1> 	iftestbatch:
  2454 00001C74 BE[01030000]        <1> 		mov esi, IFTRUE
  2455 00001C79 01DE                <1> 		add esi, ebx
  2456 00001C7B 803E00              <1> 		cmp byte [esi], 0
  2457 00001C7E 0F85B8FFFFFF        <1> 		jne near doneiftest
  2458 00001C84 881D[381D0000]      <1> 		mov [iffalsebuf], bl
  2459 00001C8A 803D[6A030000]01    <1> 		cmp byte [LOOPON], 1
  2460 00001C91 750B                <1> 		jne fifindbatch
  2461 00001C93 8B3D[6B030000]      <1> 		mov edi, [LOOPPOS]
  2462 00001C99 E938FFFFFF          <1> 		jmp batchrunloop
  2463                              <1> 	fifindbatch:
  2464 00001C9E 66B96966            <1> 		mov cx, "if"
  2465 00001CA2 66B86669            <1> 		mov ax, "fi"
  2466 00001CA6 663907              <1> 		cmp [edi], ax
  2467 00001CA9 0F841A000000        <1> 		je near fifoundbatch
  2468 00001CAF 66390F              <1> 		cmp [edi], cx
  2469 00001CB2 0F8462000000        <1> 		je near iffoundbatch
  2470 00001CB8 803F00              <1> 		cmp byte [edi], 0
  2471 00001CBB 0F8408000000        <1> 		je near fifoundbatch
  2472 00001CC1 81C702000000        <1> 		add edi, 2
  2473 00001CC7 EBD5                <1> 		jmp fifindbatch
  2474                              <1> 	fifoundbatch:
  2475 00001CC9 81C702000000        <1> 		add edi, 2
  2476 00001CCF B00D                <1> 		mov al, 13
  2477 00001CD1 B40A                <1> 		mov ah, 10
  2478 00001CD3 663907              <1> 		cmp [edi], ax
  2479 00001CD6 7414                <1> 		je goodfibatch
  2480 00001CD8 66C1C008            <1> 		rol ax, 8
  2481 00001CDC 663907              <1> 		cmp [edi], ax
  2482 00001CDF 740B                <1> 		je goodfibatch
  2483 00001CE1 803F00              <1> 		cmp byte [edi], 0
  2484 00001CE4 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  2485 00001CEA EBB2                <1> 		jmp fifindbatch
  2486                              <1> 	goodfibatch:
  2487 00001CEC B001                <1> 		mov al, 1
  2488 00001CEE 2805[00030000]      <1> 		sub [IFON], al 
  2489 00001CF4 A0[00030000]        <1> 		mov al, [IFON]
  2490 00001CF9 8A1D[381D0000]      <1> 		mov bl, [iffalsebuf]
  2491 00001CFF 38D8                <1> 		cmp al, bl
  2492 00001D01 779B                <1> 		ja fifindbatch
  2493 00001D03 BE[700A0000]        <1> 		mov esi, buftxt
  2494 00001D08 81EF02000000        <1> 		sub edi, 2
  2495 00001D0E C605[371D0000]00    <1> 		mov byte [runnextline], 0
  2496 00001D15 E9BCFEFFFF          <1> 		jmp batchrunloop
  2497                              <1> 	iffoundbatch:
  2498 00001D1A B020                <1> 		mov al, ' '
  2499 00001D1C 81C702000000        <1> 		add edi, 2
  2500 00001D22 3807                <1> 		cmp [edi], al
  2501 00001D24 0F8574FFFFFF        <1> 		jne near fifindbatch
  2502 00001D2A B001                <1> 		mov al, 1
  2503 00001D2C 0005[00030000]      <1> 		add [IFON], al
  2504 00001D32 E967FFFFFF          <1> 		jmp fifindbatch
  2505                              <1> 		
  2506                              <1> 		
  2507 00001D37 01                  <1> runnextline db 1
  2508 00001D38 00                  <1> iffalsebuf db 0
  2509                              <1> 
  2510 00001D39 0504626174636800    <1> db 5,4,"batch",0
  2511                              <1> 	batchst: 
  2512 00001D41 BF[700A0000]        <1> 		mov edi, buftxt
  2513 00001D46 81C706000000        <1> 		add edi, 6
  2514 00001D4C 803F00              <1> 		cmp byte [edi], 0
  2515 00001D4F 0F8473000000        <1> 		je near nonamefound
  2516 00001D55 BE00001000          <1> 		mov esi, 0x100000
  2517 00001D5A E854210000          <1> 		call loadfile
  2518 00001D5F 89D0                <1> 		mov eax, edx
  2519 00001D61 3D94010000          <1> 		cmp eax, 404
  2520 00001D66 746F                <1> 		je goodbatchname
  2521 00001D68 BE[771D0000]        <1> 		mov esi, badbatchname
  2522 00001D6D E84CEDFFFF          <1> 		call print
  2523 00001D72 E9B6EFFFFF          <1> 		jmp nwcmd
  2524 00001D77 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  2525 00001D80 20616C726561647920- <1>
  2526 00001D89 657869737473210A0D- <1>
  2527 00001D92 00                  <1>
  2528 00001D93 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  2529 00001D9C 746F20747970652061- <1>
  2530 00001DA5 206E616D6520616674- <1>
  2531 00001DAE 65722074686520636F- <1>
  2532 00001DB7 6D6D616E642E0A0D00  <1>
  2533 00001DC0 00000000            <1> 		esicache3 dd 0
  2534 00001DC4 00000000            <1> 		esicache2 dd 0
  2535                              <1> 	nonamefound:
  2536 00001DC8 BE[931D0000]        <1> 		mov esi, namenotfoundbatch
  2537 00001DCD E8ECECFFFF          <1> 		call print
  2538 00001DD2 E956EFFFFF          <1> 		jmp nwcmd
  2539                              <1> 	goodbatchname:
  2540 00001DD7 BE00001000          <1> 		mov esi, 0x100000
  2541                              <1> 	batchcreate:
  2542 00001DDC 8935[C01D0000]      <1> 		mov [esicache3], esi
  2543 00001DE2 B00D                <1> 		mov al, 13
  2544 00001DE4 B307                <1> 		mov bl, 7
  2545 00001DE6 B404                <1> 		mov ah, 4
  2546 00001DE8 CD30                <1> 		int 30h
  2547 00001DEA 8935[C41D0000]      <1> 		mov [esicache2], esi
  2548 00001DF0 8A0E                <1> 		mov cl, [esi]
  2549 00001DF2 8B35[C01D0000]      <1> 		mov esi, [esicache3]
  2550 00001DF8 BB[4F1E0000]        <1> 		mov ebx, exitword
  2551 00001DFD E830F0FFFF          <1> 		call cndtest
  2552 00001E02 3C01                <1> 		cmp al, 1
  2553 00001E04 7423                <1> 		je endbatchcreate
  2554 00001E06 3C02                <1> 		cmp al, 2
  2555 00001E08 741F                <1> 		je endbatchcreate
  2556 00001E0A BE[C5400000]        <1> 		mov esi, line
  2557 00001E0F E8AAECFFFF          <1> 		call print
  2558 00001E14 8B35[C41D0000]      <1> 		mov esi, [esicache2]
  2559 00001E1A B00D                <1> 		mov al, 13
  2560 00001E1C B40A                <1> 		mov ah, 10
  2561 00001E1E 668906              <1> 		mov [esi], ax
  2562 00001E21 81C602000000        <1> 		add esi, 2
  2563 00001E27 EBB3                <1> 		jmp batchcreate
  2564                              <1> 	endbatchcreate:
  2565 00001E29 8B35[C01D0000]      <1> 		mov esi, [esicache3]
  2566 00001E2F B800000000          <1> 		mov eax, 0
  2567 00001E34 8806                <1> 		mov [esi], al
  2568 00001E36 BE[C5400000]        <1> 		mov esi, line
  2569 00001E3B E87EECFFFF          <1> 		call print
  2570 00001E40 BE00001000          <1> 		mov esi, 0x100000
  2571 00001E45 E874ECFFFF          <1> 		call print
  2572 00001E4A E9DEEEFFFF          <1> 		jmp nwcmd
  2573                              <1> 	
  2574 00001E4F 5C7800              <1> 	exitword db "\x",0
  2575 00001E52 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  2576 00001E5B 6F20657869742E0A0D- <1>
  2577 00001E64 00                  <1>
  2578                              <1> 		
  2579 00001E65 050473686F77626D70- <1> db 5,4,"showbmp",0
  2580 00001E6E 00                  <1>
  2581 00001E6F 803D[C4280000]00    <1> 		cmp byte [guion], 0
  2582 00001E76 0F8458000000        <1> 		je near noguibmp
  2583 00001E7C BF[700A0000]        <1> 		mov edi, buftxt
  2584 00001E81 81C708000000        <1> 		add edi, 8
  2585 00001E87 BE00001000          <1> 		mov esi, 0x100000
  2586 00001E8C E822200000          <1> 		call loadfile
  2587 00001E91 BE00001000          <1> 		mov esi, 0x100000
  2588 00001E96 B900000000          <1> 		mov ecx, 0
  2589 00001E9B BA00000000          <1> 		mov edx, 0
  2590 00001EA0 B800000000          <1> 		mov eax, 0
  2591 00001EA5 BB00000000          <1> 		mov ebx, 0
  2592 00001EAA E8E0190000          <1> 		call showbmp
  2593 00001EAF B000                <1> 		mov al, 0
  2594 00001EB1 B405                <1> 		mov ah, 5
  2595 00001EB3 CD30                <1> 		int 30h
  2596 00001EB5 BE[700A0000]        <1> 		mov esi, buftxt
  2597 00001EBA 81C608000000        <1> 		add esi, 8
  2598 00001EC0 E8F9EBFFFF          <1> 		call print
  2599 00001EC5 BE[9B1F0000]        <1> 		mov esi, loadedbmpmsg
  2600 00001ECA E8EFEBFFFF          <1> 		call print
  2601 00001ECF E959EEFFFF          <1> 		jmp nwcmd
  2602                              <1> noguibmp:
  2603 00001ED4 BE[E31E0000]        <1> 		mov esi, warnguibmp
  2604 00001ED9 E8E0EBFFFF          <1> 		call print
  2605 00001EDE E94AEEFFFF          <1> 		jmp nwcmd
  2606 00001EE3 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  2607 00001EEC 6E6F7420626520646F- <1>
  2608 00001EF5 6E6520776974686F75- <1>
  2609 00001EFE 742074686520677569- <1>
  2610 00001F07 2E0A0D00            <1>
  2611                              <1> 
  2612 00001F0B 050473686F77747874- <1> db 5,4,"showtxt",0
  2613 00001F14 00                  <1>
  2614 00001F15 BF[700A0000]        <1> 		mov edi, buftxt
  2615 00001F1A 81C708000000        <1> 		add edi, 8
  2616 00001F20 BE00001000          <1> 		mov esi, 0x100000
  2617 00001F25 E8891F0000          <1> 		call loadfile
  2618 00001F2A 81FA94010000        <1> 		cmp edx, 404
  2619 00001F30 0F8419000000        <1> 		je near filenotfound
  2620 00001F36 BE00001000          <1> 		mov esi, 0x100000
  2621 00001F3B E87EEBFFFF          <1> 		call print
  2622 00001F40 BE[C5400000]        <1> 		mov esi, line
  2623 00001F45 E874EBFFFF          <1> 		call print
  2624 00001F4A E9DEEDFFFF          <1> 		jmp nwcmd
  2625                              <1> 		
  2626                              <1> filenotfound:
  2627 00001F4F BE[781F0000]        <1> 		mov esi, filenf
  2628 00001F54 E865EBFFFF          <1> 		call print
  2629 00001F59 BE[700A0000]        <1> 		mov esi, buftxt
  2630 00001F5E 81C608000000        <1> 		add esi, 8
  2631 00001F64 E855EBFFFF          <1> 		call print
  2632 00001F69 BE[831F0000]        <1> 		mov esi, filenf2
  2633 00001F6E E84BEBFFFF          <1> 		call print
  2634 00001F73 E9B5EDFFFF          <1> 		jmp nwcmd
  2635 00001F78 5468652066696C6520- <1> filenf db "The file ",34,0
  2636 00001F81 2200                <1>
  2637 00001F83 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  2638 00001F8C 6F7420626520666F75- <1>
  2639 00001F95 6E642E0D0A00        <1>
  2640                              <1> 		
  2641 00001F9B 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  2642 00001FA4 0A00                <1>
  2643                              <1> 
  2644 00001FA6 050464756D7000      <1> 	db 5,4,"dump",0
  2645 00001FAD BE[700A0000]        <1> 	mov esi, buftxt
  2646 00001FB2 81C605000000        <1> 	add esi, 5
  2647 00001FB8 B900000000          <1> 	mov ecx, 0
  2648 00001FBD E855F2FFFF          <1> 	call cnvrttxt
  2649 00001FC2 89CF                <1> 	mov edi, ecx
  2650 00001FC4 89FE                <1> 	mov esi, edi
  2651 00001FC6 81C680030000        <1> 	add esi, 896
  2652 00001FCC C605[E6100000]00    <1> 	mov byte [firsthexshown],0
  2653                              <1> dumphexloop:
  2654 00001FD3 8B0F                <1> 	mov ecx, [edi]
  2655 00001FD5 E80DF1FFFF          <1> 	call showhex
  2656 00001FDA 81C704000000        <1> 	add edi, 4
  2657 00001FE0 39F7                <1> 	cmp edi, esi
  2658 00001FE2 72EF                <1> 	jb dumphexloop
  2659 00001FE4 E944EDFFFF          <1> 	jmp nwcmd
  2660                              <1> 	
  2661 00001FE9 050465787000        <1> 	db 5,4,"exp",0
  2662 00001FEF B878563412          <1> 	mov eax, 0x12345678
  2663 00001FF4 BBEFCDAB90          <1> 	mov ebx, 0x90ABCDEF
  2664 00001FF9 B945584345          <1> 	mov ecx, "EXCE"
  2665 00001FFE BA5054494F          <1> 	mov edx, "PTIO"
  2666 00002003 BE4E203133          <1> 	mov esi, "N 13"
  2667 00002008 BF[2D0D0000]        <1> 	mov edi, nwcmd
  2668 0000200D CD0D                <1> exception1:	int 13
  2669                              <1> 
  2670 0000200F 050474696D6500      <1> db 5,4,"time",0
  2671 00002016 E805000000          <1> 	call time
  2672 0000201B E90DEDFFFF          <1> 	jmp nwcmd
  2673                              <1> time:
  2674 00002020 E8C1000000          <1> 	call tstackput1
  2675 00002025 B00A                <1> 	mov al,10			;Get RTC register A
  2676 00002027 E8EB000000          <1> 	call tget1
  2677 0000202C A880                <1> 	test al,0x80			;Is update in progress?
  2678 0000202E 75F0                <1> 	jne time				; yes, wait
  2679                              <1> 
  2680 00002030 B000                <1> 	mov al,0			;Get seconds (00 to 59)
  2681 00002032 E8E0000000          <1> 	call tget1
  2682 00002037 A2[55210000]        <1> 	mov [RTCtimeSecond],al
  2683                              <1> 
  2684 0000203C B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  2685 0000203E E8D4000000          <1> 	call tget1
  2686 00002043 A2[56210000]        <1> 	mov [RTCtimeMinute],al
  2687                              <1> 
  2688 00002048 B004                <1> 	mov al,0x04			;Get hours (see notes)
  2689 0000204A E8C8000000          <1> 	call tget1
  2690 0000204F A2[57210000]        <1> 	mov [RTCtimeHour],al
  2691                              <1> 
  2692 00002054 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  2693 00002056 E8BC000000          <1> 	call tget1
  2694 0000205B A2[58210000]        <1> 	mov [RTCtimeDay],al
  2695                              <1> 
  2696 00002060 B008                <1> 	mov al,0x08			;Get month (01 to 12)
  2697 00002062 E8B0000000          <1> 	call tget1
  2698 00002067 A2[59210000]        <1> 	mov [RTCtimeMonth],al
  2699                              <1> 
  2700 0000206C B009                <1> 	mov al,0x09			;Get year (00 to 99)
  2701 0000206E E8A4000000          <1> 	call tget1
  2702 00002073 A2[5A210000]        <1> 	mov [RTCtimeYear],al
  2703                              <1> 	
  2704 00002078 BE[5B210000]        <1> 	mov esi, timeshow
  2705 0000207D 8A2D[57210000]      <1> 	mov ch, [RTCtimeHour]
  2706 00002083 E89A000000          <1> 	call tput1
  2707 00002088 8A2D[56210000]      <1> 	mov ch, [RTCtimeMinute]
  2708 0000208E E88F000000          <1> 	call tput1
  2709 00002093 8A2D[55210000]      <1> 	mov ch, [RTCtimeSecond]
  2710 00002099 E884000000          <1> 	call tput1
  2711 0000209E BE[65210000]        <1> 	mov esi, dateshow
  2712 000020A3 8A2D[59210000]      <1> 	mov ch, [RTCtimeMonth]
  2713 000020A9 E874000000          <1> 	call tput1
  2714 000020AE 8A2D[58210000]      <1> 	mov ch, [RTCtimeDay]
  2715 000020B4 E869000000          <1> 	call tput1
  2716 000020B9 B520                <1> 	mov ch, 0x20
  2717 000020BB E862000000          <1> 	call tput1
  2718 000020C0 4E                  <1> 	dec esi
  2719 000020C1 8A2D[5A210000]      <1> 	mov ch, [RTCtimeYear]
  2720 000020C7 E856000000          <1> 	call tput1
  2721 000020CC E82F000000          <1> 	call tstackget1
  2722 000020D1 BE[5B210000]        <1> 	mov esi, timeshow
  2723 000020D6 66BB0700            <1> 	mov bx, 7
  2724 000020DA B401                <1> 	mov ah, 1
  2725 000020DC B000                <1> 	mov al, 0
  2726 000020DE CD30                <1> 	int 30h
  2727 000020E0 66B80000            <1> 	mov ax, 0
  2728 000020E4 CD30                <1> 	int 30h
  2729                              <1> 	
  2730                              <1> tstackput1:
  2731 000020E6 8935[51210000]      <1> 	mov [tstack + 20], esi
  2732 000020EC BE[3D210000]        <1> 	mov esi, tstack
  2733 000020F1 8906                <1> 	mov [esi], eax
  2734 000020F3 895E04              <1> 	mov [esi + 4], ebx
  2735 000020F6 894E08              <1> 	mov [esi + 8], ecx
  2736 000020F9 89560C              <1> 	mov [esi + 12], edx
  2737 000020FC 897E10              <1> 	mov [esi + 16], edi
  2738 000020FF C3                  <1> 	ret
  2739                              <1> 	
  2740                              <1> tstackget1:
  2741 00002100 BE[3D210000]        <1> 	mov esi, tstack
  2742 00002105 8B06                <1> 	mov eax, [esi]
  2743 00002107 8B5E04              <1> 	mov ebx, [esi + 4]
  2744 0000210A 8B4E08              <1> 	mov ecx, [esi + 8]
  2745 0000210D 8B560C              <1> 	mov edx, [esi + 12]
  2746 00002110 8B7E10              <1> 	mov edi, [esi + 16]
  2747 00002113 8B7614              <1> 	mov esi, [esi + 20]
  2748 00002116 C3                  <1> 	ret
  2749                              <1> 	
  2750                              <1> tget1:
  2751 00002117 66BA7000            <1> 	mov dx, 0x70
  2752 0000211B EE                  <1> 	out dx, al
  2753 0000211C 6642                <1> 	inc dx
  2754 0000211E EC                  <1> 	in al, dx
  2755 0000211F 664A                <1> 	dec dx
  2756 00002121 C3                  <1> 	ret
  2757                              <1> 	
  2758                              <1> tput1:
  2759 00002122 66C1E904            <1> 	shr cx, 4
  2760 00002126 B030                <1> 	mov al, 48
  2761 00002128 00E8                <1> 	add al, ch
  2762 0000212A 8806                <1> 	mov [esi], al
  2763 0000212C 46                  <1> 	inc esi
  2764 0000212D B030                <1> 	mov al, 48
  2765 0000212F C0E904              <1> 	shr cl, 4
  2766 00002132 00C8                <1> 	add al, cl
  2767 00002134 8806                <1> 	mov [esi], al
  2768 00002136 81C602000000        <1> 	add esi, 2
  2769 0000213C C3                  <1> 	ret
  2770                              <1> 		
  2771 0000213D 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  2772 00002146 000000000000000000- <1>
  2773 0000214F 000000000000        <1>
  2774 00002155 00                  <1> 	RTCtimeSecond db 0
  2775 00002156 00                  <1> 	RTCtimeMinute db 0
  2776 00002157 00                  <1> 	RTCtimeHour db 0
  2777 00002158 00                  <1> 	RTCtimeDay db 0
  2778 00002159 00                  <1> 	RTCtimeMonth db 0
  2779 0000215A 00                  <1> 	RTCtimeYear db 0
  2780 0000215B 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  2781 00002164 0A                  <1>
  2782 00002165 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  2783 0000216E 300D0A00            <1>
  2784                              <1> 
  2785 00002172 0504637075696400    <1> db 5,4,"cpuid",0
  2786 0000217A B800000000          <1> 	mov eax, 0
  2787 0000217F 0FA2                <1> 	cpuid
  2788 00002181 891D[D6210000]      <1> 	mov [cpuidbuf], ebx
  2789 00002187 8915[DA210000]      <1> 	mov [cpuidbuf + 4], edx
  2790 0000218D 890D[DE210000]      <1> 	mov [cpuidbuf + 8], ecx
  2791 00002193 BE[D6210000]        <1> 	mov esi, cpuidbuf
  2792 00002198 E821E9FFFF          <1> 	call print
  2793 0000219D BE[C5400000]        <1> 	mov esi, line
  2794 000021A2 E817E9FFFF          <1> 	call print
  2795 000021A7 B801000000          <1> 	mov eax, 1
  2796 000021AC 0FA2                <1> 	cpuid
  2797 000021AE 89C1                <1> 	mov ecx, eax
  2798 000021B0 C605[E6100000]02    <1> 	mov byte [firsthexshown], 2
  2799 000021B7 E82BEFFFFF          <1> 	call showhex
  2800 000021BC B808000080          <1> 	mov eax, 0x80000008
  2801 000021C1 0FA2                <1> 	cpuid
  2802 000021C3 89C1                <1> 	mov ecx, eax
  2803 000021C5 C605[E6100000]02    <1> 	mov byte [firsthexshown], 2
  2804 000021CC E816EFFFFF          <1> 	call showhex
  2805 000021D1 E957EBFFFF          <1> 	jmp nwcmd
  2806                              <1> 	
  2807 000021D6 00<rept>            <1> cpuidbuf times 13 db 0
  2808                              <1> cpuidvendorend:
  2809                              <1> progend:		;programs end here	
  2810                              <1> batchprogend:
  2811                                      %include 'source/input.asm'
  2812                              <1> PS2SET:
  2813 000021E3 B0A8                <1>   mov  al, 0xa8		; enable mouse port
  2814 000021E5 E664                <1>   out  0x64, al		; write to keyboardcontroller
  2815 000021E7 E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  2816 000021EC C3                  <1> ret
  2817                              <1> 
  2818                              <1> ;***********************************************************************
  2819                              <1> ;Check if command is accepted. (not got stuck in inputbuffer)
  2820                              <1> ;***********************************************************************
  2821                              <1> CHKPRT:
  2822 000021ED 66B96400            <1>   mov  cx, 100
  2823                              <1>  .again:
  2824 000021F1 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  2825 000021F3 A802                <1>   test al, 2		; Check if input buffer is empty
  2826 000021F5 7402                <1>   je .go
  2827 000021F7 E2F8                <1>   loop .again
  2828                              <1>  .go:
  2829 000021F9 C3                  <1> ret
  2830                              <1> 
  2831                              <1> ;***********************************************************************
  2832                              <1> ;Write to mouse
  2833                              <1> ;***********************************************************************
  2834                              <1> WMOUS:
  2835 000021FA B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  2836 000021FC E664                <1>   out  0x64, al		; write to keyboardcontroller
  2837 000021FE E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2838 00002203 C3                  <1> ret
  2839                              <1> 
  2840                              <1> 
  2841                              <1> 
  2842                              <1> ;***********************************************************************
  2843                              <1> ;mouse output buffer full
  2844                              <1> ;***********************************************************************
  2845                              <1> MBUFFUL:
  2846 00002204 66B96400            <1>   mov cx, 100
  2847                              <1>  .mn:
  2848 00002208 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  2849 0000220A A820                <1>   test al, 0x20		; check if mouse output buffer is full
  2850 0000220C 7402                <1>   jz  .mnn
  2851 0000220E E2F8                <1>   loop .mn
  2852                              <1>  .mnn:
  2853 00002210 C3                  <1> ret
  2854                              <1> 
  2855                              <1> 
  2856                              <1> ;***********************************************************************
  2857                              <1> ;Write activate Mouse HardWare
  2858                              <1> ;***********************************************************************
  2859                              <1> ACTMOUS:
  2860 00002211 E8E4FFFFFF          <1>   call WMOUS
  2861 00002216 B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  2862 00002218 E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  2863 0000221A E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2864 0000221F E801000000          <1>   call CHKMOUS		; check if a byte is available
  2865 00002224 C3                  <1> ret
  2866                              <1> 
  2867                              <1> ;***********************************************************************
  2868                              <1> ;Check if mouse has info for us
  2869                              <1> ;***********************************************************************
  2870                              <1> CHKMOUS:
  2871 00002225 B300                <1>   mov  bl, 0
  2872 00002227 66B96400            <1>   mov cx, 100
  2873                              <1>  .vrd:
  2874 0000222B E464                <1>   in   al, 0x64		; read from keyboardcontroller
  2875 0000222D A801                <1>   test al, 1		; check if controller buffer (60h) has data
  2876 0000222F 7504                <1>   jnz .yy
  2877 00002231 E2F8                <1>   loop .vrd
  2878 00002233 B301                <1>   mov  bl, 1
  2879                              <1>  .yy:
  2880 00002235 C3                  <1> ret
  2881                              <1> 
  2882                              <1> ;***********************************************************************
  2883                              <1> ;Get Mouse Byte
  2884                              <1> ;***********************************************************************
  2885                              <1> GETB:
  2886                              <1>  .cagain:
  2887 00002236 E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  2888 0000223B 08DB                <1>   or bl, bl
  2889 0000223D 75F7                <1>   jnz .cagain
  2890 0000223F B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  2891 00002241 E664                <1>   out  0x64, al		; write to keyboardcontroller
  2892 00002243 E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2893 00002248 6631C0              <1>   xor  ax, ax
  2894 0000224B E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  2895 0000224D 88C2                <1>   mov  dl, al
  2896 0000224F B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  2897 00002251 E664                <1>   out  0x64, al		; write to keyboardcontroller
  2898 00002253 E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2899 00002258 88D0                <1>   mov  al, dl
  2900 0000225A C3                  <1> ret
  2901                              <1> 
  2902 0000225B 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  2903 0000225C 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  2904 0000225D 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  2905 0000225E 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  2906 0000225F 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  2907                              <1> 
  2908                              <1> 
  2909                              <1> 	guistartin:
  2910 00002260 B800000000          <1> 		mov eax, 0
  2911 00002265 66A3[8B0A0000]      <1> 		mov [lastkey], ax
  2912 0000226B E464                <1> 		in al, 64h ; Status
  2913 0000226D A801                <1> 		test al, 1 ; output buffer full?
  2914 0000226F 74EF                <1> 		jz guistartin
  2915 00002271 A820                <1> 		test al, 20h ; PS2-Mouse?
  2916 00002273 0F85DE000000        <1> 		jnz near maincall2
  2917 00002279 E460                <1> 		in al, 60h
  2918 0000227B 88C4                <1> 		mov ah, al
  2919 0000227D B000                <1> 		mov al, 0
  2920 0000227F 8825[8C0A0000]      <1> 		mov [lastkey + 1], ah
  2921 00002285 88E0                <1> 		mov al, ah
  2922 00002287 BF[9B250000]        <1> 		mov edi, scancode
  2923                              <1> 	guisearchscan: 
  2924 0000228C 3C40                <1> 		cmp al, 40h
  2925 0000228E 7315                <1> 		jae guiscanother
  2926 00002290 B400                <1> 		mov ah, 0
  2927 00002292 D0E0                <1> 		shl al, 1
  2928 00002294 01C7                <1> 		add edi, eax
  2929 00002296 D0E8                <1> 		shr al, 1
  2930 00002298 8A27                <1> 		mov ah, [edi]
  2931 0000229A 80FC00              <1> 		cmp ah, 0
  2932 0000229D 7406                <1> 		je guiscanother
  2933 0000229F E964000000          <1> 		jmp guiscanfound
  2934 000022A4 00                  <1> guiupper db 0
  2935                              <1> guiscanother:
  2936 000022A5 88C4                <1> 		mov ah, al
  2937 000022A7 B000                <1> 		mov al, 0
  2938 000022A9 66A3[8B0A0000]      <1> 		mov [lastkey], ax
  2939                              <1> 		;cmp ah, 4Dh
  2940                              <1> 		;je near nextimage
  2941 000022AF 80FC2A              <1> 		cmp ah, 2Ah
  2942 000022B2 0F8437000000        <1> 		je near guishifton
  2943 000022B8 80FC36              <1> 		cmp ah, 36h
  2944 000022BB 0F842E000000        <1> 		je near guishifton
  2945 000022C1 80FC1C              <1> 		cmp ah, 1Ch
  2946 000022C4 0F843D000000        <1> 		je near guientdown
  2947 000022CA 80FCAA              <1> 		cmp ah, 0AAh
  2948 000022CD 0F8428000000        <1> 		je near guishiftoff
  2949 000022D3 80FCB6              <1> 		cmp ah, 0B6h
  2950 000022D6 0F841F000000        <1> 		je near guishiftoff
  2951 000022DC 80FC3A              <1> 		cmp ah, 3Ah
  2952 000022DF 0F8401000000        <1> 		je near guishift
  2953 000022E5 C3                  <1> 		ret
  2954                              <1> 	guishift:
  2955 000022E6 A0[A4220000]        <1> 		mov al, [guiupper]
  2956 000022EB 3C01                <1> 		cmp al, 1
  2957 000022ED 730C                <1> 		jae guishiftoff
  2958                              <1> 	guishifton:
  2959 000022EF C605[A4220000]01    <1> 		mov byte [guiupper], 1
  2960 000022F6 E965FFFFFF          <1> 		jmp guistartin
  2961                              <1> 	guishiftoff:
  2962 000022FB C605[A4220000]00    <1> 		mov byte [guiupper], 0
  2963 00002302 E959FFFFFF          <1> 		jmp guistartin
  2964                              <1> 	guientdown:
  2965 00002307 C3                  <1> 		ret
  2966                              <1> 	guiscanfound:
  2967 00002308 81C701000000        <1> 		add edi, 1
  2968 0000230E 803D[A4220000]01    <1> 		cmp byte [guiupper], 1
  2969 00002315 7306                <1> 		jae uppercasegui
  2970 00002317 81EF01000000        <1> 		sub edi, 1
  2971                              <1> uppercasegui:
  2972 0000231D 8A07                <1> 		mov al,[edi]
  2973 0000231F A2[8B0A0000]        <1> 		mov [lastkey], al
  2974 00002324 C3                  <1> 		ret
  2975                              <1> 		
  2976                              <1> 		
  2977                              <1> 	cursorgui:
  2978 00002325 803D[33390000]01    <1> 		cmp byte [mouseon], 1
  2979 0000232C 0F8425000000        <1> 		je near maincall2
  2980                              <1> 
  2981                              <1> 	initmouse:
  2982 00002332 803D[C4280000]00    <1> 		cmp byte [guion], 0
  2983 00002339 7405                <1> 		je initmouseterm
  2984 0000233B E851060000          <1> 		call switchmousepos2
  2985                              <1> 	initmouseterm:
  2986 00002340 E89EFEFFFF          <1> 	  	call PS2SET
  2987 00002345 E8C7FEFFFF          <1> 		call ACTMOUS
  2988 0000234A C605[33390000]01    <1> 		mov byte [mouseon],1
  2989 00002351 E8E0FEFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  2990                              <1> 				;;If the bytes are mixed up,
  2991                              <1> 				;;remove this line or add another of this line.
  2992                              <1> 		;call GETB
  2993 00002356 C3                  <1> 	ret
  2994                              <1> 	maincall2:
  2995 00002357 803D[33390000]01    <1> 		  cmp byte [mouseon], 1
  2996 0000235E 75D2                <1> 		  jne initmouse
  2997 00002360 E8D1FEFFFF          <1> 		  call GETB
  2998 00002365 88C3                <1> 		  mov  bl, al
  2999 00002367 80E301              <1> 		  and  bl, 1
  3000 0000236A 881D[5B220000]      <1> 		  mov  BYTE [LBUTTON], bl
  3001 00002370 88C3                <1> 		  mov  bl, al
  3002 00002372 80E302              <1> 		  and  bl, 2
  3003 00002375 D0EB                <1> 		  shr  bl, 1
  3004 00002377 881D[5C220000]      <1> 		  mov  BYTE [RBUTTON], bl
  3005 0000237D 88C3                <1> 		  mov  bl, al
  3006 0000237F 80E304              <1> 		  and  bl, 4
  3007 00002382 C0EB02              <1> 		  shr  bl, 2
  3008 00002385 881D[5D220000]      <1> 		  mov  BYTE [MBUTTON], bl
  3009 0000238B E8A6FEFFFF          <1> 		  call GETB
  3010 00002390 A2[5E220000]        <1> 		  mov  BYTE [XCOORD], al
  3011 00002395 E89CFEFFFF          <1> 		  call GETB
  3012 0000239A A2[5F220000]        <1> 		  mov  BYTE [YCOORD], al
  3013                              <1> 
  3014                              <1> 	showpixelcursor:
  3015 0000239F 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3016 000023A6 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3017 000023AD 668915[F5240000]    <1> 		mov [lastmouseposition], dx
  3018 000023B4 66890D[F7240000]    <1> 		mov [lastmouseposition + 2], cx
  3019 000023BB A0[5E220000]        <1> 		mov al, [XCOORD]
  3020 000023C0 3C80                <1> 		cmp al, 128
  3021 000023C2 730C                <1> 		jae subxcoord
  3022 000023C4 00C0                <1> 		add al, al
  3023 000023C6 B400                <1> 		mov ah, 0
  3024 000023C8 6601C2              <1> 		add dx, ax
  3025 000023CB E90B000000          <1> 		jmp subxcoorddn
  3026                              <1> 	subxcoord:
  3027 000023D0 00C0                <1> 		add al, al
  3028 000023D2 B300                <1> 		mov bl, 0
  3029 000023D4 28C3                <1> 		sub bl, al
  3030 000023D6 B700                <1> 		mov bh, 0
  3031 000023D8 6629DA              <1> 		sub dx, bx
  3032                              <1> 	subxcoorddn:
  3033 000023DB 8A1D[5F220000]      <1> 		mov bl, [YCOORD]
  3034 000023E1 B000                <1> 		mov al, 0
  3035 000023E3 28D8                <1> 		sub al, bl
  3036 000023E5 3C80                <1> 		cmp al, 128
  3037 000023E7 730A                <1> 		jae subycoord
  3038 000023E9 B400                <1> 		mov ah, 0
  3039 000023EB 6601C1              <1> 		add cx, ax
  3040 000023EE E909000000          <1> 		jmp subycoorddn
  3041                              <1> 	subycoord:
  3042 000023F3 B300                <1> 		mov bl, 0
  3043 000023F5 28C3                <1> 		sub bl, al
  3044 000023F7 B700                <1> 		mov bh, 0
  3045 000023F9 6629D9              <1> 		sub cx, bx
  3046                              <1> 	subycoorddn:
  3047 000023FC 6681FA204E          <1> 		cmp dx, 20000
  3048 00002401 7604                <1> 		jbe nooriginx2
  3049 00002403 66BA0000            <1> 		mov dx, 0
  3050                              <1> 	nooriginx2:
  3051 00002407 6681F9204E          <1> 		cmp cx, 20000
  3052 0000240C 7604                <1> 		jbe nooriginy2
  3053 0000240E 66B90000            <1> 		mov cx, 0
  3054                              <1> 	nooriginy2:
  3055 00002412 6681FA0000          <1> 		cmp dx, 0
  3056 00002417 7415                <1> 		je nofixxcolumn2
  3057 00002419 663B15[E4360000]    <1> 		cmp dx, [resolutionx2]
  3058 00002420 720C                <1> 		jb nofixxcolumn2
  3059 00002422 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  3060 00002429 6681EA0200          <1> 		sub dx, 2
  3061                              <1> 	nofixxcolumn2:
  3062 0000242E 6681F90000          <1> 		cmp cx, 0
  3063 00002433 7415                <1> 		je nofixyrow2
  3064 00002435 663B0D[E0360000]    <1> 		cmp cx, [resolutiony]
  3065 0000243C 720C                <1> 		jb nofixyrow2
  3066 0000243E 668B0D[E0360000]    <1> 		mov cx, [resolutiony]
  3067 00002445 6681E90100          <1> 		sub cx, 1
  3068                              <1> 	nofixyrow2:
  3069 0000244A 668915[F9240000]    <1> 		mov [mousecursorposition], dx
  3070 00002451 66890D[FB240000]    <1> 		mov [mousecursorposition + 2], cx
  3071 00002458 803D[C4280000]00    <1> 		cmp byte [guion], 0
  3072 0000245F 0F8498000000        <1> 		je near termmouse
  3073 00002465 E8BE040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3074 0000246A 803D[5B220000]01    <1> 		cmp byte [LBUTTON], 1
  3075 00002471 0F8497050000        <1> 		je near clickicon
  3076 00002477 803D[5C220000]01    <1> 		cmp byte [RBUTTON], 1
  3077 0000247E 0F848A050000        <1> 		je near clickicon
  3078 00002484 A0[FB290000]        <1> 		mov al, [pbutton]
  3079 00002489 C705[FE290000]0000- <1> 		mov dword [dragging], 0
  3080 00002491 0000                <1>
  3081 00002493 3C00                <1> 		cmp al, 0
  3082 00002495 740F                <1> 		je nopreviousbutton
  3083 00002497 E829040000          <1> 		call clearmousecursor
  3084 0000249C E8A10A0000          <1> 		call reloadallgraphics
  3085 000024A1 E8EB040000          <1> 		call switchmousepos2
  3086                              <1> 	nopreviousbutton:
  3087 000024A6 B000                <1> 		mov al, 0
  3088 000024A8 A2[FB290000]        <1> 		mov [pbutton], al
  3089 000024AD A0[5B220000]        <1> 		mov al, [LBUTTON]
  3090 000024B2 A2[FC290000]        <1> 		mov [pLBUTTON], al
  3091 000024B7 A0[5C220000]        <1> 		mov al, [RBUTTON]
  3092 000024BC A2[FD290000]        <1> 		mov [pRBUTTON], al
  3093 000024C1 B900000000          <1> 		mov ecx, 0
  3094 000024C6 BA00000000          <1> 		mov edx, 0
  3095 000024CB 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3096 000024D2 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3097 000024D9 66BB9CE7            <1> 		mov bx, 1110011110011100b
  3098 000024DD B400                <1> 		mov ah, 0
  3099 000024DF B080                <1> 		mov al, 128
  3100 000024E1 C605[C1280000]01    <1> 		mov byte [showcursorfonton], 1
  3101 000024E8 E807120000          <1> 		call showfontvesa
  3102 000024ED C605[C1280000]00    <1> 		mov byte [showcursorfonton], 0
  3103 000024F4 C3                  <1> 		ret
  3104                              <1> 
  3105 000024F5 84008400            <1> lastmouseposition dw 132,132
  3106 000024F9 84008400            <1> mousecursorposition dw 132,132	
  3107                              <1> 
  3108                              <1> termmouse:
  3109 000024FD C3                  <1> 	ret	;;lets try this later
  3110 000024FE BE[850C0000]        <1> 		mov esi, videobuf2
  3111 00002503 BA00000000          <1> 		mov edx, 0
  3112 00002508 668B15[F5240000]    <1> 		mov dx, [lastmouseposition]
  3113 0000250F 668B0D[F7240000]    <1> 		mov cx, [lastmouseposition + 2]
  3114 00002516 66A1[99250000]      <1> 		mov ax, [cursorcache]
  3115 0000251C 663D0000            <1> 		cmp ax, 0
  3116 00002520 7426                <1> 		je nocopycursorcache
  3117 00002522 66C1E104            <1> 		shl cx, 4
  3118 00002526 66C1E203            <1> 		shl dx, 3
  3119 0000252A 01D6                <1> 		add esi, edx
  3120 0000252C 66BA0000            <1> 		mov dx, 0
  3121 00002530 8A15[FC080000]      <1> 		mov dl, [charxy]
  3122 00002536 6641                <1> 		inc cx
  3123                              <1> termmousecplp1:
  3124 00002538 01D6                <1> 		add esi, edx
  3125 0000253A 6649                <1> 		dec cx
  3126 0000253C 6681F90000          <1> 		cmp cx, 0
  3127 00002541 75F5                <1> 		jne termmousecplp1
  3128 00002543 29D6                <1> 		sub esi, edx
  3129 00002545 668906              <1> 		mov [esi], ax
  3130                              <1> nocopycursorcache:
  3131 00002548 BE[850C0000]        <1> 		mov esi, videobuf2
  3132 0000254D BA00000000          <1> 		mov edx, 0
  3133 00002552 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3134 00002559 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3135 00002560 66C1E104            <1> 		shl cx, 4
  3136 00002564 66C1E203            <1> 		shl dx, 3
  3137 00002568 01D6                <1> 		add esi, edx
  3138 0000256A 66BA0000            <1> 		mov dx, 0
  3139 0000256E 8A15[FC080000]      <1> 		mov dl, [charxy]
  3140 00002574 6641                <1> 		inc cx
  3141                              <1> termmousecplp2:
  3142 00002576 01D6                <1> 		add esi, edx
  3143 00002578 6649                <1> 		dec cx
  3144 0000257A 6681F90000          <1> 		cmp cx, 0
  3145 0000257F 75F5                <1> 		jne termmousecplp2
  3146 00002581 29D6                <1> 		sub esi, edx
  3147 00002583 668B06              <1> 		mov ax, [esi]
  3148 00002586 66A3[99250000]      <1> 		mov [cursorcache], ax
  3149 0000258C B080                <1> 		mov al, 128
  3150 0000258E B407                <1> 		mov ah, 7
  3151 00002590 668906              <1> 		mov [esi], ax
  3152 00002593 E816E6FFFF          <1> 		call termcopy
  3153 00002598 C3                  <1> 		ret
  3154 00002599 0000                <1> cursorcache db 0,0
  3155                              <1> 	
  3156                              <1> scancode:
  3157 0000259B 0000                <1> 	db 0,0		;,0h
  3158 0000259D 0000                <1> 	db 0,0		;,1h
  3159 0000259F 3121                <1> 	db '1','!'	;,2h
  3160 000025A1 3240                <1> 	db '2','@'	;,3h
  3161 000025A3 3323                <1> 	db '3','#'	;,4h
  3162 000025A5 3424                <1> 	db '4','$'	;,5h
  3163 000025A7 3525                <1> 	db '5','%'	;,6h
  3164 000025A9 365E                <1> 	db '6','^'	;,7h
  3165 000025AB 3726                <1> 	db '7','&'	;,8h
  3166 000025AD 382A                <1> 	db '8','*'	;,9h
  3167 000025AF 3928                <1> 	db '9','('	;,0Ah
  3168 000025B1 3029                <1> 	db '0',')'	;,0Bh
  3169 000025B3 2D5F                <1> 	db '-','_'	;,0Ch
  3170 000025B5 3D2B                <1> 	db '=','+'	;,0Dh
  3171 000025B7 0808                <1> 	db 8,8		;,0Eh
  3172 000025B9 0000                <1> 	db 0,0		;,0Fh
  3173 000025BB 7151                <1> 	db 'q','Q'	;,10h
  3174 000025BD 7757                <1> 	db 'w','W'	;,11h
  3175 000025BF 6545                <1> 	db 'e','E'	;,12h
  3176 000025C1 7252                <1> 	db 'r','R'	;,13h
  3177 000025C3 7454                <1> 	db 't','T'	;,14h
  3178 000025C5 7959                <1> 	db 'y','Y'	;,15h
  3179 000025C7 7555                <1> 	db 'u','U'	;,16h
  3180 000025C9 6949                <1> 	db 'i','I'	;,17h
  3181 000025CB 6F4F                <1> 	db 'o','O'	;,18h
  3182 000025CD 7050                <1> 	db 'p','P'	;,19h
  3183 000025CF 5B7B                <1> 	db '[','{'	;,1Ah
  3184 000025D1 5D7D                <1> 	db ']','}'	;,1Bh
  3185 000025D3 0000                <1> 	db 0,0		;,1Ch
  3186 000025D5 0000                <1> 	db 0,0		;,1Dh
  3187 000025D7 6141                <1> 	db 'a','A'	;,1Eh
  3188 000025D9 7353                <1> 	db 's','S'	;,1Fh
  3189 000025DB 6444                <1> 	db 'd','D'	;,20h
  3190 000025DD 6646                <1> 	db 'f','F'	;,21h
  3191 000025DF 6747                <1> 	db 'g','G'	;,22h
  3192 000025E1 6848                <1> 	db 'h','H'	;,23h
  3193 000025E3 6A4A                <1> 	db 'j','J'	;,24h
  3194 000025E5 6B4B                <1> 	db 'k','K'	;,25h
  3195 000025E7 6C4C                <1> 	db 'l','L'	;,26h
  3196 000025E9 3B3A                <1> 	db ';',':'	;,27h
  3197 000025EB 2722                <1> 	db 27h,22h	;,28h
  3198 000025ED 607E                <1> 	db '`','~'	;,29h
  3199 000025EF 0000                <1> 	db 0,0		;,2Ah
  3200 000025F1 5C7C                <1> 	db '\','|'	;,2Bh
  3201 000025F3 7A5A                <1> 	db 'z','Z'	;,2Ch
  3202 000025F5 7858                <1> 	db 'x','X'	;,2Dh
  3203 000025F7 6343                <1> 	db 'c','C'	;,2Eh
  3204 000025F9 7656                <1> 	db 'v','V'	;,2Fh
  3205 000025FB 6242                <1> 	db 'b','B'	;,30h
  3206 000025FD 6E4E                <1> 	db 'n','N'	;,31h
  3207 000025FF 6D4D                <1> 	db 'm','M'	;,32h
  3208 00002601 2C3C                <1> 	db ',','<'	;,33h
  3209 00002603 2E3E                <1> 	db '.','>'	;,34h
  3210 00002605 2F3F                <1> 	db '/','?'	;,35h
  3211 00002607 0000                <1> 	db 0,0		;,36h
  3212 00002609 0000                <1> 	db 0,0		;,37h
  3213 0000260B 0000                <1> 	db 0,0		;,38h
  3214 0000260D 2020                <1> 	db ' ',' '	;,39h
  3215                              <1> noscan:
  3216                                      %include 'source/gui.asm'
  3217                              <1> guiclear:
  3218 0000260F 8B3D[35220000]      <1> 	mov edi, [physbaseptr]
  3219 00002615 668B15[E2360000]    <1> 	mov dx, [resolutionx]
  3220 0000261C 668B0D[E0360000]    <1> 	mov cx, [resolutiony]
  3221 00002623 66A1[4C260000]      <1> 	mov ax, [background]
  3222                              <1> guiclearloop:
  3223 00002629 668907              <1> 	mov [edi], ax
  3224 0000262C 81C702000000        <1> 	add edi, 2
  3225 00002632 664A                <1> 	dec dx
  3226 00002634 6681FA0000          <1> 	cmp dx, 0
  3227 00002639 77EE                <1> 	ja guiclearloop
  3228 0000263B 6649                <1> 	dec cx
  3229 0000263D 668B15[E2360000]    <1> 	mov dx, [resolutionx]
  3230 00002644 6681F90000          <1> 	cmp cx, 0
  3231 00002649 77DE                <1> 	ja guiclearloop
  3232 0000264B C3                  <1> 	ret
  3233                              <1> 
  3234 0000264C CF7B                <1> background dw 0111101111001111b
  3235                              <1> 
  3236                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  3237 0000264E E861ECFFFF          <1> 	call indexfiles
  3238 00002653 8B3D[35220000]      <1> 	mov edi, [physbaseptr]
  3239 00002659 668B15[E2360000]    <1> 	mov dx, [resolutionx]
  3240 00002660 668B0D[E0360000]    <1> 	mov cx, [resolutiony]
  3241 00002667 668B1D[4C260000]    <1> 	mov bx, [background]
  3242                              <1> guiclearloop2:
  3243 0000266E 66891F              <1> 	mov [edi], bx
  3244 00002671 81C702000000        <1> 	add edi, 2
  3245 00002677 664A                <1> 	dec dx
  3246 00002679 6681FA0000          <1> 	cmp dx, 0
  3247 0000267E 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  3248 00002684 6649                <1> 	dec cx
  3249 00002686 668B15[E2360000]    <1> 	mov dx, [resolutionx]
  3250 0000268D 6681F90000          <1> 	cmp cx, 0
  3251 00002692 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  3252 00002698 C605[C4280000]01    <1> 	mov byte [guion], 1
  3253 0000269F B800000000          <1> 	mov eax, 0
  3254 000026A4 BB00000000          <1> 	mov ebx, 0
  3255 000026A9 B900000000          <1> 	mov ecx, 0
  3256 000026AE BA00000000          <1> 	mov edx, 0
  3257                              <1> 	
  3258 000026B3 BE[48390000]        <1> 	mov esi, pacmsg
  3259 000026B8 66B80000            <1> 	mov ax, 0
  3260 000026BC BB00000000          <1> 	mov ebx, 0
  3261 000026C1 66B90200            <1> 	mov cx, 2
  3262 000026C5 66BA0400            <1> 	mov dx, 4
  3263 000026C9 E8BA0B0000          <1> 	call showstring
  3264                              <1> 	
  3265 000026CE BE[5E3A0000]        <1> 	mov esi, interneticon
  3266 000026D3 66B80000            <1> 	mov ax, 0
  3267 000026D7 BB[BD390000]        <1> 	mov ebx, noie
  3268 000026DC 66B91800            <1> 	mov cx, 24
  3269 000026E0 66BA0400            <1> 	mov dx, 4
  3270 000026E4 E81E0F0000          <1> 	call showicon
  3271                              <1> 	
  3272 000026E9 BE[E03A0000]        <1> 	mov esi, wordicon
  3273 000026EE 66B80000            <1> 	mov ax, 0
  3274 000026F2 BB00000000          <1> 	mov ebx, 0
  3275 000026F7 66B91800            <1> 	mov cx, 24
  3276 000026FB 66BA3000            <1> 	mov dx, 48
  3277 000026FF E8030F0000          <1> 	call showicon
  3278                              <1> 	
  3279 00002704 BE[623B0000]        <1> 	mov esi, pacmanpellet
  3280 00002709 66B80000            <1> 	mov ax, 0
  3281 0000270D BB00000000          <1> 	mov ebx, 0
  3282 00002712 66B94000            <1> 	mov cx, 64
  3283 00002716 66BA0400            <1> 	mov dx, 4
  3284 0000271A E8E80E0000          <1> 	call showicon
  3285                              <1> 	
  3286 0000271F BE[663C0000]        <1> 	mov esi, pacman
  3287 00002724 66B80000            <1> 	mov ax, 0
  3288 00002728 BB[A2390000]        <1> 	mov ebx, pacmannomnom
  3289 0000272D 66B94000            <1> 	mov cx, 64
  3290 00002731 66BA3000            <1> 	mov dx, 48
  3291 00002735 E8CD0E0000          <1> 	call showicon
  3292                              <1> 	
  3293 0000273A BE[E43B0000]        <1> 	mov esi, ghostie
  3294 0000273F 66B80000            <1> 	mov ax, 0
  3295 00002743 BB[87390000]        <1> 	mov ebx, boo
  3296 00002748 66B96C00            <1> 	mov cx, 108
  3297 0000274C 66BA0400            <1> 	mov dx, 4
  3298 00002750 E8B20E0000          <1> 	call showicon
  3299                              <1> 
  3300 00002755 BE[34390000]        <1> 	mov esi, start
  3301 0000275A 668B0D[E0360000]    <1> 	mov cx, [resolutiony]
  3302 00002761 6681E91000          <1> 	sub cx, 16
  3303 00002766 66BA0200            <1> 	mov dx, 2
  3304 0000276A B400                <1> 	mov ah, 0
  3305 0000276C B010                <1> 	mov al, 00010000b
  3306 0000276E BB[0B3A0000]        <1> 	mov ebx, winblows
  3307 00002773 E8100B0000          <1> 	call showstring
  3308                              <1> 	
  3309 00002778 E8A8FBFFFF          <1> 	call cursorgui
  3310                              <1> guistart:
  3311 0000277D E8DEFAFFFF          <1> 	call guistartin
  3312 00002782 C605[BD280000]00    <1> 	mov byte [copygui], 0
  3313 00002789 EBF2                <1> 	jmp guistart
  3314                              <1> 	
  3315                              <1> guicopy:	;;for double buffering
  3316 0000278B C605[BD280000]01    <1> 	mov byte [copygui], 1
  3317 00002792 8B3D[39220000]      <1> 	mov edi, [offscreenmemoffset]
  3318 00002798 BA00000000          <1> 	mov edx, 0
  3319 0000279D B900000000          <1> 	mov ecx, 0
  3320 000027A2 668B15[F9240000]    <1> 	mov dx, [mousecursorposition]
  3321 000027A9 668B0D[FB240000]    <1> 	mov cx, [mousecursorposition + 2]
  3322 000027B0 01D7                <1> 	add edi, edx
  3323 000027B2 668B15[E4360000]    <1> 	mov dx, [resolutionx2]
  3324 000027B9 6641                <1> 	inc cx
  3325                              <1> guicp2:
  3326 000027BB 01D7                <1> 	add edi, edx
  3327 000027BD 6649                <1> 	dec cx
  3328 000027BF 6681F90000          <1> 	cmp cx, 0
  3329 000027C4 75F5                <1> 	jne guicp2
  3330 000027C6 29D7                <1> 	sub edi, edx
  3331 000027C8 893D[90280000]      <1> 	mov [cursorloc], edi
  3332 000027CE BB[8E490000]        <1> 	mov ebx, cursorbmp
  3333 000027D3 668B0D[E0360000]    <1> 	mov cx, [resolutiony]
  3334 000027DA C1C110              <1> 	rol ecx, 16
  3335 000027DD 668B0D[E2360000]    <1> 	mov cx, [resolutionx]
  3336 000027E4 8B35[35220000]      <1> 	mov esi, [physbaseptr]
  3337 000027EA 8B3D[39220000]      <1> 	mov edi, [offscreenmemoffset]
  3338                              <1> guicp1:
  3339 000027F0 668B06              <1> 	mov ax, [esi]
  3340 000027F3 668907              <1> 	mov [edi], ax
  3341 000027F6 81C602000000        <1> 	add esi, 2
  3342 000027FC 81C702000000        <1> 	add edi, 2
  3343 00002802 3B3D[90280000]      <1> 	cmp edi, [cursorloc]
  3344 00002808 7427                <1> 	je copycursor
  3345                              <1> dncopycursor:
  3346 0000280A 6649                <1> 	dec cx
  3347 0000280C 6681F90000          <1> 	cmp cx, 0
  3348 00002811 75DD                <1> 	jne guicp1
  3349 00002813 668B0D[E2360000]    <1> 	mov cx, [resolutionx]
  3350 0000281A C1C110              <1> 	rol ecx, 16
  3351 0000281D 6649                <1> 	dec cx
  3352 0000281F 6681F90000          <1> 	cmp cx, 0
  3353 00002824 C1C110              <1> 	rol ecx, 16
  3354 00002827 75C7                <1> 	jne guicp1
  3355 00002829 C605[BD280000]00    <1> 	mov byte [copygui], 0
  3356 00002830 C3                  <1> 	ret
  3357                              <1> copycursor:
  3358 00002831 81FB[0E4A0000]      <1> 	cmp ebx, cursorbmpend
  3359 00002837 73D1                <1> 	jae dncopycursor
  3360 00002839 668B15[E4360000]    <1> 	mov dx, [resolutionx2]
  3361 00002840 01D7                <1> 	add edi, edx
  3362 00002842 893D[90280000]      <1> 	mov [cursorloc], edi
  3363 00002848 29D7                <1> 	sub edi, edx
  3364 0000284A 4B                  <1> 	dec ebx
  3365 0000284B 81EF02000000        <1> 	sub edi, 2
  3366 00002851 81EE02000000        <1> 	sub esi, 2
  3367 00002857 66BA0900            <1> 	mov dx, 9
  3368                              <1> curscplp:
  3369 0000285B 43                  <1> 	inc ebx
  3370 0000285C 81C602000000        <1> 	add esi, 2
  3371 00002862 81C702000000        <1> 	add edi, 2
  3372 00002868 668B06              <1> 	mov ax, [esi]
  3373 0000286B 668907              <1> 	mov [edi], ax
  3374 0000286E 8A03                <1> 	mov al, [ebx]
  3375 00002870 3C00                <1> 	cmp al, 0
  3376 00002872 7405                <1> 	je curscplp2
  3377 00002874 66C7079CE7          <1> 	mov word [edi], 1110011110011100b
  3378                              <1> curscplp2:
  3379 00002879 6649                <1> 	dec cx
  3380 0000287B 6681F90000          <1> 	cmp cx, 0
  3381 00002880 7488                <1> 	je dncopycursor
  3382 00002882 664A                <1> 	dec dx
  3383 00002884 6681FA0000          <1> 	cmp dx, 0
  3384 00002889 75D0                <1> 	jne curscplp
  3385 0000288B E97AFFFFFF          <1> 	jmp dncopycursor
  3386                              <1> 	
  3387                              <1> 	
  3388 00002890 00000000            <1> cursorloc: dd 0
  3389                              <1> 		
  3390                              <1> nextimage:	
  3391 00002894 E876FDFFFF          <1> 	call guiclear
  3392 00002899 8B35[2B390000]      <1> 	mov esi, [bmpend]
  3393 0000289F B800000000          <1> 	mov eax, 0
  3394 000028A4 BB00000000          <1> 	mov ebx, 0
  3395 000028A9 B900000000          <1> 	mov ecx, 0
  3396 000028AE BA00000000          <1> 	mov edx, 0
  3397 000028B3 E8D70F0000          <1> 	call showbmp
  3398 000028B8 E9A3F9FFFF          <1> 	jmp guistartin
  3399                              <1> 		
  3400 000028BD 00                  <1> copygui db 0
  3401 000028BE 00                  <1> graphicsset db 0
  3402 000028BF 0000                <1> graphicspos db 0,0
  3403 000028C1 00                  <1> showcursorfonton db 0
  3404 000028C2 00                  <1> savefonton db 0
  3405 000028C3 00                  <1> mouseselecton db 0
  3406 000028C4 00                  <1> guion db 0
  3407                              <1> 
  3408                              <1> 		
  3409                              <1> clearmousecursor:
  3410 000028C5 BE[4C260000]        <1> 		mov esi, background
  3411 000028CA 8B3D[35220000]      <1> 		mov edi, [physbaseptr]
  3412 000028D0 BA00000000          <1> 		mov edx, 0
  3413 000028D5 B900000000          <1> 		mov ecx, 0
  3414 000028DA 668B15[F5240000]    <1> 		mov dx, [lastmouseposition]
  3415 000028E1 668B0D[F7240000]    <1> 		mov cx, [lastmouseposition + 2]
  3416 000028E8 01D7                <1> 		add edi, edx
  3417 000028EA BA00000000          <1> 		mov edx, 0
  3418 000028EF 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  3419 000028F6 6681F90000          <1> 		cmp cx, 0
  3420 000028FB 740B                <1> 		je noyclr
  3421 000028FD 01D7                <1> yclr:	add edi, edx
  3422 000028FF 6649                <1> 		dec cx
  3423 00002901 6681F90000          <1> 		cmp cx, 0
  3424 00002906 75F5                <1> 		jne yclr
  3425 00002908 668B06              <1> noyclr:	mov ax, [esi]
  3426 0000290B C1C010              <1> 		rol eax, 16
  3427 0000290E 668B06              <1> 		mov ax, [esi]
  3428 00002911 8907                <1> 		mov [edi], eax
  3429 00002913 894704              <1> 		mov [edi + 4], eax
  3430 00002916 894708              <1> 		mov [edi + 8], eax
  3431 00002919 89470C              <1> 		mov [edi + 12], eax
  3432 0000291C 01D7                <1> 		add edi, edx
  3433 0000291E 6641                <1> 		inc cx
  3434 00002920 6681F91000          <1> 		cmp cx, 16
  3435 00002925 72E1                <1> 		jb noyclr
  3436 00002927 C3                  <1> 		ret
  3437                              <1> 
  3438                              <1> switchmousepos:		;;switch were the mouse is located
  3439 00002928 BE[00020000]        <1> 		mov esi, mousecolorbuf
  3440 0000292D 8B3D[35220000]      <1> 		mov edi, [physbaseptr]
  3441 00002933 BA00000000          <1> 		mov edx, 0
  3442 00002938 B900000000          <1> 		mov ecx, 0
  3443 0000293D 668B15[F5240000]    <1> 		mov dx, [lastmouseposition]
  3444 00002944 668B0D[F7240000]    <1> 		mov cx, [lastmouseposition + 2]
  3445 0000294B 01D7                <1> 		add edi, edx
  3446 0000294D BA00000000          <1> 		mov edx, 0
  3447 00002952 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  3448 00002959 6681F90000          <1> 		cmp cx, 0
  3449 0000295E 740B                <1> 		je noswmsy
  3450 00002960 01D7                <1> swmsy:		add edi, edx
  3451 00002962 6649                <1> 		dec cx
  3452 00002964 6681F90000          <1> 		cmp cx, 0
  3453 00002969 75F5                <1> 		jne swmsy
  3454 0000296B 8B06                <1> noswmsy:	mov eax, [esi]
  3455 0000296D 8B5E04              <1> 		mov ebx, [esi + 4]
  3456 00002970 8907                <1> 		mov [edi], eax
  3457 00002972 895F04              <1> 		mov [edi + 4], ebx
  3458 00002975 8B4608              <1> 		mov eax, [esi + 8]
  3459 00002978 8B5E0C              <1> 		mov ebx, [esi + 12]
  3460 0000297B 894708              <1> 		mov [edi + 8], eax
  3461 0000297E 895F0C              <1> 		mov [edi + 12], ebx
  3462 00002981 01D7                <1> 		add edi, edx
  3463 00002983 81C610000000        <1> 		add esi, 16
  3464 00002989 81FE[00030000]      <1> 		cmp esi, mcolorend
  3465 0000298F 72DA                <1> 		jb noswmsy
  3466                              <1> 		
  3467                              <1> switchmousepos2:
  3468 00002991 BE[00020000]        <1> 		mov esi, mousecolorbuf
  3469 00002996 8B3D[35220000]      <1> 		mov edi, [physbaseptr]
  3470 0000299C BA00000000          <1> 		mov edx, 0
  3471 000029A1 B900000000          <1> 		mov ecx, 0
  3472 000029A6 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3473 000029AD 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3474 000029B4 01D7                <1> 		add edi, edx
  3475 000029B6 BA00000000          <1> 		mov edx, 0
  3476 000029BB 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  3477 000029C2 6681F90000          <1> 		cmp cx, 0
  3478 000029C7 740B                <1> 		je noswmsy2
  3479 000029C9 01D7                <1> swmsy2:		add edi, edx
  3480 000029CB 6649                <1> 		dec cx
  3481 000029CD 6681F90000          <1> 		cmp cx, 0
  3482 000029D2 75F5                <1> 		jne swmsy2
  3483 000029D4 8B07                <1> noswmsy2:	mov eax, [edi]
  3484 000029D6 8B5F04              <1> 		mov ebx, [edi + 4]
  3485 000029D9 8906                <1> 		mov [esi], eax
  3486 000029DB 895E04              <1> 		mov [esi + 4], ebx
  3487 000029DE 8B4708              <1> 		mov eax, [edi + 8]
  3488 000029E1 8B5F0C              <1> 		mov ebx, [edi + 12]
  3489 000029E4 894608              <1> 		mov [esi + 8], eax
  3490 000029E7 895E0C              <1> 		mov [esi + 12], ebx
  3491 000029EA 01D7                <1> 		add edi, edx
  3492 000029EC 81C610000000        <1> 		add esi, 16
  3493 000029F2 81FE[00030000]      <1> 		cmp esi, mcolorend
  3494 000029F8 72DA                <1> 		jb noswmsy2
  3495 000029FA C3                  <1> 		ret
  3496                              <1> 
  3497 000029FB 00                  <1> pbutton db 0
  3498 000029FC 00                  <1> pLBUTTON db 0
  3499 000029FD 00                  <1> pRBUTTON db 0
  3500 000029FE 00000000            <1> dragging dw 0,0
  3501 00002A02 0000000000000000    <1> lastpos dw 0,0,0,0
  3502 00002A0A 00000000            <1> colorbuf dw 0,0
  3503                              <1> 	
  3504                              <1> 	clickicon:
  3505 00002A0E B001                <1> 		mov al, 1
  3506 00002A10 A2[FB290000]        <1> 		mov [pbutton], al
  3507 00002A15 A0[FC290000]        <1> 		mov al, [pLBUTTON]
  3508 00002A1A 2205[5B220000]      <1> 		and al, [LBUTTON]
  3509 00002A20 8A25[FD290000]      <1> 		mov ah, [pRBUTTON]
  3510 00002A26 2225[5C220000]      <1> 		and ah, [RBUTTON]
  3511 00002A2C 08E0                <1> 		or al, ah
  3512 00002A2E 3C00                <1> 		cmp al, 0
  3513 00002A30 741B                <1> 		je nodragclick
  3514 00002A32 813D[FE290000]0100- <1> 		cmp dword [dragging], 1
  3515 00002A3A 0000                <1>
  3516 00002A3C 732D                <1> 		jae dragclick
  3517 00002A3E C705[FE290000]0100- <1> 		mov dword [dragging], 1
  3518 00002A46 0000                <1>
  3519 00002A48 E91E000000          <1> 		jmp dragclick
  3520                              <1> 	nodragclick:
  3521 00002A4D C705[FE290000]0000- <1> 		mov dword [dragging], 0
  3522 00002A55 0000                <1>
  3523 00002A57 A0[5B220000]        <1> 		mov al, [LBUTTON]
  3524 00002A5C A2[FC290000]        <1> 		mov [pLBUTTON], al
  3525 00002A61 A0[5C220000]        <1> 		mov al, [RBUTTON]
  3526 00002A66 A2[FD290000]        <1> 		mov [pRBUTTON], al
  3527                              <1> 	dragclick:
  3528 00002A6B 66B80000            <1> 		mov ax, 0
  3529 00002A6F BE[00000000]        <1> 		mov esi, graphicstable
  3530 00002A74 C705[82390000]0000- <1> 		mov dword [codepointer], 0
  3531 00002A7C 0000                <1>
  3532                              <1> 	clicon2:
  3533 00002A7E BA00000000          <1> 		mov edx, 0
  3534 00002A83 B900000000          <1> 		mov ecx, 0
  3535 00002A88 66813E0100          <1> 		cmp word [esi], 1
  3536 00002A8D 0F841B000000        <1> 		je near iconselect
  3537 00002A93 66813E0200          <1> 		cmp word [esi], 2
  3538 00002A98 0F8472010000        <1> 		je near textselected
  3539 00002A9E 66813E0300          <1> 		cmp word [esi], 3
  3540 00002AA3 0F84C7020000        <1> 		je near windowselect
  3541 00002AA9 E901040000          <1> 		jmp nexticonsel
  3542                              <1> 	iconselect:
  3543 00002AAE 668B5606            <1> 		mov dx, [esi + 6]
  3544 00002AB2 6689D0              <1> 		mov ax, dx
  3545 00002AB5 668B4E08            <1> 		mov cx, [esi + 8]
  3546 00002AB9 6689CB              <1> 		mov bx, cx
  3547 00002ABC 6681C32000          <1> 		add bx, 32
  3548 00002AC1 6601D0              <1> 		add ax, dx
  3549 00002AC4 813D[FE290000]0100- <1> 		cmp dword [dragging], 1
  3550 00002ACC 0000                <1>
  3551 00002ACE 746F                <1> 		je dragicon
  3552 00002AD0 813D[FE290000]0000- <1> 		cmp dword [dragging], 0
  3553 00002AD8 0000                <1>
  3554 00002ADA 7411                <1> 		je nodragiconcheck
  3555 00002ADC 3935[FE290000]      <1> 		cmp dword [dragging], esi
  3556 00002AE2 0F85C7030000        <1> 		jne near nexticonsel
  3557 00002AE8 E952000000          <1> 		jmp dragicon
  3558                              <1> 	nodragiconcheck:
  3559 00002AED 663905[F9240000]    <1> 		cmp [mousecursorposition], ax
  3560 00002AF4 0F82B5030000        <1> 		jb near nexticonsel
  3561 00002AFA 66054000            <1> 		add ax, 64
  3562 00002AFE 663905[F9240000]    <1> 		cmp [mousecursorposition], ax
  3563 00002B05 0F87A4030000        <1> 		ja near nexticonsel
  3564 00002B0B 6629D0              <1> 		sub ax, dx
  3565 00002B0E 66390D[FB240000]    <1> 		cmp [mousecursorposition + 2], cx
  3566 00002B15 0F8294030000        <1> 		jb near nexticonsel
  3567 00002B1B 66391D[FB240000]    <1> 		cmp [mousecursorposition + 2], bx
  3568 00002B22 0F8787030000        <1> 		ja near nexticonsel
  3569 00002B28 668B460A            <1> 		mov ax, [esi + 10]
  3570 00002B2C 66250100            <1> 		and ax, 1
  3571 00002B30 663D0100            <1> 		cmp ax, 1
  3572 00002B34 0F84B6000000        <1> 		je near unselecticon
  3573 00002B3A E98D000000          <1> 		jmp nodragicon
  3574                              <1> 	dragicon:
  3575 00002B3F 663905[F5240000]    <1> 		cmp [lastmouseposition], ax
  3576 00002B46 0F8263030000        <1> 		jb near nexticonsel
  3577 00002B4C 66054000            <1> 		add ax, 64
  3578 00002B50 663905[F5240000]    <1> 		cmp [lastmouseposition], ax
  3579 00002B57 0F8752030000        <1> 		ja near nexticonsel
  3580 00002B5D 6629D0              <1> 		sub ax, dx
  3581 00002B60 66390D[F7240000]    <1> 		cmp [lastmouseposition + 2], cx
  3582 00002B67 0F8242030000        <1> 		jb near nexticonsel
  3583 00002B6D 66391D[F7240000]    <1> 		cmp [lastmouseposition + 2], bx
  3584 00002B74 0F8735030000        <1> 		ja near nexticonsel
  3585 00002B7A 668B460A            <1> 		mov ax, [esi + 10]
  3586 00002B7E 2410                <1> 		and al, 00010000b
  3587 00002B80 3C10                <1> 		cmp al, 00010000b
  3588 00002B82 7448                <1> 		je nodragicon
  3589 00002B84 8935[FE290000]      <1> 		mov [dragging], esi
  3590 00002B8A 66D1E2              <1> 		shl dx, 1
  3591 00002B8D 662B15[F5240000]    <1> 		sub dx, [lastmouseposition]
  3592 00002B94 660315[F9240000]    <1> 		add dx, [mousecursorposition]
  3593 00002B9B 66D1EA              <1> 		shr dx, 1
  3594 00002B9E 66030D[FB240000]    <1> 		add cx, [mousecursorposition + 2]
  3595 00002BA5 662B0D[F7240000]    <1> 		sub cx, [lastmouseposition + 2]
  3596 00002BAC 663B15[E4360000]    <1> 		cmp dx, [resolutionx2]
  3597 00002BB3 7607                <1> 		jbe chkyresdrgicn
  3598 00002BB5 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3599                              <1> 	chkyresdrgicn:
  3600 00002BBC 663B0D[E0360000]    <1> 		cmp cx, [resolutiony]
  3601 00002BC3 7607                <1> 		jbe nodragicon
  3602 00002BC5 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3603                              <1> 	nodragicon:
  3604 00002BCC 66814E0A0100        <1> 		or word [esi + 10], 1
  3605 00002BD2 8B5E0C              <1> 		mov ebx, [esi + 12]
  3606 00002BD5 668B460A            <1> 		mov ax, [esi + 10]
  3607 00002BD9 8B7602              <1> 		mov esi, [esi + 2]
  3608 00002BDC C705[82390000]0000- <1> 		mov dword [codepointer], 0
  3609 00002BE4 0000                <1>
  3610 00002BE6 E81C0A0000          <1> 		call showicon
  3611 00002BEB E9D8020000          <1> 		jmp doneiconsel
  3612                              <1> 	unselecticon:
  3613 00002BF0 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3614 00002BF6 8B5E0C              <1> 		mov ebx, [esi + 12]
  3615 00002BF9 668B460A            <1> 		mov ax, [esi + 10]
  3616 00002BFD 8B7602              <1> 		mov esi, [esi + 2]
  3617 00002C00 891D[82390000]      <1> 		mov [codepointer], ebx
  3618 00002C06 E8FC090000          <1> 		call showicon
  3619 00002C0B E9B8020000          <1> 		jmp doneiconsel
  3620                              <1> 	textselected:
  3621 00002C10 8B5E02              <1> 		mov ebx, [esi + 2]
  3622 00002C13 668B5606            <1> 		mov dx, [esi + 6]
  3623 00002C17 6689D0              <1> 		mov ax, dx
  3624 00002C1A 668B4E08            <1> 		mov cx, [esi + 8]
  3625                              <1> 	lengthtesttext:
  3626 00002C1E 803B00              <1> 		cmp byte [ebx], 0
  3627 00002C21 7407                <1> 		je donetesttextlength
  3628 00002C23 43                  <1> 		inc ebx
  3629 00002C24 66051000            <1> 		add ax, 16
  3630 00002C28 EBF4                <1> 		jmp lengthtesttext
  3631                              <1> 	donetesttextlength:
  3632 00002C2A 6689CB              <1> 		mov bx, cx
  3633 00002C2D 6681C30F00          <1> 		add bx, 15
  3634 00002C32 813D[FE290000]0100- <1> 		cmp dword [dragging], 1
  3635 00002C3A 0000                <1>
  3636 00002C3C 7468                <1> 		je dragtext
  3637 00002C3E 813D[FE290000]0000- <1> 		cmp dword [dragging], 0
  3638 00002C46 0000                <1>
  3639 00002C48 7411                <1> 		je nodragtextcheck
  3640 00002C4A 3935[FE290000]      <1> 		cmp dword [dragging], esi
  3641 00002C50 0F8559020000        <1> 		jne near nexticonsel
  3642 00002C56 E94B000000          <1> 		jmp dragtext
  3643                              <1> 	nodragtextcheck:
  3644 00002C5B 663915[F9240000]    <1> 		cmp [mousecursorposition], dx
  3645 00002C62 0F8247020000        <1> 		jb near nexticonsel
  3646 00002C68 663905[F9240000]    <1> 		cmp [mousecursorposition], ax
  3647 00002C6F 0F873A020000        <1> 		ja near nexticonsel
  3648 00002C75 66390D[FB240000]    <1> 		cmp [mousecursorposition + 2], cx
  3649 00002C7C 0F822D020000        <1> 		jb near nexticonsel
  3650 00002C82 66391D[FB240000]    <1> 		cmp [mousecursorposition + 2], bx
  3651 00002C89 0F8720020000        <1> 		ja near nexticonsel
  3652 00002C8F 668B460A            <1> 		mov ax, [esi + 10]
  3653 00002C93 66250100            <1> 		and ax, 1
  3654 00002C97 663D0100            <1> 		cmp ax, 1
  3655 00002C9B 0F84AB000000        <1> 		je near unselecttext
  3656 00002CA1 E986000000          <1> 		jmp nodragtext
  3657                              <1> 	dragtext:
  3658 00002CA6 663915[F5240000]    <1> 		cmp [lastmouseposition], dx
  3659 00002CAD 0F82FC010000        <1> 		jb near nexticonsel
  3660 00002CB3 663905[F5240000]    <1> 		cmp [lastmouseposition], ax
  3661 00002CBA 0F87EF010000        <1> 		ja near nexticonsel
  3662 00002CC0 66390D[F7240000]    <1> 		cmp [lastmouseposition + 2], cx
  3663 00002CC7 0F82E2010000        <1> 		jb near nexticonsel
  3664 00002CCD 66391D[F7240000]    <1> 		cmp [lastmouseposition + 2], bx
  3665 00002CD4 0F87D5010000        <1> 		ja near nexticonsel
  3666 00002CDA 668B460A            <1> 		mov ax, [esi + 10]
  3667 00002CDE 2410                <1> 		and al, 00010000b
  3668 00002CE0 663D1000            <1> 		cmp ax, 00010000b
  3669 00002CE4 0F8442000000        <1> 		je near nodragtext
  3670 00002CEA 8935[FE290000]      <1> 		mov [dragging], esi
  3671 00002CF0 662B15[F5240000]    <1> 		sub dx, [lastmouseposition]
  3672 00002CF7 660315[F9240000]    <1> 		add dx, [mousecursorposition]
  3673 00002CFE 66030D[FB240000]    <1> 		add cx, [mousecursorposition + 2]
  3674 00002D05 662B0D[F7240000]    <1> 		sub cx, [lastmouseposition + 2]
  3675 00002D0C 663B15[E4360000]    <1> 		cmp dx, [resolutionx2]
  3676 00002D13 7607                <1> 		jbe chkyresdrgtxt
  3677 00002D15 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3678                              <1> 	chkyresdrgtxt:
  3679 00002D1C 663B0D[E0360000]    <1> 		cmp cx, [resolutiony]
  3680 00002D23 7607                <1> 		jbe nodragtext
  3681 00002D25 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3682                              <1> 	nodragtext:
  3683 00002D2C 66814E0A0100        <1> 		or word [esi + 10], 1
  3684 00002D32 8B5E0C              <1> 		mov ebx, [esi + 12]
  3685 00002D35 891D[82390000]      <1> 		mov [codepointer], ebx
  3686 00002D3B 668B460A            <1> 		mov ax, [esi + 10]
  3687 00002D3F 8B7602              <1> 		mov esi, [esi + 2]
  3688 00002D42 E841050000          <1> 		call showstring
  3689 00002D47 E97C010000          <1> 		jmp doneiconsel
  3690                              <1> 	unselecttext:
  3691 00002D4C 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3692 00002D52 8B5E0C              <1> 		mov ebx, [esi + 12]
  3693 00002D55 668B460A            <1> 		mov ax, [esi + 10]
  3694 00002D59 8B7602              <1> 		mov esi, [esi + 2]
  3695 00002D5C C705[82390000]0000- <1> 		mov dword [codepointer], 0
  3696 00002D64 0000                <1>
  3697 00002D66 E81D050000          <1> 		call showstring
  3698 00002D6B E958010000          <1> 		jmp doneiconsel
  3699                              <1> windowselect:
  3700 00002D70 8B7E02              <1> 		mov edi, [esi + 2]
  3701 00002D73 668B5606            <1> 		mov dx, [esi + 6]
  3702 00002D77 6689D0              <1> 		mov ax, dx
  3703 00002D7A 668B4E08            <1> 		mov cx, [esi + 8]
  3704 00002D7E 6689CB              <1> 		mov bx, cx
  3705 00002D81 6681C31000          <1> 		add bx, 16
  3706 00002D86 813D[FE290000]0100- <1> 		cmp dword [dragging], 1
  3707 00002D8E 0000                <1>
  3708 00002D90 746D                <1> 		je dragwin
  3709 00002D92 813D[FE290000]0000- <1> 		cmp dword [dragging], 0
  3710 00002D9A 0000                <1>
  3711 00002D9C 7411                <1> 		je nodragwincheck
  3712 00002D9E 3935[FE290000]      <1> 		cmp dword [dragging], esi
  3713 00002DA4 0F8505010000        <1> 		jne near nexticonsel
  3714 00002DAA E950000000          <1> 		jmp dragwin
  3715                              <1> 	nodragwincheck:
  3716 00002DAF 663905[F9240000]    <1> 		cmp [mousecursorposition], ax
  3717 00002DB6 0F82F3000000        <1> 		jb near nexticonsel
  3718 00002DBC 660307              <1> 		add ax, [edi]
  3719 00002DBF 660307              <1> 		add ax, [edi]
  3720 00002DC2 663905[F9240000]    <1> 		cmp [mousecursorposition], ax
  3721 00002DC9 0F87E0000000        <1> 		ja near nexticonsel
  3722 00002DCF 66390D[FB240000]    <1> 		cmp [mousecursorposition + 2], cx
  3723 00002DD6 0F82D3000000        <1> 		jb near nexticonsel
  3724 00002DDC 66391D[FB240000]    <1> 		cmp [mousecursorposition + 2], bx
  3725 00002DE3 0F87C6000000        <1> 		ja near nexticonsel
  3726 00002DE9 662D1400            <1> 		sub ax, 20
  3727 00002DED 663905[F9240000]    <1> 		cmp [mousecursorposition], ax
  3728 00002DF4 0F8795000000        <1> 		ja near killwin
  3729 00002DFA E97C000000          <1> 		jmp nodragwin
  3730                              <1> 	dragwin:
  3731 00002DFF 663905[F5240000]    <1> 		cmp [lastmouseposition], ax
  3732 00002E06 0F82A3000000        <1> 		jb near nexticonsel
  3733 00002E0C 660307              <1> 		add ax, [edi]
  3734 00002E0F 660307              <1> 		add ax, [edi]
  3735 00002E12 663905[F5240000]    <1> 		cmp [lastmouseposition], ax
  3736 00002E19 0F8790000000        <1> 		ja near nexticonsel
  3737 00002E1F 66390D[F7240000]    <1> 		cmp [lastmouseposition + 2], cx
  3738 00002E26 0F8283000000        <1> 		jb near nexticonsel
  3739 00002E2C 66391D[F7240000]    <1> 		cmp [lastmouseposition + 2], bx
  3740 00002E33 0F8776000000        <1> 		ja near nexticonsel
  3741 00002E39 8935[FE290000]      <1> 		mov [dragging], esi
  3742 00002E3F 662B15[F5240000]    <1> 		sub dx, [lastmouseposition]
  3743 00002E46 660315[F9240000]    <1> 		add dx, [mousecursorposition]
  3744 00002E4D 66030D[FB240000]    <1> 		add cx, [mousecursorposition + 2]
  3745 00002E54 662B0D[F7240000]    <1> 		sub cx, [lastmouseposition + 2]
  3746 00002E5B 663B15[E4360000]    <1> 		cmp dx, [resolutionx2]
  3747 00002E62 7607                <1> 		jbe chkyresdrgwin
  3748 00002E64 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3749                              <1> 	chkyresdrgwin:
  3750 00002E6B 663B0D[E0360000]    <1> 		cmp cx, [resolutiony]
  3751 00002E72 7607                <1> 		jbe nodragwin
  3752 00002E74 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3753                              <1> 	nodragwin:
  3754 00002E7B 8B5E0C              <1> 		mov ebx, [esi + 12]
  3755 00002E7E 668B460A            <1> 		mov ax, [esi + 10]
  3756 00002E82 8B7602              <1> 		mov esi, [esi + 2]
  3757 00002E85 E853040000          <1> 		call showwindow
  3758 00002E8A E939000000          <1> 		jmp doneiconsel
  3759                              <1> 	killwin:
  3760 00002E8F 66C7060000          <1> 		mov word [esi], 0
  3761 00002E94 C705[FC020000]0000- <1> 		mov dword [user2codepoint], 0
  3762 00002E9C 0000                <1>
  3763 00002E9E C605[0A090000]00    <1> 		mov byte [termguion], 0
  3764 00002EA5 E865F7FFFF          <1> 		call guiclear
  3765 00002EAA E939000000          <1> 		jmp doneiconsel2
  3766                              <1> 	nexticonsel:
  3767 00002EAF 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3768 00002EB5 81C610000000        <1> 		add esi, 16
  3769 00002EBB 81FE[00020000]      <1> 		cmp esi, graphicstableend
  3770 00002EC1 7305                <1> 		jae doneiconsel
  3771 00002EC3 E9B6FBFFFF          <1> 		jmp clicon2
  3772                              <1> 	doneiconsel:
  3773 00002EC8 813D[FE290000]0100- <1> 		cmp dword [dragging], 1
  3774 00002ED0 0000                <1>
  3775 00002ED2 7314                <1> 		jae doneiconsel2
  3776 00002ED4 813D[82390000]0000- <1> 		cmp dword [codepointer], 0
  3777 00002EDC 0000                <1>
  3778 00002EDE 7408                <1> 		je doneiconsel2
  3779 00002EE0 8B1D[82390000]      <1> 		mov ebx, [codepointer]
  3780 00002EE6 FFE3                <1> 		jmp ebx 
  3781                              <1> 	doneiconsel2:
  3782 00002EE8 A0[5B220000]        <1> 		mov al, [LBUTTON]
  3783 00002EED A2[FC290000]        <1> 		mov [pLBUTTON], al
  3784 00002EF2 A0[5C220000]        <1> 		mov al, [RBUTTON]
  3785 00002EF7 A2[FD290000]        <1> 		mov [pRBUTTON], al
  3786 00002EFC E8C4F9FFFF          <1> call clearmousecursor
  3787 00002F01 E83C000000          <1> call reloadallgraphics
  3788 00002F06 B900000000          <1> 		mov ecx, 0
  3789 00002F0B BA00000000          <1> 		mov edx, 0
  3790 00002F10 B400                <1> 		mov ah, 0
  3791 00002F12 B080                <1> 		mov al, 128
  3792 00002F14 668B15[F9240000]    <1> 		mov dx, [mousecursorposition]
  3793 00002F1B 668B0D[FB240000]    <1> 		mov cx, [mousecursorposition + 2]
  3794 00002F22 66BBE738            <1> 		mov bx, 0011100011100111b
  3795 00002F26 C605[C1280000]01    <1> 		mov byte [showcursorfonton], 1
  3796 00002F2D E8C2070000          <1> 		call showfontvesa
  3797 00002F32 C605[C1280000]00    <1> 		mov byte [showcursorfonton], 0
  3798 00002F39 C3                  <1> 		ret
  3799 00002F3A 00000000            <1> lastdrag dw 0,0
  3800 00002F3E 00000000            <1> grpctblpos dw 0,0
  3801                              <1> 
  3802                              <1> reloadallgraphics:
  3803 00002F42 BF[00000000]        <1> 		mov edi, graphicstable
  3804                              <1> reloadgraphicsloop:
  3805 00002F47 8B7702              <1> 		mov esi, [edi + 2]
  3806 00002F4A 668B5706            <1> 		mov dx, [edi + 6]
  3807 00002F4E 668B4F08            <1> 		mov cx, [edi + 8]
  3808 00002F52 668B07              <1> 		mov ax, [edi]
  3809 00002F55 668B5F0A            <1> 		mov bx, [edi + 10]
  3810 00002F59 893D[3E2F0000]      <1> 		mov [grpctblpos], edi
  3811 00002F5F 3B3D[FE290000]      <1> 		cmp edi, [dragging]
  3812 00002F65 741E                <1> 		je loadedgraphic
  3813 00002F67 663D0100            <1> 		cmp ax, 1
  3814 00002F6B 0F8431000000        <1> 		je near icongraphic
  3815 00002F71 663D0200            <1> 		cmp ax, 2
  3816 00002F75 0F8437000000        <1> 		je near stringgraphic
  3817 00002F7B 663D0300            <1> 		cmp ax, 3
  3818 00002F7F 0F8416000000        <1> 		je near windowgraphic
  3819 00002F85 8B3D[3E2F0000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  3820 00002F8B 81C710000000        <1> 		add edi, 16
  3821 00002F91 81FF[00020000]      <1> 		cmp edi, graphicstableend
  3822 00002F97 7329                <1> 		jae donereloadgraphics
  3823 00002F99 EBAC                <1> 		jmp reloadgraphicsloop
  3824 00002F9B E890030000          <1> windowgraphic:	call showwindow2
  3825 00002FA0 EBE3                <1> 		jmp loadedgraphic
  3826 00002FA2 80E301              <1> icongraphic:	and bl, 1
  3827 00002FA5 881D[86390000]      <1> 		mov [iconselected], bl
  3828 00002FAB E86A060000          <1> 		call showicon2
  3829 00002FB0 EBD3                <1> 		jmp loadedgraphic
  3830 00002FB2 80E301              <1> stringgraphic:  and bl, 1
  3831 00002FB5 881D[C3280000]      <1> 		mov [mouseselecton], bl
  3832 00002FBB E8DB020000          <1> 		call showstring2
  3833 00002FC0 EBC3                <1> 		jmp loadedgraphic
  3834                              <1> donereloadgraphics:
  3835 00002FC2 8B3D[FE290000]      <1> 		mov edi, [dragging]
  3836 00002FC8 81FF[00000000]      <1> 		cmp edi, graphicstable
  3837 00002FCE 723B                <1> 		jb notcorrectdrag
  3838 00002FD0 668B07              <1> 		mov ax, [edi]
  3839 00002FD3 8B7702              <1> 		mov esi, [edi + 2]
  3840 00002FD6 668B5706            <1> 		mov dx, [edi + 6]
  3841 00002FDA 668B4F08            <1> 		mov cx, [edi + 8]
  3842 00002FDE 668B5F0A            <1> 		mov bx, [edi + 10]
  3843 00002FE2 663D0100            <1> 		cmp ax, 1
  3844 00002FE6 750F                <1> 		jne noticondragging
  3845 00002FE8 80E301              <1> 		and bl, 1
  3846 00002FEB 881D[86390000]      <1> 		mov [iconselected], bl
  3847 00002FF1 E824060000          <1> 		call showicon2
  3848 00002FF6 C3                  <1> 		ret
  3849                              <1> 
  3850                              <1> 	noticondragging:
  3851 00002FF7 663D0200            <1> 		cmp ax, 2
  3852 00002FFB 750E                <1> 		jne notcorrectdrag
  3853 00002FFD 80E301              <1> 		and bl, 1
  3854 00003000 881D[C3280000]      <1> 		mov [mouseselecton], bl
  3855 00003006 E890020000          <1> 		call showstring2
  3856                              <1> 	notcorrectdrag:
  3857 0000300B C3                  <1> 		ret
  3858                              <1> 
  3859 0000300C 00<rept>            <1> grphbuf times 16 db 0
  3860                              <1> 	graphicsadd:
  3861 0000301C BF[00000000]        <1> 		mov edi, graphicstable
  3862                              <1> 	shwgrph1:
  3863 00003021 397702              <1> 		cmp dword [edi + 2], esi
  3864 00003024 7414                <1> 		je showgraphicsreplace2
  3865 00003026 81C710000000        <1> 		add edi, 16
  3866 0000302C 81FF[00020000]      <1> 		cmp edi, graphicstableend
  3867 00003032 0F8335020000        <1> 		jae near showgraphicsnew
  3868 00003038 EBE7                <1> 		jmp shwgrph1
  3869                              <1> 	showgraphicsreplace2:
  3870 0000303A 8935[0E300000]      <1> 		mov [grphbuf + 2], esi
  3871 00003040 668915[12300000]    <1> 		mov [grphbuf + 6], dx
  3872 00003047 66890D[14300000]    <1> 		mov [grphbuf + 8], cx
  3873 0000304E 891D[18300000]      <1> 		mov [grphbuf + 12], ebx
  3874 00003054 B700                <1> 		mov bh, 0
  3875 00003056 88E3                <1> 		mov bl, ah
  3876 00003058 B400                <1> 		mov ah, 0
  3877 0000305A 66A3[16300000]      <1> 		mov [grphbuf + 10], ax	
  3878 00003060 66891D[0C300000]    <1> 		mov [grphbuf], bx
  3879 00003067 66A1[0C300000]      <1> 		mov ax, [grphbuf]
  3880 0000306D 663D0100            <1> 		cmp ax, 1
  3881 00003071 0F8419000000        <1> 		je near replaceicon
  3882 00003077 663D0200            <1> 		cmp ax, 2
  3883 0000307B 0F8493000000        <1> 		je near replacestring
  3884 00003081 663D0300            <1> 		cmp ax, 3
  3885 00003085 0F840F010000        <1> 		je near replacewindow
  3886 0000308B E9BA010000          <1> 		jmp showgraphicsreplace
  3887                              <1> 	replaceicon:
  3888 00003090 893D[022A0000]      <1> 		mov [lastpos], edi
  3889 00003096 8935[062A0000]      <1> 		mov [lastpos + 4], esi
  3890 0000309C 8B7702              <1> 		mov esi, [edi + 2]
  3891 0000309F 668B5F0C            <1> 		mov bx, [edi + 12]
  3892 000030A3 668B5706            <1> 		mov dx, [edi + 6]
  3893 000030A7 668B4F08            <1> 		mov cx, [edi + 8]
  3894 000030AB 668B06              <1> 		mov ax, [esi]
  3895 000030AE 66A3[0A2A0000]      <1> 		mov [colorbuf], ax
  3896 000030B4 66A1[4C260000]      <1> 		mov ax, [background]
  3897 000030BA 668906              <1> 		mov [esi], ax
  3898 000030BD 8B5F0C              <1> 		mov ebx, [edi + 12]
  3899 000030C0 668B470A            <1> 		mov ax, [edi + 10]
  3900 000030C4 2401                <1> 		and al, 1
  3901 000030C6 A2[86390000]        <1> 		mov [iconselected], al
  3902 000030CB 668B470A            <1> 		mov ax, [edi + 10]
  3903 000030CF E846050000          <1> 		call showicon2
  3904 000030D4 8B3D[022A0000]      <1> 		mov edi, [lastpos]
  3905 000030DA 8B7702              <1> 		mov esi, [edi + 2]
  3906 000030DD 66A1[0A2A0000]      <1> 		mov ax, [colorbuf]
  3907 000030E3 668906              <1> 		mov [esi], ax
  3908 000030E6 8B35[062A0000]      <1> 		mov esi, [lastpos + 4]
  3909 000030EC 668B15[12300000]    <1> 		mov dx, [grphbuf + 6]
  3910 000030F3 668B0D[14300000]    <1> 		mov cx, [grphbuf + 8]
  3911 000030FA 668B1D[0C300000]    <1> 		mov bx, [grphbuf]
  3912 00003101 66A1[16300000]      <1> 		mov ax, [grphbuf + 10]
  3913 00003107 88DC                <1> 		mov ah, bl
  3914 00003109 8B1D[18300000]      <1> 		mov ebx, [grphbuf + 12]
  3915 0000310F E936010000          <1> 		jmp showgraphicsreplace
  3916                              <1> 	replacestring:
  3917 00003114 893D[022A0000]      <1> 		mov [lastpos], edi
  3918 0000311A 8935[062A0000]      <1> 		mov [lastpos + 4], esi
  3919 00003120 8B5F0C              <1> 		mov ebx, [edi + 12]
  3920 00003123 8B7702              <1> 		mov esi, [edi + 2]
  3921 00003126 668B5706            <1> 		mov dx, [edi + 6]
  3922 0000312A 668B4F08            <1> 		mov cx, [edi + 8]
  3923 0000312E 66A1[CB320000]      <1> 		mov ax, [colorfont2]
  3924 00003134 66A3[0A2A0000]      <1> 		mov [colorbuf], ax
  3925 0000313A 66A1[4C260000]      <1> 		mov ax, [background]
  3926 00003140 66A3[CB320000]      <1> 		mov [colorfont2], ax		
  3927 00003146 8B5F0C              <1> 		mov ebx, [edi + 12]
  3928 00003149 668B470A            <1> 		mov ax, [edi + 10]
  3929 0000314D 2401                <1> 		and al, 1
  3930 0000314F A2[C3280000]        <1> 		mov [mouseselecton], al
  3931 00003154 668B470A            <1> 		mov ax, [edi + 10]
  3932 00003158 E83E010000          <1> 		call showstring2
  3933 0000315D 66A1[0A2A0000]      <1> 		mov ax, [colorbuf]
  3934 00003163 66A3[CB320000]      <1> 		mov [colorfont2], ax
  3935 00003169 8B3D[022A0000]      <1> 		mov edi, [lastpos]
  3936 0000316F 8B7702              <1> 		mov esi, [edi + 2]
  3937 00003172 668B15[12300000]    <1> 		mov dx, [grphbuf + 6]
  3938 00003179 668B0D[14300000]    <1> 		mov cx, [grphbuf + 8]
  3939 00003180 668B1D[0C300000]    <1> 		mov bx, [grphbuf]
  3940 00003187 66A1[16300000]      <1> 		mov ax, [grphbuf + 10]
  3941 0000318D 88DC                <1> 		mov ah, bl
  3942 0000318F 8B1D[18300000]      <1> 		mov ebx, [grphbuf + 12]
  3943 00003195 E9B0000000          <1> 		jmp showgraphicsreplace
  3944                              <1> 	replacewindow:
  3945 0000319A 893D[022A0000]      <1> 		mov [lastpos], edi
  3946 000031A0 8935[062A0000]      <1> 		mov [lastpos + 4], esi
  3947 000031A6 8B7702              <1> 		mov esi, [edi + 2]
  3948 000031A9 8B3D[D9320000]      <1> 		mov edi, [windowbufloc]
  3949 000031AF BA00000000          <1> 		mov edx, 0
  3950 000031B4 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  3951 000031BB C1E204              <1> 		shl edx, 4
  3952 000031BE 29D7                <1> 		sub edi, edx
  3953 000031C0 BA00000000          <1> 		mov edx, 0
  3954 000031C5 668B16              <1> 		mov dx, [esi]
  3955 000031C8 660316              <1> 		add dx, [esi]
  3956 000031CB 668B4E02            <1> 		mov cx, [esi + 2]
  3957 000031CF 6681C11000          <1> 		add cx, 16
  3958 000031D4 66A1[4C260000]      <1> 		mov ax, [background]
  3959                              <1> 	clearwindow:
  3960 000031DA 668907              <1> 		mov [edi], ax
  3961 000031DD 81C702000000        <1> 		add edi, 2
  3962 000031E3 81EA02000000        <1> 		sub edx, 2
  3963 000031E9 81FA00000000        <1> 		cmp edx, 0
  3964 000031EF 75E9                <1> 		jne clearwindow
  3965 000031F1 6649                <1> 		dec cx
  3966 000031F3 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  3967 000031FA 662B16              <1> 		sub dx, [esi]
  3968 000031FD 662B16              <1> 		sub dx, [esi]
  3969 00003200 01D7                <1> 		add edi, edx
  3970 00003202 668B16              <1> 		mov dx, [esi]
  3971 00003205 660316              <1> 		add dx, [esi]
  3972 00003208 6681F90000          <1> 		cmp cx, 0
  3973 0000320D 75CB                <1> 		jne clearwindow
  3974 0000320F C605[0B090000]00    <1> 		mov byte [termcopyon], 0
  3975 00003216 8B3D[022A0000]      <1> 		mov edi, [lastpos]
  3976 0000321C 8B35[0E300000]      <1> 		mov esi, [grphbuf + 2]
  3977 00003222 668B15[12300000]    <1> 		mov dx, [grphbuf + 6]
  3978 00003229 668B0D[14300000]    <1> 		mov cx, [grphbuf + 8]
  3979 00003230 668B1D[0C300000]    <1> 		mov bx, [grphbuf]
  3980 00003237 66A1[16300000]      <1> 		mov ax, [grphbuf + 10]
  3981 0000323D 88DC                <1> 		mov ah, bl
  3982 0000323F 8B1D[18300000]      <1> 		mov ebx, [grphbuf + 12]
  3983 00003245 E900000000          <1> 		jmp showgraphicsreplace
  3984                              <1> 	showgraphicsreplace:
  3985 0000324A 897702              <1> 		mov [edi + 2], esi
  3986 0000324D 66895706            <1> 		mov [edi + 6], dx
  3987 00003251 66894F08            <1> 		mov [edi + 8], cx
  3988 00003255 895F0C              <1> 		mov [edi + 12], ebx
  3989 00003258 B700                <1> 		mov bh, 0
  3990 0000325A 88E3                <1> 		mov bl, ah
  3991 0000325C B400                <1> 		mov ah, 0
  3992 0000325E 6689470A            <1> 		mov [edi + 10], ax
  3993 00003262 66891F              <1> 		mov [edi], bx
  3994 00003265 8B5F0C              <1> 		mov ebx, [edi + 12]
  3995 00003268 668B470A            <1> 		mov ax, [edi + 10]
  3996 0000326C C3                  <1> 		ret
  3997                              <1> 	showgraphicsnew:
  3998 0000326D BF[00000000]        <1> 		mov edi, graphicstable
  3999                              <1> 	shwgrph2:
  4000 00003272 66813F0000          <1> 		cmp word [edi], 0
  4001 00003277 74D1                <1> 		je showgraphicsreplace
  4002 00003279 81C710000000        <1> 		add edi, 16
  4003 0000327F 81FF[00020000]      <1> 		cmp edi, graphicstableend
  4004 00003285 72EB                <1> 		jb shwgrph2
  4005                              <1> 	showgraphicsdone:
  4006 00003287 C3                  <1> 		ret
  4007                              <1> 
  4008                              <1> 	showstring:
  4009 00003288 A2[C3280000]        <1> 		mov [mouseselecton], al
  4010 0000328D 8025[C3280000]01    <1> 		and byte [mouseselecton], 1
  4011 00003294 B402                <1> 		mov ah, 2
  4012 00003296 E881FDFFFF          <1> 		call graphicsadd
  4013                              <1> 	showstring2:
  4014 0000329B B400                <1> 		mov ah, 0
  4015 0000329D 8A06                <1> 		mov al, [esi]
  4016 0000329F 3C00                <1> 		cmp al, 0
  4017 000032A1 7420                <1> 		je doneshowstring
  4018 000032A3 46                  <1> 		inc esi
  4019 000032A4 8935[2F390000]      <1> 		mov [showstringesi], esi
  4020 000032AA 668B1D[CB320000]    <1> 		mov bx, [colorfont2]
  4021 000032B1 E83E040000          <1> 		call showfontvesa
  4022 000032B6 6681C20800          <1> 		add dx, 8
  4023 000032BB 8B35[2F390000]      <1> 		mov esi, [showstringesi]
  4024 000032C1 EBD8                <1> 		jmp showstring2
  4025                              <1> 	doneshowstring:
  4026 000032C3 C605[C3280000]00    <1> 		mov byte [mouseselecton], 0
  4027 000032CA C3                  <1> 		ret
  4028                              <1> 
  4029 000032CB FFFF                <1> colorfont2 dw 0xFFFF
  4030 000032CD 0000                <1> winvcopystx dw 0
  4031 000032CF 0000                <1> winvcopysty dw 0
  4032 000032D1 0000                <1> winvcopydx dw 0
  4033 000032D3 0000                <1> winvcopycx dw 0
  4034 000032D5 FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4035 000032D9 00000000            <1> windowbufloc: dw 0,0
  4036                              <1> 
  4037                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4038 000032DD C605[0A090000]01    <1> 		mov byte [termguion], 1
  4039 000032E4 6681C11000          <1> 		add cx, 16
  4040 000032E9 668915[CD320000]    <1> 		mov [winvcopystx], dx
  4041 000032F0 66890D[CF320000]    <1> 		mov [winvcopysty], cx
  4042 000032F7 668B16              <1> 		mov dx, [esi]
  4043 000032FA 668B4E02            <1> 		mov cx, [esi + 2]
  4044 000032FE 6601D2              <1> 		add dx, dx
  4045 00003301 668915[D1320000]    <1> 		mov [winvcopydx], dx
  4046 00003308 66890D[D3320000]    <1> 		mov [winvcopycx], cx
  4047 0000330F 668B0D[CF320000]    <1> 		mov cx, [winvcopysty]
  4048 00003316 6681E91000          <1> 		sub cx, 16
  4049 0000331B 668B15[CD320000]    <1> 		mov dx, [winvcopystx]
  4050 00003322 C605[0B090000]00    <1> 		mov byte [termcopyon], 0
  4051 00003329 B403                <1> 		mov ah, 3
  4052 0000332B E8ECFCFFFF          <1> 		call graphicsadd
  4053                              <1> 	showwindow2:
  4054 00003330 6681C11000          <1> 		add cx, 16
  4055 00003335 668915[CD320000]    <1> 		mov [winvcopystx], dx
  4056 0000333C 66890D[CF320000]    <1> 		mov [winvcopysty], cx
  4057 00003343 668B16              <1> 		mov dx, [esi]
  4058 00003346 668B4E02            <1> 		mov cx, [esi + 2]
  4059 0000334A 6601D2              <1> 		add dx, dx
  4060 0000334D 668915[D1320000]    <1> 		mov [winvcopydx], dx
  4061 00003354 66890D[D3320000]    <1> 		mov [winvcopycx], cx
  4062 0000335B 8B3D[D9320000]      <1> 		mov edi, [windowbufloc]
  4063 00003361 BA00000000          <1> 		mov edx, 0
  4064 00003366 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4065 0000336D C1E204              <1> 		shl edx, 4
  4066 00003370 29D7                <1> 		sub edi, edx
  4067 00003372 803D[0B090000]00    <1> 		cmp byte [termcopyon], 0
  4068 00003379 753E                <1> 		jne nocleartitlebarpos
  4069 0000337B 8B3D[35220000]      <1> 		mov edi, [physbaseptr]
  4070 00003381 BA00000000          <1> 		mov edx, 0
  4071 00003386 668B15[CD320000]    <1> 		mov dx, [winvcopystx]
  4072 0000338D 01D7                <1> 		add edi, edx
  4073 0000338F 668B0D[CF320000]    <1> 		mov cx, [winvcopysty]
  4074 00003396 6681E91000          <1> 		sub cx, 16
  4075 0000339B 6681F90000          <1> 		cmp cx, 0
  4076 000033A0 7417                <1> 		je nocleartitlebarpos
  4077                              <1> 	cleartitlebarpos:
  4078 000033A2 BA00000000          <1> 		mov edx, 0
  4079 000033A7 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4080 000033AE 01D7                <1> 		add edi, edx
  4081 000033B0 6649                <1> 		dec cx
  4082 000033B2 6681F90000          <1> 		cmp cx, 0
  4083 000033B7 75E9                <1> 		jne cleartitlebarpos
  4084                              <1> 	nocleartitlebarpos:
  4085 000033B9 66B91000            <1> 		mov cx, 16
  4086 000033BD 668B15[D1320000]    <1> 		mov dx, [winvcopydx]
  4087 000033C4 6681F90000          <1> 		cmp cx, 0
  4088 000033C9 0F844B000000        <1> 		je near canceltitlebarput
  4089 000033CF 6681FA0000          <1> 		cmp dx, 0
  4090 000033D4 0F8440000000        <1> 		je near canceltitlebarput
  4091                              <1> 	titlebarput:
  4092 000033DA 66A1[D5320000]      <1> 		mov ax, [windowcolor]
  4093 000033E0 668907              <1> 		mov [edi], ax
  4094 000033E3 6681EA0200          <1> 		sub dx, 2
  4095 000033E8 81C702000000        <1> 		add edi, 2
  4096 000033EE 6681FA0000          <1> 		cmp dx, 0
  4097 000033F3 75E5                <1> 		jne titlebarput
  4098 000033F5 BA00000000          <1> 		mov edx, 0
  4099 000033FA 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4100 00003401 6649                <1> 		dec cx
  4101 00003403 662B15[D1320000]    <1> 		sub dx, [winvcopydx]
  4102 0000340A 01D7                <1> 		add edi, edx
  4103 0000340C 668B15[D1320000]    <1> 		mov dx, [winvcopydx]
  4104 00003413 6681F90000          <1> 		cmp cx, 0
  4105 00003418 75C0                <1> 		jne titlebarput
  4106                              <1> 	canceltitlebarput:
  4107 0000341A 893D[D9320000]      <1> 		mov [windowbufloc], edi
  4108 00003420 803D[0B090000]02    <1> 		cmp byte [termcopyon], 2
  4109 00003427 0F8463000000        <1> 		je near winvcpst
  4110 0000342D 66B80000            <1> 		mov ax, 0
  4111 00003431 81C604000000        <1> 		add esi, 4
  4112 00003437 668B15[CD320000]    <1> 		mov dx, [winvcopystx]
  4113 0000343E 668B0D[CF320000]    <1> 		mov cx, [winvcopysty]
  4114 00003445 6681E91000          <1> 		sub cx, 16
  4115 0000344A 66BB0000            <1> 		mov bx, 0
  4116 0000344E C605[C3280000]01    <1> 		mov byte [mouseselecton], 1
  4117 00003455 E841FEFFFF          <1> 		call showstring2
  4118 0000345A B058                <1> 		mov al, "X"
  4119 0000345C B400                <1> 		mov ah, 0
  4120 0000345E 668B1D[CB320000]    <1> 		mov bx, [colorfont2]
  4121 00003465 668B15[CD320000]    <1> 		mov dx, [winvcopystx]
  4122 0000346C 668B0D[CF320000]    <1> 		mov cx, [winvcopysty]
  4123 00003473 6681E91000          <1> 		sub cx, 16
  4124 00003478 6681EA1400          <1> 		sub dx, 20
  4125 0000347D 660315[D1320000]    <1> 		add dx, [winvcopydx]
  4126 00003484 C605[C3280000]01    <1> 		mov byte [mouseselecton], 1
  4127 0000348B E864020000          <1> 		call showfontvesa
  4128                              <1> 	winvcpst:
  4129 00003490 8B3D[D9320000]      <1> 		mov edi, [windowbufloc]
  4130 00003496 E957000000          <1> 		jmp windowvideocopyset
  4131                              <1> 
  4132                              <1> 	windowvideocopy:
  4133 0000349B 8B3D[D9320000]      <1> 		mov edi, [windowbufloc]
  4134 000034A1 3B3D[35220000]      <1> 		cmp edi, [physbaseptr]
  4135 000034A7 0F8345000000        <1> 		jae near windowvideocopyset
  4136 000034AD B900000000          <1> 		mov ecx, 0
  4137 000034B2 BA00000000          <1> 		mov edx, 0
  4138 000034B7 668B15[CD320000]    <1> 		mov dx, [winvcopystx]
  4139 000034BE 668B0D[CF320000]    <1> 		mov cx, [winvcopysty]
  4140 000034C5 8B3D[35220000]      <1> 		mov edi, [physbaseptr]
  4141 000034CB 01D7                <1> 		add edi, edx
  4142 000034CD 81F900000000        <1> 		cmp ecx, 0
  4143 000034D3 741D                <1> 		je windowvideocopyset
  4144                              <1> 	yrescopylp:
  4145 000034D5 BA00000000          <1> 		mov edx, 0
  4146 000034DA 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4147 000034E1 01D7                <1> 		add edi, edx
  4148 000034E3 6649                <1> 		dec cx
  4149 000034E5 6681F90000          <1> 		cmp cx, 0
  4150 000034EA 75E9                <1> 		jne yrescopylp
  4151 000034EC 893D[D9320000]      <1> 		mov [windowbufloc], edi
  4152                              <1> 	windowvideocopyset:
  4153 000034F2 66B90000            <1> 		mov cx, 0
  4154 000034F6 66890D[FF350000]    <1> 		mov [charposline], cx
  4155 000034FD BE[850C0000]        <1> 		mov esi, videobuf2
  4156 00003502 8935[01360000]      <1> 		mov [charposvbuf], esi
  4157 00003508 8A1E                <1> 		mov bl, [esi]
  4158 0000350A B700                <1> 		mov bh, 0
  4159 0000350C 66C1E304            <1> 		shl bx, 4
  4160 00003510 678AB7[6E41]        <1> 		mov dh, [fonts + bx]
  4161 00003515 D0CE                <1> 		ror dh, 1
  4162 00003517 89FE                <1> 		mov esi, edi
  4163                              <1> 	copywindow:
  4164 00003519 B201                <1> 		mov dl, 1
  4165 0000351B D0C6                <1> 		rol dh, 1
  4166 0000351D 20F2                <1> 		and dl, dh
  4167 0000351F 66A1[D7320000]      <1> 		mov ax, [windowcolor + 2]
  4168 00003525 668907              <1> 		mov [edi], ax
  4169 00003528 80FA00              <1> 		cmp dl, 0
  4170 0000352B 7409                <1> 		je nowritewin
  4171 0000352D 66A1[D5320000]      <1> 		mov ax, [windowcolor]
  4172 00003533 668907              <1> 		mov [edi], ax
  4173                              <1> 	nowritewin:
  4174 00003536 81C702000000        <1> 		add edi, 2
  4175 0000353C FEC1                <1> 		inc cl
  4176 0000353E 80F908              <1> 		cmp cl, 8
  4177 00003541 75D6                <1> 		jne copywindow
  4178 00003543 6643                <1> 		inc bx
  4179 00003545 B100                <1> 		mov cl, 0
  4180 00003547 BA00000000          <1> 		mov edx, 0
  4181 0000354C 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4182 00003553 01D6                <1> 		add esi, edx
  4183 00003555 89F7                <1> 		mov edi, esi
  4184 00003557 678AB7[6E41]        <1> 		mov dh, [fonts + bx]
  4185 0000355C D0CE                <1> 		ror dh, 1
  4186 0000355E FEC5                <1> 		inc ch
  4187 00003560 80FD10              <1> 		cmp ch, 16
  4188 00003563 75B4                <1> 		jne copywindow
  4189 00003565 66B90000            <1> 		mov cx, 0
  4190 00003569 8B3D[01360000]      <1> 		mov edi, [charposvbuf]
  4191 0000356F 81C702000000        <1> 		add edi, 2
  4192 00003575 81FF[451F0000]      <1> 		cmp edi, videobufend
  4193 0000357B 7370                <1> 		jae donewincopynow
  4194 0000357D 8A1F                <1> 		mov bl, [edi]
  4195 0000357F B700                <1> 		mov bh, 0
  4196 00003581 66C1E304            <1> 		shl bx, 4
  4197 00003585 893D[01360000]      <1> 		mov [charposvbuf], edi
  4198 0000358B BA00000000          <1> 		mov edx, 0
  4199 00003590 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4200 00003597 C1E204              <1> 		shl edx, 4
  4201 0000359A 29D6                <1> 		sub esi, edx
  4202 0000359C 81C610000000        <1> 		add esi, 16
  4203 000035A2 89F7                <1> 		mov edi, esi
  4204 000035A4 668B0D[FF350000]    <1> 		mov cx, [charposline]
  4205 000035AB 6641                <1> 		inc cx
  4206 000035AD 6681F95000          <1> 		cmp cx, 80
  4207 000035B2 7317                <1> 		jae fixwindowcopy
  4208 000035B4 66890D[FF350000]    <1> 		mov [charposline], cx
  4209 000035BB 66B90000            <1> 		mov cx, 0
  4210 000035BF 678AB7[6E41]        <1> 		mov dh, [fonts + bx]
  4211 000035C4 D0CE                <1> 		ror dh, 1
  4212 000035C6 E94EFFFFFF          <1> 		jmp copywindow
  4213                              <1> fixwindowcopy:
  4214 000035CB 66B90000            <1> 		mov cx, 0
  4215 000035CF 66890D[FF350000]    <1> 		mov [charposline], cx
  4216 000035D6 662B15[D1320000]    <1> 		sub dx, [winvcopydx]
  4217 000035DD 01D6                <1> 		add esi, edx
  4218 000035DF 89F7                <1> 		mov edi, esi
  4219 000035E1 678AB7[6E41]        <1> 		mov dh, [fonts + bx]
  4220 000035E6 D0CE                <1> 		ror dh, 1
  4221 000035E8 E92CFFFFFF          <1> 		jmp copywindow
  4222                              <1> donewincopynow:
  4223 000035ED 803D[0B090000]01    <1> 		cmp byte [termcopyon], 1
  4224 000035F4 7501                <1> 		jne forgetresetstuff
  4225 000035F6 61                  <1> 		popa
  4226                              <1> forgetresetstuff:
  4227 000035F7 C605[0B090000]00    <1> 		mov byte [termcopyon], 0
  4228 000035FE C3                  <1> 		ret
  4229                              <1> 
  4230 000035FF 0000                <1> charposline dw 0
  4231 00003601 00000000            <1> charposvbuf dw 0,0
  4232 00003605 0000                <1> iconcolor dw 0
  4233                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  4234 00003607 A2[86390000]        <1> 		mov [iconselected], al
  4235 0000360C 8025[86390000]01    <1> 		and byte [iconselected], 1
  4236 00003613 B401                <1> 		mov ah, 1
  4237 00003615 E802FAFFFF          <1> 		call graphicsadd
  4238                              <1> 	showicon2:
  4239 0000361A 8B3D[35220000]      <1> 		mov edi, [physbaseptr]
  4240 00003620 6601D2              <1> 		add dx, dx
  4241 00003623 663B15[E4360000]    <1> 		cmp dx, [resolutionx2]
  4242 0000362A 720C                <1> 		jb screenxgood
  4243 0000362C 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4244 00003633 6681EA4000          <1> 		sub dx, 64
  4245                              <1> 	screenxgood:
  4246 00003638 6681F90000          <1> 		cmp cx, 0
  4247 0000363D 7425                <1> 		je noscreenygoodchk
  4248 0000363F 663B0D[E0360000]    <1> 		cmp cx, [resolutiony]
  4249 00003646 720C                <1> 		jb screenygood
  4250 00003648 668B0D[E0360000]    <1> 		mov cx, [resolutiony]
  4251 0000364F 6681E92000          <1> 		sub cx, 32
  4252                              <1> 	screenygood:
  4253 00003654 BB00000000          <1> 		mov ebx, 0
  4254 00003659 668B1D[E4360000]    <1> 		mov bx, [resolutionx2]
  4255 00003660 01DF                <1> 		add edi, ebx
  4256 00003662 E2F0                <1> 		loop screenygood
  4257                              <1> 	noscreenygoodchk:
  4258 00003664 BB00000000          <1> 		mov ebx, 0
  4259 00003669 6689D3              <1> 		mov bx, dx
  4260 0000366C 01DF                <1> 		add edi, ebx
  4261 0000366E 66B90000            <1> 		mov cx, 0
  4262 00003672 668B06              <1> 		mov ax, [esi]
  4263 00003675 81C602000000        <1> 		add esi, 2
  4264 0000367B 66A3[05360000]      <1> 		mov [iconcolor], ax
  4265                              <1> 	writeicon:
  4266 00003681 8B06                <1> 		mov eax, [esi]
  4267 00003683 D1C0                <1> 		rol eax, 1
  4268 00003685 B100                <1> 		mov cl, 0
  4269                              <1> 	writeiconline:
  4270 00003687 B201                <1> 		mov dl, 1
  4271 00003689 20C2                <1> 		and dl, al
  4272 0000368B 3215[86390000]      <1> 		xor dl, [iconselected]
  4273 00003691 668B1D[4C260000]    <1> 		mov bx, [background]
  4274 00003698 66891F              <1> 		mov [edi], bx
  4275 0000369B 80FA00              <1> 		cmp dl, 0
  4276 0000369E 740A                <1> 		je noiconline
  4277 000036A0 668B15[05360000]    <1> 		mov dx, [iconcolor]
  4278 000036A7 668917              <1> 		mov [edi], dx
  4279                              <1> 	noiconline:
  4280 000036AA 81C702000000        <1> 		add edi, 2
  4281 000036B0 D1C0                <1> 		rol eax, 1
  4282 000036B2 FEC1                <1> 		inc cl
  4283 000036B4 80F920              <1> 		cmp cl, 32
  4284 000036B7 72CE                <1> 		jb writeiconline
  4285 000036B9 81C604000000        <1> 		add esi, 4
  4286 000036BF FEC5                <1> 		inc ch
  4287 000036C1 BA00000000          <1> 		mov edx, 0
  4288 000036C6 668B15[E4360000]    <1> 		mov dx, [resolutionx2]
  4289 000036CD 01D7                <1> 		add edi, edx
  4290 000036CF 81EF40000000        <1> 		sub edi, 64
  4291 000036D5 80FD20              <1> 		cmp ch, 32
  4292 000036D8 72A7                <1> 		jb writeicon
  4293 000036DA B800000000          <1> 		mov eax, 0
  4294 000036DF C3                  <1> 		ret
  4295                              <1> 
  4296 000036E0 0000                <1> resolutiony dw 0
  4297 000036E2 0000                <1> resolutionx dw 0
  4298 000036E4 0000                <1> resolutionx2 dw 0
  4299 000036E6 02                  <1> resolutionbytes db 2
  4300 000036E7 0000                <1> posxvesa dw 0
  4301 000036E9 0000                <1> posyvesa dw 0
  4302 000036EB FFFF                <1> colorfont dw 0xFFFF
  4303                              <1> savefontvesa:		;;same rules as showfontvesa
  4304 000036ED C605[C2280000]01    <1> 	mov byte [savefonton], 1
  4305                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  4306 000036F4 25FF000000          <1> 	and eax, 0xFF
  4307 000036F9 66890D[E9360000]    <1> 	mov [posyvesa], cx
  4308 00003700 668915[E7360000]    <1> 	mov [posxvesa], dx
  4309 00003707 8B3D[35220000]      <1> 	mov edi, [physbaseptr]
  4310 0000370D 66891D[EB360000]    <1> 	mov [colorfont], bx
  4311 00003714 BB00000000          <1> 	mov ebx, 0
  4312 00003719 6689D3              <1> 	mov bx, dx
  4313 0000371C 89DA                <1> 	mov edx, ebx
  4314 0000371E BB00000000          <1> 	mov ebx, 0
  4315 00003723 6681F90000          <1> 	cmp cx, 0
  4316 00003728 7415                <1> 	je vesaposloopdn
  4317 0000372A 668B1D[E4360000]    <1> 	mov bx, [resolutionx2]
  4318                              <1> vesaposloop:
  4319 00003731 01DA                <1> 	add edx, ebx
  4320 00003733 6681E90100          <1> 	sub cx, 1
  4321 00003738 6681F90000          <1> 	cmp cx, 0
  4322 0000373D 75F2                <1> 	jne vesaposloop
  4323                              <1> vesaposloopdn:
  4324 0000373F 01D7                <1> 	add edi, edx
  4325 00003741 BE[6E410000]        <1> 	mov esi, fonts
  4326                              <1> findfontvesa:
  4327 00003746 B400                <1> 	mov ah, 0
  4328 00003748 C1E004              <1> 	shl eax, 4
  4329 0000374B 01C6                <1> 	add esi, eax
  4330 0000374D C1E804              <1> 	shr eax, 4
  4331 00003750 81FE[8E490000]      <1> 	cmp esi, fontend
  4332 00003756 0F83BF000000        <1> 	jae near donefontvesa
  4333 0000375C 4E                  <1> 	dec esi
  4334                              <1> foundfontvesa:
  4335 0000375D 46                  <1> 	inc esi
  4336 0000375E 803D[C2280000]01    <1> 	cmp byte [savefonton], 1
  4337 00003765 0F84E1000000        <1> 	je near vesafontsaver
  4338 0000376B B100                <1> 	mov cl, 0
  4339 0000376D 8A06                <1> 	mov al, [esi]
  4340 0000376F 668B15[E4360000]    <1> 	mov dx, [resolutionx2]
  4341 00003776 662B15[E7360000]    <1> 	sub dx, [posxvesa]
  4342 0000377D 6681FA1000          <1> 	cmp dx, 16
  4343 00003782 7708                <1> 	ja paintfontvesa
  4344 00003784 D0EA                <1> 	shr dl, 1
  4345 00003786 8815[4B380000]      <1> 	mov [charwidth], dl
  4346                              <1> paintfontvesa:
  4347 0000378C B201                <1> 	mov dl, 1
  4348 0000378E 20C2                <1> 	and dl, al
  4349 00003790 803D[C1280000]01    <1> 	cmp byte [showcursorfonton], 1
  4350 00003797 0F8435000000        <1> 	je near nodelpaintedfont
  4351 0000379D 803D[C1280000]02    <1> 	cmp byte [showcursorfonton], 2
  4352 000037A4 0F8518000000        <1> 	jne near noswitchcursorfonton
  4353 000037AA 80FA00              <1> 	cmp dl, 0
  4354 000037AD 0F842E000000        <1> 	je near nopixelset
  4355 000037B3 668B1D[EB360000]    <1> 	mov bx, [colorfont]
  4356 000037BA 66891F              <1> 	mov [edi], bx
  4357 000037BD E91F000000          <1> 	jmp nopixelset
  4358                              <1> noswitchcursorfonton:
  4359 000037C2 3215[C3280000]      <1> 	xor dl, [mouseselecton]
  4360 000037C8 668B1D[4C260000]    <1> 	mov bx, [background]
  4361 000037CF 66891F              <1> 	mov [edi], bx
  4362                              <1> nodelpaintedfont:
  4363 000037D2 80FA00              <1> 	cmp dl, 0
  4364 000037D5 740A                <1> 	je nopixelset
  4365 000037D7 668B15[EB360000]    <1> 	mov dx, [colorfont]
  4366 000037DE 668917              <1> 	mov [edi], dx
  4367                              <1> nopixelset:
  4368 000037E1 81C702000000        <1> 	add edi, 2
  4369 000037E7 D0C0                <1> 	rol al, 1
  4370 000037E9 FEC1                <1> 	inc cl
  4371 000037EB 3A0D[4B380000]      <1> 	cmp cl, [charwidth]
  4372 000037F1 7299                <1> 	jb paintfontvesa
  4373 000037F3 FEC5                <1> 	inc ch
  4374 000037F5 BA00000000          <1> 	mov edx, 0
  4375 000037FA 668B15[E4360000]    <1> 	mov dx, [resolutionx2]
  4376 00003801 01D7                <1> 	add edi, edx
  4377 00003803 BA00000000          <1> 	mov edx, 0
  4378 00003808 8A15[4B380000]      <1> 	mov dl, [charwidth]
  4379 0000380E 00D2                <1> 	add dl, dl
  4380 00003810 29D7                <1> 	sub edi, edx
  4381 00003812 80FD10              <1> 	cmp ch, 16
  4382 00003815 0F8242FFFFFF        <1> 	jb foundfontvesa
  4383                              <1> donefontvesa:
  4384 0000381B B208                <1> 	mov dl, 8
  4385 0000381D 8815[4B380000]      <1> 	mov [charwidth], dl
  4386 00003823 668B15[E7360000]    <1> 	mov dx, [posxvesa]
  4387 0000382A 8A1D[4B380000]      <1> 	mov bl, [charwidth]
  4388 00003830 B700                <1> 	mov bh, 0
  4389 00003832 6601DA              <1> 	add dx, bx
  4390 00003835 668B1D[EB360000]    <1> 	mov bx, [colorfont]
  4391 0000383C 668B0D[E9360000]    <1> 	mov cx, [posyvesa]
  4392 00003843 C605[C2280000]00    <1> 	mov byte [savefonton], 0
  4393 0000384A C3                  <1> 	ret
  4394 0000384B 08                  <1> charwidth db 8
  4395                              <1> vesafontsaver:
  4396 0000384C B000                <1> 	mov al, 0
  4397 0000384E B100                <1> 	mov cl, 0
  4398                              <1> vesafontsaver2:
  4399 00003850 668B17              <1> 	mov dx, [edi]
  4400 00003853 663B15[EB360000]    <1> 	cmp dx, [colorfont]
  4401 0000385A 742F                <1> 	je colorfontmatch
  4402                              <1> donecolormatch:
  4403 0000385C 81C702000000        <1> 	add edi, 2
  4404 00003862 D0C0                <1> 	rol al, 1
  4405 00003864 FEC1                <1> 	inc cl
  4406 00003866 80F908              <1> 	cmp cl, 8
  4407 00003869 72E5                <1> 	jb vesafontsaver2
  4408 0000386B 8806                <1> 	mov [esi], al
  4409 0000386D 46                  <1> 	inc esi
  4410 0000386E FEC5                <1> 	inc ch
  4411 00003870 BA00000000          <1> 	mov edx, 0
  4412 00003875 668B15[E4360000]    <1> 	mov dx, [resolutionx2]
  4413 0000387C 01D7                <1> 	add edi, edx
  4414 0000387E 81EF10000000        <1> 	sub edi, 16
  4415 00003884 80FD10              <1> 	cmp ch, 16
  4416 00003887 72C3                <1> 	jb vesafontsaver
  4417 00003889 EB90                <1> 	jmp donefontvesa
  4418                              <1> colorfontmatch:
  4419 0000388B 0401                <1> 	add al, 1
  4420 0000388D EBCD                <1> 	jmp donecolormatch
  4421                              <1> 	
  4422                              <1> showbmp:
  4423 0000388F 668B06              <1> 	mov ax, [esi]
  4424 00003892 663D424D            <1> 	cmp ax, "BM"
  4425 00003896 0F858E000000        <1> 	jne near endedbmp
  4426 0000389C 8B3D[35220000]      <1> 	mov edi, [physbaseptr]
  4427 000038A2 6689D0              <1> 	mov ax, dx
  4428 000038A5 6689CB              <1> 	mov bx, cx
  4429 000038A8 B900000000          <1> 	mov ecx, 0
  4430 000038AD BA00000000          <1> 	mov edx, 0
  4431 000038B2 6689D9              <1> 	mov cx, bx
  4432 000038B5 6689C2              <1> 	mov dx, ax
  4433 000038B8 01D7                <1> 	add edi, edx
  4434 000038BA 01D7                <1> 	add edi, edx
  4435 000038BC BA00000000          <1> 	mov edx, 0
  4436 000038C1 668B15[E4360000]    <1> 	mov dx, [resolutionx2]
  4437 000038C8 41                  <1> 	inc ecx
  4438 000038C9 034E16              <1> 	add ecx, [esi + 22]
  4439                              <1> bmplocloop:
  4440 000038CC 01D7                <1> 	add edi, edx
  4441 000038CE E2FC                <1> 	loop bmplocloop
  4442 000038D0 29D7                <1> 	sub edi, edx
  4443 000038D2 8B5612              <1> 	mov edx, [esi + 18]
  4444 000038D5 8B4E16              <1> 	mov ecx, [esi + 22]
  4445 000038D8 8B460A              <1> 	mov eax, [esi + 10]
  4446 000038DB 8B5E02              <1> 	mov ebx, [esi + 2]
  4447 000038DE 01F3                <1> 	add ebx, esi
  4448 000038E0 891D[2B390000]      <1> 	mov [bmpend], ebx
  4449 000038E6 89D3                <1> 	mov ebx, edx
  4450 000038E8 01C6                <1> 	add esi, eax
  4451                              <1> ldxbmp:
  4452 000038EA 668B06              <1> 	mov ax, [esi]
  4453 000038ED 668907              <1> 	mov [edi], ax
  4454 000038F0 81C702000000        <1> 	add edi, 2
  4455 000038F6 81C602000000        <1> 	add esi, 2
  4456 000038FC 3B35[2B390000]      <1> 	cmp esi, [bmpend]
  4457 00003902 7726                <1> 	ja endedbmp
  4458 00003904 4A                  <1> 	dec edx
  4459 00003905 81FA00000000        <1> 	cmp edx, 0
  4460 0000390B 77DD                <1> 	ja ldxbmp
  4461 0000390D BA00000000          <1> 	mov edx, 0
  4462 00003912 668B15[E4360000]    <1> 	mov dx, [resolutionx2]
  4463 00003919 29DF                <1> 	sub edi, ebx
  4464 0000391B 29DF                <1> 	sub edi, ebx
  4465 0000391D 29D7                <1> 	sub edi, edx
  4466 0000391F 49                  <1> 	dec ecx
  4467 00003920 89DA                <1> 	mov edx, ebx
  4468 00003922 81F900000000        <1> 	cmp ecx, 0
  4469 00003928 77C0                <1> 	ja ldxbmp
  4470                              <1> endedbmp:
  4471 0000392A C3                  <1> 	ret
  4472                              <1> 	
  4473 0000392B 00000000            <1> 	bmpend dd 0
  4474                              <1> 
  4475                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4476 0000392F 00000000            <1> 	showstringesi dw 0,0
  4477 00003933 00                  <1> 	mouseon db 0
  4478 00003934 737461727400        <1> 	start	db "start",0
  4479 0000393A 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  4480 00003943 426F6F2100          <1> 	boomsg db "Boo!",0
  4481 00003948 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  4482 00003951 73206561737920746F- <1>
  4483 0000395A 20647261772E00      <1>
  4484 00003961 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  4485 0000396A 6D206E6F6D00        <1>
  4486 00003970 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  4487 00003979 75636B7300          <1>
  4488 0000397E 5800                <1> 	xmsg db "X",0
  4489 00003980 0000                <1> 	icon dw 0	;pointer to icon
  4490 00003982 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  4491 00003986 00                  <1> 	iconselected db 0
  4492                              <1> 	
  4493                              <1> 	boo:
  4494 00003987 BE[43390000]        <1> 		mov esi, boomsg
  4495 0000398C 66BA6400            <1> 		mov dx, 100
  4496 00003990 66B94001            <1> 		mov cx, 320
  4497 00003994 BB00000000          <1> 		mov ebx, 0
  4498 00003999 66B80000            <1> 		mov ax, 0
  4499 0000399D E9E6F8FFFF          <1> 		jmp showstring
  4500                              <1> 
  4501                              <1> 	pacmannomnom:
  4502 000039A2 BE[61390000]        <1> 		mov esi, pacnom
  4503 000039A7 66BA8200            <1> 		mov dx, 130
  4504 000039AB 66B93C00            <1> 		mov cx, 60
  4505 000039AF BB00000000          <1> 		mov ebx, 0
  4506 000039B4 66B80000            <1> 		mov ax, 0
  4507 000039B8 E9CBF8FFFF          <1> 		jmp showstring	
  4508                              <1> 	
  4509                              <1> 	noie:
  4510 000039BD BE[513A0000]        <1> 		mov esi, termwindow
  4511 000039C2 66BA0000            <1> 		mov dx, 0
  4512 000039C6 66B90000            <1> 		mov cx, 0
  4513 000039CA BB[2D0D0000]        <1> 		mov ebx, nwcmd
  4514                              <1> ;;		mov ebx, internettest
  4515 000039CF 891D[FC020000]      <1> 		mov [user2codepoint], ebx
  4516 000039D5 66B80000            <1> 		mov ax, 0
  4517 000039D9 E8FFF8FFFF          <1> 		call showwindow
  4518                              <1> ;;		jmp internettest
  4519 000039DE E94AD3FFFF          <1> 		jmp nwcmd
  4520 000039E3 C3                  <1> 		ret
  4521                              <1> 
  4522                              <1> 	gotomenuboot:
  4523 000039E4 BE[513A0000]        <1> 		mov esi, termwindow
  4524 000039E9 66BA0000            <1> 		mov dx, 0
  4525 000039ED 66B90000            <1> 		mov cx, 0
  4526 000039F1 BB[6B0C0000]        <1> 		mov ebx, os
  4527 000039F6 891D[FC020000]      <1> 		mov [user2codepoint], ebx
  4528 000039FC 66B80000            <1> 		mov ax, 0
  4529 00003A00 E8D8F8FFFF          <1> 		call showwindow
  4530 00003A05 E961D2FFFF          <1> jmp os
  4531 00003A0A C3                  <1> 		ret
  4532                              <1> 
  4533                              <1> 	winblows:
  4534 00003A0B BE[70390000]        <1> 		mov esi, winmsg
  4535 00003A10 66BA0000            <1> 		mov dx, 0
  4536 00003A14 668B0D[E0360000]    <1> 		mov cx, [resolutiony]
  4537 00003A1B 6681E92000          <1> 		sub cx, 32
  4538 00003A20 BB00000000          <1> 		mov ebx, 0
  4539 00003A25 B400                <1> 		mov ah, 0
  4540 00003A27 B011                <1> 		mov al, 00010001b
  4541 00003A29 E85AF8FFFF          <1> 		call showstring
  4542 00003A2E BE[3A390000]        <1> 		mov esi, gotomenu
  4543 00003A33 668B0D[E0360000]    <1> 		mov cx, [resolutiony]
  4544 00003A3A 6681E93000          <1> 		sub cx, 48
  4545 00003A3F 66BA0000            <1> 		mov dx, 0
  4546 00003A43 B400                <1> 		mov ah, 0
  4547 00003A45 B010                <1> 		mov al, 00010000b
  4548 00003A47 BB[E4390000]        <1> 		mov ebx, gotomenuboot
  4549 00003A4C E937F8FFFF          <1> 		jmp showstring
  4550                              <1> 
  4551 00003A51 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  4552 00003A55 5445524D494E414C00  <1> 	termmsg:	db "TERMINAL",0	;;window title
  4553 00003A55 <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  4554 00003A55 <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  4555 00003A55 <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  4556 00003A55 <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  4557 00003A55 <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  4558                                      ;%include 'source/network.asm'
  4559                                  	%include 'source/pci.asm'
  4560 00003CE8 00                  <1> pcibus		db 0
  4561 00003CE9 00                  <1> pcidevice	db 0
  4562 00003CEA 00                  <1> pcifunction	db 0
  4563 00003CEB 00                  <1> pciregister	db 0
  4564 00003CEC 00                  <1> pcireqtype db 0
  4565                              <1> 
  4566                              <1> getpciport:
  4567 00003CED B001                <1> 	mov al, 1
  4568 00003CEF A2[EC3C0000]        <1> 	mov [pcireqtype], al
  4569 00003CF4 E91E000000          <1> 	jmp searchpci
  4570                              <1> pcidump:
  4571 00003CF9 B800000000          <1> 	mov eax, 0
  4572 00003CFE A2[EA3C0000]        <1> 	mov [pcifunction], al
  4573 00003D03 A2[E83C0000]        <1> 	mov [pcibus], al
  4574 00003D08 A2[E93C0000]        <1> 	mov [pcidevice], al
  4575 00003D0D A2[EC3C0000]        <1> 	mov [pcireqtype], al
  4576 00003D12 E900000000          <1> 	jmp searchpci
  4577                              <1> searchpci:		;;return in ebx, start X in pciX
  4578 00003D17 B000                <1> 	mov al, 0
  4579 00003D19 A2[EB3C0000]        <1> 	mov [pciregister], al
  4580 00003D1E E84F010000          <1> 	call getpciaddr
  4581 00003D23 BAF80C0000          <1> 	mov edx, 0xCF8
  4582 00003D28 EF                  <1> 	out dx, eax	;;request pci config
  4583 00003D29 BAFC0C0000          <1> 	mov edx, 0xCFC
  4584 00003D2E ED                  <1> 	in eax, dx 	;;read in pci config
  4585 00003D2F 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  4586 00003D34 0F8237000000        <1> 	jb near checkpcidevice
  4587                              <1> searchpciret:
  4588                              <1> nextpcidevice:
  4589 00003D3A B000                <1> 	mov al, 0
  4590 00003D3C A2[EA3C0000]        <1> 	mov [pcifunction], al
  4591 00003D41 A0[E93C0000]        <1> 	mov al, [pcidevice]
  4592 00003D46 3C1F                <1> 	cmp al, 11111b
  4593 00003D48 0F83B8000000        <1> 	jae near nextpcibus
  4594 00003D4E FEC0                <1> 	inc al
  4595 00003D50 A2[E93C0000]        <1> 	mov [pcidevice], al
  4596 00003D55 EBC0                <1> 	jmp searchpci
  4597 00003D57 A0[EA3C0000]        <1> 	mov al, [pcifunction]
  4598 00003D5C 3C07                <1> 	cmp al, 111b
  4599 00003D5E 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  4600 00003D64 FEC0                <1> 	inc al
  4601 00003D66 A2[EA3C0000]        <1> 	mov [pcifunction], al
  4602 00003D6B EBAA                <1> 	jmp searchpci
  4603 00003D6D 00000000            <1> pcitype: db 0,0,0,0
  4604                              <1> checkpcidevice:
  4605 00003D71 B000                <1> 	mov al, 0
  4606 00003D73 3805[EC3C0000]      <1> 	cmp [pcireqtype], al
  4607 00003D79 0F842B000000        <1> 	je near dumppcidevice
  4608 00003D7F B008                <1> 	mov al, 0x08
  4609 00003D81 A2[EB3C0000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  4610 00003D86 E8E7000000          <1> 	call getpciaddr
  4611 00003D8B BAF80C0000          <1> 	mov edx, 0xCF8
  4612 00003D90 EF                  <1> 	out dx, eax
  4613 00003D91 BAFC0C0000          <1> 	mov edx, 0xCFC
  4614 00003D96 ED                  <1> 	in eax, dx
  4615 00003D97 C1C008              <1> 	rol eax, 8
  4616 00003D9A 8A1D[6D3D0000]      <1> 	mov bl, [pcitype]
  4617 00003DA0 38D8                <1> 	cmp al, bl
  4618 00003DA2 0F8480000000        <1> 	je near foundpciaddr
  4619 00003DA8 EB90                <1> 	jmp searchpciret
  4620                              <1> dumppcidevice:
  4621 00003DAA B000                <1> 	mov al, 0
  4622 00003DAC A2[EB3C0000]        <1> 	mov [pciregister], al
  4623 00003DB1 E8BC000000          <1> 	call getpciaddr
  4624 00003DB6 89C1                <1> 	mov ecx, eax
  4625 00003DB8 C605[E6100000]03    <1> 	mov byte [firsthexshown],3
  4626 00003DBF E823D3FFFF          <1> 	call showhex
  4627                              <1> dumppcidevicelp:
  4628 00003DC4 A2[EB3C0000]        <1> 	mov [pciregister], al
  4629 00003DC9 E8A4000000          <1> 	call getpciaddr
  4630 00003DCE BAF80C0000          <1> 	mov edx, 0xCF8
  4631 00003DD3 EF                  <1> 	out dx, eax
  4632 00003DD4 BAFC0C0000          <1> 	mov edx, 0xCFC
  4633 00003DD9 ED                  <1> 	in eax, dx
  4634 00003DDA 89C1                <1> 	mov ecx, eax
  4635 00003DDC A0[EB3C0000]        <1> 	mov al, [pciregister]
  4636 00003DE1 0404                <1> 	add al, 4
  4637 00003DE3 3C3C                <1> 	cmp al, 0x3C
  4638 00003DE5 730E                <1> 	jae dumppcidn
  4639 00003DE7 C605[E6100000]00    <1> 	mov byte [firsthexshown],0
  4640 00003DEE E8F4D2FFFF          <1> 	call showhex
  4641 00003DF3 EBCF                <1> 	jmp dumppcidevicelp
  4642                              <1> dumppcidn:
  4643 00003DF5 C605[E6100000]02    <1> 	mov byte [firsthexshown],2
  4644 00003DFC E8E6D2FFFF          <1> 	call showhex
  4645 00003E01 E934FFFFFF          <1> 	jmp searchpciret
  4646                              <1> nextpcibus:
  4647 00003E06 B000                <1> 	mov al, 0
  4648 00003E08 A2[E93C0000]        <1> 	mov [pcidevice], al
  4649 00003E0D A0[E83C0000]        <1> 	mov al, [pcibus]
  4650 00003E12 3C7F                <1> 	cmp al, 1111111b
  4651 00003E14 730C                <1> 	jae donesearchpci
  4652 00003E16 FEC0                <1> 	inc al
  4653 00003E18 A2[E83C0000]        <1> 	mov [pcibus], al
  4654 00003E1D E9F5FEFFFF          <1> 	jmp searchpci
  4655                              <1> donesearchpci:
  4656 00003E22 BA00000000          <1> 	mov edx, 0
  4657 00003E27 C3                  <1> 	ret
  4658                              <1> foundpciaddr:
  4659 00003E28 B010                <1> 	mov al, 0x10
  4660 00003E2A A2[EB3C0000]        <1> 	mov [pciregister], al
  4661                              <1> findpciioaddr:
  4662 00003E2F E83E000000          <1> 	call getpciaddr
  4663 00003E34 BAF80C0000          <1> 	mov edx, 0xCF8
  4664 00003E39 EF                  <1> 	out dx, eax
  4665 00003E3A BAFC0C0000          <1> 	mov edx, 0xCFC
  4666 00003E3F ED                  <1> 	in eax, dx
  4667 00003E40 89C3                <1> 	mov ebx, eax
  4668 00003E42 81E301000000        <1> 	and ebx, 1
  4669 00003E48 81FB00000000        <1> 	cmp ebx, 0
  4670 00003E4E 0F8408000000        <1> 	je near notpciioaddr
  4671 00003E54 2D01000000          <1> 	sub eax, 1
  4672 00003E59 89C2                <1> 	mov edx, eax
  4673 00003E5B C3                  <1> 	ret
  4674                              <1> notpciioaddr:
  4675 00003E5C A0[EB3C0000]        <1> 	mov al, [pciregister]
  4676 00003E61 0404                <1> 	add al, 4
  4677 00003E63 3C28                <1> 	cmp al, 0x28
  4678 00003E65 0F87CFFEFFFF        <1> 	ja near searchpciret
  4679 00003E6B A2[EB3C0000]        <1> 	mov [pciregister], al
  4680 00003E70 EBBD                <1> 	jmp findpciioaddr
  4681                              <1> getpciaddr:		;;puts it in eax and ebx
  4682 00003E72 B800000000          <1> 			mov eax, 0
  4683 00003E77 BB00000080          <1> 			mov ebx, 0x80000000
  4684 00003E7C A0[E83C0000]        <1> 			mov al, [pcibus]
  4685 00003E81 C1E010              <1> 			shl eax, 16
  4686 00003E84 01C3                <1> 			add ebx, eax
  4687 00003E86 B800000000          <1> 			mov eax, 0
  4688 00003E8B A0[E93C0000]        <1> 			mov al, [pcidevice]
  4689 00003E90 C1E00B              <1> 			shl eax, 11
  4690 00003E93 01C3                <1> 			add ebx, eax
  4691 00003E95 B800000000          <1> 			mov eax, 0
  4692 00003E9A A0[EA3C0000]        <1> 			mov al, [pcifunction]
  4693 00003E9F C1E008              <1> 			shl eax, 8
  4694 00003EA2 01C3                <1> 			add ebx, eax
  4695 00003EA4 B800000000          <1> 			mov eax, 0
  4696 00003EA9 A0[EB3C0000]        <1> 			mov al, [pciregister]
  4697 00003EAE 01C3                <1> 			add ebx, eax
  4698 00003EB0 89D8                <1> 			mov eax, ebx
  4699 00003EB2 C3                  <1> 			ret
  4700                                  	;%include 'source/process.asm'
  4701                                      %include 'source/disk.asm'
  4702                              <1> ;;disk.asm - new - using lba
  4703                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  4704 00003EB3 803F00              <1> 	cmp byte [edi], 0
  4705 00003EB6 0F8444000000        <1> 	je near nofileload
  4706 00003EBC 89FA                <1> 	mov edx, edi
  4707 00003EBE BB[1D400000]        <1> 	mov ebx, diskfileindex
  4708                              <1> nextnamechar:
  4709 00003EC3 8A07                <1> 	mov al, [edi]
  4710 00003EC5 8A23                <1> 	mov ah, [ebx]
  4711 00003EC7 47                  <1> 	inc edi
  4712 00003EC8 43                  <1> 	inc ebx
  4713 00003EC9 88C1                <1> 	mov cl, al
  4714 00003ECB 08E1                <1> 	or cl, ah
  4715 00003ECD 80F900              <1> 	cmp cl, 0
  4716 00003ED0 744E                <1> 	je equalfilenames
  4717 00003ED2 80F920              <1> 	cmp cl, ' '
  4718 00003ED5 7449                <1> 	je equalfilenames
  4719 00003ED7 3C2A                <1> 	cmp al, '*'
  4720 00003ED9 742B                <1> 	je equalfilenames2
  4721 00003EDB 80FC00              <1> 	cmp ah, 0
  4722 00003EDE 7410                <1> 	je nextfilename
  4723 00003EE0 3C00                <1> 	cmp al, 0
  4724 00003EE2 740C                <1> 	je nextfilename
  4725 00003EE4 38E0                <1> 	cmp al, ah
  4726 00003EE6 74DB                <1> 	je nextnamechar
  4727                              <1> getebxzero:
  4728 00003EE8 8A23                <1> 	mov ah, [ebx]
  4729 00003EEA 43                  <1> 	inc ebx
  4730 00003EEB 80FC00              <1> 	cmp ah, 0
  4731 00003EEE 75F8                <1> 	jne getebxzero
  4732                              <1> nextfilename:
  4733 00003EF0 81C308000000        <1> 	add ebx, 8		;;next descriptor
  4734 00003EF6 89D7                <1> 	mov edi, edx
  4735 00003EF8 81FB[76400000]      <1> 	cmp ebx, enddiskfileindex
  4736 00003EFE 72C3                <1> 	jb nextnamechar
  4737                              <1> nofileload:
  4738 00003F00 BA94010000          <1> 	mov edx, 404	;;indicate not found error
  4739 00003F05 C3                  <1> 	ret
  4740                              <1> equalfilenames2:
  4741 00003F06 81EB02000000        <1> 	sub ebx, 2
  4742                              <1> eqfilefind:
  4743 00003F0C 43                  <1> 	inc ebx
  4744 00003F0D 81FB[76400000]      <1> 	cmp ebx, enddiskfileindex
  4745 00003F13 0F83E7FFFFFF        <1> 	jae near nofileload
  4746 00003F19 8A03                <1> 	mov al, [ebx]
  4747 00003F1B 3C00                <1> 	cmp al, 0
  4748 00003F1D 75ED                <1> 	jne eqfilefind
  4749 00003F1F 43                  <1> 	inc ebx
  4750                              <1> equalfilenames:
  4751 00003F20 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  4752 00003F23 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  4753 00003F25 031D[43000000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  4754 00003F2B B900000000          <1> 	mov ecx, 0
  4755 00003F30 88C1                <1> 	mov cl, al			;;get excess number of sectors
  4756 00003F32 D0E1                <1> 	shl cl, 1
  4757 00003F34 D0E9                <1> 	shr cl, 1			;;cut off at 128
  4758 00003F36 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  4759 00003F38 B500                <1> 	mov ch, 0			;;drive 0
  4760 00003F3A C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  4761                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  4762 00003F3D A3[7B3F0000]        <1> 	mov [filetracks], eax
  4763 00003F42 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  4764 00003F44 89DA                <1> 	mov edx, ebx
  4765 00003F46 80F900              <1> 	cmp cl, 0
  4766 00003F49 7405                <1> 	je copytracksforfile
  4767 00003F4B E831000000          <1> 	call diskr		;;take care of excess sectors
  4768                              <1> copytracksforfile:
  4769 00003F50 A1[7B3F0000]        <1> 	mov eax, [filetracks]
  4770 00003F55 3D00000000          <1> 	cmp eax, 0
  4771 00003F5A 7419                <1> 	je donecopyfile
  4772 00003F5C 48                  <1> 	dec eax
  4773 00003F5D A3[7B3F0000]        <1> 	mov [filetracks], eax
  4774 00003F62 89D3                <1> 	mov ebx, edx	;;get end lba
  4775 00003F64 B180                <1> 	mov cl, 0x80
  4776 00003F66 8A2D[42000000]      <1> 	mov ch, [DriveNumber]
  4777 00003F6C 89FE                <1> 	mov esi, edi	;;reset buffer
  4778 00003F6E E80E000000          <1> 	call diskr
  4779 00003F73 EBDB                <1> 	jmp copytracksforfile
  4780                              <1> donecopyfile:
  4781 00003F75 BA00000000          <1> 	mov edx, 0	;;no error
  4782 00003F7A C3                  <1> 	ret
  4783                              <1> 	
  4784 00003F7B 00000000            <1> filetracks dd 0
  4785                              <1> 	
  4786 00003F7F 6400                <1> segments dw 100
  4787                              <1> 
  4788                              <1> diskr:		;;sector count in cl, disk number in ch, 28 bit address in first 28 bits of ebx, buffer in esi, puts end buffer in edi and end lba in edx
  4789 00003F81 8935[19400000]      <1> 	mov [bufferstartesi], esi
  4790 00003F87 891D[15400000]      <1> 	mov [lbaadstartebx], ebx
  4791 00003F8D BA00000000          <1> 	mov edx, 0
  4792 00003F92 88CA                <1> 	mov dl, cl
  4793 00003F94 01DA                <1> 	add edx, ebx
  4794 00003F96 8915[11400000]      <1> 	mov [lbaadend], edx
  4795 00003F9C 66B80000            <1> 	mov ax, 0
  4796 00003FA0 66BAF101            <1> 	mov dx, 0x1F1
  4797 00003FA4 EE                  <1> 	out dx, al	;;send null byte to port
  4798 00003FA5 6642                <1> 	inc dx	;;0x1F2
  4799 00003FA7 88C8                <1> 	mov al, cl	;;get sector count
  4800 00003FA9 EE                  <1> 	out dx, al	;;send sector count
  4801 00003FAA 6642                <1> 	inc dx	;;0x1F3
  4802 00003FAC 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  4803 00003FAE EE                  <1> 	out dx, al	;;send them
  4804 00003FAF 6642                <1> 	inc dx	;;0x1F4
  4805 00003FB1 C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  4806 00003FB4 88D8                <1> 	mov al, bl
  4807 00003FB6 EE                  <1> 	out dx, al
  4808 00003FB7 6642                <1> 	inc dx	;;0x1F5
  4809 00003FB9 C1CB08              <1> 	ror ebx, 8	;;again
  4810 00003FBC 88D8                <1> 	mov al, bl
  4811 00003FBE EE                  <1> 	out dx, al
  4812 00003FBF 6642                <1> 	inc dx	;;0x1F6
  4813 00003FC1 C1CB08              <1> 	ror ebx, 8
  4814 00003FC4 88D8                <1> 	mov al, bl
  4815 00003FC6 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  4816 00003FC8 0CE0                <1> 	or al, 0xE0			;;majic number
  4817 00003FCA C0E504              <1> 	shl ch, 4
  4818 00003FCD 08E8                <1> 	or al, ch
  4819 00003FCF EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  4820 00003FD0 6642                <1> 	inc dx	;;0x1F7
  4821 00003FD2 B020                <1> 	mov al, 0x20
  4822 00003FD4 EE                  <1> 	out dx, al			;;execute read command
  4823                              <1> diskrwait:
  4824 00003FD5 66BAF701            <1> 	mov dx, 0x1F7
  4825 00003FD9 EC                  <1> 	in al, dx
  4826 00003FDA 2408                <1> 	and al, 0x08
  4827 00003FDC 3C08                <1> 	cmp al, 0x08
  4828 00003FDE 75F5                <1> 	jne diskrwait
  4829 00003FE0 88CD                <1> 	mov ch, cl	;;move sector data into ch, multiplying it by 256
  4830 00003FE2 B100                <1> 	mov cl, 0
  4831                              <1> diskdataread:
  4832 00003FE4 66BAF001            <1> 	mov dx, 0x1F0
  4833 00003FE8 66ED                <1> 	in ax, dx
  4834 00003FEA 668906              <1> 	mov [esi], ax
  4835 00003FED 81C602000000        <1> 	add esi, 2
  4836 00003FF3 6649                <1> 	dec cx
  4837 00003FF5 6681F90000          <1> 	cmp cx, 0
  4838 00003FFA 75E8                <1> 	jne diskdataread		;;read all sectors
  4839 00003FFC 89F7                <1> 	mov edi, esi
  4840 00003FFE 8B15[11400000]      <1> 	mov edx, [lbaadend]
  4841 00004004 8B35[19400000]      <1> 	mov esi, [bufferstartesi]
  4842 0000400A 8B1D[15400000]      <1> 	mov ebx, [lbaadstartebx]
  4843 00004010 C3                  <1> 	ret
  4844                              <1> 	
  4845 00004011 00000000            <1> lbaadend dd 0
  4846 00004015 00000000            <1> lbaadstartebx dd 0
  4847 00004019 00000000            <1> bufferstartesi dd 0
  4848                                      %include 'fileindex.asm'
  4849                              <1> diskfileindex:
  4850 0000401D 736F6C6C65726F732E- <1> db "solleros.bmp",0
  4851 00004026 626D7000            <1>
  4852 0000402A 26000000            <1> dd (f0-$$)/512
  4853 0000402E B0020000            <1> dd (f1-f0)/512
  4854 00004032 736F6C6C65726F732E- <1> db "solleros.txt",0
  4855 0000403B 74787400            <1>
  4856 0000403F D6020000            <1> dd (f1-$$)/512
  4857 00004043 01000000            <1> dd (f2-f1)/512
  4858 00004047 74656C7900          <1> db "tely",0
  4859 0000404C D7020000            <1> dd (f2-$$)/512
  4860 00004050 01000000            <1> dd (f3-f2)/512
  4861 00004054 74696D6500          <1> db "time",0
  4862 00004059 D8020000            <1> dd (f3-$$)/512
  4863 0000405D 01000000            <1> dd (f4-f3)/512
  4864 00004061 7475746F7269616C2E- <1> db "tutorial.bat",0
  4865 0000406A 62617400            <1>
  4866 0000406E D9020000            <1> dd (f4-$$)/512
  4867 00004072 02000000            <1> dd (f5-f4)/512
  4868                              <1> enddiskfileindex:
  4869                              <1> 
  4870                                      %include 'source/msg.asm'
  4871 00004076 6578697400          <1> 	exitmsg db	"exit",0
  4872 0000407B 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  4873 00004084 00                  <1>
  4874 00004085 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  4875 0000408E 6E642E0D0A00        <1>
  4876 00004094 456E74657220506173- <1> 	pwdask	db	"Enter Password:",0
  4877 0000409D 73776F72643A00      <1>
  4878 000040A4 70617373776F726400  <1> 	pwd	db	"password",0
  4879 000040AD 5B7573657240536F6C- <1> 	cmd	db	"[user@SollerOS-v0.9.0$]",0
  4880 000040B6 6C65724F532D76302E- <1>
  4881 000040BF 392E30245D00        <1>
  4882 000040C5 0D0A00              <1> 	line	db	13,10,0
  4883 000040C8 536F6C6C65724F5320- <1>     msg:       db "SollerOS Beta version 0.9.0 - compiled by Jeremy Soller.",13,10,0
  4884 000040D1 426574612076657273- <1>
  4885 000040DA 696F6E20302E392E30- <1>
  4886 000040E3 202D20636F6D70696C- <1>
  4887 000040EC 6564206279204A6572- <1>
  4888 000040F5 656D7920536F6C6C65- <1>
  4889 000040FE 722E0D0A00          <1>
  4890 00004103 506C65617365207365- <1>     wrongmsg:  db "Please select one of the options above.",13,10,"You selected: ",0
  4891 0000410C 6C656374206F6E6520- <1>
  4892 00004115 6F6620746865206F70- <1>
  4893 0000411E 74696F6E732061626F- <1>
  4894 00004127 76652E0D0A596F7520- <1>
  4895 00004130 73656C65637465643A- <1>
  4896 00004139 2000                <1>
  4897 0000413B 546F2072756E207468- <1> 	batchmsg db "To run this batch type runbatch and press enter.",10,13,0
  4898 00004144 697320626174636820- <1>
  4899 0000414D 747970652072756E62- <1>
  4900 00004156 6174636820616E6420- <1>
  4901 0000415F 707265737320656E74- <1>
  4902 00004168 65722E0A0D00        <1>
  4903                              <1> 	
  4904 00004168 <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  4905                              <1> fontend2:
  4906                              <1> mcursor:
  4907 0000497E 01                  <1> 	db	00000001b
  4908 0000497F 81                  <1> 	db	10000001b
  4909 00004980 C1                  <1> 	db	11000001b
  4910 00004981 E1                  <1> 	db	11100001b
  4911 00004982 F1                  <1> 	db	11110001b
  4912 00004983 F9                  <1> 	db	11111001b
  4913 00004984 FD                  <1> 	db	11111101b
  4914 00004985 FF                  <1> 	db	11111111b
  4915 00004986 F9                  <1> 	db	11111001b
  4916 00004987 B9                  <1> 	db	10111001b
  4917 00004988 39                  <1> 	db	00111001b
  4918 00004989 1C                  <1> 	db	00011100b
  4919 0000498A 1C                  <1> 	db	00011100b
  4920 0000498B 0E                  <1> 	db	00001110b
  4921 0000498C 0E                  <1> 	db	00001110b
  4922 0000498D 0C                  <1> 	db	00001100b
  4923                              <1> fontend:
  4924                              <1> 
  4925                              <1> cursorbmp:
  4926 0000498E 0100000000000000    <1> 	db	1,0,0,0,0,0,0,0
  4927 00004996 0101000000000000    <1> 	db	1,1,0,0,0,0,0,0
  4928 0000499E 0101010000000000    <1> 	db	1,1,1,0,0,0,0,0
  4929 000049A6 0101010100000000    <1> 	db	1,1,1,1,0,0,0,0
  4930 000049AE 0101010101000000    <1> 	db	1,1,1,1,1,0,0,0
  4931 000049B6 0101010101010000    <1> 	db	1,1,1,1,1,1,0,0
  4932 000049BE 0101010101010100    <1> 	db	1,1,1,1,1,1,1,0
  4933 000049C6 0101010101010101    <1> 	db	1,1,1,1,1,1,1,1
  4934 000049CE 0101010101010000    <1> 	db	1,1,1,1,1,1,0,0
  4935 000049D6 0101000101010000    <1> 	db	1,1,0,1,1,1,0,0
  4936 000049DE 0100000101010000    <1> 	db	1,0,0,1,1,1,0,0
  4937 000049E6 0000000001010100    <1> 	db	0,0,0,0,1,1,1,0
  4938 000049EE 0000000001010100    <1> 	db	0,0,0,0,1,1,1,0
  4939 000049F6 0000000000010101    <1> 	db	0,0,0,0,0,1,1,1
  4940 000049FE 0000000000010101    <1> 	db	0,0,0,0,0,1,1,1
  4941 00004A06 0000000000010100    <1> 	db	0,0,0,0,0,1,1,0
  4942                              <1> cursorbmpend:
  4943                              <1> ;;; ZEROS-THESE DO NOT NEED TO BE COMPILED BUT ADDRESSES SHOULD BE USED
  4944                              <1> [section .bss]
  4945                              <1> 
  4946                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  4947 00000000 <res 00000200>      <1> 	resb 200h
  4948                              <1> 	graphicstableend:
  4949                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  4950 00000200 <res 00000100>      <1> 	resb 256
  4951                              <1> mcolorend:
  4952 00000300 <res 00000001>      <1> IFON resb 1
  4953 00000301 <res 00000064>      <1> IFTRUE resb 100
  4954 00000365 <res 00000004>      <1> BATCHPOS resb 4
  4955 00000369 <res 00000001>      <1> BATCHISON resb 1
  4956 0000036A <res 00000001>      <1> LOOPON resb 1
  4957 0000036B <res 00000004>      <1> LOOPPOS	resb 4
  4958 0000036F <res 00000200>      <1> fileindex: resb 200h
  4959                              <1> fileindexend:
  4960 0000056F <res 00000500>      <1> variables: 	resb 500h
  4961 00000A6F <res 00000001>      <1> varend: resb 1
  4962 00000A70 <res 00000200>      <1> buftxt: resb 200h
  4963 00000C70 <res 00000014>      <1> buf2:	resb 20
  4964 00000C84 <res 00000001>      <1> numbuf: resb 1
  4965 00000C85 <res 000012C0>      <1> videobuf2 	resb 0x12C0
  4966                              <1> videobufend:
  4967 00001F45 <res 000000C8>      <1> 	resb 200
  4968                              <1> 
  4969                              <1> VBEMODEBLOCK:
  4970 0000200D <res 00000004>      <1> vbesignature 	resb 4 	;VBE Signature
  4971 00002011 <res 00000002>      <1> vbeversion  		resb 2    ;VBE Version
  4972 00002013 <res 00000004>      <1> oemstringptr  		resb 4  ;Pointer to OEM String
  4973 00002017 <res 00000004>      <1> capabilities 	resb 4   	;Capabilities of graphics cont.
  4974 0000201B <res 00000004>      <1> videomodeptr 		resb 4 	;Pointer to Video Mode List
  4975 0000201F <res 00000002>      <1> totalmemory   		resb 2     ;number of 64Kb memory blocks
  4976 00002021 <res 00000002>      <1> oemsoftwarerev  	resb 2		;VBE implementation Software revision
  4977 00002023 <res 00000004>      <1> oemvendornameptr 	resb 4 	;Pointer to Vendor Name String
  4978 00002027 <res 00000004>      <1> oemproductnameptr 	resb 4 	;Pointer to Product Name String
  4979 0000202B <res 00000004>      <1> oemproductrevptr 	resb 4  	;Pointer to Product Revision String
  4980 0000202F <res 000000DE>      <1> reserved	resb 222 	;Reserved for VBE implementation scratch area
  4981 0000210D <res 00000100>      <1> oemdata 	resb 256 	;Data Area for OEM Strings
  4982                              <1> 
  4983                              <1> 
  4984                              <1> VBEMODEINFOBLOCK:
  4985                              <1> ;Mandatory information for all VBE revision
  4986 0000220D <res 00000002>      <1> modeattributes   resb 2  ;Mode attributes
  4987 0000220F <res 00000001>      <1> winaattributes   resb 1  ;Window A attributes
  4988 00002210 <res 00000001>      <1> winbattributes   resb 1  ;Window B attributes
  4989 00002211 <res 00000002>      <1> wingranularity   resb 2  ;Window granularity
  4990 00002213 <res 00000002>      <1> winsize          resb 2  ;Window size
  4991 00002215 <res 00000002>      <1> winasegment      resb 2  ;Window A start segment
  4992 00002217 <res 00000002>      <1> winbsegment      resb 2  ;Window B start segment
  4993 00002219 <res 00000004>      <1> winfuncptr       resb 4  ;pointer to window function
  4994 0000221D <res 00000002>      <1> bytesperscanline resb 2  ;Bytes per scan line
  4995                              <1> 
  4996                              <1> ;Mandatory information for VBE 1.2 and above
  4997 0000221F <res 00000002>      <1> xresolution     resb 2	    ;Horizontal resolution in pixel or chars
  4998 00002221 <res 00000002>      <1> yresolution	    resb 2        ;Vertical resolution in pixel or chars
  4999 00002223 <res 00000001>      <1> xcharsize       resb 1	    ;Character cell width in pixel
  5000 00002224 <res 00000001>      <1> ycharsize       resb 1	    ;Character cell height in pixel
  5001 00002225 <res 00000001>      <1> numberofplanes  resb 1	    ;Number of memory planes
  5002 00002226 <res 00000001>      <1> bitsperpixel    resb 1	    ;Bits per pixel
  5003 00002227 <res 00000001>      <1> numberofbanks   resb 1	    ;Number of banks
  5004 00002228 <res 00000001>      <1> memorymodel     resb 1	    ;Memory model type
  5005 00002229 <res 00000001>      <1> banksize        resb 1 	    ;Bank size in KB
  5006 0000222A <res 00000001>      <1> numberofimagepages    resb 1  ;Number of images
  5007 0000222B <res 00000001>      <1> reserved1       resb 1	    ;Reserved for page function
  5008                              <1> 
  5009                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  5010 0000222C <res 00000001>      <1> redmasksize		resb 1        ;Size of direct color red mask in bits
  5011 0000222D <res 00000001>      <1> redfieldposition	resb 1	    ;Bit position of lsb of red bask
  5012 0000222E <res 00000001>      <1> greenmasksize   	resb 1	    ;Size of direct color green mask in bits
  5013 0000222F <res 00000001>      <1> greenfieldposition	resb 1	    ;Bit position of lsb of green bask
  5014 00002230 <res 00000001>      <1> bluemasksize		resb 1      ;Size of direct color blue mask in bits
  5015 00002231 <res 00000001>      <1> bluefieldposition	resb 1	    ;Bit position of lsb of blue bask
  5016 00002232 <res 00000001>      <1> rsvdmasksize        resb 1	    ;Size of direct color reserved mask in bits
  5017 00002233 <res 00000001>      <1> rsvdfieldposition	resb 1	    ;Bit position of lsb of reserved bask
  5018 00002234 <res 00000001>      <1> directcolormodeinfo	resb 1	    ;Direct color mode attributes
  5019                              <1> 
  5020                              <1> ;Mandatory information for VBE 2.0 and above
  5021 00002235 <res 00000004>      <1> physbaseptr resb 4         ;Physical address for flat frame buffer
  5022 00002239 <res 00000004>      <1> offscreenmemoffset resb 4  ;Pointer to start of off screen memory
  5023 0000223D <res 00000002>      <1> offscreenmemsize resb 2      ;Amount of off screen memory in 1Kb units
  5024 0000223F <res 000000CE>      <1> reserved2 resb 206   ;Remainder of ModeInfoBlock
  5025                              <1> endbss:
  5026                              <1> [section .text]
  5027                                      %include 'files.asm'
  5028 00004A0E 00<rept>            <1> align 512,db 0
  5029                              <1> f0:
  5030 00004A0E <incbin>            <1> incbin "included/solleros.bmp"
  5031 0005ABE6 00<rept>            <1> align 512,db 0
  5032                              <1> f1:
  5033 0005ABE6 <incbin>            <1> incbin "included/solleros.txt"
  5034 0005AD97 00<rept>            <1> align 512,db 0
  5035                              <1> f2:
  5036 0005AD97 <incbin>            <1> incbin "included/tely"
  5037 0005AFBD 00<rept>            <1> align 512,db 0
  5038                              <1> f3:
  5039 0005AFBD <incbin>            <1> incbin "included/time"
  5040 0005B154 00<rept>            <1> align 512,db 0
  5041                              <1> f4:
  5042 0005B154 <incbin>            <1> incbin "included/tutorial.bat"
  5043 0005B578 00<rept>            <1> align 512,db 0
  5044                              <1> f5:
