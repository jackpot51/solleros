     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> %include 'source/signature.asm'
     5                              <2> signature:	;used by bootloader to find SollerOS, is totally awesome
     6 00000000 EDA55ED1            <2> dd 0xD15EA5ED	;diseased
     7 00000004 15D000B1            <2> dd 0xB100D015	;blood is
     8 00000008 EDFED2BA            <2> dd 0xBAD2FEED	;bad to feed
     9 0000000C 95D0112A            <2> dd 0x2A11D095	;to all dogs
    10 00000010 52A71CA1            <2> dd 0xA11CA752	;all cats too.
    11 00000014 0F751015            <2> dd 0x1510750F   ;is lots of
    12 00000018 75CAADDE            <2> dd 0xDEADCA75   ;dead cats
    13 0000001C 95D0ADDE            <2> dd 0xDEADD095   ;dead dogs
    14 00000020 15000000            <2> dd 21			;version
    15 00000024 534F4C4C45524F53    <2> db "SOLLEROS"
    16                              <2> signatureend:
    17                              <1> menustart:	
    18 0000002C 8CC8                <1> 	mov ax, cs
    19 0000002E 8ED8                <1> 	mov ds, ax
    20 00000030 8EC0                <1> 	mov es, ax
    21 00000032 8ED0                <1> 	mov ss, ax
    22 00000034 880E[8701]          <1> 	mov [DriveNumber], cl
    23 00000038 668916[8801]        <1> 	mov [lbaad], edx
    24 0000003D B800A0              <1> 	mov ax, 0xA000
    25 00000040 8EE8                <1> 	mov gs, ax
    26 00000042 B81200              <1> 	mov ax, 12h
    27 00000045 BB0000              <1> 	mov bx, 0
    28 00000048 CD10                <1> 	int 10h
    29                              <1> guiload:
    30 0000004A BE[9802]            <1> 	mov si, bootmsg
    31 0000004D E85101              <1> 	call printrm
    32 00000050 B80000              <1> 	mov ax, 0
    33 00000053 CD16                <1> 	int 16h
    34 00000055 3C79                <1> 	cmp al, "y"
    35 00000057 0F85F900            <1> 	jne near guiload2
    36                              <1> guiloadagain:
    37 0000005B B8004F              <1> 	mov ax, 04F00h
    38 0000005E BF[A368]            <1> 	mov di, VBEMODEBLOCK
    39 00000061 CD10                <1> 	int 10h
    40 00000063 BE[C568]            <1> 	mov si, reserved
    41 00000066 81EE0200            <1> 	sub si, 2
    42                              <1> findvideomodes:
    43 0000006A 81C60200            <1> 	add si, 2
    44 0000006E 8B0C                <1> 	mov cx, [si]
    45 00000070 81F9FFFF            <1> 	cmp cx, 0xFFFF
    46 00000074 0F840A00            <1> 	je near nextvmode
    47 00000078 81FE[A369]          <1> 	cmp si, oemdata
    48 0000007C 0F83D400            <1> 	jae near guiload2	;;kill if no valid list is found
    49 00000080 EBE8                <1> 	jmp findvideomodes 	
    50                              <1> ;;debug,shows vmodes available
    51                              <1> nextvmode:
    52 00000082 81EE0200            <1> 	sub si, 2
    53 00000086 81FE[C568]          <1> 	cmp si, reserved
    54 0000008A 0F82CDFF            <1> 	jb near guiloadagain
    55 0000008E 8B0C                <1> 	mov cx, [si]
    56 00000090 81F9FFFF            <1> 	cmp cx, 0xFFFF
    57 00000094 0F84EAFF            <1> 	je near nextvmode
    58 00000098 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    59 0000009C B8014F              <1> 	mov ax, 04F01h
    60 0000009F BF[A36A]            <1> 	mov di, VBEMODEINFOBLOCK
    61 000000A2 890E[8C01]          <1> 	mov [vesamode], cx
    62 000000A6 CD10                <1> 	int 10h
    63 000000A8 A0[BC6A]            <1> 	mov al, [bitsperpixel]
    64 000000AB 3C10                <1> 	cmp al, 16
    65 000000AD 75D3                <1> 	jne nextvmode
    66 000000AF 8936[8E01]          <1> 	mov [videomodecache], si
    67 000000B3 80FC00              <1> 	cmp ah, 0
    68 000000B6 0F842200            <1> 	je near setvesamode
    69 000000BA EBC6                <1> 	jmp nextvmode
    70 000000BC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    71 000000C5 20766964656F206D6F- <1>
    72 000000CE 6465204F4B3F28792F- <1>
    73 000000D7 6E290D0A00          <1>
    74                              <1> setvesamode:
    75 000000DC 8B0E[B56A]          <1> 	mov cx, [xresolution]
    76 000000E0 E8D600              <1> 	call decshow
    77 000000E3 B078                <1> 	mov al, "x"
    78 000000E5 E83E01              <1> 	call char
    79 000000E8 8B0E[B76A]          <1> 	mov cx, [yresolution]
    80 000000EC E8CA00              <1> 	call decshow
    81 000000EF B040                <1> 	mov al, "@"
    82 000000F1 E83201              <1> 	call char
    83 000000F4 8A0E[BC6A]          <1> 	mov cl, [bitsperpixel]
    84 000000F8 E8BE00              <1> 	call decshow
    85 000000FB BE[BC00]            <1> 	mov si, isthisvideook
    86 000000FE E8A000              <1> 	call printrm
    87 00000101 B80000              <1> 	mov ax, 0
    88 00000104 CD16                <1> 	int 16h
    89 00000106 8B36[8E01]          <1> 	mov si, [videomodecache]
    90 0000010A 3C79                <1> 	cmp al, "y"
    91 0000010C 0F8572FF            <1> 	jne near nextvmode
    92 00000110 8B16[B56A]          <1> 	mov dx, [xresolution]
    93 00000114 8B0E[B76A]          <1> 	mov cx, [yresolution]
    94 00000118 8916[BB43]          <1> 	mov [resolutionx], dx
    95 0000011C 890E[B943]          <1> 	mov [resolutiony], cx
    96 00000120 01D2                <1> 	add dx, dx
    97 00000122 8916[BD43]          <1> 	mov [resolutionx2], dx
    98 00000126 BA0000              <1> 	mov dx, 0
    99 00000129 B90000              <1> 	mov cx, 0
   100 0000012C B8024F              <1> 	mov ax, 04F02h
   101 0000012F 8B1E[8C01]          <1> 	mov bx, [vesamode]
   102 00000133 CD10                <1> 	int 10h		;;enter VESA mode
   103 00000135 C606[9001]00        <1> 	mov byte [guinodo], 0
   104 0000013A C606[3935]01        <1> 	mov byte [guion], 1
   105 0000013F 6631C0              <1> 	xor eax, eax
   106 00000142 6631DB              <1> 	xor ebx, ebx
   107 00000145 6631C9              <1> 	xor ecx, ecx
   108 00000148 6631D2              <1> 	xor edx, edx
   109 0000014B 6631F6              <1> 	xor esi, esi
   110 0000014E 6631FF              <1> 	xor edi, edi	;;reset registers
   111 00000151 E95E01              <1> 	jmp pmode
   112                              <1> guiload2:
   113 00000154 B9E001              <1> 	mov cx, 480
   114 00000157 BA8002              <1> 	mov dx, 640
   115 0000015A 8916[BB43]          <1> 	mov [resolutionx], dx
   116 0000015E 01D2                <1> 	add dx, dx
   117 00000160 8916[BD43]          <1> 	mov [resolutionx2], dx
   118 00000164 890E[B943]          <1> 	mov [resolutiony], cx
   119 00000168 B81200              <1> 	mov ax, 12h
   120 0000016B BB0000              <1> 	mov bx, 0
   121 0000016E CD10                <1> 	int 10h
   122 00000170 C606[9001]01        <1> 	mov byte [guinodo], 1
   123 00000175 6631DB              <1> 	xor ebx, ebx
   124 00000178 6631C9              <1> 	xor ecx, ecx
   125 0000017B 6631D2              <1> 	xor edx, edx
   126 0000017E 6631F6              <1> 	xor esi, esi
   127 00000181 6631FF              <1> 	xor edi, edi
   128 00000184 E92B01              <1> 	jmp pmode
   129                              <1> 
   130 00000187 00                  <1> DriveNumber db 0
   131 00000188 00000000            <1> lbaad dd 0
   132                              <1> 	
   133 0000018C 0000                <1> vesamode dw 0
   134 0000018E 0000                <1> videomodecache dw 0
   135                              <1> 
   136 00000190 00                  <1> guinodo db 0
   137                              <1> tests:
   138 00000191 BB0700              <1> 	mov bx, 7
   139 00000194 B40E                <1> 	mov ah, 0Eh
   140 00000196 FEC0                <1> 	inc al
   141 00000198 3C02                <1> 	cmp al, 2
   142 0000019A 7501                <1> 	jne cnttest
   143 0000019C C3                  <1> 	ret
   144                              <1> cnttest:
   145 0000019D CD10                <1> 	int 10h
   146 0000019F EBF0                <1> 	jmp tests
   147                              <1> 
   148                              <1>     printrm:			; 'si' comes in with string address
   149 000001A1 BB0700              <1> 	    mov bx,07		; write to display
   150 000001A4 B40E                <1> 	    mov ah,0Eh		; screen function
   151 000001A6 8A04                <1>     prs2:    mov al,[si]         ; get next character
   152 000001A8 3C00                <1> 	    cmp al,0		; look for terminator 
   153 000001AA 7405                <1>             je finpr2		; zero byte at end of string
   154 000001AC CD10                <1> 	    int 10h		; write character to screen.    
   155 000001AE 46                  <1>      	    inc si	     	; move to next character
   156 000001AF EBF5                <1> 	    jmp prs2		; loop
   157 000001B1 C3                  <1>     finpr2: ret
   158                              <1> 
   159 000001B2 0000000000          <1> dcnm db 0,0,0,0,0
   160 000001B7 0000                <1> dcnmend db 0,0
   161                              <1> 
   162                              <1> 
   163                              <1> decshow:
   164 000001B9 BE[B201]            <1> 	mov si, dcnm
   165                              <1> decclear:
   166 000001BC B030                <1> 	mov al, "0"
   167 000001BE 8804                <1> 	mov [si], al
   168 000001C0 46                  <1> 	inc si
   169 000001C1 81FE[B701]          <1> 	cmp si, dcnmend
   170 000001C5 76F5                <1> 	jbe decclear
   171 000001C7 4E                  <1> 	dec si
   172 000001C8 E81500              <1> 	call convertrm
   173 000001CB BE[B201]            <1> 	mov si, dcnm
   174                              <1> dectst:
   175 000001CE 8A04                <1> 	mov al, [si]
   176 000001D0 46                  <1> 	inc si
   177 000001D1 81FE[B701]          <1> 	cmp si, dcnmend
   178 000001D5 7704                <1> 	ja dectstend
   179 000001D7 3C30                <1> 	cmp al, "0"
   180 000001D9 76F3                <1> 	jbe dectst
   181                              <1> dectstend:
   182 000001DB 4E                  <1> 	dec si
   183 000001DC E8C2FF              <1> 	call printrm
   184 000001DF C3                  <1> 	ret
   185                              <1> 	
   186                              <1> 	
   187                              <1> convertrm:
   188 000001E0 4E                  <1> 	dec si
   189 000001E1 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   190                              <1> cnvrtrm:
   191 000001E3 89DE                <1> 	mov si, bx
   192 000001E5 81EE0300            <1> 	sub si, 3
   193 000001E9 46                  <1> ten3rm:	inc si
   194 000001EA 81F9E803            <1> 	cmp cx, 1000
   195 000001EE 7208                <1> 	jb ten2rm
   196 000001F0 81E9E803            <1> 	sub cx, 1000
   197 000001F4 FE04                <1> 	inc byte [si]
   198 000001F6 EBEB                <1> 	jmp cnvrtrm
   199 000001F8 46                  <1> ten2rm:	inc si
   200 000001F9 81F96400            <1> 	cmp cx, 100
   201 000001FD 7208                <1> 	jb ten1rm
   202 000001FF 81E96400            <1> 	sub cx, 100
   203 00000203 FE04                <1> 	inc byte [si]
   204 00000205 EBDC                <1> 	jmp cnvrtrm
   205 00000207 46                  <1> ten1rm:	inc si
   206 00000208 81F90A00            <1> 	cmp cx, 10
   207 0000020C 7208                <1> 	jb ten0rm
   208 0000020E 81E90A00            <1> 	sub cx, 10
   209 00000212 FE04                <1> 	inc byte [si]
   210 00000214 EBCD                <1> 	jmp cnvrtrm
   211 00000216 46                  <1> ten0rm:	inc si
   212 00000217 81F90100            <1> 	cmp cx, 1
   213 0000021B 7208                <1> 	jb tendnrm
   214 0000021D 81E90100            <1> 	sub cx, 1
   215 00000221 FE04                <1> 	inc byte [si]
   216 00000223 EBBE                <1> 	jmp cnvrtrm
   217                              <1> tendnrm:
   218 00000225 C3                  <1> 	ret
   219                              <1> 
   220                              <1> 
   221                              <1> 
   222                              <1> 
   223                              <1>     char: 		    ;char must be in al
   224 00000226 BB0700              <1>        mov bx, 07
   225 00000229 B40E                <1> 	   mov ah, 0Eh
   226 0000022B CD10                <1> 	   int 10h
   227 0000022D C3                  <1> 	   ret
   228                              <1> 
   229                              <1> 		shutdown:
   230 0000022E 0F20C0              <1> 				mov eax, cr0
   231 00000231 24FE                <1> 				and al,0xFE     ; back to realmode
   232 00000233 0F22C0              <1> 				mov  cr0, eax   ; by toggling bit again
   233 00000236 FB                  <1> 				sti
   234 00000237 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   235 0000023A 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   236 0000023C CD15                <1> 			INT 15h		; shut down
   237 0000023E B80453              <1> 			MOV AX, 5304h
   238 00000241 31DB                <1> 			XOR BX, BX
   239 00000243 CD15                <1> 			INT 15h		; Interrupt 15h originally was
   240 00000245 B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   241 00000248 31DB                <1> 			XOR BX, BX	; but is still in use for
   242 0000024A CD15                <1> 			INT 15h		; diverse things
   243 0000024C B80753              <1> 			MOV AX, 5307h
   244 0000024F BB0100              <1> 			MOV BX, 1
   245 00000252 B90300              <1> 			MOV CX, 3
   246 00000255 CD15                <1> 			INT 15h
   247 00000257 CF                  <1> 			IRET
   248                              <1> 
   249                              <1> 	coldboot:
   250 00000258 0F20C0              <1> 			   mov eax, cr0
   251 0000025B 24FE                <1> 			   and al,0xFE     ; back to realmode
   252 0000025D 0F22C0              <1> 			   mov  cr0, eax   ; by toggling bit again
   253 00000260 FB                  <1> 			   sti
   254 00000261 B84000              <1> 			MOV AX, 0040h
   255 00000264 8EC0                <1> 			MOV ES, AX
   256 00000266 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   257 0000026D EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   258 00000272 CF                  <1> 			IRET
   259                              <1> 
   260                              <1> 		warmboot:
   261 00000273 E81200              <1> 			call realmode
   262 00000276 B84000              <1> 			MOV AX, 0040h
   263 00000279 8EC0                <1> 			MOV ES, AX
   264 0000027B 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   265 00000282 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   266 00000287 CF                  <1> 			IRET
   267                              <1> 
   268                              <1> 
   269                              <1> realmode:
   270 00000288 0F20C0              <1>    mov eax, cr0
   271 0000028B 24FE                <1>    and al,0xFE     ; back to realmode
   272 0000028D 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   273 00000290 FB                  <1>    sti
   274 00000291 66B800000000        <1>    mov eax, 0
   275 00000297 C3                  <1>    ret
   276                              <1>    
   277 00000298 426F6F7420696E746F- <1> bootmsg:	db "Boot into the GUI?(y/n)",10,13,0
   278 000002A1 20746865204755493F- <1>
   279 000002AA 28792F6E290A0D00    <1>
   280                                      %include 'source/pmode.asm'
   281                              <1> [BITS 16]
   282                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   283                              <1> ;	16-bit real mode
   284                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   285                              <1> 
   286                              <1> pmode:
   287 000002B2 BA9200              <1> 	mov dx, 0x92
   288 000002B5 EC                  <1> 	in al, dx	;;A20
   289 000002B6 0C02                <1> 	or al, 2
   290 000002B8 EE                  <1> 	out dx, al
   291 000002B9 66BB00000000        <1> 	mov ebx, 0
   292 000002BF 8CCB                <1> 	mov bx,cs		; EBX=segment
   293 000002C1 66C1E304            <1> 	shl ebx,4		;	<< 4
   294 000002C5 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   295 000002C9 A3[340C]            <1> 	mov [gdt2 + 2],ax
   296 000002CC A3[3C0C]            <1> 	mov [gdt3 + 2],ax
   297 000002CF 66C1E810            <1> 	shr eax,16
   298 000002D3 A2[360C]            <1> 	mov [gdt2 + 4],al
   299 000002D6 A2[3E0C]            <1> 	mov [gdt3 + 4],al
   300 000002D9 8826[390C]          <1> 	mov [gdt2 + 7],ah
   301 000002DD 8826[410C]          <1> 	mov [gdt3 + 7],ah
   302                              <1> 	
   303 000002E1 66B8[00000000]      <1> 	mov eax, stack
   304 000002E7 A3[440C]            <1> 	mov [gdts + 2],ax
   305 000002EA 66C1E810            <1> 	shr eax,16
   306 000002EE A2[460C]            <1> 	mov [gdts + 4],al
   307 000002F1 8826[490C]          <1> 	mov [gdts + 7],ah
   308 000002F5 66A1[0104]          <1> 	mov eax, [newcodecache]
   309 000002F9 A3[4C0C]            <1> 	mov [gdt4 + 2],ax
   310 000002FC A3[540C]            <1> 	mov [gdt5 + 2],ax
   311 000002FF 66C1E810            <1> 	shr eax,16
   312 00000303 A2[4E0C]            <1> 	mov [gdt4 + 4],al
   313 00000306 A2[560C]            <1> 	mov [gdt5 + 4],al
   314 00000309 8826[510C]          <1> 	mov [gdt4 + 7],ah
   315 0000030D 8826[590C]          <1> 	mov [gdt5 + 7],ah
   316                              <1> 	
   317                              <1> ; fix up gdt and idt
   318 00000311 67668D83[220C0000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   319 00000319 66A3[180C]          <1> 	mov [gdtr + 2],eax
   320 0000031D 67668D83[5A0C0000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   321 00000325 66A3[1E0C]          <1> 	mov [idtr + 2],eax
   322 00000329 FA                  <1> 	cli
   323 0000032A 0F0116[160C]        <1> 	lgdt [gdtr]
   324 0000032F 0F011E[1C0C]        <1> 	lidt [idtr]
   325 00000334 66BB00000000        <1> 	mov ebx, 0
   326 0000033A 8CDB                <1> 	mov bx, ds
   327 0000033C 66891E[FD03]        <1> 	mov [basecache], ebx
   328 00000341 0F20C0              <1> 	mov eax,cr0
   329 00000344 0C01                <1> 	or al,1
   330 00000346 0F22C0              <1> 	mov cr0,eax
   331 00000349 EA[5203]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   332                              <1> [BITS 32]
   333 0000034E 90                  <1> 	nop
   334 0000034F 90                  <1> 	nop
   335 00000350 90                  <1> 	nop
   336 00000351 90                  <1> 	nop
   337                              <1> do_pm:
   338 00000352 B800000000          <1> 	mov eax, 0
   339 00000357 66B81800            <1> 	mov ax, SYS_DATA_SEL
   340 0000035B 8ED8                <1> 	mov ds,ax
   341 0000035D 8ED0                <1> 	mov ss,ax	;;can switch back to STACK_SEL later
   342 0000035F BC[00100000]        <1> 	mov esp, stackend	;;can switch back to 4096 later
   343 00000364 90                  <1> 	nop
   344 00000365 90                  <1> 	nop
   345 00000366 8EC0                <1> 	mov es, ax
   346 00000368 8EE0                <1> 	mov fs, ax
   347 0000036A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   348 0000036E 8EE8                <1> 	mov gs, ax
   349                              <1> 	
   350                              <1> copykernel:
   351 00000370 648B06              <1> 	mov eax, [fs:esi]
   352 00000373 658906              <1> 	mov [gs:esi], eax
   353 00000376 81C604000000        <1> 	add esi, 4
   354 0000037C 81FE[00000000]      <1> 	cmp esi, bssstart
   355 00000382 72EC                <1> 	jb copykernel
   356 00000384 EA[8B030000]2800    <1> 	jmp NEW_CODE_SEL:done_copy
   357                              <1> 	
   358                              <1> done_copy:
   359 0000038B 66B83000            <1> 	mov ax, NEW_DATA_SEL	;;these MUST be setup AFTER the kernel switches places!!!
   360 0000038F 8ED8                <1> 	mov ds, ax
   361 00000391 8ED0                <1> 	mov ss, ax
   362 00000393 BC[00100000]        <1> 	mov esp, stackend
   363 00000398 90                  <1> 	nop
   364 00000399 90                  <1> 	nop
   365 0000039A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   366 0000039E 8EC0                <1> 	mov es, ax
   367 000003A0 8EE0                <1> 	mov fs, ax
   368 000003A2 66B81800            <1> 	mov ax, SYS_DATA_SEL
   369 000003A6 8EE8                <1> 	mov gs, ax
   370                              <1> 	
   371 000003A8 A1[01040000]        <1> 	mov eax, [newcodecache]
   372 000003AD C1E804              <1> 	shr eax, 4
   373 000003B0 A3[FD030000]        <1> 	mov [basecache], eax
   374                              <1> 	
   375 000003B5 89C3                <1> 	mov ebx, eax
   376 000003B7 C1E304              <1> 	shl ebx, 4
   377 000003BA 8B3D[CB6A0000]      <1> 	mov edi, [physbaseptr]
   378 000003C0 29DF                <1> 	sub edi, ebx
   379 000003C2 893D[CB6A0000]      <1> 	mov [physbaseptr], edi
   380                              <1> 	
   381 000003C8 BE[00000000]        <1> 	mov esi, bssstart
   382 000003CD B800000000          <1> 	mov eax, 0
   383                              <1> clearkernelbuffers:
   384 000003D2 8906                <1> 	mov [esi], eax
   385 000003D4 81C604000000        <1> 	add esi, 4
   386 000003DA 81FE[27642000]      <1> 	cmp esi, bssend
   387 000003E0 72F0                <1> 	jb clearkernelbuffers
   388 000003E2 803D[90010000]01    <1> 	cmp byte [guinodo], 1
   389 000003E9 7407                <1> 	je guidonot
   390 000003EB 90                  <1> 	nop
   391 000003EC 90                  <1> 	nop
   392 000003ED E9ED2F0000          <1> 	jmp gui
   393                              <1> guidonot:
   394 000003F2 90                  <1> 	nop
   395 000003F3 90                  <1> 	nop
   396 000003F4 E914110000          <1> 	jmp os
   397                              <1> 	
   398 000003F9 00000000            <1> user2codepoint dw 0,0
   399 000003FD 00000000            <1> basecache dd 0
   400 00000401 00001000            <1> newcodecache dd 0x100000
   401                              <1> 	
   402                              <1> 
   403                              <1> unhand:	
   404                              <1> 	%assign i 0
   405                              <1> 	%rep 40
   406                              <1> 	cli
   407                              <1> 	mov byte [intprob], i
   408                              <1> 	jmp unhand2
   409                              <1> 	%assign i i+1
   410                              <1> 	%endrep
   411 00000405 FA                  <2>  cli
   412 00000406 C605[69080000]00    <2>  mov byte [intprob], i
   413 0000040D E9FB010000          <2>  jmp unhand2
   414                              <2>  %assign i i+1
   415 00000412 FA                  <2>  cli
   416 00000413 C605[69080000]01    <2>  mov byte [intprob], i
   417 0000041A E9EE010000          <2>  jmp unhand2
   418                              <2>  %assign i i+1
   419 0000041F FA                  <2>  cli
   420 00000420 C605[69080000]02    <2>  mov byte [intprob], i
   421 00000427 E9E1010000          <2>  jmp unhand2
   422                              <2>  %assign i i+1
   423 0000042C FA                  <2>  cli
   424 0000042D C605[69080000]03    <2>  mov byte [intprob], i
   425 00000434 E9D4010000          <2>  jmp unhand2
   426                              <2>  %assign i i+1
   427 00000439 FA                  <2>  cli
   428 0000043A C605[69080000]04    <2>  mov byte [intprob], i
   429 00000441 E9C7010000          <2>  jmp unhand2
   430                              <2>  %assign i i+1
   431 00000446 FA                  <2>  cli
   432 00000447 C605[69080000]05    <2>  mov byte [intprob], i
   433 0000044E E9BA010000          <2>  jmp unhand2
   434                              <2>  %assign i i+1
   435 00000453 FA                  <2>  cli
   436 00000454 C605[69080000]06    <2>  mov byte [intprob], i
   437 0000045B E9AD010000          <2>  jmp unhand2
   438                              <2>  %assign i i+1
   439 00000460 FA                  <2>  cli
   440 00000461 C605[69080000]07    <2>  mov byte [intprob], i
   441 00000468 E9A0010000          <2>  jmp unhand2
   442                              <2>  %assign i i+1
   443 0000046D FA                  <2>  cli
   444 0000046E C605[69080000]08    <2>  mov byte [intprob], i
   445 00000475 E993010000          <2>  jmp unhand2
   446                              <2>  %assign i i+1
   447 0000047A FA                  <2>  cli
   448 0000047B C605[69080000]09    <2>  mov byte [intprob], i
   449 00000482 E986010000          <2>  jmp unhand2
   450                              <2>  %assign i i+1
   451 00000487 FA                  <2>  cli
   452 00000488 C605[69080000]0A    <2>  mov byte [intprob], i
   453 0000048F E979010000          <2>  jmp unhand2
   454                              <2>  %assign i i+1
   455 00000494 FA                  <2>  cli
   456 00000495 C605[69080000]0B    <2>  mov byte [intprob], i
   457 0000049C E96C010000          <2>  jmp unhand2
   458                              <2>  %assign i i+1
   459 000004A1 FA                  <2>  cli
   460 000004A2 C605[69080000]0C    <2>  mov byte [intprob], i
   461 000004A9 E95F010000          <2>  jmp unhand2
   462                              <2>  %assign i i+1
   463 000004AE FA                  <2>  cli
   464 000004AF C605[69080000]0D    <2>  mov byte [intprob], i
   465 000004B6 E952010000          <2>  jmp unhand2
   466                              <2>  %assign i i+1
   467 000004BB FA                  <2>  cli
   468 000004BC C605[69080000]0E    <2>  mov byte [intprob], i
   469 000004C3 E945010000          <2>  jmp unhand2
   470                              <2>  %assign i i+1
   471 000004C8 FA                  <2>  cli
   472 000004C9 C605[69080000]0F    <2>  mov byte [intprob], i
   473 000004D0 E938010000          <2>  jmp unhand2
   474                              <2>  %assign i i+1
   475 000004D5 FA                  <2>  cli
   476 000004D6 C605[69080000]10    <2>  mov byte [intprob], i
   477 000004DD E92B010000          <2>  jmp unhand2
   478                              <2>  %assign i i+1
   479 000004E2 FA                  <2>  cli
   480 000004E3 C605[69080000]11    <2>  mov byte [intprob], i
   481 000004EA E91E010000          <2>  jmp unhand2
   482                              <2>  %assign i i+1
   483 000004EF FA                  <2>  cli
   484 000004F0 C605[69080000]12    <2>  mov byte [intprob], i
   485 000004F7 E911010000          <2>  jmp unhand2
   486                              <2>  %assign i i+1
   487 000004FC FA                  <2>  cli
   488 000004FD C605[69080000]13    <2>  mov byte [intprob], i
   489 00000504 E904010000          <2>  jmp unhand2
   490                              <2>  %assign i i+1
   491 00000509 FA                  <2>  cli
   492 0000050A C605[69080000]14    <2>  mov byte [intprob], i
   493 00000511 E9F7000000          <2>  jmp unhand2
   494                              <2>  %assign i i+1
   495 00000516 FA                  <2>  cli
   496 00000517 C605[69080000]15    <2>  mov byte [intprob], i
   497 0000051E E9EA000000          <2>  jmp unhand2
   498                              <2>  %assign i i+1
   499 00000523 FA                  <2>  cli
   500 00000524 C605[69080000]16    <2>  mov byte [intprob], i
   501 0000052B E9DD000000          <2>  jmp unhand2
   502                              <2>  %assign i i+1
   503 00000530 FA                  <2>  cli
   504 00000531 C605[69080000]17    <2>  mov byte [intprob], i
   505 00000538 E9D0000000          <2>  jmp unhand2
   506                              <2>  %assign i i+1
   507 0000053D FA                  <2>  cli
   508 0000053E C605[69080000]18    <2>  mov byte [intprob], i
   509 00000545 E9C3000000          <2>  jmp unhand2
   510                              <2>  %assign i i+1
   511 0000054A FA                  <2>  cli
   512 0000054B C605[69080000]19    <2>  mov byte [intprob], i
   513 00000552 E9B6000000          <2>  jmp unhand2
   514                              <2>  %assign i i+1
   515 00000557 FA                  <2>  cli
   516 00000558 C605[69080000]1A    <2>  mov byte [intprob], i
   517 0000055F E9A9000000          <2>  jmp unhand2
   518                              <2>  %assign i i+1
   519 00000564 FA                  <2>  cli
   520 00000565 C605[69080000]1B    <2>  mov byte [intprob], i
   521 0000056C E99C000000          <2>  jmp unhand2
   522                              <2>  %assign i i+1
   523 00000571 FA                  <2>  cli
   524 00000572 C605[69080000]1C    <2>  mov byte [intprob], i
   525 00000579 E98F000000          <2>  jmp unhand2
   526                              <2>  %assign i i+1
   527 0000057E FA                  <2>  cli
   528 0000057F C605[69080000]1D    <2>  mov byte [intprob], i
   529 00000586 E982000000          <2>  jmp unhand2
   530                              <2>  %assign i i+1
   531 0000058B FA                  <2>  cli
   532 0000058C C605[69080000]1E    <2>  mov byte [intprob], i
   533 00000593 E975000000          <2>  jmp unhand2
   534                              <2>  %assign i i+1
   535 00000598 FA                  <2>  cli
   536 00000599 C605[69080000]1F    <2>  mov byte [intprob], i
   537 000005A0 E968000000          <2>  jmp unhand2
   538                              <2>  %assign i i+1
   539 000005A5 FA                  <2>  cli
   540 000005A6 C605[69080000]20    <2>  mov byte [intprob], i
   541 000005AD E95B000000          <2>  jmp unhand2
   542                              <2>  %assign i i+1
   543 000005B2 FA                  <2>  cli
   544 000005B3 C605[69080000]21    <2>  mov byte [intprob], i
   545 000005BA E94E000000          <2>  jmp unhand2
   546                              <2>  %assign i i+1
   547 000005BF FA                  <2>  cli
   548 000005C0 C605[69080000]22    <2>  mov byte [intprob], i
   549 000005C7 E941000000          <2>  jmp unhand2
   550                              <2>  %assign i i+1
   551 000005CC FA                  <2>  cli
   552 000005CD C605[69080000]23    <2>  mov byte [intprob], i
   553 000005D4 E934000000          <2>  jmp unhand2
   554                              <2>  %assign i i+1
   555 000005D9 FA                  <2>  cli
   556 000005DA C605[69080000]24    <2>  mov byte [intprob], i
   557 000005E1 E927000000          <2>  jmp unhand2
   558                              <2>  %assign i i+1
   559 000005E6 FA                  <2>  cli
   560 000005E7 C605[69080000]25    <2>  mov byte [intprob], i
   561 000005EE E91A000000          <2>  jmp unhand2
   562                              <2>  %assign i i+1
   563 000005F3 FA                  <2>  cli
   564 000005F4 C605[69080000]26    <2>  mov byte [intprob], i
   565 000005FB E90D000000          <2>  jmp unhand2
   566                              <2>  %assign i i+1
   567 00000600 FA                  <2>  cli
   568 00000601 C605[69080000]27    <2>  mov byte [intprob], i
   569 00000608 E900000000          <2>  jmp unhand2
   570                              <2>  %assign i i+1
   571                              <1> unhand2:
   572 0000060D 1E                  <1> 	push ds
   573 0000060E 06                  <1> 	push es
   574 0000060F 0FA0                <1> 	push fs
   575 00000611 0FA8                <1> 	push gs
   576 00000613 16                  <1> 	push ss
   577 00000614 60                  <1> 	pushad
   578 00000615 803D[39350000]00    <1> 	cmp byte [guion], 0
   579 0000061C 0F8432000000        <1> 	je near noguiunhandstuff
   580 00000622 66C705[63080000]08- <1> 	mov word [locunhandy], 8
   581 0000062A 00                  <1>
   582 0000062B 66C705[65080000]08- <1> 	mov word [locunhandx], 8
   583 00000633 00                  <1>
   584 00000634 668B1D[DD330000]    <1> 	mov bx, [background]
   585 0000063B 66891D[67080000]    <1> 	mov [backgroundcache], bx
   586 00000642 C605[CA2D0000]01    <1> 	mov byte [mousedisabled],1
   587 00000649 66BB00F8            <1> 	mov bx, 1111100000000000b
   588 0000064D 66891D[DD330000]    <1> 	mov [background], bx
   589                              <1> noguiunhandstuff
   590 00000654 89E6                <1> 	mov esi, esp
   591 00000656 8935[5B080000]      <1> 	mov [espfirst], esi
   592 0000065C 81C6BC000000        <1> 	add esi, ((unhndrgend - unhndrg)/15)*4
   593 00000662 8935[57080000]      <1> 	mov [esploc], esi
   594 00000668 BE[72080000]        <1> 	mov esi, unhandmsg
   595 0000066D 8935[5F080000]      <1> 	mov [esiloc], esi
   596 00000673 BE[6A580000]        <1> 	mov esi, line
   597 00000678 E84B0A0000          <1> 	call print
   598 0000067D B900000000          <1> 	mov ecx, 0
   599 00000682 8A0D[69080000]      <1> 	mov cl, [intprob]
   600 00000688 E862010000          <1> 	call expdump
   601                              <1> dumpstack:
   602 0000068D 8B35[57080000]      <1> 	mov esi, [esploc]
   603 00000693 39E6                <1> 	cmp esi, esp
   604 00000695 7216                <1> 	jb donedump
   605 00000697 368B0E              <1> 	mov ecx, [ss:esi]
   606 0000069A 81EE04000000        <1> 	sub esi, 4
   607 000006A0 8935[57080000]      <1> 	mov [esploc], esi
   608 000006A6 E844010000          <1> 	call expdump
   609 000006AB EBE0                <1> 	jmp dumpstack
   610                              <1> donedump:
   611 000006AD 0F20C1              <1> 	mov ecx, cr0
   612 000006B0 E83A010000          <1> 	call expdump
   613 000006B5 0F20D1              <1> 	mov ecx, cr2
   614 000006B8 E832010000          <1> 	call expdump
   615 000006BD 0F20D9              <1> 	mov ecx, cr3
   616 000006C0 E82A010000          <1> 	call expdump
   617 000006C5 0F20E1              <1> 	mov ecx, cr4
   618 000006C8 E822010000          <1> 	call expdump
   619 000006CD 8B35[57080000]      <1> 	mov esi, [esploc]
   620 000006D3 368B7C2434          <1> 	mov edi, [ss:esp + 52]
   621 000006D8 81C710000000        <1> 	add edi, 16
   622 000006DE 893D[6E080000]      <1> 	mov [codelocend], edi
   623 000006E4 81EF20000000        <1> 	sub edi, 32
   624                              <1> dumpcodeloop:
   625 000006EA 893D[6A080000]      <1> 	mov [codeloc], edi
   626 000006F0 8B0F                <1> 	mov ecx, [edi]
   627 000006F2 E8F8000000          <1> 	call expdump
   628 000006F7 8B3D[6A080000]      <1> 	mov edi, [codeloc]
   629 000006FD 81C704000000        <1> 	add edi, 4
   630 00000703 3B3D[6E080000]      <1> 	cmp edi, [codelocend]
   631 00000709 72DF                <1> 	jb dumpcodeloop
   632 0000070B BE[C9070000]        <1> 	mov esi, backtoosmsg
   633 00000710 803D[39350000]00    <1> 	cmp byte [guion], 0
   634 00000717 750A                <1> 	jne guibacktomsg
   635 00000719 E8AA090000          <1> 	call print
   636 0000071E E91B000000          <1> 	jmp backtomsgdone
   637                              <1> guibacktomsg:
   638 00000723 668B15[65080000]    <1> 	mov dx, [locunhandx]
   639 0000072A 668B0D[63080000]    <1> 	mov cx, [locunhandy]
   640 00000731 66B80100            <1> 	mov ax, 1
   641 00000735 66BB0000            <1> 	mov bx, 0
   642 00000739 E8ED370000          <1> 	call showstring2
   643                              <1> backtomsgdone:
   644 0000073E B000                <1> 	mov al, 0
   645 00000740 E83D090000          <1> 	call int302
   646 00000745 803D[69080000]03    <1> 	cmp byte [intprob], 3
   647 0000074C 753D                <1> 	jne nodebugint
   648 0000074E 803D[39350000]00    <1> 	cmp byte [guion], 0
   649 00000755 7423                <1> 	je nodebuggui
   650 00000757 668B1D[67080000]    <1> 	mov bx, [backgroundcache]
   651 0000075E 66891D[DD330000]    <1> 	mov [background], bx
   652 00000765 66BB0000            <1> 	mov bx, 0
   653 00000769 C605[CA2D0000]00    <1> 	mov byte [mousedisabled], 0
   654 00000770 E82B2C0000          <1> 	call guiclear
   655 00000775 E857340000          <1> 	call reloadallgraphics
   656                              <1> nodebuggui:
   657 0000077A 8B35[5B080000]      <1> 	mov esi, [espfirst]
   658 00000780 89F4                <1> 	mov esp, esi
   659 00000782 61                  <1> 	popad
   660 00000783 17                  <1> 	pop ss
   661 00000784 0FA9                <1> 	pop gs
   662 00000786 0FA1                <1> 	pop fs
   663 00000788 07                  <1> 	pop es
   664 00000789 1F                  <1> 	pop ds
   665 0000078A CF                  <1> 	iret
   666                              <1> nodebugint:
   667 0000078B 61                  <1> 	popad
   668 0000078C 17                  <1> 	pop ss
   669 0000078D 0FA9                <1> 	pop gs
   670 0000078F 0FA1                <1> 	pop fs
   671 00000791 07                  <1> 	pop es
   672 00000792 1F                  <1> 	pop ds
   673 00000793 803D[39350000]00    <1> 	cmp byte [guion], 0
   674 0000079A 7428                <1> 	je returnunhandgui
   675 0000079C 668B1D[67080000]    <1> 	mov bx, [backgroundcache]
   676 000007A3 66891D[DD330000]    <1> 	mov [background], bx
   677 000007AA 66BB0000            <1> 	mov bx, 0
   678 000007AE C605[CA2D0000]00    <1> 	mov byte [mousedisabled], 0
   679 000007B5 E8E62B0000          <1> 	call guiclear
   680 000007BA E812340000          <1> 	call reloadallgraphics
   681 000007BF E91B2C0000          <1> 	jmp gui
   682                              <1> returnunhandgui:
   683 000007C4 E9600E0000          <1> 	jmp nwcmd
   684 000007C9 507265737320616E79- <1> backtoosmsg db "Press any key to return to SollerOS",10,13,0
   685 000007D2 206B657920746F2072- <1>
   686 000007DB 657475726E20746F20- <1>
   687 000007E4 536F6C6C65724F530A- <1>
   688 000007ED 0D00                <1>
   689                              <1> expdump:
   690 000007EF 8B35[5F080000]      <1> 	mov esi, [esiloc]
   691 000007F5 89F7                <1> 	mov edi, esi
   692 000007F7 81C70F000000        <1> 	add edi, 15
   693 000007FD 81C604000000        <1> 	add esi, 4
   694 00000803 893D[5F080000]      <1> 	mov [esiloc], edi
   695 00000809 81EF03000000        <1> 	sub edi, 3
   696 0000080F E858120000          <1> 	call converthex
   697 00000814 81EE04000000        <1> 	sub esi, 4
   698 0000081A 803D[39350000]00    <1> 	cmp byte [guion], 0
   699 00000821 0F842A000000        <1> 	je near expdumptext
   700 00000827 668B0D[63080000]    <1> 	mov cx, [locunhandy]
   701 0000082E 668B15[65080000]    <1> 	mov dx, [locunhandx]
   702 00000835 66B80100            <1> 	mov ax, 1
   703 00000839 66BB0000            <1> 	mov bx, 0
   704 0000083D E8E9360000          <1> 	call showstring2
   705 00000842 66890D[63080000]    <1> 	mov [locunhandy], cx
   706 00000849 668915[65080000]    <1> 	mov [locunhandx], dx
   707 00000850 C3                  <1> 	ret
   708                              <1> expdumptext:
   709 00000851 E872080000          <1> 	call print
   710 00000856 C3                  <1> 	ret
   711 00000857 00000000            <1> esploc dd 0
   712 0000085B 00000000            <1> espfirst dd 0
   713 0000085F 00000000            <1> esiloc dd 0
   714 00000863 0100                <1> locunhandy dw 1
   715 00000865 0100                <1> locunhandx dw 1
   716 00000867 0000                <1> backgroundcache dw 0
   717 00000869 00                  <1> intprob db 0
   718 0000086A 00000000            <1> codeloc dd 0
   719 0000086E 00000000            <1> codelocend dd 0
   720                              <1> 	unhandmsg:	
   721 00000872 494E543D3030303030- <1> 			db "INT=00000000",10,13,0
   722 0000087B 3030300A0D00        <1>
   723                              <1> unhndrg:
   724 00000881 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   725 0000088A 303030202000<rept>  <1>
   726 000008EA FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   727 000008F3 3030300A0D00        <1>
   728 000008F9 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   729 00000902 303030202000<rept>  <1>
   730 00000962 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   731 0000096B 3030300A0D00        <1>
   732 00000971 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   733 0000097A 303030202000<rept>  <1>
   734 000009DA FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   735 000009E3 3030300A0D00        <1>
   736 000009E9 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   737 000009F2 303030202000<rept>  <1>
   738 00000A52 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   739 00000A5B 3030300A0D00        <1>
   740                              <1> unhandregs:
   741 00000A61 45464C3D3030303030- <1> 			db "EFL=00000000",10,13,0
   742 00000A6A 3030300A0D00        <1>
   743 00000A70 43533A3D3030303030- <1> 			db "CS:=00000000",10,13,0
   744 00000A79 3030300A0D00        <1>
   745 00000A7F 4549503D3030303030- <1> 			db "EIP=00000000",10,13,0
   746 00000A88 3030300A0D00        <1>
   747 00000A8E 44533A3D3030303030- <1> 			db "DS:=00000000",10,13,0
   748 00000A97 3030300A0D00        <1>
   749 00000A9D 45533A3D3030303030- <1> 			db "ES:=00000000",10,13,0
   750 00000AA6 3030300A0D00        <1>
   751 00000AAC 46533A3D3030303030- <1> 			db "FS:=00000000",10,13,0
   752 00000AB5 3030300A0D00        <1>
   753 00000ABB 47533A3D3030303030- <1> 			db "GS:=00000000",10,13,0
   754 00000AC4 3030300A0D00        <1>
   755 00000ACA 53533A3D3030303030- <1> 			db "SS:=00000000",10,13,0
   756 00000AD3 3030300A0D00        <1>
   757 00000AD9 4541583D3030303030- <1> 			db "EAX=00000000",10,13,0
   758 00000AE2 3030300A0D00        <1>
   759 00000AE8 4543583D3030303030- <1> 			db "ECX=00000000",10,13,0
   760 00000AF1 3030300A0D00        <1>
   761 00000AF7 4544583D3030303030- <1> 			db "EDX=00000000",10,13,0
   762 00000B00 3030300A0D00        <1>
   763 00000B06 4542583D3030303030- <1> 			db "EBX=00000000",10,13,0
   764 00000B0F 3030300A0D00        <1>
   765 00000B15 4553503D3030303030- <1> 			db "ESP=00000000",10,13,0
   766 00000B1E 3030300A0D00        <1>
   767 00000B24 4542503D3030303030- <1> 			db "EBP=00000000",10,13,0
   768 00000B2D 3030300A0D00        <1>
   769 00000B33 4553493D3030303030- <1> 			db "ESI=00000000",10,13,0
   770 00000B3C 3030300A0D00        <1>
   771 00000B42 4544493D3030303030- <1> unhndrgend:	db "EDI=00000000",10,13,0
   772 00000B4B 3030300A0D00        <1>
   773 00000B51 4352303D3030303030- <1> 			db "CR0=00000000",10,13,0
   774 00000B5A 3030300A0D00        <1>
   775 00000B60 4352323D3030303030- <1> 			db "CR2=00000000",10,13,0
   776 00000B69 3030300A0D00        <1>
   777 00000B6F 4352333D3030303030- <1> 			db "CR3=00000000",10,13,0
   778 00000B78 3030300A0D00        <1>
   779 00000B7E 4352343D3030303030- <1> 			db "CR4=00000000",10,13,0
   780 00000B87 3030300A0D00        <1>
   781 00000B8D FFFFFFFF3030303030- <1> unhandcode: times 2 db 255,255,255,255,"00000000  ",0	;;this dumps the code before and after the interrupt in question
   782 00000B96 303030202000<rept>  <1>
   783 00000BAB FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000 ",255,0
   784 00000BB4 30303020FF00        <1>
   785 00000BBA FFFFFF5B3030303030- <1> 			db 255,255,255,"[00000000] ",0
   786 00000BC3 3030305D2000        <1>
   787 00000BC9 FFFFFFFF3030303030- <1> 			times 3 db 255,255,255,255,"00000000  ",0
   788 00000BD2 303030202000<rept>  <1>
   789 00000BF6 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   790 00000BFF 3030300A0D00        <1>
   791                              <1> unhandmsgend:
   792                              <1> 
   793                              <1> timerinterrupt:
   794 00000C05 803D[93510000]01    <1> 	cmp byte [threadson], 1
   795 00000C0C 7505                <1> 	jne handled
   796 00000C0E E93E4B0000          <1> 	jmp threadswitch
   797                              <1> 	
   798                              <1> handled:
   799 00000C13 CF                  <1> 	iret
   800 00000C14 EBFE                <1> 	jmp $
   801                              <1> [BITS 16]
   802                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   803                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   804                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   805 00000C16 3700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   806 00000C18 00000000            <1> 	dd 0    		; filled with linear, physical address of GDT
   807                              <1> 
   808 00000C1C 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   809 00000C1E 00000000            <1> 	dd 0			; filled with linear, physical address of IDT
   810                              <1> 
   811                              <1> 
   812 00000C22 0000                <1> gdt:	dw 0			; limit 15:0
   813 00000C24 0000                <1> 	dw 0			; base 15:0
   814 00000C26 00                  <1> 	db 0			; base 23:16
   815 00000C27 00                  <1> 	db 0			; type
   816 00000C28 00                  <1> 	db 0			; limit 19:16, flags
   817 00000C29 00                  <1> 	db 0			; base 31:24
   818                              <1> ; linear data segment descriptor
   819                              <1> LINEAR_SEL	equ	$-gdt
   820 00000C2A FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   821 00000C2C 0000                <1> 	dw 0			; base for this one is always 0
   822 00000C2E 00                  <1> 	db 0
   823 00000C2F 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   824 00000C30 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   825 00000C31 00                  <1> 	db 0
   826                              <1> ; code segment descriptor
   827                              <1> SYS_CODE_SEL	equ	$-gdt
   828 00000C32 FFFF                <1> gdt2:	dw 0xFFFF
   829 00000C34 0000                <1> 	dw 0			; (base gets set above)
   830 00000C36 00                  <1> 	db 0
   831 00000C37 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   832 00000C38 CF                  <1> 	db 0xCF
   833 00000C39 00                  <1> 	db 0
   834                              <1> ; data segment descriptor
   835                              <1> SYS_DATA_SEL	equ	$-gdt
   836 00000C3A FFFF                <1> gdt3:	dw 0xFFFF
   837 00000C3C 0000                <1> 	dw 0			; (base gets set above)
   838 00000C3E 00                  <1> 	db 0
   839 00000C3F 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   840 00000C40 CF                  <1> 	db 0xCF
   841 00000C41 00                  <1> 	db 0
   842                              <1> STACK_SEL	equ	$-gdt	;;this is no longer used for various reasons
   843 00000C42 0100                <1> gdts:	dw 1
   844 00000C44 0000                <1> 	dw 0			; (base gets set above)
   845 00000C46 00                  <1> 	db 0
   846 00000C47 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   847 00000C48 C0                  <1> 	db 0xC0
   848 00000C49 00                  <1> 	db 0
   849                              <1> NEW_CODE_SEL	equ	$-gdt
   850 00000C4A FFFF                <1> gdt4:	dw 0xFFFF
   851 00000C4C 0000                <1> 	dw 0			; (base gets set above)
   852 00000C4E 00                  <1> 	db 0
   853 00000C4F 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   854 00000C50 CF                  <1> 	db 0xCF
   855 00000C51 00                  <1> 	db 0
   856                              <1> ; data segment descriptor
   857                              <1> NEW_DATA_SEL	equ	$-gdt
   858 00000C52 FFFF                <1> gdt5:	dw 0xFFFF
   859 00000C54 0000                <1> 	dw 0			; (base gets set above)
   860 00000C56 00                  <1> 	db 0
   861 00000C57 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   862 00000C58 CF                  <1> 	db 0xCF
   863 00000C59 00                  <1> 	db 0
   864                              <1> gdt_end:
   865                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   866                              <1> ;	interrupt descriptor table (IDT)
   867                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   868                              <1> ; 32 reserved interrupts:
   869                              <1> idt:	
   870                              <1> %assign i 0
   871                              <1> %rep    8
   872                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   873                              <1> %assign i i+1 
   874                              <1> %endrep
   875 00000C5A [0504]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   876                              <2> %assign i i+1
   877 00000C62 [1204]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   878                              <2> %assign i i+1
   879 00000C6A [1F04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   880                              <2> %assign i i+1
   881 00000C72 [2C04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   882                              <2> %assign i i+1
   883 00000C7A [3904]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   884                              <2> %assign i i+1
   885 00000C82 [4604]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   886                              <2> %assign i i+1
   887 00000C8A [5304]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   888                              <2> %assign i i+1
   889 00000C92 [6004]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   890                              <2> %assign i i+1
   891 00000C9A [050C]2800008E0000  <1> 		dw timerinterrupt,NEW_CODE_SEL,0x8E00,0
   892                              <1> %assign i 9
   893                              <1> %rep    6
   894                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   895                              <1> %assign i i+1 
   896                              <1> %endrep
   897 00000CA2 [7A04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   898                              <2> %assign i i+1
   899 00000CAA [8704]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   900                              <2> %assign i i+1
   901 00000CB2 [9404]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   902                              <2> %assign i i+1
   903 00000CBA [A104]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   904                              <2> %assign i i+1
   905 00000CC2 [AE04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   906                              <2> %assign i i+1
   907 00000CCA [BB04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   908                              <2> %assign i i+1
   909 00000CD2 [130C]2800008E0000  <1> 		dw handled,NEW_CODE_SEL,0x8E00,0		;;irq 7 or int 0xF is random, unusable, and usually reserved
   910                              <1> %assign i 16
   911                              <1> %rep    32
   912                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   913                              <1> %assign i i+1
   914                              <1> %endrep
   915 00000CDA [D504]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   916                              <2> %assign i i+1
   917 00000CE2 [E204]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   918                              <2> %assign i i+1
   919 00000CEA [EF04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   920                              <2> %assign i i+1
   921 00000CF2 [FC04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   922                              <2> %assign i i+1
   923 00000CFA [0905]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   924                              <2> %assign i i+1
   925 00000D02 [1605]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   926                              <2> %assign i i+1
   927 00000D0A [2305]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   928                              <2> %assign i i+1
   929 00000D12 [3005]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   930                              <2> %assign i i+1
   931 00000D1A [3D05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   932                              <2> %assign i i+1
   933 00000D22 [4A05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   934                              <2> %assign i i+1
   935 00000D2A [5705]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   936                              <2> %assign i i+1
   937 00000D32 [6405]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   938                              <2> %assign i i+1
   939 00000D3A [7105]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   940                              <2> %assign i i+1
   941 00000D42 [7E05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   942                              <2> %assign i i+1
   943 00000D4A [8B05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   944                              <2> %assign i i+1
   945 00000D52 [9805]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   946                              <2> %assign i i+1
   947 00000D5A [A505]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   948                              <2> %assign i i+1
   949 00000D62 [B205]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   950                              <2> %assign i i+1
   951 00000D6A [BF05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   952                              <2> %assign i i+1
   953 00000D72 [CC05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   954                              <2> %assign i i+1
   955 00000D7A [D905]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   956                              <2> %assign i i+1
   957 00000D82 [E605]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   958                              <2> %assign i i+1
   959 00000D8A [F305]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   960                              <2> %assign i i+1
   961 00000D92 [0006]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   962                              <2> %assign i i+1
   963 00000D9A [0D06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   964                              <2> %assign i i+1
   965 00000DA2 [1A06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   966                              <2> %assign i i+1
   967 00000DAA [2706]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   968                              <2> %assign i i+1
   969 00000DB2 [3406]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   970                              <2> %assign i i+1
   971 00000DBA [4106]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   972                              <2> %assign i i+1
   973 00000DC2 [4E06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   974                              <2> %assign i i+1
   975 00000DCA [5B06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   976                              <2> %assign i i+1
   977 00000DD2 [6806]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   978                              <2> %assign i i+1
   979                              <1> 		
   980                              <1> ;;INT 30h for os use and 3rd party use:
   981 00000DDA [E20D]1000008E0000  <1> 	dw newints,SYS_CODE_SEL,0x8E00,0
   982                              <1> idt_end:
   983                              <1> [BITS 32]
   984                                  [BITS 32]
   985                                      %include 'source/ints.asm'
   986                              <1> newints:	;;for great justice
   987 00000DE2 FA                  <1> 	cli				;;stop other interrupts
   988 00000DE3 80FC00              <1> 	cmp ah, 0		;;originally 0
   989 00000DE6 0F8452000000        <1> 	je near intx0   ;;0=kills app
   990 00000DEC 80FC01              <1> 	cmp ah, 1		;;originally 1
   991 00000DEF 0F844E000000        <1> 	je near intx1   ;;3=print string
   992 00000DF5 80FC02              <1> 	cmp ah, 2		;;originally 2
   993 00000DF8 0F844F000000        <1> 	je near intx2	;;4=read string
   994 00000DFE 80FC03              <1> 	cmp ah, 3		;;originally 3
   995 00000E01 0F8450000000        <1> 	je near intx3	;;6=clear screen
   996 00000E07 80FC04              <1> 	cmp ah, 4		;;originally 4
   997 00000E0A 0F8451000000        <1> 	je near intx4	;;5=read and print string
   998 00000E10 80FC05              <1> 	cmp ah, 5		;;originally 5		
   999 00000E13 0F8452000000        <1> 	je near intx5	;;2=get char
  1000 00000E19 80FC06              <1> 	cmp ah, 6		;;originally 6
  1001 00000E1C 0F8453000000        <1> 	je near intx6	;;1=print char
  1002 00000E22 80FC07              <1> 	cmp ah, 7
  1003 00000E25 0F8454000000        <1> 	je near intx7	;;read file
  1004 00000E2B 80FC09              <1> 	cmp ah, 9
  1005 00000E2E 0F8455000000        <1> 	je near intx9	;;convert number
  1006 00000E34 80FC0A              <1> 	cmp ah, 10
  1007 00000E37 0F8464000000        <1> 	je near intx10	;;create thread
  1008 00000E3D C3                  <1> 	ret
  1009                              <1> 	
  1010                              <1> ;;the jmp timerinterrupt's ensure that task switches occur
  1011                              <1> 	
  1012                              <1> intx0:
  1013 00000E3E E9E6070000          <1> 	jmp nwcmd
  1014                              <1> intx1:
  1015 00000E43 E888020000          <1> 	call int303
  1016 00000E48 E9B8FDFFFF          <1> 	jmp timerinterrupt
  1017                              <1> intx2:
  1018 00000E4D E8A2020000          <1> 	call int304
  1019 00000E52 E9AEFDFFFF          <1> 	jmp timerinterrupt
  1020                              <1> intx3:
  1021 00000E57 E85D050000          <1> 	call int306
  1022 00000E5C E9A4FDFFFF          <1> 	jmp timerinterrupt
  1023                              <1> intx4:
  1024 00000E61 E8BB020000          <1> 	call int305
  1025 00000E66 E99AFDFFFF          <1> 	jmp timerinterrupt
  1026                              <1> intx5:
  1027 00000E6B E812020000          <1> 	call int302
  1028 00000E70 E990FDFFFF          <1> 	jmp timerinterrupt
  1029                              <1> intx6:
  1030 00000E75 E837000000          <1> 	call int301
  1031 00000E7A E986FDFFFF          <1> 	jmp timerinterrupt
  1032                              <1> intx7:
  1033 00000E7F E8CE400000          <1> 	call loadfile
  1034 00000E84 E97CFDFFFF          <1> 	jmp timerinterrupt
  1035                              <1> intx9:
  1036 00000E89 3C00                <1> 	cmp al, 0
  1037 00000E8B 750A                <1> 	jne intx9B
  1038 00000E8D E8290D0000          <1> 	call showdec
  1039 00000E92 E96EFDFFFF          <1> 	jmp timerinterrupt
  1040                              <1> intx9B:
  1041 00000E97 E87A0C0000          <1> 	call showhex
  1042 00000E9C E964FDFFFF          <1> 	jmp timerinterrupt
  1043                              <1> intx10:
  1044 00000EA1 E8F6460000          <1> 	call threadfork
  1045 00000EA6 CF                  <1> 	iret
  1046                              <1> 	
  1047 00000EA7 0000                <1> linebeginpos dw 0
  1048 00000EA9 0000                <1> videobufpos: dw 0
  1049 00000EAB 0000                <1> charpos db 0,0
  1050 00000EAD A01E                <1> charxy db 160,30
  1051 00000EAF 0000                <1> charbuf dw 0
  1052                              <1> 	
  1053                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
  1054 00000EB1 E808000000          <1> 	call int301prnt
  1055 00000EB6 E84E050000          <1> 	call termcopy
  1056 00000EBB C3                  <1> 	ret
  1057 00000EBC 00                  <1> termguion db 0
  1058 00000EBD 00                  <1> termcopyon db 0
  1059                              <1> int301prnt:
  1060 00000EBE 88DC                <1> 	mov ah, bl
  1061 00000EC0 66A3[AF0E0000]      <1> 	mov [charbuf], ax
  1062 00000EC6 BB00000000          <1> 	mov ebx, 0
  1063 00000ECB 668B1D[A90E0000]    <1> 	mov bx, [videobufpos]
  1064 00000ED2 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1065 00000ED7 01DF                <1> 	add edi, ebx
  1066 00000ED9 66A1[07140000]      <1> 	mov ax, [removedvideo]
  1067 00000EDF 668907              <1> 	mov [edi], ax
  1068 00000EE2 66A1[AF0E0000]      <1> 	mov ax, [charbuf]
  1069 00000EE8 BA00000000          <1> 	mov edx, 0
  1070 00000EED 668B15[AB0E0000]    <1> 	mov dx, [charpos]
  1071 00000EF4 B900000000          <1> 	mov ecx, 0
  1072 00000EF9 668B0D[AD0E0000]    <1> 	mov cx, [charxy]
  1073 00000F00 3C09                <1> 	cmp al, 9
  1074 00000F02 0F8464000000        <1> 	je near int301tab
  1075 00000F08 3C0D                <1> 	cmp al, 13
  1076 00000F0A 0F8476000000        <1> 	je near int301cr
  1077 00000F10 3C0A                <1> 	cmp al, 10
  1078 00000F12 0F84A4000000        <1> 	je near int301nl
  1079 00000F18 3C08                <1> 	cmp al, 8
  1080 00000F1A 0F847D000000        <1> 	je near int301bs
  1081 00000F20 3CFF                <1> 	cmp al, 255		;;null character
  1082 00000F22 0F841C000000        <1> 	je near donescr
  1083 00000F28 668907              <1> 	mov [edi], ax
  1084 00000F2B 81C702000000        <1> 	add edi, 2
  1085 00000F31 80C202              <1> 	add dl, 2
  1086                              <1> donecrnl:
  1087 00000F34 38CA                <1> 	cmp dl, cl
  1088 00000F36 0F83B1000000        <1> 	jae near int301eol
  1089                              <1> doneeol:
  1090 00000F3C 38EE                <1> 	cmp dh, ch
  1091 00000F3E 0F83C7000000        <1> 	jae near int301scr	
  1092                              <1> donescr:
  1093 00000F44 89FB                <1> 	mov ebx, edi
  1094 00000F46 668B07              <1> 	mov ax, [edi]
  1095 00000F49 66A3[07140000]      <1> 	mov [removedvideo], ax
  1096 00000F4F 81EB[8F1C0000]      <1> 	sub ebx, videobuf2
  1097 00000F55 66891D[A90E0000]    <1> 	mov [videobufpos], bx
  1098 00000F5C 668915[AB0E0000]    <1> 	mov [charpos], dx
  1099 00000F63 66A1[AF0E0000]      <1> 	mov ax, [charbuf]
  1100 00000F69 88E3                <1> 	mov bl, ah
  1101 00000F6B C3                  <1> 	ret
  1102                              <1> 	
  1103                              <1> 	int301tab:
  1104 00000F6C C1EF04              <1> 		shr edi, 4
  1105 00000F6F C1E704              <1> 		shl edi, 4
  1106 00000F72 81C710000000        <1> 		add edi, 16
  1107 00000F78 C0EA04              <1> 		shr dl, 4
  1108 00000F7B C0E204              <1> 		shl dl, 4
  1109 00000F7E 80C210              <1> 		add dl, 16
  1110 00000F81 4F                  <1> 		dec edi
  1111 00000F82 FECA                <1> 		dec dl
  1112 00000F84 EBAE                <1> 		jmp donecrnl
  1113                              <1> 	
  1114                              <1> 	int301cr:
  1115 00000F86 B200                <1> 		mov dl, 0
  1116 00000F88 BB00000000          <1> 		mov ebx, 0
  1117 00000F8D BF[8F1C0000]        <1> 		mov edi, videobuf2
  1118 00000F92 668B1D[A70E0000]    <1> 		mov bx, [linebeginpos]
  1119 00000F99 01DF                <1> 		add edi, ebx
  1120 00000F9B EB97                <1> 		jmp donecrnl
  1121                              <1> 			
  1122                              <1> 	int301bs:
  1123 00000F9D 80FA00              <1> 		cmp dl, 0
  1124 00000FA0 740F                <1> 		je int301backline
  1125                              <1> 	int301nobmr:
  1126 00000FA2 80EA02              <1> 		sub dl, 2
  1127 00000FA5 66B80000            <1> 		mov ax, 0
  1128 00000FA9 81EF02000000        <1> 		sub edi, 2
  1129 00000FAF EB83                <1> 		jmp donecrnl
  1130                              <1> 	int301backline:
  1131 00000FB1 88CA                <1> 		mov dl, cl
  1132 00000FB3 80FE00              <1> 		cmp dh, 0
  1133 00000FB6 74EA                <1> 		je int301nobmr
  1134 00000FB8 FECE                <1> 		dec dh
  1135 00000FBA EBE6                <1> 		jmp int301nobmr
  1136                              <1> 		
  1137                              <1> 	int301nl:
  1138 00000FBC FEC6                <1> 		inc dh
  1139 00000FBE BB00000000          <1> 		mov ebx, 0
  1140 00000FC3 88CB                <1> 		mov bl, cl
  1141 00000FC5 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1142 00000FCA 66031D[A90E0000]    <1> 		add bx, [videobufpos]
  1143 00000FD1 01DF                <1> 		add edi, ebx
  1144 00000FD3 BB00000000          <1> 		mov ebx, 0
  1145 00000FD8 88CB                <1> 		mov bl, cl
  1146 00000FDA 66031D[A70E0000]    <1> 		add bx, [linebeginpos]
  1147 00000FE1 66891D[A70E0000]    <1> 		mov [linebeginpos], bx
  1148 00000FE8 E947FFFFFF          <1> 		jmp donecrnl
  1149                              <1> 		
  1150                              <1> 	int301eol:
  1151 00000FED B200                <1> 		mov dl, 0
  1152 00000FEF FEC6                <1> 		inc dh
  1153 00000FF1 BB00000000          <1> 		mov ebx, 0
  1154 00000FF6 88CB                <1> 		mov bl, cl
  1155 00000FF8 66031D[A70E0000]    <1> 		add bx, [linebeginpos]
  1156 00000FFF 66891D[A70E0000]    <1> 		mov [linebeginpos], bx
  1157 00001006 E931FFFFFF          <1> 		jmp doneeol
  1158                              <1> 	int301scr:
  1159 0000100B FECE                <1> 		dec dh
  1160 0000100D BF[8F1C0000]        <1> 		mov edi, videobuf2
  1161 00001012 BB00000000          <1> 		mov ebx, 0
  1162 00001017 88CB                <1> 		mov bl, cl
  1163 00001019 01FB                <1> 		add ebx, edi
  1164                              <1> 	intscrollloop:
  1165 0000101B 668B03              <1> 		mov ax, [ebx]
  1166 0000101E 668907              <1> 		mov [edi], ax
  1167 00001021 81C702000000        <1> 		add edi, 2
  1168 00001027 81C302000000        <1> 		add ebx, 2
  1169 0000102D 80E902              <1> 		sub cl, 2
  1170 00001030 80F900              <1> 		cmp cl, 0
  1171 00001033 75E6                <1> 		jne intscrollloop
  1172 00001035 8A0D[AD0E0000]      <1> 		mov cl, [charxy]
  1173 0000103B FECD                <1> 		dec ch
  1174 0000103D 80FD01              <1> 		cmp ch, 1
  1175 00001040 77D9                <1> 		ja intscrollloop
  1176 00001042 66B80000            <1> 		mov ax, 0
  1177 00001046 81EF[8F1C0000]      <1> 		sub edi, videobuf2
  1178 0000104C 66893D[A70E0000]    <1> 		mov [linebeginpos], di
  1179 00001053 81C7[8F1C0000]      <1> 		add edi, videobuf2
  1180 00001059 89FB                <1> 		mov ebx, edi
  1181                              <1> 	intloopclear:
  1182 0000105B 668903              <1> 		mov [ebx], ax
  1183 0000105E 81C302000000        <1> 		add ebx, 2
  1184 00001064 80E902              <1> 		sub cl, 2
  1185 00001067 80F900              <1> 		cmp cl, 0
  1186 0000106A 75EF                <1> 		jne intloopclear
  1187 0000106C FECD                <1> 		dec ch
  1188 0000106E 80FD00              <1> 		cmp ch, 0
  1189 00001071 75E8                <1> 		jne intloopclear
  1190 00001073 668B0D[AD0E0000]    <1> 		mov cx, [charxy]
  1191 0000107A E9C5FEFFFF          <1> 		jmp donescr
  1192                              <1> 		
  1193                              <1> 		
  1194 0000107F 0000                <1> lastkey db 0,0
  1195 00001081 00                  <1> trans db 0
  1196                              <1> 
  1197                              <1> 	int302:		;;get char, if al is 0, wait for key
  1198 00001082 A2[81100000]        <1> 		mov [trans], al
  1199                              <1> 	transcheck:
  1200 00001087 E8681D0000          <1> 		call guistartin
  1201 0000108C 8A3D[81100000]      <1> 		mov bh, [trans]
  1202 00001092 66A1[7F100000]      <1> 		mov ax, [lastkey]
  1203 00001098 80FC1C              <1> 		cmp ah, 1Ch
  1204 0000109B 7419                <1> 		je int302enter
  1205 0000109D 803D[CB2D0000]E0    <1> 		cmp byte [specialkey], 0xE0
  1206 000010A4 7504                <1> 		jne nospecialtrans
  1207 000010A6 88C3                <1> 		mov bl, al
  1208 000010A8 B000                <1> 		mov al, 0
  1209                              <1> 	nospecialtrans:
  1210 000010AA 08C7                <1> 		or bh, al
  1211 000010AC 80FF00              <1> 		cmp bh, 0
  1212 000010AF 74D6                <1> 		je transcheck
  1213 000010B1 E902000000          <1> 		jmp int302end
  1214                              <1> 	int302enter:
  1215 000010B6 B00D                <1> 		mov al, 13
  1216                              <1> 	int302end:
  1217 000010B8 C3                  <1> 		ret
  1218                              <1> 	
  1219 000010B9 00                  <1> endkey303 db 0
  1220                              <1> 	printquiet:
  1221 000010BA 66B80000            <1> 		mov ax, 0
  1222 000010BE 66BB0700            <1> 		mov bx, 7
  1223 000010C2 E819000000          <1> 		call int303b
  1224 000010C7 C3                  <1> 		ret
  1225                              <1>     print:
  1226 000010C8 66B80000            <1> 		mov ax, 0
  1227 000010CC 66BB0700            <1> 		mov bx, 7
  1228                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  1229 000010D0 A2[B9100000]        <1> 		mov [endkey303], al
  1230 000010D5 E806000000          <1> 		call int303b
  1231 000010DA E82A030000          <1> 		call termcopy
  1232 000010DF C3                  <1> 		ret
  1233                              <1> 	int303b:
  1234 000010E0 8A06                <1> 		mov al, [esi]
  1235 000010E2 3A05[B9100000]      <1> 		cmp al, [endkey303]
  1236 000010E8 7408                <1> 		je doneint303
  1237 000010EA E8CFFDFFFF          <1> 		call int301prnt
  1238 000010EF 46                  <1> 		inc esi
  1239 000010F0 EBEE                <1> 		jmp int303b
  1240                              <1> 	doneint303:
  1241 000010F2 C3                  <1> 		ret
  1242                              <1> 		
  1243 000010F3 00                  <1> endkey304 db 0
  1244                              <1> 	int304:	;;get line, al=last key, esi = buffer
  1245 000010F4 A2[F3100000]        <1> 		mov [endkey304], al
  1246                              <1> 	int304b:
  1247 000010F9 56                  <1> 		push esi
  1248 000010FA B000                <1> 		mov al, 0
  1249 000010FC E881FFFFFF          <1> 		call int302
  1250 00001101 5E                  <1> 		pop esi
  1251 00001102 8806                <1> 		mov [esi], al
  1252 00001104 46                  <1> 		inc esi
  1253 00001105 3A05[F3100000]      <1> 		cmp al, [endkey304]
  1254 0000110B 75EC                <1> 		jne int304b
  1255 0000110D 4E                  <1> 		dec esi
  1256 0000110E C60600              <1> 		mov byte [esi], 0
  1257 00001111 C3                  <1> 	ret
  1258                              <1> 	
  1259 00001112 00                  <1> endkey305 db 0
  1260 00001113 00                  <1> modkey305 db 0
  1261 00001114 00000000            <1> firstesi305 dd 0
  1262 00001118 00                  <1> commandedit db 0
  1263 00001119 00                  <1> txtmask db 0
  1264 0000111A 00000000            <1> buftxtloc dd 0
  1265 0000111E 082000              <1> backcursor db 8," ",0
  1266                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
  1267 00001121 8935[1A110000]      <1> 		mov [buftxtloc], esi
  1268 00001127 A2[12110000]        <1> 		mov [endkey305], al
  1269 0000112C 881D[13110000]      <1> 		mov [modkey305], bl
  1270 00001132 8935[14110000]      <1> 		mov [firstesi305], esi
  1271                              <1> 	int305b:
  1272 00001138 56                  <1> 		push esi
  1273 00001139 B001                <1> 		mov al, 1
  1274 0000113B E842FFFFFF          <1> 		call int302
  1275 00001140 5E                  <1> 		pop esi
  1276 00001141 80FC48              <1> 		cmp ah, 0x48
  1277 00001144 0F845E010000        <1> 		je near int305up
  1278 0000114A 80FC50              <1> 		cmp ah, 0x50
  1279 0000114D 0F8438010000        <1> 		je near int305down
  1280 00001153 80FC4D              <1> 		cmp ah, 0x4D
  1281 00001156 0F84ED000000        <1> 		je near int305right
  1282 0000115C 80FC4B              <1> 		cmp ah, 0x4B
  1283 0000115F 0F84AB000000        <1> 		je near int305left
  1284 00001165 3C08                <1> 		cmp al, 8
  1285 00001167 0F842E020000        <1> 		je near int305bscheck
  1286 0000116D 3C00                <1> 		cmp al, 0
  1287 0000116F 74C7                <1> 		je int305b
  1288 00001171 8806                <1> 		mov [esi], al
  1289 00001173 46                  <1> 		inc esi
  1290                              <1> 	bscheckequal:
  1291 00001174 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1292 0000117A 8A3D[19110000]      <1> 		mov bh, [txtmask]
  1293 00001180 80FF00              <1> 		cmp bh, 0
  1294 00001183 7402                <1> 		je nomasktxt
  1295 00001185 88F8                <1> 		mov al, bh
  1296                              <1> 	nomasktxt:
  1297 00001187 E825FDFFFF          <1> 		call int301
  1298 0000118C 56                  <1> 		push esi
  1299 0000118D 66A3[0E120000]      <1> 		mov [int305axcache], ax
  1300 00001193 8A25[12110000]      <1> 		mov ah, [endkey305]
  1301 00001199 38E0                <1> 		cmp al, ah
  1302 0000119B 7429                <1> 		je nobackprintbuftxt2
  1303 0000119D BE[701A0000]        <1> 		mov esi, buftxt2
  1304 000011A2 E813FFFFFF          <1> 		call printquiet
  1305 000011A7 B020                <1> 		mov al, " "
  1306 000011A9 E810FDFFFF          <1> 		call int301prnt
  1307 000011AE B008                <1> 		mov al, 8
  1308 000011B0 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1309 000011B6 740E                <1> 		je nobackprintbuftxt2
  1310                              <1> 	backprintbuftxt2:
  1311 000011B8 E801FDFFFF          <1> 		call int301prnt
  1312 000011BD 4E                  <1> 		dec esi
  1313 000011BE 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1314 000011C4 77F2                <1> 		ja backprintbuftxt2
  1315                              <1> 	nobackprintbuftxt2:
  1316 000011C6 E8E6FCFFFF          <1> 		call int301
  1317 000011CB 5E                  <1> 		pop esi
  1318 000011CC 66A1[0E120000]      <1> 		mov ax, [int305axcache]
  1319 000011D2 8A25[12110000]      <1> 		mov ah, [endkey305]
  1320 000011D8 38E0                <1> 		cmp al, ah
  1321 000011DA 0F8558FFFFFF        <1> 		jne int305b
  1322 000011E0 4E                  <1> 		dec esi
  1323 000011E1 BF[701A0000]        <1> 		mov edi, buftxt2
  1324                              <1> 	copylaterstuff:
  1325 000011E6 8A07                <1> 		mov al, [edi]
  1326 000011E8 3C00                <1> 		cmp al, 0
  1327 000011EA 7406                <1> 		je nocopylaterstuff
  1328 000011EC 8806                <1> 		mov [esi], al
  1329 000011EE 47                  <1> 		inc edi
  1330 000011EF 46                  <1> 		inc esi
  1331 000011F0 EBF4                <1> 		jmp copylaterstuff
  1332                              <1> 	nocopylaterstuff:
  1333 000011F2 C60600              <1> 		mov byte [esi], 0
  1334 000011F5 E801000000          <1> 		call clearbuftxt2
  1335 000011FA C3                  <1> 		ret
  1336                              <1> 	
  1337                              <1> 	clearbuftxt2:
  1338 000011FB B000                <1> 		mov al, 0
  1339 000011FD BF[701A0000]        <1> 		mov edi, buftxt2
  1340                              <1> 	clearbuftxt2lp:
  1341 00001202 8807                <1> 		mov [edi], al
  1342 00001204 47                  <1> 		inc edi
  1343 00001205 81FF[7A1B0000]      <1> 		cmp edi, buftxt
  1344 0000120B 75F5                <1> 		jne clearbuftxt2lp
  1345 0000120D C3                  <1> 		ret
  1346                              <1> 		
  1347 0000120E 0000                <1> 	int305axcache dw 0
  1348                              <1> 		
  1349                              <1> 	int305left:
  1350 00001210 3B35[1A110000]      <1> 		cmp esi, [buftxtloc]
  1351 00001216 0F841CFFFFFF        <1> 		je near int305b
  1352 0000121C BF[701A0000]        <1> 		mov edi, buftxt2
  1353 00001221 8A07                <1> 		mov al, [edi]
  1354                              <1> 	shiftbuftxt2:
  1355 00001223 3C00                <1> 		cmp al, 0
  1356 00001225 7409                <1> 		je noshiftbuftxt2
  1357 00001227 47                  <1> 		inc edi
  1358 00001228 8A27                <1> 		mov ah, [edi]
  1359 0000122A 8807                <1> 		mov [edi], al
  1360 0000122C 88E0                <1> 		mov al, ah
  1361 0000122E EBF3                <1> 		jmp shiftbuftxt2
  1362                              <1> 	noshiftbuftxt2:
  1363 00001230 BF[701A0000]        <1> 		mov edi, buftxt2
  1364 00001235 4E                  <1> 		dec esi
  1365 00001236 8A06                <1> 		mov al, [esi]
  1366 00001238 8807                <1> 		mov [edi], al
  1367 0000123A C60600              <1> 		mov byte [esi], 0
  1368 0000123D B008                <1> 		mov al, 8
  1369 0000123F E86DFCFFFF          <1> 		call int301
  1370 00001244 E9EFFEFFFF          <1> 		jmp int305b
  1371                              <1> 		
  1372                              <1> 	int305right:
  1373 00001249 BF[701A0000]        <1> 		mov edi, buftxt2
  1374 0000124E 8A07                <1> 		mov al, [edi]
  1375 00001250 3C00                <1> 		cmp al, 0
  1376 00001252 0F84E0FEFFFF        <1> 		je near int305b
  1377 00001258 8806                <1> 		mov [esi], al
  1378                              <1> 	shiftbuftxt2lft:
  1379 0000125A 3C00                <1> 		cmp al, 0
  1380 0000125C 7408                <1> 		je noshiftbuftxt2lft
  1381 0000125E 47                  <1> 		inc edi
  1382 0000125F 8A07                <1> 		mov al, [edi]
  1383 00001261 8847FF              <1> 		mov [edi - 1], al
  1384 00001264 EBF4                <1> 		jmp shiftbuftxt2lft
  1385                              <1> 	noshiftbuftxt2lft:
  1386 00001266 8A06                <1> 		mov al, [esi]
  1387 00001268 46                  <1> 		inc esi
  1388 00001269 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1389 0000126F E83DFCFFFF          <1> 		call int301
  1390 00001274 E9BFFEFFFF          <1> 		jmp int305b
  1391                              <1> 		
  1392                              <1> 	int305downbck:
  1393 00001279 FECC                <1> 		dec ah
  1394 0000127B 8825[18110000]      <1> 		mov [commandedit], ah
  1395 00001281 E83A000000          <1> 		call int305bckspc
  1396 00001286 E9ADFEFFFF          <1> 		jmp int305b
  1397                              <1> 	
  1398                              <1> 	int305down:
  1399 0000128B 8A25[18110000]      <1> 		mov ah, [commandedit]
  1400 00001291 80FC01              <1> 		cmp ah, 1
  1401 00001294 0F869EFEFFFF        <1> 		jbe near int305b
  1402 0000129A 80FC02              <1> 		cmp ah, 2
  1403 0000129D 74DA                <1> 		je int305downbck
  1404 0000129F 80EC02              <1> 		sub ah, 2
  1405 000012A2 8825[18110000]      <1> 		mov [commandedit], ah
  1406                              <1> 		
  1407                              <1> 	int305up:
  1408                              <1> 		;cmp bl, 0xE0
  1409                              <1> 		;jne int305b
  1410 000012A8 B000                <1> 		mov al, 0
  1411 000012AA 3805[18110000]      <1> 		cmp [commandedit], al
  1412 000012B0 0F8482FEFFFF        <1> 		je near int305b
  1413 000012B6 E805000000          <1> 		call int305bckspc
  1414 000012BB E93C000000          <1> 		jmp getcurrentcommandstr
  1415                              <1> 	int305bckspc:
  1416 000012C0 3B35[1A110000]      <1> 		cmp esi, [buftxtloc]
  1417 000012C6 7426                <1> 		je noint305upbck
  1418                              <1> 	int305upbckspclp:
  1419 000012C8 B008                <1> 		mov al, 8
  1420 000012CA 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1421 000012D0 E8E9FBFFFF          <1> 		call int301prnt
  1422 000012D5 B020                <1> 		mov al, " "
  1423 000012D7 E8E2FBFFFF          <1> 		call int301prnt
  1424 000012DC B008                <1> 		mov al, 8
  1425 000012DE E8CEFBFFFF          <1> 		call int301
  1426 000012E3 4E                  <1> 		dec esi
  1427 000012E4 3B35[1A110000]      <1> 		cmp esi, [buftxtloc]
  1428 000012EA 7402                <1> 		je noint305upbck
  1429 000012EC EBDA                <1> 		jmp int305upbckspclp
  1430                              <1> 	noint305upbck:
  1431 000012EE 8B3D[1B300000]      <1> 		mov edi, [currentcommandpos]
  1432 000012F4 81C7[1F300000]      <1> 		add edi, commandbuf
  1433 000012FA 4F                  <1> 		dec edi
  1434 000012FB C3                  <1> 		ret
  1435                              <1> 	getcurrentcommandstr:
  1436 000012FC 8A25[18110000]      <1> 		mov ah, [commandedit]
  1437 00001302 FE05[18110000]      <1> 		inc byte [commandedit]
  1438                              <1> 	getccmdlp:
  1439 00001308 4F                  <1> 		dec edi
  1440 00001309 8A07                <1> 		mov al, [edi]
  1441 0000130B 81FF[1F300000]      <1> 		cmp edi, commandbuf
  1442 00001311 7231                <1> 		jb getcmdresetcommandbuf
  1443 00001313 81EF[1F300000]      <1> 		sub edi, commandbuf
  1444 00001319 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1445 0000131F 0F8413FEFFFF        <1> 		je near int305b
  1446 00001325 81C7[1F300000]      <1> 		add edi, commandbuf
  1447 0000132B 3C00                <1> 		cmp al, 0
  1448 0000132D 75D9                <1> 		jne getccmdlp
  1449 0000132F FECC                <1> 		dec ah
  1450 00001331 80FC00              <1> 		cmp ah, 0
  1451 00001334 77D2                <1> 		ja getccmdlp
  1452 00001336 47                  <1> 		inc edi
  1453 00001337 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1454 0000133D 770D                <1> 		ja fixcmdbufb4moreint305
  1455 0000133F E915000000          <1> 		jmp moreint305up
  1456                              <1> 	getcmdresetcommandbuf:
  1457 00001344 BF[1F340000]        <1> 		mov edi, commandbufend
  1458 00001349 47                  <1> 		inc edi
  1459 0000134A EBBC                <1> 		jmp getccmdlp
  1460                              <1> 	fixcmdbufb4moreint305:
  1461 0000134C 4F                  <1> 		dec edi
  1462 0000134D 81EF[1F340000]      <1> 		sub edi, commandbufend
  1463 00001353 81C7[1F300000]      <1> 		add edi, commandbuf
  1464                              <1> 	moreint305up:
  1465 00001359 8A07                <1> 		mov al, [edi]
  1466 0000135B 47                  <1> 		inc edi
  1467 0000135C 81EF[1F300000]      <1> 		sub edi, commandbuf
  1468 00001362 3C00                <1> 		cmp al, 0
  1469 00001364 0F84CEFDFFFF        <1> 		je near int305b
  1470 0000136A 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1471 00001370 0F83C2FDFFFF        <1> 		jae near int305b
  1472 00001376 81C7[1F300000]      <1> 		add edi, commandbuf
  1473 0000137C 8806                <1> 		mov [esi], al
  1474 0000137E 46                  <1> 		inc esi
  1475 0000137F 57                  <1> 		push edi
  1476 00001380 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1477 00001386 E826FBFFFF          <1> 		call int301
  1478 0000138B 5F                  <1> 		pop edi
  1479 0000138C 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1480 00001392 76C5                <1> 		jbe moreint305up
  1481 00001394 BF[1F300000]        <1> 		mov edi, commandbuf
  1482 00001399 EBBE                <1> 		jmp moreint305up
  1483                              <1> 	int305bscheck:
  1484 0000139B 3B35[14110000]      <1> 		cmp esi, [firstesi305]
  1485 000013A1 7705                <1> 		ja goodbscheck
  1486 000013A3 E990FDFFFF          <1> 		jmp int305b
  1487                              <1> 	goodbscheck:
  1488 000013A8 4E                  <1> 		dec esi
  1489 000013A9 C60600              <1> 		mov byte [esi], 0
  1490 000013AC 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1491 000013B2 B008                <1> 		mov al, 8
  1492 000013B4 E9BBFDFFFF          <1> 		jmp bscheckequal
  1493                              <1> 	
  1494                              <1> 		
  1495                              <1> 	clear:		
  1496                              <1> 	
  1497                              <1> 	int306:	;;clear screen
  1498 000013B9 668B0D[AD0E0000]    <1> 		mov cx, [charxy]
  1499 000013C0 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1500 000013C5 66B80000            <1> 		mov ax, 0
  1501 000013C9 66A3[A70E0000]      <1> 		mov [linebeginpos], ax
  1502 000013CF 66A3[A90E0000]      <1> 		mov [videobufpos], ax
  1503 000013D5 66BA0000            <1> 		mov dx, 0
  1504 000013D9 66A3[AB0E0000]      <1> 		mov [charpos], ax
  1505                              <1> 	int306b:
  1506 000013DF 668907              <1> 		mov [edi], ax
  1507 000013E2 81C702000000        <1> 		add edi, 2
  1508 000013E8 80E902              <1> 		sub cl, 2
  1509 000013EB 80F900              <1> 		cmp cl, 0
  1510 000013EE 75EF                <1> 		jne int306b
  1511 000013F0 8A0D[AD0E0000]      <1> 		mov cl, [charxy]
  1512 000013F6 FECD                <1> 		dec ch
  1513 000013F8 80FD00              <1> 		cmp ch, 0
  1514 000013FB 75E2                <1> 		jne int306b
  1515 000013FD E807000000          <1> 		call termcopy
  1516 00001402 C3                  <1> 		ret
  1517                              <1> 		
  1518 00001403 00000000            <1> 	termcursorpos dd 0
  1519 00001407 0000                <1> 	removedvideo dw 0
  1520                              <1> termcopy:	
  1521 00001409 60                  <1> 	pusha
  1522 0000140A BF[8F1C0000]        <1> 	mov edi, videobuf2
  1523 0000140F BB00000000          <1> 	mov ebx, 0
  1524 00001414 668B1D[A90E0000]    <1> 	mov bx, [videobufpos]
  1525 0000141B 01DF                <1> 	add edi, ebx
  1526 0000141D 893D[03140000]      <1> 	mov [termcursorpos], edi
  1527 00001423 E8C0000000          <1> 	call switchtermcursor
  1528 00001428 C605[38350000]00    <1> 	mov byte [mouseselecton], 0
  1529 0000142F C605[BD0E0000]01    <1> 	mov byte [termcopyon], 1
  1530 00001436 803D[39350000]00    <1> 	cmp byte [guion], 0
  1531 0000143D 0F8412000000        <1> 	je near nowincopy
  1532 00001443 803D[BC0E0000]01    <1> 	cmp byte [termguion], 1
  1533 0000144A 0F84E82C0000        <1> 	je near windowvideocopy
  1534 00001450 E98C000000          <1> 	jmp nocopytermatall
  1535                              <1> nowincopy:
  1536 00001455 BE00000A00          <1> 	mov esi, 0xA0000
  1537 0000145A A1[FD030000]        <1> 	mov eax, [basecache]
  1538 0000145F C1E004              <1> 	shl eax, 4
  1539 00001462 29C6                <1> 	sub esi, eax
  1540 00001464 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1541 00001469 B900000000          <1> 	mov ecx, 0
  1542 0000146E 668B0D[AD0E0000]    <1> 	mov cx, [charxy]
  1543                              <1> nowincopy2:
  1544 00001475 BB[93580000]        <1> 	mov ebx, fonts
  1545 0000147A B800000000          <1> 	mov eax, 0
  1546 0000147F 8A07                <1> 	mov al, [edi]
  1547 00001481 C1E004              <1> 	shl eax, 4
  1548 00001484 01C3                <1> 	add ebx, eax
  1549 00001486 47                  <1> 	inc edi
  1550 00001487 8A27                <1> 	mov ah, [edi]
  1551 00001489 BA00000000          <1> 	mov edx, 0
  1552 0000148E 8A15[AD0E0000]      <1> 	mov dl, [charxy]
  1553 00001494 D1EA                <1> 	shr edx, 1
  1554 00001496 C1C110              <1> 	rol ecx, 16
  1555 00001499 B110                <1> 	mov cl, 16
  1556                              <1> nowinfont:
  1557 0000149B 8A03                <1> 	mov al, [ebx]
  1558 0000149D D0C8                <1> 	ror al, 1
  1559 0000149F 80FC07              <1> 	cmp ah, 7
  1560 000014A2 7602                <1> 	jbe notnotfont
  1561 000014A4 F6D0                <1> 	not al
  1562                              <1> notnotfont:
  1563 000014A6 8806                <1> 	mov [esi], al
  1564 000014A8 01D6                <1> 	add esi, edx
  1565 000014AA 43                  <1> 	inc ebx
  1566 000014AB FEC9                <1> 	dec cl
  1567 000014AD 80F900              <1> 	cmp cl, 0
  1568 000014B0 75E9                <1> 	jne nowinfont
  1569 000014B2 C1E204              <1> 	shl edx, 4
  1570 000014B5 29D6                <1> 	sub esi, edx
  1571 000014B7 C1C110              <1> 	rol ecx, 16
  1572                              <1> nopresentwinfont:
  1573 000014BA 47                  <1> 	inc edi
  1574 000014BB 46                  <1> 	inc esi
  1575 000014BC 80E902              <1> 	sub cl, 2
  1576 000014BF 80F900              <1> 	cmp cl, 0
  1577 000014C2 75B1                <1> 	jne nowincopy2
  1578 000014C4 8A0D[AD0E0000]      <1> 	mov cl, [charxy]
  1579 000014CA BA00000000          <1> 	mov edx, 0
  1580 000014CF 88CA                <1> 	mov dl, cl
  1581 000014D1 D1EA                <1> 	shr edx, 1
  1582 000014D3 29D6                <1> 	sub esi, edx
  1583 000014D5 C1E204              <1> 	shl edx, 4
  1584 000014D8 01D6                <1> 	add esi, edx
  1585 000014DA FECD                <1> 	dec ch
  1586 000014DC 80FD00              <1> 	cmp ch, 0
  1587 000014DF 7594                <1> 	jne nowincopy2
  1588                              <1> nocopytermatall:
  1589 000014E1 E802000000          <1> 	call switchtermcursor
  1590 000014E6 61                  <1> 	popa
  1591 000014E7 C3                  <1> 	ret
  1592                              <1> 	
  1593                              <1> switchtermcursor:
  1594 000014E8 8B3D[03140000]      <1> 	mov edi, [termcursorpos]
  1595 000014EE 8A4701              <1> 	mov al, [edi + 1]
  1596 000014F1 8A27                <1> 	mov ah, [edi]
  1597 000014F3 3C07                <1> 	cmp al, 7
  1598 000014F5 7607                <1> 	jbe movlargecursorterm
  1599 000014F7 B007                <1> 	mov al, 7
  1600 000014F9 E902000000          <1> 	jmp movedcursorterm
  1601                              <1> movlargecursorterm:
  1602 000014FE B0F0                <1> 	mov al, 0xF0
  1603                              <1> movedcursorterm:
  1604 00001500 884701              <1> 	mov [edi + 1], al
  1605 00001503 80FC00              <1> 	cmp ah, 0
  1606 00001506 7504                <1> 	jne fixednocursorterm
  1607 00001508 B420                <1> 	mov ah, " "
  1608 0000150A 8827                <1> 	mov [edi], ah
  1609                              <1> fixednocursorterm:
  1610 0000150C C3                  <1> 	ret
  1611                              <1> 	
  1612                                      %include 'source/solleros.asm'
  1613                              <1> 	;SOLLEROS.ASM
  1614                              <1> os:
  1615 0000150D E8A7FEFFFF          <1> 	call clear
  1616 00001512 BE[4A580000]        <1> 	mov esi, userask
  1617 00001517 E8ACFBFFFF          <1> 	call print
  1618                              <1> usercheck:
  1619 0000151C BE[7A1B0000]        <1> 	mov esi, buftxt
  1620 00001521 B00D                <1> 	mov al, 13
  1621 00001523 B404                <1> 	mov ah, 4
  1622 00001525 CD30                <1> 	int 30h
  1623 00001527 56                  <1> 	push esi
  1624 00001528 BE[6A580000]        <1> 	mov esi, line
  1625 0000152D E896FBFFFF          <1> 	call print
  1626 00001532 BE[54580000]        <1> 	mov esi, pwdask
  1627 00001537 E88CFBFFFF          <1> 	call print
  1628 0000153C 5E                  <1> 	pop esi
  1629 0000153D 46                  <1> 	inc esi
  1630 0000153E 8935[F4150000]      <1> 	mov [esipass], esi
  1631                              <1> passcheck:
  1632 00001544 B000                <1> 	mov al, 0
  1633 00001546 B405                <1> 	mov ah, 5
  1634 00001548 CD30                <1> 	int 30h
  1635 0000154A 3C0D                <1> 	cmp al, 13
  1636 0000154C 0F8435000000        <1> 	je near gotpass
  1637 00001552 3C08                <1> 	cmp al, 8
  1638 00001554 0F840F000000        <1> 	je near backpass
  1639 0000155A 8806                <1> 	mov [esi], al
  1640 0000155C 46                  <1> 	inc esi
  1641 0000155D B02A                <1> 	mov al, '*'
  1642 0000155F B406                <1> 	mov ah, 6
  1643 00001561 CD30                <1> 	int 30h
  1644 00001563 EBDF                <1> 	jmp passcheck
  1645 00001565 08200800            <1> backcursor2 db 8," ",8,0
  1646                              <1> backpass:
  1647 00001569 3B35[F4150000]      <1> 	cmp esi, [esipass]
  1648 0000156F 0F84CFFFFFFF        <1> 	je near passcheck
  1649 00001575 4E                  <1> 	dec esi
  1650 00001576 C60600              <1> 	mov byte [esi], 0
  1651 00001579 56                  <1> 	push esi
  1652 0000157A BE[65150000]        <1> 	mov esi, backcursor2
  1653 0000157F E844FBFFFF          <1> 	call print
  1654 00001584 5E                  <1> 	pop esi
  1655 00001585 EBBD                <1> 	jmp passcheck
  1656                              <1> gotpass:
  1657 00001587 B000                <1> 	mov al,0
  1658 00001589 8806                <1> 	mov [esi], al
  1659 0000158B BE[6A580000]        <1> 	mov esi, line
  1660 00001590 E833FBFFFF          <1> 	call print
  1661 00001595 BB[70580000]        <1> 	mov ebx, userlst
  1662                              <1> userfind:
  1663 0000159A BE[7A1B0000]        <1> 	mov esi, buftxt
  1664 0000159F 8A06                <1> 	mov al, [esi]
  1665 000015A1 3C00                <1> 	cmp al, 0
  1666 000015A3 0F8464FFFFFF        <1> 	je near os
  1667 000015A9 891D[F8150000]      <1> 	mov [usercache], ebx
  1668 000015AF E854020000          <1> 	call tester
  1669 000015B4 3C01                <1> 	cmp al, 1
  1670 000015B6 7415                <1> 	je pwdtest
  1671                              <1> nxtuser:
  1672 000015B8 43                  <1> 	inc ebx
  1673 000015B9 8A03                <1> 	mov al, [ebx]
  1674 000015BB 3C00                <1> 	cmp al, 0
  1675 000015BD 74DB                <1> 	je userfind
  1676 000015BF 81FB[93580000]      <1> 	cmp ebx, userlstend
  1677 000015C5 0F8342FFFFFF        <1> 	jae near os
  1678 000015CB EBCD                <1> 	jmp userfind
  1679                              <1> pwdtest:
  1680 000015CD 46                  <1> 	inc esi
  1681 000015CE 43                  <1> 	inc ebx
  1682 000015CF E834020000          <1> 	call tester
  1683 000015D4 3C01                <1> 	cmp al, 1
  1684 000015D6 7402                <1> 	je pwdrgt
  1685 000015D8 EBDE                <1> 	jmp nxtuser
  1686 000015DA E8DAFDFFFF          <1> pwdrgt:	call clear
  1687 000015DF 66B90002            <1> 	mov cx, 200h
  1688 000015E3 BE[7A1B0000]        <1> 	mov esi, buftxt
  1689 000015E8 B000                <1> 	mov al, 0
  1690 000015EA 8806                <1> bufclr:	mov [esi], al
  1691 000015EC 46                  <1> 	inc esi
  1692 000015ED E2FB                <1> 	loop bufclr
  1693                              <1> ;;;;;;;;;;;;;;;;
  1694 000015EF E935000000          <1> 	jmp nwcmd
  1695                              <1> 
  1696 000015F4 00000000            <1> esipass dd 0
  1697 000015F8 [70580000]          <1> usercache dd userlst
  1698                              <1> 	
  1699                              <1> buftxtclear:
  1700 000015FC B000                <1> 	mov al, 0
  1701 000015FE BE[7A1B0000]        <1> 	mov esi, buftxt
  1702 00001603 81FE[7A1C0000]      <1> clearbuftxt: cmp esi, buf2
  1703 00001609 730E                <1> 	jae retbufclr
  1704 0000160B 8806                <1> 	mov [esi], al
  1705 0000160D 46                  <1> 	inc esi
  1706 0000160E EBF3                <1> 	jmp clearbuftxt
  1707                              <1> 
  1708 00001610 39DE                <1> clearitbuf: cmp esi, ebx
  1709 00001612 7305                <1> 	jae retbufclr
  1710 00001614 8806                <1> 	mov [esi], al
  1711 00001616 46                  <1> 	inc esi
  1712 00001617 EBF7                <1> 	jmp clearitbuf
  1713 00001619 C3                  <1> retbufclr: ret
  1714                              <1> 
  1715 0000161A E90A000000          <1> full:	jmp nwcmd
  1716                              <1> 
  1717                              <1> nwcmd2:
  1718 0000161F BE[6A580000]        <1> 	mov esi, line
  1719 00001624 E89FFAFFFF          <1> 	call print
  1720                              <1> 
  1721 00001629 B001                <1> nwcmd:	mov al, 1
  1722 0000162B 3805[69150000]      <1> 	cmp [BATCHISON], al
  1723 00001631 0F83AC000000        <1> 	jae near batchran
  1724 00001637 B000                <1> cancel:	mov al, 0
  1725 00001639 A2[00150000]        <1> 	mov [IFON], al
  1726 0000163E A2[69150000]        <1> 	mov [BATCHISON], al
  1727 00001643 B05B                <1> 	mov al, '['
  1728 00001645 B406                <1> 	mov ah, 6
  1729 00001647 66BB0700            <1> 	mov bx, 7
  1730 0000164B E86EF8FFFF          <1> 	call int301prnt
  1731 00001650 8B35[F8150000]      <1> 	mov esi, [usercache]
  1732 00001656 E86DFAFFFF          <1> 	call print
  1733 0000165B BE[5E580000]        <1> 	mov esi, location
  1734 00001660 E863FAFFFF          <1> 	call print
  1735 00001665 E892FFFFFF          <1> 	call buftxtclear
  1736 0000166A BE[7A1B0000]        <1> 	mov esi, buftxt
  1737 0000166F C605[18110000]01    <1> 	mov byte [commandedit], 1
  1738 00001676 B00D                <1> 	mov al, 13
  1739 00001678 66BB0700            <1> 	mov bx, 7
  1740 0000167C E8A0FAFFFF          <1> 	call int305
  1741 00001681 C605[18110000]00    <1> 	mov byte [commandedit], 0
  1742 00001688 803D[7A1B0000]00    <1> 	cmp byte [buftxt], 0
  1743 0000168F 0F848AFFFFFF        <1> 	je near nwcmd2
  1744 00001695 8B35[1B300000]      <1> gotcmd:	mov esi, [currentcommandpos]
  1745 0000169B 8935[17300000]      <1> 	mov [lastcommandpos], esi
  1746 000016A1 BF[7A1B0000]        <1> 	mov edi, buftxt
  1747 000016A6 81C6[1F300000]      <1> 	add esi, commandbuf
  1748 000016AC 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1749 000016B2 7605                <1> 	jbe copycommand
  1750 000016B4 BE[1F300000]        <1> 	mov esi, commandbuf
  1751                              <1> copycommand:
  1752 000016B9 8A07                <1> 	mov al, [edi]
  1753 000016BB 8806                <1> 	mov [esi], al
  1754 000016BD 47                  <1> 	inc edi
  1755 000016BE 46                  <1> 	inc esi
  1756 000016BF 3C00                <1> 	cmp al, 0
  1757 000016C1 740F                <1> 	je donecopy
  1758 000016C3 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1759 000016C9 76EE                <1> 	jbe copycommand
  1760 000016CB BE[1F300000]        <1> 	mov esi, commandbuf
  1761 000016D0 EBE7                <1> 	jmp copycommand
  1762                              <1> donecopy:
  1763 000016D2 81EE[1F300000]      <1> 	sub esi, commandbuf
  1764 000016D8 8935[1B300000]      <1> 	mov [currentcommandpos], esi
  1765 000016DE E980000000          <1> 	jmp run
  1766                              <1> 	
  1767                              <1> batchran:
  1768 000016E3 C3                  <1> 	ret
  1769                              <1> 
  1770 000016E4 E813FFFFFF          <1> input:	call buftxtclear
  1771 000016E9 BE[7A1B0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1772 000016EE B00D                <1> stdin:	mov al, 13
  1773 000016F0 B307                <1> 	mov bl, 7
  1774 000016F2 B404                <1> 	mov ah, 4
  1775 000016F4 CD30                <1> 	int 30h
  1776 000016F6 C3                  <1> 	ret
  1777                              <1> 
  1778                              <1> replacevariable:
  1779 000016F7 56                  <1> 	push esi
  1780 000016F8 81EE[7A1B0000]      <1> 	sub esi, buftxt
  1781 000016FE 89F7                <1> 	mov edi, esi
  1782 00001700 81C6[7A1B0000]      <1> 	add esi, buftxt
  1783 00001706 47                  <1> 	inc edi
  1784 00001707 BB[6F150000]        <1> 	mov ebx, variables
  1785 0000170C E876070000          <1> 	call nxtvrech
  1786 00001711 89F7                <1> 	mov edi, esi
  1787 00001713 BB00000000          <1> 	mov ebx, 0
  1788 00001718 4E                  <1> 	dec esi
  1789                              <1> findvarname:
  1790 00001719 4E                  <1> 	dec esi
  1791 0000171A 8A06                <1> 	mov al, [esi]
  1792 0000171C 43                  <1> 	inc ebx
  1793 0000171D 3C04                <1> 	cmp al, 4
  1794 0000171F 75F8                <1> 	jne findvarname
  1795 00001721 5E                  <1> 	pop esi
  1796                              <1> replacevarloop:
  1797 00001722 8A07                <1> 	mov al, [edi]
  1798 00001724 3C00                <1> 	cmp al, 0
  1799 00001726 0F8446000000        <1> 	je near fixvariables
  1800 0000172C 81FB00000000        <1> 	cmp ebx, 0
  1801 00001732 0F8407000000        <1> 	je near expandbuftxt
  1802 00001738 8806                <1> 	mov [esi], al
  1803 0000173A 4B                  <1> 	dec ebx
  1804 0000173B 46                  <1> 	inc esi
  1805 0000173C 47                  <1> 	inc edi
  1806 0000173D EBE3                <1> 	jmp replacevarloop
  1807                              <1> expandbuftxt:
  1808 0000173F 89F1                <1> 	mov ecx, esi
  1809 00001741 8A26                <1> 	mov ah, [esi]
  1810                              <1> expandbuftxtlp:
  1811 00001743 8A1E                <1> 	mov bl, [esi]
  1812 00001745 46                  <1> 	inc esi
  1813 00001746 8A3E                <1> 	mov bh, [esi]
  1814 00001748 8826                <1> 	mov [esi], ah
  1815 0000174A 88FC                <1> 	mov ah, bh
  1816 0000174C 80FB00              <1> 	cmp bl, 0
  1817 0000174F 75F2                <1> 	jne expandbuftxtlp
  1818 00001751 89CE                <1> 	mov esi, ecx
  1819 00001753 8806                <1> 	mov [esi], al
  1820 00001755 47                  <1> 	inc edi
  1821 00001756 8A07                <1> 	mov al, [edi]
  1822 00001758 3C00                <1> 	cmp al, 0
  1823 0000175A 0F8412000000        <1> 	je near fixvariables
  1824 00001760 46                  <1> 	inc esi
  1825 00001761 EBDC                <1> 	jmp expandbuftxt
  1826                              <1> 	
  1827                              <1> 	
  1828                              <1> run:	
  1829 00001763 BE[6A580000]        <1> 	mov esi, line		;;I should add some sort of command line parsing before it is processed to replace variables with stuff
  1830 00001768 E85BF9FFFF          <1> 	call print
  1831 0000176D BE[7A1B0000]        <1> 	mov esi, buftxt
  1832                              <1> fixvariables:
  1833 00001772 46                  <1> 	inc esi
  1834 00001773 8A06                <1> 	mov al, [esi]
  1835 00001775 3C24                <1> 	cmp al, '$'
  1836 00001777 0F847AFFFFFF        <1> 	je near replacevariable
  1837 0000177D 3C00                <1> 	cmp al, 0
  1838 0000177F 75F1                <1> 	jne fixvariables
  1839                              <1> 
  1840 00001781 803D[7C1D0000]00    <1> 	cmp byte [indexdone], 0
  1841 00001788 7505                <1> 	jne progtest
  1842 0000178A E858050000          <1> 	call indexfiles
  1843                              <1> progtest:
  1844 0000178F BE[7A1B0000]        <1> 	mov esi, buftxt
  1845 00001794 BB[00130000]        <1> 	mov ebx, fileindex
  1846 00001799 668B03              <1> prgnxt:	mov ax, [ebx]
  1847 0000179C B105                <1> 	mov cl, 5
  1848 0000179E B504                <1> 	mov ch, 4
  1849 000017A0 6639C8              <1> 	cmp ax, cx
  1850 000017A3 740B                <1> 	je fndprg
  1851 000017A5 43                  <1> 	inc ebx
  1852 000017A6 81FB[00150000]      <1> 	cmp ebx, fileindexend
  1853 000017AC 732E                <1> 	jae prgnf
  1854 000017AE EBE9                <1> 	jmp prgnxt
  1855 000017B0 81C302000000        <1> fndprg: add ebx, 2
  1856 000017B6 BE[7A1B0000]        <1> 	mov esi, buftxt
  1857 000017BB 66B90000            <1> 	mov cx, 0
  1858 000017BF E87E000000          <1> 	call cndtest
  1859 000017C4 3C01                <1> 	cmp al, 1
  1860 000017C6 7302                <1> 	jae prggood
  1861 000017C8 EBCF                <1> 	jmp prgnxt
  1862 000017CA 81FB[00150000]      <1> prggood: cmp ebx, fileindexend
  1863 000017D0 7331                <1> 	jae prgdn
  1864 000017D2 81C303000000        <1> 	add ebx, 3
  1865 000017D8 8B3B                <1> 	mov edi, [ebx]
  1866 000017DA FFE7                <1> 	jmp edi
  1867                              <1> prgnf:	
  1868 000017DC A0[7A1B0000]        <1> 	mov al, [buftxt]
  1869 000017E1 3C00                <1> 	cmp al, 0
  1870 000017E3 741E                <1> 	je prgdn
  1871 000017E5 BE[31580000]        <1> 	mov esi, notfound1
  1872 000017EA E8D9F8FFFF          <1> 	call print
  1873 000017EF BE[7A1B0000]        <1> 	mov esi, buftxt
  1874 000017F4 E8CFF8FFFF          <1> 	call print
  1875 000017F9 BE[3B580000]        <1> 	mov esi, notfound2
  1876 000017FE E8C5F8FFFF          <1> 	call print
  1877 00001803 E921FEFFFF          <1> prgdn:	jmp nwcmd
  1878                              <1> 
  1879                              <1> 
  1880                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1881 00001808 B000                <1> 	mov al, 0
  1882 0000180A 8A06                <1> retest:	mov al, [esi]
  1883 0000180C 8A23                <1> 	mov ah, [ebx]
  1884 0000180E 3C00                <1> 	cmp al, 0
  1885 00001810 7408                <1> 	je testtrue
  1886 00001812 38E0                <1> 	cmp al, ah
  1887 00001814 750C                <1> 	jne testfalse
  1888 00001816 43                  <1> 	inc ebx
  1889 00001817 46                  <1> 	inc esi
  1890 00001818 EBF0                <1> 	jmp retest
  1891                              <1> testtrue:
  1892 0000181A 80FC00              <1> 	cmp ah, 0
  1893 0000181D 7503                <1> 	jne testfalse
  1894 0000181F B001                <1> 	mov al, 1
  1895 00001821 C3                  <1> 	ret
  1896                              <1> testfalse:
  1897 00001822 B000                <1> 	mov al, 0
  1898 00001824 C3                  <1> 	ret
  1899                              <1> 
  1900                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1901 00001825 B000                <1> 	mov al, 0
  1902                              <1> opretest:
  1903 00001827 8A06                <1> 	mov al, [esi]
  1904 00001829 8A23                <1> 	mov ah, [ebx]
  1905 0000182B 38E0                <1> 	cmp al, ah
  1906 0000182D 7510                <1> 	jne optestfalse
  1907 0000182F 80FC00              <1> 	cmp ah, 0
  1908 00001832 7404                <1> 	je optesttrue
  1909 00001834 43                  <1> 	inc ebx
  1910 00001835 46                  <1> 	inc esi
  1911 00001836 EBEF                <1> 	jmp opretest
  1912                              <1> optesttrue:
  1913 00001838 3C00                <1> 	cmp al, 0
  1914 0000183A 7503                <1> 	jne optestfalse
  1915 0000183C B001                <1> 	mov al, 1
  1916 0000183E C3                  <1> 	ret
  1917                              <1> optestfalse:
  1918 0000183F B000                <1> 	mov al, 0
  1919 00001841 C3                  <1> 	ret
  1920                              <1> 
  1921                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1922 00001842 B000                <1> 	mov al, 0
  1923 00001844 8A06                <1> cndretest:	mov al, [esi]
  1924 00001846 8A23                <1> 	mov ah, [ebx]
  1925 00001848 38CC                <1> 	cmp ah, cl
  1926 0000184A 7408                <1> 	je cndtesttrue
  1927 0000184C 38E0                <1> 	cmp al, ah
  1928 0000184E 750B                <1> 	jne cndtestfalse
  1929 00001850 43                  <1> 	inc ebx
  1930 00001851 46                  <1> 	inc esi
  1931 00001852 EBF0                <1> 	jmp cndretest
  1932                              <1> cndtesttrue:
  1933 00001854 38C8                <1> 	cmp al, cl
  1934 00001856 7506                <1> 	jne cndtestalmost
  1935 00001858 B001                <1> 	mov al, 1
  1936 0000185A C3                  <1> 	ret
  1937                              <1> cndtestfalse:
  1938 0000185B B000                <1> 	mov al, 0
  1939 0000185D C3                  <1> 	ret
  1940                              <1> cndtestalmost:
  1941 0000185E B002                <1> 	mov al, 2
  1942 00001860 C3                  <1> 	ret
  1943 00001861 00                  <1> currentdir db 0
  1944 00001862 BE[00130000]        <1> dir:	mov esi, fileindex
  1945 00001867 8A06                <1> 	dirnxt:	mov al, [esi]
  1946 00001869 B400                <1> 		mov ah, 0
  1947 0000186B 3C05                <1> 		cmp al, 5
  1948 0000186D 744A                <1> 		je dirfnd
  1949 0000186F 3C07                <1> 		cmp al, 7
  1950 00001871 743C                <1> 		je dirfnd3
  1951 00001873 3C06                <1> 		cmp al, 6
  1952 00001875 7438                <1> 		je dirfnd3
  1953 00001877 46                  <1> 		inc esi
  1954 00001878 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1955 0000187E 737B                <1> 		jae dirdn
  1956 00001880 EBE5                <1> 		jmp dirnxt
  1957 00001882 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1958 0000188B 070400646F63756D65- <1>
  1959 00001894 6E74000A0400666F6C- <1>
  1960 0000189D 646572000504006578- <1>
  1961 000018A6 6563757461626C6500  <1>
  1962                              <1> 	dirfnd3:
  1963 000018AF 46                  <1> 		inc esi
  1964 000018B0 81FE[00150000]      <1> 		cmp esi, fileindexend
  1965 000018B6 76AF                <1> 		jbe dirnxt
  1966 000018B8 4E                  <1> 		dec esi
  1967 000018B9 46                  <1> 	dirfnd:	inc esi
  1968 000018BA 8A06                <1> 		mov al, [esi]
  1969 000018BC B400                <1> 		mov ah, 0
  1970 000018BE 3C04                <1> 		cmp al, 4
  1971 000018C0 740B                <1> 		je dirfnd2
  1972 000018C2 46                  <1> 		inc esi
  1973 000018C3 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1974 000018C9 7330                <1> 		jae dirdn
  1975 000018CB EB9A                <1> 		jmp dirnxt
  1976 000018CD 81C601000000        <1> 	dirfnd2: add esi, 1
  1977 000018D3 E8F0F7FFFF          <1> 		call print
  1978 000018D8 8935[0A190000]      <1> 		mov [esidir], esi
  1979 000018DE BE[6D580000]        <1> 		mov esi, dirtab
  1980 000018E3 E8E0F7FFFF          <1> 		call print
  1981 000018E8 8B35[0A190000]      <1> 		mov esi, [esidir]
  1982 000018EE 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1983 000018F4 7305                <1> 		jae dirdn
  1984 000018F6 E96CFFFFFF          <1> 		jmp dirnxt
  1985 000018FB BE[6A580000]        <1> 	dirdn:	mov esi, line
  1986 00001900 E8C3F7FFFF          <1> 			call print
  1987 00001905 E91FFDFFFF          <1> 			jmp nwcmd
  1988 0000190A 00000000            <1> esidir dd 0
  1989                              <1> 
  1990                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1991                              <1> 		                ;ends if array seperator is found backwards after 0
  1992                              <1> 	arnxt:	      
  1993 0000190E 88E8                <1> 		mov al, ch
  1994 00001910 88CC                <1> 		mov ah, cl        
  1995 00001912 663906              <1> 		cmp [esi], ax
  1996 00001915 744D                <1> 		je ardn
  1997 00001917 66390E              <1> 		cmp [esi], cx
  1998 0000191A 7407                <1> 		je arfnd
  1999 0000191C 46                  <1> 		inc esi
  2000 0000191D 39DE                <1> 		cmp esi, ebx
  2001 0000191F 7343                <1> 		jae ardn
  2002 00001921 EBEB                <1> 		jmp arnxt
  2003 00001923 81C602000000        <1> 	arfnd: add esi, 2
  2004 00001929 891D[65190000]      <1> 		mov [arbx], ebx
  2005 0000192F 890D[69190000]      <1> 		mov [arcx], ecx
  2006 00001935 E88EF7FFFF          <1> 		call print
  2007 0000193A 8935[6B190000]      <1> 		mov [arsi], esi
  2008 00001940 BE[6A580000]        <1> 		mov esi, line
  2009 00001945 E87EF7FFFF          <1> 		call print
  2010 0000194A 8B1D[65190000]      <1> 		mov ebx, [arbx]
  2011 00001950 668B0D[69190000]    <1> 		mov cx, [arcx]
  2012 00001957 8B35[6B190000]      <1> 		mov esi, [arsi]
  2013 0000195D 46                  <1> 		inc esi
  2014 0000195E 39DE                <1> 		cmp esi, ebx
  2015 00001960 7302                <1> 		jae ardn
  2016 00001962 EBAA                <1> 		jmp arnxt
  2017 00001964 C3                  <1> 	ardn:	ret
  2018 00001965 00000000            <1> arbx:	dw 0,0
  2019 00001969 0000                <1> arcx:	db 0,0
  2020 0000196B 00000000            <1> arsi:	dw 0,0
  2021                              <1> 
  2022                              <1> clearbuffer:
  2023 0000196F BE[7A1C0000]        <1> 	mov esi, buf2
  2024 00001974 B030                <1> 	mov al, '0'
  2025 00001976 81FE[8E1C0000]      <1> clearbuf: cmp esi, numbuf
  2026 0000197C 7305                <1> 	jae doneclearbuff
  2027 0000197E 8806                <1> 	mov [esi], al
  2028 00001980 46                  <1> 	inc esi
  2029 00001981 EBF3                <1> 	jmp clearbuf
  2030                              <1> doneclearbuff: 
  2031 00001983 C3                  <1> 		ret
  2032                              <1> 
  2033                              <1> convert:
  2034 00001984 4E                  <1> 	dec esi
  2035 00001985 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  2036                              <1> cnvrt:
  2037 00001987 89DE                <1> 	mov esi, ebx
  2038 00001989 81EE09000000        <1> 	sub esi, 9
  2039 0000198F 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  2040 00001995 720A                <1> 	jb ten8
  2041 00001997 81E900CA9A3B        <1> 	sub ecx, 1000000000
  2042 0000199D FE06                <1> 	inc byte [esi]
  2043 0000199F EBE6                <1> 	jmp cnvrt
  2044 000019A1 46                  <1> ten8:	inc esi
  2045 000019A2 81F900E1F505        <1> 	cmp ecx, 100000000
  2046 000019A8 720A                <1> 	jb ten7
  2047 000019AA 81E900E1F505        <1> 	sub ecx, 100000000
  2048 000019B0 FE06                <1> 	inc byte [esi]
  2049 000019B2 EBD3                <1> 	jmp cnvrt
  2050 000019B4 46                  <1> ten7:	inc esi
  2051 000019B5 81F980969800        <1> 	cmp ecx, 10000000
  2052 000019BB 720A                <1> 	jb ten6
  2053 000019BD 81E980969800        <1> 	sub ecx, 10000000
  2054 000019C3 FE06                <1> 	inc byte [esi]
  2055 000019C5 EBC0                <1> 	jmp cnvrt
  2056 000019C7 46                  <1> ten6:	inc esi
  2057 000019C8 81F940420F00        <1> 	cmp ecx, 1000000
  2058 000019CE 720A                <1> 	jb ten5
  2059 000019D0 81E940420F00        <1> 	sub ecx, 1000000
  2060 000019D6 FE06                <1> 	inc byte [esi]
  2061 000019D8 EBAD                <1> 	jmp cnvrt
  2062 000019DA 46                  <1> ten5:	inc esi
  2063 000019DB 81F9A0860100        <1> 	cmp ecx, 100000
  2064 000019E1 720A                <1> 	jb ten4
  2065 000019E3 81E9A0860100        <1> 	sub ecx, 100000
  2066 000019E9 FE06                <1> 	inc byte [esi]
  2067 000019EB EB9A                <1> 	jmp cnvrt
  2068 000019ED 46                  <1> ten4:	inc esi
  2069 000019EE 81F910270000        <1> 	cmp ecx, 10000
  2070 000019F4 720A                <1> 	jb ten3
  2071 000019F6 81E910270000        <1> 	sub ecx, 10000
  2072 000019FC FE06                <1> 	inc byte [esi]
  2073 000019FE EB87                <1> 	jmp cnvrt
  2074 00001A00 46                  <1> ten3:	inc esi
  2075 00001A01 81F9E8030000        <1> 	cmp ecx, 1000
  2076 00001A07 720D                <1> 	jb ten2
  2077 00001A09 81E9E8030000        <1> 	sub ecx, 1000
  2078 00001A0F FE06                <1> 	inc byte [esi]
  2079 00001A11 E971FFFFFF          <1> 	jmp cnvrt
  2080 00001A16 46                  <1> ten2:	inc esi
  2081 00001A17 81F964000000        <1> 	cmp ecx, 100
  2082 00001A1D 720D                <1> 	jb ten1
  2083 00001A1F 81E964000000        <1> 	sub ecx, 100
  2084 00001A25 FE06                <1> 	inc byte [esi]
  2085 00001A27 E95BFFFFFF          <1> 	jmp cnvrt
  2086 00001A2C 46                  <1> ten1:	inc esi
  2087 00001A2D 81F90A000000        <1> 	cmp ecx, 10
  2088 00001A33 720D                <1> 	jb ten0
  2089 00001A35 81E90A000000        <1> 	sub ecx, 10
  2090 00001A3B FE06                <1> 	inc byte [esi]
  2091 00001A3D E945FFFFFF          <1> 	jmp cnvrt
  2092 00001A42 46                  <1> ten0:	inc esi
  2093 00001A43 81F901000000        <1> 	cmp ecx, 1
  2094 00001A49 720D                <1> 	jb tendn
  2095 00001A4B 81E901000000        <1> 	sub ecx, 1
  2096 00001A51 FE06                <1> 	inc byte [esi]
  2097 00001A53 E92FFFFFFF          <1> 	jmp cnvrt
  2098                              <1> tendn:
  2099 00001A58 C3                  <1> 	ret
  2100                              <1> 
  2101                              <1> 	
  2102                              <1> 
  2103 00001A59 00<rept>            <1> hexnumber times 8 db 0
  2104 00001A61 202000              <1> hexnumberend db "  ",0
  2105                              <1> 
  2106                              <1> 
  2107 00001A64 00000000            <1> sibuf dw 0,0
  2108 00001A68 00000000            <1> dibuf dw 0,0
  2109                              <1> 
  2110                              <1> converthex:
  2111                              <1> clearbufferhex:
  2112 00001A6C B030                <1> 	mov al, '0'
  2113 00001A6E 8935[641A0000]      <1> 	mov [sibuf], esi
  2114 00001A74 893D[681A0000]      <1> 	mov [dibuf], edi
  2115 00001A7A 39FE                <1> clearbufhex: cmp esi, edi
  2116 00001A7C 7305                <1> 	jae doneclearbuffhex
  2117 00001A7E 8806                <1> 	mov [esi], al
  2118 00001A80 46                  <1> 	inc esi
  2119 00001A81 EBF7                <1> 	jmp clearbufhex
  2120                              <1> doneclearbuffhex:
  2121 00001A83 8B35[681A0000]      <1> 	mov esi, [dibuf]
  2122 00001A89 89CA                <1> 	mov edx, ecx
  2123 00001A8B 81FA00000000        <1> 	cmp edx, 0
  2124 00001A91 741F                <1> 	je donenxtephx
  2125                              <1> nxtexphx:	;0x10^x
  2126 00001A93 4E                  <1> 	dec esi
  2127 00001A94 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  2128 00001A96 89D1                <1> 	mov ecx, edx
  2129 00001A98 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  2130 00001A9E E81C000000          <1> 	call cnvrtexphx		;;get this digit
  2131 00001AA3 89FE                <1> 	mov esi, edi
  2132 00001AA5 C1EA04              <1> 	shr edx, 4		;;next digit
  2133 00001AA8 81FA00000000        <1> 	cmp edx, 0
  2134 00001AAE 7402                <1> 	je donenxtephx
  2135 00001AB0 EBE1                <1> 	jmp nxtexphx
  2136                              <1> donenxtephx:
  2137 00001AB2 8B35[641A0000]      <1> 	mov esi, [sibuf]
  2138 00001AB8 8B3D[681A0000]      <1> 	mov edi, [dibuf]
  2139 00001ABE C3                  <1> 	ret
  2140                              <1> cnvrtexphx:			;;convert this number
  2141 00001ABF 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  2142 00001AC1 81F900000000        <1> 	cmp ecx, 0
  2143 00001AC7 7429                <1> 	je zerohx
  2144 00001AC9 8A06                <1> cnvrthx:  mov al, [esi]
  2145 00001ACB 3C39                <1> 	cmp al, '9'
  2146 00001ACD 741B                <1> 	je lettershx
  2147 00001ACF 3C46                <1> lttrhxdn: cmp al, 'F'
  2148 00001AD1 741F                <1> 	je zerohx
  2149 00001AD3 8A06                <1> 	mov al, [esi]
  2150 00001AD5 FEC0                <1> 	inc al
  2151 00001AD7 8806                <1> 	mov [esi], al
  2152 00001AD9 89DE                <1> 	mov esi, ebx
  2153 00001ADB 81E901000000        <1> cnvrtlphx: sub ecx, 1
  2154 00001AE1 81F900000000        <1> 	cmp ecx, 0
  2155 00001AE7 75E0                <1> 	jne cnvrthx
  2156 00001AE9 C3                  <1> 	ret
  2157                              <1> lettershx:
  2158 00001AEA B041                <1> 	mov al, 'A'
  2159 00001AEC 2C01                <1> 	sub al, 1
  2160 00001AEE 8806                <1> 	mov [esi], al
  2161 00001AF0 EBDD                <1> 	jmp lttrhxdn
  2162 00001AF2 B030                <1> zerohx:	mov al, '0'
  2163 00001AF4 8806                <1> 	mov [esi], al
  2164 00001AF6 4E                  <1> 	dec esi
  2165 00001AF7 8A06                <1> 	mov al, [esi]
  2166 00001AF9 3C46                <1> 	cmp al, 'F'
  2167 00001AFB 74F5                <1> 	je zerohx
  2168 00001AFD 41                  <1> 	inc ecx
  2169 00001AFE EBDB                <1> 	jmp cnvrtlphx
  2170 00001B00 00                  <1> smallhex db 0
  2171 00001B01 01                  <1> firsthexshown db 1
  2172                              <1> showhexsmall:
  2173 00001B02 C605[001B0000]01    <1> 	mov byte [smallhex], 1
  2174 00001B09 E808000000          <1> 	call showhex
  2175 00001B0E C605[001B0000]00    <1> 	mov byte [smallhex], 0
  2176 00001B15 C3                  <1> 	ret
  2177                              <1> showhex:
  2178 00001B16 60                  <1> 	pusha
  2179 00001B17 BE[591A0000]        <1> 	mov esi, hexnumber
  2180 00001B1C BF[611A0000]        <1> 	mov edi, hexnumberend
  2181 00001B21 E846FFFFFF          <1> 	call converthex
  2182 00001B26 803D[011B0000]01    <1> 	cmp byte [firsthexshown], 1
  2183 00001B2D 7504                <1> 	jne showthathex
  2184 00001B2F 66BA0000            <1> 	mov dx, 0
  2185                              <1> showthathex:
  2186 00001B33 803D[011B0000]03    <1> 	cmp byte [firsthexshown], 3
  2187 00001B3A 750A                <1> 	jne nonewhexline
  2188 00001B3C BE[6A580000]        <1> 	mov esi, line
  2189 00001B41 E882F5FFFF          <1> 	call print
  2190                              <1> nonewhexline:
  2191 00001B46 803D[011B0000]04    <1> 	cmp byte [firsthexshown], 4
  2192 00001B4D 7527                <1> 	jne notabfixhex
  2193 00001B4F B1A0                <1> 	mov cl, 160
  2194 00001B51 28D1                <1> 	sub cl, dl
  2195 00001B53 C0E905              <1> 	shr cl, 5
  2196 00001B56 C0E105              <1> 	shl cl, 5
  2197 00001B59 80F900              <1> 	cmp cl, 0
  2198 00001B5C 750F                <1> 	jne nonewlinetabfixhex
  2199 00001B5E BE[6A580000]        <1> 	mov esi, line
  2200 00001B63 E860F5FFFF          <1> 	call print
  2201 00001B68 E909000000          <1> 	jmp notabfixhex
  2202                              <1> nonewlinetabfixhex:
  2203 00001B6D 80C20F              <1> 	add dl, 15
  2204 00001B70 C0EA04              <1> 	shr dl, 4
  2205 00001B73 C0E204              <1> 	shl dl, 4
  2206                              <1> notabfixhex:
  2207 00001B76 BE[591A0000]        <1> 	mov esi, hexnumber
  2208 00001B7B 803D[001B0000]01    <1> 	cmp byte [smallhex],1
  2209 00001B82 7506                <1> 	jne printnosmallhex
  2210 00001B84 81C606000000        <1> 	add esi, 6
  2211                              <1> printnosmallhex:
  2212 00001B8A E839F5FFFF          <1> 	call print
  2213 00001B8F 803D[011B0000]02    <1> 	cmp byte [firsthexshown], 2
  2214 00001B96 750A                <1> 	jne hexshown
  2215 00001B98 BE[6A580000]        <1> 	mov esi, line
  2216 00001B9D E826F5FFFF          <1> 	call print
  2217                              <1> hexshown:
  2218 00001BA2 C605[011B0000]00    <1> 	mov byte [firsthexshown], 0
  2219 00001BA9 61                  <1> 	popa
  2220 00001BAA C3                  <1> 	ret
  2221                              <1> 
  2222                              <1> 
  2223 00001BAB 303030303030303030- <1> decnumber db "00000000000000"
  2224 00001BB4 3030303030          <1>
  2225 00001BB9 2000                <1> decnumberend: db " ",0
  2226                              <1> 
  2227                              <1> showdec: ;;same as showhex, just uses decimal conversion
  2228 00001BBB 60                  <1> 	pusha
  2229 00001BBC BF[AB1B0000]        <1> 	mov edi, decnumber
  2230 00001BC1 BE[B91B0000]        <1> 	mov esi, decnumberend
  2231                              <1> cleardecbuf:
  2232 00001BC6 C60730              <1> 	mov byte [edi], '0'
  2233 00001BC9 47                  <1> 	inc edi
  2234 00001BCA 39F7                <1> 	cmp edi, esi
  2235 00001BCC 72F8                <1> 	jb cleardecbuf
  2236 00001BCE BF[AB1B0000]        <1> 	mov edi, decnumber
  2237 00001BD3 E8ACFDFFFF          <1> 	call convert
  2238 00001BD8 803D[011B0000]01    <1> 	cmp byte [firsthexshown], 1
  2239 00001BDF 7504                <1> 	jne showthatdec
  2240 00001BE1 66BA0000            <1> 	mov dx, 0
  2241                              <1> showthatdec:
  2242 00001BE5 803D[011B0000]03    <1> 	cmp byte [firsthexshown], 3
  2243 00001BEC 750A                <1> 	jne nonewdecline
  2244 00001BEE BE[6A580000]        <1> 	mov esi, line
  2245 00001BF3 E8D0F4FFFF          <1> 	call print
  2246                              <1> nonewdecline:
  2247 00001BF8 803D[011B0000]04    <1> 	cmp byte [firsthexshown], 4
  2248 00001BFF 7527                <1> 	jne notabfixdec
  2249 00001C01 B1A0                <1> 	mov cl, 160
  2250 00001C03 28D1                <1> 	sub cl, dl
  2251 00001C05 C0E905              <1> 	shr cl, 5
  2252 00001C08 C0E105              <1> 	shl cl, 5
  2253 00001C0B 80F900              <1> 	cmp cl, 0
  2254 00001C0E 750F                <1> 	jne nonewlinetabfixdec
  2255 00001C10 BE[6A580000]        <1> 	mov esi, line
  2256 00001C15 E8AEF4FFFF          <1> 	call print
  2257 00001C1A E909000000          <1> 	jmp notabfixdec
  2258                              <1> nonewlinetabfixdec:
  2259 00001C1F 80C20F              <1> 	add dl, 15
  2260 00001C22 C0EA04              <1> 	shr dl, 4
  2261 00001C25 C0E204              <1> 	shl dl, 4
  2262                              <1> notabfixdec:
  2263 00001C28 BE[AB1B0000]        <1> 	mov esi, decnumber
  2264 00001C2D 4E                  <1> 	dec esi
  2265                              <1> sifind:
  2266 00001C2E 46                  <1> 	inc esi
  2267 00001C2F 803E30              <1> 	cmp byte [esi], '0'
  2268 00001C32 74FA                <1> 	je sifind
  2269 00001C34 E88FF4FFFF          <1> 	call print
  2270 00001C39 803D[011B0000]02    <1> 	cmp byte [firsthexshown], 2
  2271 00001C40 750A                <1> 	jne decshown
  2272 00001C42 BE[6A580000]        <1> 	mov esi, line
  2273 00001C47 E87CF4FFFF          <1> 	call print
  2274                              <1> decshown:
  2275 00001C4C C605[011B0000]00    <1> 	mov byte [firsthexshown], 0
  2276 00001C53 61                  <1> 	popa
  2277 00001C54 C3                  <1> 	ret
  2278                              <1> 	
  2279                              <1> cnvrttxt: 
  2280 00001C55 B900000000          <1> 	mov ecx, 0
  2281 00001C5A B800000000          <1> 	mov eax, 0
  2282 00001C5F BA00000000          <1> 	mov edx, 0
  2283 00001C64 BB00000000          <1> 	mov ebx, 0
  2284 00001C69 4E                  <1> 	dec esi
  2285                              <1> cnvrtlptxt:
  2286 00001C6A 46                  <1> 	inc esi
  2287 00001C6B 8A06                <1> 	mov al, [esi]
  2288 00001C6D 3C00                <1> 	cmp al, 0
  2289 00001C6F 75F9                <1> 	jne cnvrtlptxt
  2290 00001C71 4E                  <1> 	dec esi
  2291 00001C72 8A06                <1> 	mov al, [esi]
  2292 00001C74 3C2E                <1> 	cmp al, '.'
  2293 00001C76 7503                <1> 	jne nocnvrtdot
  2294 00001C78 46                  <1> 	inc esi
  2295 00001C79 EBEF                <1> 	jmp cnvrtlptxt
  2296                              <1> nocnvrtdot:
  2297 00001C7B 3C30                <1> 	cmp al, '0'
  2298 00001C7D 7504                <1> 	jne txtlp
  2299 00001C7F 39FE                <1> zerotest: cmp esi, edi
  2300 00001C81 745B                <1> 	je donecnvrt
  2301                              <1> txtlp:	
  2302 00001C83 B800000000          <1> 	mov eax, 0
  2303 00001C88 8A06                <1> 	mov al, [esi]
  2304 00001C8A 3C3D                <1> 	cmp al, '='
  2305 00001C8C 7450                <1> 	je donecnvrt
  2306 00001C8E 3C30                <1> 	cmp al, 48
  2307 00001C90 724C                <1> 	jb donecnvrt
  2308 00001C92 3C23                <1> 	cmp al, '#'
  2309 00001C94 7448                <1> 	je donecnvrt
  2310 00001C96 39FE                <1> 	cmp esi, edi
  2311 00001C98 7244                <1> 	jb donecnvrt
  2312 00001C9A 81F900000000        <1> 	cmp ecx, 0
  2313 00001CA0 7708                <1> 	ja exp
  2314 00001CA2 2C30                <1> noexp:	sub al, 48
  2315 00001CA4 01C2                <1> 	add edx, eax
  2316 00001CA6 4E                  <1> 	dec esi
  2317 00001CA7 41                  <1> 	inc ecx
  2318 00001CA8 EBD9                <1> 	jmp txtlp
  2319 00001CAA 81F900000000        <1> exp:	cmp ecx, 0
  2320 00001CB0 74F0                <1> 	je noexp
  2321 00001CB2 2C30                <1> 	sub al, 48
  2322 00001CB4 51                  <1> 	push ecx
  2323 00001CB5 89C3                <1> expmul:	mov ebx, eax
  2324 00001CB7 01D8                <1> 	add eax, ebx
  2325 00001CB9 01D8                <1> 	add eax, ebx
  2326 00001CBB 01D8                <1> 	add eax, ebx
  2327 00001CBD 01D8                <1> 	add eax, ebx
  2328 00001CBF 01D8                <1> 	add eax, ebx
  2329 00001CC1 01D8                <1> 	add eax, ebx
  2330 00001CC3 01D8                <1> 	add eax, ebx
  2331 00001CC5 01D8                <1> 	add eax, ebx
  2332 00001CC7 01D8                <1> 	add eax, ebx
  2333 00001CC9 81E901000000        <1> 	sub ecx, 1
  2334 00001CCF 81F900000000        <1> 	cmp ecx, 0
  2335 00001CD5 77DE                <1> 	ja expmul
  2336 00001CD7 01C2                <1> 	add edx, eax
  2337 00001CD9 59                  <1> 	pop ecx
  2338 00001CDA 4E                  <1> 	dec esi
  2339 00001CDB 41                  <1> 	inc ecx
  2340 00001CDC EBA5                <1> 	jmp txtlp
  2341 00001CDE 89D1                <1> donecnvrt: mov ecx, edx
  2342 00001CE0 C3                  <1> 	ret
  2343                                      %include 'source/builtinprogs.asm'
  2344 00001CE1 050406040704        <1> filetypes db 5,4,6,4,7,4
  2345                              <1> progstart:		;programs start here
  2346                              <1> ;db 5,4,"index",0
  2347                              <1> ;	call indexfiles
  2348                              <1> ;	jmp nwcmd
  2349                              <1> 
  2350                              <1> 
  2351                              <1> indexfiles:
  2352 00001CE7 BE[E71C0000]        <1> 	mov esi, progstart
  2353 00001CEC BB[00130000]        <1> 	mov ebx, fileindex
  2354 00001CF1 BF[E71C0000]        <1> 	mov edi, progstart
  2355 00001CF6 81EF02000000        <1> 	sub edi, 2
  2356                              <1> indexloop:
  2357 00001CFC 668B0E              <1> 	mov cx, [esi]
  2358                              <1> 	indexloop2:
  2359 00001CFF 663B0F              <1> 		cmp cx, [edi]
  2360 00001D02 7424                <1> 		je indexloop2done
  2361 00001D04 81EF02000000        <1> 		sub edi, 2
  2362 00001D0A 81FF[E11C0000]      <1> 		cmp edi, filetypes
  2363 00001D10 73ED                <1> 		jae indexloop2
  2364 00001D12 BF[E71C0000]        <1> 	mov edi, progstart
  2365 00001D17 81EF02000000        <1> 	sub edi, 2
  2366 00001D1D 46                  <1> 	inc esi
  2367 00001D1E 81FE[4D2D0000]      <1> 	cmp esi, batchprogend
  2368 00001D24 734E                <1> 	jae indexloopdone
  2369 00001D26 EBD4                <1> 	jmp indexloop
  2370                              <1> indexloop2done:
  2371 00001D28 66890B              <1> 	mov [ebx], cx
  2372 00001D2B 81C302000000        <1> 	add ebx, 2
  2373 00001D31 81C602000000        <1> 	add esi, 2
  2374                              <1> 	nameindex:
  2375 00001D37 8A0E                <1> 		mov cl, [esi]
  2376 00001D39 80F900              <1> 		cmp cl, 0
  2377 00001D3C 7406                <1> 		je nameindexdone
  2378 00001D3E 880B                <1> 		mov [ebx], cl
  2379 00001D40 46                  <1> 		inc esi
  2380 00001D41 43                  <1> 		inc ebx
  2381 00001D42 EBF3                <1> 		jmp nameindex
  2382                              <1> 	nameindexdone:
  2383 00001D44 43                  <1> 		inc ebx
  2384 00001D45 66C7030000          <1> 		mov word [ebx], 0
  2385 00001D4A 81C302000000        <1> 		add ebx, 2
  2386 00001D50 46                  <1> 		inc esi
  2387 00001D51 8933                <1> 		mov [ebx], esi
  2388 00001D53 81C304000000        <1> 		add ebx, 4
  2389 00001D59 66C7030000          <1> 		mov word [ebx], 0
  2390 00001D5E 81C302000000        <1> 		add ebx, 2
  2391 00001D64 81FB[00150000]      <1> 		cmp ebx, fileindexend
  2392 00001D6A 7308                <1> 		jae indexloopdone
  2393 00001D6C 81C601000000        <1> 		add esi, 1
  2394 00001D72 EB88                <1> 		jmp indexloop
  2395 00001D74 C605[7C1D0000]01    <1> indexloopdone: 	mov byte [indexdone], 1
  2396 00001D7B C3                  <1> 		ret
  2397                              <1> 
  2398 00001D7C 00                  <1> indexdone db 0
  2399                              <1> 
  2400                              <1> 
  2401                              <1> ;db 5,4,"showindex",0
  2402                              <1> ;	mov esi, fileindex
  2403                              <1> ;	mov ebx, fileindexend
  2404                              <1> ;	mov cl, 5
  2405                              <1> ;	mov ch, 4
  2406                              <1> ;	call array
  2407                              <1> ;	mov esi, fileindex
  2408                              <1> ;	mov ebx, fileindexend
  2409                              <1> ;	mov cl, 6
  2410                              <1> ;	mov ch, 4
  2411                              <1> ;	call array
  2412                              <1> ;	mov esi, fileindex
  2413                              <1> ;	mov ebx, fileindexend
  2414                              <1> ;	mov cl, 7
  2415                              <1> ;	mov ch, 4
  2416                              <1> ;	call array
  2417                              <1> ;	jmp nwcmd
  2418                              <1> 
  2419 00001D7D 05046C7300          <1> db 5,4,"ls",0
  2420 00001D82 BE[E71C0000]        <1> 	lscmd:	mov esi, progstart
  2421 00001D87 BB[4D2D0000]        <1> 		mov ebx, progend
  2422 00001D8C E9D1FAFFFF          <1> 		jmp dir
  2423                              <1> 		
  2424 00001D91 05046469736B00      <1> db 5,4,"disk",0
  2425 00001D98 B900000000          <1> 		mov ecx, 0
  2426 00001D9D 8A0D[87010000]      <1> 		mov cl, [DriveNumber]
  2427 00001DA3 C605[011B0000]00    <1> 		mov byte [firsthexshown], 0
  2428 00001DAA E867FDFFFF          <1> 		call showhex
  2429 00001DAF BE[6A580000]        <1> 		mov esi, line
  2430 00001DB4 E80FF3FFFF          <1> 		call print
  2431 00001DB9 BE[BA570000]        <1> 		mov esi, diskfileindex
  2432                              <1> 	diskindexdir:
  2433 00001DBE E805F3FFFF          <1> 		call print
  2434 00001DC3 8B4E05              <1> 		mov ecx, [esi + 5]
  2435 00001DC6 C605[011B0000]03    <1> 		mov byte [firsthexshown], 3
  2436 00001DCD E8E9FDFFFF          <1> 		call showdec
  2437 00001DD2 56                  <1> 		push esi
  2438 00001DD3 BE[6A580000]        <1> 		mov esi, line
  2439 00001DD8 E8EBF2FFFF          <1> 		call print
  2440 00001DDD 5E                  <1> 		pop esi
  2441 00001DDE 81C609000000        <1> 		add esi, 9
  2442 00001DE4 81FE[2C580000]      <1> 		cmp esi, enddiskfileindex
  2443 00001DEA 72D2                <1> 		jb diskindexdir
  2444 00001DEC E938F8FFFF          <1> 		jmp nwcmd
  2445                              <1> 
  2446 00001DF1 0504636C65617200    <1> db 5,4,"clear",0
  2447 00001DF9 E8BBF5FFFF          <1> 	cls:	call clear
  2448 00001DFE E926F8FFFF          <1> 		jmp nwcmd
  2449                              <1> 		
  2450 00001E03 05047761697400      <1> db 5,4,"wait",0
  2451 00001E0A B000                <1> 		mov al, 0
  2452 00001E0C E871F2FFFF          <1> 		call int302
  2453 00001E11 E913F8FFFF          <1> 		jmp nwcmd
  2454                              <1> 
  2455 00001E16 05046563686F00      <1> db 5,4,"echo",0
  2456 00001E1D BE[7A1B0000]        <1> 	echo:	mov esi, buftxt
  2457 00001E22 81C605000000        <1> 		add esi, 5
  2458 00001E28 8A06                <1> 		mov al, [esi]
  2459                              <1> 		;cmp al, '$'
  2460                              <1> 		;je echovr		;;now unnecessary
  2461 00001E2A E899F2FFFF          <1> 		call print
  2462 00001E2F BE[6A580000]        <1> 		mov esi, line
  2463 00001E34 E88FF2FFFF          <1> 		call print
  2464 00001E39 E9EBF7FFFF          <1> 		jmp nwcmd
  2465 00001E3E BB[6F150000]        <1> 	echovr:	mov ebx, variables
  2466 00001E43 BF06000000          <1> 		mov edi, 6
  2467 00001E48 E83A000000          <1> 		call nxtvrech
  2468 00001E4D E952000000          <1> 		jmp prntvr2
  2469 00001E52 B13D                <1> 	echvar:	mov cl, '='
  2470 00001E54 43                  <1> 		inc ebx
  2471 00001E55 8A03                <1> 		mov al, [ebx]
  2472 00001E57 3C00                <1> 		cmp al, 0
  2473 00001E59 742C                <1> 		je nxtvrech
  2474 00001E5B 3C3D                <1> 		cmp al, '='
  2475 00001E5D 7420                <1> 		je nxtvrechb1
  2476 00001E5F BE[7A1B0000]        <1> 		mov esi, buftxt
  2477 00001E64 01FE                <1> 		add esi, edi
  2478 00001E66 E8D7F9FFFF          <1> 		call cndtest
  2479 00001E6B 3C02                <1> 		cmp al, 2
  2480 00001E6D 7431                <1> 		je prntvr
  2481 00001E6F 3C01                <1> 		cmp al, 1
  2482 00001E71 742D                <1> 		je prntvr
  2483 00001E73 BE[7A1B0000]        <1> 		mov esi, buftxt
  2484 00001E78 01FE                <1> 		add esi, edi
  2485 00001E7A E908000000          <1> 		jmp nxtvrech
  2486                              <1> 	nxtvrechb1:
  2487 00001E7F 81EB02000000        <1> 		sub ebx, 2
  2488 00001E85 EBCB                <1> 		jmp echvar
  2489 00001E87 8A03                <1> 	nxtvrech: mov al, [ebx]
  2490 00001E89 3C05                <1> 		cmp al, 5
  2491 00001E8B 740A                <1> 		je nxtvrec2
  2492 00001E8D 43                  <1> 		inc ebx
  2493 00001E8E 81FB[6F1A0000]      <1> 		cmp ebx, varend
  2494 00001E94 72F1                <1> 		jb nxtvrech
  2495 00001E96 C3                  <1> 		ret
  2496 00001E97 43                  <1> 	nxtvrec2: inc ebx
  2497 00001E98 8A03                <1> 		mov al, [ebx]
  2498 00001E9A 3C04                <1> 		cmp al, 4
  2499 00001E9C 74B4                <1> 		je echvar
  2500 00001E9E EBE7                <1> 		jmp nxtvrech
  2501 00001EA0 43                  <1> 	prntvr: inc ebx
  2502 00001EA1 89DE                <1> 		mov esi, ebx
  2503 00001EA3 C3                  <1> 		ret
  2504 00001EA4 E81FF2FFFF          <1> 	prntvr2: call print
  2505 00001EA9 BE[6A580000]        <1> 		mov esi, line
  2506 00001EAE E815F2FFFF          <1> 		call print
  2507 00001EB3 E971F7FFFF          <1> 		jmp nwcmd
  2508                              <1> 		
  2509                              <1> 
  2510 00001EB8 05042300            <1> db 5,4,"#",0
  2511                              <1> 	num:	
  2512 00001EBC E8AEFAFFFF          <1> 		call clearbuffer
  2513 00001EC1 C605[50210000]00    <1> 		mov byte [decimal], 0
  2514 00001EC8 C605[51210000]00    <1> 		mov byte [decimal2], 0
  2515 00001ECF BE[7A1B0000]        <1> 		mov esi, buftxt
  2516 00001ED4 B800000000          <1> 		mov eax, 0
  2517 00001ED9 B900000000          <1> 		mov ecx, 0
  2518 00001EDE BB00000000          <1> 		mov ebx, 0
  2519 00001EE3 8A06                <1> 	num2:	mov al, [esi]
  2520 00001EE5 3C2B                <1> 		cmp al, '+'
  2521 00001EE7 741B                <1> 		je operatorfound
  2522 00001EE9 3C2D                <1> 		cmp al, '-'
  2523 00001EEB 7417                <1> 		je operatorfound
  2524 00001EED 3C2A                <1> 		cmp al, '*'
  2525 00001EEF 7413                <1> 		je operatorfound
  2526 00001EF1 3C2F                <1> 		cmp al, '/'
  2527 00001EF3 740F                <1> 		je operatorfound
  2528 00001EF5 3C5E                <1> 		cmp al, '^'
  2529 00001EF7 740B                <1> 		je operatorfound
  2530 00001EF9 46                  <1> 		inc esi
  2531 00001EFA 3C00                <1> 		cmp al, 0
  2532 00001EFC 0F8427F7FFFF        <1> 		je near nwcmd
  2533 00001F02 EBDF                <1> 		jmp num2
  2534 00001F04 50                  <1> 	operatorfound: push eax
  2535 00001F05 B400                <1> 		mov ah, 0
  2536 00001F07 8826                <1> 		mov [esi], ah
  2537 00001F09 89F7                <1> 		mov edi, esi
  2538 00001F0B 46                  <1> 		inc esi
  2539 00001F0C 8A06                <1> 		mov al, [esi]
  2540                              <1> 		;cmp al, '$'
  2541                              <1> 		;je near varnum1	;;unnecessary
  2542 00001F0E 3C25                <1> 		cmp al, '%'
  2543 00001F10 0F8461000000        <1> 		je near resultnum1
  2544                              <1> 	varnum2: 
  2545 00001F16 57                  <1> 		push edi
  2546 00001F17 E8A3000000          <1> 		call checkdecimal
  2547 00001F1C 5F                  <1> 		pop edi
  2548 00001F1D E833FDFFFF          <1> 		call cnvrttxt
  2549                              <1> 	vrnm2:
  2550 00001F22 89CB                <1> 		mov ebx, ecx
  2551 00001F24 53                  <1> 		push ebx
  2552 00001F25 E845FAFFFF          <1> 		call clearbuffer
  2553 00001F2A BE[7A1B0000]        <1> 		mov esi, buftxt
  2554 00001F2F 89F7                <1> 		mov edi, esi
  2555 00001F31 46                  <1> 		inc esi
  2556 00001F32 8A06                <1> 		mov al, [esi]
  2557                              <1> 		;cmp al, '$'
  2558                              <1> 		;je near varnum3	;;unnecessary
  2559 00001F34 3C25                <1> 		cmp al, '%'
  2560 00001F36 0F844F000000        <1> 		je near resultnum2
  2561                              <1> 	varnum4: 
  2562 00001F3C 57                  <1> 		push edi
  2563 00001F3D E869000000          <1> 		call checkdecimal2
  2564 00001F42 5F                  <1> 		pop edi
  2565 00001F43 E80DFDFFFF          <1> 		call cnvrttxt
  2566                              <1> 	vrnm4:
  2567 00001F48 5B                  <1> 		pop ebx
  2568 00001F49 58                  <1> 		pop eax
  2569 00001F4A 3C2B                <1> 		cmp al, '+'
  2570 00001F4C 0F849B000000        <1> 		je near plusnum
  2571 00001F52 3C2D                <1> 		cmp al, '-'
  2572 00001F54 0F849F000000        <1> 		je near subnum
  2573 00001F5A 3C2A                <1> 		cmp al, '*'
  2574 00001F5C 0F84A3000000        <1> 		je near mulnum
  2575 00001F62 3C2F                <1> 		cmp al, '/'
  2576 00001F64 0F84B1000000        <1> 		je near divnum
  2577 00001F6A 3C5E                <1> 		cmp al, '^'
  2578 00001F6C 0F84CF000000        <1> 		je near expnum
  2579 00001F72 E9B2F6FFFF          <1> 		jmp nwcmd
  2580                              <1> 	resultnum1:
  2581 00001F77 8A0D[52210000]      <1> 		mov cl, [decimalresult]
  2582 00001F7D 880D[50210000]      <1> 		mov [decimal], cl
  2583 00001F83 8B0D[53210000]      <1> 		mov ecx, [result]
  2584 00001F89 EB97                <1> 		jmp vrnm2
  2585                              <1> 	resultnum2:
  2586 00001F8B 8A0D[50210000]      <1> 		mov cl, [decimal]
  2587 00001F91 880D[51210000]      <1> 		mov [decimal2], cl
  2588 00001F97 8A0D[52210000]      <1> 		mov cl, [decimalresult]
  2589 00001F9D 880D[50210000]      <1> 		mov [decimal], cl
  2590 00001FA3 8B0D[53210000]      <1> 		mov ecx, [result]
  2591 00001FA9 EB9D                <1> 		jmp vrnm4
  2592                              <1> ;	varnum1: sub esi, buftxt
  2593                              <1> ;		mov edi, esi
  2594                              <1> ;		add esi, buftxt
  2595                              <1> ;		inc edi
  2596                              <1> ;		mov ebx, variables
  2597                              <1> ;		call nxtvrech
  2598                              <1> ;		mov edi, esi
  2599                              <1> ;		dec edi
  2600                              <1> ;		jmp varnum2
  2601                              <1> ;	varnum3: sub esi, buftxt
  2602                              <1> ;		mov edi, esi
  2603                              <1> ;		add esi, buftxt
  2604                              <1> ;		inc edi
  2605                              <1> ;		mov ebx, variables
  2606                              <1> ;		call nxtvrech
  2607                              <1> ;		mov edi, esi
  2608                              <1> ;		dec edi
  2609                              <1> ;		jmp varnum4
  2610                              <1> 	checkdecimal2:
  2611 00001FAB 8A25[50210000]      <1> 		mov ah, [decimal]
  2612 00001FB1 8825[51210000]      <1> 		mov [decimal2], ah
  2613 00001FB7 B400                <1> 		mov ah, 0
  2614 00001FB9 8825[50210000]      <1> 		mov [decimal], ah
  2615                              <1> 	checkdecimal:
  2616 00001FBF 89F7                <1> 		mov edi, esi
  2617                              <1> 	chkdec1:
  2618 00001FC1 8A07                <1> 		mov al, [edi]
  2619 00001FC3 3C2E                <1> 		cmp al, '.'
  2620 00001FC5 0F840B000000        <1> 		je near fnddec
  2621 00001FCB 3C00                <1> 		cmp al, 0
  2622 00001FCD 0F8419000000        <1> 		je near nodecimal
  2623 00001FD3 47                  <1> 		inc edi
  2624 00001FD4 EBEB                <1> 		jmp chkdec1
  2625                              <1> 	fnddec:
  2626 00001FD6 8A4701              <1> 		mov al, [edi + 1]
  2627 00001FD9 8807                <1> 		mov [edi], al
  2628 00001FDB 3C00                <1> 		cmp al, 0
  2629 00001FDD 0F8409000000        <1> 		je near nodecimal
  2630 00001FE3 FE05[50210000]      <1> 		inc byte [decimal]
  2631 00001FE9 47                  <1> 		inc edi
  2632 00001FEA EBEA                <1> 		jmp fnddec
  2633                              <1> 	nodecimal:
  2634 00001FEC C3                  <1> 		ret
  2635                              <1> 	plusnum:
  2636 00001FED E81C010000          <1> 		call decaddfix
  2637 00001FF2 01D9                <1> 		add ecx, ebx
  2638 00001FF4 E991000000          <1> 		jmp retnum
  2639                              <1> 	subnum:
  2640 00001FF9 E810010000          <1> 		call decaddfix
  2641 00001FFE 29D9                <1> 		sub ecx, ebx
  2642 00002000 E985000000          <1> 		jmp retnum
  2643                              <1> 	mulnum:
  2644 00002005 A0[51210000]        <1> 		mov al, [decimal2]
  2645 0000200A 0005[50210000]      <1> 		add [decimal], al
  2646 00002010 89C8                <1> 		mov eax, ecx
  2647 00002012 F7E3                <1> 		mul ebx
  2648 00002014 89C1                <1> 		mov ecx, eax
  2649 00002016 E96F000000          <1> 		jmp retnum
  2650                              <1> 	divnum:
  2651 0000201B E8EE000000          <1> 		call decaddfix
  2652 00002020 B000                <1> 		mov al, 0
  2653 00002022 A2[50210000]        <1> 		mov [decimal], al
  2654 00002027 6689C8              <1> 		mov ax, cx
  2655 0000202A 80FB00              <1> 		cmp bl, 0
  2656 0000202D 0F8457000000        <1> 		je near retnum
  2657 00002033 F6F3                <1> 		div bl
  2658 00002035 B900000000          <1> 		mov ecx, 0
  2659 0000203A 88C1                <1> 		mov cl, al
  2660 0000203C E949000000          <1> 		jmp retnum
  2661                              <1> 	expnum:
  2662 00002041 8A15[50210000]      <1> 		mov dl, [decimal]
  2663 00002047 8815[51210000]      <1> 		mov [decimal2], dl
  2664 0000204D BA00000000          <1> 		mov edx, 0
  2665 00002052 89C8                <1> 		mov eax, ecx
  2666 00002054 89D9                <1> 		mov ecx, ebx
  2667 00002056 89C3                <1> 		mov ebx, eax
  2668 00002058 81F900000000        <1> 		cmp ecx, 0
  2669 0000205E 7425                <1> 		je noexpnum
  2670 00002060 49                  <1> 		dec ecx
  2671 00002061 81F900000000        <1> 		cmp ecx, 0
  2672 00002067 7415                <1> 		je noexpnumlp
  2673 00002069 F7E3                <1> 	expnumlp: mul ebx
  2674 0000206B 8A15[51210000]      <1> 		mov dl, [decimal2]
  2675 00002071 0015[50210000]      <1> 		add [decimal], dl
  2676 00002077 BA00000000          <1> 		mov edx, 0
  2677 0000207C E2EB                <1> 		loop expnumlp
  2678                              <1> 	noexpnumlp:
  2679 0000207E 89C1                <1> 		mov ecx, eax
  2680 00002080 E905000000          <1> 		jmp retnum
  2681                              <1> 	noexpnum:
  2682 00002085 B901000000          <1> 		mov ecx, 1
  2683                              <1> 	retnum: 
  2684 0000208A BE[8E1C0000]        <1> 		mov esi, numbuf
  2685 0000208F 890D[53210000]      <1> 		mov [result], ecx
  2686 00002095 E8EAF8FFFF          <1> 		call convert
  2687 0000209A BE[8E1C0000]        <1> 		mov esi, numbuf
  2688 0000209F 8A25[50210000]      <1> 		mov ah, [decimal]
  2689 000020A5 8825[52210000]      <1> 		mov [decimalresult], ah
  2690 000020AB 80FC00              <1> 		cmp ah, 0
  2691 000020AE 0F8425000000        <1> 		je near noputdecimal
  2692                              <1> 	putdecimal:
  2693 000020B4 4E                  <1> 		dec esi
  2694 000020B5 FECC                <1> 		dec ah
  2695 000020B7 80FC00              <1> 		cmp ah, 0
  2696 000020BA 0F87F4FFFFFF        <1> 		ja near putdecimal
  2697 000020C0 4E                  <1> 		dec esi
  2698 000020C1 8A06                <1> 		mov al, [esi]
  2699 000020C3 C6062E              <1> 		mov byte [esi], '.'
  2700                              <1> 	decputloop:
  2701 000020C6 4E                  <1> 		dec esi
  2702 000020C7 8A26                <1> 		mov ah, [esi]
  2703 000020C9 8806                <1> 		mov [esi], al
  2704 000020CB 88E0                <1> 		mov al, ah
  2705 000020CD 81FE[7A1C0000]      <1> 		cmp esi, buf2
  2706 000020D3 0F87EDFFFFFF        <1> 		ja near decputloop
  2707                              <1> 	noputdecimal:
  2708 000020D9 BE[7A1C0000]        <1> 		mov esi, buf2
  2709 000020DE E809000000          <1> 		call chkadd
  2710 000020E3 E941F5FFFF          <1> 		jmp nwcmd
  2711 000020E8 00000000            <1> edxnumbuf dw 0,0
  2712 000020EC 8A06                <1> 	chkadd: mov al, [esi]
  2713 000020EE 3C30                <1> 		cmp al, '0'
  2714 000020F0 750C                <1> 		jne dnadd
  2715 000020F2 46                  <1> 		inc esi
  2716 000020F3 81FE[8E1C0000]      <1> 		cmp esi, numbuf
  2717 000020F9 7402                <1> 		je dnaddm1
  2718 000020FB EBEF                <1> 		jmp chkadd
  2719 000020FD 4E                  <1> 	dnaddm1: dec esi
  2720 000020FE E8C5EFFFFF          <1> 	dnadd:	call print
  2721 00002103 BE[6A580000]        <1> 		mov esi, line
  2722 00002108 E8BBEFFFFF          <1> 		call print
  2723 0000210D C3                  <1> 		ret
  2724                              <1> 		
  2725                              <1> 	decaddfix:
  2726 0000210E A0[51210000]        <1> 		mov al, [decimal2]
  2727 00002113 8A25[50210000]      <1> 		mov ah, [decimal]
  2728 00002119 38E0                <1> 		cmp al, ah
  2729 0000211B 7432                <1> 		je gooddecadd
  2730 0000211D 38E0                <1> 		cmp al, ah
  2731 0000211F 721A                <1> 		jb lowdecadd
  2732                              <1> 	highdecadd:
  2733 00002121 FEC4                <1> 		inc ah
  2734 00002123 89CA                <1> 		mov edx, ecx
  2735 00002125 C1E103              <1> 		shl ecx, 3
  2736 00002128 01D1                <1> 		add ecx, edx
  2737 0000212A 01D1                <1> 		add ecx, edx
  2738 0000212C 38E0                <1> 		cmp al, ah
  2739 0000212E 77F1                <1> 		ja highdecadd
  2740 00002130 8825[50210000]      <1> 		mov [decimal], ah
  2741 00002136 E914000000          <1> 		jmp gooddecadd
  2742                              <1> 	lowdecadd:
  2743 0000213B FEC0                <1> 		inc al
  2744 0000213D 89DA                <1> 		mov edx, ebx
  2745 0000213F C1E303              <1> 		shl ebx, 3
  2746 00002142 01D3                <1> 		add ebx, edx
  2747 00002144 01D3                <1> 		add ebx, edx
  2748 00002146 38E0                <1> 		cmp al, ah
  2749 00002148 72F1                <1> 		jb lowdecadd
  2750 0000214A A2[50210000]        <1> 		mov [decimal], al
  2751                              <1> 	gooddecadd:
  2752 0000214F C3                  <1> 		ret
  2753                              <1> 		
  2754 00002150 00                  <1> decimal db 0
  2755 00002151 00                  <1> decimal2 db 0
  2756 00002152 00                  <1> decimalresult db 0
  2757 00002153 00000000            <1> result db 0,0,0,0
  2758                              <1> 	
  2759 00002157 05042500            <1> db 5,4,"%",0
  2760 0000215B E80FF8FFFF          <1> 	ans:	call clearbuffer
  2761 00002160 8B0D[53210000]      <1> 		mov ecx, [result]
  2762 00002166 BE[7A1C0000]        <1> 		mov esi, buf2
  2763 0000216B E814F8FFFF          <1> 		call convert
  2764 00002170 BE[7A1C0000]        <1> 		mov esi, buf2
  2765 00002175 E872FFFFFF          <1> 		call chkadd
  2766 0000217A E9AAF4FFFF          <1> 		jmp nwcmd
  2767                              <1> 
  2768 0000217F 05042400            <1> db 5,4,"$",0
  2769 00002183 BE[7A1B0000]        <1> var: mov esi, buftxt
  2770 00002188 BB[6F150000]        <1> 	mov ebx, variables
  2771 0000218D 8A06                <1> lkeq:	mov al, [esi]
  2772 0000218F 3C3D                <1> 	cmp al, '='
  2773 00002191 741F                <1> 	je eqfnd	;is there an '=' sign?
  2774 00002193 3C00                <1> 	cmp al, 0
  2775 00002195 7403                <1> 	je echovars
  2776 00002197 46                  <1> 	inc esi
  2777 00002198 EBF3                <1> 	jmp lkeq
  2778 0000219A BE[6F150000]        <1> echovars: mov esi, variables
  2779 0000219F BB[6F1A0000]        <1> 	mov ebx, varend
  2780 000021A4 B105                <1> 	mov cl, 5
  2781 000021A6 B504                <1> 	mov ch, 4
  2782 000021A8 E861F7FFFF          <1> 	call array
  2783 000021AD E977F4FFFF          <1> 	jmp nwcmd
  2784 000021B2 46                  <1> eqfnd:	inc esi
  2785 000021B3 8A06                <1> 	mov al, [esi]
  2786 000021B5 3C00                <1> 	cmp al, 0
  2787 000021B7 740F                <1> 	je readvar
  2788 000021B9 BE[7A1B0000]        <1> 	mov esi, buftxt
  2789 000021BE BB[6F150000]        <1> 	mov ebx, variables
  2790 000021C3 E91E000000          <1> 	jmp seek
  2791                              <1> readvar:
  2792 000021C8 B00D                <1> 	mov al, 13
  2793 000021CA 66BB0700            <1> 	mov bx, 7
  2794 000021CE C605[18110000]00    <1> 	mov byte [commandedit], 0
  2795 000021D5 E847EFFFFF          <1> 	call int305
  2796 000021DA BE[6A580000]        <1> 	mov esi, line
  2797 000021DF E8E4EEFFFF          <1> 	call print
  2798 000021E4 EB9D                <1> 	jmp var
  2799 000021E6 668B03              <1> seek:	mov ax, [ebx]
  2800 000021E9 B105                <1> 	mov cl, 5
  2801 000021EB B504                <1> 	mov ch, 4
  2802 000021ED 663D0000            <1> 	cmp ax, 0
  2803 000021F1 0F8459000000        <1> 	je near save
  2804 000021F7 6639C8              <1> 	cmp ax, cx
  2805 000021FA 7403                <1> 	je skfnd
  2806 000021FC 43                  <1> 	inc ebx
  2807 000021FD EBE7                <1> 	jmp seek
  2808 000021FF BE[7A1B0000]        <1> skfnd:	mov esi, buftxt
  2809 00002204 46                  <1> 	inc esi
  2810 00002205 81C302000000        <1> 	add ebx, 2
  2811 0000220B 89DF                <1> 	mov edi, ebx
  2812 0000220D B13D                <1> 	mov cl, '='
  2813 0000220F E82EF6FFFF          <1> 	call cndtest
  2814 00002214 3C01                <1> 	cmp al, 1	
  2815 00002216 7417                <1> 	je varfnd
  2816 00002218 89FB                <1> 	mov ebx, edi
  2817 0000221A BE[7A1B0000]        <1> 	mov esi, buftxt
  2818 0000221F 668B03              <1> 	mov ax, [ebx]
  2819 00002222 663D0000            <1> 	cmp ax, 0
  2820 00002226 0F8424000000        <1> 	je near save
  2821 0000222C 43                  <1> 	inc ebx
  2822 0000222D EBB7                <1> 	jmp seek
  2823 0000222F 8A03                <1> varfnd:	mov al, [ebx]
  2824 00002231 3C04                <1> 	cmp al, 4
  2825 00002233 7404                <1> 	je save2
  2826 00002235 4B                  <1> 	dec ebx
  2827 00002236 4E                  <1> 	dec esi
  2828 00002237 EBF6                <1> 	jmp varfnd
  2829 00002239 4B                  <1> save2:	dec ebx
  2830 0000223A 4E                  <1> 	dec esi
  2831 0000223B 8A03                <1> 	mov al, [ebx]
  2832 0000223D 3C05                <1> 	cmp al, 5
  2833 0000223F 7402                <1> 	je remove
  2834 00002241 EBEC                <1> 	jmp varfnd
  2835 00002243 8A03                <1> remove: mov al, [ebx]
  2836 00002245 3C00                <1> 	cmp al, 0
  2837 00002247 749D                <1> 	je seek
  2838 00002249 B000                <1> 	mov al, 0
  2839 0000224B 8803                <1> 	mov [ebx], al
  2840 0000224D 43                  <1> 	inc ebx
  2841 0000224E EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2842 00002250 BE[7A1B0000]        <1> save:	mov esi, buftxt
  2843 00002255 43                  <1> 	inc ebx
  2844 00002256 B005                <1> 	mov al, 5
  2845 00002258 B404                <1> 	mov ah, 4
  2846 0000225A 668903              <1> 	mov [ebx], ax
  2847 0000225D 43                  <1> 	inc ebx
  2848 0000225E 43                  <1> svhere:	inc ebx
  2849 0000225F 46                  <1> 	inc esi
  2850 00002260 8A06                <1> 	mov al, [esi]
  2851 00002262 3C00                <1> 	cmp al, 0
  2852 00002264 0F8442000000        <1> 	je near svdone
  2853 0000226A 3C25                <1> 	cmp al, '%'
  2854 0000226C 7404                <1> 	je ans2
  2855 0000226E 8803                <1> 	mov [ebx], al	
  2856 00002270 EBEC                <1> 	jmp svhere
  2857 00002272 56                  <1> ans2:	push esi
  2858 00002273 BE[7A1C0000]        <1> 	mov esi, buf2
  2859 00002278 E823000000          <1> 	call ansfnd
  2860 0000227D E803000000          <1> 	call anscp
  2861 00002282 5E                  <1> 	pop esi
  2862 00002283 EBD9                <1> 	jmp svhere
  2863 00002285 8A06                <1> anscp:	mov al, [esi]
  2864 00002287 8803                <1> 	mov [ebx], al
  2865 00002289 81FE[8E1C0000]      <1> 	cmp esi, numbuf
  2866 0000228F 74CD                <1> 	je svhere
  2867 00002291 3C00                <1> 	cmp al, 0
  2868 00002293 74C9                <1> 	je svhere
  2869 00002295 43                  <1> 	inc ebx
  2870 00002296 46                  <1> 	inc esi
  2871 00002297 EBEC                <1> 	jmp anscp
  2872 00002299 5E                  <1> ansnf:	pop esi
  2873 0000229A 8A06                <1> 	mov al, [esi]
  2874 0000229C 8803                <1> 	mov [ebx], al
  2875 0000229E EBBE                <1> 	jmp svhere
  2876 000022A0 46                  <1> ansfnd:	inc esi
  2877 000022A1 8A06                <1> 	mov al, [esi]
  2878 000022A3 3C00                <1> 	cmp al, 0
  2879 000022A5 74F2                <1> 	je ansnf
  2880 000022A7 3C30                <1> 	cmp al, '0'
  2881 000022A9 74F5                <1> 	je ansfnd
  2882 000022AB C3                  <1> 	ret
  2883 000022AC B000                <1> svdone:	mov al, 0
  2884 000022AE 8803                <1> 	mov [ebx], al
  2885 000022B0 E974F3FFFF          <1> 	jmp nwcmd
  2886                              <1> 	
  2887 000022B5 05046C6F676F757400  <1> 	db 5,4,"logout",0
  2888                              <1> logout:
  2889 000022BE E94AF2FFFF          <1> 	jmp os
  2890                              <1> 	
  2891 000022C3 05047265626F6F7400  <1> 	db 5,4,"reboot",0
  2892                              <1> rebootcomp:
  2893 000022CC E987DFFFFF          <1> 	jmp coldboot
  2894                              <1> 
  2895 000022D1 050473687574646F77- <1> 	db 5,4,"shutdown",0
  2896 000022DA 6E00                <1>
  2897                              <1> shutdowncomp:
  2898 000022DC E94DDFFFFF          <1> 	jmp shutdown
  2899                              <1> 	
  2900 000022E1 05042E2F00          <1> 	db 5,4,"./",0
  2901                              <1> rundiskprog:
  2902 000022E6 BF[7A1B0000]        <1> 	mov edi, buftxt
  2903 000022EB 81C702000000        <1> 	add edi, 2
  2904 000022F1 BE00004000          <1> 	mov esi, 0x400000
  2905 000022F6 E8572C0000          <1> 	call loadfile
  2906 000022FB 81FA94010000        <1> 	cmp edx, 404
  2907 00002301 7414                <1> 	je noprogfound
  2908 00002303 BB00004000          <1> 	mov ebx, 0x400000
  2909 00002308 66813B4558          <1> 	cmp word [ebx], "EX"
  2910 0000230D 7531                <1> 	jne progbatchfound
  2911 0000230F 81C302000000        <1> 	add ebx, 2
  2912 00002315 FFE3                <1> 	jmp ebx
  2913                              <1> noprogfound:
  2914 00002317 BE[31580000]        <1> 	mov esi, notfound1
  2915 0000231C E8A7EDFFFF          <1> 	call print
  2916 00002321 BE[7A1B0000]        <1> 	mov esi, buftxt
  2917 00002326 81C602000000        <1> 	add esi, 2
  2918 0000232C E897EDFFFF          <1> 	call print
  2919 00002331 BE[3B580000]        <1> 	mov esi, notfound2
  2920 00002336 E88DEDFFFF          <1> 	call print
  2921 0000233B E9E9F2FFFF          <1> 	jmp nwcmd
  2922                              <1> progbatchfound:
  2923 00002340 BF00004000          <1> 		mov edi, 0x400000
  2924 00002345 C605[69150000]01    <1> 		mov byte [BATCHISON], 1
  2925                              <1> 	batchrunloop:
  2926 0000234C E8ABF2FFFF          <1> 		call buftxtclear
  2927 00002351 BE[7A1B0000]        <1> 		mov esi, buftxt
  2928                              <1> 	batchrunloop2:
  2929 00002356 B10D                <1> 		mov cl, 13
  2930 00002358 B50A                <1> 		mov ch, 10
  2931 0000235A 66390F              <1> 		cmp [edi], cx
  2932 0000235D 0F841E000000        <1> 		je near nxtbatchrunline
  2933 00002363 66C1C108            <1> 		rol cx, 8
  2934 00002367 66390F              <1> 		cmp [edi], cx
  2935 0000236A 0F8411000000        <1> 		je near nxtbatchrunline
  2936 00002370 803F00              <1> 		cmp byte [edi], 0
  2937 00002373 0F8408000000        <1> 		je near nxtbatchrunline
  2938 00002379 8A07                <1> 		mov al, [edi]
  2939 0000237B 8806                <1> 		mov [esi], al
  2940 0000237D 46                  <1> 		inc esi
  2941 0000237E 47                  <1> 		inc edi
  2942 0000237F EBD5                <1> 		jmp batchrunloop2
  2943                              <1> 	nxtbatchrunline:
  2944 00002381 81C702000000        <1> 		add edi, 2
  2945 00002387 893D[E6230000]      <1> 		mov [batchedi], edi
  2946 0000238D C60600              <1> 		mov byte [esi], 0
  2947 00002390 BE[7A1B0000]        <1> 		mov esi, buftxt
  2948 00002395 803E00              <1> 		cmp byte [esi], 0
  2949 00002398 0F843C000000        <1> 		je near nobatchfoundrun
  2950 0000239E BB00000000          <1> 		mov ebx, 0
  2951 000023A3 8A1D[00150000]      <1> 		mov bl, [IFON]
  2952 000023A9 80FB01              <1> 		cmp bl, 1
  2953 000023AC 0F8338000000        <1> 		jae near iftestbatch
  2954                              <1> 	doneiftest:
  2955 000023B2 803D[AD240000]00    <1> 		cmp byte [runnextline], 0
  2956 000023B9 0F8405000000        <1> 		je near noruniftest
  2957 000023BF E8CBF3FFFF          <1> 		call progtest
  2958                              <1> 	noruniftest:
  2959 000023C4 C605[AD240000]01    <1> 		mov byte [runnextline], 1
  2960 000023CB 8B3D[E6230000]      <1> 		mov edi, [batchedi]
  2961 000023D1 803F00              <1> 		cmp byte [edi], 0
  2962 000023D4 0F8572FFFFFF        <1> 		jne near batchrunloop
  2963                              <1> 	nobatchfoundrun:
  2964 000023DA C605[69150000]00    <1> 		mov byte [BATCHISON], 0
  2965 000023E1 E943F2FFFF          <1> 		jmp nwcmd
  2966                              <1> 	
  2967 000023E6 00000000            <1> batchedi dd 0	
  2968                              <1> 	
  2969                              <1> 	iftestbatch:
  2970 000023EA BE[01150000]        <1> 		mov esi, IFTRUE
  2971 000023EF 01DE                <1> 		add esi, ebx
  2972 000023F1 803E00              <1> 		cmp byte [esi], 0
  2973 000023F4 0F85B8FFFFFF        <1> 		jne near doneiftest
  2974 000023FA 881D[AE240000]      <1> 		mov [iffalsebuf], bl
  2975 00002400 803D[6A150000]01    <1> 		cmp byte [LOOPON], 1
  2976 00002407 750B                <1> 		jne fifindbatch
  2977 00002409 8B3D[6B150000]      <1> 		mov edi, [LOOPPOS]
  2978 0000240F E938FFFFFF          <1> 		jmp batchrunloop
  2979                              <1> 	fifindbatch:
  2980 00002414 66B96966            <1> 		mov cx, "if"
  2981 00002418 66B86669            <1> 		mov ax, "fi"
  2982 0000241C 663907              <1> 		cmp [edi], ax
  2983 0000241F 0F841A000000        <1> 		je near fifoundbatch
  2984 00002425 66390F              <1> 		cmp [edi], cx
  2985 00002428 0F8462000000        <1> 		je near iffoundbatch
  2986 0000242E 803F00              <1> 		cmp byte [edi], 0
  2987 00002431 0F8408000000        <1> 		je near fifoundbatch
  2988 00002437 81C702000000        <1> 		add edi, 2
  2989 0000243D EBD5                <1> 		jmp fifindbatch
  2990                              <1> 	fifoundbatch:
  2991 0000243F 81C702000000        <1> 		add edi, 2
  2992 00002445 B00D                <1> 		mov al, 13
  2993 00002447 B40A                <1> 		mov ah, 10
  2994 00002449 663907              <1> 		cmp [edi], ax
  2995 0000244C 7414                <1> 		je goodfibatch
  2996 0000244E 66C1C008            <1> 		rol ax, 8
  2997 00002452 663907              <1> 		cmp [edi], ax
  2998 00002455 740B                <1> 		je goodfibatch
  2999 00002457 803F00              <1> 		cmp byte [edi], 0
  3000 0000245A 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  3001 00002460 EBB2                <1> 		jmp fifindbatch
  3002                              <1> 	goodfibatch:
  3003 00002462 B001                <1> 		mov al, 1
  3004 00002464 2805[00150000]      <1> 		sub [IFON], al 
  3005 0000246A A0[00150000]        <1> 		mov al, [IFON]
  3006 0000246F 8A1D[AE240000]      <1> 		mov bl, [iffalsebuf]
  3007 00002475 38D8                <1> 		cmp al, bl
  3008 00002477 779B                <1> 		ja fifindbatch
  3009 00002479 BE[7A1B0000]        <1> 		mov esi, buftxt
  3010 0000247E 81EF02000000        <1> 		sub edi, 2
  3011 00002484 C605[AD240000]00    <1> 		mov byte [runnextline], 0
  3012 0000248B E9BCFEFFFF          <1> 		jmp batchrunloop
  3013                              <1> 	iffoundbatch:
  3014 00002490 B020                <1> 		mov al, ' '
  3015 00002492 81C702000000        <1> 		add edi, 2
  3016 00002498 3807                <1> 		cmp [edi], al
  3017 0000249A 0F8574FFFFFF        <1> 		jne near fifindbatch
  3018 000024A0 B001                <1> 		mov al, 1
  3019 000024A2 0005[00150000]      <1> 		add [IFON], al
  3020 000024A8 E967FFFFFF          <1> 		jmp fifindbatch
  3021                              <1> 		
  3022                              <1> 		
  3023 000024AD 01                  <1> runnextline db 1
  3024 000024AE 00                  <1> iffalsebuf db 0
  3025                              <1> 
  3026 000024AF E975F1FFFF          <1> notbatch: jmp nwcmd
  3027                              <1> 
  3028 000024B4 05047768696C6500    <1> 	db 5,4,"while",0
  3029 000024BC B000                <1> whilecmd:  mov al, 0
  3030 000024BE 3805[69150000]      <1> 	cmp [BATCHISON], al
  3031 000024C4 0F84E5FFFFFF        <1> 	je near notbatch
  3032 000024CA 8B35[65150000]      <1> 	MOV esi, [BATCHPOS]
  3033 000024D0 4E                  <1> whilefnd: dec esi
  3034 000024D1 8A06                <1> 	mov al, [esi]
  3035 000024D3 3C0A                <1> 	cmp al, 10
  3036 000024D5 0F8412000000        <1> 	je near whilefnd2
  3037 000024DB 3C0D                <1> 	cmp al, 13
  3038 000024DD 0F840A000000        <1> 	je near whilefnd2
  3039 000024E3 3C00                <1> 	cmp al, 0
  3040 000024E5 0F8402000000        <1> 	je near whilefnd2
  3041 000024EB EBE3                <1> 	jmp whilefnd
  3042                              <1> whilefnd2:
  3043 000024ED 8935[6B150000]      <1> 	mov [LOOPPOS], esi
  3044 000024F3 C605[6A150000]01    <1> 	mov BYTE [LOOPON], 1
  3045 000024FA 0005[00150000]      <1> 	add [IFON], al
  3046 00002500 BE[7A1B0000]        <1> 	mov esi, buftxt
  3047 00002505 BB[7A1B0000]        <1> 	mov ebx, buftxt
  3048 0000250A 81C306000000        <1> 	add ebx, 6
  3049 00002510 E923000000          <1> 	jmp chkeqsn
  3050                              <1> 
  3051                              <1> 
  3052 00002515 0504696600          <1> 	db 5,4,"if",0
  3053 0000251A B000                <1> ifcmd:	mov al, 0
  3054 0000251C 3805[69150000]      <1> 	cmp [BATCHISON], al
  3055 00002522 0F8487FFFFFF        <1> 	je near notbatch
  3056 00002528 BE[7A1B0000]        <1> 	mov esi, buftxt
  3057 0000252D BB[7A1B0000]        <1> 	mov ebx, buftxt
  3058 00002532 81C303000000        <1> 	add ebx, 3
  3059 00002538 8A06                <1> chkeqsn: mov al, [esi]
  3060 0000253A 3C00                <1> 	cmp al, 0
  3061 0000253C 0F846DFFFFFF        <1> 	je near notbatch
  3062 00002542 3C3D                <1> 	cmp al, '='
  3063 00002544 0F8403000000        <1> 	je near chkeqdn
  3064 0000254A 46                  <1> 	inc esi
  3065 0000254B EBEB                <1> 	jmp chkeqsn
  3066 0000254D B000                <1> chkeqdn: mov al, 0 
  3067 0000254F 8806                <1> 	mov [esi], al
  3068 00002551 46                  <1> 	inc esi
  3069 00002552 8A06                <1> 	mov al, [esi]
  3070 00002554 3C24                <1> 	cmp al, '$'
  3071 00002556 0F8462000000        <1> 	je near ifvar1
  3072 0000255C 8A03                <1> ifvar2: mov al, [ebx]
  3073 0000255E 3C24                <1> 	cmp al, '$'
  3074 00002560 0F847B000000        <1> 	je near ifvar3
  3075 00002566 E89DF2FFFF          <1> ifvar4:	call tester
  3076 0000256B 3C01                <1> 	cmp al, 1
  3077 0000256D 0F8405000000        <1> 	je near trueif
  3078 00002573 E923000000          <1> 	jmp falseif
  3079 00002578 B800000000          <1> trueif:	mov eax, 0
  3080 0000257D A0[00150000]        <1> 	mov al, [IFON]
  3081 00002582 FEC0                <1> 	inc al
  3082 00002584 A2[00150000]        <1> 	mov [IFON], al
  3083 00002589 B400                <1> 	mov ah, 0
  3084 0000258B BE[01150000]        <1> 	mov esi, IFTRUE
  3085 00002590 01C6                <1> 	add esi, eax
  3086 00002592 B401                <1> 	mov ah, 1
  3087 00002594 8826                <1> 	mov [esi], ah
  3088 00002596 E98EF0FFFF          <1> 	jmp nwcmd
  3089 0000259B B800000000          <1> falseif: mov eax, 0
  3090 000025A0 A0[00150000]        <1> 	mov al, [IFON]
  3091 000025A5 FEC0                <1> 	inc al
  3092 000025A7 A2[00150000]        <1> 	mov [IFON], al
  3093 000025AC B400                <1> 	mov ah, 0
  3094 000025AE BE[01150000]        <1> 	mov esi, IFTRUE
  3095 000025B3 01C6                <1> 	add esi, eax
  3096 000025B5 B400                <1> 	mov ah, 0
  3097 000025B7 8826                <1> 	mov [esi], ah
  3098 000025B9 E96BF0FFFF          <1> 	jmp nwcmd
  3099 000025BE 89F7                <1> ifvar1: mov edi, esi
  3100 000025C0 81EF[7A1B0000]      <1> 	sub edi, buftxt
  3101 000025C6 47                  <1> 	inc edi
  3102 000025C7 BB[6F150000]        <1> 	mov ebx, variables
  3103 000025CC E8B6F8FFFF          <1> 	call nxtvrech
  3104 000025D1 BB[7A1B0000]        <1> 	mov ebx, buftxt
  3105 000025D6 81C303000000        <1> 	add ebx, 3
  3106 000025DC E97BFFFFFF          <1> 	jmp ifvar2
  3107 000025E1 8935[01260000]      <1> ifvar3: mov [esiif], esi
  3108 000025E7 BF04000000          <1> 	mov edi, 4
  3109 000025EC BB[6F150000]        <1> 	mov ebx, variables
  3110 000025F1 E891F8FFFF          <1> 	call nxtvrech
  3111 000025F6 8B35[01260000]      <1> 	mov esi, [esiif]
  3112 000025FC E965FFFFFF          <1> 	jmp ifvar4
  3113                              <1> 
  3114 00002601 00000000            <1> esiif dd 0
  3115                              <1> 	
  3116 00002605 0504656C736500      <1> 	db 5,4,"else",0
  3117 0000260C B800000000          <1> elsecmd:	mov eax, 0
  3118 00002611 A0[00150000]        <1> 	mov al, [IFON]
  3119 00002616 BE[01150000]        <1> 	mov esi, IFTRUE
  3120 0000261B 01C6                <1> 	add esi, eax
  3121 0000261D 8A06                <1> 	mov al, [esi]
  3122 0000261F 3C00                <1> 	cmp al, 0		
  3123 00002621 7409                <1> 	je else1
  3124 00002623 3C01                <1> 	cmp al, 1
  3125 00002625 740E                <1> 	je else2
  3126 00002627 E9FDEFFFFF          <1> 	jmp nwcmd
  3127 0000262C B001                <1> else1:  mov al, 1
  3128 0000262E 8806                <1> 	mov [esi], al
  3129 00002630 E9F4EFFFFF          <1> 	jmp nwcmd
  3130 00002635 B000                <1> else2:	mov al, 0
  3131 00002637 8806                <1> 	mov [esi], al
  3132 00002639 E9EBEFFFFF          <1> 	jmp nwcmd
  3133                              <1> 
  3134 0000263E 05046C6F6F7000      <1> 	db 5,4,"loop",0
  3135 00002645 3805[6A150000]      <1> 	cmp [LOOPON], al
  3136 0000264B 0F8405000000        <1> 	je near filoop
  3137 00002651 E9D3EFFFFF          <1> 	jmp nwcmd
  3138 00002656 8B35[6B150000]      <1> filoop: mov esi, [LOOPPOS]
  3139 0000265C 8935[65150000]      <1> 	mov [BATCHPOS], esi
  3140 00002662 E9C2EFFFFF          <1> 	jmp nwcmd
  3141                              <1> 	
  3142                              <1> 
  3143 00002667 0504666900          <1> 	db 5,4,"fi",0
  3144 0000266C B000                <1> 	mov al, 0
  3145 0000266E 3805[69150000]      <1> 	cmp [BATCHISON], al
  3146 00002674 0F8435FEFFFF        <1> 	je near notbatch
  3147 0000267A B001                <1> fi:	mov al, 1
  3148 0000267C 2805[00150000]      <1> 	sub [IFON],al
  3149 00002682 E9A2EFFFFF          <1> 	jmp nwcmd
  3150                              <1> 
  3151 00002687 050473746F7000      <1> 	db 5,4,"stop",0
  3152 0000268E B000                <1> stop:	mov al, 0
  3153 00002690 A2[69150000]        <1> 	mov [BATCHISON], al
  3154 00002695 A2[00150000]        <1> 	mov [IFON], al
  3155 0000269A A2[01150000]        <1> 	mov [IFTRUE], al
  3156 0000269F A2[6A150000]        <1> 	mov [LOOPON], al
  3157 000026A4 E980EFFFFF          <1> 	jmp nwcmd
  3158                                      %include 'source/programs.asm'
  3159                              <1> ;db 5,4,"internet",0
  3160                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  3161                              <1> 							;;^^used to^^, now tests int 30h functions		
  3162 000026A9 B403                <1> 		mov ah, 3
  3163 000026AB CD30                <1> 		int 30h
  3164 000026AD B401                <1> 		mov ah, 1
  3165                              <1> 		;mov esi, datmsg
  3166 000026AF 66BB0700            <1> 		mov bx, 7
  3167 000026B3 B000                <1> 		mov al, 0
  3168 000026B5 CD30                <1> 		int 30h
  3169                              <1> 	    ;jmp packettest
  3170 000026B7 E96DEFFFFF          <1> 		jmp nwcmd
  3171                              <1> ;datmsg: db "Internet has not been implemented yet.",10,13,0
  3172                              <1> 	
  3173 000026BC 050474687265616473- <1> db 5,4,"threads",0
  3174 000026C5 00                  <1>
  3175 000026C6 90                  <1> 	nop
  3176 000026C7 90                  <1> 	nop
  3177 000026C8 E9762A0000          <1> 	jmp threadstarttest
  3178 000026CD E957EFFFFF          <1> 	jmp nwcmd
  3179                              <1> 	
  3180 000026D2 050472656700        <1> db 5,4,"reg",0
  3181 000026D8 CD03                <1> 	int 3
  3182 000026DA E94AEFFFFF          <1> 	jmp nwcmd
  3183                              <1> 	
  3184 000026DF 0504636861726D6170- <1> db 5,4,"charmap",0
  3185 000026E8 00                  <1>
  3186 000026E9 B000                <1> 	mov al, 0
  3187 000026EB 66BB0700            <1> 	mov bx, 7
  3188                              <1> charmapcopy:
  3189 000026EF FEC0                <1> 	inc al
  3190 000026F1 3C08                <1> 	cmp al, 8
  3191 000026F3 7426                <1> 	je charmapnocopy
  3192 000026F5 3C09                <1> 	cmp al, 9
  3193 000026F7 7422                <1> 	je charmapnocopy
  3194 000026F9 3C0A                <1> 	cmp al, 10
  3195 000026FB 741E                <1> 	je charmapnocopy
  3196 000026FD 3C0D                <1> 	cmp al, 13
  3197 000026FF 741A                <1> 	je charmapnocopy
  3198 00002701 3C00                <1> 	cmp al, 0
  3199 00002703 7407                <1> 	je nomorecharmap
  3200 00002705 E8B4E7FFFF          <1> 	call int301prnt
  3201 0000270A EBE3                <1> 	jmp charmapcopy
  3202                              <1> nomorecharmap:
  3203 0000270C BE[6A580000]        <1> 	mov esi, line
  3204 00002711 E8B2E9FFFF          <1> 	call print
  3205 00002716 E90EEFFFFF          <1> 	jmp nwcmd
  3206                              <1> charmapnocopy:
  3207 0000271B 6650                <1> 	push ax
  3208 0000271D B020                <1> 	mov al, " "
  3209 0000271F E89AE7FFFF          <1> 	call int301prnt
  3210 00002724 6658                <1> 	pop ax
  3211 00002726 EBC7                <1> 	jmp charmapcopy
  3212                              <1> 	
  3213 00002728 05046B6579636F6465- <1> db 5,4,"keycode",0
  3214 00002731 00                  <1>
  3215                              <1> keycode:
  3216 00002732 E8BD060000          <1> 	call guistartin
  3217 00002737 B800000000          <1> 	mov eax, 0
  3218 0000273C B900000000          <1> 	mov ecx, 0
  3219 00002741 8A0D[CB2D0000]      <1> 	mov cl, [specialkey]
  3220 00002747 80F900              <1> 	cmp cl, 0
  3221 0000274A 0F8405000000        <1> 	je near nospecialkeycode
  3222 00002750 E8ADF3FFFF          <1> 	call showhexsmall
  3223                              <1> nospecialkeycode:
  3224 00002755 66A1[7F100000]      <1> 	mov ax, [lastkey]
  3225 0000275B 80FC01              <1> 	cmp ah, 1
  3226 0000275E 0F8409000000        <1> 	je near killkeycode
  3227 00002764 88E1                <1> 	mov cl, ah
  3228 00002766 E897F3FFFF          <1> 	call showhexsmall
  3229 0000276B EBC5                <1> 	jmp keycode
  3230                              <1> killkeycode:
  3231 0000276D BE[6A580000]        <1> 	mov esi, line
  3232 00002772 E851E9FFFF          <1> 	call print
  3233 00002777 E9ADEEFFFF          <1> 	jmp nwcmd
  3234                              <1> 
  3235 0000277C 050470636900        <1> db 5,4,"pci",0
  3236                              <1> 	pcishow:
  3237 00002782 E811260000          <1> 	call pcidump
  3238 00002787 E99DEEFFFF          <1> 	jmp nwcmd
  3239                              <1> 	
  3240 0000278C 050461727000        <1> db 5,4,"arp",0
  3241 00002792 E8FC240000          <1> 	call arptest
  3242 00002797 E98DEEFFFF          <1> 	jmp nwcmd
  3243                              <1> 
  3244 0000279C 0504626174636800    <1> db 5,4,"batch",0
  3245                              <1> 	batchst: 
  3246 000027A4 BF[7A1B0000]        <1> 		mov edi, buftxt
  3247 000027A9 81C706000000        <1> 		add edi, 6
  3248 000027AF 803F00              <1> 		cmp byte [edi], 0
  3249 000027B2 0F8473000000        <1> 		je near nonamefound
  3250 000027B8 BE00004000          <1> 		mov esi, 0x400000
  3251 000027BD E890270000          <1> 		call loadfile
  3252 000027C2 89D0                <1> 		mov eax, edx
  3253 000027C4 3D94010000          <1> 		cmp eax, 404
  3254 000027C9 746F                <1> 		je goodbatchname
  3255 000027CB BE[DA270000]        <1> 		mov esi, badbatchname
  3256 000027D0 E8F3E8FFFF          <1> 		call print
  3257 000027D5 E94FEEFFFF          <1> 		jmp nwcmd
  3258 000027DA 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  3259 000027E3 20616C726561647920- <1>
  3260 000027EC 657869737473210A0D- <1>
  3261 000027F5 00                  <1>
  3262 000027F6 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  3263 000027FF 746F20747970652061- <1>
  3264 00002808 206E616D6520616674- <1>
  3265 00002811 65722074686520636F- <1>
  3266 0000281A 6D6D616E642E0A0D00  <1>
  3267 00002823 00000000            <1> 		esicache3 dd 0
  3268 00002827 00000000            <1> 		esicache2 dd 0
  3269                              <1> 	nonamefound:
  3270 0000282B BE[F6270000]        <1> 		mov esi, namenotfoundbatch
  3271 00002830 E893E8FFFF          <1> 		call print
  3272 00002835 E9EFEDFFFF          <1> 		jmp nwcmd
  3273                              <1> 	goodbatchname:
  3274 0000283A BE00004000          <1> 		mov esi, 0x400000
  3275                              <1> 	batchcreate:
  3276 0000283F 8935[23280000]      <1> 		mov [esicache3], esi
  3277 00002845 B00D                <1> 		mov al, 13
  3278 00002847 B307                <1> 		mov bl, 7
  3279 00002849 B404                <1> 		mov ah, 4
  3280 0000284B CD30                <1> 		int 30h
  3281 0000284D 8935[27280000]      <1> 		mov [esicache2], esi
  3282 00002853 8A0E                <1> 		mov cl, [esi]
  3283 00002855 8B35[23280000]      <1> 		mov esi, [esicache3]
  3284 0000285B BB[B2280000]        <1> 		mov ebx, exitword
  3285 00002860 E8DDEFFFFF          <1> 		call cndtest
  3286 00002865 3C01                <1> 		cmp al, 1
  3287 00002867 7423                <1> 		je endbatchcreate
  3288 00002869 3C02                <1> 		cmp al, 2
  3289 0000286B 741F                <1> 		je endbatchcreate
  3290 0000286D BE[6A580000]        <1> 		mov esi, line
  3291 00002872 E851E8FFFF          <1> 		call print
  3292 00002877 8B35[27280000]      <1> 		mov esi, [esicache2]
  3293 0000287D B00D                <1> 		mov al, 13
  3294 0000287F B40A                <1> 		mov ah, 10
  3295 00002881 668906              <1> 		mov [esi], ax
  3296 00002884 81C602000000        <1> 		add esi, 2
  3297 0000288A EBB3                <1> 		jmp batchcreate
  3298                              <1> 	endbatchcreate:
  3299 0000288C 8B35[23280000]      <1> 		mov esi, [esicache3]
  3300 00002892 B800000000          <1> 		mov eax, 0
  3301 00002897 8806                <1> 		mov [esi], al
  3302 00002899 BE[6A580000]        <1> 		mov esi, line
  3303 0000289E E825E8FFFF          <1> 		call print
  3304 000028A3 BE00004000          <1> 		mov esi, 0x400000
  3305 000028A8 E81BE8FFFF          <1> 		call print
  3306 000028AD E977EDFFFF          <1> 		jmp nwcmd
  3307                              <1> 	
  3308 000028B2 5C7800              <1> 	exitword db "\x",0
  3309 000028B5 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  3310 000028BE 6F20657869742E0A0D- <1>
  3311 000028C7 00                  <1>
  3312                              <1> 		
  3313 000028C8 050473686F7700      <1> db 5,4,"show",0
  3314 000028CF BF[7A1B0000]        <1> 		mov edi, buftxt
  3315 000028D4 81C705000000        <1> 		add edi, 5
  3316 000028DA BE00004000          <1> 		mov esi, 0x400000
  3317 000028DF E86E260000          <1> 		call loadfile
  3318 000028E4 BE00004000          <1> 		mov esi, 0x400000
  3319 000028E9 66813E424D          <1> 		cmp word [esi], "BM"
  3320 000028EE 7414                <1> 		je bmpfound
  3321 000028F0 E8D3E7FFFF          <1> 		call print
  3322 000028F5 BE[6A580000]        <1> 		mov esi, line
  3323 000028FA E8C9E7FFFF          <1> 		call print
  3324 000028FF E925EDFFFF          <1> 		jmp nwcmd
  3325                              <1> bmpfound:
  3326 00002904 803D[39350000]00    <1> 		cmp byte [guion], 0
  3327 0000290B 0F8452000000        <1> 		je near noguibmp
  3328 00002911 BE00004000          <1> 		mov esi, 0x400000
  3329 00002916 B900000000          <1> 		mov ecx, 0
  3330 0000291B BA00000000          <1> 		mov edx, 0
  3331 00002920 B800000000          <1> 		mov eax, 0
  3332 00002925 BB00000000          <1> 		mov ebx, 0
  3333 0000292A E8C21C0000          <1> 		call showbmp
  3334 0000292F B000                <1> 		mov al, 0
  3335 00002931 B405                <1> 		mov ah, 5
  3336 00002933 CD30                <1> 		int 30h
  3337 00002935 E8660A0000          <1> 		call guiclear
  3338 0000293A E8FB0B0000          <1> 		call clearmousecursor
  3339 0000293F E88D120000          <1> 		call reloadallgraphics
  3340 00002944 BE[7A1B0000]        <1> 		mov esi, buftxt
  3341 00002949 81C605000000        <1> 		add esi, 5
  3342 0000294F E874E7FFFF          <1> 		call print
  3343 00002954 BE[E6290000]        <1> 		mov esi, loadedbmpmsg
  3344 00002959 E86AE7FFFF          <1> 		call print
  3345 0000295E E9C6ECFFFF          <1> 		jmp nwcmd
  3346                              <1> noguibmp:
  3347 00002963 BE[72290000]        <1> 		mov esi, warnguibmp
  3348 00002968 E85BE7FFFF          <1> 		call print
  3349 0000296D E9B7ECFFFF          <1> 		jmp nwcmd
  3350 00002972 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  3351 0000297B 6E6F7420626520646F- <1>
  3352 00002984 6E6520776974686F75- <1>
  3353 0000298D 742074686520677569- <1>
  3354 00002996 2E0A0D00            <1>
  3355                              <1> 
  3356                              <1> 		
  3357                              <1> filenotfound:
  3358 0000299A BE[C3290000]        <1> 		mov esi, filenf
  3359 0000299F E824E7FFFF          <1> 		call print
  3360 000029A4 BE[7A1B0000]        <1> 		mov esi, buftxt
  3361 000029A9 81C608000000        <1> 		add esi, 8
  3362 000029AF E814E7FFFF          <1> 		call print
  3363 000029B4 BE[CE290000]        <1> 		mov esi, filenf2
  3364 000029B9 E80AE7FFFF          <1> 		call print
  3365 000029BE E966ECFFFF          <1> 		jmp nwcmd
  3366 000029C3 5468652066696C6520- <1> filenf db "The file ",34,0
  3367 000029CC 2200                <1>
  3368 000029CE 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  3369 000029D7 6F7420626520666F75- <1>
  3370 000029E0 6E642E0D0A00        <1>
  3371                              <1> 		
  3372 000029E6 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  3373 000029EF 0A00                <1>
  3374                              <1> 
  3375 000029F1 050464756D7000      <1> 	db 5,4,"dump",0
  3376 000029F8 BE[7A1B0000]        <1> 	mov esi, buftxt
  3377 000029FD 81C605000000        <1> 	add esi, 5
  3378 00002A03 B900000000          <1> 	mov ecx, 0
  3379 00002A08 E848F2FFFF          <1> 	call cnvrttxt
  3380 00002A0D 89CF                <1> 	mov edi, ecx
  3381 00002A0F 89FE                <1> 	mov esi, edi
  3382 00002A11 81C680030000        <1> 	add esi, 896
  3383 00002A17 C605[011B0000]00    <1> 	mov byte [firsthexshown],0
  3384                              <1> dumphexloop:
  3385 00002A1E 8B0F                <1> 	mov ecx, [edi]
  3386 00002A20 E8F1F0FFFF          <1> 	call showhex
  3387 00002A25 81C704000000        <1> 	add edi, 4
  3388 00002A2B 39F7                <1> 	cmp edi, esi
  3389 00002A2D 72EF                <1> 	jb dumphexloop
  3390 00002A2F E9F5EBFFFF          <1> 	jmp nwcmd
  3391                              <1> 
  3392 00002A34 050474696D6500      <1> db 5,4,"time",0
  3393 00002A3B E823000000          <1> 	call time
  3394 00002A40 BE[4D2C0000]        <1> 	mov esi, timeshow
  3395 00002A45 E87EE6FFFF          <1> 	call print
  3396 00002A4A BE[6A580000]        <1> 	mov esi, line
  3397 00002A4F E874E6FFFF          <1> 	call print
  3398 00002A54 BE[572C0000]        <1> 	mov esi, dateshow
  3399 00002A59 E86AE6FFFF          <1> 	call print
  3400 00002A5E E9C6EBFFFF          <1> 	jmp nwcmd
  3401                              <1> 	time:
  3402 00002A63 E86D010000          <1> 	call tstackput1
  3403 00002A68 B00A                <1> 	mov al,10			;Get RTC register A
  3404 00002A6A E897010000          <1> 	call tget1
  3405 00002A6F A880                <1> 	test al,0x80			;Is update in progress?
  3406 00002A71 75F0                <1> 	jne time				; yes, wait
  3407                              <1> 
  3408 00002A73 B000                <1> 	mov al,0			;Get seconds (00 to 59)
  3409 00002A75 E88C010000          <1> 	call tget1
  3410 00002A7A A2[442C0000]        <1> 	mov [RTCtimeSecond],al
  3411                              <1> 
  3412 00002A7F B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  3413 00002A81 E880010000          <1> 	call tget1
  3414 00002A86 A2[452C0000]        <1> 	mov [RTCtimeMinute],al
  3415                              <1> 
  3416 00002A8B B004                <1> 	mov al,0x04			;Get hours (see notes)
  3417 00002A8D E874010000          <1> 	call tget1
  3418 00002A92 A2[462C0000]        <1> 	mov [RTCtimeHour],al
  3419                              <1> 
  3420 00002A97 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  3421 00002A99 E868010000          <1> 	call tget1
  3422                              <1> ;	mov ah, 0			;;fix day
  3423                              <1> ;	mov ah, al
  3424                              <1> ;	shr ah, 4
  3425                              <1> ;	shl al, 4
  3426                              <1> ;	shr al, 4
  3427                              <1> ;	cmp al, 0
  3428                              <1> ;	jne nodecahday
  3429                              <1> ;	mov al, 10
  3430                              <1> ;	dec ah
  3431                              <1> ;nodecahday:
  3432                              <1> ;	dec al
  3433                              <1> ;	shl ah, 4
  3434                              <1> ;	or al, ah
  3435 00002A9E A2[472C0000]        <1> 	mov [RTCtimeDay],al
  3436                              <1> 
  3437 00002AA3 B008                <1> 	mov al,0x08			;Get month (01 to 12)
  3438 00002AA5 E85C010000          <1> 	call tget1
  3439 00002AAA A2[482C0000]        <1> 	mov [RTCtimeMonth],al
  3440                              <1> 
  3441 00002AAF B009                <1> 	mov al,0x09			;Get year (00 to 99)
  3442 00002AB1 E850010000          <1> 	call tget1
  3443 00002AB6 A2[492C0000]        <1> 	mov [RTCtimeYear],al
  3444                              <1> 	
  3445 00002ABB BE[4D2C0000]        <1> 	mov esi, timeshow
  3446 00002AC0 8A2D[462C0000]      <1> 	mov ch, [RTCtimeHour]
  3447 00002AC6 E846010000          <1> 	call tput1
  3448 00002ACB 8A2D[452C0000]      <1> 	mov ch, [RTCtimeMinute]
  3449 00002AD1 E83B010000          <1> 	call tput1
  3450 00002AD6 8A2D[442C0000]      <1> 	mov ch, [RTCtimeSecond]
  3451 00002ADC E830010000          <1> 	call tput1
  3452 00002AE1 BE[572C0000]        <1> 	mov esi, dateshow
  3453 00002AE6 8A2D[482C0000]      <1> 	mov ch, [RTCtimeMonth]
  3454 00002AEC E820010000          <1> 	call tput1
  3455 00002AF1 8A2D[472C0000]      <1> 	mov ch, [RTCtimeDay]
  3456 00002AF7 E815010000          <1> 	call tput1
  3457 00002AFC B520                <1> 	mov ch, 0x20
  3458 00002AFE E80E010000          <1> 	call tput1
  3459 00002B03 4E                  <1> 	dec esi
  3460 00002B04 8A2D[492C0000]      <1> 	mov ch, [RTCtimeYear]
  3461 00002B0A E802010000          <1> 	call tput1
  3462 00002B0F E8DB000000          <1> 	call tstackget1
  3463 00002B14 BE[4D2C0000]        <1> 	mov esi, timeshow
  3464 00002B19 66BB0700            <1> 	mov bx, 7
  3465 00002B1D B401                <1> 	mov ah, 1
  3466 00002B1F B000                <1> 	mov al, 0
  3467 00002B21 CD30                <1> 	int 30h
  3468                              <1> ;;get day of week
  3469                              <1> ;;add these:
  3470                              <1> ;;century value
  3471                              <1> ;;last 2 digits of year
  3472                              <1> ;;last 2 digits of year right shifted twice
  3473                              <1> ;;month table value
  3474                              <1> ;;day of the month
  3475                              <1> ;;divide these by 7
  3476                              <1> ;;the remainder is the day
  3477 00002B23 B800000000          <1> 	mov eax, 0
  3478                              <1> ;;first convert the values from BCD to hex
  3479 00002B28 A0[472C0000]        <1> 	mov al, [RTCtimeDay]
  3480 00002B2D E88A000000          <1> 	call converttohex
  3481 00002B32 8825[4A2C0000]      <1> 	mov [dayhex], ah
  3482 00002B38 A0[482C0000]        <1> 	mov al, [RTCtimeMonth]
  3483 00002B3D E87A000000          <1> 	call converttohex
  3484 00002B42 8825[4B2C0000]      <1> 	mov [monthhex], ah
  3485 00002B48 A0[492C0000]        <1> 	mov al, [RTCtimeYear]
  3486 00002B4D E86A000000          <1> 	call converttohex
  3487 00002B52 8825[4C2C0000]      <1> 	mov [yearhex], ah
  3488 00002B58 B800000000          <1> 	mov eax, 0
  3489 00002B5D A0[4C2C0000]        <1> 	mov al, [yearhex]
  3490 00002B62 C0E802              <1> 	shr al, 2
  3491 00002B65 0205[4C2C0000]      <1> 	add al, [yearhex]
  3492 00002B6B 0506000000          <1> 	add eax, 6
  3493 00002B70 BB00000000          <1> 	mov ebx, 0
  3494 00002B75 8A1D[4B2C0000]      <1> 	mov bl, [monthhex]
  3495 00002B7B FECB                <1> 	dec bl
  3496 00002B7D 81C3[6D2C0000]      <1> 	add ebx, month
  3497 00002B83 B900000000          <1> 	mov ecx, 0
  3498 00002B88 8A0B                <1> 	mov cl, [ebx]
  3499 00002B8A 01C8                <1> 	add eax, ecx
  3500 00002B8C 8A0D[4A2C0000]      <1> 	mov cl, [dayhex]
  3501 00002B92 01C8                <1> 	add eax, ecx
  3502 00002B94 66BB0700            <1> 	mov bx, 7
  3503 00002B98 BA00000000          <1> 	mov edx, 0
  3504 00002B9D 66F7F3              <1> 	div bx
  3505 00002BA0 C1E202              <1> 	shl edx, 2
  3506 00002BA3 81C2[792C0000]      <1> 	add edx, day
  3507 00002BA9 8B32                <1> 	mov esi, [edx]
  3508 00002BAB 66BB0700            <1> 	mov bx, 7
  3509 00002BAF B401                <1> 	mov ah, 1
  3510 00002BB1 B000                <1> 	mov al, 0
  3511 00002BB3 CD30                <1> 	int 30h
  3512 00002BB5 66B80000            <1> 	mov ax, 0
  3513 00002BB9 CD30                <1> 	int 30h
  3514 00002BBB F4                  <1> 	hlt
  3515                              <1> 	
  3516                              <1> converttohex:
  3517 00002BBC 88C4                <1> 	mov ah, al
  3518 00002BBE C0E804              <1> 	shr al, 4
  3519 00002BC1 C0E404              <1> 	shl ah, 4
  3520 00002BC4 C0EC04              <1> 	shr ah, 4
  3521 00002BC7 3C00                <1> 	cmp al, 0
  3522 00002BC9 7409                <1> 	je noconverttohex
  3523                              <1> converttohexlp:
  3524 00002BCB 80C40A              <1> 	add ah, 10
  3525 00002BCE FEC8                <1> 	dec al
  3526 00002BD0 3C00                <1> 	cmp al, 0
  3527 00002BD2 75F7                <1> 	jne converttohexlp
  3528                              <1> noconverttohex:
  3529 00002BD4 C3                  <1> 	ret
  3530                              <1> 	
  3531                              <1> tstackput1:
  3532 00002BD5 8935[402C0000]      <1> 	mov [tstack + 20], esi
  3533 00002BDB BE[2C2C0000]        <1> 	mov esi, tstack
  3534 00002BE0 8906                <1> 	mov [esi], eax
  3535 00002BE2 895E04              <1> 	mov [esi + 4], ebx
  3536 00002BE5 894E08              <1> 	mov [esi + 8], ecx
  3537 00002BE8 89560C              <1> 	mov [esi + 12], edx
  3538 00002BEB 897E10              <1> 	mov [esi + 16], edi
  3539 00002BEE C3                  <1> 	ret
  3540                              <1> 	
  3541                              <1> tstackget1:
  3542 00002BEF BE[2C2C0000]        <1> 	mov esi, tstack
  3543 00002BF4 8B06                <1> 	mov eax, [esi]
  3544 00002BF6 8B5E04              <1> 	mov ebx, [esi + 4]
  3545 00002BF9 8B4E08              <1> 	mov ecx, [esi + 8]
  3546 00002BFC 8B560C              <1> 	mov edx, [esi + 12]
  3547 00002BFF 8B7E10              <1> 	mov edi, [esi + 16]
  3548 00002C02 8B7614              <1> 	mov esi, [esi + 20]
  3549 00002C05 C3                  <1> 	ret
  3550                              <1> 	
  3551                              <1> tget1:
  3552 00002C06 66BA7000            <1> 	mov dx, 0x70
  3553 00002C0A EE                  <1> 	out dx, al
  3554 00002C0B 6642                <1> 	inc dx
  3555 00002C0D EC                  <1> 	in al, dx
  3556 00002C0E 664A                <1> 	dec dx
  3557 00002C10 C3                  <1> 	ret
  3558                              <1> 	
  3559                              <1> tput1:
  3560 00002C11 66C1E904            <1> 	shr cx, 4
  3561 00002C15 B030                <1> 	mov al, 48
  3562 00002C17 00E8                <1> 	add al, ch
  3563 00002C19 8806                <1> 	mov [esi], al
  3564 00002C1B 46                  <1> 	inc esi
  3565 00002C1C B030                <1> 	mov al, 48
  3566 00002C1E C0E904              <1> 	shr cl, 4
  3567 00002C21 00C8                <1> 	add al, cl
  3568 00002C23 8806                <1> 	mov [esi], al
  3569 00002C25 81C602000000        <1> 	add esi, 2
  3570 00002C2B C3                  <1> 	ret
  3571                              <1> 		
  3572 00002C2C 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  3573 00002C35 000000000000000000- <1>
  3574 00002C3E 000000000000        <1>
  3575 00002C44 00                  <1> 	RTCtimeSecond db 0
  3576 00002C45 00                  <1> 	RTCtimeMinute db 0
  3577 00002C46 00                  <1> 	RTCtimeHour db 0
  3578 00002C47 00                  <1> 	RTCtimeDay db 0
  3579 00002C48 00                  <1> 	RTCtimeMonth db 0
  3580 00002C49 00                  <1> 	RTCtimeYear db 0
  3581 00002C4A 00                  <1> 	dayhex db 0
  3582 00002C4B 00                  <1> 	monthhex db 0
  3583 00002C4C 00                  <1> 	yearhex db 0
  3584 00002C4D 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  3585 00002C56 0A                  <1>
  3586 00002C57 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  3587 00002C60 300D0A00            <1>
  3588                              <1> 	oldcentury:	;;from 1700 to 1900
  3589 00002C64 040200              <1> 	db 4,2,0
  3590                              <1> 	century:	;;from 2000 to 2500
  3591 00002C67 060402000604        <1> 	db 6,4,2,0,6,4
  3592                              <1> 	month:
  3593 00002C6D 000303060104060205- <1> 	db 0,3,3,6,1,4,6,2,5,0,3,5
  3594 00002C76 000305              <1>
  3595                              <1> 	day:
  3596 00002C79 [952C0000]          <1> 	dd sunday
  3597 00002C7D [9E2C0000]          <1> 	dd monday
  3598 00002C81 [A72C0000]          <1> 	dd tuesday
  3599 00002C85 [B12C0000]          <1> 	dd wednesday
  3600 00002C89 [BD2C0000]          <1> 	dd thursday
  3601 00002C8D [C82C0000]          <1> 	dd friday
  3602 00002C91 [D12C0000]          <1> 	dd saturday
  3603                              <1> sunday:
  3604 00002C95 53756E6461790D0A00  <1> 	db "Sunday",13,10,0
  3605                              <1> monday:
  3606 00002C9E 4D6F6E6461790D0A00  <1> 	db "Monday",13,10,0
  3607                              <1> tuesday:
  3608 00002CA7 547565736461790D0A- <1> 	db "Tuesday",13,10,0
  3609 00002CB0 00                  <1>
  3610                              <1> wednesday:
  3611 00002CB1 5765646E6573646179- <1> 	db "Wednesday",13,10,0
  3612 00002CBA 0D0A00              <1>
  3613                              <1> thursday:
  3614 00002CBD 54687572736461790D- <1> 	db "Thursday",13,10,0
  3615 00002CC6 0A00                <1>
  3616                              <1> friday:
  3617 00002CC8 4672696461790D0A00  <1> 	db "Friday",13,10,0
  3618                              <1> saturday:
  3619 00002CD1 53617475726461790D- <1> 	db "Saturday",13,10,0
  3620 00002CDA 0A00                <1>
  3621                              <1> 
  3622 00002CDC 0504637075696400    <1> db 5,4,"cpuid",0
  3623 00002CE4 B800000000          <1> 	mov eax, 0
  3624 00002CE9 0FA2                <1> 	cpuid
  3625 00002CEB 891D[402D0000]      <1> 	mov [cpuidbuf], ebx
  3626 00002CF1 8915[442D0000]      <1> 	mov [cpuidbuf + 4], edx
  3627 00002CF7 890D[482D0000]      <1> 	mov [cpuidbuf + 8], ecx
  3628 00002CFD BE[402D0000]        <1> 	mov esi, cpuidbuf
  3629 00002D02 E8C1E3FFFF          <1> 	call print
  3630 00002D07 BE[6A580000]        <1> 	mov esi, line
  3631 00002D0C E8B7E3FFFF          <1> 	call print
  3632 00002D11 B801000000          <1> 	mov eax, 1
  3633 00002D16 0FA2                <1> 	cpuid
  3634 00002D18 89C1                <1> 	mov ecx, eax
  3635 00002D1A C605[011B0000]02    <1> 	mov byte [firsthexshown], 2
  3636 00002D21 E8F0EDFFFF          <1> 	call showhex
  3637 00002D26 B808000080          <1> 	mov eax, 0x80000008
  3638 00002D2B 0FA2                <1> 	cpuid
  3639 00002D2D 89C1                <1> 	mov ecx, eax
  3640 00002D2F C605[011B0000]02    <1> 	mov byte [firsthexshown], 2
  3641 00002D36 E8DBEDFFFF          <1> 	call showhex
  3642 00002D3B E9E9E8FFFF          <1> 	jmp nwcmd
  3643                              <1> 	
  3644 00002D40 00<rept>            <1> cpuidbuf times 13 db 0
  3645                              <1> cpuidvendorend:
  3646                              <1> progend:		;programs end here	
  3647                              <1> batchprogend:
  3648                                      %include 'source/input.asm'
  3649                              <1> PS2SET:
  3650 00002D4D B0A8                <1>   mov  al, 0xa8		; enable mouse port
  3651 00002D4F E664                <1>   out  0x64, al		; write to keyboardcontroller
  3652 00002D51 E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  3653 00002D56 C3                  <1> ret
  3654                              <1> 
  3655                              <1> CHKPRT:
  3656 00002D57 66B96400            <1>   mov  cx, 100
  3657                              <1>  .again:
  3658 00002D5B E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3659 00002D5D A802                <1>   test al, 2		; Check if input buffer is empty
  3660 00002D5F 7402                <1>   je .go
  3661 00002D61 E2F8                <1>   loop .again
  3662                              <1>  .go:
  3663 00002D63 C3                  <1> ret
  3664                              <1> 
  3665                              <1> WMOUS:
  3666 00002D64 B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  3667 00002D66 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3668 00002D68 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3669 00002D6D C3                  <1> ret
  3670                              <1> 
  3671                              <1> MBUFFUL:
  3672 00002D6E 66B96400            <1>   mov cx, 100
  3673                              <1>  .mn:
  3674 00002D72 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3675 00002D74 A820                <1>   test al, 0x20		; check if mouse output buffer is full
  3676 00002D76 7402                <1>   jz  .mnn
  3677 00002D78 E2F8                <1>   loop .mn
  3678                              <1>  .mnn:
  3679 00002D7A C3                  <1> ret
  3680                              <1> 
  3681                              <1> 
  3682                              <1> ACTMOUS:
  3683 00002D7B E8E4FFFFFF          <1>   call WMOUS
  3684 00002D80 B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  3685 00002D82 E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  3686 00002D84 E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3687 00002D89 E801000000          <1>   call CHKMOUS		; check if a byte is available
  3688 00002D8E C3                  <1> ret
  3689                              <1> 
  3690                              <1> CHKMOUS:
  3691 00002D8F B300                <1>   mov  bl, 0
  3692 00002D91 66B96400            <1>   mov cx, 100
  3693                              <1>  .vrd:
  3694 00002D95 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3695 00002D97 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  3696 00002D99 7504                <1>   jnz .yy
  3697 00002D9B E2F8                <1>   loop .vrd
  3698 00002D9D B301                <1>   mov  bl, 1
  3699                              <1>  .yy:
  3700 00002D9F C3                  <1> ret
  3701                              <1> 
  3702                              <1> GETB:
  3703                              <1>  .cagain:
  3704 00002DA0 E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  3705 00002DA5 08DB                <1>   or bl, bl
  3706 00002DA7 75F7                <1>   jnz .cagain
  3707 00002DA9 B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  3708 00002DAB E664                <1>   out  0x64, al		; write to keyboardcontroller
  3709 00002DAD E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3710 00002DB2 6631C0              <1>   xor  ax, ax
  3711 00002DB5 E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3712 00002DB7 88C2                <1>   mov  dl, al
  3713 00002DB9 B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  3714 00002DBB E664                <1>   out  0x64, al		; write to keyboardcontroller
  3715 00002DBD E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3716 00002DC2 88D0                <1>   mov  al, dl
  3717 00002DC4 C3                  <1> ret
  3718                              <1> 
  3719 00002DC5 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  3720 00002DC6 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  3721 00002DC7 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  3722 00002DC8 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  3723 00002DC9 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  3724 00002DCA 00                  <1> mousedisabled db 0
  3725 00002DCB 00                  <1> specialkey db 0
  3726                              <1> guistartin2:		;;this is basically the idle process
  3727                              <1> 					;;this halts the cpu for a small amount of time and then sees if there was a keypress
  3728                              <1> 					;;this lets the cpu stay at close to 0% instead of 100%
  3729 00002DCC 66B80020            <1> 	mov ax, 0x2000	;;this is the divider for the PIT
  3730 00002DD0 E640                <1> 	out 0x40, al
  3731 00002DD2 66C1C008            <1> 	rol ax, 8
  3732 00002DD6 E640                <1> 	out 0x40, al
  3733 00002DD8 B0FE                <1> 	mov al, 0xFE
  3734 00002DDA E621                <1> 	out 0x21, al
  3735 00002DDC B020                <1> 	mov al, 0x20
  3736 00002DDE E620                <1> 	out 0x20, al
  3737 00002DE0 A0[93510000]        <1> 	mov al, [threadson]
  3738 00002DE5 C605[93510000]00    <1> 	mov byte [threadson], 0
  3739 00002DEC FB                  <1> 	sti
  3740 00002DED F4                  <1> 	hlt
  3741 00002DEE A2[93510000]        <1> 	mov [threadson], al
  3742 00002DF3 FA                  <1> 	cli
  3743                              <1> guistartin:
  3744 00002DF4 B800000000          <1> 		mov eax, 0
  3745 00002DF9 A2[CB2D0000]        <1> 		mov [specialkey], al
  3746 00002DFE 66A3[7F100000]      <1> 		mov [lastkey], ax
  3747 00002E04 E464                <1> 		in al, 64h ; Status
  3748 00002E06 A820                <1> 		test al, 20h ; PS2-Mouse?
  3749 00002E08 0F85EA010000        <1> 		jnz near maincall2
  3750 00002E0E A801                <1> 		test al, 1 
  3751 00002E10 74BA                <1> 		jz guistartin2 ; if output buffer full or no keypress, jump to idle process (only works when it is jz guistartin2, use jz guistartin to disable)
  3752                              <1> 	guigetkey:
  3753 00002E12 E460                <1> 		in al, 60h
  3754 00002E14 88C4                <1> 		mov ah, al
  3755 00002E16 B000                <1> 		mov al, 0
  3756 00002E18 8825[80100000]      <1> 		mov [lastkey + 1], ah
  3757 00002E1E 88E0                <1> 		mov al, ah
  3758 00002E20 BF[44320000]        <1> 		mov edi, scancode
  3759                              <1> 	guisearchscan: 
  3760 00002E25 3C3A                <1> 		cmp al, 3Ah
  3761 00002E27 731A                <1> 		jae guiscanother
  3762 00002E29 B400                <1> 		mov ah, 0
  3763 00002E2B C0E002              <1> 		shl al, 2
  3764 00002E2E 01C7                <1> 		add edi, eax
  3765 00002E30 D0E8                <1> 		shr al, 1
  3766 00002E32 01C7                <1> 		add edi, eax
  3767 00002E34 D0E8                <1> 		shr al, 1
  3768 00002E36 8A27                <1> 		mov ah, [edi]
  3769 00002E38 80FC00              <1> 		cmp ah, 0
  3770 00002E3B 7406                <1> 		je guiscanother
  3771 00002E3D E9D7000000          <1> 		jmp guiscanfound
  3772 00002E42 00                  <1> guiupper db 0
  3773                              <1> guiscanother:
  3774 00002E43 88C4                <1> 		mov ah, al
  3775 00002E45 B000                <1> 		mov al, 0
  3776 00002E47 66A3[7F100000]      <1> 		mov [lastkey], ax
  3777 00002E4D 80FCE0              <1> 		cmp ah, 0E0h
  3778 00002E50 0F847D000000        <1> 		je near guigetkeyspecial
  3779 00002E56 803D[CB2D0000]E0    <1> 		cmp byte [specialkey], 0xE0
  3780 00002E5D 752B                <1> 		jne nospecialkey
  3781 00002E5F 80FC38              <1> 		cmp ah, 38h
  3782 00002E62 0F84A0000000        <1> 		je near guialton
  3783 00002E68 80FCB8              <1> 		cmp ah, 0B8h
  3784 00002E6B 0F849F000000        <1> 		je near guialtoff
  3785 00002E71 80FC1D              <1> 		cmp ah, 1Dh
  3786 00002E74 0F847E000000        <1> 		je near guictron
  3787 00002E7A 80FC9D              <1> 		cmp ah, 9Dh
  3788 00002E7D 0F847D000000        <1> 		je near guictroff
  3789 00002E83 66A3[7F100000]      <1> 		mov [lastkey], ax
  3790 00002E89 C3                  <1> 		ret
  3791                              <1> nospecialkey:
  3792                              <1> 		;cmp ah, 4Dh
  3793                              <1> 		;je near nextimage
  3794 00002E8A 80FC2A              <1> 		cmp ah, 2Ah
  3795 00002E8D 0F8455000000        <1> 		je near guishifton
  3796 00002E93 80FC36              <1> 		cmp ah, 36h
  3797 00002E96 0F844C000000        <1> 		je near guishifton
  3798 00002E9C 80FC1C              <1> 		cmp ah, 1Ch
  3799 00002E9F 0F8473000000        <1> 		je near guientdown
  3800 00002EA5 80FCAA              <1> 		cmp ah, 0AAh
  3801 00002EA8 0F8442000000        <1> 		je near guishiftoff
  3802 00002EAE 80FCB6              <1> 		cmp ah, 0B6h
  3803 00002EB1 0F8439000000        <1> 		je near guishiftoff
  3804 00002EB7 80FC3A              <1> 		cmp ah, 3Ah
  3805 00002EBA 0F84A5000000        <1> 		je near guicaps
  3806 00002EC0 80FC45              <1> 		cmp ah, 0x45
  3807 00002EC3 0F84AD000000        <1> 		je near guinumlock
  3808 00002EC9 80FC46              <1> 		cmp ah, 0x46
  3809 00002ECC 0F84BC000000        <1> 		je near guiscrolllock
  3810 00002ED2 C3                  <1> 		ret
  3811                              <1> 	guigetkeyspecial:
  3812 00002ED3 C605[CB2D0000]E0    <1> 		mov byte [specialkey], 0xE0
  3813 00002EDA E933FFFFFF          <1> 		jmp guigetkey
  3814                              <1> 	guishift:
  3815 00002EDF A0[422E0000]        <1> 		mov al, [guiupper]
  3816 00002EE4 3C01                <1> 		cmp al, 1
  3817 00002EE6 7308                <1> 		jae guishiftoff
  3818                              <1> 	guishifton:
  3819 00002EE8 C605[422E0000]01    <1> 		mov byte [guiupper], 1
  3820 00002EEF C3                  <1> 		ret
  3821                              <1> 		;jmp guistartin
  3822                              <1> 	guishiftoff:
  3823 00002EF0 C605[422E0000]00    <1> 		mov byte [guiupper], 0
  3824 00002EF7 C3                  <1> 		ret
  3825                              <1> 		;jmp guistartin
  3826                              <1> 	guictron:
  3827 00002EF8 C605[642F0000]01    <1> 		mov byte [guictr], 1
  3828 00002EFF C3                  <1> 		ret
  3829                              <1> 	guictroff:
  3830 00002F00 C605[642F0000]00    <1> 		mov byte [guictr], 0
  3831 00002F07 C3                  <1> 		ret
  3832                              <1> 	guialton:
  3833 00002F08 C605[632F0000]01    <1> 		mov byte [guialt], 1
  3834 00002F0F C3                  <1> 		ret
  3835                              <1> 		;jmp guistartin
  3836                              <1> 	guialtoff:
  3837 00002F10 C605[632F0000]00    <1> 		mov byte [guialt], 0
  3838 00002F17 C3                  <1> 		ret
  3839                              <1> 		;jmp guistartin
  3840                              <1> 	guientdown:
  3841 00002F18 C3                  <1> 		ret
  3842                              <1> 	guiscanfound:
  3843 00002F19 81C704000000        <1> 		add edi, 4
  3844 00002F1F 803D[642F0000]01    <1> 		cmp byte [guictr], 1
  3845 00002F26 731B                <1> 		jae altguiin
  3846 00002F28 81EF04000000        <1> 		sub edi, 4
  3847 00002F2E 81C702000000        <1> 		add edi, 2
  3848 00002F34 803D[632F0000]01    <1> 		cmp byte [guialt], 1
  3849 00002F3B 7306                <1> 		jae altguiin
  3850 00002F3D 81EF02000000        <1> 		sub edi, 2
  3851                              <1> altguiin:
  3852 00002F43 81C701000000        <1> 		add edi, 1
  3853 00002F49 803D[422E0000]01    <1> 		cmp byte [guiupper], 1
  3854 00002F50 7306                <1> 		jae uppercasegui
  3855 00002F52 81EF01000000        <1> 		sub edi, 1
  3856                              <1> uppercasegui:
  3857 00002F58 8A07                <1> 		mov al,[edi]
  3858 00002F5A A2[7F100000]        <1> 		mov [lastkey], al
  3859 00002F5F C3                  <1> 		ret
  3860                              <1> 		
  3861 00002F60 00                  <1> keyboardstatus db 0
  3862 00002F61 00                  <1> numlockstatus db 0
  3863 00002F62 00                  <1> scrolllockstatus db 0
  3864 00002F63 00                  <1> guialt db 0
  3865 00002F64 00                  <1> guictr db 0
  3866                              <1> 	guicaps:
  3867 00002F65 8035[602F0000]04    <1> 		xor byte [keyboardstatus], 00000100b
  3868 00002F6C E835000000          <1> 		call updatekblights
  3869 00002F71 E969FFFFFF          <1> 		jmp guishift
  3870                              <1> 		
  3871                              <1> 	guinumlock:
  3872 00002F76 8035[602F0000]02    <1> 		xor byte [keyboardstatus], 00000010b
  3873 00002F7D 8035[612F0000]01    <1> 		xor byte [numlockstatus], 1
  3874 00002F84 E81D000000          <1> 		call updatekblights
  3875 00002F89 E966FEFFFF          <1> 		jmp guistartin
  3876                              <1> 	
  3877                              <1> 	guiscrolllock:
  3878 00002F8E 8035[602F0000]01    <1> 		xor byte [keyboardstatus], 00000001b
  3879 00002F95 8035[622F0000]01    <1> 		xor byte [scrolllockstatus], 1
  3880 00002F9C E805000000          <1> 		call updatekblights
  3881 00002FA1 E94EFEFFFF          <1> 		jmp guistartin
  3882                              <1> 		
  3883                              <1> 	updatekblights:
  3884 00002FA6 B0ED                <1> 		mov al, 0xED
  3885 00002FA8 66BA6000            <1> 		mov dx, 0x60
  3886 00002FAC EE                  <1> 		out dx, al
  3887                              <1> 	chkkbdack:
  3888 00002FAD EC                  <1> 		in al, dx
  3889 00002FAE 3CFA                <1> 		cmp al, 0xFA
  3890 00002FB0 75FB                <1> 		jne chkkbdack
  3891 00002FB2 A0[602F0000]        <1> 		mov al, [keyboardstatus]
  3892 00002FB7 EE                  <1> 		out dx, al
  3893 00002FB8 C3                  <1> 		ret
  3894                              <1> 	
  3895                              <1> 	cursorgui:
  3896 00002FB9 803D[9A460000]01    <1> 		cmp byte [mouseon], 1
  3897 00002FC0 0F8432000000        <1> 		je near maincall2
  3898 00002FC6 803D[39350000]00    <1> 		cmp byte [guion], 0
  3899 00002FCD 0F8445FFFFFF        <1> 		je guientdown
  3900                              <1> 	initmouse:
  3901 00002FD3 803D[39350000]00    <1> 		cmp byte [guion], 0
  3902 00002FDA 7405                <1> 		je noswmsposinit
  3903 00002FDC E825060000          <1> 		call switchmousepos2
  3904                              <1> 	noswmsposinit:
  3905 00002FE1 E867FDFFFF          <1> 	  	call PS2SET
  3906 00002FE6 E890FDFFFF          <1> 		call ACTMOUS
  3907 00002FEB C605[9A460000]01    <1> 		mov byte [mouseon],1
  3908 00002FF2 E8A9FDFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  3909                              <1> 				;;If the bytes are mixed up,
  3910                              <1> 				;;remove this line or add another of this line.
  3911                              <1> 		;call GETB
  3912                              <1> 	nomouse:
  3913 00002FF7 C3                  <1> 		ret
  3914                              <1> 	maincall2:
  3915 00002FF8 803D[CA2D0000]01    <1> 		cmp byte [mousedisabled], 1
  3916 00002FFF 74F6                <1> 		je nomouse
  3917 00003001 803D[9A460000]01    <1> 		  cmp byte [mouseon], 1
  3918 00003008 75C9                <1> 		  jne initmouse
  3919 0000300A E891FDFFFF          <1> 		  call GETB
  3920 0000300F 88C3                <1> 		  mov  bl, al
  3921 00003011 80E301              <1> 		  and  bl, 1
  3922 00003014 881D[C52D0000]      <1> 		  mov  BYTE [LBUTTON], bl
  3923 0000301A 88C3                <1> 		  mov  bl, al
  3924 0000301C 80E302              <1> 		  and  bl, 2
  3925 0000301F D0EB                <1> 		  shr  bl, 1
  3926 00003021 881D[C62D0000]      <1> 		  mov  BYTE [RBUTTON], bl
  3927 00003027 88C3                <1> 		  mov  bl, al
  3928 00003029 80E304              <1> 		  and  bl, 4
  3929 0000302C C0EB02              <1> 		  shr  bl, 2
  3930 0000302F 881D[C72D0000]      <1> 		  mov  BYTE [MBUTTON], bl
  3931 00003035 E866FDFFFF          <1> 		  call GETB
  3932 0000303A A2[C82D0000]        <1> 		  mov  BYTE [XCOORD], al
  3933 0000303F E85CFDFFFF          <1> 		  call GETB
  3934 00003044 A2[C92D0000]        <1> 		  mov  BYTE [YCOORD], al
  3935                              <1> 
  3936                              <1> 	showpixelcursor:
  3937 00003049 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  3938 00003050 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  3939 00003057 668915[9F310000]    <1> 		mov [lastmouseposition], dx
  3940 0000305E 66890D[A1310000]    <1> 		mov [lastmouseposition + 2], cx
  3941 00003065 A0[C82D0000]        <1> 		mov al, [XCOORD]
  3942 0000306A 3C80                <1> 		cmp al, 128
  3943 0000306C 730C                <1> 		jae subxcoord
  3944 0000306E 00C0                <1> 		add al, al
  3945 00003070 B400                <1> 		mov ah, 0
  3946 00003072 6601C2              <1> 		add dx, ax
  3947 00003075 E90B000000          <1> 		jmp subxcoorddn
  3948                              <1> 	subxcoord:
  3949 0000307A 00C0                <1> 		add al, al
  3950 0000307C B300                <1> 		mov bl, 0
  3951 0000307E 28C3                <1> 		sub bl, al
  3952 00003080 B700                <1> 		mov bh, 0
  3953 00003082 6629DA              <1> 		sub dx, bx
  3954                              <1> 	subxcoorddn:
  3955 00003085 8A1D[C92D0000]      <1> 		mov bl, [YCOORD]
  3956 0000308B B000                <1> 		mov al, 0
  3957 0000308D 28D8                <1> 		sub al, bl
  3958 0000308F 3C80                <1> 		cmp al, 128
  3959 00003091 730A                <1> 		jae subycoord
  3960 00003093 B400                <1> 		mov ah, 0
  3961 00003095 6601C1              <1> 		add cx, ax
  3962 00003098 E909000000          <1> 		jmp subycoorddn
  3963                              <1> 	subycoord:
  3964 0000309D B300                <1> 		mov bl, 0
  3965 0000309F 28C3                <1> 		sub bl, al
  3966 000030A1 B700                <1> 		mov bh, 0
  3967 000030A3 6629D9              <1> 		sub cx, bx
  3968                              <1> 	subycoorddn:
  3969 000030A6 6681FA204E          <1> 		cmp dx, 20000
  3970 000030AB 7604                <1> 		jbe nooriginx2
  3971 000030AD 66BA0000            <1> 		mov dx, 0
  3972                              <1> 	nooriginx2:
  3973 000030B1 6681F9204E          <1> 		cmp cx, 20000
  3974 000030B6 7604                <1> 		jbe nooriginy2
  3975 000030B8 66B90000            <1> 		mov cx, 0
  3976                              <1> 	nooriginy2:
  3977 000030BC 6681FA0000          <1> 		cmp dx, 0
  3978 000030C1 7415                <1> 		je nofixxcolumn2
  3979 000030C3 663B15[BD430000]    <1> 		cmp dx, [resolutionx2]
  3980 000030CA 720C                <1> 		jb nofixxcolumn2
  3981 000030CC 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  3982 000030D3 6681EA0200          <1> 		sub dx, 2
  3983                              <1> 	nofixxcolumn2:
  3984 000030D8 6681F90000          <1> 		cmp cx, 0
  3985 000030DD 7415                <1> 		je nofixyrow2
  3986 000030DF 663B0D[B9430000]    <1> 		cmp cx, [resolutiony]
  3987 000030E6 720C                <1> 		jb nofixyrow2
  3988 000030E8 668B0D[B9430000]    <1> 		mov cx, [resolutiony]
  3989 000030EF 6681E90100          <1> 		sub cx, 1
  3990                              <1> 	nofixyrow2:
  3991 000030F4 668915[A3310000]    <1> 		mov [mousecursorposition], dx
  3992 000030FB 66890D[A5310000]    <1> 		mov [mousecursorposition + 2], cx
  3993 00003102 803D[39350000]00    <1> 		cmp byte [guion], 0
  3994 00003109 0F8498000000        <1> 		je near termmouse
  3995 0000310F E889040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3996 00003114 803D[C52D0000]01    <1> 		cmp byte [LBUTTON], 1
  3997 0000311B 0F8462050000        <1> 		je near clickicon
  3998 00003121 803D[C62D0000]01    <1> 		cmp byte [RBUTTON], 1
  3999 00003128 0F8455050000        <1> 		je near clickicon
  4000 0000312E A0[70360000]        <1> 		mov al, [pbutton]
  4001 00003133 C705[73360000]0000- <1> 		mov dword [dragging], 0
  4002 0000313B 0000                <1>
  4003 0000313D 3C00                <1> 		cmp al, 0
  4004 0000313F 740F                <1> 		je nopreviousbutton
  4005 00003141 E8F4030000          <1> 		call clearmousecursor
  4006 00003146 E8860A0000          <1> 		call reloadallgraphics
  4007                              <1> 	windowtermcopyend:
  4008 0000314B E8B6040000          <1> 		call switchmousepos2
  4009                              <1> 	nopreviousbutton:
  4010 00003150 B000                <1> 		mov al, 0
  4011 00003152 A2[70360000]        <1> 		mov [pbutton], al
  4012 00003157 A0[C52D0000]        <1> 		mov al, [LBUTTON]
  4013 0000315C A2[71360000]        <1> 		mov [pLBUTTON], al
  4014 00003161 A0[C62D0000]        <1> 		mov al, [RBUTTON]
  4015 00003166 A2[72360000]        <1> 		mov [pRBUTTON], al
  4016 0000316B B900000000          <1> 		mov ecx, 0
  4017 00003170 BA00000000          <1> 		mov edx, 0
  4018 00003175 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  4019 0000317C 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  4020 00003183 66BB18C7            <1> 		mov bx, 1100011100011000b
  4021 00003187 B400                <1> 		mov ah, 0
  4022 00003189 B0FE                <1> 		mov al, 254
  4023 0000318B C605[36350000]01    <1> 		mov byte [showcursorfonton], 1
  4024 00003192 E836120000          <1> 		call showfontvesa
  4025 00003197 C605[36350000]00    <1> 		mov byte [showcursorfonton], 0
  4026 0000319E C3                  <1> 		ret
  4027                              <1> 
  4028 0000319F 84008400            <1> lastmouseposition dw 132,132
  4029 000031A3 84008400            <1> mousecursorposition dw 132,132	
  4030                              <1> 
  4031                              <1> termmouse:
  4032 000031A7 BE[8F1C0000]        <1> 		mov esi, videobuf2
  4033 000031AC BA00000000          <1> 		mov edx, 0
  4034 000031B1 668B15[9F310000]    <1> 		mov dx, [lastmouseposition]
  4035 000031B8 668B0D[A1310000]    <1> 		mov cx, [lastmouseposition + 2]
  4036 000031BF 66A1[42320000]      <1> 		mov ax, [cursorcache]
  4037 000031C5 663D0000            <1> 		cmp ax, 0
  4038 000031C9 7426                <1> 		je nocopycursorcache
  4039 000031CB 66C1E104            <1> 		shl cx, 4
  4040 000031CF 66C1E203            <1> 		shl dx, 3
  4041 000031D3 01D6                <1> 		add esi, edx
  4042 000031D5 66BA0000            <1> 		mov dx, 0
  4043 000031D9 8A15[AD0E0000]      <1> 		mov dl, [charxy]
  4044 000031DF 6641                <1> 		inc cx
  4045                              <1> termmousecplp1:
  4046 000031E1 01D6                <1> 		add esi, edx
  4047 000031E3 6649                <1> 		dec cx
  4048 000031E5 6681F90000          <1> 		cmp cx, 0
  4049 000031EA 75F5                <1> 		jne termmousecplp1
  4050 000031EC 29D6                <1> 		sub esi, edx
  4051 000031EE 668906              <1> 		mov [esi], ax
  4052                              <1> nocopycursorcache:
  4053 000031F1 BE[8F1C0000]        <1> 		mov esi, videobuf2
  4054 000031F6 BA00000000          <1> 		mov edx, 0
  4055 000031FB 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  4056 00003202 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  4057 00003209 66C1E104            <1> 		shl cx, 4
  4058 0000320D 66C1E203            <1> 		shl dx, 3
  4059 00003211 01D6                <1> 		add esi, edx
  4060 00003213 66BA0000            <1> 		mov dx, 0
  4061 00003217 8A15[AD0E0000]      <1> 		mov dl, [charxy]
  4062 0000321D 6641                <1> 		inc cx
  4063                              <1> termmousecplp2:
  4064 0000321F 01D6                <1> 		add esi, edx
  4065 00003221 6649                <1> 		dec cx
  4066 00003223 6681F90000          <1> 		cmp cx, 0
  4067 00003228 75F5                <1> 		jne termmousecplp2
  4068 0000322A 29D6                <1> 		sub esi, edx
  4069 0000322C 668B06              <1> 		mov ax, [esi]
  4070 0000322F 66A3[42320000]      <1> 		mov [cursorcache], ax
  4071 00003235 B080                <1> 		mov al, 128
  4072 00003237 B407                <1> 		mov ah, 7
  4073 00003239 668906              <1> 		mov [esi], ax
  4074 0000323C E8C8E1FFFF          <1> 		call termcopy
  4075 00003241 C3                  <1> 		ret
  4076 00003242 0000                <1> cursorcache db 0,0
  4077                              <1> 	
  4078                              <1> scancode:
  4079 00003244 000000000000        <1> 	db 0,0,0,0,0,0			;,0h
  4080 0000324A 000000000000        <1> 	db 0,0,0,0,0,0			;,1h
  4081 00003250 3121AD000000        <1> 	db '1','!',173,0,0,0	;,2h
  4082 00003256 3240FDFB0000        <1> 	db '2','@',253,251,0,0	;,3h
  4083 0000325C 332300000000        <1> 	db '3','#',0,0,0,0		;,4h
  4084 00003262 34249B9C0000        <1> 	db '4','$',155,156,0,0	;,5h
  4085 00003268 3525EE000000        <1> 	db '5','%',238,0,0,0	;,6h
  4086 0000326E 365EAC000000        <1> 	db '6','^',172,0,0,0	;,7h
  4087 00003274 3726AB000000        <1> 	db '7','&',171,0,0,0	;,8h
  4088 0000327A 382A00000000        <1> 	db '8','*',0,0,0,0		;,9h
  4089 00003280 392800000000        <1> 	db '9','(',0,0,0,0		;,0Ah
  4090 00003286 302900000000        <1> 	db '0',')',0,0,0,0		;,0Bh
  4091 0000328C 2D5F9DF10000        <1> 	db '-','_',157,241,0,0	;,0Ch
  4092 00003292 3D2BF7F60000        <1> 	db '=','+',247,246,0,0	;,0Dh
  4093 00003298 080800000000        <1> 	db 8,8,0,0,0,0			;,0Eh
  4094 0000329E 000000000000        <1> 	db 0,0,0,0,0,0			;,0Fh
  4095 000032A4 7151848E0000        <1> 	db 'q','Q',132,142,0,0	;,10h
  4096 000032AA 7757868F0000        <1> 	db 'w','W',134,143,0,0	;,11h
  4097 000032B0 65458290EE45        <1> 	db 'e','E',130,144,238,'E'	;,12h
  4098 000032B6 7252898A7050        <1> 	db 'r','R',137,138,'p','P'		;,13h
  4099 000032BC 7454819AE754        <1> 	db 't','T',129,154,231,'T'		;,14h
  4100 000032C2 795998007559        <1> 	db 'y','Y',152,0,'u','Y'	;,15h
  4101 000032C8 7555A3970000        <1> 	db 'u','U',163,151,0,0	;,16h
  4102 000032CE 6949A18D6949        <1> 	db 'i','I',161,141,'i','I'	;,17h
  4103 000032D4 6F4FA29577EA        <1> 	db 'o','O',162,149,'w',234	;,18h
  4104 000032DA 70509499E3EF        <1> 	db 'p','P',148,153,227,239	;,19h
  4105 000032E0 5B7BF4000000        <1> 	db '[','{',244,0,0,0		;,1Ah
  4106 000032E6 5D7DF5000000        <1> 	db ']','}',245,0,0,0		;,1Bh
  4107 000032EC 000000000000        <1> 	db 0,0,0,0,0,0			;,1Ch
  4108 000032F2 000000000000        <1> 	db 0,0,0,0,0,0			;,1Dh
  4109 000032F8 6141A085E041        <1> 	db 'a','A',160,133,224,'A'	;,1Eh
  4110 000032FE 73531500E5E4        <1> 	db 's','S',21,0,229,228		;,1Fh
  4111 00003304 6444F800EB7F        <1> 	db 'd','D',248,0,235,127	;,20h
  4112 0000330A 66469F00EDE8        <1> 	db 'f','F',159,0,237,232	;,21h
  4113 00003310 6747000079E2        <1> 	db 'g','G',0,0,'y',226		;,22h
  4114 00003316 684800006E48        <1> 	db 'h','H',0,0,'n','H'		;,23h
  4115 0000331C 6A4A00000000        <1> 	db 'j','J',0,0,0,0		;,24h
  4116 00003322 6B4B00006B4B        <1> 	db 'k','K',0,0,'k','K'		;,25h
  4117 00003328 6C4C0000E9E9        <1> 	db 'l','L',0,0,233,233		;,26h
  4118 0000332E 3B3A14000000        <1> 	db ';',':',20,0,0,0		;,27h
  4119 00003334 272200000000        <1> 	db 27h,22h,0,0,0,0		;,28h
  4120 0000333A 607E00000000        <1> 	db '`','~',0,0,0,0		;,29h
  4121 00003340 000000000000        <1> 	db 0,0,0,0,0,0			;,2Ah
  4122 00003346 5C7CAAB30000        <1> 	db '\','|',170,179,0,0	;,2Bh
  4123 0000334C 7A5A91927A5A        <1> 	db 'z','Z',145,146,'z','Z'	;,2Ch
  4124 00003352 7858000000F0        <1> 	db 'x','X',0,0,0,240		;,2Dh
  4125 00003358 634387800000        <1> 	db 'c','C',135,128,0,0	;,2Eh
  4126 0000335E 765600000000        <1> 	db 'v','V',0,0,0,0		;,2Fh
  4127 00003364 62420000E142        <1> 	db 'b','B',0,0,225,'B'	;,30h
  4128 0000336A 6E4EA4A5764E        <1> 	db 'n','N',164,165,'v','N'	;,31h
  4129 00003370 6D4D0000E64D        <1> 	db 'm','M',0,0,230,'M'		;,32h
  4130 00003376 2C3CF3AE0000        <1> 	db ',','<',243,174,0,0	;,33h
  4131 0000337C 2E3EF2AF0000        <1> 	db '.','>',242,175,0,0	;,34h
  4132 00003382 2F3FA8000000        <1> 	db '/','?',168,0,0,0	;,35h
  4133 00003388 000000000000        <1> 	db 0,0,0,0,0,0			;,36h
  4134 0000338E 000000000000        <1> 	db 0,0,0,0,0,0			;,37h
  4135 00003394 000000000000        <1> 	db 0,0,0,0,0,0			;,38h
  4136 0000339A 202000000000        <1> 	db ' ',' ',0,0,0,0		;,39h
  4137                              <1> noscan:
  4138                                      %include 'source/gui.asm'
  4139                              <1> guiclear:
  4140 000033A0 8B3D[CB6A0000]      <1> 	mov edi, [physbaseptr]
  4141 000033A6 668B15[BB430000]    <1> 	mov dx, [resolutionx]
  4142 000033AD 668B0D[B9430000]    <1> 	mov cx, [resolutiony]
  4143 000033B4 66A1[DD330000]      <1> 	mov ax, [background]
  4144                              <1> guiclearloop:
  4145 000033BA 668907              <1> 	mov [edi], ax
  4146 000033BD 81C702000000        <1> 	add edi, 2
  4147 000033C3 664A                <1> 	dec dx
  4148 000033C5 6681FA0000          <1> 	cmp dx, 0
  4149 000033CA 77EE                <1> 	ja guiclearloop
  4150 000033CC 6649                <1> 	dec cx
  4151 000033CE 668B15[BB430000]    <1> 	mov dx, [resolutionx]
  4152 000033D5 6681F90000          <1> 	cmp cx, 0
  4153 000033DA 77DE                <1> 	ja guiclearloop
  4154 000033DC C3                  <1> 	ret
  4155                              <1> 
  4156 000033DD CF7B                <1> background dw 0111101111001111b
  4157                              <1> 
  4158                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  4159 000033DF B800000000          <1> 	mov eax, 0
  4160 000033E4 BB00000000          <1> 	mov ebx, 0
  4161 000033E9 B900000000          <1> 	mov ecx, 0
  4162 000033EE BA00000000          <1> 	mov edx, 0
  4163 000033F3 8B3D[CB6A0000]      <1> 	mov edi, [physbaseptr]
  4164 000033F9 668B15[BB430000]    <1> 	mov dx, [resolutionx]
  4165 00003400 668B0D[B9430000]    <1> 	mov cx, [resolutiony]
  4166 00003407 668B1D[DD330000]    <1> 	mov bx, [background]
  4167                              <1> guiclearloop2:
  4168 0000340E 66891F              <1> 	mov [edi], bx
  4169 00003411 81C702000000        <1> 	add edi, 2
  4170 00003417 664A                <1> 	dec dx
  4171 00003419 6681FA0000          <1> 	cmp dx, 0
  4172 0000341E 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  4173 00003424 6649                <1> 	dec cx
  4174 00003426 668B15[BB430000]    <1> 	mov dx, [resolutionx]
  4175 0000342D 6681F90000          <1> 	cmp cx, 0
  4176 00003432 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  4177 00003438 C605[39350000]01    <1> 	mov byte [guion], 1
  4178 0000343F C605[38350000]00    <1> 	mov byte [mouseselecton], 0
  4179 00003446 B800000000          <1> 	mov eax, 0
  4180 0000344B BB00000000          <1> 	mov ebx, 0
  4181 00003450 B900000000          <1> 	mov ecx, 0
  4182 00003455 BA00000000          <1> 	mov edx, 0
  4183                              <1> 	
  4184 0000345A BE[AF460000]        <1> 	mov esi, pacmsg
  4185 0000345F 66B80000            <1> 	mov ax, 0
  4186 00003463 BB00000000          <1> 	mov ebx, 0
  4187 00003468 66B99000            <1> 	mov cx, 144
  4188 0000346C 66BA0400            <1> 	mov dx, 4
  4189 00003470 E8A30A0000          <1> 	call showstring
  4190                              <1> 	
  4191 00003475 BE[C5470000]        <1> 	mov esi, interneticon
  4192 0000347A 66B80000            <1> 	mov ax, 0
  4193 0000347E BB[24470000]        <1> 	mov ebx, noie
  4194 00003483 66B91800            <1> 	mov cx, 24
  4195 00003487 66BA0400            <1> 	mov dx, 4
  4196 0000348B E8500E0000          <1> 	call showicon
  4197                              <1> 	
  4198 00003490 BE[47480000]        <1> 	mov esi, wordicon
  4199 00003495 66B80000            <1> 	mov ax, 0
  4200 00003499 BB00000000          <1> 	mov ebx, 0
  4201 0000349E 66B91800            <1> 	mov cx, 24
  4202 000034A2 66BA3000            <1> 	mov dx, 48
  4203 000034A6 E8350E0000          <1> 	call showicon
  4204                              <1> 	
  4205 000034AB BE[C9480000]        <1> 	mov esi, pacmanpellet
  4206 000034B0 66B80000            <1> 	mov ax, 0
  4207 000034B4 BB00000000          <1> 	mov ebx, 0
  4208 000034B9 66B94000            <1> 	mov cx, 64
  4209 000034BD 66BA0400            <1> 	mov dx, 4
  4210 000034C1 E81A0E0000          <1> 	call showicon
  4211                              <1> 	
  4212 000034C6 BE[CD490000]        <1> 	mov esi, pacman
  4213 000034CB 66B80000            <1> 	mov ax, 0
  4214 000034CF BB[09470000]        <1> 	mov ebx, pacmannomnom
  4215 000034D4 66B94000            <1> 	mov cx, 64
  4216 000034D8 66BA3000            <1> 	mov dx, 48
  4217 000034DC E8FF0D0000          <1> 	call showicon
  4218                              <1> 	
  4219 000034E1 BE[4B490000]        <1> 	mov esi, ghostie
  4220 000034E6 66B80000            <1> 	mov ax, 0
  4221 000034EA BB[EE460000]        <1> 	mov ebx, boo
  4222 000034EF 66B96C00            <1> 	mov cx, 108
  4223 000034F3 66BA0400            <1> 	mov dx, 4
  4224 000034F7 E8E40D0000          <1> 	call showicon
  4225                              <1> 
  4226 000034FC BE[9B460000]        <1> 	mov esi, start
  4227 00003501 668B0D[B9430000]    <1> 	mov cx, [resolutiony]
  4228 00003508 6681E91000          <1> 	sub cx, 16
  4229 0000350D 66BA0200            <1> 	mov dx, 2
  4230 00003511 B400                <1> 	mov ah, 0
  4231 00003513 B010                <1> 	mov al, 00010000b
  4232 00003515 BB[72470000]        <1> 	mov ebx, winblows
  4233 0000351A E8F9090000          <1> 	call showstring
  4234                              <1> 	
  4235 0000351F E895FAFFFF          <1> 	call cursorgui
  4236                              <1> guistart:
  4237 00003524 E8CBF8FFFF          <1> 	call guistartin
  4238 00003529 C605[32350000]00    <1> 	mov byte [copygui], 0
  4239 00003530 EBF2                <1> 	jmp guistart
  4240                              <1> 	
  4241                              <1> ;guicopy:	;;for double buffering
  4242                              <1> ;	mov byte [copygui], 1
  4243                              <1> ;	mov edi, [offscreenmemoffset]
  4244                              <1> ;	mov edx, 0
  4245                              <1> ;	mov ecx, 0
  4246                              <1> ;	mov dx, [mousecursorposition]
  4247                              <1> ;	mov cx, [mousecursorposition + 2]
  4248                              <1> ;	add edi, edx
  4249                              <1> ;	mov dx, [resolutionx2]
  4250                              <1> ;	inc cx
  4251                              <1> ;guicp2:
  4252                              <1> ;	add edi, edx
  4253                              <1> ;	dec cx
  4254                              <1> ;	cmp cx, 0
  4255                              <1> ;	jne guicp2
  4256                              <1> ;	sub edi, edx
  4257                              <1> ;	mov [cursorloc], edi
  4258                              <1> ;	mov ebx, cursorbmp
  4259                              <1> ;	mov cx, [resolutiony]
  4260                              <1> ;	rol ecx, 16
  4261                              <1> ;	mov cx, [resolutionx]
  4262                              <1> ;	mov esi, [physbaseptr]
  4263                              <1> ;	mov edi, [offscreenmemoffset]
  4264                              <1> ;guicp1:
  4265                              <1> ;	mov ax, [esi]
  4266                              <1> ;	mov [edi], ax
  4267                              <1> ;	add esi, 2
  4268                              <1> ;	add edi, 2
  4269                              <1> ;	cmp edi, [cursorloc]
  4270                              <1> ;	je copycursor
  4271                              <1> ;dncopycursor:
  4272                              <1> ;	dec cx
  4273                              <1> ;	cmp cx, 0
  4274                              <1> ;	jne guicp1
  4275                              <1> ;	mov cx, [resolutionx]
  4276                              <1> ;	rol ecx, 16
  4277                              <1> ;	dec cx
  4278                              <1> ;	cmp cx, 0
  4279                              <1> ;	rol ecx, 16
  4280                              <1> ;	jne guicp1
  4281                              <1> ;	mov byte [copygui], 0
  4282                              <1> ;	ret
  4283                              <1> ;copycursor:
  4284                              <1> ;	cmp ebx, cursorbmpend
  4285                              <1> ;	jae dncopycursor
  4286                              <1> ;	mov dx, [resolutionx2]
  4287                              <1> ;	add edi, edx
  4288                              <1> ;	mov [cursorloc], edi
  4289                              <1> ;	sub edi, edx
  4290                              <1> ;	dec ebx
  4291                              <1> ;	sub edi, 2
  4292                              <1> ;	sub esi, 2
  4293                              <1> ;	mov dx, 9
  4294                              <1> ;curscplp:
  4295                              <1> ;	inc ebx
  4296                              <1> ;	add esi, 2
  4297                              <1> ;	add edi, 2
  4298                              <1> ;	mov ax, [esi]
  4299                              <1> ;	mov [edi], ax
  4300                              <1> ;	mov al, [ebx]
  4301                              <1> ;	cmp al, 0
  4302                              <1> ;	je curscplp2
  4303                              <1> ;	mov word [edi], 1110011110011100b
  4304                              <1> ;curscplp2:
  4305                              <1> ;	dec cx
  4306                              <1> ;	cmp cx, 0
  4307                              <1> ;	je dncopycursor
  4308                              <1> ;	dec dx
  4309                              <1> ;	cmp dx, 0
  4310                              <1> ;	jne curscplp
  4311                              <1> ;	jmp dncopycursor
  4312                              <1> 	
  4313                              <1> 	
  4314                              <1> ;cursorloc: dd 0
  4315                              <1> 		
  4316                              <1> ;nextimage:	
  4317                              <1> ;	call guiclear
  4318                              <1> ;	mov esi, [bmpend]
  4319                              <1> ;	mov eax, 0
  4320                              <1> ;	mov ebx, 0
  4321                              <1> ;	mov ecx, 0
  4322                              <1> ;	mov edx, 0
  4323                              <1> ;	call showbmp
  4324                              <1> ;	jmp guistartin
  4325                              <1> 		
  4326 00003532 00                  <1> copygui db 0
  4327 00003533 00                  <1> graphicsset db 0
  4328 00003534 0000                <1> graphicspos db 0,0
  4329 00003536 00                  <1> showcursorfonton db 0
  4330 00003537 00                  <1> savefonton db 0
  4331 00003538 00                  <1> mouseselecton db 0
  4332 00003539 00                  <1> guion db 0
  4333                              <1> 
  4334                              <1> 		
  4335                              <1> clearmousecursor:
  4336 0000353A BE[DD330000]        <1> 		mov esi, background
  4337 0000353F 8B3D[CB6A0000]      <1> 		mov edi, [physbaseptr]
  4338 00003545 BA00000000          <1> 		mov edx, 0
  4339 0000354A B900000000          <1> 		mov ecx, 0
  4340 0000354F 668B15[9F310000]    <1> 		mov dx, [lastmouseposition]
  4341 00003556 668B0D[A1310000]    <1> 		mov cx, [lastmouseposition + 2]
  4342 0000355D 01D7                <1> 		add edi, edx
  4343 0000355F BA00000000          <1> 		mov edx, 0
  4344 00003564 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  4345 0000356B 6681F90000          <1> 		cmp cx, 0
  4346 00003570 740B                <1> 		je noyclr
  4347 00003572 01D7                <1> yclr:	add edi, edx
  4348 00003574 6649                <1> 		dec cx
  4349 00003576 6681F90000          <1> 		cmp cx, 0
  4350 0000357B 75F5                <1> 		jne yclr
  4351 0000357D 668B06              <1> noyclr:	mov ax, [esi]
  4352 00003580 C1C010              <1> 		rol eax, 16
  4353 00003583 668B06              <1> 		mov ax, [esi]
  4354 00003586 8907                <1> 		mov [edi], eax
  4355 00003588 894704              <1> 		mov [edi + 4], eax
  4356 0000358B 894708              <1> 		mov [edi + 8], eax
  4357 0000358E 89470C              <1> 		mov [edi + 12], eax
  4358 00003591 01D7                <1> 		add edi, edx
  4359 00003593 6641                <1> 		inc cx
  4360 00003595 6681F91000          <1> 		cmp cx, 16
  4361 0000359A 72E1                <1> 		jb noyclr
  4362 0000359C C3                  <1> 		ret
  4363                              <1> 
  4364                              <1> switchmousepos:		;;switch were the mouse is located
  4365 0000359D BE[00120000]        <1> 		mov esi, mousecolorbuf
  4366 000035A2 8B3D[CB6A0000]      <1> 		mov edi, [physbaseptr]
  4367 000035A8 BA00000000          <1> 		mov edx, 0
  4368 000035AD B900000000          <1> 		mov ecx, 0
  4369 000035B2 668B15[9F310000]    <1> 		mov dx, [lastmouseposition]
  4370 000035B9 668B0D[A1310000]    <1> 		mov cx, [lastmouseposition + 2]
  4371 000035C0 01D7                <1> 		add edi, edx
  4372 000035C2 BA00000000          <1> 		mov edx, 0
  4373 000035C7 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  4374 000035CE 6681F90000          <1> 		cmp cx, 0
  4375 000035D3 740B                <1> 		je noswmsy
  4376 000035D5 01D7                <1> swmsy:		add edi, edx
  4377 000035D7 6649                <1> 		dec cx
  4378 000035D9 6681F90000          <1> 		cmp cx, 0
  4379 000035DE 75F5                <1> 		jne swmsy
  4380 000035E0 8B06                <1> noswmsy:	mov eax, [esi]
  4381 000035E2 8B5E04              <1> 		mov ebx, [esi + 4]
  4382 000035E5 8907                <1> 		mov [edi], eax
  4383 000035E7 895F04              <1> 		mov [edi + 4], ebx
  4384 000035EA 8B4608              <1> 		mov eax, [esi + 8]
  4385 000035ED 8B5E0C              <1> 		mov ebx, [esi + 12]
  4386 000035F0 894708              <1> 		mov [edi + 8], eax
  4387 000035F3 895F0C              <1> 		mov [edi + 12], ebx
  4388 000035F6 01D7                <1> 		add edi, edx
  4389 000035F8 81C610000000        <1> 		add esi, 16
  4390 000035FE 81FE[00130000]      <1> 		cmp esi, mcolorend
  4391 00003604 72DA                <1> 		jb noswmsy
  4392                              <1> 		
  4393                              <1> switchmousepos2:
  4394 00003606 BE[00120000]        <1> 		mov esi, mousecolorbuf
  4395 0000360B 8B3D[CB6A0000]      <1> 		mov edi, [physbaseptr]
  4396 00003611 BA00000000          <1> 		mov edx, 0
  4397 00003616 B900000000          <1> 		mov ecx, 0
  4398 0000361B 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  4399 00003622 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  4400 00003629 01D7                <1> 		add edi, edx
  4401 0000362B BA00000000          <1> 		mov edx, 0
  4402 00003630 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  4403 00003637 6681F90000          <1> 		cmp cx, 0
  4404 0000363C 740B                <1> 		je noswmsy2
  4405 0000363E 01D7                <1> swmsy2:		add edi, edx
  4406 00003640 6649                <1> 		dec cx
  4407 00003642 6681F90000          <1> 		cmp cx, 0
  4408 00003647 75F5                <1> 		jne swmsy2
  4409 00003649 8B07                <1> noswmsy2:	mov eax, [edi]
  4410 0000364B 8B5F04              <1> 		mov ebx, [edi + 4]
  4411 0000364E 8906                <1> 		mov [esi], eax
  4412 00003650 895E04              <1> 		mov [esi + 4], ebx
  4413 00003653 8B4708              <1> 		mov eax, [edi + 8]
  4414 00003656 8B5F0C              <1> 		mov ebx, [edi + 12]
  4415 00003659 894608              <1> 		mov [esi + 8], eax
  4416 0000365C 895E0C              <1> 		mov [esi + 12], ebx
  4417 0000365F 01D7                <1> 		add edi, edx
  4418 00003661 81C610000000        <1> 		add esi, 16
  4419 00003667 81FE[00130000]      <1> 		cmp esi, mcolorend
  4420 0000366D 72DA                <1> 		jb noswmsy2
  4421 0000366F C3                  <1> 		ret
  4422                              <1> 
  4423 00003670 00                  <1> pbutton db 0
  4424 00003671 00                  <1> pLBUTTON db 0
  4425 00003672 00                  <1> pRBUTTON db 0
  4426 00003673 00000000            <1> dragging dw 0,0
  4427 00003677 0000000000000000    <1> lastpos dw 0,0,0,0
  4428 0000367F 00000000            <1> colorbuf dw 0,0
  4429                              <1> 	
  4430                              <1> 	clickicon:
  4431 00003683 B001                <1> 		mov al, 1
  4432 00003685 A2[70360000]        <1> 		mov [pbutton], al
  4433 0000368A A0[71360000]        <1> 		mov al, [pLBUTTON]
  4434 0000368F 2205[C52D0000]      <1> 		and al, [LBUTTON]
  4435 00003695 8A25[72360000]      <1> 		mov ah, [pRBUTTON]
  4436 0000369B 2225[C62D0000]      <1> 		and ah, [RBUTTON]
  4437 000036A1 08E0                <1> 		or al, ah
  4438 000036A3 3C00                <1> 		cmp al, 0
  4439 000036A5 741B                <1> 		je nodragclick
  4440 000036A7 813D[73360000]0100- <1> 		cmp dword [dragging], 1
  4441 000036AF 0000                <1>
  4442 000036B1 732D                <1> 		jae dragclick
  4443 000036B3 C705[73360000]0100- <1> 		mov dword [dragging], 1
  4444 000036BB 0000                <1>
  4445 000036BD E91E000000          <1> 		jmp dragclick
  4446                              <1> 	nodragclick:
  4447 000036C2 C705[73360000]0000- <1> 		mov dword [dragging], 0
  4448 000036CA 0000                <1>
  4449 000036CC A0[C52D0000]        <1> 		mov al, [LBUTTON]
  4450 000036D1 A2[71360000]        <1> 		mov [pLBUTTON], al
  4451 000036D6 A0[C62D0000]        <1> 		mov al, [RBUTTON]
  4452 000036DB A2[72360000]        <1> 		mov [pRBUTTON], al
  4453                              <1> 	dragclick:
  4454 000036E0 66B80000            <1> 		mov ax, 0
  4455 000036E4 BE[00100000]        <1> 		mov esi, graphicstable
  4456 000036E9 C705[E9460000]0000- <1> 		mov dword [codepointer], 0
  4457 000036F1 0000                <1>
  4458                              <1> 	clicon2:
  4459 000036F3 BA00000000          <1> 		mov edx, 0
  4460 000036F8 B900000000          <1> 		mov ecx, 0
  4461 000036FD 66813E0100          <1> 		cmp word [esi], 1
  4462 00003702 0F841B000000        <1> 		je near iconselect
  4463 00003708 66813E0200          <1> 		cmp word [esi], 2
  4464 0000370D 0F8472010000        <1> 		je near textselected
  4465 00003713 66813E0300          <1> 		cmp word [esi], 3
  4466 00003718 0F84C7020000        <1> 		je near windowselect
  4467 0000371E E90B040000          <1> 		jmp nexticonsel
  4468                              <1> 	iconselect:
  4469 00003723 668B5606            <1> 		mov dx, [esi + 6]
  4470 00003727 6689D0              <1> 		mov ax, dx
  4471 0000372A 668B4E08            <1> 		mov cx, [esi + 8]
  4472 0000372E 6689CB              <1> 		mov bx, cx
  4473 00003731 6681C32000          <1> 		add bx, 32
  4474 00003736 6601D0              <1> 		add ax, dx
  4475 00003739 813D[73360000]0100- <1> 		cmp dword [dragging], 1
  4476 00003741 0000                <1>
  4477 00003743 746F                <1> 		je dragicon
  4478 00003745 813D[73360000]0000- <1> 		cmp dword [dragging], 0
  4479 0000374D 0000                <1>
  4480 0000374F 7411                <1> 		je nodragiconcheck
  4481 00003751 3935[73360000]      <1> 		cmp dword [dragging], esi
  4482 00003757 0F85D1030000        <1> 		jne near nexticonsel
  4483 0000375D E952000000          <1> 		jmp dragicon
  4484                              <1> 	nodragiconcheck:
  4485 00003762 663905[A3310000]    <1> 		cmp [mousecursorposition], ax
  4486 00003769 0F82BF030000        <1> 		jb near nexticonsel
  4487 0000376F 66054000            <1> 		add ax, 64
  4488 00003773 663905[A3310000]    <1> 		cmp [mousecursorposition], ax
  4489 0000377A 0F87AE030000        <1> 		ja near nexticonsel
  4490 00003780 6629D0              <1> 		sub ax, dx
  4491 00003783 66390D[A5310000]    <1> 		cmp [mousecursorposition + 2], cx
  4492 0000378A 0F829E030000        <1> 		jb near nexticonsel
  4493 00003790 66391D[A5310000]    <1> 		cmp [mousecursorposition + 2], bx
  4494 00003797 0F8791030000        <1> 		ja near nexticonsel
  4495 0000379D 668B460A            <1> 		mov ax, [esi + 10]
  4496 000037A1 66250100            <1> 		and ax, 1
  4497 000037A5 663D0100            <1> 		cmp ax, 1
  4498 000037A9 0F84B6000000        <1> 		je near unselecticon
  4499 000037AF E98D000000          <1> 		jmp nodragicon
  4500                              <1> 	dragicon:
  4501 000037B4 663905[9F310000]    <1> 		cmp [lastmouseposition], ax
  4502 000037BB 0F826D030000        <1> 		jb near nexticonsel
  4503 000037C1 66054000            <1> 		add ax, 64
  4504 000037C5 663905[9F310000]    <1> 		cmp [lastmouseposition], ax
  4505 000037CC 0F875C030000        <1> 		ja near nexticonsel
  4506 000037D2 6629D0              <1> 		sub ax, dx
  4507 000037D5 66390D[A1310000]    <1> 		cmp [lastmouseposition + 2], cx
  4508 000037DC 0F824C030000        <1> 		jb near nexticonsel
  4509 000037E2 66391D[A1310000]    <1> 		cmp [lastmouseposition + 2], bx
  4510 000037E9 0F873F030000        <1> 		ja near nexticonsel
  4511 000037EF 668B460A            <1> 		mov ax, [esi + 10]
  4512 000037F3 2410                <1> 		and al, 00010000b
  4513 000037F5 3C10                <1> 		cmp al, 00010000b
  4514 000037F7 7448                <1> 		je nodragicon
  4515 000037F9 8935[73360000]      <1> 		mov [dragging], esi
  4516 000037FF 66D1E2              <1> 		shl dx, 1
  4517 00003802 662B15[9F310000]    <1> 		sub dx, [lastmouseposition]
  4518 00003809 660315[A3310000]    <1> 		add dx, [mousecursorposition]
  4519 00003810 66D1EA              <1> 		shr dx, 1
  4520 00003813 66030D[A5310000]    <1> 		add cx, [mousecursorposition + 2]
  4521 0000381A 662B0D[A1310000]    <1> 		sub cx, [lastmouseposition + 2]
  4522 00003821 663B15[BD430000]    <1> 		cmp dx, [resolutionx2]
  4523 00003828 7607                <1> 		jbe chkyresdrgicn
  4524 0000382A 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  4525                              <1> 	chkyresdrgicn:
  4526 00003831 663B0D[B9430000]    <1> 		cmp cx, [resolutiony]
  4527 00003838 7607                <1> 		jbe nodragicon
  4528 0000383A 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  4529                              <1> 	nodragicon:
  4530 00003841 66814E0A0100        <1> 		or word [esi + 10], 1
  4531 00003847 8B5E0C              <1> 		mov ebx, [esi + 12]
  4532 0000384A 668B460A            <1> 		mov ax, [esi + 10]
  4533 0000384E 8B7602              <1> 		mov esi, [esi + 2]
  4534 00003851 C705[E9460000]0000- <1> 		mov dword [codepointer], 0
  4535 00003859 0000                <1>
  4536 0000385B E8800A0000          <1> 		call showicon
  4537 00003860 E9E2020000          <1> 		jmp doneiconsel
  4538                              <1> 	unselecticon:
  4539 00003865 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4540 0000386B 8B5E0C              <1> 		mov ebx, [esi + 12]
  4541 0000386E 668B460A            <1> 		mov ax, [esi + 10]
  4542 00003872 8B7602              <1> 		mov esi, [esi + 2]
  4543 00003875 891D[E9460000]      <1> 		mov [codepointer], ebx
  4544 0000387B E8600A0000          <1> 		call showicon
  4545 00003880 E9C2020000          <1> 		jmp doneiconsel
  4546                              <1> 	textselected:
  4547 00003885 8B5E02              <1> 		mov ebx, [esi + 2]
  4548 00003888 668B5606            <1> 		mov dx, [esi + 6]
  4549 0000388C 6689D0              <1> 		mov ax, dx
  4550 0000388F 668B4E08            <1> 		mov cx, [esi + 8]
  4551                              <1> 	lengthtesttext:
  4552 00003893 803B00              <1> 		cmp byte [ebx], 0
  4553 00003896 7407                <1> 		je donetesttextlength
  4554 00003898 43                  <1> 		inc ebx
  4555 00003899 66051000            <1> 		add ax, 16
  4556 0000389D EBF4                <1> 		jmp lengthtesttext
  4557                              <1> 	donetesttextlength:
  4558 0000389F 6689CB              <1> 		mov bx, cx
  4559 000038A2 6681C30F00          <1> 		add bx, 15
  4560 000038A7 813D[73360000]0100- <1> 		cmp dword [dragging], 1
  4561 000038AF 0000                <1>
  4562 000038B1 7468                <1> 		je dragtext
  4563 000038B3 813D[73360000]0000- <1> 		cmp dword [dragging], 0
  4564 000038BB 0000                <1>
  4565 000038BD 7411                <1> 		je nodragtextcheck
  4566 000038BF 3935[73360000]      <1> 		cmp dword [dragging], esi
  4567 000038C5 0F8563020000        <1> 		jne near nexticonsel
  4568 000038CB E94B000000          <1> 		jmp dragtext
  4569                              <1> 	nodragtextcheck:
  4570 000038D0 663915[A3310000]    <1> 		cmp [mousecursorposition], dx
  4571 000038D7 0F8251020000        <1> 		jb near nexticonsel
  4572 000038DD 663905[A3310000]    <1> 		cmp [mousecursorposition], ax
  4573 000038E4 0F8744020000        <1> 		ja near nexticonsel
  4574 000038EA 66390D[A5310000]    <1> 		cmp [mousecursorposition + 2], cx
  4575 000038F1 0F8237020000        <1> 		jb near nexticonsel
  4576 000038F7 66391D[A5310000]    <1> 		cmp [mousecursorposition + 2], bx
  4577 000038FE 0F872A020000        <1> 		ja near nexticonsel
  4578 00003904 668B460A            <1> 		mov ax, [esi + 10]
  4579 00003908 66250100            <1> 		and ax, 1
  4580 0000390C 663D0100            <1> 		cmp ax, 1
  4581 00003910 0F84AB000000        <1> 		je near unselecttext
  4582 00003916 E986000000          <1> 		jmp nodragtext
  4583                              <1> 	dragtext:
  4584 0000391B 663915[9F310000]    <1> 		cmp [lastmouseposition], dx
  4585 00003922 0F8206020000        <1> 		jb near nexticonsel
  4586 00003928 663905[9F310000]    <1> 		cmp [lastmouseposition], ax
  4587 0000392F 0F87F9010000        <1> 		ja near nexticonsel
  4588 00003935 66390D[A1310000]    <1> 		cmp [lastmouseposition + 2], cx
  4589 0000393C 0F82EC010000        <1> 		jb near nexticonsel
  4590 00003942 66391D[A1310000]    <1> 		cmp [lastmouseposition + 2], bx
  4591 00003949 0F87DF010000        <1> 		ja near nexticonsel
  4592 0000394F 668B460A            <1> 		mov ax, [esi + 10]
  4593 00003953 2410                <1> 		and al, 00010000b
  4594 00003955 663D1000            <1> 		cmp ax, 00010000b
  4595 00003959 0F8442000000        <1> 		je near nodragtext
  4596 0000395F 8935[73360000]      <1> 		mov [dragging], esi
  4597 00003965 662B15[9F310000]    <1> 		sub dx, [lastmouseposition]
  4598 0000396C 660315[A3310000]    <1> 		add dx, [mousecursorposition]
  4599 00003973 66030D[A5310000]    <1> 		add cx, [mousecursorposition + 2]
  4600 0000397A 662B0D[A1310000]    <1> 		sub cx, [lastmouseposition + 2]
  4601 00003981 663B15[BD430000]    <1> 		cmp dx, [resolutionx2]
  4602 00003988 7607                <1> 		jbe chkyresdrgtxt
  4603 0000398A 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  4604                              <1> 	chkyresdrgtxt:
  4605 00003991 663B0D[B9430000]    <1> 		cmp cx, [resolutiony]
  4606 00003998 7607                <1> 		jbe nodragtext
  4607 0000399A 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  4608                              <1> 	nodragtext:
  4609 000039A1 66814E0A0100        <1> 		or word [esi + 10], 1
  4610 000039A7 8B5E0C              <1> 		mov ebx, [esi + 12]
  4611 000039AA 891D[E9460000]      <1> 		mov [codepointer], ebx
  4612 000039B0 668B460A            <1> 		mov ax, [esi + 10]
  4613 000039B4 8B7602              <1> 		mov esi, [esi + 2]
  4614 000039B7 E85C050000          <1> 		call showstring
  4615 000039BC E986010000          <1> 		jmp doneiconsel
  4616                              <1> 	unselecttext:
  4617 000039C1 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4618 000039C7 8B5E0C              <1> 		mov ebx, [esi + 12]
  4619 000039CA 668B460A            <1> 		mov ax, [esi + 10]
  4620 000039CE 8B7602              <1> 		mov esi, [esi + 2]
  4621 000039D1 C705[E9460000]0000- <1> 		mov dword [codepointer], 0
  4622 000039D9 0000                <1>
  4623 000039DB E838050000          <1> 		call showstring
  4624 000039E0 E962010000          <1> 		jmp doneiconsel
  4625                              <1> windowselect:
  4626 000039E5 8B7E02              <1> 		mov edi, [esi + 2]
  4627 000039E8 668B5606            <1> 		mov dx, [esi + 6]
  4628 000039EC 6689D0              <1> 		mov ax, dx
  4629 000039EF 668B4E08            <1> 		mov cx, [esi + 8]
  4630 000039F3 6689CB              <1> 		mov bx, cx
  4631 000039F6 6681C31000          <1> 		add bx, 16
  4632 000039FB 813D[73360000]0100- <1> 		cmp dword [dragging], 1
  4633 00003A03 0000                <1>
  4634 00003A05 746D                <1> 		je dragwin
  4635 00003A07 813D[73360000]0000- <1> 		cmp dword [dragging], 0
  4636 00003A0F 0000                <1>
  4637 00003A11 7411                <1> 		je nodragwincheck
  4638 00003A13 3935[73360000]      <1> 		cmp dword [dragging], esi
  4639 00003A19 0F850F010000        <1> 		jne near nexticonsel
  4640 00003A1F E950000000          <1> 		jmp dragwin
  4641                              <1> 	nodragwincheck:
  4642 00003A24 663905[A3310000]    <1> 		cmp [mousecursorposition], ax
  4643 00003A2B 0F82FD000000        <1> 		jb near nexticonsel
  4644 00003A31 660307              <1> 		add ax, [edi]
  4645 00003A34 660307              <1> 		add ax, [edi]
  4646 00003A37 663905[A3310000]    <1> 		cmp [mousecursorposition], ax
  4647 00003A3E 0F87EA000000        <1> 		ja near nexticonsel
  4648 00003A44 66390D[A5310000]    <1> 		cmp [mousecursorposition + 2], cx
  4649 00003A4B 0F82DD000000        <1> 		jb near nexticonsel
  4650 00003A51 66391D[A5310000]    <1> 		cmp [mousecursorposition + 2], bx
  4651 00003A58 0F87D0000000        <1> 		ja near nexticonsel
  4652 00003A5E 662D1400            <1> 		sub ax, 20
  4653 00003A62 663905[A3310000]    <1> 		cmp [mousecursorposition], ax
  4654 00003A69 0F8795000000        <1> 		ja near killwin
  4655 00003A6F E97C000000          <1> 		jmp nodragwin
  4656                              <1> 	dragwin:
  4657 00003A74 663905[9F310000]    <1> 		cmp [lastmouseposition], ax
  4658 00003A7B 0F82AD000000        <1> 		jb near nexticonsel
  4659 00003A81 660307              <1> 		add ax, [edi]
  4660 00003A84 660307              <1> 		add ax, [edi]
  4661 00003A87 663905[9F310000]    <1> 		cmp [lastmouseposition], ax
  4662 00003A8E 0F879A000000        <1> 		ja near nexticonsel
  4663 00003A94 66390D[A1310000]    <1> 		cmp [lastmouseposition + 2], cx
  4664 00003A9B 0F828D000000        <1> 		jb near nexticonsel
  4665 00003AA1 66391D[A1310000]    <1> 		cmp [lastmouseposition + 2], bx
  4666 00003AA8 0F8780000000        <1> 		ja near nexticonsel
  4667 00003AAE 8935[73360000]      <1> 		mov [dragging], esi
  4668 00003AB4 662B15[9F310000]    <1> 		sub dx, [lastmouseposition]
  4669 00003ABB 660315[A3310000]    <1> 		add dx, [mousecursorposition]
  4670 00003AC2 66030D[A5310000]    <1> 		add cx, [mousecursorposition + 2]
  4671 00003AC9 662B0D[A1310000]    <1> 		sub cx, [lastmouseposition + 2]
  4672 00003AD0 663B15[BD430000]    <1> 		cmp dx, [resolutionx2]
  4673 00003AD7 7607                <1> 		jbe chkyresdrgwin
  4674 00003AD9 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  4675                              <1> 	chkyresdrgwin:
  4676 00003AE0 663B0D[B9430000]    <1> 		cmp cx, [resolutiony]
  4677 00003AE7 7607                <1> 		jbe nodragwin
  4678 00003AE9 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  4679                              <1> 	nodragwin:
  4680 00003AF0 8B5E0C              <1> 		mov ebx, [esi + 12]
  4681 00003AF3 668B460A            <1> 		mov ax, [esi + 10]
  4682 00003AF7 8B7602              <1> 		mov esi, [esi + 2]
  4683 00003AFA E87B040000          <1> 		call showwindow
  4684 00003AFF E943000000          <1> 		jmp doneiconsel
  4685                              <1> 	killwin:
  4686 00003B04 66C7060000          <1> 		mov word [esi], 0
  4687 00003B09 C705[F9030000]0000- <1> 		mov dword [user2codepoint], 0
  4688 00003B11 0000                <1>
  4689 00003B13 C605[BC0E0000]00    <1> 		mov byte [termguion], 0
  4690 00003B1A E881F8FFFF          <1> 		call guiclear
  4691 00003B1F E8AD000000          <1> 		call reloadallgraphics
  4692 00003B24 E9FBF9FFFF          <1> 		jmp guistart
  4693 00003B29 E93A000000          <1> 		jmp doneiconsel2
  4694                              <1> 	nexticonsel:
  4695 00003B2E 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4696 00003B34 81C610000000        <1> 		add esi, 16
  4697 00003B3A 81FE[00120000]      <1> 		cmp esi, graphicstableend
  4698 00003B40 7305                <1> 		jae doneiconsel
  4699 00003B42 E9ACFBFFFF          <1> 		jmp clicon2
  4700                              <1> 	doneiconsel:
  4701 00003B47 813D[73360000]0100- <1> 		cmp dword [dragging], 1
  4702 00003B4F 0000                <1>
  4703 00003B51 7315                <1> 		jae doneiconsel2
  4704 00003B53 813D[E9460000]0000- <1> 		cmp dword [codepointer], 0
  4705 00003B5B 0000                <1>
  4706 00003B5D 7409                <1> 		je doneiconsel2
  4707 00003B5F 8B1D[E9460000]      <1> 		mov ebx, [codepointer]
  4708 00003B65 FFD3                <1> 		call ebx 
  4709 00003B67 C3                  <1> 		ret
  4710                              <1> 	doneiconsel2:
  4711 00003B68 A0[C52D0000]        <1> 		mov al, [LBUTTON]
  4712 00003B6D A2[71360000]        <1> 		mov [pLBUTTON], al
  4713 00003B72 A0[C62D0000]        <1> 		mov al, [RBUTTON]
  4714 00003B77 A2[72360000]        <1> 		mov [pRBUTTON], al
  4715 00003B7C 66813D[73360000]01- <1> 		cmp word [dragging], 1
  4716 00003B84 00                  <1>
  4717 00003B85 0F860A000000        <1> 		jbe near noreloadgraphicsclick
  4718 00003B8B E8AAF9FFFF          <1> call clearmousecursor
  4719 00003B90 E83C000000          <1> call reloadallgraphics
  4720                              <1> noreloadgraphicsclick:
  4721 00003B95 B900000000          <1> 		mov ecx, 0
  4722 00003B9A BA00000000          <1> 		mov edx, 0
  4723 00003B9F B400                <1> 		mov ah, 0
  4724 00003BA1 B0FE                <1> 		mov al, 254
  4725 00003BA3 668B15[A3310000]    <1> 		mov dx, [mousecursorposition]
  4726 00003BAA 668B0D[A5310000]    <1> 		mov cx, [mousecursorposition + 2]
  4727 00003BB1 66BBE738            <1> 		mov bx, 0011100011100111b
  4728 00003BB5 C605[36350000]01    <1> 		mov byte [showcursorfonton], 1
  4729 00003BBC E80C080000          <1> 		call showfontvesa
  4730 00003BC1 C605[36350000]00    <1> 		mov byte [showcursorfonton], 0
  4731 00003BC8 C3                  <1> 		ret
  4732 00003BC9 00000000            <1> lastdrag dw 0,0
  4733 00003BCD 00000000            <1> grpctblpos dw 0,0
  4734                              <1> 
  4735                              <1> reloadallgraphics:
  4736 00003BD1 BF[00100000]        <1> 		mov edi, graphicstable
  4737                              <1> reloadgraphicsloop:
  4738 00003BD6 8B7702              <1> 		mov esi, [edi + 2]
  4739 00003BD9 668B5706            <1> 		mov dx, [edi + 6]
  4740 00003BDD 668B4F08            <1> 		mov cx, [edi + 8]
  4741 00003BE1 668B07              <1> 		mov ax, [edi]
  4742 00003BE4 668B5F0A            <1> 		mov bx, [edi + 10]
  4743 00003BE8 893D[CD3B0000]      <1> 		mov [grpctblpos], edi
  4744 00003BEE 3B3D[73360000]      <1> 		cmp edi, [dragging]
  4745 00003BF4 741E                <1> 		je loadedgraphic
  4746 00003BF6 663D0100            <1> 		cmp ax, 1
  4747 00003BFA 0F8431000000        <1> 		je near icongraphic
  4748 00003C00 663D0200            <1> 		cmp ax, 2
  4749 00003C04 0F8437000000        <1> 		je near stringgraphic
  4750 00003C0A 663D0300            <1> 		cmp ax, 3
  4751 00003C0E 0F8416000000        <1> 		je near windowgraphic
  4752 00003C14 8B3D[CD3B0000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  4753 00003C1A 81C710000000        <1> 		add edi, 16
  4754 00003C20 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4755 00003C26 7329                <1> 		jae donereloadgraphics
  4756 00003C28 EBAC                <1> 		jmp reloadgraphicsloop
  4757 00003C2A E89E030000          <1> windowgraphic:	call showwindow2
  4758 00003C2F EBE3                <1> 		jmp loadedgraphic
  4759 00003C31 80E301              <1> icongraphic:	and bl, 1
  4760 00003C34 881D[ED460000]      <1> 		mov [iconselected], bl
  4761 00003C3A E8B4060000          <1> 		call showicon2
  4762 00003C3F EBD3                <1> 		jmp loadedgraphic
  4763 00003C41 80E301              <1> stringgraphic:  and bl, 1
  4764 00003C44 881D[38350000]      <1> 		mov [mouseselecton], bl
  4765 00003C4A E8DC020000          <1> 		call showstring2
  4766 00003C4F EBC3                <1> 		jmp loadedgraphic
  4767                              <1> donereloadgraphics:
  4768 00003C51 8B3D[73360000]      <1> 		mov edi, [dragging]
  4769 00003C57 81FF[00100000]      <1> 		cmp edi, graphicstable
  4770 00003C5D 7226                <1> 		jb notcorrectdrag
  4771 00003C5F 668B07              <1> 		mov ax, [edi]
  4772 00003C62 8B7702              <1> 		mov esi, [edi + 2]
  4773 00003C65 668B5706            <1> 		mov dx, [edi + 6]
  4774 00003C69 668B4F08            <1> 		mov cx, [edi + 8]
  4775 00003C6D 668B5F0A            <1> 		mov bx, [edi + 10]
  4776 00003C71 663D0100            <1> 		cmp ax, 1
  4777 00003C75 750F                <1> 		jne noticondragging
  4778 00003C77 80E301              <1> 		and bl, 1
  4779 00003C7A 881D[ED460000]      <1> 		mov [iconselected], bl
  4780 00003C80 E86E060000          <1> 		call showicon2
  4781                              <1> notcorrectdrag:
  4782 00003C85 C3                  <1> 		ret
  4783                              <1> 
  4784                              <1> 	noticondragging:
  4785 00003C86 663D0200            <1> 		cmp ax, 2
  4786 00003C8A 75F9                <1> 		jne notcorrectdrag
  4787 00003C8C 80E301              <1> 		and bl, 1
  4788 00003C8F 881D[38350000]      <1> 		mov [mouseselecton], bl
  4789 00003C95 E891020000          <1> 		call showstring2
  4790 00003C9A EBE9                <1> 		jmp notcorrectdrag
  4791                              <1> 
  4792 00003C9C 00<rept>            <1> grphbuf times 16 db 0
  4793                              <1> 	graphicsadd:
  4794 00003CAC BF[00100000]        <1> 		mov edi, graphicstable
  4795                              <1> 	shwgrph1:
  4796 00003CB1 397702              <1> 		cmp dword [edi + 2], esi
  4797 00003CB4 7414                <1> 		je showgraphicsreplace2
  4798 00003CB6 81C710000000        <1> 		add edi, 16
  4799 00003CBC 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4800 00003CC2 0F8335020000        <1> 		jae near showgraphicsnew
  4801 00003CC8 EBE7                <1> 		jmp shwgrph1
  4802                              <1> 	showgraphicsreplace2:
  4803 00003CCA 8935[9E3C0000]      <1> 		mov [grphbuf + 2], esi
  4804 00003CD0 668915[A23C0000]    <1> 		mov [grphbuf + 6], dx
  4805 00003CD7 66890D[A43C0000]    <1> 		mov [grphbuf + 8], cx
  4806 00003CDE 891D[A83C0000]      <1> 		mov [grphbuf + 12], ebx
  4807 00003CE4 B700                <1> 		mov bh, 0
  4808 00003CE6 88E3                <1> 		mov bl, ah
  4809 00003CE8 B400                <1> 		mov ah, 0
  4810 00003CEA 66A3[A63C0000]      <1> 		mov [grphbuf + 10], ax	
  4811 00003CF0 66891D[9C3C0000]    <1> 		mov [grphbuf], bx
  4812 00003CF7 66A1[9C3C0000]      <1> 		mov ax, [grphbuf]
  4813 00003CFD 663D0100            <1> 		cmp ax, 1
  4814 00003D01 0F8419000000        <1> 		je near replaceicon
  4815 00003D07 663D0200            <1> 		cmp ax, 2
  4816 00003D0B 0F8493000000        <1> 		je near replacestring
  4817 00003D11 663D0300            <1> 		cmp ax, 3
  4818 00003D15 0F840F010000        <1> 		je near replacewindow
  4819 00003D1B E9BA010000          <1> 		jmp showgraphicsreplace
  4820                              <1> 	replaceicon:
  4821 00003D20 893D[77360000]      <1> 		mov [lastpos], edi
  4822 00003D26 8935[7B360000]      <1> 		mov [lastpos + 4], esi
  4823 00003D2C 8B7702              <1> 		mov esi, [edi + 2]
  4824 00003D2F 668B5F0C            <1> 		mov bx, [edi + 12]
  4825 00003D33 668B5706            <1> 		mov dx, [edi + 6]
  4826 00003D37 668B4F08            <1> 		mov cx, [edi + 8]
  4827 00003D3B 668B06              <1> 		mov ax, [esi]
  4828 00003D3E 66A3[7F360000]      <1> 		mov [colorbuf], ax
  4829 00003D44 66A1[DD330000]      <1> 		mov ax, [background]
  4830 00003D4A 668906              <1> 		mov [esi], ax
  4831 00003D4D 8B5F0C              <1> 		mov ebx, [edi + 12]
  4832 00003D50 668B470A            <1> 		mov ax, [edi + 10]
  4833 00003D54 2401                <1> 		and al, 1
  4834 00003D56 A2[ED460000]        <1> 		mov [iconselected], al
  4835 00003D5B 668B470A            <1> 		mov ax, [edi + 10]
  4836 00003D5F E88F050000          <1> 		call showicon2
  4837 00003D64 8B3D[77360000]      <1> 		mov edi, [lastpos]
  4838 00003D6A 8B7702              <1> 		mov esi, [edi + 2]
  4839 00003D6D 66A1[7F360000]      <1> 		mov ax, [colorbuf]
  4840 00003D73 668906              <1> 		mov [esi], ax
  4841 00003D76 8B35[7B360000]      <1> 		mov esi, [lastpos + 4]
  4842 00003D7C 668B15[A23C0000]    <1> 		mov dx, [grphbuf + 6]
  4843 00003D83 668B0D[A43C0000]    <1> 		mov cx, [grphbuf + 8]
  4844 00003D8A 668B1D[9C3C0000]    <1> 		mov bx, [grphbuf]
  4845 00003D91 66A1[A63C0000]      <1> 		mov ax, [grphbuf + 10]
  4846 00003D97 88DC                <1> 		mov ah, bl
  4847 00003D99 8B1D[A83C0000]      <1> 		mov ebx, [grphbuf + 12]
  4848 00003D9F E936010000          <1> 		jmp showgraphicsreplace
  4849                              <1> 	replacestring:
  4850 00003DA4 893D[77360000]      <1> 		mov [lastpos], edi
  4851 00003DAA 8935[7B360000]      <1> 		mov [lastpos + 4], esi
  4852 00003DB0 8B5F0C              <1> 		mov ebx, [edi + 12]
  4853 00003DB3 8B7702              <1> 		mov esi, [edi + 2]
  4854 00003DB6 668B5706            <1> 		mov dx, [edi + 6]
  4855 00003DBA 668B4F08            <1> 		mov cx, [edi + 8]
  4856 00003DBE 66A1[673F0000]      <1> 		mov ax, [colorfont2]
  4857 00003DC4 66A3[7F360000]      <1> 		mov [colorbuf], ax
  4858 00003DCA 66A1[DD330000]      <1> 		mov ax, [background]
  4859 00003DD0 66A3[673F0000]      <1> 		mov [colorfont2], ax		
  4860 00003DD6 8B5F0C              <1> 		mov ebx, [edi + 12]
  4861 00003DD9 668B470A            <1> 		mov ax, [edi + 10]
  4862 00003DDD 2401                <1> 		and al, 1
  4863 00003DDF A2[38350000]        <1> 		mov [mouseselecton], al
  4864 00003DE4 668B470A            <1> 		mov ax, [edi + 10]
  4865 00003DE8 E83E010000          <1> 		call showstring2
  4866 00003DED 66A1[7F360000]      <1> 		mov ax, [colorbuf]
  4867 00003DF3 66A3[673F0000]      <1> 		mov [colorfont2], ax
  4868 00003DF9 8B3D[77360000]      <1> 		mov edi, [lastpos]
  4869 00003DFF 8B7702              <1> 		mov esi, [edi + 2]
  4870 00003E02 668B15[A23C0000]    <1> 		mov dx, [grphbuf + 6]
  4871 00003E09 668B0D[A43C0000]    <1> 		mov cx, [grphbuf + 8]
  4872 00003E10 668B1D[9C3C0000]    <1> 		mov bx, [grphbuf]
  4873 00003E17 66A1[A63C0000]      <1> 		mov ax, [grphbuf + 10]
  4874 00003E1D 88DC                <1> 		mov ah, bl
  4875 00003E1F 8B1D[A83C0000]      <1> 		mov ebx, [grphbuf + 12]
  4876 00003E25 E9B0000000          <1> 		jmp showgraphicsreplace
  4877                              <1> 	replacewindow:
  4878 00003E2A 893D[77360000]      <1> 		mov [lastpos], edi
  4879 00003E30 8935[7B360000]      <1> 		mov [lastpos + 4], esi
  4880 00003E36 8B7702              <1> 		mov esi, [edi + 2]
  4881 00003E39 8B3D[763F0000]      <1> 		mov edi, [windowbufloc]
  4882 00003E3F BA00000000          <1> 		mov edx, 0
  4883 00003E44 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  4884 00003E4B C1E204              <1> 		shl edx, 4
  4885 00003E4E 29D7                <1> 		sub edi, edx
  4886 00003E50 BA00000000          <1> 		mov edx, 0
  4887 00003E55 668B16              <1> 		mov dx, [esi]
  4888 00003E58 660316              <1> 		add dx, [esi]
  4889 00003E5B 668B4E02            <1> 		mov cx, [esi + 2]
  4890 00003E5F 6681C11000          <1> 		add cx, 16
  4891 00003E64 66A1[DD330000]      <1> 		mov ax, [background]
  4892                              <1> 	clearwindow:
  4893 00003E6A 668907              <1> 		mov [edi], ax
  4894 00003E6D 81C702000000        <1> 		add edi, 2
  4895 00003E73 81EA02000000        <1> 		sub edx, 2
  4896 00003E79 81FA00000000        <1> 		cmp edx, 0
  4897 00003E7F 75E9                <1> 		jne clearwindow
  4898 00003E81 6649                <1> 		dec cx
  4899 00003E83 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  4900 00003E8A 662B16              <1> 		sub dx, [esi]
  4901 00003E8D 662B16              <1> 		sub dx, [esi]
  4902 00003E90 01D7                <1> 		add edi, edx
  4903 00003E92 668B16              <1> 		mov dx, [esi]
  4904 00003E95 660316              <1> 		add dx, [esi]
  4905 00003E98 6681F90000          <1> 		cmp cx, 0
  4906 00003E9D 75CB                <1> 		jne clearwindow
  4907 00003E9F C605[BD0E0000]00    <1> 		mov byte [termcopyon], 0
  4908 00003EA6 8B3D[77360000]      <1> 		mov edi, [lastpos]
  4909 00003EAC 8B35[9E3C0000]      <1> 		mov esi, [grphbuf + 2]
  4910 00003EB2 668B15[A23C0000]    <1> 		mov dx, [grphbuf + 6]
  4911 00003EB9 668B0D[A43C0000]    <1> 		mov cx, [grphbuf + 8]
  4912 00003EC0 668B1D[9C3C0000]    <1> 		mov bx, [grphbuf]
  4913 00003EC7 66A1[A63C0000]      <1> 		mov ax, [grphbuf + 10]
  4914 00003ECD 88DC                <1> 		mov ah, bl
  4915 00003ECF 8B1D[A83C0000]      <1> 		mov ebx, [grphbuf + 12]
  4916 00003ED5 E900000000          <1> 		jmp showgraphicsreplace
  4917                              <1> 	showgraphicsreplace:
  4918 00003EDA 897702              <1> 		mov [edi + 2], esi
  4919 00003EDD 66895706            <1> 		mov [edi + 6], dx
  4920 00003EE1 66894F08            <1> 		mov [edi + 8], cx
  4921 00003EE5 895F0C              <1> 		mov [edi + 12], ebx
  4922 00003EE8 B700                <1> 		mov bh, 0
  4923 00003EEA 88E3                <1> 		mov bl, ah
  4924 00003EEC B400                <1> 		mov ah, 0
  4925 00003EEE 6689470A            <1> 		mov [edi + 10], ax
  4926 00003EF2 66891F              <1> 		mov [edi], bx
  4927 00003EF5 8B5F0C              <1> 		mov ebx, [edi + 12]
  4928 00003EF8 668B470A            <1> 		mov ax, [edi + 10]
  4929 00003EFC C3                  <1> 		ret
  4930                              <1> 	showgraphicsnew:
  4931 00003EFD BF[00100000]        <1> 		mov edi, graphicstable
  4932                              <1> 	shwgrph2:
  4933 00003F02 66813F0000          <1> 		cmp word [edi], 0
  4934 00003F07 74D1                <1> 		je showgraphicsreplace
  4935 00003F09 81C710000000        <1> 		add edi, 16
  4936 00003F0F 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4937 00003F15 72EB                <1> 		jb shwgrph2
  4938                              <1> 	showgraphicsdone:
  4939 00003F17 C3                  <1> 		ret
  4940                              <1> 
  4941                              <1> 	showstring:
  4942 00003F18 A2[38350000]        <1> 		mov [mouseselecton], al
  4943 00003F1D 8025[38350000]01    <1> 		and byte [mouseselecton], 1
  4944 00003F24 B402                <1> 		mov ah, 2
  4945 00003F26 E881FDFFFF          <1> 		call graphicsadd
  4946                              <1> 	showstring2:
  4947 00003F2B B400                <1> 		mov ah, 0
  4948 00003F2D 8A06                <1> 		mov al, [esi]
  4949 00003F2F 3C00                <1> 		cmp al, 0
  4950 00003F31 742C                <1> 		je doneshowstring
  4951 00003F33 46                  <1> 		inc esi
  4952 00003F34 3CFF                <1> 		cmp al, 255
  4953 00003F36 74F3                <1> 		je showstring2
  4954 00003F38 8935[96460000]      <1> 		mov [showstringesi], esi
  4955 00003F3E 668B1D[673F0000]    <1> 		mov bx, [colorfont2]
  4956 00003F45 E883040000          <1> 		call showfontvesa
  4957 00003F4A 3C0D                <1> 		cmp al, 13
  4958 00003F4C 7409                <1> 		je noproceedshst
  4959 00003F4E 3C0A                <1> 		cmp al, 10
  4960 00003F50 7405                <1> 		je noproceedshst
  4961 00003F52 6681C20800          <1> 		add dx, 8
  4962                              <1> 		noproceedshst
  4963 00003F57 8B35[96460000]      <1> 		mov esi, [showstringesi]
  4964 00003F5D EBCC                <1> 		jmp showstring2
  4965                              <1> 	doneshowstring:
  4966 00003F5F C605[38350000]00    <1> 		mov byte [mouseselecton], 0
  4967 00003F66 C3                  <1> 		ret
  4968                              <1> 
  4969 00003F67 FFFF                <1> colorfont2 dw 0xFFFF
  4970 00003F69 00                  <1> colorcache db 0
  4971 00003F6A 0000                <1> winvcopystx dw 0
  4972 00003F6C 0000                <1> winvcopysty dw 0
  4973 00003F6E 0000                <1> winvcopydx dw 0
  4974 00003F70 0000                <1> winvcopycx dw 0
  4975 00003F72 FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4976 00003F76 00000000            <1> windowbufloc: dw 0,0
  4977                              <1> 
  4978                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4979 00003F7A C605[BC0E0000]01    <1> 		mov byte [termguion], 1
  4980 00003F81 6681C11000          <1> 		add cx, 16
  4981 00003F86 668915[6A3F0000]    <1> 		mov [winvcopystx], dx
  4982 00003F8D 66890D[6C3F0000]    <1> 		mov [winvcopysty], cx
  4983 00003F94 668B16              <1> 		mov dx, [esi]
  4984 00003F97 668B4E02            <1> 		mov cx, [esi + 2]
  4985 00003F9B 6601D2              <1> 		add dx, dx
  4986 00003F9E 668915[6E3F0000]    <1> 		mov [winvcopydx], dx
  4987 00003FA5 66890D[703F0000]    <1> 		mov [winvcopycx], cx
  4988 00003FAC 668B0D[6C3F0000]    <1> 		mov cx, [winvcopysty]
  4989 00003FB3 6681E91000          <1> 		sub cx, 16
  4990 00003FB8 668B15[6A3F0000]    <1> 		mov dx, [winvcopystx]
  4991 00003FBF C605[BD0E0000]00    <1> 		mov byte [termcopyon], 0
  4992 00003FC6 B403                <1> 		mov ah, 3
  4993 00003FC8 E8DFFCFFFF          <1> 		call graphicsadd
  4994                              <1> 	showwindow2:
  4995 00003FCD 6681C11000          <1> 		add cx, 16
  4996 00003FD2 668915[6A3F0000]    <1> 		mov [winvcopystx], dx
  4997 00003FD9 66890D[6C3F0000]    <1> 		mov [winvcopysty], cx
  4998 00003FE0 668B16              <1> 		mov dx, [esi]
  4999 00003FE3 668B4E02            <1> 		mov cx, [esi + 2]
  5000 00003FE7 6601D2              <1> 		add dx, dx
  5001 00003FEA 668915[6E3F0000]    <1> 		mov [winvcopydx], dx
  5002 00003FF1 66890D[703F0000]    <1> 		mov [winvcopycx], cx
  5003 00003FF8 8B3D[763F0000]      <1> 		mov edi, [windowbufloc]
  5004 00003FFE BA00000000          <1> 		mov edx, 0
  5005 00004003 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5006 0000400A C1E204              <1> 		shl edx, 4
  5007 0000400D 29D7                <1> 		sub edi, edx
  5008 0000400F 803D[BD0E0000]00    <1> 		cmp byte [termcopyon], 0
  5009 00004016 753E                <1> 		jne nocleartitlebarpos
  5010 00004018 8B3D[CB6A0000]      <1> 		mov edi, [physbaseptr]
  5011 0000401E BA00000000          <1> 		mov edx, 0
  5012 00004023 668B15[6A3F0000]    <1> 		mov dx, [winvcopystx]
  5013 0000402A 01D7                <1> 		add edi, edx
  5014 0000402C 668B0D[6C3F0000]    <1> 		mov cx, [winvcopysty]
  5015 00004033 6681E91000          <1> 		sub cx, 16
  5016 00004038 6681F90000          <1> 		cmp cx, 0
  5017 0000403D 7417                <1> 		je nocleartitlebarpos
  5018                              <1> 	cleartitlebarpos:
  5019 0000403F BA00000000          <1> 		mov edx, 0
  5020 00004044 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5021 0000404B 01D7                <1> 		add edi, edx
  5022 0000404D 6649                <1> 		dec cx
  5023 0000404F 6681F90000          <1> 		cmp cx, 0
  5024 00004054 75E9                <1> 		jne cleartitlebarpos
  5025                              <1> 	nocleartitlebarpos:
  5026 00004056 66B91000            <1> 		mov cx, 16
  5027 0000405A 668B15[6E3F0000]    <1> 		mov dx, [winvcopydx]
  5028 00004061 6681F90000          <1> 		cmp cx, 0
  5029 00004066 0F844B000000        <1> 		je near canceltitlebarput
  5030 0000406C 6681FA0000          <1> 		cmp dx, 0
  5031 00004071 0F8440000000        <1> 		je near canceltitlebarput
  5032                              <1> 	titlebarput:
  5033 00004077 66A1[723F0000]      <1> 		mov ax, [windowcolor]
  5034 0000407D 668907              <1> 		mov [edi], ax
  5035 00004080 6681EA0200          <1> 		sub dx, 2
  5036 00004085 81C702000000        <1> 		add edi, 2
  5037 0000408B 6681FA0000          <1> 		cmp dx, 0
  5038 00004090 75E5                <1> 		jne titlebarput
  5039 00004092 BA00000000          <1> 		mov edx, 0
  5040 00004097 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5041 0000409E 6649                <1> 		dec cx
  5042 000040A0 662B15[6E3F0000]    <1> 		sub dx, [winvcopydx]
  5043 000040A7 01D7                <1> 		add edi, edx
  5044 000040A9 668B15[6E3F0000]    <1> 		mov dx, [winvcopydx]
  5045 000040B0 6681F90000          <1> 		cmp cx, 0
  5046 000040B5 75C0                <1> 		jne titlebarput
  5047                              <1> 	canceltitlebarput:
  5048 000040B7 893D[763F0000]      <1> 		mov [windowbufloc], edi
  5049 000040BD 803D[BD0E0000]02    <1> 		cmp byte [termcopyon], 2
  5050 000040C4 0F8463000000        <1> 		je near winvcpst
  5051 000040CA 66B80000            <1> 		mov ax, 0
  5052 000040CE 81C604000000        <1> 		add esi, 4
  5053 000040D4 668B15[6A3F0000]    <1> 		mov dx, [winvcopystx]
  5054 000040DB 668B0D[6C3F0000]    <1> 		mov cx, [winvcopysty]
  5055 000040E2 6681E91000          <1> 		sub cx, 16
  5056 000040E7 66BB0000            <1> 		mov bx, 0
  5057 000040EB C605[38350000]01    <1> 		mov byte [mouseselecton], 1
  5058 000040F2 E834FEFFFF          <1> 		call showstring2
  5059 000040F7 B058                <1> 		mov al, "X"
  5060 000040F9 B400                <1> 		mov ah, 0
  5061 000040FB 668B1D[673F0000]    <1> 		mov bx, [colorfont2]
  5062 00004102 668B15[6A3F0000]    <1> 		mov dx, [winvcopystx]
  5063 00004109 668B0D[6C3F0000]    <1> 		mov cx, [winvcopysty]
  5064 00004110 6681E91000          <1> 		sub cx, 16
  5065 00004115 6681EA1400          <1> 		sub dx, 20
  5066 0000411A 660315[6E3F0000]    <1> 		add dx, [winvcopydx]
  5067 00004121 C605[38350000]01    <1> 		mov byte [mouseselecton], 1
  5068 00004128 E8A0020000          <1> 		call showfontvesa
  5069                              <1> 	winvcpst:
  5070 0000412D 8B3D[763F0000]      <1> 		mov edi, [windowbufloc]
  5071 00004133 E957000000          <1> 		jmp windowvideocopyset
  5072                              <1> 
  5073                              <1> 	windowvideocopy:
  5074 00004138 8B3D[763F0000]      <1> 		mov edi, [windowbufloc]
  5075 0000413E 3B3D[CB6A0000]      <1> 		cmp edi, [physbaseptr]
  5076 00004144 0F8345000000        <1> 		jae near windowvideocopyset
  5077 0000414A B900000000          <1> 		mov ecx, 0
  5078 0000414F BA00000000          <1> 		mov edx, 0
  5079 00004154 668B15[6A3F0000]    <1> 		mov dx, [winvcopystx]
  5080 0000415B 668B0D[6C3F0000]    <1> 		mov cx, [winvcopysty]
  5081 00004162 8B3D[CB6A0000]      <1> 		mov edi, [physbaseptr]
  5082 00004168 01D7                <1> 		add edi, edx
  5083 0000416A 81F900000000        <1> 		cmp ecx, 0
  5084 00004170 741D                <1> 		je windowvideocopyset
  5085                              <1> 	yrescopylp:
  5086 00004172 BA00000000          <1> 		mov edx, 0
  5087 00004177 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5088 0000417E 01D7                <1> 		add edi, edx
  5089 00004180 6649                <1> 		dec cx
  5090 00004182 6681F90000          <1> 		cmp cx, 0
  5091 00004187 75E9                <1> 		jne yrescopylp
  5092 00004189 893D[763F0000]      <1> 		mov [windowbufloc], edi
  5093                              <1> 	windowvideocopyset:
  5094 0000418F 66B90000            <1> 		mov cx, 0
  5095 00004193 66890D[D8420000]    <1> 		mov [charposline], cx
  5096 0000419A BE[8F1C0000]        <1> 		mov esi, videobuf2
  5097 0000419F 8935[DA420000]      <1> 		mov [charposvbuf], esi
  5098 000041A5 8A5E01              <1> 		mov bl, [esi + 1]
  5099 000041A8 881D[693F0000]      <1> 		mov [colorcache], bl
  5100 000041AE 8A1E                <1> 		mov bl, [esi]
  5101 000041B0 B700                <1> 		mov bh, 0
  5102 000041B2 66C1E304            <1> 		shl bx, 4
  5103 000041B6 678AB7[9358]        <1> 		mov dh, [fonts + bx]
  5104 000041BB D0CE                <1> 		ror dh, 1
  5105 000041BD 89FE                <1> 		mov esi, edi
  5106                              <1> 	copywindow:
  5107 000041BF B201                <1> 		mov dl, 1
  5108 000041C1 D0C6                <1> 		rol dh, 1
  5109 000041C3 20F2                <1> 		and dl, dh
  5110 000041C5 803D[693F0000]10    <1> 		cmp byte [colorcache], 0x10
  5111 000041CC 731C                <1> 		jae switchwincolors
  5112 000041CE 66A1[743F0000]      <1> 		mov ax, [windowcolor + 2]
  5113 000041D4 668907              <1> 		mov [edi], ax
  5114 000041D7 80FA00              <1> 		cmp dl, 0
  5115 000041DA 7425                <1> 		je nowritewin
  5116 000041DC 66A1[723F0000]      <1> 		mov ax, [windowcolor]
  5117 000041E2 668907              <1> 		mov [edi], ax
  5118 000041E5 E917000000          <1> 		jmp nowritewin
  5119                              <1> 	switchwincolors:
  5120 000041EA 66A1[723F0000]      <1> 		mov ax, [windowcolor]
  5121 000041F0 668907              <1> 		mov [edi], ax
  5122 000041F3 80FA00              <1> 		cmp dl, 0
  5123 000041F6 7409                <1> 		je nowritewin
  5124 000041F8 66A1[743F0000]      <1> 		mov ax, [windowcolor + 2]
  5125 000041FE 668907              <1> 		mov [edi], ax
  5126                              <1> 	nowritewin:
  5127 00004201 81C702000000        <1> 		add edi, 2
  5128 00004207 FEC1                <1> 		inc cl
  5129 00004209 80F908              <1> 		cmp cl, 8
  5130 0000420C 75B1                <1> 		jne copywindow
  5131 0000420E 6643                <1> 		inc bx
  5132 00004210 B100                <1> 		mov cl, 0
  5133 00004212 BA00000000          <1> 		mov edx, 0
  5134 00004217 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5135 0000421E 01D6                <1> 		add esi, edx
  5136 00004220 89F7                <1> 		mov edi, esi
  5137 00004222 678AB7[9358]        <1> 		mov dh, [fonts + bx]
  5138 00004227 D0CE                <1> 		ror dh, 1
  5139 00004229 FEC5                <1> 		inc ch
  5140 0000422B 80FD10              <1> 		cmp ch, 16
  5141 0000422E 758F                <1> 		jne copywindow
  5142 00004230 66B90000            <1> 		mov cx, 0
  5143 00004234 8B3D[DA420000]      <1> 		mov edi, [charposvbuf]
  5144 0000423A 81C702000000        <1> 		add edi, 2
  5145 00004240 81FF[4F2F0000]      <1> 		cmp edi, videobufend
  5146 00004246 7379                <1> 		jae donewincopynow
  5147 00004248 8A5F01              <1> 		mov bl, [edi + 1]
  5148 0000424B 881D[693F0000]      <1> 		mov [colorcache], bl
  5149 00004251 8A1F                <1> 		mov bl, [edi]
  5150 00004253 B700                <1> 		mov bh, 0
  5151 00004255 66C1E304            <1> 		shl bx, 4
  5152 00004259 893D[DA420000]      <1> 		mov [charposvbuf], edi
  5153 0000425F BA00000000          <1> 		mov edx, 0
  5154 00004264 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5155 0000426B C1E204              <1> 		shl edx, 4
  5156 0000426E 29D6                <1> 		sub esi, edx
  5157 00004270 81C610000000        <1> 		add esi, 16
  5158 00004276 89F7                <1> 		mov edi, esi
  5159 00004278 668B0D[D8420000]    <1> 		mov cx, [charposline]
  5160 0000427F 6641                <1> 		inc cx
  5161 00004281 6681F95000          <1> 		cmp cx, 80
  5162 00004286 7317                <1> 		jae fixwindowcopy
  5163 00004288 66890D[D8420000]    <1> 		mov [charposline], cx
  5164 0000428F 66B90000            <1> 		mov cx, 0
  5165 00004293 678AB7[9358]        <1> 		mov dh, [fonts + bx]
  5166 00004298 D0CE                <1> 		ror dh, 1
  5167 0000429A E920FFFFFF          <1> 		jmp copywindow
  5168                              <1> fixwindowcopy:
  5169 0000429F 66B90000            <1> 		mov cx, 0
  5170 000042A3 66890D[D8420000]    <1> 		mov [charposline], cx
  5171 000042AA 662B15[6E3F0000]    <1> 		sub dx, [winvcopydx]
  5172 000042B1 01D6                <1> 		add esi, edx
  5173 000042B3 89F7                <1> 		mov edi, esi
  5174 000042B5 678AB7[9358]        <1> 		mov dh, [fonts + bx]
  5175 000042BA D0CE                <1> 		ror dh, 1
  5176 000042BC E9FEFEFFFF          <1> 		jmp copywindow
  5177                              <1> donewincopynow:
  5178 000042C1 E822D2FFFF          <1> 		call switchtermcursor
  5179 000042C6 803D[BD0E0000]01    <1> 		cmp byte [termcopyon], 1
  5180 000042CD 7501                <1> 		jne forgetresetstuff
  5181 000042CF 61                  <1> 		popa
  5182                              <1> forgetresetstuff:
  5183 000042D0 C605[BD0E0000]00    <1> 		mov byte [termcopyon], 0
  5184 000042D7 C3                  <1> 		ret
  5185                              <1> 
  5186 000042D8 0000                <1> charposline dw 0
  5187 000042DA 00000000            <1> charposvbuf dw 0,0
  5188 000042DE 0000                <1> iconcolor dw 0
  5189                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  5190 000042E0 A2[ED460000]        <1> 		mov [iconselected], al
  5191 000042E5 8025[ED460000]01    <1> 		and byte [iconselected], 1
  5192 000042EC B401                <1> 		mov ah, 1
  5193 000042EE E8B9F9FFFF          <1> 		call graphicsadd
  5194                              <1> 	showicon2:
  5195 000042F3 8B3D[CB6A0000]      <1> 		mov edi, [physbaseptr]
  5196 000042F9 6601D2              <1> 		add dx, dx
  5197 000042FC 663B15[BD430000]    <1> 		cmp dx, [resolutionx2]
  5198 00004303 720C                <1> 		jb screenxgood
  5199 00004305 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5200 0000430C 6681EA4000          <1> 		sub dx, 64
  5201                              <1> 	screenxgood:
  5202 00004311 6681F90000          <1> 		cmp cx, 0
  5203 00004316 7425                <1> 		je noscreenygoodchk
  5204 00004318 663B0D[B9430000]    <1> 		cmp cx, [resolutiony]
  5205 0000431F 720C                <1> 		jb screenygood
  5206 00004321 668B0D[B9430000]    <1> 		mov cx, [resolutiony]
  5207 00004328 6681E92000          <1> 		sub cx, 32
  5208                              <1> 	screenygood:
  5209 0000432D BB00000000          <1> 		mov ebx, 0
  5210 00004332 668B1D[BD430000]    <1> 		mov bx, [resolutionx2]
  5211 00004339 01DF                <1> 		add edi, ebx
  5212 0000433B E2F0                <1> 		loop screenygood
  5213                              <1> 	noscreenygoodchk:
  5214 0000433D BB00000000          <1> 		mov ebx, 0
  5215 00004342 6689D3              <1> 		mov bx, dx
  5216 00004345 01DF                <1> 		add edi, ebx
  5217 00004347 66B90000            <1> 		mov cx, 0
  5218 0000434B 668B06              <1> 		mov ax, [esi]
  5219 0000434E 81C602000000        <1> 		add esi, 2
  5220 00004354 66A3[DE420000]      <1> 		mov [iconcolor], ax
  5221                              <1> 	writeicon:
  5222 0000435A 8B06                <1> 		mov eax, [esi]
  5223 0000435C D1C0                <1> 		rol eax, 1
  5224 0000435E B100                <1> 		mov cl, 0
  5225                              <1> 	writeiconline:
  5226 00004360 B201                <1> 		mov dl, 1
  5227 00004362 20C2                <1> 		and dl, al
  5228 00004364 3215[ED460000]      <1> 		xor dl, [iconselected]
  5229 0000436A 668B1D[DD330000]    <1> 		mov bx, [background]
  5230 00004371 66891F              <1> 		mov [edi], bx
  5231 00004374 80FA00              <1> 		cmp dl, 0
  5232 00004377 740A                <1> 		je noiconline
  5233 00004379 668B15[DE420000]    <1> 		mov dx, [iconcolor]
  5234 00004380 668917              <1> 		mov [edi], dx
  5235                              <1> 	noiconline:
  5236 00004383 81C702000000        <1> 		add edi, 2
  5237 00004389 D1C0                <1> 		rol eax, 1
  5238 0000438B FEC1                <1> 		inc cl
  5239 0000438D 80F920              <1> 		cmp cl, 32
  5240 00004390 72CE                <1> 		jb writeiconline
  5241 00004392 81C604000000        <1> 		add esi, 4
  5242 00004398 FEC5                <1> 		inc ch
  5243 0000439A BA00000000          <1> 		mov edx, 0
  5244 0000439F 668B15[BD430000]    <1> 		mov dx, [resolutionx2]
  5245 000043A6 01D7                <1> 		add edi, edx
  5246 000043A8 81EF40000000        <1> 		sub edi, 64
  5247 000043AE 80FD20              <1> 		cmp ch, 32
  5248 000043B1 72A7                <1> 		jb writeicon
  5249 000043B3 B800000000          <1> 		mov eax, 0
  5250 000043B8 C3                  <1> 		ret
  5251                              <1> 
  5252 000043B9 0000                <1> resolutiony dw 0
  5253 000043BB 0000                <1> resolutionx dw 0
  5254 000043BD 0000                <1> resolutionx2 dw 0
  5255 000043BF 02                  <1> resolutionbytes db 2
  5256 000043C0 0000                <1> posxvesa dw 0
  5257 000043C2 0000                <1> posyvesa dw 0
  5258 000043C4 FFFF                <1> colorfont dw 0xFFFF
  5259                              <1> savefontvesa:		;;same rules as showfontvesa
  5260 000043C6 C605[37350000]01    <1> 	mov byte [savefonton], 1
  5261                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  5262 000043CD 3CFF                <1> 	cmp al, 255
  5263 000043CF 7501                <1> 	jne nostopshowfont
  5264 000043D1 C3                  <1> 	ret
  5265                              <1> nostopshowfont:
  5266 000043D2 66890D[C2430000]    <1> 	mov [posyvesa], cx
  5267 000043D9 3C0A                <1> 	cmp al, 10
  5268 000043DB 0F8435000000        <1> 	je near goodvesafontx
  5269 000043E1 3C0D                <1> 	cmp al, 13
  5270 000043E3 0F842D000000        <1> 	je near goodvesafontx
  5271 000043E9 B900000000          <1> 	mov ecx, 0
  5272 000043EE 668B0D[BD430000]    <1> 	mov cx, [resolutionx2]
  5273 000043F5 6681E91000          <1> 	sub cx, 16
  5274 000043FA 6639CA              <1> 	cmp dx, cx
  5275 000043FD 7617                <1> 	jbe goodvesafontx
  5276 000043FF 66BA0000            <1> 	mov dx, 0
  5277 00004403 668B0D[C2430000]    <1> 	mov cx, [posyvesa]
  5278 0000440A 6681C11000          <1> 	add cx, 16
  5279 0000440F 66890D[C2430000]    <1> 	mov [posyvesa], cx
  5280                              <1> goodvesafontx:
  5281 00004416 668B0D[C2430000]    <1> 	mov cx, [posyvesa]
  5282 0000441D 668915[C0430000]    <1> 	mov [posxvesa], dx
  5283 00004424 8B3D[CB6A0000]      <1> 	mov edi, [physbaseptr]
  5284 0000442A 66891D[C4430000]    <1> 	mov [colorfont], bx
  5285 00004431 BB00000000          <1> 	mov ebx, 0
  5286 00004436 88C3                <1> 	mov bl, al
  5287 00004438 B800000000          <1> 	mov eax, 0
  5288 0000443D 88D8                <1> 	mov al, bl
  5289 0000443F 6689D3              <1> 	mov bx, dx
  5290 00004442 89DA                <1> 	mov edx, ebx
  5291 00004444 BB00000000          <1> 	mov ebx, 0
  5292 00004449 6681F90000          <1> 	cmp cx, 0
  5293 0000444E 7415                <1> 	je vesaposloopdn
  5294 00004450 668B1D[BD430000]    <1> 	mov bx, [resolutionx2]
  5295                              <1> vesaposloop:
  5296 00004457 01DA                <1> 	add edx, ebx
  5297 00004459 6681E90100          <1> 	sub cx, 1
  5298 0000445E 6681F90000          <1> 	cmp cx, 0
  5299 00004463 75F2                <1> 	jne vesaposloop
  5300                              <1> vesaposloopdn:
  5301 00004465 01D7                <1> 	add edi, edx
  5302 00004467 BE[93580000]        <1> 	mov esi, fonts
  5303                              <1> findfontvesa:
  5304 0000446C B400                <1> 	mov ah, 0
  5305 0000446E 3C0A                <1> 	cmp al, 10
  5306 00004470 0F840C010000        <1> 	je near nwlinevesa
  5307 00004476 3C0D                <1> 	cmp al, 13
  5308 00004478 0F8419010000        <1> 	je near cretvesa
  5309 0000447E C1E004              <1> 	shl eax, 4
  5310 00004481 01C6                <1> 	add esi, eax
  5311 00004483 C1E804              <1> 	shr eax, 4
  5312 00004486 81FE[93680000]      <1> 	cmp esi, fontend
  5313 0000448C 0F83BF000000        <1> 	jae near donefontvesa
  5314 00004492 4E                  <1> 	dec esi
  5315                              <1> foundfontvesa:
  5316 00004493 46                  <1> 	inc esi
  5317 00004494 803D[37350000]01    <1> 	cmp byte [savefonton], 1
  5318 0000449B 0F840A010000        <1> 	je near vesafontsaver
  5319 000044A1 B100                <1> 	mov cl, 0
  5320 000044A3 8A06                <1> 	mov al, [esi]
  5321 000044A5 668B15[BD430000]    <1> 	mov dx, [resolutionx2]
  5322 000044AC 662B15[C0430000]    <1> 	sub dx, [posxvesa]
  5323 000044B3 6681FA1000          <1> 	cmp dx, 16
  5324 000044B8 7708                <1> 	ja paintfontvesa
  5325 000044BA D0EA                <1> 	shr dl, 1
  5326 000044BC 8815[81450000]      <1> 	mov [charwidth], dl
  5327                              <1> paintfontvesa:
  5328 000044C2 B201                <1> 	mov dl, 1
  5329 000044C4 20C2                <1> 	and dl, al
  5330 000044C6 803D[36350000]01    <1> 	cmp byte [showcursorfonton], 1
  5331 000044CD 0F8435000000        <1> 	je near nodelpaintedfont
  5332 000044D3 803D[36350000]02    <1> 	cmp byte [showcursorfonton], 2
  5333 000044DA 0F8518000000        <1> 	jne near noswitchcursorfonton
  5334 000044E0 80FA00              <1> 	cmp dl, 0
  5335 000044E3 0F842E000000        <1> 	je near nopixelset
  5336 000044E9 668B1D[C4430000]    <1> 	mov bx, [colorfont]
  5337 000044F0 66891F              <1> 	mov [edi], bx
  5338 000044F3 E91F000000          <1> 	jmp nopixelset
  5339                              <1> noswitchcursorfonton:
  5340 000044F8 3215[38350000]      <1> 	xor dl, [mouseselecton]
  5341 000044FE 668B1D[DD330000]    <1> 	mov bx, [background]
  5342 00004505 66891F              <1> 	mov [edi], bx
  5343                              <1> nodelpaintedfont:
  5344 00004508 80FA00              <1> 	cmp dl, 0
  5345 0000450B 740A                <1> 	je nopixelset
  5346 0000450D 668B15[C4430000]    <1> 	mov dx, [colorfont]
  5347 00004514 668917              <1> 	mov [edi], dx
  5348                              <1> nopixelset:
  5349 00004517 81C702000000        <1> 	add edi, 2
  5350 0000451D D0C0                <1> 	rol al, 1
  5351 0000451F FEC1                <1> 	inc cl
  5352 00004521 3A0D[81450000]      <1> 	cmp cl, [charwidth]
  5353 00004527 7299                <1> 	jb paintfontvesa
  5354 00004529 FEC5                <1> 	inc ch
  5355 0000452B BA00000000          <1> 	mov edx, 0
  5356 00004530 668B15[BD430000]    <1> 	mov dx, [resolutionx2]
  5357 00004537 01D7                <1> 	add edi, edx
  5358 00004539 BA00000000          <1> 	mov edx, 0
  5359 0000453E 8A15[81450000]      <1> 	mov dl, [charwidth]
  5360 00004544 00D2                <1> 	add dl, dl
  5361 00004546 29D7                <1> 	sub edi, edx
  5362 00004548 80FD10              <1> 	cmp ch, 16
  5363 0000454B 0F8242FFFFFF        <1> 	jb foundfontvesa
  5364                              <1> donefontvesa:
  5365 00004551 B208                <1> 	mov dl, 8
  5366 00004553 8815[81450000]      <1> 	mov [charwidth], dl
  5367 00004559 668B15[C0430000]    <1> 	mov dx, [posxvesa]
  5368 00004560 8A1D[81450000]      <1> 	mov bl, [charwidth]
  5369 00004566 B700                <1> 	mov bh, 0
  5370 00004568 6601DA              <1> 	add dx, bx
  5371 0000456B 668B1D[C4430000]    <1> 	mov bx, [colorfont]
  5372 00004572 668B0D[C2430000]    <1> 	mov cx, [posyvesa]
  5373 00004579 C605[37350000]00    <1> 	mov byte [savefonton], 0
  5374 00004580 C3                  <1> 	ret
  5375 00004581 08                  <1> charwidth db 8
  5376                              <1> nwlinevesa:
  5377 00004582 668B0D[C2430000]    <1> 	mov cx, [posyvesa]
  5378 00004589 6681C11000          <1> 	add cx, 16
  5379 0000458E 66890D[C2430000]    <1> 	mov [posyvesa], cx
  5380 00004595 EBBA                <1> 	jmp donefontvesa
  5381                              <1> cretvesa:
  5382 00004597 668B15[C0430000]    <1> 	mov dx, [posxvesa]
  5383 0000459E 66BA0000            <1> 	mov dx, 0
  5384 000045A2 668915[C0430000]    <1> 	mov [posxvesa], dx
  5385 000045A9 EBA6                <1> 	jmp donefontvesa
  5386                              <1> vesafontsaver:
  5387 000045AB B000                <1> 	mov al, 0
  5388 000045AD B100                <1> 	mov cl, 0
  5389                              <1> vesafontsaver2:
  5390 000045AF 668B17              <1> 	mov dx, [edi]
  5391 000045B2 663B15[C4430000]    <1> 	cmp dx, [colorfont]
  5392 000045B9 7432                <1> 	je colorfontmatch
  5393                              <1> donecolormatch:
  5394 000045BB 81C702000000        <1> 	add edi, 2
  5395 000045C1 D0C0                <1> 	rol al, 1
  5396 000045C3 FEC1                <1> 	inc cl
  5397 000045C5 80F908              <1> 	cmp cl, 8
  5398 000045C8 72E5                <1> 	jb vesafontsaver2
  5399 000045CA 8806                <1> 	mov [esi], al
  5400 000045CC 46                  <1> 	inc esi
  5401 000045CD FEC5                <1> 	inc ch
  5402 000045CF BA00000000          <1> 	mov edx, 0
  5403 000045D4 668B15[BD430000]    <1> 	mov dx, [resolutionx2]
  5404 000045DB 01D7                <1> 	add edi, edx
  5405 000045DD 81EF10000000        <1> 	sub edi, 16
  5406 000045E3 80FD10              <1> 	cmp ch, 16
  5407 000045E6 72C3                <1> 	jb vesafontsaver
  5408 000045E8 E964FFFFFF          <1> 	jmp donefontvesa
  5409                              <1> colorfontmatch:
  5410 000045ED 0401                <1> 	add al, 1
  5411 000045EF EBCA                <1> 	jmp donecolormatch
  5412                              <1> 	
  5413                              <1> showbmp:
  5414 000045F1 668B06              <1> 	mov ax, [esi]
  5415 000045F4 663D424D            <1> 	cmp ax, "BM"
  5416 000045F8 0F858E000000        <1> 	jne near endedbmp
  5417 000045FE 8B3D[CB6A0000]      <1> 	mov edi, [physbaseptr]
  5418 00004604 6689D0              <1> 	mov ax, dx
  5419 00004607 6689CB              <1> 	mov bx, cx
  5420 0000460A B900000000          <1> 	mov ecx, 0
  5421 0000460F BA00000000          <1> 	mov edx, 0
  5422 00004614 6689D9              <1> 	mov cx, bx
  5423 00004617 6689C2              <1> 	mov dx, ax
  5424 0000461A 01D7                <1> 	add edi, edx
  5425 0000461C 01D7                <1> 	add edi, edx
  5426 0000461E BA00000000          <1> 	mov edx, 0
  5427 00004623 668B15[BD430000]    <1> 	mov dx, [resolutionx2]
  5428 0000462A 41                  <1> 	inc ecx
  5429 0000462B 034E16              <1> 	add ecx, [esi + 22]
  5430                              <1> bmplocloop:
  5431 0000462E 01D7                <1> 	add edi, edx
  5432 00004630 E2FC                <1> 	loop bmplocloop
  5433 00004632 29D7                <1> 	sub edi, edx
  5434 00004634 8B5612              <1> 	mov edx, [esi + 18]
  5435 00004637 8B4E16              <1> 	mov ecx, [esi + 22]
  5436 0000463A 8B460A              <1> 	mov eax, [esi + 10]
  5437 0000463D 8B5E02              <1> 	mov ebx, [esi + 2]
  5438 00004640 01F3                <1> 	add ebx, esi
  5439 00004642 891D[92460000]      <1> 	mov [bmpend], ebx
  5440 00004648 89D3                <1> 	mov ebx, edx
  5441 0000464A 01C6                <1> 	add esi, eax
  5442                              <1> ldxbmp:
  5443 0000464C 668B06              <1> 	mov ax, [esi]
  5444 0000464F 668907              <1> 	mov [edi], ax
  5445 00004652 81C702000000        <1> 	add edi, 2
  5446 00004658 81C602000000        <1> 	add esi, 2
  5447 0000465E 3B35[92460000]      <1> 	cmp esi, [bmpend]
  5448 00004664 7726                <1> 	ja endedbmp
  5449 00004666 4A                  <1> 	dec edx
  5450 00004667 81FA00000000        <1> 	cmp edx, 0
  5451 0000466D 77DD                <1> 	ja ldxbmp
  5452 0000466F BA00000000          <1> 	mov edx, 0
  5453 00004674 668B15[BD430000]    <1> 	mov dx, [resolutionx2]
  5454 0000467B 29DF                <1> 	sub edi, ebx
  5455 0000467D 29DF                <1> 	sub edi, ebx
  5456 0000467F 29D7                <1> 	sub edi, edx
  5457 00004681 49                  <1> 	dec ecx
  5458 00004682 89DA                <1> 	mov edx, ebx
  5459 00004684 81F900000000        <1> 	cmp ecx, 0
  5460 0000468A 77C0                <1> 	ja ldxbmp
  5461                              <1> endedbmp:
  5462 0000468C E875EFFFFF          <1> 	call switchmousepos2
  5463 00004691 C3                  <1> 	ret
  5464                              <1> 	
  5465 00004692 00000000            <1> 	bmpend dd 0
  5466                              <1> 
  5467                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5468 00004696 00000000            <1> 	showstringesi dw 0,0
  5469 0000469A 00                  <1> 	mouseon db 0
  5470 0000469B 737461727400        <1> 	start	db "start",0
  5471 000046A1 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  5472 000046AA 426F6F2100          <1> 	boomsg db "Boo!",0
  5473 000046AF 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  5474 000046B8 73206561737920746F- <1>
  5475 000046C1 20647261772E00      <1>
  5476 000046C8 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  5477 000046D1 6D206E6F6D00        <1>
  5478 000046D7 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  5479 000046E0 75636B7300          <1>
  5480 000046E5 5800                <1> 	xmsg db "X",0
  5481 000046E7 0000                <1> 	icon dw 0	;pointer to icon
  5482 000046E9 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  5483 000046ED 00                  <1> 	iconselected db 0
  5484                              <1> 	
  5485                              <1> 	boo:
  5486 000046EE BE[AA460000]        <1> 		mov esi, boomsg
  5487 000046F3 66BA6400            <1> 		mov dx, 100
  5488 000046F7 66B94001            <1> 		mov cx, 320
  5489 000046FB BB00000000          <1> 		mov ebx, 0
  5490 00004700 66B80000            <1> 		mov ax, 0
  5491 00004704 E90FF8FFFF          <1> 		jmp showstring
  5492                              <1> 
  5493                              <1> 	pacmannomnom:
  5494 00004709 BE[C8460000]        <1> 		mov esi, pacnom
  5495 0000470E 66BA8200            <1> 		mov dx, 130
  5496 00004712 66B93C00            <1> 		mov cx, 60
  5497 00004716 BB00000000          <1> 		mov ebx, 0
  5498 0000471B 66B80000            <1> 		mov ax, 0
  5499 0000471F E9F4F7FFFF          <1> 		jmp showstring	
  5500                              <1> 	
  5501                              <1> 	noie:
  5502 00004724 BE[B8470000]        <1> 		mov esi, termwindow
  5503 00004729 66BA0000            <1> 		mov dx, 0
  5504 0000472D 66B90000            <1> 		mov cx, 0
  5505 00004731 BB[0D150000]        <1> 		mov ebx, os
  5506                              <1> ;;		mov ebx, internettest
  5507 00004736 891D[F9030000]      <1> 		mov [user2codepoint], ebx
  5508 0000473C 66B80000            <1> 		mov ax, 0
  5509 00004740 E835F8FFFF          <1> 		call showwindow
  5510                              <1> ;;		jmp internettest
  5511 00004745 E9C3CDFFFF          <1> 		jmp os
  5512 0000474A C3                  <1> 		ret
  5513                              <1> 
  5514                              <1> 	gotomenuboot:
  5515 0000474B BE[B8470000]        <1> 		mov esi, termwindow
  5516 00004750 66BA0000            <1> 		mov dx, 0
  5517 00004754 66B90000            <1> 		mov cx, 0
  5518 00004758 BB[0D150000]        <1> 		mov ebx, os
  5519 0000475D 891D[F9030000]      <1> 		mov [user2codepoint], ebx
  5520 00004763 66B80000            <1> 		mov ax, 0
  5521 00004767 E80EF8FFFF          <1> 		call showwindow
  5522 0000476C E99CCDFFFF          <1> 		jmp os
  5523 00004771 C3                  <1> 		ret
  5524                              <1> 
  5525                              <1> 	winblows:
  5526 00004772 BE[D7460000]        <1> 		mov esi, winmsg
  5527 00004777 66BA0000            <1> 		mov dx, 0
  5528 0000477B 668B0D[B9430000]    <1> 		mov cx, [resolutiony]
  5529 00004782 6681E92000          <1> 		sub cx, 32
  5530 00004787 BB00000000          <1> 		mov ebx, 0
  5531 0000478C B400                <1> 		mov ah, 0
  5532 0000478E B011                <1> 		mov al, 00010001b
  5533 00004790 E883F7FFFF          <1> 		call showstring
  5534 00004795 BE[A1460000]        <1> 		mov esi, gotomenu
  5535 0000479A 668B0D[B9430000]    <1> 		mov cx, [resolutiony]
  5536 000047A1 6681E93000          <1> 		sub cx, 48
  5537 000047A6 66BA0000            <1> 		mov dx, 0
  5538 000047AA B400                <1> 		mov ah, 0
  5539 000047AC B010                <1> 		mov al, 00010000b
  5540 000047AE BB[4B470000]        <1> 		mov ebx, gotomenuboot
  5541 000047B3 E960F7FFFF          <1> 		jmp showstring
  5542                              <1> 
  5543 000047B8 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  5544 000047BC 5465726D696E616C00  <1> 	termmsg:	db "Terminal",0	;;window title
  5545                              <1> 	
  5546 000047BC <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  5547 000047BC <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  5548 000047BC <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  5549 000047BC <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  5550 000047BC <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  5551                                      ;%include 'source/network.asm'
  5552                                  	%include 'source/rtl8139.asm'
  5553                              <1> ;;rtl8139.asm
  5554                              <1> initcard:	;;should find card, get mac, and initialize card
  5555 00004A4F B800000000          <1> 	mov eax, 0
  5556 00004A54 A2[894D0000]        <1> 	mov [pcifunction], al
  5557 00004A59 A2[874D0000]        <1> 	mov [pcibus], al
  5558 00004A5E A2[884D0000]        <1> 	mov [pcidevice], al
  5559 00004A63 B002                <1> 	mov al, 0x02 ;;type code
  5560 00004A65 A2[0C4E0000]        <1> 	mov [pcitype], al
  5561 00004A6A E81D030000          <1> 	call getpciport
  5562                              <1> initnic:		;;;;Here i tried the rtl8139 interface, fuck it
  5563 00004A6F 8915[5E4C0000]      <1> 	mov [basenicaddr], edx
  5564 00004A75 89D1                <1> 	mov ecx, edx
  5565 00004A77 C605[011B0000]03    <1> 	mov byte [firsthexshown], 3
  5566 00004A7E E893D0FFFF          <1> 	call showhex	;;for debugging, please remove
  5567 00004A83 BE[1F340000]        <1> 	mov esi, rbuffstart
  5568 00004A88 B900200000          <1> 	mov ecx, 8192
  5569 00004A8D B800000000          <1> 	mov eax, 0
  5570                              <1> clearrbuff:		;;clear receive buffer which starts at rbuffstart
  5571 00004A92 8806                <1> 	mov [esi], al
  5572 00004A94 46                  <1> 	inc esi
  5573 00004A95 6649                <1> 	dec cx
  5574 00004A97 6681F90000          <1> 	cmp cx, 0
  5575 00004A9C 75F4                <1> 	jne clearrbuff
  5576                              <1> findmac:
  5577 00004A9E 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5578 00004AA4 BF[664C0000]        <1> 	mov edi, sysmac
  5579 00004AA9 B906000000          <1> 	mov ecx, 6
  5580                              <1> macputloop:
  5581 00004AAE EC                  <1> 	in al, dx
  5582 00004AAF 8807                <1> 	mov [edi], al
  5583 00004AB1 47                  <1> 	inc edi
  5584 00004AB2 42                  <1> 	inc edx
  5585 00004AB3 49                  <1> 	dec ecx
  5586 00004AB4 75F8                <1> 	jnz macputloop
  5587 00004AB6 B9[664C0000]        <1> 	mov ecx, sysmac
  5588 00004ABB E837010000          <1> 	call showmac
  5589                              <1> resetnic:
  5590 00004AC0 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5591 00004AC6 81C252000000        <1> 	add edx, 0x52
  5592 00004ACC B000                <1> 	mov al, 0
  5593 00004ACE EE                  <1> 	out dx, al	;;WAKE UP!!!!
  5594 00004ACF 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5595 00004AD5 81C237000000        <1> 	add edx, 0x37
  5596 00004ADB B010                <1> 	mov al, 0x10
  5597 00004ADD EE                  <1> 	out dx, al	;;Reset
  5598                              <1> resetnicwait:
  5599 00004ADE 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5600 00004AE4 81C237000000        <1> 	add edx, 0x37
  5601 00004AEA EC                  <1> 	in al, dx
  5602 00004AEB 2410                <1> 	and al, 0x10
  5603 00004AED 3C10                <1> 	cmp al, 0x10
  5604 00004AEF 0F84E9FFFFFF        <1> 	je near resetnicwait
  5605 00004AF5 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5606 00004AFB 81C230000000        <1> 	add edx, 0x30
  5607 00004B01 B8[1F340000]        <1> 	mov eax, rbuffstart
  5608 00004B06 EF                  <1> 	out dx, eax	;;give nic receive buffer location
  5609 00004B07 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5610 00004B0D 81C23C000000        <1> 	add edx, 0x3C
  5611 00004B13 66B80500            <1> 	mov ax, 0x0005
  5612 00004B17 66EF                <1> 	out dx, ax	;;set TOK and ROK
  5613 00004B19 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5614 00004B1F 81C244000000        <1> 	add edx, 0x44
  5615 00004B25 B80F000000          <1> 	mov eax, 0xf
  5616 00004B2A EF                  <1> 	out dx, eax	;;recieve packets from all matches
  5617 00004B2B 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5618 00004B31 81C237000000        <1> 	add edx, 0x37
  5619 00004B37 B00C                <1> 	mov al, 0x0C
  5620 00004B39 EE                  <1> 	out dx, al	;;use transmit and receive
  5621 00004B3A C605[474C0000]01    <1> 	mov byte [nicconfig], 1
  5622 00004B41 C3                  <1> 	ret
  5623                              <1> 	
  5624                              <1> sendframe:	;;padded frame with beginning in edi and end in esi
  5625 00004B42 56                  <1> 	push esi
  5626 00004B43 57                  <1> 	push edi
  5627                              <1> nic2:		;;here come the low level drivers :(
  5628                              <1> 			;;frame begins at esi, ends at edi 			;;0x0200 is the class code for ethernet cards
  5629 00004B44 803D[474C0000]01    <1> 	cmp byte [nicconfig], 1
  5630 00004B4B 7405                <1> 	je sendcachedata
  5631 00004B4D E8FDFEFFFF          <1> 	call initcard
  5632                              <1> sendcachedata:
  5633 00004B52 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5634 00004B58 81C210000000        <1> 	add edx, 0x10
  5635 00004B5E ED                  <1> 	in eax, dx
  5636 00004B5F 89C1                <1> 	mov ecx, eax
  5637 00004B61 E8B0CFFFFF          <1> 	call showhex
  5638 00004B66 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5639 00004B6C 81C213000000        <1> 	add edx, 0x13
  5640 00004B72 ED                  <1> 	in eax, dx
  5641 00004B73 89C1                <1> 	mov ecx, eax
  5642 00004B75 E89CCFFFFF          <1> 	call showhex
  5643 00004B7A 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5644 00004B80 81C223000000        <1> 	add edx, 0x23	;;23 or 20?
  5645 00004B86 5F                  <1> 	pop edi
  5646 00004B87 89F8                <1> 	mov eax, edi
  5647 00004B89 EF                  <1> 	out dx, eax	;;here's Johnny!
  5648 00004B8A 5E                  <1> 	pop esi
  5649 00004B8B 29FE                <1> 	sub esi, edi
  5650 00004B8D 89F0                <1> 	mov eax, esi
  5651 00004B8F 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5652 00004B95 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5653 00004B9B EF                  <1> 	out dx, eax
  5654                              <1> checknicstatus1:
  5655 00004B9C 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5656 00004BA2 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5657 00004BA8 ED                  <1> 	in eax, dx
  5658 00004BA9 2500200000          <1> 	and eax, 0x2000
  5659 00004BAE 3D00200000          <1> 	cmp eax, 0x2000
  5660 00004BB3 75E7                <1> 	jne checknicstatus1
  5661                              <1> checknicstatus:
  5662 00004BB5 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5663 00004BBB 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5664 00004BC1 ED                  <1> 	in eax, dx
  5665 00004BC2 2500800000          <1> 	and eax, 0x8000
  5666 00004BC7 3D00800000          <1> 	cmp eax, 0x8000
  5667 00004BCC 75E7                <1> 	jne checknicstatus
  5668 00004BCE 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5669 00004BD4 81C210000000        <1> 	add edx, 0x10
  5670 00004BDA ED                  <1> 	in eax, dx
  5671 00004BDB 89C1                <1> 	mov ecx, eax
  5672 00004BDD E834CFFFFF          <1> 	call showhex
  5673 00004BE2 8B15[5E4C0000]      <1> 	mov edx, [basenicaddr]
  5674 00004BE8 81C213000000        <1> 	add edx, 0x13
  5675 00004BEE ED                  <1> 	in eax, dx
  5676 00004BEF 89C1                <1> 	mov ecx, eax
  5677 00004BF1 E820CFFFFF          <1> 	call showhex
  5678 00004BF6 C3                  <1> 	ret
  5679                              <1> 	
  5680                              <1> showmac:	;;mac begins in [ecx]
  5681 00004BF7 BE[2F4C0000]        <1> 	mov esi, macprint
  5682 00004BFC 89CF                <1> 	mov edi, ecx
  5683 00004BFE 81C106000000        <1> 	add ecx, 6
  5684                              <1> showmacloop:
  5685 00004C04 8A07                <1> 	mov al, [edi]
  5686 00004C06 8A27                <1> 	mov ah, [edi]
  5687 00004C08 C0E804              <1> 	shr al, 4
  5688 00004C0B C0E404              <1> 	shl ah, 4
  5689 00004C0E C0EC04              <1> 	shr ah, 4
  5690 00004C11 0430                <1> 	add al, 48
  5691 00004C13 80C430              <1> 	add ah, 48
  5692 00004C16 668906              <1> 	mov [esi], ax
  5693 00004C19 81C603000000        <1> 	add esi, 3
  5694 00004C1F 47                  <1> 	inc edi
  5695 00004C20 39CF                <1> 	cmp edi, ecx
  5696 00004C22 72E0                <1> 	jb showmacloop
  5697 00004C24 BE[2F4C0000]        <1> 	mov esi, macprint
  5698 00004C29 E89AC4FFFF          <1> 	call print
  5699 00004C2E C3                  <1> 	ret
  5700                              <1> 	
  5701 00004C2F 30302D30302D30302D- <1> macprint db "00-00-00-00-00-00  ",0
  5702 00004C38 30302D30302D303020- <1>
  5703 00004C41 2000                <1>
  5704 00004C43 00000000            <1> ethernetend dw 0,0
  5705 00004C47 00                  <1> nicconfig db 0
  5706 00004C48 4E4F204E494300      <1> nonicfoundmsg db "NO NIC",0
  5707 00004C4F 496E6974696174696E- <1> initnicmsg	db "Initiating NIC",0
  5708 00004C58 67204E494300        <1>
  5709 00004C5E 00000000            <1> basenicaddr	db 0,0,0,0
  5710 00004C62 C0A80005            <1> sysip db 192,168,0,5
  5711 00004C66 000000000000        <1> sysmac	db 0,0,0,0,0,0		;;my mac address
  5712                                  	%include 'source/arp.asm'
  5713                              <1> ;;let's try something else
  5714                              <1> ;;arp.asm
  5715                              <1> arpinit:
  5716 00004C6C BE[234D0000]        <1> 	mov esi, arptable
  5717 00004C71 BF[664C0000]        <1> 	mov edi, sysmac
  5718 00004C76 BB[624C0000]        <1> 	mov ebx, sysip
  5719 00004C7B 8B0F                <1> 	mov ecx, [edi]
  5720 00004C7D 890E                <1> 	mov [esi], ecx
  5721 00004C7F 668B4F04            <1> 	mov cx, [edi + 4]
  5722 00004C83 894E04              <1> 	mov [esi + 4], ecx
  5723 00004C86 8B0B                <1> 	mov ecx, [ebx]
  5724 00004C88 894E06              <1> 	mov [esi + 6], ecx
  5725 00004C8B C605[224D0000]01    <1> 	mov byte [arpconfig], 1
  5726 00004C92 C3                  <1> 	ret
  5727                              <1> arptest:
  5728 00004C93 803D[224D0000]01    <1> 	cmp byte [arpconfig], 1
  5729 00004C9A 7405                <1> 	je arptest2
  5730 00004C9C E8CBFFFFFF          <1> 	call arpinit
  5731                              <1> arptest2:	;;try to reach 192.168.0.1
  5732 00004CA1 8B0D[664C0000]      <1> 	mov ecx, [sysmac]
  5733 00004CA7 668B1D[6A4C0000]    <1> 	mov bx, [sysmac + 4]
  5734 00004CAE 890D[E84C0000]      <1> 	mov [sourcemac], ecx
  5735 00004CB4 66891D[EC4C0000]    <1> 	mov [sourcemac + 4],bx
  5736 00004CBB 890D[F84C0000]      <1> 	mov [arpsenderinfo], ecx
  5737 00004CC1 66891D[FC4C0000]    <1> 	mov [arpsenderinfo + 4], bx
  5738 00004CC8 BF[E24C0000]        <1> 	mov edi, frame
  5739 00004CCD BE[224D0000]        <1> 	mov esi, framend
  5740 00004CD2 E86BFEFFFF          <1> 	call sendframe
  5741 00004CD7 BE[6A580000]        <1> 	mov esi, line
  5742 00004CDC E8E7C3FFFF          <1> 	call print
  5743 00004CE1 C3                  <1> 	ret
  5744                              <1> 	
  5745                              <1> ;;example frame
  5746                              <1> frame:
  5747 00004CE2 FFFFFFFFFFFF        <1> destinationmac:	db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  5748 00004CE8 000000000000        <1> sourcemac:		db 0,0,0,0,0,0
  5749 00004CEE 0608                <1> ethertype:		dw 0x0806			;;arp
  5750                              <1> 	;;example packet
  5751 00004CF0 0100                <1> 	arppacket: 		dw 1				;;ethernet is 1
  5752 00004CF2 0008                <1> 	arpprotocol: 	dw 0x0800			;;ip is 0x800
  5753 00004CF4 0604                <1> 					db 6,4				;;length of mac, length of ip
  5754 00004CF6 0100                <1> 	arpoperation: 	dw 1				;;one for arp request
  5755 00004CF8 000000000000        <1> 	arpsenderinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;mac
  5756 00004CFE C0A80005            <1> 					db 192,168,0,5			;;ip
  5757 00004D02 000000000000        <1> 	arptargetinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;ignored in requests
  5758 00004D08 C0A80001            <1> 					db 192,168,0,1			;;ip
  5759 00004D0C 00<rept>            <1> padding:		times (64-($-frame)) db 0
  5760                              <1> framend:
  5761                              <1> 
  5762 00004D22 00                  <1> arpconfig db 0
  5763                              <1> arptable:	;;mac,ip
  5764 00004D23 000000000000000000- <1> 	times 10 db 0,0,0,0,0,0,0,0,0,0
  5765 00004D2C 00<rept>            <1>
  5766                              <1> arptableend:
  5767                                  	%include 'source/pci.asm'
  5768 00004D87 00                  <1> pcibus		db 0
  5769 00004D88 00                  <1> pcidevice	db 0
  5770 00004D89 00                  <1> pcifunction	db 0
  5771 00004D8A 00                  <1> pciregister	db 0
  5772 00004D8B 00                  <1> pcireqtype db 0
  5773                              <1> 
  5774                              <1> getpciport:
  5775 00004D8C B001                <1> 	mov al, 1
  5776 00004D8E A2[8B4D0000]        <1> 	mov [pcireqtype], al
  5777 00004D93 E91E000000          <1> 	jmp searchpci
  5778                              <1> pcidump:
  5779 00004D98 B800000000          <1> 	mov eax, 0
  5780 00004D9D A2[894D0000]        <1> 	mov [pcifunction], al
  5781 00004DA2 A2[874D0000]        <1> 	mov [pcibus], al
  5782 00004DA7 A2[884D0000]        <1> 	mov [pcidevice], al
  5783 00004DAC A2[8B4D0000]        <1> 	mov [pcireqtype], al
  5784 00004DB1 E900000000          <1> 	jmp searchpci
  5785                              <1> searchpci:		;;return in ebx, start X in pciX
  5786 00004DB6 B000                <1> 	mov al, 0
  5787 00004DB8 A2[8A4D0000]        <1> 	mov [pciregister], al
  5788 00004DBD E84F010000          <1> 	call getpciaddr
  5789 00004DC2 BAF80C0000          <1> 	mov edx, 0xCF8
  5790 00004DC7 EF                  <1> 	out dx, eax	;;request pci config
  5791 00004DC8 BAFC0C0000          <1> 	mov edx, 0xCFC
  5792 00004DCD ED                  <1> 	in eax, dx 	;;read in pci config
  5793 00004DCE 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  5794 00004DD3 0F8237000000        <1> 	jb near checkpcidevice
  5795                              <1> searchpciret:
  5796                              <1> nextpcidevice:
  5797 00004DD9 B000                <1> 	mov al, 0
  5798 00004DDB A2[894D0000]        <1> 	mov [pcifunction], al
  5799 00004DE0 A0[884D0000]        <1> 	mov al, [pcidevice]
  5800 00004DE5 3C1F                <1> 	cmp al, 11111b
  5801 00004DE7 0F83B8000000        <1> 	jae near nextpcibus
  5802 00004DED FEC0                <1> 	inc al
  5803 00004DEF A2[884D0000]        <1> 	mov [pcidevice], al
  5804 00004DF4 EBC0                <1> 	jmp searchpci
  5805 00004DF6 A0[894D0000]        <1> 	mov al, [pcifunction]
  5806 00004DFB 3C07                <1> 	cmp al, 111b
  5807 00004DFD 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  5808 00004E03 FEC0                <1> 	inc al
  5809 00004E05 A2[894D0000]        <1> 	mov [pcifunction], al
  5810 00004E0A EBAA                <1> 	jmp searchpci
  5811 00004E0C 00000000            <1> pcitype: db 0,0,0,0
  5812                              <1> checkpcidevice:
  5813 00004E10 B000                <1> 	mov al, 0
  5814 00004E12 3805[8B4D0000]      <1> 	cmp [pcireqtype], al
  5815 00004E18 0F842B000000        <1> 	je near dumppcidevice
  5816 00004E1E B008                <1> 	mov al, 0x08
  5817 00004E20 A2[8A4D0000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  5818 00004E25 E8E7000000          <1> 	call getpciaddr
  5819 00004E2A BAF80C0000          <1> 	mov edx, 0xCF8
  5820 00004E2F EF                  <1> 	out dx, eax
  5821 00004E30 BAFC0C0000          <1> 	mov edx, 0xCFC
  5822 00004E35 ED                  <1> 	in eax, dx
  5823 00004E36 C1C008              <1> 	rol eax, 8
  5824 00004E39 8A1D[0C4E0000]      <1> 	mov bl, [pcitype]
  5825 00004E3F 38D8                <1> 	cmp al, bl
  5826 00004E41 0F8480000000        <1> 	je near foundpciaddr
  5827 00004E47 EB90                <1> 	jmp searchpciret
  5828                              <1> dumppcidevice:
  5829 00004E49 B000                <1> 	mov al, 0
  5830 00004E4B A2[8A4D0000]        <1> 	mov [pciregister], al
  5831 00004E50 E8BC000000          <1> 	call getpciaddr
  5832 00004E55 89C1                <1> 	mov ecx, eax
  5833 00004E57 C605[011B0000]00    <1> 	mov byte [firsthexshown],0
  5834 00004E5E E8B3CCFFFF          <1> 	call showhex
  5835                              <1> dumppcidevicelp:
  5836 00004E63 A2[8A4D0000]        <1> 	mov [pciregister], al
  5837 00004E68 E8A4000000          <1> 	call getpciaddr
  5838 00004E6D BAF80C0000          <1> 	mov edx, 0xCF8
  5839 00004E72 EF                  <1> 	out dx, eax
  5840 00004E73 BAFC0C0000          <1> 	mov edx, 0xCFC
  5841 00004E78 ED                  <1> 	in eax, dx
  5842 00004E79 89C1                <1> 	mov ecx, eax
  5843 00004E7B A0[8A4D0000]        <1> 	mov al, [pciregister]
  5844 00004E80 0404                <1> 	add al, 4
  5845 00004E82 3C1A                <1> 	cmp al, 0x1A
  5846 00004E84 730E                <1> 	jae dumppcidn
  5847 00004E86 C605[011B0000]00    <1> 	mov byte [firsthexshown],0
  5848 00004E8D E884CCFFFF          <1> 	call showhex
  5849 00004E92 EBCF                <1> 	jmp dumppcidevicelp
  5850                              <1> dumppcidn:
  5851 00004E94 C605[011B0000]00    <1> 	mov byte [firsthexshown],0
  5852 00004E9B E876CCFFFF          <1> 	call showhex
  5853 00004EA0 E934FFFFFF          <1> 	jmp searchpciret
  5854                              <1> nextpcibus:
  5855 00004EA5 B000                <1> 	mov al, 0
  5856 00004EA7 A2[884D0000]        <1> 	mov [pcidevice], al
  5857 00004EAC A0[874D0000]        <1> 	mov al, [pcibus]
  5858 00004EB1 3C7F                <1> 	cmp al, 1111111b
  5859 00004EB3 730C                <1> 	jae donesearchpci
  5860 00004EB5 FEC0                <1> 	inc al
  5861 00004EB7 A2[874D0000]        <1> 	mov [pcibus], al
  5862 00004EBC E9F5FEFFFF          <1> 	jmp searchpci
  5863                              <1> donesearchpci:
  5864 00004EC1 BA00000000          <1> 	mov edx, 0
  5865 00004EC6 C3                  <1> 	ret
  5866                              <1> foundpciaddr:
  5867 00004EC7 B010                <1> 	mov al, 0x10
  5868 00004EC9 A2[8A4D0000]        <1> 	mov [pciregister], al
  5869                              <1> findpciioaddr:
  5870 00004ECE E83E000000          <1> 	call getpciaddr
  5871 00004ED3 BAF80C0000          <1> 	mov edx, 0xCF8
  5872 00004ED8 EF                  <1> 	out dx, eax
  5873 00004ED9 BAFC0C0000          <1> 	mov edx, 0xCFC
  5874 00004EDE ED                  <1> 	in eax, dx
  5875 00004EDF 89C3                <1> 	mov ebx, eax
  5876 00004EE1 81E301000000        <1> 	and ebx, 1
  5877 00004EE7 81FB00000000        <1> 	cmp ebx, 0
  5878 00004EED 0F8408000000        <1> 	je near notpciioaddr
  5879 00004EF3 2D01000000          <1> 	sub eax, 1
  5880 00004EF8 89C2                <1> 	mov edx, eax
  5881 00004EFA C3                  <1> 	ret
  5882                              <1> notpciioaddr:
  5883 00004EFB A0[8A4D0000]        <1> 	mov al, [pciregister]
  5884 00004F00 0404                <1> 	add al, 4
  5885 00004F02 3C28                <1> 	cmp al, 0x28
  5886 00004F04 0F87CFFEFFFF        <1> 	ja near searchpciret
  5887 00004F0A A2[8A4D0000]        <1> 	mov [pciregister], al
  5888 00004F0F EBBD                <1> 	jmp findpciioaddr
  5889                              <1> getpciaddr:		;;puts it in eax and ebx
  5890 00004F11 B800000000          <1> 			mov eax, 0
  5891 00004F16 BB00000080          <1> 			mov ebx, 0x80000000
  5892 00004F1B A0[874D0000]        <1> 			mov al, [pcibus]
  5893 00004F20 C1E010              <1> 			shl eax, 16
  5894 00004F23 01C3                <1> 			add ebx, eax
  5895 00004F25 B800000000          <1> 			mov eax, 0
  5896 00004F2A A0[884D0000]        <1> 			mov al, [pcidevice]
  5897 00004F2F C1E00B              <1> 			shl eax, 11
  5898 00004F32 01C3                <1> 			add ebx, eax
  5899 00004F34 B800000000          <1> 			mov eax, 0
  5900 00004F39 A0[894D0000]        <1> 			mov al, [pcifunction]
  5901 00004F3E C1E008              <1> 			shl eax, 8
  5902 00004F41 01C3                <1> 			add ebx, eax
  5903 00004F43 B800000000          <1> 			mov eax, 0
  5904 00004F48 A0[8A4D0000]        <1> 			mov al, [pciregister]
  5905 00004F4D 01C3                <1> 			add ebx, eax
  5906 00004F4F 89D8                <1> 			mov eax, ebx
  5907 00004F51 C3                  <1> 			ret
  5908                              <1> 			
  5909                                  	;%include 'source/process.asm'
  5910                                      %include 'source/disk.asm'
  5911                              <1> ;;disk.asm - new - using lba
  5912                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  5913 00004F52 803F00              <1> 	cmp byte [edi], 0
  5914 00004F55 0F8444000000        <1> 	je near nofileload
  5915 00004F5B 89FA                <1> 	mov edx, edi
  5916 00004F5D BB[BA570000]        <1> 	mov ebx, diskfileindex
  5917                              <1> nextnamechar:
  5918 00004F62 8A07                <1> 	mov al, [edi]
  5919 00004F64 8A23                <1> 	mov ah, [ebx]
  5920 00004F66 47                  <1> 	inc edi
  5921 00004F67 43                  <1> 	inc ebx
  5922 00004F68 88C1                <1> 	mov cl, al
  5923 00004F6A 08E1                <1> 	or cl, ah
  5924 00004F6C 80F900              <1> 	cmp cl, 0
  5925 00004F6F 744E                <1> 	je equalfilenames
  5926 00004F71 80F920              <1> 	cmp cl, ' '
  5927 00004F74 7449                <1> 	je equalfilenames
  5928 00004F76 3C2A                <1> 	cmp al, '*'
  5929 00004F78 742B                <1> 	je equalfilenames2
  5930 00004F7A 80FC00              <1> 	cmp ah, 0
  5931 00004F7D 7410                <1> 	je nextfilename
  5932 00004F7F 3C00                <1> 	cmp al, 0
  5933 00004F81 740C                <1> 	je nextfilename
  5934 00004F83 38E0                <1> 	cmp al, ah
  5935 00004F85 74DB                <1> 	je nextnamechar
  5936                              <1> getebxzero:
  5937 00004F87 8A23                <1> 	mov ah, [ebx]
  5938 00004F89 43                  <1> 	inc ebx
  5939 00004F8A 80FC00              <1> 	cmp ah, 0
  5940 00004F8D 75F8                <1> 	jne getebxzero
  5941                              <1> nextfilename:
  5942 00004F8F 81C308000000        <1> 	add ebx, 8		;;next descriptor
  5943 00004F95 89D7                <1> 	mov edi, edx
  5944 00004F97 81FB[2C580000]      <1> 	cmp ebx, enddiskfileindex
  5945 00004F9D 72C3                <1> 	jb nextnamechar
  5946                              <1> nofileload:
  5947 00004F9F BA94010000          <1> 	mov edx, 404	;;indicate not found error
  5948 00004FA4 C3                  <1> 	ret
  5949                              <1> equalfilenames2:
  5950 00004FA5 81EB02000000        <1> 	sub ebx, 2
  5951                              <1> eqfilefind:
  5952 00004FAB 43                  <1> 	inc ebx
  5953 00004FAC 81FB[2C580000]      <1> 	cmp ebx, enddiskfileindex
  5954 00004FB2 0F83E7FFFFFF        <1> 	jae near nofileload
  5955 00004FB8 8A03                <1> 	mov al, [ebx]
  5956 00004FBA 3C00                <1> 	cmp al, 0
  5957 00004FBC 75ED                <1> 	jne eqfilefind
  5958 00004FBE 43                  <1> 	inc ebx
  5959                              <1> equalfilenames:
  5960 00004FBF 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  5961 00004FC2 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  5962 00004FC4 031D[88010000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  5963 00004FCA B900000000          <1> 	mov ecx, 0
  5964 00004FCF 88C1                <1> 	mov cl, al			;;get excess number of sectors
  5965 00004FD1 D0E1                <1> 	shl cl, 1
  5966 00004FD3 D0E9                <1> 	shr cl, 1			;;cut off at 128
  5967 00004FD5 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  5968 00004FD7 B500                <1> 	mov ch, 0			;;drive 0
  5969 00004FD9 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  5970                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  5971 00004FDC A3[1A500000]        <1> 	mov [filetracks], eax
  5972 00004FE1 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  5973 00004FE3 89DA                <1> 	mov edx, ebx
  5974 00004FE5 80F900              <1> 	cmp cl, 0
  5975 00004FE8 7405                <1> 	je copytracksforfile
  5976 00004FEA E837000000          <1> 	call diskr		;;take care of excess sectors
  5977                              <1> copytracksforfile:
  5978 00004FEF A1[1A500000]        <1> 	mov eax, [filetracks]
  5979 00004FF4 3D00000000          <1> 	cmp eax, 0
  5980 00004FF9 7419                <1> 	je donecopyfile
  5981 00004FFB 48                  <1> 	dec eax
  5982 00004FFC A3[1A500000]        <1> 	mov [filetracks], eax
  5983 00005001 89D3                <1> 	mov ebx, edx	;;get end lba
  5984 00005003 B180                <1> 	mov cl, 0x80
  5985 00005005 8A2D[87010000]      <1> 	mov ch, [DriveNumber]
  5986 0000500B 89FE                <1> 	mov esi, edi	;;reset buffer
  5987 0000500D E814000000          <1> 	call diskr
  5988 00005012 EBDB                <1> 	jmp copytracksforfile
  5989                              <1> donecopyfile:
  5990 00005014 BA00000000          <1> 	mov edx, 0	;;no error
  5991 00005019 C3                  <1> 	ret
  5992                              <1> 	
  5993 0000501A 00000000            <1> filetracks dd 0
  5994 0000501E 00                  <1> lbad1 db 0
  5995 0000501F 00                  <1> lbad2 db 0
  5996 00005020 00                  <1> lbad3 db 0
  5997 00005021 00                  <1> lbad4 db 0
  5998 00005022 00                  <1> lbad5 db 0
  5999 00005023 00                  <1> lbad6 db 0
  6000 00005024 6400                <1> segments dw 100
  6001                              <1> 
  6002                              <1> diskr:		;;sector count in cl, disk number in ch, 48 bit address with last 32 bits in ebx, buffer in esi, puts end buffer in edi and end lba in edx
  6003                              <1> 
  6004 00005026 8935[3F510000]      <1> 	mov [bufferstartesi], esi
  6005 0000502C 891D[3B510000]      <1> 	mov [lbaadstartebx], ebx
  6006 00005032 BA00000000          <1> 	mov edx, 0
  6007 00005037 88CA                <1> 	mov dl, cl
  6008 00005039 01DA                <1> 	add edx, ebx
  6009 0000503B 8915[37510000]      <1> 	mov [lbaadend], edx
  6010 00005041 881D[1E500000]      <1> 	mov [lbad1], bl
  6011 00005047 883D[1F500000]      <1> 	mov [lbad2], bh
  6012 0000504D C1C310              <1> 	rol ebx, 16
  6013 00005050 881D[20500000]      <1> 	mov [lbad3], bl
  6014 00005056 883D[21500000]      <1> 	mov [lbad4], bh
  6015 0000505C C1CB10              <1> 	ror ebx, 16
  6016                              <1> 
  6017 0000505F B840000000          <1> 	mov eax, 0x40
  6018 00005064 66BAF601            <1> 	mov dx, 0x1F6
  6019 00005068 EE                  <1> 	out dx, al	;;send magic bits-add drive indicator later
  6020                              <1> 	
  6021 00005069 B000                <1> 	mov al, 0
  6022 0000506B 66BAF201            <1> 	mov dx, 0x1F2
  6023 0000506F EE                  <1> 	out dx, al	;;16 bit sector count-last byte now 0
  6024                              <1> 	
  6025 00005070 A0[21500000]        <1> 	mov al, [lbad4]
  6026 00005075 6642                <1> 	inc dx
  6027 00005077 EE                  <1> 	out dx, al
  6028                              <1> 	
  6029 00005078 A0[22500000]        <1> 	mov al, [lbad5]
  6030 0000507D 6642                <1> 	inc dx
  6031 0000507F EE                  <1> 	out dx, al
  6032                              <1> 	
  6033 00005080 A0[23500000]        <1> 	mov al, [lbad6]
  6034 00005085 6642                <1> 	inc dx
  6035 00005087 EE                  <1> 	out dx, al
  6036                              <1> 	
  6037 00005088 88C8                <1> 	mov al, cl
  6038 0000508A 66BAF201            <1> 	mov dx, 0x1F2
  6039 0000508E EE                  <1> 	out dx, al	;;low byte of 16 bit sector count
  6040                              <1> 	
  6041 0000508F A0[1E500000]        <1> 	mov al, [lbad1]
  6042 00005094 6642                <1> 	inc dx
  6043 00005096 EE                  <1> 	out dx, al
  6044                              <1> 	
  6045 00005097 A0[1F500000]        <1> 	mov al, [lbad2]
  6046 0000509C 6642                <1> 	inc dx
  6047 0000509E EE                  <1> 	out dx, al
  6048                              <1> 	
  6049 0000509F A0[20500000]        <1> 	mov al, [lbad3]
  6050 000050A4 6642                <1> 	inc dx
  6051 000050A6 EE                  <1> 	out dx, al
  6052                              <1> 	
  6053 000050A7 B024                <1> 	mov al, 0x24
  6054 000050A9 66BAF701            <1> 	mov dx, 0x1F7
  6055 000050AD EE                  <1> 	out dx, al	;;READ!!!
  6056 000050AE 66BBFFFF            <1> 	mov bx, 0xFFFF		;;try 65536 times before forcing
  6057                              <1> diskrwait:
  6058 000050B2 66BAF701            <1> 	mov dx, 0x1F7
  6059 000050B6 EC                  <1> 	in al, dx
  6060 000050B7 2408                <1> 	and al, 0x08
  6061 000050B9 664B                <1> 	dec bx
  6062 000050BB 6681FB0000          <1> 	cmp bx, 0
  6063 000050C0 7404                <1> 	je nomorediskwait
  6064 000050C2 3C08                <1> 	cmp al, 0x08
  6065 000050C4 75EC                <1> 	jne diskrwait
  6066                              <1> nomorediskwait:
  6067 000050C6 66BB0001            <1> 	mov bx, 256
  6068                              <1> diskdataread:
  6069 000050CA 66BAF001            <1> 	mov dx, 0x1F0
  6070 000050CE 66ED                <1> 	in ax, dx
  6071 000050D0 668906              <1> 	mov [esi], ax
  6072 000050D3 81C602000000        <1> 	add esi, 2
  6073 000050D9 664B                <1> 	dec bx
  6074 000050DB 6681FB0000          <1> 	cmp bx, 0
  6075 000050E0 75E8                <1> 	jne diskdataread		;;read a sector
  6076 000050E2 FEC9                <1> 	dec cl
  6077 000050E4 80F900              <1> 	cmp cl, 0
  6078 000050E7 75C9                <1> 	jne diskrwait
  6079 000050E9 89F7                <1> 	mov edi, esi
  6080 000050EB 8B15[37510000]      <1> 	mov edx, [lbaadend]
  6081 000050F1 8B35[3F510000]      <1> 	mov esi, [bufferstartesi]
  6082 000050F7 8B1D[3B510000]      <1> 	mov ebx, [lbaadstartebx]
  6083 000050FD C3                  <1> 	ret
  6084                              <1> 	
  6085                              <1> 	
  6086                              <1> diskold: ;;28 bits
  6087 000050FE 66B80000            <1> 	mov ax, 0
  6088 00005102 66BAF101            <1> 	mov dx, 0x1F1
  6089 00005106 EE                  <1> 	out dx, al	;;send null byte to port
  6090 00005107 6642                <1> 	inc dx	;;0x1F2
  6091 00005109 88C8                <1> 	mov al, cl	;;get sector count
  6092 0000510B EE                  <1> 	out dx, al	;;send sector count
  6093 0000510C 6642                <1> 	inc dx	;;0x1F3
  6094 0000510E 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  6095 00005110 EE                  <1> 	out dx, al	;;send them
  6096 00005111 6642                <1> 	inc dx	;;0x1F4
  6097 00005113 C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  6098 00005116 88D8                <1> 	mov al, bl
  6099 00005118 EE                  <1> 	out dx, al
  6100 00005119 6642                <1> 	inc dx	;;0x1F5
  6101 0000511B C1CB08              <1> 	ror ebx, 8	;;again
  6102 0000511E 88D8                <1> 	mov al, bl
  6103 00005120 EE                  <1> 	out dx, al
  6104 00005121 6642                <1> 	inc dx	;;0x1F6
  6105 00005123 C1CB08              <1> 	ror ebx, 8
  6106 00005126 88D8                <1> 	mov al, bl
  6107 00005128 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  6108 0000512A 0CE0                <1> 	or al, 0xE0			;;majic number
  6109 0000512C C0E504              <1> 	shl ch, 4
  6110 0000512F 08E8                <1> 	or al, ch
  6111 00005131 EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  6112 00005132 6642                <1> 	inc dx	;;0x1F7
  6113 00005134 B020                <1> 	mov al, 0x20
  6114 00005136 EE                  <1> 	out dx, al			;;execute read command
  6115                              <1> 	
  6116 00005137 00000000            <1> lbaadend dd 0
  6117 0000513B 00000000            <1> lbaadstartebx dd 0
  6118 0000513F 00000000            <1> bufferstartesi dd 0
  6119                                  	%include 'source/threads.asm'
  6120                              <1> ;;THIS IS MY FIRST ATTEMPT AT IMPLEMENTING THREADS
  6121                              <1> threadstarttest:
  6122 00005143 E9ED040000          <1>     jmp startthreads
  6123                              <1> mainthread:
  6124 00005148 F4                  <1> 	hlt		;;this does not work properly
  6125 00005149 EBFD                <1> 	jmp mainthread
  6126                              <1> 	
  6127                              <1> nwcmdst:
  6128 0000514B FA                  <1> 	cli			;;no more interrupts!!!
  6129 0000514C BE[6A580000]        <1> 	mov esi, line
  6130 00005151 E872BFFFFF          <1> 	call print
  6131 00005156 C605[93510000]00    <1> 	mov byte [threadson], 0
  6132 0000515D E9C7C4FFFF          <1> 	jmp nwcmd
  6133                              <1> 	
  6134                              <1> modelthread:
  6135 00005162 668B1D[B8570000]    <1> 	mov bx, [currentthread]
  6136 00005169 B001                <1> 	mov al, 1
  6137 0000516B B409                <1> 	mov ah, 9
  6138 0000516D B900000000          <1> 	mov ecx, 0
  6139 00005172 6689D9              <1> 	mov cx, bx
  6140 00005175 CD30                <1> 	int 0x30
  6141                              <1> 	
  6142 00005177 B90000DEC0          <1> 	mov ecx, 0xC0DE0000
  6143 0000517C 6689D9              <1> 	mov cx, bx
  6144 0000517F CD30                <1> 	int 0x30
  6145                              <1> 	
  6146 00005181 B90000ADDE          <1> 	mov ecx, 0xDEAD0000
  6147 00005186 6689D9              <1> 	mov cx, bx
  6148 00005189 CD30                <1> 	int 0x30
  6149                              <1> 	
  6150 0000518B CD08                <1> 	int 8	;;skip this thread three times to ensure that all threads run
  6151 0000518D CD08                <1> 	int 8
  6152 0000518F CD08                <1> 	int 8
  6153                              <1> 	
  6154 00005191 EBB8                <1> 	jmp nwcmdst
  6155                              <1> 	
  6156                              <1> 	
  6157 00005193 00                  <1> threadson db 0
  6158 00005194 04000000            <1> lastthread dd 4
  6159                              <1> 
  6160                              <1> thrdtst:
  6161 00005198 [62510000]<rept>    <1> times 256 dd modelthread	;;could go up to 2048, but that takes too long
  6162                              <1> thrdtstend:
  6163                              <1> 
  6164 00005598 00000000            <1> 	espold dd 0
  6165                              <1> 
  6166                              <1> threadfork:
  6167 0000559C C605[93510000]01    <1> 	mov byte [threadson], 1
  6168 000055A3 60                  <1> 	pushad
  6169 000055A4 66B80040            <1> 	mov ax, 0x4000	;;this is the divider for the PIT
  6170 000055A8 E640                <1> 	out 0x40, al
  6171 000055AA 66C1C008            <1> 	rol ax, 8
  6172 000055AE E640                <1> 	out 0x40, al
  6173                              <1> 	
  6174 000055B0 8CC8                <1> 	mov eax, cs
  6175 000055B2 89C2                <1> 	mov edx, eax
  6176 000055B4 8B4C2428            <1> 	mov ecx, [esp + 40]
  6177 000055B8 81C900020000        <1> 	or ecx, 0x200
  6178 000055BE 89E3                <1> 	mov ebx, esp
  6179 000055C0 BC[27580000]        <1> 	mov esp, stackdummy
  6180 000055C5 90                  <1> 	nop
  6181                              <1> 	
  6182 000055C6 60                  <1> 	pushad
  6183 000055C7 B8[48510000]        <1> 	mov eax, mainthread
  6184 000055CC 89442420            <1> 	mov [esp + 32], eax
  6185 000055D0 89542424            <1> 	mov [esp + 36], edx
  6186 000055D4 894C2428            <1> 	mov [esp + 40], ecx
  6187 000055D8 8925[1F340000]      <1> 	mov [threadlist], esp
  6188                              <1> 	
  6189 000055DE 891D[98550000]      <1> 	mov [espold], ebx
  6190 000055E4 89F0                <1> 	mov eax, esi
  6191 000055E6 BC[275C0000]        <1> 	mov esp, stack1
  6192 000055EB 8B1D[94510000]      <1> 	mov ebx, [lastthread]
  6193 000055F1 C1E30A              <1> 	shl ebx, 10
  6194 000055F4 01DC                <1> 	add esp, ebx
  6195 000055F6 C1EB0A              <1> 	shr ebx, 10
  6196 000055F9 90                  <1> 	nop
  6197 000055FA 60                  <1> 	pushad
  6198 000055FB 89442420            <1> 	mov [esp + 32], eax
  6199 000055FF 89542424            <1> 	mov [esp + 36], edx
  6200 00005603 894C2428            <1> 	mov [esp + 40], ecx
  6201 00005607 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  6202 0000560D 8B25[98550000]      <1> 	mov esp, [espold]
  6203 00005613 81C304000000        <1> 	add ebx, 4
  6204 00005619 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  6205 0000561F 81C304000000        <1> 	add ebx, 4
  6206 00005625 891D[94510000]      <1> 	mov [lastthread], ebx
  6207 0000562B B0FE                <1> 	mov al, 0xFE
  6208 0000562D E621                <1> 	out 0x21, al
  6209 0000562F B020                <1> 	mov al, 0x20
  6210 00005631 E620                <1> 	out 0x20, al
  6211 00005633 61                  <1> 	popad
  6212 00005634 C3                  <1> 	ret
  6213                              <1> 
  6214                              <1> startthreads:
  6215 00005635 C605[93510000]01    <1> 	mov byte [threadson], 1
  6216 0000563C 60                  <1> 	pushad
  6217 0000563D 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  6218 00005641 E640                <1> 	out 0x40, al
  6219 00005643 66C1C008            <1> 	rol ax, 8
  6220 00005647 E640                <1> 	out 0x40, al
  6221                              <1> 	
  6222 00005649 8CC8                <1> 	mov eax, cs
  6223 0000564B 89C2                <1> 	mov edx, eax
  6224 0000564D 8B4C2428            <1> 	mov ecx, [esp + 40]
  6225 00005651 81C900020000        <1> 	or ecx, 0x200
  6226 00005657 89E3                <1> 	mov ebx, esp
  6227 00005659 BC[27580000]        <1> 	mov esp, stackdummy
  6228 0000565E 90                  <1> 	nop
  6229                              <1> 	
  6230 0000565F 60                  <1> 	pushad
  6231 00005660 B8[48510000]        <1> 	mov eax, mainthread
  6232 00005665 89442420            <1> 	mov [esp + 32], eax
  6233 00005669 89542424            <1> 	mov [esp + 36], edx
  6234 0000566D 894C2428            <1> 	mov [esp + 40], ecx
  6235 00005671 8925[1F340000]      <1> 	mov [threadlist], esp
  6236                              <1> 
  6237                              <1> 			;;that above setup the dummy thread which for some reason does not run
  6238                              <1> 			;;this below will setup the threads found in thrdtst
  6239                              <1> 
  6240                              <1> testthreads:
  6241 00005677 BE[98510000]        <1> 	mov esi, thrdtst
  6242 0000567C BC[275C0000]        <1> 	mov esp, stack1
  6243 00005681 BF[1F340000]        <1> 	mov edi, threadlist
  6244 00005686 81C704000000        <1> 	add edi, 4
  6245                              <1> nxtthreadld:
  6246 0000568C 60                  <1> 	pushad
  6247 0000568D 8B06                <1> 	mov eax, [esi]
  6248 0000568F 89442420            <1> 	mov [esp + 32], eax
  6249 00005693 89542424            <1> 	mov [esp + 36], edx
  6250 00005697 894C2428            <1> 	mov [esp + 40], ecx
  6251 0000569B 8927                <1> 	mov [edi], esp
  6252 0000569D 81C400040000        <1> 	add esp, 1024
  6253 000056A3 81C604000000        <1> 	add esi, 4
  6254 000056A9 81C704000000        <1> 	add edi, 4
  6255 000056AF 81FF[27540000]      <1> 	cmp edi, threadlistend
  6256 000056B5 0F8322000000        <1> 	jae near nomorethreadspace
  6257 000056BB 81FC[27642000]      <1> 	cmp esp, bssend
  6258 000056C1 0F8350000000        <1> 	jae near nomorestackspace
  6259 000056C7 81FE[98550000]      <1> 	cmp esi, thrdtstend
  6260 000056CD 72BD                <1> 	jb nxtthreadld
  6261 000056CF 89DC                <1> 	mov esp, ebx	
  6262 000056D1 B0FE                <1> 	mov al, 0xFE
  6263 000056D3 E621                <1> 	out 0x21, al
  6264 000056D5 B020                <1> 	mov al, 0x20
  6265 000056D7 E620                <1> 	out 0x20, al
  6266 000056D9 61                  <1> 	popad
  6267 000056DA FB                  <1> 	sti
  6268 000056DB EBFE                <1> 	jmp $	;;wait for the irq to hook
  6269                              <1> 	
  6270                              <1> nomorethreadspace:
  6271 000056DD BE[F3560000]        <1> 	mov esi, nmts
  6272 000056E2 E8E1B9FFFF          <1> 	call print
  6273 000056E7 C605[93510000]00    <1> 	mov byte [threadson], 0
  6274 000056EE E936BFFFFF          <1> 	jmp nwcmd
  6275 000056F3 74656820636F6C6F6E- <1> nmts	db "teh colonel no can haz moar treds",13,10,0
  6276 000056FC 656C206E6F2063616E- <1>
  6277 00005705 2068617A206D6F6172- <1>
  6278 0000570E 2074726564730D0A00  <1>
  6279                              <1> 
  6280                              <1> nomorestackspace:
  6281 00005717 BE[2D570000]        <1> 	mov esi, nmss
  6282 0000571C E8A7B9FFFF          <1> 	call print
  6283 00005721 C605[93510000]00    <1> 	mov byte [threadson], 0
  6284 00005728 E9FCBEFFFF          <1> 	jmp nwcmd
  6285 0000572D 74656820636F6C6F6E- <1> nmss	db "teh colonel no can haz moar staqz",13,10,0
  6286 00005736 656C206E6F2063616E- <1>
  6287 0000573F 2068617A206D6F6172- <1>
  6288 00005748 20737461717A0D0A00  <1>
  6289                              <1> 	
  6290                              <1> threadswitch:
  6291 00005751 FA                  <1> 	cli
  6292 00005752 60                  <1> 	pushad
  6293 00005753 BF[1F340000]        <1> 	mov edi, threadlist
  6294 00005758 B800000000          <1> 	mov eax, 0
  6295 0000575D 66A1[B8570000]      <1> 	mov ax, [currentthread]
  6296 00005763 6640                <1> 	inc ax
  6297 00005765 66A3[B8570000]      <1> 	mov [currentthread], ax
  6298 0000576B 6648                <1> 	dec ax
  6299 0000576D C1E002              <1> 	shl eax, 2
  6300 00005770 01C7                <1> 	add edi, eax
  6301 00005772 8927                <1> 	mov [edi], esp
  6302 00005774 81C704000000        <1> 	add edi, 4
  6303 0000577A 81FF[27540000]      <1> 	cmp edi, threadlistend
  6304 00005780 0F830D000000        <1> 	jae near nookespthread
  6305 00005786 8B07                <1> 	mov eax, [edi]
  6306 00005788 3D00000000          <1> 	cmp eax, 0
  6307 0000578D 0F851C000000        <1> 	jne near okespthread
  6308                              <1> nookespthread:
  6309 00005793 BF[1F340000]        <1> 	mov edi, threadlist
  6310 00005798 66B80000            <1> 	mov ax, 0
  6311 0000579C 66A3[B8570000]      <1> 	mov [currentthread], ax
  6312 000057A2 8B07                <1> 	mov eax, [edi]
  6313 000057A4 3D00000000          <1> 	cmp eax, 0
  6314 000057A9 0F849CF9FFFF        <1> 	je near nwcmdst
  6315                              <1> okespthread:
  6316 000057AF 89C4                <1> 	mov esp, eax
  6317 000057B1 B020                <1> 	mov al, 0x20
  6318 000057B3 E620                <1> 	out 0x20, al
  6319 000057B5 61                  <1> 	popad
  6320 000057B6 FB                  <1> 	sti
  6321 000057B7 CF                  <1> 	iretd
  6322                              <1> 	
  6323 000057B8 0000                <1> currentthread dw 0
  6324                                      %include 'fileindex.asm'
  6325                              <1> diskfileindex:
  6326 000057BA 65787000            <1> db "exp",0
  6327 000057BE 36000000            <1> dd (f0-$$)/512
  6328 000057C2 01000000            <1> dd (f1-f0)/512
  6329 000057C6 666F726B00          <1> db "fork",0
  6330 000057CB 37000000            <1> dd (f1-$$)/512
  6331 000057CF 01000000            <1> dd (f2-f1)/512
  6332 000057D3 736F6C6C65726F732E- <1> db "solleros.bmp",0
  6333 000057DC 626D7000            <1>
  6334 000057E0 38000000            <1> dd (f2-$$)/512
  6335 000057E4 B0020000            <1> dd (f3-f2)/512
  6336 000057E8 736F6C6C65726F732E- <1> db "solleros.txt",0
  6337 000057F1 74787400            <1>
  6338 000057F5 E8020000            <1> dd (f3-$$)/512
  6339 000057F9 01000000            <1> dd (f4-f3)/512
  6340 000057FD 74656C7900          <1> db "tely",0
  6341 00005802 E9020000            <1> dd (f4-$$)/512
  6342 00005806 01000000            <1> dd (f5-f4)/512
  6343 0000580A 74696D6500          <1> db "time",0
  6344 0000580F EA020000            <1> dd (f5-$$)/512
  6345 00005813 02000000            <1> dd (f6-f5)/512
  6346 00005817 7475746F7269616C2E- <1> db "tutorial.bat",0
  6347 00005820 62617400            <1>
  6348 00005824 EC020000            <1> dd (f6-$$)/512
  6349 00005828 03000000            <1> dd (f7-f6)/512
  6350                              <1> enddiskfileindex:
  6351                              <1> 
  6352                                  	%include 'source/msg.asm'
  6353 0000582C 6578697400          <1> 	exitmsg db	"exit",0
  6354 00005831 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  6355 0000583A 00                  <1>
  6356 0000583B 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  6357 00005844 6E642E0D0A00        <1>
  6358 0000584A 757365726E616D653A- <1> 	userask db "username:",0
  6359 00005853 00                  <1>
  6360 00005854 70617373776F72643A- <1> 	pwdask	db	"password:",0
  6361 0000585D 00                  <1>
  6362 0000585E 40536F6C6C65724F53- <1> 	location	db	"@SollerOS]:",0
  6363 00005867 5D3A00              <1>
  6364 0000586A 0D0A00              <1> 	line	db	13,10,0
  6365 0000586D 200900              <1> 	dirtab 	db " ",9,0
  6366                              <1> 	userlst:
  6367 00005870 7573657200          <1> 			db "user",0
  6368 00005875 70617373776F726400  <1> 			db "password",0
  6369 0000587E 726F6F7400          <1> 			db "root",0
  6370 00005883 617765736F6D65706F- <1> 			db "awesomepower",0
  6371 0000588C 77657200            <1>
  6372 00005890 6E00                <1> 			db "n",0	;;use for quick entry-a quick double n followed by a double enter will get you in
  6373 00005892 00                  <1> 			db 0
  6374                              <1> 	userlstend:
  6375                              <1> 	
  6376 00005892 <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  6377                              <1> fontend:
  6378                              <1> 
  6379                              <1> 
  6380                              <1> mcursor:
  6381 00006893 01                  <1> 	db	00000001b
  6382 00006894 81                  <1> 	db	10000001b
  6383 00006895 C1                  <1> 	db	11000001b
  6384 00006896 E1                  <1> 	db	11100001b
  6385 00006897 F1                  <1> 	db	11110001b
  6386 00006898 F9                  <1> 	db	11111001b
  6387 00006899 FD                  <1> 	db	11111101b
  6388 0000689A FF                  <1> 	db	11111111b
  6389 0000689B F9                  <1> 	db	11111001b
  6390 0000689C B9                  <1> 	db	10111001b
  6391 0000689D 39                  <1> 	db	00111001b
  6392 0000689E 1C                  <1> 	db	00011100b
  6393 0000689F 1C                  <1> 	db	00011100b
  6394 000068A0 0E                  <1> 	db	00001110b
  6395 000068A1 0E                  <1> 	db	00001110b
  6396 000068A2 0C                  <1> 	db	00001100b
  6397                              <1> 
  6398                              <1> ;cursorbmp:
  6399                              <1> ;	db	1,0,0,0,0,0,0,0
  6400                              <1> ;	db	1,1,0,0,0,0,0,0
  6401                              <1> ;	db	1,1,1,0,0,0,0,0
  6402                              <1> ;	db	1,1,1,1,0,0,0,0
  6403                              <1> ;	db	1,1,1,1,1,0,0,0
  6404                              <1> ;	db	1,1,1,1,1,1,0,0
  6405                              <1> ;	db	1,1,1,1,1,1,1,0
  6406                              <1> ;	db	1,1,1,1,1,1,1,1
  6407                              <1> ;	db	1,1,1,1,1,1,0,0
  6408                              <1> ;	db	1,1,0,1,1,1,0,0
  6409                              <1> ;	db	1,0,0,1,1,1,0,0
  6410                              <1> ;	db	0,0,0,0,1,1,1,0
  6411                              <1> ;	db	0,0,0,0,1,1,1,0
  6412                              <1> ;	db	0,0,0,0,0,1,1,1
  6413                              <1> ;	db	0,0,0,0,0,1,1,1
  6414                              <1> ;	db	0,0,0,0,0,1,1,0
  6415                              <1> ;cursorbmpend:
  6416                              <1> 
  6417                              <1> 
  6418                              <1> VBEMODEBLOCK:
  6419 000068A3 00<rept>            <1> vbesignature 		times 4 db 0	;VBE Signature
  6420 000068A7 00<rept>            <1> vbeversion  		times 2 db 0	;VBE Version
  6421 000068A9 00<rept>            <1> oemstringptr  		times 4 db 0	;Pointer to OEM String
  6422 000068AD 00<rept>            <1> capabilities 		times 4 db 0	;Capabilities of graphics cont.
  6423 000068B1 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  6424 000068B5 00<rept>            <1> totalmemory   		times 2 db 0	;number of 64Kb memory blocks
  6425 000068B7 00<rept>            <1> oemsoftwarerev  	times 2 db 0	;VBE implementation Software revision
  6426 000068B9 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  6427 000068BD 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  6428 000068C1 00<rept>            <1> oemproductrevptr 	times 4 db 0	;Pointer to Product Revision String
  6429 000068C5 00<rept>            <1> reserved			times 222 db 0	;Reserved for VBE implementation scratch area
  6430 000069A3 00<rept>            <1> oemdata 			times 256 db 0	;Data Area for OEM Strings
  6431                              <1> 
  6432                              <1> 
  6433                              <1> VBEMODEINFOBLOCK:
  6434                              <1> ;Mandatory information for all VBE revision
  6435 00006AA3 00<rept>            <1> modeattributes   	times 2 db 0	;Mode attributes
  6436 00006AA5 00                  <1> winaattributes   	times 1 db 0	;Window A attributes
  6437 00006AA6 00                  <1> winbattributes   	times 1 db 0	;Window B attributes
  6438 00006AA7 00<rept>            <1> wingranularity   	times 2 db 0	;Window granularity
  6439 00006AA9 00<rept>            <1> winsize          	times 2 db 0	;Window size
  6440 00006AAB 00<rept>            <1> winasegment      	times 2 db 0	;Window A start segment
  6441 00006AAD 00<rept>            <1> winbsegment      	times 2 db 0	;Window B start segment
  6442 00006AAF 00<rept>            <1> winfuncptr       	times 4 db 0	;pointer to window function
  6443 00006AB3 00<rept>            <1> bytesperscanline 	times 2 db 0	;Bytes per scan line
  6444                              <1> 
  6445                              <1> ;Mandatory information for VBE 1.2 and above
  6446 00006AB5 00<rept>            <1> xresolution     	times 2 db 0	;Horizontal resolution in pixel or chars
  6447 00006AB7 00<rept>            <1> yresolution	    	times 2 db 0	;Vertical resolution in pixel or chars
  6448 00006AB9 00                  <1> xcharsize       	times 1 db 0	;Character cell width in pixel
  6449 00006ABA 00                  <1> ycharsize       	times 1 db 0	;Character cell height in pixel
  6450 00006ABB 00                  <1> numberofplanes  	times 1 db 0	;Number of memory planes
  6451 00006ABC 00                  <1> bitsperpixel    	times 1 db 0	;Bits per pixel
  6452 00006ABD 00                  <1> numberofbanks   	times 1 db 0	;Number of banks
  6453 00006ABE 00                  <1> memorymodel     	times 1 db 0	;Memory model type
  6454 00006ABF 00                  <1> banksize        	times 1 db 0	;Bank size in KB
  6455 00006AC0 00                  <1> numberofimagepages	times 1 db 0	;Number of images
  6456 00006AC1 00                  <1> reserved1       	times 1 db 0	;Reserved for page function
  6457                              <1> 
  6458                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  6459 00006AC2 00                  <1> redmasksize			times 1 db 0	;Size of direct color red mask in bits
  6460 00006AC3 00                  <1> redfieldposition	times 1 db 0	;Bit position of lsb of red bask
  6461 00006AC4 00                  <1> greenmasksize   	times 1 db 0	;Size of direct color green mask in bits
  6462 00006AC5 00                  <1> greenfieldposition	times 1 db 0	;Bit position of lsb of green bask
  6463 00006AC6 00                  <1> bluemasksize		times 1 db 0	;Size of direct color blue mask in bits
  6464 00006AC7 00                  <1> bluefieldposition	times 1 db 0	;Bit position of lsb of blue bask
  6465 00006AC8 00                  <1> rsvdmasksize        times 1	db 0	;Size of direct color reserved mask in bits
  6466 00006AC9 00                  <1> rsvdfieldposition	times 1	db 0	;Bit position of lsb of reserved bask
  6467 00006ACA 00                  <1> directcolormodeinfo	times 1 db 0	;Direct color mode attributes
  6468                              <1> 
  6469                              <1> ;Mandatory information for VBE 2.0 and above
  6470 00006ACB 00<rept>            <1> physbaseptr 		times 4 db 0	;Physical address for flat frame buffer
  6471 00006ACF 00<rept>            <1> offscreenmemoffset 	times 4 db 0	;Pointer to start of off screen memory
  6472 00006AD3 00<rept>            <1> offscreenmemsize 	times 2 db 0    ;Amount of off screen memory in 1Kb units
  6473 00006AD5 00<rept>            <1> reserved2 			times 206 db 0  ;Remainder of ModeInfoBlock
  6474                                  	;%include 'source/memory.asm'
  6475                                  	%include 'source/buf.asm'
  6476 00006BA3 4255465354415254    <1> db "BUFSTART"
  6477                              <1> [section .bss]
  6478                              <1> bssstart:
  6479                              <1> stack:
  6480 00000000 <res 00001000>      <1> 	resb 4096
  6481                              <1> stackend:
  6482                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  6483 00001000 <res 00000200>      <1> 	resb 200h 
  6484                              <1> 	graphicstableend:
  6485                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  6486 00001200 <res 00000100>      <1> 	resb 256 
  6487                              <1> mcolorend:
  6488 00001300 <res 00000200>      <1> fileindex: resb 200h
  6489                              <1> fileindexend:
  6490 00001500 <res 00000001>      <1> IFON resb 1 
  6491 00001501 <res 00000064>      <1> IFTRUE resb 100 
  6492 00001565 <res 00000004>      <1> BATCHPOS resb 4 
  6493 00001569 <res 00000001>      <1> BATCHISON resb 1 
  6494 0000156A <res 00000001>      <1> LOOPON resb 1 
  6495 0000156B <res 00000004>      <1> LOOPPOS	resb 4 
  6496 0000156F <res 00000500>      <1> variables: 	resb 500h 
  6497 00001A6F <res 00000001>      <1> varend: resb 1
  6498 00001A70 <res 00000100>      <1> buftxt2: resb 100h
  6499 00001B70 <res 0000000A>      <1> resb 10
  6500 00001B7A <res 00000100>      <1> buftxt: resb 100h 
  6501 00001C7A <res 00000014>      <1> buf2:	resb 20 
  6502 00001C8E <res 00000001>      <1> numbuf: resb 1 
  6503 00001C8F <res 000012C0>      <1> videobuf2 		resb 0x12C0 
  6504 00002F4F <res 000000C8>      <1> videobufend		resb 200
  6505 00003017 <res 00000004>      <1> lastcommandpos: resb 4
  6506 0000301B <res 00000004>      <1> currentcommandpos: resb 4
  6507                              <1> commandbuf:
  6508 0000301F <res 00000400>      <1> resb 1024
  6509                              <1> commandbufend:
  6510                              <1> rbuffstart: ;for use with networking
  6511                              <1> ;resb 8212
  6512                              <1> threadlist:	;;this buffer will hold the stack locations of all of the threads, up to 2048
  6513 0000341F <res 00002008>      <1> 	resb 2050*4
  6514                              <1> threadlistend:
  6515                              <1> stacks:		;;the stacks will go on forever until end of memory
  6516 00005427 <res 00000400>      <1> 	resb 1024
  6517                              <1> stackdummy:
  6518 00005827 <res 00000400>      <1> 	resb 1024
  6519                              <1> stack1:
  6520 00005C27 <res 00200800>      <1> 	resb 1024*2050	;;woah, thats a lot of space for stacks
  6521                              <1> bssend:		;;from here on, it is not kernel space so apps can be loaded here.
  6522                              <1> [section .text]
  6523                                      %include 'files.asm'
  6524 00006BAB 00<rept>            <1> align 512,db 0
  6525                              <1> f0:
  6526 00006BAB <incbin>            <1> incbin "included/exp"
  6527 00006C56 00<rept>            <1> align 512,db 0
  6528                              <1> f1:
  6529 00006C56 <incbin>            <1> incbin "included/fork"
  6530 00006E67 00<rept>            <1> align 512,db 0
  6531                              <1> f2:
  6532 00006E67 <incbin>            <1> incbin "included/solleros.bmp"
  6533 0005CFE6 00<rept>            <1> align 512,db 0
  6534                              <1> f3:
  6535 0005CFE6 <incbin>            <1> incbin "included/solleros.txt"
  6536 0005D176 00<rept>            <1> align 512,db 0
  6537                              <1> f4:
  6538 0005D176 <incbin>            <1> incbin "included/tely"
  6539 0005D3BD 00<rept>            <1> align 512,db 0
  6540                              <1> f5:
  6541 0005D3BD <incbin>            <1> incbin "included/time"
  6542 0005D67B 00<rept>            <1> align 512,db 0
  6543                              <1> f6:
  6544 0005D67B <incbin>            <1> incbin "included/tutorial.bat"
  6545 0005DCAA 00<rept>            <1> align 512,db 0
  6546                              <1> f7:
