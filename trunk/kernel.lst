     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> %include 'source/signature.asm'
     5                              <2> signature:	;used by bootloader to find SollerOS, is totally awesome
     6 00000000 EDA55ED1            <2> dd 0xD15EA5ED	;diseased
     7 00000004 15D000B1            <2> dd 0xB100D015	;blood is
     8 00000008 EDFED2BA            <2> dd 0xBAD2FEED	;bad to feed
     9 0000000C 95D0112A            <2> dd 0x2A11D095	;to all dogs
    10 00000010 52A71CA1            <2> dd 0xA11CA752	;all cats too.
    11 00000014 0F751015            <2> dd 0x1510750F   ;is lots of
    12 00000018 75CAADDE            <2> dd 0xDEADCA75   ;dead cats
    13 0000001C 95D0ADDE            <2> dd 0xDEADD095   ;dead dogs
    14 00000020 07000000            <2> dd 7			;version
    15 00000024 534F4C4C45524F53    <2> db "SOLLEROS"
    16                              <2> signatureend:
    17                              <1> menustart:	
    18 0000002C 8CC8                <1> 	mov ax, cs
    19 0000002E 8ED8                <1> 	mov ds, ax
    20 00000030 8EC0                <1> 	mov es, ax
    21 00000032 8ED0                <1> 	mov ss, ax
    22 00000034 880E[8201]          <1> 	mov [DriveNumber], cl
    23 00000038 668916[8301]        <1> 	mov [lbaad], edx
    24 0000003D B800A0              <1> 	mov ax, 0xA000
    25 00000040 8EE8                <1> 	mov gs, ax
    26 00000042 B81200              <1> 	mov ax, 12h
    27 00000045 BB0000              <1> 	mov bx, 0
    28 00000048 CD10                <1> 	int 10h
    29                              <1> 	
    30                              <1> guiload:
    31 0000004A BE[8302]            <1> 	mov si, bootmsg
    32 0000004D E83C01              <1> 	call printrm
    33 00000050 B80000              <1> 	mov ax, 0
    34 00000053 CD16                <1> 	int 16h
    35 00000055 3C79                <1> 	cmp al, "y"
    36 00000057 0F85F400            <1> 	jne near guiload2
    37                              <1> guiloadagain:
    38 0000005B B8004F              <1> 	mov ax, 04F00h
    39 0000005E BF[425C]            <1> 	mov di, VBEMODEBLOCK
    40 00000061 CD10                <1> 	int 10h
    41 00000063 BE[645C]            <1> 	mov si, reserved
    42 00000066 81EE0200            <1> 	sub si, 2
    43                              <1> findvideomodes:
    44 0000006A 81C60200            <1> 	add si, 2
    45 0000006E 8B0C                <1> 	mov cx, [si]
    46 00000070 81F9FFFF            <1> 	cmp cx, 0xFFFF
    47 00000074 0F840A00            <1> 	je near nextvmode
    48 00000078 81FE[425D]          <1> 	cmp si, oemdata
    49 0000007C 0F83CF00            <1> 	jae near guiload2	;;kill if no valid list is found
    50 00000080 EBE8                <1> 	jmp findvideomodes 	
    51                              <1> ;;debug,shows vmodes available
    52                              <1> nextvmode:
    53 00000082 81EE0200            <1> 	sub si, 2
    54 00000086 81FE[645C]          <1> 	cmp si, reserved
    55 0000008A 0F82CDFF            <1> 	jb near guiloadagain
    56 0000008E 8B0C                <1> 	mov cx, [si]
    57 00000090 81F9FFFF            <1> 	cmp cx, 0xFFFF
    58 00000094 0F84EAFF            <1> 	je near nextvmode
    59 00000098 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    60 0000009C B8014F              <1> 	mov ax, 04F01h
    61 0000009F BF[425E]            <1> 	mov di, VBEMODEINFOBLOCK
    62 000000A2 890E[8701]          <1> 	mov [vesamode], cx
    63 000000A6 CD10                <1> 	int 10h
    64 000000A8 A0[5B5E]            <1> 	mov al, [bitsperpixel]
    65 000000AB 3C10                <1> 	cmp al, 16
    66 000000AD 75D3                <1> 	jne nextvmode
    67 000000AF 8936[8901]          <1> 	mov [videomodecache], si
    68 000000B3 80FC00              <1> 	cmp ah, 0
    69 000000B6 0F842200            <1> 	je near setvesamode
    70 000000BA EBC6                <1> 	jmp nextvmode
    71 000000BC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    72 000000C5 20766964656F206D6F- <1>
    73 000000CE 6465204F4B3F28792F- <1>
    74 000000D7 6E290D0A00          <1>
    75                              <1> setvesamode:
    76 000000DC 8B0E[545E]          <1> 	mov cx, [xresolution]
    77 000000E0 E8C100              <1> 	call decshow
    78 000000E3 B078                <1> 	mov al, "x"
    79 000000E5 E82901              <1> 	call char
    80 000000E8 8B0E[565E]          <1> 	mov cx, [yresolution]
    81 000000EC E8B500              <1> 	call decshow
    82 000000EF B040                <1> 	mov al, "@"
    83 000000F1 E81D01              <1> 	call char
    84 000000F4 8A0E[5B5E]          <1> 	mov cl, [bitsperpixel]
    85 000000F8 E8A900              <1> 	call decshow
    86 000000FB BE[BC00]            <1> 	mov si, isthisvideook
    87 000000FE E88B00              <1> 	call printrm
    88 00000101 B80000              <1> 	mov ax, 0
    89 00000104 CD16                <1> 	int 16h
    90 00000106 8B36[8901]          <1> 	mov si, [videomodecache]
    91 0000010A 3C79                <1> 	cmp al, "y"
    92 0000010C 0F8572FF            <1> 	jne near nextvmode
    93 00000110 8B16[545E]          <1> 	mov dx, [xresolution]
    94 00000114 8B0E[565E]          <1> 	mov cx, [yresolution]
    95 00000118 8916[0D40]          <1> 	mov [resolutionx], dx
    96 0000011C 890E[0B40]          <1> 	mov [resolutiony], cx
    97 00000120 01D2                <1> 	add dx, dx
    98 00000122 8916[0F40]          <1> 	mov [resolutionx2], dx
    99 00000126 BA0000              <1> 	mov dx, 0
   100 00000129 B90000              <1> 	mov cx, 0
   101 0000012C B8024F              <1> 	mov ax, 04F02h
   102 0000012F 8B1E[8701]          <1> 	mov bx, [vesamode]
   103 00000133 CD10                <1> 	int 10h		;;enter VESA mode
   104 00000135 C606[8B01]00        <1> 	mov byte [guinodo], 0
   105 0000013A 6631C0              <1> 	xor eax, eax
   106 0000013D 6631DB              <1> 	xor ebx, ebx
   107 00000140 6631C9              <1> 	xor ecx, ecx
   108 00000143 6631D2              <1> 	xor edx, edx
   109 00000146 6631F6              <1> 	xor esi, esi
   110 00000149 6631FF              <1> 	xor edi, edi	;;reset registers
   111 0000014C E94E01              <1> 	jmp pmode
   112                              <1> guiload2:
   113 0000014F B9E001              <1> 	mov cx, 480
   114 00000152 BA8002              <1> 	mov dx, 640
   115 00000155 8916[0D40]          <1> 	mov [resolutionx], dx
   116 00000159 01D2                <1> 	add dx, dx
   117 0000015B 8916[0F40]          <1> 	mov [resolutionx2], dx
   118 0000015F 890E[0B40]          <1> 	mov [resolutiony], cx
   119 00000163 B81200              <1> 	mov ax, 12h
   120 00000166 BB0000              <1> 	mov bx, 0
   121 00000169 CD10                <1> 	int 10h
   122 0000016B C606[8B01]01        <1> 	mov byte [guinodo], 1
   123 00000170 6631DB              <1> 	xor ebx, ebx
   124 00000173 6631C9              <1> 	xor ecx, ecx
   125 00000176 6631D2              <1> 	xor edx, edx
   126 00000179 6631F6              <1> 	xor esi, esi
   127 0000017C 6631FF              <1> 	xor edi, edi
   128 0000017F E91B01              <1> 	jmp pmode
   129                              <1> 
   130 00000182 00                  <1> DriveNumber db 0
   131 00000183 00000000            <1> lbaad dd 0
   132                              <1> 	
   133 00000187 0000                <1> vesamode dw 0
   134 00000189 0000                <1> videomodecache dw 0
   135                              <1> 
   136 0000018B 00                  <1> guinodo db 0
   137                              <1> 
   138                              <1>     printrm:			; 'si' comes in with string address
   139 0000018C BB0700              <1> 	    mov bx,07		; write to display
   140 0000018F B40E                <1> 	    mov ah,0Eh		; screen function
   141 00000191 8A04                <1>     prs2:    mov al,[si]         ; get next character
   142 00000193 3C00                <1> 	    cmp al,0		; look for terminator 
   143 00000195 7405                <1>             je finpr2		; zero byte at end of string
   144 00000197 CD10                <1> 	    int 10h		; write character to screen.    
   145 00000199 46                  <1>      	    inc si	     	; move to next character
   146 0000019A EBF5                <1> 	    jmp prs2		; loop
   147 0000019C C3                  <1>     finpr2: ret
   148                              <1> 
   149 0000019D 0000000000          <1> dcnm db 0,0,0,0,0
   150 000001A2 0000                <1> dcnmend db 0,0
   151                              <1> 
   152                              <1> 
   153                              <1> decshow:
   154 000001A4 BE[9D01]            <1> 	mov si, dcnm
   155                              <1> decclear:
   156 000001A7 B030                <1> 	mov al, "0"
   157 000001A9 8804                <1> 	mov [si], al
   158 000001AB 46                  <1> 	inc si
   159 000001AC 81FE[A201]          <1> 	cmp si, dcnmend
   160 000001B0 76F5                <1> 	jbe decclear
   161 000001B2 4E                  <1> 	dec si
   162 000001B3 E81500              <1> 	call convertrm
   163 000001B6 BE[9D01]            <1> 	mov si, dcnm
   164                              <1> dectst:
   165 000001B9 8A04                <1> 	mov al, [si]
   166 000001BB 46                  <1> 	inc si
   167 000001BC 81FE[A201]          <1> 	cmp si, dcnmend
   168 000001C0 7704                <1> 	ja dectstend
   169 000001C2 3C30                <1> 	cmp al, "0"
   170 000001C4 76F3                <1> 	jbe dectst
   171                              <1> dectstend:
   172 000001C6 4E                  <1> 	dec si
   173 000001C7 E8C2FF              <1> 	call printrm
   174 000001CA C3                  <1> 	ret
   175                              <1> 	
   176                              <1> 	
   177                              <1> convertrm:
   178 000001CB 4E                  <1> 	dec si
   179 000001CC 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   180                              <1> cnvrtrm:
   181 000001CE 89DE                <1> 	mov si, bx
   182 000001D0 81EE0300            <1> 	sub si, 3
   183 000001D4 46                  <1> ten3rm:	inc si
   184 000001D5 81F9E803            <1> 	cmp cx, 1000
   185 000001D9 7208                <1> 	jb ten2rm
   186 000001DB 81E9E803            <1> 	sub cx, 1000
   187 000001DF FE04                <1> 	inc byte [si]
   188 000001E1 EBEB                <1> 	jmp cnvrtrm
   189 000001E3 46                  <1> ten2rm:	inc si
   190 000001E4 81F96400            <1> 	cmp cx, 100
   191 000001E8 7208                <1> 	jb ten1rm
   192 000001EA 81E96400            <1> 	sub cx, 100
   193 000001EE FE04                <1> 	inc byte [si]
   194 000001F0 EBDC                <1> 	jmp cnvrtrm
   195 000001F2 46                  <1> ten1rm:	inc si
   196 000001F3 81F90A00            <1> 	cmp cx, 10
   197 000001F7 7208                <1> 	jb ten0rm
   198 000001F9 81E90A00            <1> 	sub cx, 10
   199 000001FD FE04                <1> 	inc byte [si]
   200 000001FF EBCD                <1> 	jmp cnvrtrm
   201 00000201 46                  <1> ten0rm:	inc si
   202 00000202 81F90100            <1> 	cmp cx, 1
   203 00000206 7208                <1> 	jb tendnrm
   204 00000208 81E90100            <1> 	sub cx, 1
   205 0000020C FE04                <1> 	inc byte [si]
   206 0000020E EBBE                <1> 	jmp cnvrtrm
   207                              <1> tendnrm:
   208 00000210 C3                  <1> 	ret
   209                              <1> 
   210                              <1> 
   211                              <1> 
   212                              <1> 
   213                              <1>     char: 		    ;char must be in al
   214 00000211 BB0700              <1>        mov bx, 07
   215 00000214 B40E                <1> 	   mov ah, 0Eh
   216 00000216 CD10                <1> 	   int 10h
   217 00000218 C3                  <1> 	   ret
   218                              <1> 
   219                              <1> 		shutdown:
   220 00000219 0F20C0              <1> 				mov eax, cr0
   221 0000021C 24FE                <1> 				and al,0xFE     ; back to realmode
   222 0000021E 0F22C0              <1> 				mov  cr0, eax   ; by toggling bit again
   223 00000221 FB                  <1> 				sti
   224 00000222 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   225 00000225 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   226 00000227 CD15                <1> 			INT 15h		; shut down
   227 00000229 B80453              <1> 			MOV AX, 5304h
   228 0000022C 31DB                <1> 			XOR BX, BX
   229 0000022E CD15                <1> 			INT 15h		; Interrupt 15h originally was
   230 00000230 B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   231 00000233 31DB                <1> 			XOR BX, BX	; but is still in use for
   232 00000235 CD15                <1> 			INT 15h		; diverse things
   233 00000237 B80753              <1> 			MOV AX, 5307h
   234 0000023A BB0100              <1> 			MOV BX, 1
   235 0000023D B90300              <1> 			MOV CX, 3
   236 00000240 CD15                <1> 			INT 15h
   237 00000242 CF                  <1> 			IRET
   238                              <1> 
   239                              <1> 	coldboot:
   240 00000243 0F20C0              <1> 			   mov eax, cr0
   241 00000246 24FE                <1> 			   and al,0xFE     ; back to realmode
   242 00000248 0F22C0              <1> 			   mov  cr0, eax   ; by toggling bit again
   243 0000024B FB                  <1> 			   sti
   244 0000024C B84000              <1> 			MOV AX, 0040h
   245 0000024F 8EC0                <1> 			MOV ES, AX
   246 00000251 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   247 00000258 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   248 0000025D CF                  <1> 			IRET
   249                              <1> 
   250                              <1> 		warmboot:
   251 0000025E E81200              <1> 			call realmode
   252 00000261 B84000              <1> 			MOV AX, 0040h
   253 00000264 8EC0                <1> 			MOV ES, AX
   254 00000266 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   255 0000026D EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   256 00000272 CF                  <1> 			IRET
   257                              <1> 
   258                              <1> 
   259                              <1> realmode:
   260 00000273 0F20C0              <1>    mov eax, cr0
   261 00000276 24FE                <1>    and al,0xFE     ; back to realmode
   262 00000278 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   263 0000027B FB                  <1>    sti
   264 0000027C 66B800000000        <1>    mov eax, 0
   265 00000282 C3                  <1>    ret
   266                              <1>    
   267 00000283 426F6F7420696E746F- <1> bootmsg:	db "Boot into the GUI?(y/n)",10,13,0
   268 0000028C 20746865204755493F- <1>
   269 00000295 28792F6E290A0D00    <1>
   270                                      %include 'source/pmode.asm'
   271                              <1> [BITS 16]
   272                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   273                              <1> ;	16-bit real mode
   274                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   275                              <1> 
   276                              <1> pmode:
   277 0000029D BA9200              <1> 	mov dx, 0x92
   278 000002A0 EC                  <1> 	in al, dx	;;A20
   279 000002A1 0C02                <1> 	or al, 2
   280 000002A3 EE                  <1> 	out dx, al
   281 000002A4 66BB00000000        <1> 	mov ebx, 0
   282 000002AA 8CCB                <1> 	mov bx,cs		; EBX=segment
   283 000002AC 66C1E304            <1> 	shl ebx,4		;	<< 4
   284 000002B0 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   285 000002B4 A3[1E0B]            <1> 	mov [gdt2 + 2],ax
   286 000002B7 A3[260B]            <1> 	mov [gdt3 + 2],ax
   287 000002BA 66C1E810            <1> 	shr eax,16
   288 000002BE A2[200B]            <1> 	mov [gdt2 + 4],al
   289 000002C1 A2[280B]            <1> 	mov [gdt3 + 4],al
   290 000002C4 8826[230B]          <1> 	mov [gdt2 + 7],ah
   291 000002C8 8826[2B0B]          <1> 	mov [gdt3 + 7],ah
   292 000002CC 66B8[00000000]      <1> 	mov eax, stack
   293 000002D2 A3[2E0B]            <1> 	mov [gdts + 2],ax
   294 000002D5 66C1E810            <1> 	shr eax,16
   295 000002D9 A2[300B]            <1> 	mov [gdts + 4],al
   296 000002DC 8826[330B]          <1> 	mov [gdts + 7],ah
   297 000002E0 66A1[F403]          <1> 	mov eax, [newcodecache]
   298 000002E4 A3[360B]            <1> 	mov [gdt4 + 2],ax
   299 000002E7 A3[3E0B]            <1> 	mov [gdt5 + 2],ax
   300 000002EA 66C1E810            <1> 	shr eax,16
   301 000002EE A2[380B]            <1> 	mov [gdt4 + 4],al
   302 000002F1 A2[400B]            <1> 	mov [gdt5 + 4],al
   303 000002F4 8826[3B0B]          <1> 	mov [gdt4 + 7],ah
   304 000002F8 8826[430B]          <1> 	mov [gdt5 + 7],ah
   305                              <1> ; fix up gdt and idt
   306 000002FC 67668D83[0C0B0000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   307 00000304 66A3[020B]          <1> 	mov [gdtr + 2],eax
   308 00000308 67668D83[440B0000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   309 00000310 66A3[080B]          <1> 	mov [idtr + 2],eax
   310 00000314 FA                  <1> 	cli
   311 00000315 0F0116[000B]        <1> 	lgdt [gdtr]
   312 0000031A 0F011E[060B]        <1> 	lidt [idtr]
   313 0000031F 66BB00000000        <1> 	mov ebx, 0
   314 00000325 8CDB                <1> 	mov bx, ds
   315 00000327 66891E[F003]        <1> 	mov [basecache], ebx
   316 0000032C 0F20C0              <1> 	mov eax,cr0
   317 0000032F 0C01                <1> 	or al,1
   318 00000331 0F22C0              <1> 	mov cr0,eax
   319 00000334 EA[3903]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   320                              <1> [BITS 32]
   321                              <1> do_pm:
   322 00000339 66B81800            <1> 	mov ax, SYS_DATA_SEL
   323 0000033D 8ED8                <1> 	mov ds,ax
   324 0000033F 8ED0                <1> 	mov ss, ax	;;can switch back to STACK_SEL later
   325 00000341 BC[00100000]        <1> 	mov esp, stackend	;;can switch back to 4096 later
   326 00000346 90                  <1> 	nop
   327 00000347 90                  <1> 	nop
   328 00000348 66B81800            <1> 	mov ax, SYS_DATA_SEL
   329 0000034C 8EC0                <1> 	mov es,ax
   330 0000034E 8EE0                <1> 	mov fs,ax
   331 00000350 66B83000            <1> 	mov ax, NEW_DATA_SEL
   332 00000354 8EE8                <1> 	mov gs,ax
   333 00000356 BE00000000          <1> 	mov esi, 0
   334                              <1> 	
   335                              <1> copykernel:
   336 0000035B 648B06              <1> 	mov eax, [fs:esi]
   337 0000035E 658906              <1> 	mov [gs:esi], eax
   338 00000361 81C604000000        <1> 	add esi, 4
   339 00000367 81FE[00000000]      <1> 	cmp esi, bssstart
   340 0000036D 72EC                <1> 	jb copykernel
   341 0000036F EA[76030000]2800    <1> 	jmp NEW_CODE_SEL:done_copy
   342                              <1> 	
   343                              <1> done_copy:
   344 00000376 66B83000            <1> 	mov ax, NEW_DATA_SEL	;;these MUST be setup AFTER the kernel switches places!!!
   345 0000037A 8ED8                <1> 	mov ds, ax
   346 0000037C 8ED0                <1> 	mov ss, ax
   347 0000037E BC[00100000]        <1> 	mov esp, stackend
   348 00000383 90                  <1> 	nop
   349 00000384 90                  <1> 	nop
   350 00000385 66B83000            <1> 	mov ax, NEW_DATA_SEL
   351 00000389 8EC0                <1> 	mov es, ax
   352 0000038B 8EE0                <1> 	mov fs, ax
   353 0000038D 66B81800            <1> 	mov ax, SYS_DATA_SEL
   354 00000391 8EE8                <1> 	mov gs, ax
   355                              <1> 	
   356 00000393 A1[F4030000]        <1> 	mov eax, [newcodecache]
   357 00000398 C1E804              <1> 	shr eax, 4
   358 0000039B A3[F0030000]        <1> 	mov [basecache], eax
   359 000003A0 BE[00000000]        <1> 	mov esi, bssstart
   360 000003A5 B800000000          <1> 	mov eax, 0
   361                              <1> clearkernelbuffers:
   362 000003AA 8906                <1> 	mov [esi], eax
   363 000003AC 81C604000000        <1> 	add esi, 4
   364 000003B2 81FE[27642000]      <1> 	cmp esi, bssend
   365 000003B8 72F0                <1> 	jb clearkernelbuffers	
   366                              <1> 	
   367 000003BA 8B3D[6A5E0000]      <1> 	mov edi, [physbaseptr]
   368 000003C0 A1[F0030000]        <1> 	mov eax, [basecache]
   369 000003C5 C1E004              <1> 	shl eax, 4
   370 000003C8 29C7                <1> 	sub edi, eax
   371 000003CA 893D[6A5E0000]      <1> 	mov [physbaseptr], edi
   372 000003D0 E817170000          <1> 	call indexfiles
   373 000003D5 803D[8B010000]00    <1> 	cmp byte [guinodo], 0
   374 000003DC 0F8405000000        <1> 	je near guido
   375 000003E2 E9E10F0000          <1> 	jmp os
   376                              <1> 	
   377                              <1> guido:
   378 000003E7 E9652C0000          <1> 	jmp gui
   379                              <1> 	
   380 000003EC 00000000            <1> user2codepoint dw 0,0
   381 000003F0 00000000            <1> basecache dd 0
   382 000003F4 00001100            <1> newcodecache dd 0x110000
   383                              <1> 	
   384                              <1> 
   385                              <1> unhand:	
   386                              <1> 	%assign i 0
   387                              <1> 	%rep 40
   388                              <1> 	cli
   389                              <1> 	mov byte [intprob], i
   390                              <1> 	jmp unhand2
   391                              <1> 	%assign i i+1
   392                              <1> 	%endrep
   393 000003F8 FA                  <2>  cli
   394 000003F9 C605[6B070000]00    <2>  mov byte [intprob], i
   395 00000400 E9FB010000          <2>  jmp unhand2
   396                              <2>  %assign i i+1
   397 00000405 FA                  <2>  cli
   398 00000406 C605[6B070000]01    <2>  mov byte [intprob], i
   399 0000040D E9EE010000          <2>  jmp unhand2
   400                              <2>  %assign i i+1
   401 00000412 FA                  <2>  cli
   402 00000413 C605[6B070000]02    <2>  mov byte [intprob], i
   403 0000041A E9E1010000          <2>  jmp unhand2
   404                              <2>  %assign i i+1
   405 0000041F FA                  <2>  cli
   406 00000420 C605[6B070000]03    <2>  mov byte [intprob], i
   407 00000427 E9D4010000          <2>  jmp unhand2
   408                              <2>  %assign i i+1
   409 0000042C FA                  <2>  cli
   410 0000042D C605[6B070000]04    <2>  mov byte [intprob], i
   411 00000434 E9C7010000          <2>  jmp unhand2
   412                              <2>  %assign i i+1
   413 00000439 FA                  <2>  cli
   414 0000043A C605[6B070000]05    <2>  mov byte [intprob], i
   415 00000441 E9BA010000          <2>  jmp unhand2
   416                              <2>  %assign i i+1
   417 00000446 FA                  <2>  cli
   418 00000447 C605[6B070000]06    <2>  mov byte [intprob], i
   419 0000044E E9AD010000          <2>  jmp unhand2
   420                              <2>  %assign i i+1
   421 00000453 FA                  <2>  cli
   422 00000454 C605[6B070000]07    <2>  mov byte [intprob], i
   423 0000045B E9A0010000          <2>  jmp unhand2
   424                              <2>  %assign i i+1
   425 00000460 FA                  <2>  cli
   426 00000461 C605[6B070000]08    <2>  mov byte [intprob], i
   427 00000468 E993010000          <2>  jmp unhand2
   428                              <2>  %assign i i+1
   429 0000046D FA                  <2>  cli
   430 0000046E C605[6B070000]09    <2>  mov byte [intprob], i
   431 00000475 E986010000          <2>  jmp unhand2
   432                              <2>  %assign i i+1
   433 0000047A FA                  <2>  cli
   434 0000047B C605[6B070000]0A    <2>  mov byte [intprob], i
   435 00000482 E979010000          <2>  jmp unhand2
   436                              <2>  %assign i i+1
   437 00000487 FA                  <2>  cli
   438 00000488 C605[6B070000]0B    <2>  mov byte [intprob], i
   439 0000048F E96C010000          <2>  jmp unhand2
   440                              <2>  %assign i i+1
   441 00000494 FA                  <2>  cli
   442 00000495 C605[6B070000]0C    <2>  mov byte [intprob], i
   443 0000049C E95F010000          <2>  jmp unhand2
   444                              <2>  %assign i i+1
   445 000004A1 FA                  <2>  cli
   446 000004A2 C605[6B070000]0D    <2>  mov byte [intprob], i
   447 000004A9 E952010000          <2>  jmp unhand2
   448                              <2>  %assign i i+1
   449 000004AE FA                  <2>  cli
   450 000004AF C605[6B070000]0E    <2>  mov byte [intprob], i
   451 000004B6 E945010000          <2>  jmp unhand2
   452                              <2>  %assign i i+1
   453 000004BB FA                  <2>  cli
   454 000004BC C605[6B070000]0F    <2>  mov byte [intprob], i
   455 000004C3 E938010000          <2>  jmp unhand2
   456                              <2>  %assign i i+1
   457 000004C8 FA                  <2>  cli
   458 000004C9 C605[6B070000]10    <2>  mov byte [intprob], i
   459 000004D0 E92B010000          <2>  jmp unhand2
   460                              <2>  %assign i i+1
   461 000004D5 FA                  <2>  cli
   462 000004D6 C605[6B070000]11    <2>  mov byte [intprob], i
   463 000004DD E91E010000          <2>  jmp unhand2
   464                              <2>  %assign i i+1
   465 000004E2 FA                  <2>  cli
   466 000004E3 C605[6B070000]12    <2>  mov byte [intprob], i
   467 000004EA E911010000          <2>  jmp unhand2
   468                              <2>  %assign i i+1
   469 000004EF FA                  <2>  cli
   470 000004F0 C605[6B070000]13    <2>  mov byte [intprob], i
   471 000004F7 E904010000          <2>  jmp unhand2
   472                              <2>  %assign i i+1
   473 000004FC FA                  <2>  cli
   474 000004FD C605[6B070000]14    <2>  mov byte [intprob], i
   475 00000504 E9F7000000          <2>  jmp unhand2
   476                              <2>  %assign i i+1
   477 00000509 FA                  <2>  cli
   478 0000050A C605[6B070000]15    <2>  mov byte [intprob], i
   479 00000511 E9EA000000          <2>  jmp unhand2
   480                              <2>  %assign i i+1
   481 00000516 FA                  <2>  cli
   482 00000517 C605[6B070000]16    <2>  mov byte [intprob], i
   483 0000051E E9DD000000          <2>  jmp unhand2
   484                              <2>  %assign i i+1
   485 00000523 FA                  <2>  cli
   486 00000524 C605[6B070000]17    <2>  mov byte [intprob], i
   487 0000052B E9D0000000          <2>  jmp unhand2
   488                              <2>  %assign i i+1
   489 00000530 FA                  <2>  cli
   490 00000531 C605[6B070000]18    <2>  mov byte [intprob], i
   491 00000538 E9C3000000          <2>  jmp unhand2
   492                              <2>  %assign i i+1
   493 0000053D FA                  <2>  cli
   494 0000053E C605[6B070000]19    <2>  mov byte [intprob], i
   495 00000545 E9B6000000          <2>  jmp unhand2
   496                              <2>  %assign i i+1
   497 0000054A FA                  <2>  cli
   498 0000054B C605[6B070000]1A    <2>  mov byte [intprob], i
   499 00000552 E9A9000000          <2>  jmp unhand2
   500                              <2>  %assign i i+1
   501 00000557 FA                  <2>  cli
   502 00000558 C605[6B070000]1B    <2>  mov byte [intprob], i
   503 0000055F E99C000000          <2>  jmp unhand2
   504                              <2>  %assign i i+1
   505 00000564 FA                  <2>  cli
   506 00000565 C605[6B070000]1C    <2>  mov byte [intprob], i
   507 0000056C E98F000000          <2>  jmp unhand2
   508                              <2>  %assign i i+1
   509 00000571 FA                  <2>  cli
   510 00000572 C605[6B070000]1D    <2>  mov byte [intprob], i
   511 00000579 E982000000          <2>  jmp unhand2
   512                              <2>  %assign i i+1
   513 0000057E FA                  <2>  cli
   514 0000057F C605[6B070000]1E    <2>  mov byte [intprob], i
   515 00000586 E975000000          <2>  jmp unhand2
   516                              <2>  %assign i i+1
   517 0000058B FA                  <2>  cli
   518 0000058C C605[6B070000]1F    <2>  mov byte [intprob], i
   519 00000593 E968000000          <2>  jmp unhand2
   520                              <2>  %assign i i+1
   521 00000598 FA                  <2>  cli
   522 00000599 C605[6B070000]20    <2>  mov byte [intprob], i
   523 000005A0 E95B000000          <2>  jmp unhand2
   524                              <2>  %assign i i+1
   525 000005A5 FA                  <2>  cli
   526 000005A6 C605[6B070000]21    <2>  mov byte [intprob], i
   527 000005AD E94E000000          <2>  jmp unhand2
   528                              <2>  %assign i i+1
   529 000005B2 FA                  <2>  cli
   530 000005B3 C605[6B070000]22    <2>  mov byte [intprob], i
   531 000005BA E941000000          <2>  jmp unhand2
   532                              <2>  %assign i i+1
   533 000005BF FA                  <2>  cli
   534 000005C0 C605[6B070000]23    <2>  mov byte [intprob], i
   535 000005C7 E934000000          <2>  jmp unhand2
   536                              <2>  %assign i i+1
   537 000005CC FA                  <2>  cli
   538 000005CD C605[6B070000]24    <2>  mov byte [intprob], i
   539 000005D4 E927000000          <2>  jmp unhand2
   540                              <2>  %assign i i+1
   541 000005D9 FA                  <2>  cli
   542 000005DA C605[6B070000]25    <2>  mov byte [intprob], i
   543 000005E1 E91A000000          <2>  jmp unhand2
   544                              <2>  %assign i i+1
   545 000005E6 FA                  <2>  cli
   546 000005E7 C605[6B070000]26    <2>  mov byte [intprob], i
   547 000005EE E90D000000          <2>  jmp unhand2
   548                              <2>  %assign i i+1
   549 000005F3 FA                  <2>  cli
   550 000005F4 C605[6B070000]27    <2>  mov byte [intprob], i
   551 000005FB E900000000          <2>  jmp unhand2
   552                              <2>  %assign i i+1
   553                              <1> unhand2:
   554 00000600 1E                  <1> 	push ds
   555 00000601 06                  <1> 	push es
   556 00000602 0FA0                <1> 	push fs
   557 00000604 0FA8                <1> 	push gs
   558 00000606 16                  <1> 	push ss
   559 00000607 60                  <1> 	pushad
   560 00000608 89E6                <1> 	mov esi, esp
   561 0000060A 81C6DC000000        <1> 	add esi, ((unhndrgend - unhndrg)/15)*4
   562 00000610 8935[61070000]      <1> 	mov [esploc], esi
   563 00000616 BE[6C070000]        <1> 	mov esi, unhandmsg
   564 0000061B 8935[65070000]      <1> 	mov [esiloc], esi
   565 00000621 BE[FC530000]        <1> 	mov esi, line
   566 00000626 E858090000          <1> 	call print
   567 0000062B B900000000          <1> 	mov ecx, 0
   568 00000630 8A0D[6B070000]      <1> 	mov cl, [intprob]
   569 00000636 E8C6000000          <1> 	call expdump
   570                              <1> dumpstack:
   571 0000063B 8B35[61070000]      <1> 	mov esi, [esploc]
   572 00000641 39E6                <1> 	cmp esi, esp
   573 00000643 7216                <1> 	jb donedump
   574 00000645 368B0E              <1> 	mov ecx, [ss:esi]
   575 00000648 81EE04000000        <1> 	sub esi, 4
   576 0000064E 8935[61070000]      <1> 	mov [esploc], esi
   577 00000654 E8A8000000          <1> 	call expdump
   578 00000659 EBE0                <1> 	jmp dumpstack
   579                              <1> donedump:
   580 0000065B 8B35[61070000]      <1> 	mov esi, [esploc]
   581 00000661 368B7C2420          <1> 	mov edi, [ss:esp + 32]
   582 00000666 8B4FFC              <1> 	mov ecx, [edi - 4]
   583 00000669 E893000000          <1> 	call expdump
   584 0000066E 8B35[61070000]      <1> 	mov esi, [esploc]
   585 00000674 368B7C2420          <1> 	mov edi, [ss:esp + 32]
   586 00000679 8B0F                <1> 	mov ecx, [edi]
   587 0000067B E881000000          <1> 	call expdump
   588 00000680 8B35[61070000]      <1> 	mov esi, [esploc]
   589 00000686 368B7C2420          <1> 	mov edi, [ss:esp + 32]
   590 0000068B 8B4F04              <1> 	mov ecx, [edi + 4]
   591 0000068E E86E000000          <1> 	call expdump
   592 00000693 BE[DB060000]        <1> 	mov esi, backtoosmsg
   593 00000698 E8E6080000          <1> 	call print
   594 0000069D B000                <1> 	mov al, 0
   595 0000069F E89E080000          <1> 	call int302
   596 000006A4 803D[6B070000]03    <1> 	cmp byte [intprob], 3
   597 000006AB 7511                <1> 	jne nodebugint
   598 000006AD 8B35[61070000]      <1> 	mov esi, [esploc]
   599 000006B3 89F4                <1> 	mov esp, esi
   600 000006B5 61                  <1> 	popad
   601 000006B6 17                  <1> 	pop ss
   602 000006B7 0FA9                <1> 	pop gs
   603 000006B9 0FA1                <1> 	pop fs
   604 000006BB 07                  <1> 	pop es
   605 000006BC 1F                  <1> 	pop ds
   606 000006BD CF                  <1> 	iret
   607                              <1> nodebugint:
   608 000006BE 803D[AB310000]00    <1> 	cmp byte [guion], 0
   609 000006C5 7505                <1> 	jne returnunhandgui
   610 000006C7 E90E0E0000          <1> 	jmp nwcmd
   611                              <1> returnunhandgui:
   612 000006CC E841290000          <1> 	call guiclear
   613 000006D1 E859310000          <1> 	call reloadallgraphics
   614 000006D6 E9BB2A0000          <1> 	jmp guistart
   615 000006DB 507265737320616E79- <1> backtoosmsg db "Press any key to return to SollerOS",10,13,0
   616 000006E4 206B657920746F2072- <1>
   617 000006ED 657475726E20746F20- <1>
   618 000006F6 536F6C6C65724F530A- <1>
   619 000006FF 0D00                <1>
   620                              <1> expdump:
   621 00000701 8B35[65070000]      <1> 	mov esi, [esiloc]
   622 00000707 89F7                <1> 	mov edi, esi
   623 00000709 81C70F000000        <1> 	add edi, 15
   624 0000070F 81C604000000        <1> 	add esi, 4
   625 00000715 893D[65070000]      <1> 	mov [esiloc], edi
   626 0000071B 81EF03000000        <1> 	sub edi, 3
   627 00000721 E852110000          <1> 	call converthex
   628 00000726 81EE04000000        <1> 	sub esi, 4
   629 0000072C 803D[AB310000]00    <1> 	cmp byte [guion], 0
   630 00000733 0F8422000000        <1> 	je near expdumptext
   631 00000739 668B0D[69070000]    <1> 	mov cx, [locunhand]
   632 00000740 668105[69070000]10- <1> 	add word [locunhand], 16
   633 00000748 00                  <1>
   634 00000749 66BA0200            <1> 	mov dx, 2
   635 0000074D 66B80100            <1> 	mov ax, 1
   636 00000751 66BB0000            <1> 	mov bx, 0
   637 00000755 E82F340000          <1> 	call showstring2
   638 0000075A C3                  <1> 	ret
   639                              <1> expdumptext:
   640 0000075B E823080000          <1> 	call print
   641 00000760 C3                  <1> 	ret
   642 00000761 00000000            <1> esploc dd 0
   643 00000765 00000000            <1> esiloc dd 0
   644 00000769 0100                <1> locunhand dw 1
   645 0000076B 00                  <1> intprob db 0
   646                              <1> 	unhandmsg:	
   647 0000076C 494E543D3030303030- <1> 			db "INT=00000000",10,13,0
   648 00000775 3030300A0D00        <1>
   649                              <1> unhndrg:
   650 0000077B 202008083030303030- <1>    times 40 db "  ",8,8,"00000000  ",0	;;this dumps the stack before the stack frame in question
   651 00000784 303030202000<rept>  <1>
   652 000009D3 45464C3D3030303030- <1> 			db "EFL=00000000",10,13,0
   653 000009DC 3030300A0D00        <1>
   654 000009E2 43533A3D3030303030- <1> 			db "CS:=00000000",10,13,0
   655 000009EB 3030300A0D00        <1>
   656 000009F1 4549503D3030303030- <1> 			db "EIP=00000000",10,13,0
   657 000009FA 3030300A0D00        <1>
   658 00000A00 44533A3D3030303030- <1> 			db "DS:=00000000",10,13,0
   659 00000A09 3030300A0D00        <1>
   660 00000A0F 45533A3D3030303030- <1> 			db "ES:=00000000",10,13,0
   661 00000A18 3030300A0D00        <1>
   662 00000A1E 46533A3D3030303030- <1> 			db "FS:=00000000",10,13,0
   663 00000A27 3030300A0D00        <1>
   664 00000A2D 47533A3D3030303030- <1> 			db "GS:=00000000",10,13,0
   665 00000A36 3030300A0D00        <1>
   666 00000A3C 53533A3D3030303030- <1> 			db "SS:=00000000",10,13,0
   667 00000A45 3030300A0D00        <1>
   668 00000A4B 4541583D3030303030- <1> 			db "EAX=00000000",10,13,0
   669 00000A54 3030300A0D00        <1>
   670 00000A5A 4543583D3030303030- <1> 			db "ECX=00000000",10,13,0
   671 00000A63 3030300A0D00        <1>
   672 00000A69 4544583D3030303030- <1> 			db "EDX=00000000",10,13,0
   673 00000A72 3030300A0D00        <1>
   674 00000A78 4542583D3030303030- <1> 			db "EBX=00000000",10,13,0
   675 00000A81 3030300A0D00        <1>
   676 00000A87 4553503D3030303030- <1> 			db "ESP=00000000",10,13,0
   677 00000A90 3030300A0D00        <1>
   678 00000A96 4542503D3030303030- <1> 			db "EBP=00000000",10,13,0
   679 00000A9F 3030300A0D00        <1>
   680 00000AA5 4553493D3030303030- <1> 			db "ESI=00000000",10,13,0
   681 00000AAE 3030300A0D00        <1>
   682 00000AB4 4544493D3030303030- <1> unhndrgend:	db "EDI=00000000",10,13,0
   683 00000ABD 3030300A0D00        <1>
   684 00000AC3 434D443D3030303030- <1> 			db "CMD=00000000",10,13,0
   685 00000ACC 3030300A0D00        <1>
   686 00000AD2 434D443D3030303030- <1> 			db "CMD=00000000",10,13,0
   687 00000ADB 3030300A0D00        <1>
   688 00000AE1 434D443D3030303030- <1> 			db "CMD=00000000",10,13,0
   689 00000AEA 3030300A0D00        <1>
   690                              <1> unhandmsgend:
   691                              <1> 
   692                              <1> timerinterrupt:
   693 00000AF0 803D[254D0000]01    <1> 	cmp byte [threadson], 1
   694 00000AF7 7505                <1> 	jne handled
   695 00000AF9 E9E5470000          <1> 	jmp threadswitch
   696                              <1> 	
   697                              <1> handled:
   698 00000AFE CF                  <1> 	iret
   699                              <1> 
   700 00000AFF 00                  <1> align 4, db 0	;;this makes me feel safer
   701                              <1> [BITS 16]
   702                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   703                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   704                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   705 00000B00 3700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   706 00000B02 [0C0B0000]          <1> 	dd gdt			; linear, physical address of GDT
   707                              <1> 
   708 00000B06 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   709 00000B08 [440B0000]          <1> 	dd idt			; linear, physical address of IDT
   710                              <1> 
   711                              <1> 
   712 00000B0C 0000                <1> gdt:	dw 0			; limit 15:0
   713 00000B0E 0000                <1> 	dw 0			; base 15:0
   714 00000B10 00                  <1> 	db 0			; base 23:16
   715 00000B11 00                  <1> 	db 0			; type
   716 00000B12 00                  <1> 	db 0			; limit 19:16, flags
   717 00000B13 00                  <1> 	db 0			; base 31:24
   718                              <1> ; linear data segment descriptor
   719                              <1> LINEAR_SEL	equ	$-gdt
   720 00000B14 FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   721 00000B16 0000                <1> 	dw 0			; base for this one is always 0
   722 00000B18 00                  <1> 	db 0
   723 00000B19 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   724 00000B1A CF                  <1> 	db 0xCF			; page-granular, 32-bit
   725 00000B1B 00                  <1> 	db 0
   726                              <1> ; code segment descriptor
   727                              <1> SYS_CODE_SEL	equ	$-gdt
   728 00000B1C FFFF                <1> gdt2:	dw 0xFFFF
   729 00000B1E 0000                <1> 	dw 0			; (base gets set above)
   730 00000B20 00                  <1> 	db 0
   731 00000B21 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   732 00000B22 CF                  <1> 	db 0xCF
   733 00000B23 00                  <1> 	db 0
   734                              <1> ; data segment descriptor
   735                              <1> SYS_DATA_SEL	equ	$-gdt
   736 00000B24 FFFF                <1> gdt3:	dw 0xFFFF
   737 00000B26 0000                <1> 	dw 0			; (base gets set above)
   738 00000B28 00                  <1> 	db 0
   739 00000B29 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   740 00000B2A CF                  <1> 	db 0xCF
   741 00000B2B 00                  <1> 	db 0
   742                              <1> STACK_SEL	equ	$-gdt	;;this is no longer used for various reasons
   743 00000B2C 0100                <1> gdts:	dw 1
   744 00000B2E 0000                <1> 	dw 0			; (base gets set above)
   745 00000B30 00                  <1> 	db 0
   746 00000B31 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   747 00000B32 C0                  <1> 	db 0xC0
   748 00000B33 00                  <1> 	db 0
   749                              <1> currentcodesel  equ $-gdt		;move this to wherever it should be
   750                              <1> NEW_CODE_SEL	equ	$-gdt
   751 00000B34 FFFF                <1> gdt4:	dw 0xFFFF
   752 00000B36 0000                <1> 	dw 0			; (base gets set above)
   753 00000B38 00                  <1> 	db 0
   754 00000B39 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   755 00000B3A CF                  <1> 	db 0xCF
   756 00000B3B 00                  <1> 	db 0
   757                              <1> ; data segment descriptor
   758                              <1> NEW_DATA_SEL	equ	$-gdt
   759 00000B3C FFFF                <1> gdt5:	dw 0xFFFF
   760 00000B3E 0000                <1> 	dw 0			; (base gets set above)
   761 00000B40 00                  <1> 	db 0
   762 00000B41 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   763 00000B42 CF                  <1> 	db 0xCF
   764 00000B43 00                  <1> 	db 0
   765                              <1> gdt_end:
   766                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   767                              <1> ;	interrupt descriptor table (IDT)
   768                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   769                              <1> ; 32 reserved interrupts:
   770                              <1> idt:	
   771                              <1> %assign i 0
   772                              <1> %rep    8
   773                              <1>         dw unhand + i*13,currentcodesel,0x8E00,0
   774                              <1> %assign i i+1 
   775                              <1> %endrep
   776 00000B44 [F803]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   777                              <2> %assign i i+1
   778 00000B4C [0504]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   779                              <2> %assign i i+1
   780 00000B54 [1204]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   781                              <2> %assign i i+1
   782 00000B5C [1F04]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   783                              <2> %assign i i+1
   784 00000B64 [2C04]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   785                              <2> %assign i i+1
   786 00000B6C [3904]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   787                              <2> %assign i i+1
   788 00000B74 [4604]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   789                              <2> %assign i i+1
   790 00000B7C [5304]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   791                              <2> %assign i i+1
   792 00000B84 [F00A]2800008E0000  <1> 		dw timerinterrupt,currentcodesel,0x8E00,0
   793                              <1> %assign i 9
   794                              <1> %rep    6
   795                              <1>         dw unhand + i*13,currentcodesel,0x8E00,0
   796                              <1> %assign i i+1 
   797                              <1> %endrep
   798 00000B8C [6D04]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   799                              <2> %assign i i+1
   800 00000B94 [7A04]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   801                              <2> %assign i i+1
   802 00000B9C [8704]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   803                              <2> %assign i i+1
   804 00000BA4 [9404]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   805                              <2> %assign i i+1
   806 00000BAC [A104]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   807                              <2> %assign i i+1
   808 00000BB4 [AE04]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   809                              <2> %assign i i+1
   810 00000BBC [FE0A]2800008E0000  <1> 		dw handled,currentcodesel,0x8E00,0		;;irq 7 or int 0xF is random, unusable, and usually reserved
   811                              <1> %assign i 16
   812                              <1> %rep    32
   813                              <1> 		dw unhand + i*13,currentcodesel,0x8E00,0
   814                              <1> %assign i i+1
   815                              <1> %endrep
   816 00000BC4 [C804]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   817                              <2> %assign i i+1
   818 00000BCC [D504]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   819                              <2> %assign i i+1
   820 00000BD4 [E204]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   821                              <2> %assign i i+1
   822 00000BDC [EF04]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   823                              <2> %assign i i+1
   824 00000BE4 [FC04]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   825                              <2> %assign i i+1
   826 00000BEC [0905]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   827                              <2> %assign i i+1
   828 00000BF4 [1605]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   829                              <2> %assign i i+1
   830 00000BFC [2305]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   831                              <2> %assign i i+1
   832 00000C04 [3005]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   833                              <2> %assign i i+1
   834 00000C0C [3D05]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   835                              <2> %assign i i+1
   836 00000C14 [4A05]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   837                              <2> %assign i i+1
   838 00000C1C [5705]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   839                              <2> %assign i i+1
   840 00000C24 [6405]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   841                              <2> %assign i i+1
   842 00000C2C [7105]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   843                              <2> %assign i i+1
   844 00000C34 [7E05]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   845                              <2> %assign i i+1
   846 00000C3C [8B05]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   847                              <2> %assign i i+1
   848 00000C44 [9805]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   849                              <2> %assign i i+1
   850 00000C4C [A505]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   851                              <2> %assign i i+1
   852 00000C54 [B205]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   853                              <2> %assign i i+1
   854 00000C5C [BF05]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   855                              <2> %assign i i+1
   856 00000C64 [CC05]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   857                              <2> %assign i i+1
   858 00000C6C [D905]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   859                              <2> %assign i i+1
   860 00000C74 [E605]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   861                              <2> %assign i i+1
   862 00000C7C [F305]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   863                              <2> %assign i i+1
   864 00000C84 [0006]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   865                              <2> %assign i i+1
   866 00000C8C [0D06]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   867                              <2> %assign i i+1
   868 00000C94 [1A06]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   869                              <2> %assign i i+1
   870 00000C9C [2706]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   871                              <2> %assign i i+1
   872 00000CA4 [3406]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   873                              <2> %assign i i+1
   874 00000CAC [4106]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   875                              <2> %assign i i+1
   876 00000CB4 [4E06]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   877                              <2> %assign i i+1
   878 00000CBC [5B06]2800008E0000  <2>  dw unhand + i*13,currentcodesel,0x8E00,0
   879                              <2> %assign i i+1
   880                              <1> 		
   881                              <1> ;;INT 30h for os use and 3rd party use:
   882 00000CC4 [CC0C]2800008E0000  <1> 	dw newints,currentcodesel,0x8E00,0
   883                              <1> idt_end:
   884                              <1> [BITS 32]
   885                                  [BITS 32]
   886                                      %include 'source/ints.asm'
   887                              <1> newints:	;;for great justice
   888 00000CCC FA                  <1> 	cli				;;stop other interrupts
   889 00000CCD 80FC00              <1> 	cmp ah, 0		;;originally 0
   890 00000CD0 0F8452000000        <1> 	je near intx0   ;;0=kills app
   891 00000CD6 80FC01              <1> 	cmp ah, 1		;;originally 1
   892 00000CD9 0F844E000000        <1> 	je near intx1   ;;3=print string
   893 00000CDF 80FC02              <1> 	cmp ah, 2		;;originally 2
   894 00000CE2 0F844F000000        <1> 	je near intx2	;;4=read string
   895 00000CE8 80FC03              <1> 	cmp ah, 3		;;originally 3
   896 00000CEB 0F8450000000        <1> 	je near intx3	;;6=clear screen
   897 00000CF1 80FC04              <1> 	cmp ah, 4		;;originally 4
   898 00000CF4 0F8451000000        <1> 	je near intx4	;;5=read and print string
   899 00000CFA 80FC05              <1> 	cmp ah, 5		;;originally 5		
   900 00000CFD 0F8452000000        <1> 	je near intx5	;;2=get char
   901 00000D03 80FC06              <1> 	cmp ah, 6		;;originally 6
   902 00000D06 0F8453000000        <1> 	je near intx6	;;1=print char
   903 00000D0C 80FC07              <1> 	cmp ah, 7
   904 00000D0F 0F8454000000        <1> 	je near intx7	;;read file
   905 00000D15 80FC09              <1> 	cmp ah, 9
   906 00000D18 0F8455000000        <1> 	je near intx9	;;convert number
   907 00000D1E 80FC0A              <1> 	cmp ah, 10
   908 00000D21 0F8464000000        <1> 	je near intx10	;;create thread
   909 00000D27 C3                  <1> 	ret
   910                              <1> 	
   911                              <1> ;;the jmp timerinterrupt's ensure that task switches occur
   912                              <1> 	
   913                              <1> intx0:
   914 00000D28 E9AD070000          <1> 	jmp nwcmd
   915                              <1> intx1:
   916 00000D2D E859020000          <1> 	call int303
   917 00000D32 E9B9FDFFFF          <1> 	jmp timerinterrupt
   918                              <1> intx2:
   919 00000D37 E873020000          <1> 	call int304
   920 00000D3C E9AFFDFFFF          <1> 	jmp timerinterrupt
   921                              <1> intx3:
   922 00000D41 E82E050000          <1> 	call int306
   923 00000D46 E9A5FDFFFF          <1> 	jmp timerinterrupt
   924                              <1> intx4:
   925 00000D4B E88C020000          <1> 	call int305
   926 00000D50 E99BFDFFFF          <1> 	jmp timerinterrupt
   927                              <1> intx5:
   928 00000D55 E8E8010000          <1> 	call int302
   929 00000D5A E991FDFFFF          <1> 	jmp timerinterrupt
   930                              <1> intx6:
   931 00000D5F E837000000          <1> 	call int301
   932 00000D64 E987FDFFFF          <1> 	jmp timerinterrupt
   933                              <1> intx7:
   934 00000D69 E8B13D0000          <1> 	call loadfile
   935 00000D6E E97DFDFFFF          <1> 	jmp timerinterrupt
   936                              <1> intx9:
   937 00000D73 3C00                <1> 	cmp al, 0
   938 00000D75 750A                <1> 	jne intx9B
   939 00000D77 E84B0C0000          <1> 	call showdec
   940 00000D7C E96FFDFFFF          <1> 	jmp timerinterrupt
   941                              <1> intx9B:
   942 00000D81 E89C0B0000          <1> 	call showhex
   943 00000D86 E965FDFFFF          <1> 	jmp timerinterrupt
   944                              <1> intx10:
   945 00000D8B E89E430000          <1> 	call threadfork
   946 00000D90 CF                  <1> 	iret
   947                              <1> 	
   948 00000D91 0000                <1> linebeginpos dw 0
   949 00000D93 0000                <1> videobufpos: dw 0
   950 00000D95 0000                <1> charpos db 0,0
   951 00000D97 A01E                <1> charxy db 160,30
   952 00000D99 0000                <1> charbuf dw 0
   953                              <1> 
   954                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
   955 00000D9B E808000000          <1> 	call int301prnt
   956 00000DA0 E81F050000          <1> 	call termcopy
   957 00000DA5 C3                  <1> 	ret
   958 00000DA6 00                  <1> termguion db 0
   959 00000DA7 00                  <1> termcopyon db 0
   960                              <1> int301prnt:
   961 00000DA8 88DC                <1> 	mov ah, bl
   962 00000DAA 66A3[990D0000]      <1> 	mov [charbuf], ax
   963 00000DB0 BB00000000          <1> 	mov ebx, 0
   964 00000DB5 668B1D[930D0000]    <1> 	mov bx, [videobufpos]
   965 00000DBC BF[8F1C0000]        <1> 	mov edi, videobuf2
   966 00000DC1 01DF                <1> 	add edi, ebx
   967 00000DC3 66A1[C2120000]      <1> 	mov ax, [removedvideo]
   968 00000DC9 668907              <1> 	mov [edi], ax
   969 00000DCC 66A1[990D0000]      <1> 	mov ax, [charbuf]
   970 00000DD2 BA00000000          <1> 	mov edx, 0
   971 00000DD7 668B15[950D0000]    <1> 	mov dx, [charpos]
   972 00000DDE B900000000          <1> 	mov ecx, 0
   973 00000DE3 668B0D[970D0000]    <1> 	mov cx, [charxy]
   974 00000DEA 3C0D                <1> 	cmp al, 13
   975 00000DEC 0F8454000000        <1> 	je near int301cr
   976 00000DF2 3C0A                <1> 	cmp al, 10
   977 00000DF4 0F8482000000        <1> 	je near int301nl
   978 00000DFA 3C08                <1> 	cmp al, 8
   979 00000DFC 0F845B000000        <1> 	je near int301bs
   980 00000E02 668907              <1> 	mov [edi], ax
   981 00000E05 81C702000000        <1> 	add edi, 2
   982 00000E0B 80C202              <1> 	add dl, 2
   983                              <1> donecrnl:
   984 00000E0E 38CA                <1> 	cmp dl, cl
   985 00000E10 0F8397000000        <1> 	jae near int301eol
   986                              <1> doneeol:
   987 00000E16 38EE                <1> 	cmp dh, ch
   988 00000E18 0F83AD000000        <1> 	jae near int301scr	
   989                              <1> donescr:
   990 00000E1E 89FB                <1> 	mov ebx, edi
   991 00000E20 668B07              <1> 	mov ax, [edi]
   992 00000E23 66A3[C2120000]      <1> 	mov [removedvideo], ax
   993 00000E29 81EB[8F1C0000]      <1> 	sub ebx, videobuf2
   994 00000E2F 66891D[930D0000]    <1> 	mov [videobufpos], bx
   995 00000E36 668915[950D0000]    <1> 	mov [charpos], dx
   996 00000E3D 66A1[990D0000]      <1> 	mov ax, [charbuf]
   997 00000E43 88E3                <1> 	mov bl, ah
   998 00000E45 C3                  <1> 	ret
   999                              <1> 	
  1000                              <1> 	int301cr:
  1001 00000E46 B200                <1> 		mov dl, 0
  1002 00000E48 BB00000000          <1> 		mov ebx, 0
  1003 00000E4D BF[8F1C0000]        <1> 		mov edi, videobuf2
  1004 00000E52 668B1D[910D0000]    <1> 		mov bx, [linebeginpos]
  1005 00000E59 01DF                <1> 		add edi, ebx
  1006 00000E5B EBB1                <1> 		jmp donecrnl
  1007                              <1> 			
  1008                              <1> 	int301bs:
  1009 00000E5D 80FA00              <1> 		cmp dl, 0
  1010 00000E60 740F                <1> 		je int301backline
  1011                              <1> 	int301nobmr:
  1012 00000E62 80EA02              <1> 		sub dl, 2
  1013 00000E65 66B80000            <1> 		mov ax, 0
  1014 00000E69 81EF02000000        <1> 		sub edi, 2
  1015 00000E6F EB9D                <1> 		jmp donecrnl
  1016                              <1> 	int301backline:
  1017 00000E71 88CA                <1> 		mov dl, cl
  1018 00000E73 80FE00              <1> 		cmp dh, 0
  1019 00000E76 74EA                <1> 		je int301nobmr
  1020 00000E78 FECE                <1> 		dec dh
  1021 00000E7A EBE6                <1> 		jmp int301nobmr
  1022                              <1> 		
  1023                              <1> 	int301nl:
  1024 00000E7C FEC6                <1> 		inc dh
  1025 00000E7E BB00000000          <1> 		mov ebx, 0
  1026 00000E83 88CB                <1> 		mov bl, cl
  1027 00000E85 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1028 00000E8A 66031D[930D0000]    <1> 		add bx, [videobufpos]
  1029 00000E91 01DF                <1> 		add edi, ebx
  1030 00000E93 BB00000000          <1> 		mov ebx, 0
  1031 00000E98 88CB                <1> 		mov bl, cl
  1032 00000E9A 66031D[910D0000]    <1> 		add bx, [linebeginpos]
  1033 00000EA1 66891D[910D0000]    <1> 		mov [linebeginpos], bx
  1034 00000EA8 E961FFFFFF          <1> 		jmp donecrnl
  1035                              <1> 		
  1036                              <1> 	int301eol:
  1037 00000EAD B200                <1> 		mov dl, 0
  1038 00000EAF FEC6                <1> 		inc dh
  1039 00000EB1 BB00000000          <1> 		mov ebx, 0
  1040 00000EB6 88CB                <1> 		mov bl, cl
  1041 00000EB8 66031D[910D0000]    <1> 		add bx, [linebeginpos]
  1042 00000EBF 66891D[910D0000]    <1> 		mov [linebeginpos], bx
  1043 00000EC6 E94BFFFFFF          <1> 		jmp doneeol
  1044                              <1> 	int301scr:
  1045 00000ECB FECE                <1> 		dec dh
  1046 00000ECD BF[8F1C0000]        <1> 		mov edi, videobuf2
  1047 00000ED2 BB00000000          <1> 		mov ebx, 0
  1048 00000ED7 88CB                <1> 		mov bl, cl
  1049 00000ED9 01FB                <1> 		add ebx, edi
  1050                              <1> 	intscrollloop:
  1051 00000EDB 668B03              <1> 		mov ax, [ebx]
  1052 00000EDE 668907              <1> 		mov [edi], ax
  1053 00000EE1 81C702000000        <1> 		add edi, 2
  1054 00000EE7 81C302000000        <1> 		add ebx, 2
  1055 00000EED 80E902              <1> 		sub cl, 2
  1056 00000EF0 80F900              <1> 		cmp cl, 0
  1057 00000EF3 75E6                <1> 		jne intscrollloop
  1058 00000EF5 8A0D[970D0000]      <1> 		mov cl, [charxy]
  1059 00000EFB FECD                <1> 		dec ch
  1060 00000EFD 80FD01              <1> 		cmp ch, 1
  1061 00000F00 77D9                <1> 		ja intscrollloop
  1062 00000F02 66B80000            <1> 		mov ax, 0
  1063 00000F06 81EF[8F1C0000]      <1> 		sub edi, videobuf2
  1064 00000F0C 66893D[910D0000]    <1> 		mov [linebeginpos], di
  1065 00000F13 81C7[8F1C0000]      <1> 		add edi, videobuf2
  1066 00000F19 89FB                <1> 		mov ebx, edi
  1067                              <1> 	intloopclear:
  1068 00000F1B 668903              <1> 		mov [ebx], ax
  1069 00000F1E 81C302000000        <1> 		add ebx, 2
  1070 00000F24 80E902              <1> 		sub cl, 2
  1071 00000F27 80F900              <1> 		cmp cl, 0
  1072 00000F2A 75EF                <1> 		jne intloopclear
  1073 00000F2C FECD                <1> 		dec ch
  1074 00000F2E 80FD00              <1> 		cmp ch, 0
  1075 00000F31 75E8                <1> 		jne intloopclear
  1076 00000F33 668B0D[970D0000]    <1> 		mov cx, [charxy]
  1077 00000F3A E9DFFEFFFF          <1> 		jmp donescr
  1078                              <1> 		
  1079                              <1> 		
  1080 00000F3F 0000                <1> lastkey db 0,0
  1081 00000F41 00                  <1> trans db 0
  1082                              <1> 
  1083                              <1> 	int302:		;;get char, if al is 0, wait for key
  1084 00000F42 A2[410F0000]        <1> 		mov [trans], al
  1085                              <1> 	transcheck:
  1086 00000F47 E87A1C0000          <1> 		call guistartin
  1087 00000F4C 8A3D[410F0000]      <1> 		mov bh, [trans]
  1088 00000F52 66A1[3F0F0000]      <1> 		mov ax, [lastkey]
  1089 00000F58 80FC1C              <1> 		cmp ah, 1Ch
  1090 00000F5B 7414                <1> 		je int302enter
  1091 00000F5D 3CE0                <1> 		cmp al, 0xE0
  1092 00000F5F 7504                <1> 		jne nospecialtrans
  1093 00000F61 88C3                <1> 		mov bl, al
  1094 00000F63 B000                <1> 		mov al, 0
  1095                              <1> 	nospecialtrans:
  1096 00000F65 08C7                <1> 		or bh, al
  1097 00000F67 80FF00              <1> 		cmp bh, 0
  1098 00000F6A 74DB                <1> 		je transcheck
  1099 00000F6C E902000000          <1> 		jmp int302end
  1100                              <1> 	int302enter:
  1101 00000F71 B00D                <1> 		mov al, 13
  1102                              <1> 	int302end:
  1103 00000F73 C3                  <1> 		ret
  1104                              <1> 	
  1105 00000F74 00                  <1> endkey303 db 0
  1106                              <1> 	printquiet:
  1107 00000F75 66B80000            <1> 		mov ax, 0
  1108 00000F79 66BB0700            <1> 		mov bx, 7
  1109 00000F7D E819000000          <1> 		call int303b
  1110 00000F82 C3                  <1> 		ret
  1111                              <1>     print:
  1112 00000F83 66B80000            <1> 		mov ax, 0
  1113 00000F87 66BB0700            <1> 		mov bx, 7
  1114                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  1115 00000F8B A2[740F0000]        <1> 		mov [endkey303], al
  1116 00000F90 E806000000          <1> 		call int303b
  1117 00000F95 E82A030000          <1> 		call termcopy
  1118 00000F9A C3                  <1> 		ret
  1119                              <1> 	int303b:
  1120 00000F9B 8A06                <1> 		mov al, [esi]
  1121 00000F9D 3A05[740F0000]      <1> 		cmp al, [endkey303]
  1122 00000FA3 7408                <1> 		je doneint303
  1123 00000FA5 E8FEFDFFFF          <1> 		call int301prnt
  1124 00000FAA 46                  <1> 		inc esi
  1125 00000FAB EBEE                <1> 		jmp int303b
  1126                              <1> 	doneint303:
  1127 00000FAD C3                  <1> 		ret
  1128                              <1> 		
  1129 00000FAE 00                  <1> endkey304 db 0
  1130                              <1> 	int304:	;;get line, al=last key, esi = buffer
  1131 00000FAF A2[AE0F0000]        <1> 		mov [endkey304], al
  1132                              <1> 	int304b:
  1133 00000FB4 56                  <1> 		push esi
  1134 00000FB5 B000                <1> 		mov al, 0
  1135 00000FB7 E886FFFFFF          <1> 		call int302
  1136 00000FBC 5E                  <1> 		pop esi
  1137 00000FBD 8806                <1> 		mov [esi], al
  1138 00000FBF 46                  <1> 		inc esi
  1139 00000FC0 3A05[AE0F0000]      <1> 		cmp al, [endkey304]
  1140 00000FC6 75EC                <1> 		jne int304b
  1141 00000FC8 4E                  <1> 		dec esi
  1142 00000FC9 C60600              <1> 		mov byte [esi], 0
  1143 00000FCC C3                  <1> 	ret
  1144                              <1> 	
  1145 00000FCD 00                  <1> endkey305 db 0
  1146 00000FCE 00                  <1> modkey305 db 0
  1147 00000FCF 00000000            <1> firstesi305 dd 0
  1148 00000FD3 00                  <1> commandedit db 0
  1149 00000FD4 00                  <1> txtmask db 0
  1150 00000FD5 00000000            <1> buftxtloc dd 0
  1151 00000FD9 082000              <1> backcursor db 8," ",0
  1152                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
  1153 00000FDC 8935[D50F0000]      <1> 		mov [buftxtloc], esi
  1154 00000FE2 A2[CD0F0000]        <1> 		mov [endkey305], al
  1155 00000FE7 881D[CE0F0000]      <1> 		mov [modkey305], bl
  1156 00000FED 8935[CF0F0000]      <1> 		mov [firstesi305], esi
  1157                              <1> 	int305b:
  1158 00000FF3 56                  <1> 		push esi
  1159 00000FF4 B001                <1> 		mov al, 1
  1160 00000FF6 E847FFFFFF          <1> 		call int302
  1161 00000FFB 5E                  <1> 		pop esi
  1162 00000FFC 80FC48              <1> 		cmp ah, 0x48
  1163 00000FFF 0F845E010000        <1> 		je near int305up
  1164 00001005 80FC50              <1> 		cmp ah, 0x50
  1165 00001008 0F8438010000        <1> 		je near int305down
  1166 0000100E 80FC4D              <1> 		cmp ah, 0x4D
  1167 00001011 0F84ED000000        <1> 		je near int305right
  1168 00001017 80FC4B              <1> 		cmp ah, 0x4B
  1169 0000101A 0F84AB000000        <1> 		je near int305left
  1170 00001020 3C08                <1> 		cmp al, 8
  1171 00001022 0F842E020000        <1> 		je near int305bscheck
  1172 00001028 3C00                <1> 		cmp al, 0
  1173 0000102A 74C7                <1> 		je int305b
  1174 0000102C 8806                <1> 		mov [esi], al
  1175 0000102E 46                  <1> 		inc esi
  1176                              <1> 	bscheckequal:
  1177 0000102F 8A1D[CE0F0000]      <1> 		mov bl, [modkey305]
  1178 00001035 8A3D[D40F0000]      <1> 		mov bh, [txtmask]
  1179 0000103B 80FF00              <1> 		cmp bh, 0
  1180 0000103E 7402                <1> 		je nomasktxt
  1181 00001040 88F8                <1> 		mov al, bh
  1182                              <1> 	nomasktxt:
  1183 00001042 E854FDFFFF          <1> 		call int301
  1184 00001047 56                  <1> 		push esi
  1185 00001048 66A3[C9100000]      <1> 		mov [int305axcache], ax
  1186 0000104E 8A25[CD0F0000]      <1> 		mov ah, [endkey305]
  1187 00001054 38E0                <1> 		cmp al, ah
  1188 00001056 7429                <1> 		je nobackprintbuftxt2
  1189 00001058 BE[701A0000]        <1> 		mov esi, buftxt2
  1190 0000105D E813FFFFFF          <1> 		call printquiet
  1191 00001062 B020                <1> 		mov al, " "
  1192 00001064 E83FFDFFFF          <1> 		call int301prnt
  1193 00001069 B008                <1> 		mov al, 8
  1194 0000106B 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1195 00001071 740E                <1> 		je nobackprintbuftxt2
  1196                              <1> 	backprintbuftxt2:
  1197 00001073 E830FDFFFF          <1> 		call int301prnt
  1198 00001078 4E                  <1> 		dec esi
  1199 00001079 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1200 0000107F 77F2                <1> 		ja backprintbuftxt2
  1201                              <1> 	nobackprintbuftxt2:
  1202 00001081 E815FDFFFF          <1> 		call int301
  1203 00001086 5E                  <1> 		pop esi
  1204 00001087 66A1[C9100000]      <1> 		mov ax, [int305axcache]
  1205 0000108D 8A25[CD0F0000]      <1> 		mov ah, [endkey305]
  1206 00001093 38E0                <1> 		cmp al, ah
  1207 00001095 0F8558FFFFFF        <1> 		jne int305b
  1208 0000109B 4E                  <1> 		dec esi
  1209 0000109C BF[701A0000]        <1> 		mov edi, buftxt2
  1210                              <1> 	copylaterstuff:
  1211 000010A1 8A07                <1> 		mov al, [edi]
  1212 000010A3 3C00                <1> 		cmp al, 0
  1213 000010A5 7406                <1> 		je nocopylaterstuff
  1214 000010A7 8806                <1> 		mov [esi], al
  1215 000010A9 47                  <1> 		inc edi
  1216 000010AA 46                  <1> 		inc esi
  1217 000010AB EBF4                <1> 		jmp copylaterstuff
  1218                              <1> 	nocopylaterstuff:
  1219 000010AD C60600              <1> 		mov byte [esi], 0
  1220 000010B0 E801000000          <1> 		call clearbuftxt2
  1221 000010B5 C3                  <1> 		ret
  1222                              <1> 	
  1223                              <1> 	clearbuftxt2:
  1224 000010B6 B000                <1> 		mov al, 0
  1225 000010B8 BF[701A0000]        <1> 		mov edi, buftxt2
  1226                              <1> 	clearbuftxt2lp:
  1227 000010BD 8807                <1> 		mov [edi], al
  1228 000010BF 47                  <1> 		inc edi
  1229 000010C0 81FF[7A1B0000]      <1> 		cmp edi, buftxt
  1230 000010C6 75F5                <1> 		jne clearbuftxt2lp
  1231 000010C8 C3                  <1> 		ret
  1232                              <1> 		
  1233 000010C9 0000                <1> 	int305axcache dw 0
  1234                              <1> 		
  1235                              <1> 	int305left:
  1236 000010CB 3B35[D50F0000]      <1> 		cmp esi, [buftxtloc]
  1237 000010D1 0F841CFFFFFF        <1> 		je near int305b
  1238 000010D7 BF[701A0000]        <1> 		mov edi, buftxt2
  1239 000010DC 8A07                <1> 		mov al, [edi]
  1240                              <1> 	shiftbuftxt2:
  1241 000010DE 3C00                <1> 		cmp al, 0
  1242 000010E0 7409                <1> 		je noshiftbuftxt2
  1243 000010E2 47                  <1> 		inc edi
  1244 000010E3 8A27                <1> 		mov ah, [edi]
  1245 000010E5 8807                <1> 		mov [edi], al
  1246 000010E7 88E0                <1> 		mov al, ah
  1247 000010E9 EBF3                <1> 		jmp shiftbuftxt2
  1248                              <1> 	noshiftbuftxt2:
  1249 000010EB BF[701A0000]        <1> 		mov edi, buftxt2
  1250 000010F0 4E                  <1> 		dec esi
  1251 000010F1 8A06                <1> 		mov al, [esi]
  1252 000010F3 8807                <1> 		mov [edi], al
  1253 000010F5 C60600              <1> 		mov byte [esi], 0
  1254 000010F8 B008                <1> 		mov al, 8
  1255 000010FA E89CFCFFFF          <1> 		call int301
  1256 000010FF E9EFFEFFFF          <1> 		jmp int305b
  1257                              <1> 		
  1258                              <1> 	int305right:
  1259 00001104 BF[701A0000]        <1> 		mov edi, buftxt2
  1260 00001109 8A07                <1> 		mov al, [edi]
  1261 0000110B 3C00                <1> 		cmp al, 0
  1262 0000110D 0F84E0FEFFFF        <1> 		je near int305b
  1263 00001113 8806                <1> 		mov [esi], al
  1264                              <1> 	shiftbuftxt2lft:
  1265 00001115 3C00                <1> 		cmp al, 0
  1266 00001117 7408                <1> 		je noshiftbuftxt2lft
  1267 00001119 47                  <1> 		inc edi
  1268 0000111A 8A07                <1> 		mov al, [edi]
  1269 0000111C 8847FF              <1> 		mov [edi - 1], al
  1270 0000111F EBF4                <1> 		jmp shiftbuftxt2lft
  1271                              <1> 	noshiftbuftxt2lft:
  1272 00001121 8A06                <1> 		mov al, [esi]
  1273 00001123 46                  <1> 		inc esi
  1274 00001124 8A1D[CE0F0000]      <1> 		mov bl, [modkey305]
  1275 0000112A E86CFCFFFF          <1> 		call int301
  1276 0000112F E9BFFEFFFF          <1> 		jmp int305b
  1277                              <1> 		
  1278                              <1> 	int305downbck:
  1279 00001134 FECC                <1> 		dec ah
  1280 00001136 8825[D30F0000]      <1> 		mov [commandedit], ah
  1281 0000113C E83A000000          <1> 		call int305bckspc
  1282 00001141 E9ADFEFFFF          <1> 		jmp int305b
  1283                              <1> 	
  1284                              <1> 	int305down:
  1285 00001146 8A25[D30F0000]      <1> 		mov ah, [commandedit]
  1286 0000114C 80FC01              <1> 		cmp ah, 1
  1287 0000114F 0F869EFEFFFF        <1> 		jbe near int305b
  1288 00001155 80FC02              <1> 		cmp ah, 2
  1289 00001158 74DA                <1> 		je int305downbck
  1290 0000115A 80EC02              <1> 		sub ah, 2
  1291 0000115D 8825[D30F0000]      <1> 		mov [commandedit], ah
  1292                              <1> 		
  1293                              <1> 	int305up:
  1294                              <1> 		;cmp bl, 0xE0
  1295                              <1> 		;jne int305b
  1296 00001163 B000                <1> 		mov al, 0
  1297 00001165 3805[D30F0000]      <1> 		cmp [commandedit], al
  1298 0000116B 0F8482FEFFFF        <1> 		je near int305b
  1299 00001171 E805000000          <1> 		call int305bckspc
  1300 00001176 E93C000000          <1> 		jmp getcurrentcommandstr
  1301                              <1> 	int305bckspc:
  1302 0000117B 3B35[D50F0000]      <1> 		cmp esi, [buftxtloc]
  1303 00001181 7426                <1> 		je noint305upbck
  1304                              <1> 	int305upbckspclp:
  1305 00001183 B008                <1> 		mov al, 8
  1306 00001185 8A1D[CE0F0000]      <1> 		mov bl, [modkey305]
  1307 0000118B E818FCFFFF          <1> 		call int301prnt
  1308 00001190 B020                <1> 		mov al, " "
  1309 00001192 E811FCFFFF          <1> 		call int301prnt
  1310 00001197 B008                <1> 		mov al, 8
  1311 00001199 E8FDFBFFFF          <1> 		call int301
  1312 0000119E 4E                  <1> 		dec esi
  1313 0000119F 3B35[D50F0000]      <1> 		cmp esi, [buftxtloc]
  1314 000011A5 7402                <1> 		je noint305upbck
  1315 000011A7 EBDA                <1> 		jmp int305upbckspclp
  1316                              <1> 	noint305upbck:
  1317 000011A9 8B3D[1B300000]      <1> 		mov edi, [currentcommandpos]
  1318 000011AF 81C7[1F300000]      <1> 		add edi, commandbuf
  1319 000011B5 4F                  <1> 		dec edi
  1320 000011B6 C3                  <1> 		ret
  1321                              <1> 	getcurrentcommandstr:
  1322 000011B7 8A25[D30F0000]      <1> 		mov ah, [commandedit]
  1323 000011BD FE05[D30F0000]      <1> 		inc byte [commandedit]
  1324                              <1> 	getccmdlp:
  1325 000011C3 4F                  <1> 		dec edi
  1326 000011C4 8A07                <1> 		mov al, [edi]
  1327 000011C6 81FF[1F300000]      <1> 		cmp edi, commandbuf
  1328 000011CC 7231                <1> 		jb getcmdresetcommandbuf
  1329 000011CE 81EF[1F300000]      <1> 		sub edi, commandbuf
  1330 000011D4 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1331 000011DA 0F8413FEFFFF        <1> 		je near int305b
  1332 000011E0 81C7[1F300000]      <1> 		add edi, commandbuf
  1333 000011E6 3C00                <1> 		cmp al, 0
  1334 000011E8 75D9                <1> 		jne getccmdlp
  1335 000011EA FECC                <1> 		dec ah
  1336 000011EC 80FC00              <1> 		cmp ah, 0
  1337 000011EF 77D2                <1> 		ja getccmdlp
  1338 000011F1 47                  <1> 		inc edi
  1339 000011F2 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1340 000011F8 770D                <1> 		ja fixcmdbufb4moreint305
  1341 000011FA E915000000          <1> 		jmp moreint305up
  1342                              <1> 	getcmdresetcommandbuf:
  1343 000011FF BF[1F340000]        <1> 		mov edi, commandbufend
  1344 00001204 47                  <1> 		inc edi
  1345 00001205 EBBC                <1> 		jmp getccmdlp
  1346                              <1> 	fixcmdbufb4moreint305:
  1347 00001207 4F                  <1> 		dec edi
  1348 00001208 81EF[1F340000]      <1> 		sub edi, commandbufend
  1349 0000120E 81C7[1F300000]      <1> 		add edi, commandbuf
  1350                              <1> 	moreint305up:
  1351 00001214 8A07                <1> 		mov al, [edi]
  1352 00001216 47                  <1> 		inc edi
  1353 00001217 81EF[1F300000]      <1> 		sub edi, commandbuf
  1354 0000121D 3C00                <1> 		cmp al, 0
  1355 0000121F 0F84CEFDFFFF        <1> 		je near int305b
  1356 00001225 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1357 0000122B 0F83C2FDFFFF        <1> 		jae near int305b
  1358 00001231 81C7[1F300000]      <1> 		add edi, commandbuf
  1359 00001237 8806                <1> 		mov [esi], al
  1360 00001239 46                  <1> 		inc esi
  1361 0000123A 57                  <1> 		push edi
  1362 0000123B 8A1D[CE0F0000]      <1> 		mov bl, [modkey305]
  1363 00001241 E855FBFFFF          <1> 		call int301
  1364 00001246 5F                  <1> 		pop edi
  1365 00001247 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1366 0000124D 76C5                <1> 		jbe moreint305up
  1367 0000124F BF[1F300000]        <1> 		mov edi, commandbuf
  1368 00001254 EBBE                <1> 		jmp moreint305up
  1369                              <1> 	int305bscheck:
  1370 00001256 3B35[CF0F0000]      <1> 		cmp esi, [firstesi305]
  1371 0000125C 7705                <1> 		ja goodbscheck
  1372 0000125E E990FDFFFF          <1> 		jmp int305b
  1373                              <1> 	goodbscheck:
  1374 00001263 4E                  <1> 		dec esi
  1375 00001264 C60600              <1> 		mov byte [esi], 0
  1376 00001267 8A1D[CE0F0000]      <1> 		mov bl, [modkey305]
  1377 0000126D B008                <1> 		mov al, 8
  1378 0000126F E9BBFDFFFF          <1> 		jmp bscheckequal
  1379                              <1> 	
  1380                              <1> 		
  1381                              <1> 	clear:		
  1382                              <1> 	
  1383                              <1> 	int306:	;;clear screen
  1384 00001274 668B0D[970D0000]    <1> 		mov cx, [charxy]
  1385 0000127B BF[8F1C0000]        <1> 		mov edi, videobuf2
  1386 00001280 66B80000            <1> 		mov ax, 0
  1387 00001284 66A3[910D0000]      <1> 		mov [linebeginpos], ax
  1388 0000128A 66A3[930D0000]      <1> 		mov [videobufpos], ax
  1389 00001290 66BA0000            <1> 		mov dx, 0
  1390 00001294 66A3[950D0000]      <1> 		mov [charpos], ax
  1391                              <1> 	int306b:
  1392 0000129A 668907              <1> 		mov [edi], ax
  1393 0000129D 81C702000000        <1> 		add edi, 2
  1394 000012A3 80E902              <1> 		sub cl, 2
  1395 000012A6 80F900              <1> 		cmp cl, 0
  1396 000012A9 75EF                <1> 		jne int306b
  1397 000012AB 8A0D[970D0000]      <1> 		mov cl, [charxy]
  1398 000012B1 FECD                <1> 		dec ch
  1399 000012B3 80FD00              <1> 		cmp ch, 0
  1400 000012B6 75E2                <1> 		jne int306b
  1401 000012B8 E807000000          <1> 		call termcopy
  1402 000012BD C3                  <1> 		ret
  1403                              <1> 		
  1404 000012BE 00000000            <1> 	termcursorpos dd 0
  1405 000012C2 0000                <1> 	removedvideo dw 0
  1406                              <1> termcopy:	
  1407 000012C4 60                  <1> 	pusha
  1408 000012C5 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1409 000012CA BB00000000          <1> 	mov ebx, 0
  1410 000012CF 668B1D[930D0000]    <1> 	mov bx, [videobufpos]
  1411 000012D6 01DF                <1> 	add edi, ebx
  1412 000012D8 893D[BE120000]      <1> 	mov [termcursorpos], edi
  1413 000012DE E8C0000000          <1> 	call switchtermcursor
  1414 000012E3 C605[AA310000]00    <1> 	mov byte [mouseselecton], 0
  1415 000012EA C605[A70D0000]01    <1> 	mov byte [termcopyon], 1
  1416 000012F1 803D[AB310000]00    <1> 	cmp byte [guion], 0
  1417 000012F8 0F8412000000        <1> 	je near nowincopy
  1418 000012FE 803D[A60D0000]01    <1> 	cmp byte [termguion], 1
  1419 00001305 0F847F2A0000        <1> 	je near windowvideocopy
  1420 0000130B E98C000000          <1> 	jmp nocopytermatall
  1421                              <1> nowincopy:
  1422 00001310 BE00000A00          <1> 	mov esi, 0xA0000
  1423 00001315 A1[F0030000]        <1> 	mov eax, [basecache]
  1424 0000131A C1E004              <1> 	shl eax, 4
  1425 0000131D 29C6                <1> 	sub esi, eax
  1426 0000131F BF[8F1C0000]        <1> 	mov edi, videobuf2
  1427 00001324 B900000000          <1> 	mov ecx, 0
  1428 00001329 668B0D[970D0000]    <1> 	mov cx, [charxy]
  1429                              <1> nowincopy2:
  1430 00001330 BB[22540000]        <1> 	mov ebx, fonts
  1431 00001335 B800000000          <1> 	mov eax, 0
  1432 0000133A 8A07                <1> 	mov al, [edi]
  1433 0000133C C1E004              <1> 	shl eax, 4
  1434 0000133F 01C3                <1> 	add ebx, eax
  1435 00001341 47                  <1> 	inc edi
  1436 00001342 8A27                <1> 	mov ah, [edi]
  1437 00001344 BA00000000          <1> 	mov edx, 0
  1438 00001349 8A15[970D0000]      <1> 	mov dl, [charxy]
  1439 0000134F D1EA                <1> 	shr edx, 1
  1440 00001351 C1C110              <1> 	rol ecx, 16
  1441 00001354 B110                <1> 	mov cl, 16
  1442                              <1> nowinfont:
  1443 00001356 8A03                <1> 	mov al, [ebx]
  1444 00001358 D0C8                <1> 	ror al, 1
  1445 0000135A 80FC07              <1> 	cmp ah, 7
  1446 0000135D 7602                <1> 	jbe notnotfont
  1447 0000135F F6D0                <1> 	not al
  1448                              <1> notnotfont:
  1449 00001361 8806                <1> 	mov [esi], al
  1450 00001363 01D6                <1> 	add esi, edx
  1451 00001365 43                  <1> 	inc ebx
  1452 00001366 FEC9                <1> 	dec cl
  1453 00001368 80F900              <1> 	cmp cl, 0
  1454 0000136B 75E9                <1> 	jne nowinfont
  1455 0000136D C1E204              <1> 	shl edx, 4
  1456 00001370 29D6                <1> 	sub esi, edx
  1457 00001372 C1C110              <1> 	rol ecx, 16
  1458                              <1> nopresentwinfont:
  1459 00001375 47                  <1> 	inc edi
  1460 00001376 46                  <1> 	inc esi
  1461 00001377 80E902              <1> 	sub cl, 2
  1462 0000137A 80F900              <1> 	cmp cl, 0
  1463 0000137D 75B1                <1> 	jne nowincopy2
  1464 0000137F 8A0D[970D0000]      <1> 	mov cl, [charxy]
  1465 00001385 BA00000000          <1> 	mov edx, 0
  1466 0000138A 88CA                <1> 	mov dl, cl
  1467 0000138C D1EA                <1> 	shr edx, 1
  1468 0000138E 29D6                <1> 	sub esi, edx
  1469 00001390 C1E204              <1> 	shl edx, 4
  1470 00001393 01D6                <1> 	add esi, edx
  1471 00001395 FECD                <1> 	dec ch
  1472 00001397 80FD00              <1> 	cmp ch, 0
  1473 0000139A 7594                <1> 	jne nowincopy2
  1474                              <1> nocopytermatall:
  1475 0000139C E802000000          <1> 	call switchtermcursor
  1476 000013A1 61                  <1> 	popa
  1477 000013A2 C3                  <1> 	ret
  1478                              <1> 	
  1479                              <1> switchtermcursor:
  1480 000013A3 8B3D[BE120000]      <1> 	mov edi, [termcursorpos]
  1481 000013A9 8A4701              <1> 	mov al, [edi + 1]
  1482 000013AC 8A27                <1> 	mov ah, [edi]
  1483 000013AE 3C07                <1> 	cmp al, 7
  1484 000013B0 7607                <1> 	jbe movlargecursorterm
  1485 000013B2 B007                <1> 	mov al, 7
  1486 000013B4 E902000000          <1> 	jmp movedcursorterm
  1487                              <1> movlargecursorterm:
  1488 000013B9 B0F0                <1> 	mov al, 0xF0
  1489                              <1> movedcursorterm:
  1490 000013BB 884701              <1> 	mov [edi + 1], al
  1491 000013BE 80FC00              <1> 	cmp ah, 0
  1492 000013C1 7504                <1> 	jne fixednocursorterm
  1493 000013C3 B420                <1> 	mov ah, " "
  1494 000013C5 8827                <1> 	mov [edi], ah
  1495                              <1> fixednocursorterm:
  1496 000013C7 C3                  <1> 	ret
  1497                              <1> 	
  1498                                      %include 'source/solleros.asm'
  1499                              <1> 	;SOLLEROS.ASM
  1500                              <1> os:
  1501 000013C8 E8A7FEFFFF          <1> 	call clear
  1502 000013CD BE[DC530000]        <1> 	mov esi, userask
  1503 000013D2 E8ACFBFFFF          <1> 	call print
  1504                              <1> usercheck:
  1505 000013D7 BE[7A1B0000]        <1> 	mov esi, buftxt
  1506 000013DC B00D                <1> 	mov al, 13
  1507 000013DE B404                <1> 	mov ah, 4
  1508 000013E0 CD30                <1> 	int 30h
  1509 000013E2 56                  <1> 	push esi
  1510 000013E3 BE[FC530000]        <1> 	mov esi, line
  1511 000013E8 E896FBFFFF          <1> 	call print
  1512 000013ED BE[E6530000]        <1> 	mov esi, pwdask
  1513 000013F2 E88CFBFFFF          <1> 	call print
  1514 000013F7 5E                  <1> 	pop esi
  1515 000013F8 46                  <1> 	inc esi
  1516 000013F9 8935[AF140000]      <1> 	mov [esipass], esi
  1517                              <1> passcheck:
  1518 000013FF B000                <1> 	mov al, 0
  1519 00001401 B405                <1> 	mov ah, 5
  1520 00001403 CD30                <1> 	int 30h
  1521 00001405 3C0D                <1> 	cmp al, 13
  1522 00001407 0F8435000000        <1> 	je near gotpass
  1523 0000140D 3C08                <1> 	cmp al, 8
  1524 0000140F 0F840F000000        <1> 	je near backpass
  1525 00001415 8806                <1> 	mov [esi], al
  1526 00001417 46                  <1> 	inc esi
  1527 00001418 B02A                <1> 	mov al, '*'
  1528 0000141A B406                <1> 	mov ah, 6
  1529 0000141C CD30                <1> 	int 30h
  1530 0000141E EBDF                <1> 	jmp passcheck
  1531 00001420 08200800            <1> backcursor2 db 8," ",8,0
  1532                              <1> backpass:
  1533 00001424 3B35[AF140000]      <1> 	cmp esi, [esipass]
  1534 0000142A 0F84CFFFFFFF        <1> 	je near passcheck
  1535 00001430 4E                  <1> 	dec esi
  1536 00001431 C60600              <1> 	mov byte [esi], 0
  1537 00001434 56                  <1> 	push esi
  1538 00001435 BE[20140000]        <1> 	mov esi, backcursor2
  1539 0000143A E844FBFFFF          <1> 	call print
  1540 0000143F 5E                  <1> 	pop esi
  1541 00001440 EBBD                <1> 	jmp passcheck
  1542                              <1> gotpass:
  1543 00001442 B000                <1> 	mov al,0
  1544 00001444 8806                <1> 	mov [esi], al
  1545 00001446 BE[FC530000]        <1> 	mov esi, line
  1546 0000144B E833FBFFFF          <1> 	call print
  1547 00001450 BB[FF530000]        <1> 	mov ebx, userlst
  1548                              <1> userfind:
  1549 00001455 BE[7A1B0000]        <1> 	mov esi, buftxt
  1550 0000145A 8A06                <1> 	mov al, [esi]
  1551 0000145C 3C00                <1> 	cmp al, 0
  1552 0000145E 0F8464FFFFFF        <1> 	je near os
  1553 00001464 891D[B3140000]      <1> 	mov [usercache], ebx
  1554 0000146A E8AF010000          <1> 	call tester
  1555 0000146F 3C01                <1> 	cmp al, 1
  1556 00001471 7415                <1> 	je pwdtest
  1557                              <1> nxtuser:
  1558 00001473 43                  <1> 	inc ebx
  1559 00001474 8A03                <1> 	mov al, [ebx]
  1560 00001476 3C00                <1> 	cmp al, 0
  1561 00001478 74DB                <1> 	je userfind
  1562 0000147A 81FB[22540000]      <1> 	cmp ebx, userlstend
  1563 00001480 0F8342FFFFFF        <1> 	jae near os
  1564 00001486 EBCD                <1> 	jmp userfind
  1565                              <1> pwdtest:
  1566 00001488 46                  <1> 	inc esi
  1567 00001489 43                  <1> 	inc ebx
  1568 0000148A E88F010000          <1> 	call tester
  1569 0000148F 3C01                <1> 	cmp al, 1
  1570 00001491 7402                <1> 	je pwdrgt
  1571 00001493 EBDE                <1> 	jmp nxtuser
  1572 00001495 E8DAFDFFFF          <1> pwdrgt:	call clear
  1573 0000149A 66B90002            <1> 	mov cx, 200h
  1574 0000149E BE[7A1B0000]        <1> 	mov esi, buftxt
  1575 000014A3 B000                <1> 	mov al, 0
  1576 000014A5 8806                <1> bufclr:	mov [esi], al
  1577 000014A7 46                  <1> 	inc esi
  1578 000014A8 E2FB                <1> 	loop bufclr
  1579                              <1> ;;;;;;;;;;;;;;;;
  1580 000014AA E92B000000          <1> 	jmp nwcmd
  1581                              <1> 
  1582 000014AF 00000000            <1> esipass dd 0
  1583 000014B3 [FF530000]          <1> usercache dd userlst
  1584                              <1> 	
  1585                              <1> buftxtclear:
  1586 000014B7 B000                <1> 	mov al, 0
  1587 000014B9 BE[7A1B0000]        <1> 	mov esi, buftxt
  1588 000014BE 81FE[7A1C0000]      <1> clearbuftxt: cmp esi, buf2
  1589 000014C4 730E                <1> 	jae retbufclr
  1590 000014C6 8806                <1> 	mov [esi], al
  1591 000014C8 46                  <1> 	inc esi
  1592 000014C9 EBF3                <1> 	jmp clearbuftxt
  1593                              <1> 
  1594 000014CB 39DE                <1> clearitbuf: cmp esi, ebx
  1595 000014CD 7305                <1> 	jae retbufclr
  1596 000014CF 8806                <1> 	mov [esi], al
  1597 000014D1 46                  <1> 	inc esi
  1598 000014D2 EBF7                <1> 	jmp clearitbuf
  1599 000014D4 C3                  <1> retbufclr: ret
  1600                              <1> 
  1601 000014D5 E900000000          <1> full:	jmp nwcmd
  1602                              <1> 
  1603                              <1> 
  1604 000014DA B001                <1> nwcmd:	mov al, 1
  1605 000014DC 3805[69130000]      <1> 	cmp [BATCHISON], al
  1606 000014E2 0F839F000000        <1> 	jae near batchran
  1607 000014E8 B000                <1> cancel:	mov al, 0
  1608 000014EA A2[00130000]        <1> 	mov [IFON], al
  1609 000014EF A2[69130000]        <1> 	mov [BATCHISON], al
  1610 000014F4 B05B                <1> 	mov al, '['
  1611 000014F6 B406                <1> 	mov ah, 6
  1612 000014F8 66BB0700            <1> 	mov bx, 7
  1613 000014FC E8A7F8FFFF          <1> 	call int301prnt
  1614 00001501 8B35[B3140000]      <1> 	mov esi, [usercache]
  1615 00001507 E877FAFFFF          <1> 	call print
  1616 0000150C BE[F0530000]        <1> 	mov esi, location
  1617 00001511 E86DFAFFFF          <1> 	call print
  1618                              <1> 	;call time
  1619                              <1> 	;mov esi, timeshow
  1620                              <1> 	;call print
  1621                              <1> 	;mov esi, cmd
  1622                              <1> 	;call print
  1623 00001516 E89CFFFFFF          <1> 	call buftxtclear
  1624 0000151B BE[7A1B0000]        <1> 	mov esi, buftxt
  1625 00001520 C605[D30F0000]01    <1> 	mov byte [commandedit], 1
  1626 00001527 B00D                <1> 	mov al, 13
  1627 00001529 66BB0700            <1> 	mov bx, 7
  1628 0000152D E8AAFAFFFF          <1> 	call int305
  1629 00001532 C605[D30F0000]00    <1> 	mov byte [commandedit], 0
  1630 00001539 8B35[1B300000]      <1> gotcmd:	mov esi, [currentcommandpos]
  1631 0000153F 8935[17300000]      <1> 	mov [lastcommandpos], esi
  1632 00001545 BF[7A1B0000]        <1> 	mov edi, buftxt
  1633 0000154A 81C6[1F300000]      <1> 	add esi, commandbuf
  1634 00001550 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1635 00001556 7605                <1> 	jbe copycommand
  1636 00001558 BE[1F300000]        <1> 	mov esi, commandbuf
  1637                              <1> copycommand:
  1638 0000155D 8A07                <1> 	mov al, [edi]
  1639 0000155F 8806                <1> 	mov [esi], al
  1640 00001561 47                  <1> 	inc edi
  1641 00001562 46                  <1> 	inc esi
  1642 00001563 3C00                <1> 	cmp al, 0
  1643 00001565 740F                <1> 	je donecopy
  1644 00001567 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1645 0000156D 76EE                <1> 	jbe copycommand
  1646 0000156F BE[1F300000]        <1> 	mov esi, commandbuf
  1647 00001574 EBE7                <1> 	jmp copycommand
  1648                              <1> donecopy:
  1649 00001576 81EE[1F300000]      <1> 	sub esi, commandbuf
  1650 0000157C 8935[1B300000]      <1> 	mov [currentcommandpos], esi
  1651 00001582 E914000000          <1> 	jmp run
  1652                              <1> 	
  1653                              <1> batchran:
  1654 00001587 C3                  <1> 	ret
  1655                              <1> 
  1656 00001588 E82AFFFFFF          <1> input:	call buftxtclear
  1657 0000158D BE[7A1B0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1658 00001592 B00D                <1> stdin:	mov al, 13
  1659 00001594 B307                <1> 	mov bl, 7
  1660 00001596 B404                <1> 	mov ah, 4
  1661 00001598 CD30                <1> 	int 30h
  1662 0000159A C3                  <1> 	ret
  1663                              <1> 
  1664 0000159B BE[FC530000]        <1> run:	mov esi, line
  1665 000015A0 E8DEF9FFFF          <1> 	call print
  1666                              <1> progtest:
  1667 000015A5 BE[7A1B0000]        <1> 	mov esi, buftxt
  1668 000015AA BB[6F130000]        <1> 	mov ebx, fileindex
  1669 000015AF 668B03              <1> prgnxt:	mov ax, [ebx]
  1670 000015B2 B105                <1> 	mov cl, 5
  1671 000015B4 B504                <1> 	mov ch, 4
  1672 000015B6 6639C8              <1> 	cmp ax, cx
  1673 000015B9 740B                <1> 	je fndprg
  1674 000015BB 43                  <1> 	inc ebx
  1675 000015BC 81FB[6F150000]      <1> 	cmp ebx, fileindexend
  1676 000015C2 732E                <1> 	jae prgnf
  1677 000015C4 EBE9                <1> 	jmp prgnxt
  1678 000015C6 81C302000000        <1> fndprg: add ebx, 2
  1679 000015CC BE[7A1B0000]        <1> 	mov esi, buftxt
  1680 000015D1 66B90000            <1> 	mov cx, 0
  1681 000015D5 E87E000000          <1> 	call cndtest
  1682 000015DA 3C01                <1> 	cmp al, 1
  1683 000015DC 7302                <1> 	jae prggood
  1684 000015DE EBCF                <1> 	jmp prgnxt
  1685 000015E0 81FB[6F150000]      <1> prggood: cmp ebx, fileindexend
  1686 000015E6 7331                <1> 	jae prgdn
  1687 000015E8 81C303000000        <1> 	add ebx, 3
  1688 000015EE 8B3B                <1> 	mov edi, [ebx]
  1689 000015F0 FFE7                <1> 	jmp edi
  1690                              <1> prgnf:	
  1691 000015F2 A0[7A1B0000]        <1> 	mov al, [buftxt]
  1692 000015F7 3C00                <1> 	cmp al, 0
  1693 000015F9 741E                <1> 	je prgdn
  1694 000015FB BE[C3530000]        <1> 	mov esi, notfound1
  1695 00001600 E87EF9FFFF          <1> 	call print
  1696 00001605 BE[7A1B0000]        <1> 	mov esi, buftxt
  1697 0000160A E874F9FFFF          <1> 	call print
  1698 0000160F BE[CD530000]        <1> 	mov esi, notfound2
  1699 00001614 E86AF9FFFF          <1> 	call print
  1700 00001619 E9BCFEFFFF          <1> prgdn:	jmp nwcmd
  1701                              <1> 
  1702                              <1> 
  1703                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1704 0000161E B000                <1> 	mov al, 0
  1705 00001620 8A06                <1> retest:	mov al, [esi]
  1706 00001622 8A23                <1> 	mov ah, [ebx]
  1707 00001624 3C00                <1> 	cmp al, 0
  1708 00001626 7408                <1> 	je testtrue
  1709 00001628 38E0                <1> 	cmp al, ah
  1710 0000162A 750C                <1> 	jne testfalse
  1711 0000162C 43                  <1> 	inc ebx
  1712 0000162D 46                  <1> 	inc esi
  1713 0000162E EBF0                <1> 	jmp retest
  1714                              <1> testtrue:
  1715 00001630 80FC00              <1> 	cmp ah, 0
  1716 00001633 7503                <1> 	jne testfalse
  1717 00001635 B001                <1> 	mov al, 1
  1718 00001637 C3                  <1> 	ret
  1719                              <1> testfalse:
  1720 00001638 B000                <1> 	mov al, 0
  1721 0000163A C3                  <1> 	ret
  1722                              <1> 
  1723                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1724 0000163B B000                <1> 	mov al, 0
  1725                              <1> opretest:
  1726 0000163D 8A06                <1> 	mov al, [esi]
  1727 0000163F 8A23                <1> 	mov ah, [ebx]
  1728 00001641 38E0                <1> 	cmp al, ah
  1729 00001643 7510                <1> 	jne optestfalse
  1730 00001645 80FC00              <1> 	cmp ah, 0
  1731 00001648 7404                <1> 	je optesttrue
  1732 0000164A 43                  <1> 	inc ebx
  1733 0000164B 46                  <1> 	inc esi
  1734 0000164C EBEF                <1> 	jmp opretest
  1735                              <1> optesttrue:
  1736 0000164E 3C00                <1> 	cmp al, 0
  1737 00001650 7503                <1> 	jne optestfalse
  1738 00001652 B001                <1> 	mov al, 1
  1739 00001654 C3                  <1> 	ret
  1740                              <1> optestfalse:
  1741 00001655 B000                <1> 	mov al, 0
  1742 00001657 C3                  <1> 	ret
  1743                              <1> 
  1744                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1745 00001658 B000                <1> 	mov al, 0
  1746 0000165A 8A06                <1> cndretest:	mov al, [esi]
  1747 0000165C 8A23                <1> 	mov ah, [ebx]
  1748 0000165E 38CC                <1> 	cmp ah, cl
  1749 00001660 7408                <1> 	je cndtesttrue
  1750 00001662 38E0                <1> 	cmp al, ah
  1751 00001664 750B                <1> 	jne cndtestfalse
  1752 00001666 43                  <1> 	inc ebx
  1753 00001667 46                  <1> 	inc esi
  1754 00001668 EBF0                <1> 	jmp cndretest
  1755                              <1> cndtesttrue:
  1756 0000166A 38C8                <1> 	cmp al, cl
  1757 0000166C 7506                <1> 	jne cndtestalmost
  1758 0000166E B001                <1> 	mov al, 1
  1759 00001670 C3                  <1> 	ret
  1760                              <1> cndtestfalse:
  1761 00001671 B000                <1> 	mov al, 0
  1762 00001673 C3                  <1> 	ret
  1763                              <1> cndtestalmost:
  1764 00001674 B002                <1> 	mov al, 2
  1765 00001676 C3                  <1> 	ret
  1766 00001677 00                  <1> currentdir db 0
  1767 00001678 BE[6F130000]        <1> dir:	mov esi, fileindex
  1768 0000167D 8A06                <1> 	dirnxt:	mov al, [esi]
  1769 0000167F B400                <1> 		mov ah, 0
  1770 00001681 3C05                <1> 		cmp al, 5
  1771 00001683 744A                <1> 		je dirfnd
  1772 00001685 3C07                <1> 		cmp al, 7
  1773 00001687 743C                <1> 		je dirfnd3
  1774 00001689 3C06                <1> 		cmp al, 6
  1775 0000168B 7438                <1> 		je dirfnd3
  1776 0000168D 46                  <1> 		inc esi
  1777 0000168E 81FE[6F150000]      <1> 		cmp esi,  fileindexend
  1778 00001694 737B                <1> 		jae dirdn
  1779 00001696 EBE5                <1> 		jmp dirnxt
  1780 00001698 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1781 000016A1 070400646F63756D65- <1>
  1782 000016AA 6E74000A0400666F6C- <1>
  1783 000016B3 646572000504006578- <1>
  1784 000016BC 6563757461626C6500  <1>
  1785                              <1> 	dirfnd3:
  1786 000016C5 46                  <1> 		inc esi
  1787 000016C6 81FE[6F150000]      <1> 		cmp esi, fileindexend
  1788 000016CC 76AF                <1> 		jbe dirnxt
  1789 000016CE 4E                  <1> 		dec esi
  1790 000016CF 46                  <1> 	dirfnd:	inc esi
  1791 000016D0 8A06                <1> 		mov al, [esi]
  1792 000016D2 B400                <1> 		mov ah, 0
  1793 000016D4 3C04                <1> 		cmp al, 4
  1794 000016D6 740B                <1> 		je dirfnd2
  1795 000016D8 46                  <1> 		inc esi
  1796 000016D9 81FE[6F150000]      <1> 		cmp esi,  fileindexend
  1797 000016DF 7330                <1> 		jae dirdn
  1798 000016E1 EB9A                <1> 		jmp dirnxt
  1799 000016E3 81C601000000        <1> 	dirfnd2: add esi, 1
  1800 000016E9 E895F8FFFF          <1> 		call print
  1801 000016EE 8935[16170000]      <1> 		mov [esidir], esi
  1802 000016F4 BE[FC530000]        <1> 		mov esi, line
  1803 000016F9 E885F8FFFF          <1> 		call print
  1804 000016FE 8B35[16170000]      <1> 		mov esi, [esidir]
  1805 00001704 81FE[6F150000]      <1> 		cmp esi,  fileindexend
  1806 0000170A 7305                <1> 		jae dirdn
  1807 0000170C E96CFFFFFF          <1> 		jmp dirnxt
  1808 00001711 E9C4FDFFFF          <1> 	dirdn:	jmp nwcmd
  1809 00001716 00000000            <1> esidir dd 0
  1810                              <1> 
  1811                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1812                              <1> 		                ;ends if array seperator is found backwards after 0
  1813                              <1> 	arnxt:	      
  1814 0000171A 88E8                <1> 		mov al, ch
  1815 0000171C 88CC                <1> 		mov ah, cl        
  1816 0000171E 663906              <1> 		cmp [esi], ax
  1817 00001721 744D                <1> 		je ardn
  1818 00001723 66390E              <1> 		cmp [esi], cx
  1819 00001726 7407                <1> 		je arfnd
  1820 00001728 46                  <1> 		inc esi
  1821 00001729 39DE                <1> 		cmp esi, ebx
  1822 0000172B 7343                <1> 		jae ardn
  1823 0000172D EBEB                <1> 		jmp arnxt
  1824 0000172F 81C602000000        <1> 	arfnd: add esi, 2
  1825 00001735 891D[71170000]      <1> 		mov [arbx], ebx
  1826 0000173B 890D[75170000]      <1> 		mov [arcx], ecx
  1827 00001741 E83DF8FFFF          <1> 		call print
  1828 00001746 8935[77170000]      <1> 		mov [arsi], esi
  1829 0000174C BE[FC530000]        <1> 		mov esi, line
  1830 00001751 E82DF8FFFF          <1> 		call print
  1831 00001756 8B1D[71170000]      <1> 		mov ebx, [arbx]
  1832 0000175C 668B0D[75170000]    <1> 		mov cx, [arcx]
  1833 00001763 8B35[77170000]      <1> 		mov esi, [arsi]
  1834 00001769 46                  <1> 		inc esi
  1835 0000176A 39DE                <1> 		cmp esi, ebx
  1836 0000176C 7302                <1> 		jae ardn
  1837 0000176E EBAA                <1> 		jmp arnxt
  1838 00001770 C3                  <1> 	ardn:	ret
  1839 00001771 00000000            <1> arbx:	dw 0,0
  1840 00001775 0000                <1> arcx:	db 0,0
  1841 00001777 00000000            <1> arsi:	dw 0,0
  1842                              <1> 
  1843                              <1> clearbuffer:
  1844 0000177B BE[7A1C0000]        <1> 	mov esi, buf2
  1845 00001780 B030                <1> 	mov al, '0'
  1846 00001782 81FE[8E1C0000]      <1> clearbuf: cmp esi, numbuf
  1847 00001788 7305                <1> 	jae doneclearbuff
  1848 0000178A 8806                <1> 	mov [esi], al
  1849 0000178C 46                  <1> 	inc esi
  1850 0000178D EBF3                <1> 	jmp clearbuf
  1851                              <1> doneclearbuff: 
  1852 0000178F C3                  <1> 		ret
  1853                              <1> 
  1854                              <1> convert:
  1855 00001790 4E                  <1> 	dec esi
  1856 00001791 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  1857                              <1> cnvrt:
  1858 00001793 89DE                <1> 	mov esi, ebx
  1859 00001795 81EE09000000        <1> 	sub esi, 9
  1860 0000179B 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  1861 000017A1 720A                <1> 	jb ten8
  1862 000017A3 81E900CA9A3B        <1> 	sub ecx, 1000000000
  1863 000017A9 FE06                <1> 	inc byte [esi]
  1864 000017AB EBE6                <1> 	jmp cnvrt
  1865 000017AD 46                  <1> ten8:	inc esi
  1866 000017AE 81F900E1F505        <1> 	cmp ecx, 100000000
  1867 000017B4 720A                <1> 	jb ten7
  1868 000017B6 81E900E1F505        <1> 	sub ecx, 100000000
  1869 000017BC FE06                <1> 	inc byte [esi]
  1870 000017BE EBD3                <1> 	jmp cnvrt
  1871 000017C0 46                  <1> ten7:	inc esi
  1872 000017C1 81F980969800        <1> 	cmp ecx, 10000000
  1873 000017C7 720A                <1> 	jb ten6
  1874 000017C9 81E980969800        <1> 	sub ecx, 10000000
  1875 000017CF FE06                <1> 	inc byte [esi]
  1876 000017D1 EBC0                <1> 	jmp cnvrt
  1877 000017D3 46                  <1> ten6:	inc esi
  1878 000017D4 81F940420F00        <1> 	cmp ecx, 1000000
  1879 000017DA 720A                <1> 	jb ten5
  1880 000017DC 81E940420F00        <1> 	sub ecx, 1000000
  1881 000017E2 FE06                <1> 	inc byte [esi]
  1882 000017E4 EBAD                <1> 	jmp cnvrt
  1883 000017E6 46                  <1> ten5:	inc esi
  1884 000017E7 81F9A0860100        <1> 	cmp ecx, 100000
  1885 000017ED 720A                <1> 	jb ten4
  1886 000017EF 81E9A0860100        <1> 	sub ecx, 100000
  1887 000017F5 FE06                <1> 	inc byte [esi]
  1888 000017F7 EB9A                <1> 	jmp cnvrt
  1889 000017F9 46                  <1> ten4:	inc esi
  1890 000017FA 81F910270000        <1> 	cmp ecx, 10000
  1891 00001800 720A                <1> 	jb ten3
  1892 00001802 81E910270000        <1> 	sub ecx, 10000
  1893 00001808 FE06                <1> 	inc byte [esi]
  1894 0000180A EB87                <1> 	jmp cnvrt
  1895 0000180C 46                  <1> ten3:	inc esi
  1896 0000180D 81F9E8030000        <1> 	cmp ecx, 1000
  1897 00001813 720D                <1> 	jb ten2
  1898 00001815 81E9E8030000        <1> 	sub ecx, 1000
  1899 0000181B FE06                <1> 	inc byte [esi]
  1900 0000181D E971FFFFFF          <1> 	jmp cnvrt
  1901 00001822 46                  <1> ten2:	inc esi
  1902 00001823 81F964000000        <1> 	cmp ecx, 100
  1903 00001829 720D                <1> 	jb ten1
  1904 0000182B 81E964000000        <1> 	sub ecx, 100
  1905 00001831 FE06                <1> 	inc byte [esi]
  1906 00001833 E95BFFFFFF          <1> 	jmp cnvrt
  1907 00001838 46                  <1> ten1:	inc esi
  1908 00001839 81F90A000000        <1> 	cmp ecx, 10
  1909 0000183F 720D                <1> 	jb ten0
  1910 00001841 81E90A000000        <1> 	sub ecx, 10
  1911 00001847 FE06                <1> 	inc byte [esi]
  1912 00001849 E945FFFFFF          <1> 	jmp cnvrt
  1913 0000184E 46                  <1> ten0:	inc esi
  1914 0000184F 81F901000000        <1> 	cmp ecx, 1
  1915 00001855 720D                <1> 	jb tendn
  1916 00001857 81E901000000        <1> 	sub ecx, 1
  1917 0000185D FE06                <1> 	inc byte [esi]
  1918 0000185F E92FFFFFFF          <1> 	jmp cnvrt
  1919                              <1> tendn:
  1920 00001864 C3                  <1> 	ret
  1921                              <1> 
  1922                              <1> 	
  1923                              <1> 
  1924 00001865 00<rept>            <1> hexnumber times 8 db 0
  1925 0000186D 202000              <1> hexnumberend db "  ",0
  1926                              <1> 
  1927                              <1> 
  1928 00001870 00000000            <1> sibuf dw 0,0
  1929 00001874 00000000            <1> dibuf dw 0,0
  1930                              <1> 
  1931                              <1> converthex:
  1932                              <1> clearbufferhex:
  1933 00001878 B030                <1> 	mov al, '0'
  1934 0000187A 8935[70180000]      <1> 	mov [sibuf], esi
  1935 00001880 893D[74180000]      <1> 	mov [dibuf], edi
  1936 00001886 39FE                <1> clearbufhex: cmp esi, edi
  1937 00001888 7305                <1> 	jae doneclearbuffhex
  1938 0000188A 8806                <1> 	mov [esi], al
  1939 0000188C 46                  <1> 	inc esi
  1940 0000188D EBF7                <1> 	jmp clearbufhex
  1941                              <1> doneclearbuffhex:
  1942 0000188F 8B35[74180000]      <1> 	mov esi, [dibuf]
  1943 00001895 89CA                <1> 	mov edx, ecx
  1944 00001897 81FA00000000        <1> 	cmp edx, 0
  1945 0000189D 741F                <1> 	je donenxtephx
  1946                              <1> nxtexphx:	;0x10^x
  1947 0000189F 4E                  <1> 	dec esi
  1948 000018A0 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  1949 000018A2 89D1                <1> 	mov ecx, edx
  1950 000018A4 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  1951 000018AA E81C000000          <1> 	call cnvrtexphx		;;get this digit
  1952 000018AF 89FE                <1> 	mov esi, edi
  1953 000018B1 C1EA04              <1> 	shr edx, 4		;;next digit
  1954 000018B4 81FA00000000        <1> 	cmp edx, 0
  1955 000018BA 7402                <1> 	je donenxtephx
  1956 000018BC EBE1                <1> 	jmp nxtexphx
  1957                              <1> donenxtephx:
  1958 000018BE 8B35[70180000]      <1> 	mov esi, [sibuf]
  1959 000018C4 8B3D[74180000]      <1> 	mov edi, [dibuf]
  1960 000018CA C3                  <1> 	ret
  1961                              <1> cnvrtexphx:			;;convert this number
  1962 000018CB 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  1963 000018CD 81F900000000        <1> 	cmp ecx, 0
  1964 000018D3 7429                <1> 	je zerohx
  1965 000018D5 8A06                <1> cnvrthx:  mov al, [esi]
  1966 000018D7 3C39                <1> 	cmp al, '9'
  1967 000018D9 741B                <1> 	je lettershx
  1968 000018DB 3C46                <1> lttrhxdn: cmp al, 'F'
  1969 000018DD 741F                <1> 	je zerohx
  1970 000018DF 8A06                <1> 	mov al, [esi]
  1971 000018E1 FEC0                <1> 	inc al
  1972 000018E3 8806                <1> 	mov [esi], al
  1973 000018E5 89DE                <1> 	mov esi, ebx
  1974 000018E7 81E901000000        <1> cnvrtlphx: sub ecx, 1
  1975 000018ED 81F900000000        <1> 	cmp ecx, 0
  1976 000018F3 75E0                <1> 	jne cnvrthx
  1977 000018F5 C3                  <1> 	ret
  1978                              <1> lettershx:
  1979 000018F6 B041                <1> 	mov al, 'A'
  1980 000018F8 2C01                <1> 	sub al, 1
  1981 000018FA 8806                <1> 	mov [esi], al
  1982 000018FC EBDD                <1> 	jmp lttrhxdn
  1983 000018FE B030                <1> zerohx:	mov al, '0'
  1984 00001900 8806                <1> 	mov [esi], al
  1985 00001902 4E                  <1> 	dec esi
  1986 00001903 8A06                <1> 	mov al, [esi]
  1987 00001905 3C46                <1> 	cmp al, 'F'
  1988 00001907 74F5                <1> 	je zerohx
  1989 00001909 41                  <1> 	inc ecx
  1990 0000190A EBDB                <1> 	jmp cnvrtlphx
  1991 0000190C 00                  <1> smallhex db 0
  1992 0000190D 01                  <1> firsthexshown db 1
  1993                              <1> showhexsmall:
  1994 0000190E C605[0C190000]01    <1> 	mov byte [smallhex], 1
  1995 00001915 E808000000          <1> 	call showhex
  1996 0000191A C605[0C190000]00    <1> 	mov byte [smallhex], 0
  1997 00001921 C3                  <1> 	ret
  1998                              <1> showhex:
  1999 00001922 60                  <1> 	pusha
  2000 00001923 BE[65180000]        <1> 	mov esi, hexnumber
  2001 00001928 BF[6D180000]        <1> 	mov edi, hexnumberend
  2002 0000192D E846FFFFFF          <1> 	call converthex
  2003 00001932 803D[0D190000]01    <1> 	cmp byte [firsthexshown], 1
  2004 00001939 7504                <1> 	jne showthathex
  2005 0000193B 66BA0000            <1> 	mov dx, 0
  2006                              <1> showthathex:
  2007 0000193F 803D[0D190000]03    <1> 	cmp byte [firsthexshown], 3
  2008 00001946 750A                <1> 	jne nonewhexline
  2009 00001948 BE[FC530000]        <1> 	mov esi, line
  2010 0000194D E831F6FFFF          <1> 	call print
  2011                              <1> nonewhexline:
  2012 00001952 803D[0D190000]04    <1> 	cmp byte [firsthexshown], 4
  2013 00001959 7527                <1> 	jne notabfixhex
  2014 0000195B B1A0                <1> 	mov cl, 160
  2015 0000195D 28D1                <1> 	sub cl, dl
  2016 0000195F C0E905              <1> 	shr cl, 5
  2017 00001962 C0E105              <1> 	shl cl, 5
  2018 00001965 80F900              <1> 	cmp cl, 0
  2019 00001968 750F                <1> 	jne nonewlinetabfixhex
  2020 0000196A BE[FC530000]        <1> 	mov esi, line
  2021 0000196F E80FF6FFFF          <1> 	call print
  2022 00001974 E909000000          <1> 	jmp notabfixhex
  2023                              <1> nonewlinetabfixhex:
  2024 00001979 80C20F              <1> 	add dl, 15
  2025 0000197C C0EA04              <1> 	shr dl, 4
  2026 0000197F C0E204              <1> 	shl dl, 4
  2027                              <1> notabfixhex:
  2028 00001982 BE[65180000]        <1> 	mov esi, hexnumber
  2029 00001987 803D[0C190000]01    <1> 	cmp byte [smallhex],1
  2030 0000198E 7506                <1> 	jne printnosmallhex
  2031 00001990 81C606000000        <1> 	add esi, 6
  2032                              <1> printnosmallhex:
  2033 00001996 E8E8F5FFFF          <1> 	call print
  2034 0000199B 803D[0D190000]02    <1> 	cmp byte [firsthexshown], 2
  2035 000019A2 750A                <1> 	jne hexshown
  2036 000019A4 BE[FC530000]        <1> 	mov esi, line
  2037 000019A9 E8D5F5FFFF          <1> 	call print
  2038                              <1> hexshown:
  2039 000019AE C605[0D190000]00    <1> 	mov byte [firsthexshown], 0
  2040 000019B5 61                  <1> 	popa
  2041 000019B6 C3                  <1> 	ret
  2042                              <1> 
  2043                              <1> 
  2044 000019B7 303030303030303030- <1> decnumber db "00000000000000"
  2045 000019C0 3030303030          <1>
  2046 000019C5 2000                <1> decnumberend: db " ",0
  2047                              <1> 
  2048                              <1> showdec: ;;same as showhex, just uses decimal conversion
  2049 000019C7 60                  <1> 	pusha
  2050 000019C8 BF[B7190000]        <1> 	mov edi, decnumber
  2051 000019CD BE[C5190000]        <1> 	mov esi, decnumberend
  2052                              <1> cleardecbuf:
  2053 000019D2 C60730              <1> 	mov byte [edi], '0'
  2054 000019D5 47                  <1> 	inc edi
  2055 000019D6 39F7                <1> 	cmp edi, esi
  2056 000019D8 72F8                <1> 	jb cleardecbuf
  2057 000019DA BF[B7190000]        <1> 	mov edi, decnumber
  2058 000019DF E8ACFDFFFF          <1> 	call convert
  2059 000019E4 803D[0D190000]01    <1> 	cmp byte [firsthexshown], 1
  2060 000019EB 7504                <1> 	jne showthatdec
  2061 000019ED 66BA0000            <1> 	mov dx, 0
  2062                              <1> showthatdec:
  2063 000019F1 803D[0D190000]03    <1> 	cmp byte [firsthexshown], 3
  2064 000019F8 750A                <1> 	jne nonewdecline
  2065 000019FA BE[FC530000]        <1> 	mov esi, line
  2066 000019FF E87FF5FFFF          <1> 	call print
  2067                              <1> nonewdecline:
  2068 00001A04 803D[0D190000]04    <1> 	cmp byte [firsthexshown], 4
  2069 00001A0B 7527                <1> 	jne notabfixdec
  2070 00001A0D B1A0                <1> 	mov cl, 160
  2071 00001A0F 28D1                <1> 	sub cl, dl
  2072 00001A11 C0E905              <1> 	shr cl, 5
  2073 00001A14 C0E105              <1> 	shl cl, 5
  2074 00001A17 80F900              <1> 	cmp cl, 0
  2075 00001A1A 750F                <1> 	jne nonewlinetabfixdec
  2076 00001A1C BE[FC530000]        <1> 	mov esi, line
  2077 00001A21 E85DF5FFFF          <1> 	call print
  2078 00001A26 E909000000          <1> 	jmp notabfixdec
  2079                              <1> nonewlinetabfixdec:
  2080 00001A2B 80C20F              <1> 	add dl, 15
  2081 00001A2E C0EA04              <1> 	shr dl, 4
  2082 00001A31 C0E204              <1> 	shl dl, 4
  2083                              <1> notabfixdec:
  2084 00001A34 BE[B7190000]        <1> 	mov esi, decnumber
  2085 00001A39 4E                  <1> 	dec esi
  2086                              <1> sifind:
  2087 00001A3A 46                  <1> 	inc esi
  2088 00001A3B 803E30              <1> 	cmp byte [esi], '0'
  2089 00001A3E 74FA                <1> 	je sifind
  2090 00001A40 E83EF5FFFF          <1> 	call print
  2091 00001A45 803D[0D190000]02    <1> 	cmp byte [firsthexshown], 2
  2092 00001A4C 750A                <1> 	jne decshown
  2093 00001A4E BE[FC530000]        <1> 	mov esi, line
  2094 00001A53 E82BF5FFFF          <1> 	call print
  2095                              <1> decshown:
  2096 00001A58 C605[0D190000]00    <1> 	mov byte [firsthexshown], 0
  2097 00001A5F 61                  <1> 	popa
  2098 00001A60 C3                  <1> 	ret
  2099                              <1> 	
  2100                              <1> cnvrttxt: 
  2101 00001A61 B900000000          <1> 	mov ecx, 0
  2102 00001A66 B800000000          <1> 	mov eax, 0
  2103 00001A6B BA00000000          <1> 	mov edx, 0
  2104 00001A70 BB00000000          <1> 	mov ebx, 0
  2105 00001A75 4E                  <1> 	dec esi
  2106                              <1> cnvrtlptxt:
  2107 00001A76 46                  <1> 	inc esi
  2108 00001A77 8A06                <1> 	mov al, [esi]
  2109 00001A79 3C00                <1> 	cmp al, 0
  2110 00001A7B 75F9                <1> 	jne cnvrtlptxt
  2111 00001A7D 4E                  <1> 	dec esi
  2112 00001A7E 8A06                <1> 	mov al, [esi]
  2113 00001A80 3C30                <1> 	cmp al, '0'
  2114 00001A82 7504                <1> 	jne txtlp
  2115 00001A84 39FE                <1> zerotest: cmp esi, edi
  2116 00001A86 745B                <1> 	je donecnvrt
  2117                              <1> txtlp:	
  2118 00001A88 B800000000          <1> 	mov eax, 0
  2119 00001A8D 8A06                <1> 	mov al, [esi]
  2120 00001A8F 3C3D                <1> 	cmp al, '='
  2121 00001A91 7450                <1> 	je donecnvrt
  2122 00001A93 3C30                <1> 	cmp al, 48
  2123 00001A95 724C                <1> 	jb donecnvrt
  2124 00001A97 3C23                <1> 	cmp al, '#'
  2125 00001A99 7448                <1> 	je donecnvrt
  2126 00001A9B 39FE                <1> 	cmp esi, edi
  2127 00001A9D 7244                <1> 	jb donecnvrt
  2128 00001A9F 81F900000000        <1> 	cmp ecx, 0
  2129 00001AA5 7708                <1> 	ja exp
  2130 00001AA7 2C30                <1> noexp:	sub al, 48
  2131 00001AA9 01C2                <1> 	add edx, eax
  2132 00001AAB 4E                  <1> 	dec esi
  2133 00001AAC 41                  <1> 	inc ecx
  2134 00001AAD EBD9                <1> 	jmp txtlp
  2135 00001AAF 81F900000000        <1> exp:	cmp ecx, 0
  2136 00001AB5 74F0                <1> 	je noexp
  2137 00001AB7 2C30                <1> 	sub al, 48
  2138 00001AB9 51                  <1> 	push ecx
  2139 00001ABA 89C3                <1> expmul:	mov ebx, eax
  2140 00001ABC 01D8                <1> 	add eax, ebx
  2141 00001ABE 01D8                <1> 	add eax, ebx
  2142 00001AC0 01D8                <1> 	add eax, ebx
  2143 00001AC2 01D8                <1> 	add eax, ebx
  2144 00001AC4 01D8                <1> 	add eax, ebx
  2145 00001AC6 01D8                <1> 	add eax, ebx
  2146 00001AC8 01D8                <1> 	add eax, ebx
  2147 00001ACA 01D8                <1> 	add eax, ebx
  2148 00001ACC 01D8                <1> 	add eax, ebx
  2149 00001ACE 81E901000000        <1> 	sub ecx, 1
  2150 00001AD4 81F900000000        <1> 	cmp ecx, 0
  2151 00001ADA 77DE                <1> 	ja expmul
  2152 00001ADC 01C2                <1> 	add edx, eax
  2153 00001ADE 59                  <1> 	pop ecx
  2154 00001ADF 4E                  <1> 	dec esi
  2155 00001AE0 41                  <1> 	inc ecx
  2156 00001AE1 EBA5                <1> 	jmp txtlp
  2157 00001AE3 89D1                <1> donecnvrt: mov ecx, edx
  2158 00001AE5 C3                  <1> 	ret
  2159                                      %include 'source/builtinprogs.asm'
  2160 00001AE6 050406040704        <1> filetypes db 5,4,6,4,7,4
  2161                              <1> progstart:		;programs start here
  2162                              <1> ;db 5,4,"index",0
  2163                              <1> ;	call indexfiles
  2164                              <1> ;	jmp nwcmd
  2165                              <1> indexfiles:
  2166 00001AEC BE[EC1A0000]        <1> 	mov esi, progstart
  2167 00001AF1 BB[6F130000]        <1> 	mov ebx, fileindex
  2168 00001AF6 BF[EC1A0000]        <1> 	mov edi, progstart
  2169 00001AFB 81EF02000000        <1> 	sub edi, 2
  2170                              <1> indexloop:
  2171 00001B01 668B0E              <1> 	mov cx, [esi]
  2172                              <1> 	indexloop2:
  2173 00001B04 663B0F              <1> 		cmp cx, [edi]
  2174 00001B07 7424                <1> 		je indexloop2done
  2175 00001B09 81EF02000000        <1> 		sub edi, 2
  2176 00001B0F 81FF[E61A0000]      <1> 		cmp edi, filetypes
  2177 00001B15 73ED                <1> 		jae indexloop2
  2178 00001B17 BF[EC1A0000]        <1> 	mov edi, progstart
  2179 00001B1C 81EF02000000        <1> 	sub edi, 2
  2180 00001B22 46                  <1> 	inc esi
  2181 00001B23 81FE[482B0000]      <1> 	cmp esi, batchprogend
  2182 00001B29 734E                <1> 	jae indexloopdone
  2183 00001B2B EBD4                <1> 	jmp indexloop
  2184                              <1> indexloop2done:
  2185 00001B2D 66890B              <1> 	mov [ebx], cx
  2186 00001B30 81C302000000        <1> 	add ebx, 2
  2187 00001B36 81C602000000        <1> 	add esi, 2
  2188                              <1> 	nameindex:
  2189 00001B3C 8A0E                <1> 		mov cl, [esi]
  2190 00001B3E 80F900              <1> 		cmp cl, 0
  2191 00001B41 7406                <1> 		je nameindexdone
  2192 00001B43 880B                <1> 		mov [ebx], cl
  2193 00001B45 46                  <1> 		inc esi
  2194 00001B46 43                  <1> 		inc ebx
  2195 00001B47 EBF3                <1> 		jmp nameindex
  2196                              <1> 	nameindexdone:
  2197 00001B49 43                  <1> 		inc ebx
  2198 00001B4A 66C7030000          <1> 		mov word [ebx], 0
  2199 00001B4F 81C302000000        <1> 		add ebx, 2
  2200 00001B55 46                  <1> 		inc esi
  2201 00001B56 8933                <1> 		mov [ebx], esi
  2202 00001B58 81C304000000        <1> 		add ebx, 4
  2203 00001B5E 66C7030000          <1> 		mov word [ebx], 0
  2204 00001B63 81C302000000        <1> 		add ebx, 2
  2205 00001B69 81FB[6F150000]      <1> 		cmp ebx, fileindexend
  2206 00001B6F 7308                <1> 		jae indexloopdone
  2207 00001B71 81C601000000        <1> 		add esi, 1
  2208 00001B77 EB88                <1> 		jmp indexloop
  2209 00001B79 C3                  <1> indexloopdone: 	ret
  2210                              <1> 
  2211                              <1> 
  2212                              <1> ;db 5,4,"showindex",0
  2213                              <1> ;	mov esi, fileindex
  2214                              <1> ;	mov ebx, fileindexend
  2215                              <1> ;	mov cl, 5
  2216                              <1> ;	mov ch, 4
  2217                              <1> ;	call array
  2218                              <1> ;	mov esi, fileindex
  2219                              <1> ;	mov ebx, fileindexend
  2220                              <1> ;	mov cl, 6
  2221                              <1> ;	mov ch, 4
  2222                              <1> ;	call array
  2223                              <1> ;	mov esi, fileindex
  2224                              <1> ;	mov ebx, fileindexend
  2225                              <1> ;	mov cl, 7
  2226                              <1> ;	mov ch, 4
  2227                              <1> ;	call array
  2228                              <1> ;	jmp nwcmd
  2229                              <1> 
  2230 00001B7A 05046C7300          <1> db 5,4,"ls",0
  2231 00001B7F BE[EC1A0000]        <1> 	lscmd:	mov esi, progstart
  2232 00001B84 BB[482B0000]        <1> 		mov ebx, progend
  2233 00001B89 E9EAFAFFFF          <1> 		jmp dir
  2234                              <1> 		
  2235 00001B8E 05046469736B00      <1> db 5,4,"disk",0
  2236 00001B95 B900000000          <1> 		mov ecx, 0
  2237 00001B9A 8A0D[82010000]      <1> 		mov cl, [DriveNumber]
  2238 00001BA0 C605[0D190000]00    <1> 		mov byte [firsthexshown], 0
  2239 00001BA7 E876FDFFFF          <1> 		call showhex
  2240 00001BAC BE[FC530000]        <1> 		mov esi, line
  2241 00001BB1 E8CDF3FFFF          <1> 		call print
  2242 00001BB6 BE[4C530000]        <1> 		mov esi, diskfileindex
  2243                              <1> 	diskindexdir:
  2244 00001BBB E8C3F3FFFF          <1> 		call print
  2245 00001BC0 8B4E05              <1> 		mov ecx, [esi + 5]
  2246 00001BC3 C605[0D190000]03    <1> 		mov byte [firsthexshown], 3
  2247 00001BCA E8F8FDFFFF          <1> 		call showdec
  2248 00001BCF 56                  <1> 		push esi
  2249 00001BD0 BE[FC530000]        <1> 		mov esi, line
  2250 00001BD5 E8A9F3FFFF          <1> 		call print
  2251 00001BDA 5E                  <1> 		pop esi
  2252 00001BDB 81C609000000        <1> 		add esi, 9
  2253 00001BE1 81FE[BE530000]      <1> 		cmp esi, enddiskfileindex
  2254 00001BE7 72D2                <1> 		jb diskindexdir
  2255 00001BE9 E9ECF8FFFF          <1> 		jmp nwcmd
  2256                              <1> 
  2257 00001BEE 0504636C65617200    <1> db 5,4,"clear",0
  2258 00001BF6 E879F6FFFF          <1> 	cls:	call clear
  2259 00001BFB E9DAF8FFFF          <1> 		jmp nwcmd
  2260                              <1> 		
  2261 00001C00 05047761697400      <1> db 5,4,"wait",0
  2262 00001C07 B000                <1> 		mov al, 0
  2263 00001C09 E834F3FFFF          <1> 		call int302
  2264 00001C0E E9C7F8FFFF          <1> 		jmp nwcmd
  2265                              <1> 
  2266 00001C13 05046563686F00      <1> db 5,4,"echo",0
  2267 00001C1A BE[7A1B0000]        <1> 	echo:	mov esi, buftxt
  2268 00001C1F 81C605000000        <1> 		add esi, 5
  2269 00001C25 8A06                <1> 		mov al, [esi]
  2270 00001C27 3C24                <1> 		cmp al, '$'
  2271 00001C29 7414                <1> 		je echovr
  2272 00001C2B E853F3FFFF          <1> 		call print
  2273 00001C30 BE[FC530000]        <1> 		mov esi, line
  2274 00001C35 E849F3FFFF          <1> 		call print
  2275 00001C3A E99BF8FFFF          <1> 		jmp nwcmd
  2276 00001C3F BB[6F150000]        <1> 	echovr:	mov ebx, variables
  2277 00001C44 BF06000000          <1> 		mov edi, 6
  2278 00001C49 E83A000000          <1> 		call nxtvrech
  2279 00001C4E E957000000          <1> 		jmp prntvr2
  2280 00001C53 B13D                <1> 	echvar:	mov cl, '='
  2281 00001C55 43                  <1> 		inc ebx
  2282 00001C56 8A03                <1> 		mov al, [ebx]
  2283 00001C58 3C00                <1> 		cmp al, 0
  2284 00001C5A 742C                <1> 		je nxtvrech
  2285 00001C5C 3C3D                <1> 		cmp al, '='
  2286 00001C5E 7420                <1> 		je nxtvrechb1
  2287 00001C60 BE[7A1B0000]        <1> 		mov esi, buftxt
  2288 00001C65 01FE                <1> 		add esi, edi
  2289 00001C67 E8ECF9FFFF          <1> 		call cndtest
  2290 00001C6C 3C02                <1> 		cmp al, 2
  2291 00001C6E 7436                <1> 		je prntvr
  2292 00001C70 3C01                <1> 		cmp al, 1
  2293 00001C72 7432                <1> 		je prntvr
  2294 00001C74 BE[7A1B0000]        <1> 		mov esi, buftxt
  2295 00001C79 01FE                <1> 		add esi, edi
  2296 00001C7B E908000000          <1> 		jmp nxtvrech
  2297                              <1> 	nxtvrechb1:
  2298 00001C80 81EB02000000        <1> 		sub ebx, 2
  2299 00001C86 EBCB                <1> 		jmp echvar
  2300 00001C88 8A03                <1> 	nxtvrech: mov al, [ebx]
  2301 00001C8A 3C05                <1> 		cmp al, 5
  2302 00001C8C 740F                <1> 		je nxtvrec2
  2303 00001C8E 43                  <1> 		inc ebx
  2304 00001C8F 81FB[6F1A0000]      <1> 		cmp ebx, varend
  2305 00001C95 0F833FF8FFFF        <1> 		jae nwcmd
  2306 00001C9B EBEB                <1> 		jmp nxtvrech
  2307 00001C9D 43                  <1> 	nxtvrec2: inc ebx
  2308 00001C9E 8A03                <1> 		mov al, [ebx]
  2309 00001CA0 3C04                <1> 		cmp al, 4
  2310 00001CA2 74AF                <1> 		je echvar
  2311 00001CA4 EBE2                <1> 		jmp nxtvrech
  2312 00001CA6 43                  <1> 	prntvr: inc ebx
  2313 00001CA7 89DE                <1> 		mov esi, ebx
  2314 00001CA9 C3                  <1> 		ret
  2315 00001CAA E8D4F2FFFF          <1> 	prntvr2: call print
  2316 00001CAF BE[FC530000]        <1> 		mov esi, line
  2317 00001CB4 E8CAF2FFFF          <1> 		call print
  2318 00001CB9 E91CF8FFFF          <1> 		jmp nwcmd
  2319                              <1> 		
  2320                              <1> 
  2321 00001CBE 05042300            <1> db 5,4,"#",0
  2322                              <1> 	num:	
  2323 00001CC2 E8B4FAFFFF          <1> 		call clearbuffer
  2324 00001CC7 C605[7E1F0000]00    <1> 		mov byte [decimal], 0
  2325 00001CCE C605[7F1F0000]00    <1> 		mov byte [decimal2], 0
  2326 00001CD5 BE[7A1B0000]        <1> 		mov esi, buftxt
  2327 00001CDA B800000000          <1> 		mov eax, 0
  2328 00001CDF B900000000          <1> 		mov ecx, 0
  2329 00001CE4 BB00000000          <1> 		mov ebx, 0
  2330 00001CE9 8A06                <1> 	num2:	mov al, [esi]
  2331 00001CEB 3C2B                <1> 		cmp al, '+'
  2332 00001CED 741B                <1> 		je operatorfound
  2333 00001CEF 3C2D                <1> 		cmp al, '-'
  2334 00001CF1 7417                <1> 		je operatorfound
  2335 00001CF3 3C2A                <1> 		cmp al, '*'
  2336 00001CF5 7413                <1> 		je operatorfound
  2337 00001CF7 3C2F                <1> 		cmp al, '/'
  2338 00001CF9 740F                <1> 		je operatorfound
  2339 00001CFB 3C5E                <1> 		cmp al, '^'
  2340 00001CFD 740B                <1> 		je operatorfound
  2341 00001CFF 46                  <1> 		inc esi
  2342 00001D00 3C00                <1> 		cmp al, 0
  2343 00001D02 0F84D2F7FFFF        <1> 		je near nwcmd
  2344 00001D08 EBDF                <1> 		jmp num2
  2345 00001D0A 50                  <1> 	operatorfound: push eax
  2346 00001D0B B400                <1> 		mov ah, 0
  2347 00001D0D 8826                <1> 		mov [esi], ah
  2348 00001D0F 89F7                <1> 		mov edi, esi
  2349 00001D11 46                  <1> 		inc esi
  2350 00001D12 8A06                <1> 		mov al, [esi]
  2351 00001D14 3C24                <1> 		cmp al, '$'
  2352 00001D16 0F8481000000        <1> 		je near varnum1
  2353 00001D1C 3C25                <1> 		cmp al, '%'
  2354 00001D1E 0F8469000000        <1> 		je near resultnum1
  2355                              <1> 	varnum2: 
  2356 00001D24 57                  <1> 		push edi
  2357 00001D25 E8C9000000          <1> 		call checkdecimal
  2358 00001D2A 5F                  <1> 		pop edi
  2359 00001D2B E831FDFFFF          <1> 		call cnvrttxt
  2360                              <1> 	vrnm2:
  2361 00001D30 89CB                <1> 		mov ebx, ecx
  2362 00001D32 53                  <1> 		push ebx
  2363 00001D33 E843FAFFFF          <1> 		call clearbuffer
  2364 00001D38 BE[7A1B0000]        <1> 		mov esi, buftxt
  2365 00001D3D 89F7                <1> 		mov edi, esi
  2366 00001D3F 46                  <1> 		inc esi
  2367 00001D40 8A06                <1> 		mov al, [esi]
  2368 00001D42 3C24                <1> 		cmp al, '$'
  2369 00001D44 0F8474000000        <1> 		je near varnum3
  2370 00001D4A 3C25                <1> 		cmp al, '%'
  2371 00001D4C 0F8443000000        <1> 		je near resultnum2
  2372                              <1> 	varnum4: 
  2373 00001D52 57                  <1> 		push edi
  2374 00001D53 E887000000          <1> 		call checkdecimal2
  2375 00001D58 5F                  <1> 		pop edi
  2376 00001D59 E803FDFFFF          <1> 		call cnvrttxt
  2377                              <1> 	vrnm4:
  2378 00001D5E 5B                  <1> 		pop ebx
  2379 00001D5F 58                  <1> 		pop eax
  2380 00001D60 3C2B                <1> 		cmp al, '+'
  2381 00001D62 0F84B9000000        <1> 		je near plusnum
  2382 00001D68 3C2D                <1> 		cmp al, '-'
  2383 00001D6A 0F84BD000000        <1> 		je near subnum
  2384 00001D70 3C2A                <1> 		cmp al, '*'
  2385 00001D72 0F84C1000000        <1> 		je near mulnum
  2386 00001D78 3C2F                <1> 		cmp al, '/'
  2387 00001D7A 0F84CF000000        <1> 		je near divnum
  2388 00001D80 3C5E                <1> 		cmp al, '^'
  2389 00001D82 0F84ED000000        <1> 		je near expnum
  2390 00001D88 E94DF7FFFF          <1> 		jmp nwcmd
  2391                              <1> 	resultnum1:
  2392 00001D8D 8B0D[801F0000]      <1> 		mov ecx, [result]
  2393 00001D93 EB9B                <1> 		jmp vrnm2
  2394                              <1> 	resultnum2:
  2395 00001D95 8B0D[801F0000]      <1> 		mov ecx, [result]
  2396 00001D9B EBC1                <1> 		jmp vrnm4
  2397 00001D9D 81EE[7A1B0000]      <1> 	varnum1: sub esi, buftxt
  2398 00001DA3 89F7                <1> 		mov edi, esi
  2399 00001DA5 81C6[7A1B0000]      <1> 		add esi, buftxt
  2400 00001DAB 47                  <1> 		inc edi
  2401 00001DAC BB[6F150000]        <1> 		mov ebx, variables
  2402 00001DB1 E8D2FEFFFF          <1> 		call nxtvrech
  2403 00001DB6 89F7                <1> 		mov edi, esi
  2404 00001DB8 4F                  <1> 		dec edi
  2405 00001DB9 E966FFFFFF          <1> 		jmp varnum2
  2406 00001DBE 81EE[7A1B0000]      <1> 	varnum3: sub esi, buftxt
  2407 00001DC4 89F7                <1> 		mov edi, esi
  2408 00001DC6 81C6[7A1B0000]      <1> 		add esi, buftxt
  2409 00001DCC 47                  <1> 		inc edi
  2410 00001DCD BB[6F150000]        <1> 		mov ebx, variables
  2411 00001DD2 E8B1FEFFFF          <1> 		call nxtvrech
  2412 00001DD7 89F7                <1> 		mov edi, esi
  2413 00001DD9 4F                  <1> 		dec edi
  2414 00001DDA E973FFFFFF          <1> 		jmp varnum4
  2415                              <1> 	checkdecimal2:
  2416 00001DDF 8A25[7E1F0000]      <1> 		mov ah, [decimal]
  2417 00001DE5 8825[7F1F0000]      <1> 		mov [decimal2], ah
  2418 00001DEB B400                <1> 		mov ah, 0
  2419 00001DED 8825[7E1F0000]      <1> 		mov [decimal], ah
  2420                              <1> 	checkdecimal:
  2421 00001DF3 89F7                <1> 		mov edi, esi
  2422                              <1> 	chkdec1:
  2423 00001DF5 8A07                <1> 		mov al, [edi]
  2424 00001DF7 3C2E                <1> 		cmp al, '.'
  2425 00001DF9 0F840B000000        <1> 		je near fnddec
  2426 00001DFF 3C00                <1> 		cmp al, 0
  2427 00001E01 0F8419000000        <1> 		je near nodecimal
  2428 00001E07 47                  <1> 		inc edi
  2429 00001E08 EBEB                <1> 		jmp chkdec1
  2430                              <1> 	fnddec:
  2431 00001E0A 8A4701              <1> 		mov al, [edi + 1]
  2432 00001E0D 8807                <1> 		mov [edi], al
  2433 00001E0F 3C00                <1> 		cmp al, 0
  2434 00001E11 0F8409000000        <1> 		je near nodecimal
  2435 00001E17 FE05[7E1F0000]      <1> 		inc byte [decimal]
  2436 00001E1D 47                  <1> 		inc edi
  2437 00001E1E EBEA                <1> 		jmp fnddec
  2438                              <1> 	nodecimal:
  2439 00001E20 C3                  <1> 		ret
  2440                              <1> 	plusnum:
  2441 00001E21 E816010000          <1> 		call decaddfix
  2442 00001E26 01D9                <1> 		add ecx, ebx
  2443 00001E28 E991000000          <1> 		jmp retnum
  2444                              <1> 	subnum:
  2445 00001E2D E80A010000          <1> 		call decaddfix
  2446 00001E32 29D9                <1> 		sub ecx, ebx
  2447 00001E34 E985000000          <1> 		jmp retnum
  2448                              <1> 	mulnum:
  2449 00001E39 A0[7F1F0000]        <1> 		mov al, [decimal2]
  2450 00001E3E 0005[7E1F0000]      <1> 		add [decimal], al
  2451 00001E44 89C8                <1> 		mov eax, ecx
  2452 00001E46 F7E3                <1> 		mul ebx
  2453 00001E48 89C1                <1> 		mov ecx, eax
  2454 00001E4A E96F000000          <1> 		jmp retnum
  2455                              <1> 	divnum:
  2456 00001E4F E8E8000000          <1> 		call decaddfix
  2457 00001E54 B000                <1> 		mov al, 0
  2458 00001E56 A2[7E1F0000]        <1> 		mov [decimal], al
  2459 00001E5B 6689C8              <1> 		mov ax, cx
  2460 00001E5E 80FB00              <1> 		cmp bl, 0
  2461 00001E61 0F8457000000        <1> 		je near retnum
  2462 00001E67 F6F3                <1> 		div bl
  2463 00001E69 B900000000          <1> 		mov ecx, 0
  2464 00001E6E 88C1                <1> 		mov cl, al
  2465 00001E70 E949000000          <1> 		jmp retnum
  2466                              <1> 	expnum:
  2467 00001E75 8A15[7E1F0000]      <1> 		mov dl, [decimal]
  2468 00001E7B 8815[7F1F0000]      <1> 		mov [decimal2], dl
  2469 00001E81 BA00000000          <1> 		mov edx, 0
  2470 00001E86 89C8                <1> 		mov eax, ecx
  2471 00001E88 89D9                <1> 		mov ecx, ebx
  2472 00001E8A 89C3                <1> 		mov ebx, eax
  2473 00001E8C 81F900000000        <1> 		cmp ecx, 0
  2474 00001E92 7425                <1> 		je noexpnum
  2475 00001E94 49                  <1> 		dec ecx
  2476 00001E95 81F900000000        <1> 		cmp ecx, 0
  2477 00001E9B 7415                <1> 		je noexpnumlp
  2478 00001E9D F7E3                <1> 	expnumlp: mul ebx
  2479 00001E9F 8A15[7F1F0000]      <1> 		mov dl, [decimal2]
  2480 00001EA5 0015[7E1F0000]      <1> 		add [decimal], dl
  2481 00001EAB BA00000000          <1> 		mov edx, 0
  2482 00001EB0 E2EB                <1> 		loop expnumlp
  2483                              <1> 	noexpnumlp:
  2484 00001EB2 89C1                <1> 		mov ecx, eax
  2485 00001EB4 E905000000          <1> 		jmp retnum
  2486                              <1> 	noexpnum:
  2487 00001EB9 B901000000          <1> 		mov ecx, 1
  2488                              <1> 	retnum: 
  2489 00001EBE BE[8E1C0000]        <1> 		mov esi, numbuf
  2490 00001EC3 890D[801F0000]      <1> 		mov [result], ecx
  2491 00001EC9 E8C2F8FFFF          <1> 		call convert
  2492 00001ECE BE[8E1C0000]        <1> 		mov esi, numbuf
  2493 00001ED3 8A25[7E1F0000]      <1> 		mov ah, [decimal]
  2494 00001ED9 80FC00              <1> 		cmp ah, 0
  2495 00001EDC 0F8425000000        <1> 		je near noputdecimal
  2496                              <1> 	putdecimal:
  2497 00001EE2 4E                  <1> 		dec esi
  2498 00001EE3 FECC                <1> 		dec ah
  2499 00001EE5 80FC00              <1> 		cmp ah, 0
  2500 00001EE8 0F87F4FFFFFF        <1> 		ja near putdecimal
  2501 00001EEE 4E                  <1> 		dec esi
  2502 00001EEF 8A06                <1> 		mov al, [esi]
  2503 00001EF1 C6062E              <1> 		mov byte [esi], '.'
  2504                              <1> 	decputloop:
  2505 00001EF4 4E                  <1> 		dec esi
  2506 00001EF5 8A26                <1> 		mov ah, [esi]
  2507 00001EF7 8806                <1> 		mov [esi], al
  2508 00001EF9 88E0                <1> 		mov al, ah
  2509 00001EFB 81FE[7A1C0000]      <1> 		cmp esi, buf2
  2510 00001F01 0F87EDFFFFFF        <1> 		ja near decputloop
  2511                              <1> 	noputdecimal:
  2512 00001F07 BE[7A1C0000]        <1> 		mov esi, buf2
  2513 00001F0C E809000000          <1> 		call chkadd
  2514 00001F11 E9C4F5FFFF          <1> 		jmp nwcmd
  2515 00001F16 00000000            <1> edxnumbuf dw 0,0
  2516 00001F1A 8A06                <1> 	chkadd: mov al, [esi]
  2517 00001F1C 3C30                <1> 		cmp al, '0'
  2518 00001F1E 750C                <1> 		jne dnadd
  2519 00001F20 46                  <1> 		inc esi
  2520 00001F21 81FE[8E1C0000]      <1> 		cmp esi, numbuf
  2521 00001F27 7402                <1> 		je dnaddm1
  2522 00001F29 EBEF                <1> 		jmp chkadd
  2523 00001F2B 4E                  <1> 	dnaddm1: dec esi
  2524 00001F2C E852F0FFFF          <1> 	dnadd:	call print
  2525 00001F31 BE[FC530000]        <1> 		mov esi, line
  2526 00001F36 E848F0FFFF          <1> 		call print
  2527 00001F3B C3                  <1> 		ret
  2528                              <1> 		
  2529                              <1> 	decaddfix:
  2530 00001F3C A0[7F1F0000]        <1> 		mov al, [decimal2]
  2531 00001F41 8A25[7E1F0000]      <1> 		mov ah, [decimal]
  2532 00001F47 38E0                <1> 		cmp al, ah
  2533 00001F49 7432                <1> 		je gooddecadd
  2534 00001F4B 38E0                <1> 		cmp al, ah
  2535 00001F4D 721A                <1> 		jb lowdecadd
  2536                              <1> 	highdecadd:
  2537 00001F4F FEC4                <1> 		inc ah
  2538 00001F51 89CA                <1> 		mov edx, ecx
  2539 00001F53 C1E103              <1> 		shl ecx, 3
  2540 00001F56 01D1                <1> 		add ecx, edx
  2541 00001F58 01D1                <1> 		add ecx, edx
  2542 00001F5A 38E0                <1> 		cmp al, ah
  2543 00001F5C 77F1                <1> 		ja highdecadd
  2544 00001F5E 8825[7E1F0000]      <1> 		mov [decimal], ah
  2545 00001F64 E914000000          <1> 		jmp gooddecadd
  2546                              <1> 	lowdecadd:
  2547 00001F69 FEC0                <1> 		inc al
  2548 00001F6B 89DA                <1> 		mov edx, ebx
  2549 00001F6D C1E303              <1> 		shl ebx, 3
  2550 00001F70 01D3                <1> 		add ebx, edx
  2551 00001F72 01D3                <1> 		add ebx, edx
  2552 00001F74 38E0                <1> 		cmp al, ah
  2553 00001F76 72F1                <1> 		jb lowdecadd
  2554 00001F78 A2[7E1F0000]        <1> 		mov [decimal], al
  2555                              <1> 	gooddecadd:
  2556 00001F7D C3                  <1> 		ret
  2557                              <1> 		
  2558 00001F7E 00                  <1> decimal db 0
  2559 00001F7F 00                  <1> decimal2 db 0
  2560 00001F80 00000000            <1> result db 0,0,0,0
  2561                              <1> 	
  2562 00001F84 05042500            <1> db 5,4,"%",0
  2563 00001F88 E8EEF7FFFF          <1> 	ans:	call clearbuffer
  2564 00001F8D 8B0D[801F0000]      <1> 		mov ecx, [result]
  2565 00001F93 BE[7A1C0000]        <1> 		mov esi, buf2
  2566 00001F98 E8F3F7FFFF          <1> 		call convert
  2567 00001F9D BE[7A1C0000]        <1> 		mov esi, buf2
  2568 00001FA2 E873FFFFFF          <1> 		call chkadd
  2569 00001FA7 E92EF5FFFF          <1> 		jmp nwcmd
  2570                              <1> 
  2571 00001FAC 05042400            <1> db 5,4,"$",0
  2572 00001FB0 BE[7A1B0000]        <1> var: mov esi, buftxt
  2573 00001FB5 BB[6F150000]        <1> 	mov ebx, variables
  2574 00001FBA 8A06                <1> lkeq:	mov al, [esi]
  2575 00001FBC 3C3D                <1> 	cmp al, '='
  2576 00001FBE 741F                <1> 	je eqfnd	;is there an '=' sign?
  2577 00001FC0 3C00                <1> 	cmp al, 0
  2578 00001FC2 7403                <1> 	je echovars
  2579 00001FC4 46                  <1> 	inc esi
  2580 00001FC5 EBF3                <1> 	jmp lkeq
  2581 00001FC7 BE[6F150000]        <1> echovars: mov esi, variables
  2582 00001FCC BB[6F1A0000]        <1> 	mov ebx, varend
  2583 00001FD1 B105                <1> 	mov cl, 5
  2584 00001FD3 B504                <1> 	mov ch, 4
  2585 00001FD5 E840F7FFFF          <1> 	call array
  2586 00001FDA E9FBF4FFFF          <1> 	jmp nwcmd
  2587 00001FDF 46                  <1> eqfnd:	inc esi
  2588 00001FE0 8A06                <1> 	mov al, [esi]
  2589 00001FE2 3C00                <1> 	cmp al, 0
  2590 00001FE4 740F                <1> 	je readvar
  2591 00001FE6 BE[7A1B0000]        <1> 	mov esi, buftxt
  2592 00001FEB BB[6F150000]        <1> 	mov ebx, variables
  2593 00001FF0 E91E000000          <1> 	jmp seek
  2594                              <1> readvar:
  2595 00001FF5 B00D                <1> 	mov al, 13
  2596 00001FF7 66BB0700            <1> 	mov bx, 7
  2597 00001FFB C605[D30F0000]00    <1> 	mov byte [commandedit], 0
  2598 00002002 E8D5EFFFFF          <1> 	call int305
  2599 00002007 BE[FC530000]        <1> 	mov esi, line
  2600 0000200C E872EFFFFF          <1> 	call print
  2601 00002011 EB9D                <1> 	jmp var
  2602 00002013 668B03              <1> seek:	mov ax, [ebx]
  2603 00002016 B105                <1> 	mov cl, 5
  2604 00002018 B504                <1> 	mov ch, 4
  2605 0000201A 663D0000            <1> 	cmp ax, 0
  2606 0000201E 0F8459000000        <1> 	je near save
  2607 00002024 6639C8              <1> 	cmp ax, cx
  2608 00002027 7403                <1> 	je skfnd
  2609 00002029 43                  <1> 	inc ebx
  2610 0000202A EBE7                <1> 	jmp seek
  2611 0000202C BE[7A1B0000]        <1> skfnd:	mov esi, buftxt
  2612 00002031 46                  <1> 	inc esi
  2613 00002032 81C302000000        <1> 	add ebx, 2
  2614 00002038 89DF                <1> 	mov edi, ebx
  2615 0000203A B13D                <1> 	mov cl, '='
  2616 0000203C E817F6FFFF          <1> 	call cndtest
  2617 00002041 3C01                <1> 	cmp al, 1	
  2618 00002043 7417                <1> 	je varfnd
  2619 00002045 89FB                <1> 	mov ebx, edi
  2620 00002047 BE[7A1B0000]        <1> 	mov esi, buftxt
  2621 0000204C 668B03              <1> 	mov ax, [ebx]
  2622 0000204F 663D0000            <1> 	cmp ax, 0
  2623 00002053 0F8424000000        <1> 	je near save
  2624 00002059 43                  <1> 	inc ebx
  2625 0000205A EBB7                <1> 	jmp seek
  2626 0000205C 8A03                <1> varfnd:	mov al, [ebx]
  2627 0000205E 3C04                <1> 	cmp al, 4
  2628 00002060 7404                <1> 	je save2
  2629 00002062 4B                  <1> 	dec ebx
  2630 00002063 4E                  <1> 	dec esi
  2631 00002064 EBF6                <1> 	jmp varfnd
  2632 00002066 4B                  <1> save2:	dec ebx
  2633 00002067 4E                  <1> 	dec esi
  2634 00002068 8A03                <1> 	mov al, [ebx]
  2635 0000206A 3C05                <1> 	cmp al, 5
  2636 0000206C 7402                <1> 	je remove
  2637 0000206E EBEC                <1> 	jmp varfnd
  2638 00002070 8A03                <1> remove: mov al, [ebx]
  2639 00002072 3C00                <1> 	cmp al, 0
  2640 00002074 749D                <1> 	je seek
  2641 00002076 B000                <1> 	mov al, 0
  2642 00002078 8803                <1> 	mov [ebx], al
  2643 0000207A 43                  <1> 	inc ebx
  2644 0000207B EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2645 0000207D BE[7A1B0000]        <1> save:	mov esi, buftxt
  2646 00002082 43                  <1> 	inc ebx
  2647 00002083 B005                <1> 	mov al, 5
  2648 00002085 B404                <1> 	mov ah, 4
  2649 00002087 668903              <1> 	mov [ebx], ax
  2650 0000208A 43                  <1> 	inc ebx
  2651 0000208B 43                  <1> svhere:	inc ebx
  2652 0000208C 46                  <1> 	inc esi
  2653 0000208D 8A06                <1> 	mov al, [esi]
  2654 0000208F 3C00                <1> 	cmp al, 0
  2655 00002091 0F8442000000        <1> 	je near svdone
  2656 00002097 3C25                <1> 	cmp al, '%'
  2657 00002099 7404                <1> 	je ans2
  2658 0000209B 8803                <1> 	mov [ebx], al	
  2659 0000209D EBEC                <1> 	jmp svhere
  2660 0000209F 56                  <1> ans2:	push esi
  2661 000020A0 BE[7A1C0000]        <1> 	mov esi, buf2
  2662 000020A5 E823000000          <1> 	call ansfnd
  2663 000020AA E803000000          <1> 	call anscp
  2664 000020AF 5E                  <1> 	pop esi
  2665 000020B0 EBD9                <1> 	jmp svhere
  2666 000020B2 8A06                <1> anscp:	mov al, [esi]
  2667 000020B4 8803                <1> 	mov [ebx], al
  2668 000020B6 81FE[8E1C0000]      <1> 	cmp esi, numbuf
  2669 000020BC 74CD                <1> 	je svhere
  2670 000020BE 3C00                <1> 	cmp al, 0
  2671 000020C0 74C9                <1> 	je svhere
  2672 000020C2 43                  <1> 	inc ebx
  2673 000020C3 46                  <1> 	inc esi
  2674 000020C4 EBEC                <1> 	jmp anscp
  2675 000020C6 5E                  <1> ansnf:	pop esi
  2676 000020C7 8A06                <1> 	mov al, [esi]
  2677 000020C9 8803                <1> 	mov [ebx], al
  2678 000020CB EBBE                <1> 	jmp svhere
  2679 000020CD 46                  <1> ansfnd:	inc esi
  2680 000020CE 8A06                <1> 	mov al, [esi]
  2681 000020D0 3C00                <1> 	cmp al, 0
  2682 000020D2 74F2                <1> 	je ansnf
  2683 000020D4 3C30                <1> 	cmp al, '0'
  2684 000020D6 74F5                <1> 	je ansfnd
  2685 000020D8 C3                  <1> 	ret
  2686 000020D9 B000                <1> svdone:	mov al, 0
  2687 000020DB 8803                <1> 	mov [ebx], al
  2688 000020DD E9F8F3FFFF          <1> 	jmp nwcmd
  2689                              <1> 	
  2690 000020E2 05046C6F676F757400  <1> 	db 5,4,"logout",0
  2691                              <1> logout:
  2692 000020EB E9D8F2FFFF          <1> 	jmp os
  2693                              <1> 	
  2694 000020F0 05047265626F6F7400  <1> 	db 5,4,"reboot",0
  2695                              <1> rebootcomp:
  2696 000020F9 E945E1FFFF          <1> 	jmp coldboot
  2697                              <1> 
  2698 000020FE 050473687574646F77- <1> 	db 5,4,"shutdown",0
  2699 00002107 6E00                <1>
  2700                              <1> shutdowncomp:
  2701 00002109 E90BE1FFFF          <1> 	jmp shutdown
  2702                              <1> 	
  2703                              <1> 	
  2704 0000210E 05042E2F00          <1> 	db 5,4,"./",0
  2705                              <1> rundiskprog:
  2706 00002113 BF[7A1B0000]        <1> 	mov edi, buftxt
  2707 00002118 81C702000000        <1> 	add edi, 2
  2708 0000211E BE00004000          <1> 	mov esi, 0x400000
  2709 00002123 E8F7290000          <1> 	call loadfile
  2710 00002128 81FA94010000        <1> 	cmp edx, 404
  2711 0000212E 7414                <1> 	je noprogfound
  2712 00002130 BB00004000          <1> 	mov ebx, 0x400000
  2713 00002135 66813B4558          <1> 	cmp word [ebx], "EX"
  2714 0000213A 7531                <1> 	jne progbatchfound
  2715 0000213C 81C302000000        <1> 	add ebx, 2
  2716 00002142 FFE3                <1> 	jmp ebx
  2717                              <1> noprogfound:
  2718 00002144 BE[C3530000]        <1> 	mov esi, notfound1
  2719 00002149 E835EEFFFF          <1> 	call print
  2720 0000214E BE[7A1B0000]        <1> 	mov esi, buftxt
  2721 00002153 81C602000000        <1> 	add esi, 2
  2722 00002159 E825EEFFFF          <1> 	call print
  2723 0000215E BE[CD530000]        <1> 	mov esi, notfound2
  2724 00002163 E81BEEFFFF          <1> 	call print
  2725 00002168 E96DF3FFFF          <1> 	jmp nwcmd
  2726                              <1> progbatchfound:
  2727 0000216D BF00004000          <1> 		mov edi, 0x400000
  2728 00002172 C605[69130000]01    <1> 		mov byte [BATCHISON], 1
  2729                              <1> 	batchrunloop:
  2730 00002179 E839F3FFFF          <1> 		call buftxtclear
  2731 0000217E BE[7A1B0000]        <1> 		mov esi, buftxt
  2732                              <1> 	batchrunloop2:
  2733 00002183 B10D                <1> 		mov cl, 13
  2734 00002185 B50A                <1> 		mov ch, 10
  2735 00002187 66390F              <1> 		cmp [edi], cx
  2736 0000218A 0F841E000000        <1> 		je near nxtbatchrunline
  2737 00002190 66C1C108            <1> 		rol cx, 8
  2738 00002194 66390F              <1> 		cmp [edi], cx
  2739 00002197 0F8411000000        <1> 		je near nxtbatchrunline
  2740 0000219D 803F00              <1> 		cmp byte [edi], 0
  2741 000021A0 0F8408000000        <1> 		je near nxtbatchrunline
  2742 000021A6 8A07                <1> 		mov al, [edi]
  2743 000021A8 8806                <1> 		mov [esi], al
  2744 000021AA 46                  <1> 		inc esi
  2745 000021AB 47                  <1> 		inc edi
  2746 000021AC EBD5                <1> 		jmp batchrunloop2
  2747                              <1> 	nxtbatchrunline:
  2748 000021AE 81C702000000        <1> 		add edi, 2
  2749 000021B4 893D[13220000]      <1> 		mov [batchedi], edi
  2750 000021BA C60600              <1> 		mov byte [esi], 0
  2751 000021BD BE[7A1B0000]        <1> 		mov esi, buftxt
  2752 000021C2 803E00              <1> 		cmp byte [esi], 0
  2753 000021C5 0F843C000000        <1> 		je near nobatchfoundrun
  2754 000021CB BB00000000          <1> 		mov ebx, 0
  2755 000021D0 8A1D[00130000]      <1> 		mov bl, [IFON]
  2756 000021D6 80FB01              <1> 		cmp bl, 1
  2757 000021D9 0F8338000000        <1> 		jae near iftestbatch
  2758                              <1> 	doneiftest:
  2759 000021DF 803D[DA220000]00    <1> 		cmp byte [runnextline], 0
  2760 000021E6 0F8405000000        <1> 		je near noruniftest
  2761 000021EC E8B4F3FFFF          <1> 		call progtest
  2762                              <1> 	noruniftest:
  2763 000021F1 C605[DA220000]01    <1> 		mov byte [runnextline], 1
  2764 000021F8 8B3D[13220000]      <1> 		mov edi, [batchedi]
  2765 000021FE 803F00              <1> 		cmp byte [edi], 0
  2766 00002201 0F8572FFFFFF        <1> 		jne near batchrunloop
  2767                              <1> 	nobatchfoundrun:
  2768 00002207 C605[69130000]00    <1> 		mov byte [BATCHISON], 0
  2769 0000220E E9C7F2FFFF          <1> 		jmp nwcmd
  2770                              <1> 	
  2771 00002213 00000000            <1> batchedi dd 0	
  2772                              <1> 	
  2773                              <1> 	iftestbatch:
  2774 00002217 BE[01130000]        <1> 		mov esi, IFTRUE
  2775 0000221C 01DE                <1> 		add esi, ebx
  2776 0000221E 803E00              <1> 		cmp byte [esi], 0
  2777 00002221 0F85B8FFFFFF        <1> 		jne near doneiftest
  2778 00002227 881D[DB220000]      <1> 		mov [iffalsebuf], bl
  2779 0000222D 803D[6A130000]01    <1> 		cmp byte [LOOPON], 1
  2780 00002234 750B                <1> 		jne fifindbatch
  2781 00002236 8B3D[6B130000]      <1> 		mov edi, [LOOPPOS]
  2782 0000223C E938FFFFFF          <1> 		jmp batchrunloop
  2783                              <1> 	fifindbatch:
  2784 00002241 66B96966            <1> 		mov cx, "if"
  2785 00002245 66B86669            <1> 		mov ax, "fi"
  2786 00002249 663907              <1> 		cmp [edi], ax
  2787 0000224C 0F841A000000        <1> 		je near fifoundbatch
  2788 00002252 66390F              <1> 		cmp [edi], cx
  2789 00002255 0F8462000000        <1> 		je near iffoundbatch
  2790 0000225B 803F00              <1> 		cmp byte [edi], 0
  2791 0000225E 0F8408000000        <1> 		je near fifoundbatch
  2792 00002264 81C702000000        <1> 		add edi, 2
  2793 0000226A EBD5                <1> 		jmp fifindbatch
  2794                              <1> 	fifoundbatch:
  2795 0000226C 81C702000000        <1> 		add edi, 2
  2796 00002272 B00D                <1> 		mov al, 13
  2797 00002274 B40A                <1> 		mov ah, 10
  2798 00002276 663907              <1> 		cmp [edi], ax
  2799 00002279 7414                <1> 		je goodfibatch
  2800 0000227B 66C1C008            <1> 		rol ax, 8
  2801 0000227F 663907              <1> 		cmp [edi], ax
  2802 00002282 740B                <1> 		je goodfibatch
  2803 00002284 803F00              <1> 		cmp byte [edi], 0
  2804 00002287 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  2805 0000228D EBB2                <1> 		jmp fifindbatch
  2806                              <1> 	goodfibatch:
  2807 0000228F B001                <1> 		mov al, 1
  2808 00002291 2805[00130000]      <1> 		sub [IFON], al 
  2809 00002297 A0[00130000]        <1> 		mov al, [IFON]
  2810 0000229C 8A1D[DB220000]      <1> 		mov bl, [iffalsebuf]
  2811 000022A2 38D8                <1> 		cmp al, bl
  2812 000022A4 779B                <1> 		ja fifindbatch
  2813 000022A6 BE[7A1B0000]        <1> 		mov esi, buftxt
  2814 000022AB 81EF02000000        <1> 		sub edi, 2
  2815 000022B1 C605[DA220000]00    <1> 		mov byte [runnextline], 0
  2816 000022B8 E9BCFEFFFF          <1> 		jmp batchrunloop
  2817                              <1> 	iffoundbatch:
  2818 000022BD B020                <1> 		mov al, ' '
  2819 000022BF 81C702000000        <1> 		add edi, 2
  2820 000022C5 3807                <1> 		cmp [edi], al
  2821 000022C7 0F8574FFFFFF        <1> 		jne near fifindbatch
  2822 000022CD B001                <1> 		mov al, 1
  2823 000022CF 0005[00130000]      <1> 		add [IFON], al
  2824 000022D5 E967FFFFFF          <1> 		jmp fifindbatch
  2825                              <1> 		
  2826                              <1> 		
  2827 000022DA 01                  <1> runnextline db 1
  2828 000022DB 00                  <1> iffalsebuf db 0
  2829                              <1> 
  2830 000022DC E9F9F1FFFF          <1> notbatch: jmp nwcmd
  2831                              <1> 
  2832 000022E1 05047768696C6500    <1> 	db 5,4,"while",0
  2833 000022E9 B000                <1> whilecmd:  mov al, 0
  2834 000022EB 3805[69130000]      <1> 	cmp [BATCHISON], al
  2835 000022F1 0F84E5FFFFFF        <1> 	je near notbatch
  2836 000022F7 8B35[65130000]      <1> 	MOV esi, [BATCHPOS]
  2837 000022FD 4E                  <1> whilefnd: dec esi
  2838 000022FE 8A06                <1> 	mov al, [esi]
  2839 00002300 3C0A                <1> 	cmp al, 10
  2840 00002302 0F8412000000        <1> 	je near whilefnd2
  2841 00002308 3C0D                <1> 	cmp al, 13
  2842 0000230A 0F840A000000        <1> 	je near whilefnd2
  2843 00002310 3C00                <1> 	cmp al, 0
  2844 00002312 0F8402000000        <1> 	je near whilefnd2
  2845 00002318 EBE3                <1> 	jmp whilefnd
  2846                              <1> whilefnd2:
  2847 0000231A 8935[6B130000]      <1> 	mov [LOOPPOS], esi
  2848 00002320 C605[6A130000]01    <1> 	mov BYTE [LOOPON], 1
  2849 00002327 0005[00130000]      <1> 	add [IFON], al
  2850 0000232D BE[7A1B0000]        <1> 	mov esi, buftxt
  2851 00002332 BB[7A1B0000]        <1> 	mov ebx, buftxt
  2852 00002337 81C306000000        <1> 	add ebx, 6
  2853 0000233D E923000000          <1> 	jmp chkeqsn
  2854                              <1> 
  2855                              <1> 
  2856 00002342 0504696600          <1> 	db 5,4,"if",0
  2857 00002347 B000                <1> ifcmd:	mov al, 0
  2858 00002349 3805[69130000]      <1> 	cmp [BATCHISON], al
  2859 0000234F 0F8487FFFFFF        <1> 	je near notbatch
  2860 00002355 BE[7A1B0000]        <1> 	mov esi, buftxt
  2861 0000235A BB[7A1B0000]        <1> 	mov ebx, buftxt
  2862 0000235F 81C303000000        <1> 	add ebx, 3
  2863 00002365 8A06                <1> chkeqsn: mov al, [esi]
  2864 00002367 3C00                <1> 	cmp al, 0
  2865 00002369 0F846DFFFFFF        <1> 	je near notbatch
  2866 0000236F 3C3D                <1> 	cmp al, '='
  2867 00002371 0F8403000000        <1> 	je near chkeqdn
  2868 00002377 46                  <1> 	inc esi
  2869 00002378 EBEB                <1> 	jmp chkeqsn
  2870 0000237A B000                <1> chkeqdn: mov al, 0 
  2871 0000237C 8806                <1> 	mov [esi], al
  2872 0000237E 46                  <1> 	inc esi
  2873 0000237F 8A06                <1> 	mov al, [esi]
  2874 00002381 3C24                <1> 	cmp al, '$'
  2875 00002383 0F8462000000        <1> 	je near ifvar1
  2876 00002389 8A03                <1> ifvar2: mov al, [ebx]
  2877 0000238B 3C24                <1> 	cmp al, '$'
  2878 0000238D 0F847B000000        <1> 	je near ifvar3
  2879 00002393 E886F2FFFF          <1> ifvar4:	call tester
  2880 00002398 3C01                <1> 	cmp al, 1
  2881 0000239A 0F8405000000        <1> 	je near trueif
  2882 000023A0 E923000000          <1> 	jmp falseif
  2883 000023A5 B800000000          <1> trueif:	mov eax, 0
  2884 000023AA A0[00130000]        <1> 	mov al, [IFON]
  2885 000023AF FEC0                <1> 	inc al
  2886 000023B1 A2[00130000]        <1> 	mov [IFON], al
  2887 000023B6 B400                <1> 	mov ah, 0
  2888 000023B8 BE[01130000]        <1> 	mov esi, IFTRUE
  2889 000023BD 01C6                <1> 	add esi, eax
  2890 000023BF B401                <1> 	mov ah, 1
  2891 000023C1 8826                <1> 	mov [esi], ah
  2892 000023C3 E912F1FFFF          <1> 	jmp nwcmd
  2893 000023C8 B800000000          <1> falseif: mov eax, 0
  2894 000023CD A0[00130000]        <1> 	mov al, [IFON]
  2895 000023D2 FEC0                <1> 	inc al
  2896 000023D4 A2[00130000]        <1> 	mov [IFON], al
  2897 000023D9 B400                <1> 	mov ah, 0
  2898 000023DB BE[01130000]        <1> 	mov esi, IFTRUE
  2899 000023E0 01C6                <1> 	add esi, eax
  2900 000023E2 B400                <1> 	mov ah, 0
  2901 000023E4 8826                <1> 	mov [esi], ah
  2902 000023E6 E9EFF0FFFF          <1> 	jmp nwcmd
  2903 000023EB 89F7                <1> ifvar1: mov edi, esi
  2904 000023ED 81EF[7A1B0000]      <1> 	sub edi, buftxt
  2905 000023F3 47                  <1> 	inc edi
  2906 000023F4 BB[6F150000]        <1> 	mov ebx, variables
  2907 000023F9 E88AF8FFFF          <1> 	call nxtvrech
  2908 000023FE BB[7A1B0000]        <1> 	mov ebx, buftxt
  2909 00002403 81C303000000        <1> 	add ebx, 3
  2910 00002409 E97BFFFFFF          <1> 	jmp ifvar2
  2911 0000240E 8935[2E240000]      <1> ifvar3: mov [esiif], esi
  2912 00002414 BF04000000          <1> 	mov edi, 4
  2913 00002419 BB[6F150000]        <1> 	mov ebx, variables
  2914 0000241E E865F8FFFF          <1> 	call nxtvrech
  2915 00002423 8B35[2E240000]      <1> 	mov esi, [esiif]
  2916 00002429 E965FFFFFF          <1> 	jmp ifvar4
  2917                              <1> 
  2918 0000242E 00000000            <1> esiif dd 0
  2919                              <1> 	
  2920 00002432 0504656C736500      <1> 	db 5,4,"else",0
  2921 00002439 B800000000          <1> elsecmd:	mov eax, 0
  2922 0000243E A0[00130000]        <1> 	mov al, [IFON]
  2923 00002443 BE[01130000]        <1> 	mov esi, IFTRUE
  2924 00002448 01C6                <1> 	add esi, eax
  2925 0000244A 8A06                <1> 	mov al, [esi]
  2926 0000244C 3C00                <1> 	cmp al, 0		
  2927 0000244E 7409                <1> 	je else1
  2928 00002450 3C01                <1> 	cmp al, 1
  2929 00002452 740E                <1> 	je else2
  2930 00002454 E981F0FFFF          <1> 	jmp nwcmd
  2931 00002459 B001                <1> else1:  mov al, 1
  2932 0000245B 8806                <1> 	mov [esi], al
  2933 0000245D E978F0FFFF          <1> 	jmp nwcmd
  2934 00002462 B000                <1> else2:	mov al, 0
  2935 00002464 8806                <1> 	mov [esi], al
  2936 00002466 E96FF0FFFF          <1> 	jmp nwcmd
  2937                              <1> 
  2938 0000246B 05046C6F6F7000      <1> 	db 5,4,"loop",0
  2939 00002472 3805[6A130000]      <1> 	cmp [LOOPON], al
  2940 00002478 0F8405000000        <1> 	je near filoop
  2941 0000247E E957F0FFFF          <1> 	jmp nwcmd
  2942 00002483 8B35[6B130000]      <1> filoop: mov esi, [LOOPPOS]
  2943 00002489 8935[65130000]      <1> 	mov [BATCHPOS], esi
  2944 0000248F E946F0FFFF          <1> 	jmp nwcmd
  2945                              <1> 	
  2946                              <1> 
  2947 00002494 0504666900          <1> 	db 5,4,"fi",0
  2948 00002499 B000                <1> 	mov al, 0
  2949 0000249B 3805[69130000]      <1> 	cmp [BATCHISON], al
  2950 000024A1 0F8435FEFFFF        <1> 	je near notbatch
  2951 000024A7 B001                <1> fi:	mov al, 1
  2952 000024A9 2805[00130000]      <1> 	sub [IFON],al
  2953 000024AF E926F0FFFF          <1> 	jmp nwcmd
  2954                              <1> 
  2955 000024B4 050473746F7000      <1> 	db 5,4,"stop",0
  2956 000024BB B000                <1> stop:	mov al, 0
  2957 000024BD A2[69130000]        <1> 	mov [BATCHISON], al
  2958 000024C2 A2[00130000]        <1> 	mov [IFON], al
  2959 000024C7 A2[01130000]        <1> 	mov [IFTRUE], al
  2960 000024CC A2[6A130000]        <1> 	mov [LOOPON], al
  2961 000024D1 E904F0FFFF          <1> 	jmp nwcmd
  2962                                      %include 'source/programs.asm'
  2963                              <1> ;db 5,4,"internet",0
  2964                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  2965                              <1> 							;;^^used to^^, now tests int 30h functions		
  2966 000024D6 B403                <1> 		mov ah, 3
  2967 000024D8 CD30                <1> 		int 30h
  2968 000024DA B401                <1> 		mov ah, 1
  2969                              <1> 		;mov esi, datmsg
  2970 000024DC 66BB0700            <1> 		mov bx, 7
  2971 000024E0 B000                <1> 		mov al, 0
  2972 000024E2 CD30                <1> 		int 30h
  2973                              <1> 	    ;jmp packettest
  2974 000024E4 E9F1EFFFFF          <1> 		jmp nwcmd
  2975                              <1> ;datmsg: db "Internet has not been implemented yet.",10,13,0
  2976                              <1> 	
  2977 000024E9 050474687265616473- <1> db 5,4,"threads",0
  2978 000024F2 00                  <1>
  2979 000024F3 90                  <1> 	nop
  2980 000024F4 90                  <1> 	nop
  2981 000024F5 E9DB270000          <1> 	jmp threadstarttest
  2982 000024FA E9DBEFFFFF          <1> 	jmp nwcmd
  2983                              <1> 	
  2984 000024FF 0504636861726D6170- <1> db 5,4,"charmap",0
  2985 00002508 00                  <1>
  2986 00002509 B000                <1> 	mov al, 0
  2987 0000250B 66BB0700            <1> 	mov bx, 7
  2988                              <1> charmapcopy:
  2989 0000250F FEC0                <1> 	inc al
  2990 00002511 3C08                <1> 	cmp al, 8
  2991 00002513 74FA                <1> 	je charmapcopy
  2992 00002515 3C0A                <1> 	cmp al, 10
  2993 00002517 74F6                <1> 	je charmapcopy
  2994 00002519 3C0D                <1> 	cmp al, 13
  2995 0000251B 74F2                <1> 	je charmapcopy
  2996 0000251D 3C81                <1> 	cmp al, 129
  2997 0000251F 7307                <1> 	jae nomorecharmap
  2998 00002521 E882E8FFFF          <1> 	call int301prnt
  2999 00002526 EBE7                <1> 	jmp charmapcopy
  3000                              <1> nomorecharmap:
  3001 00002528 BE[FC530000]        <1> 	mov esi, line
  3002 0000252D E851EAFFFF          <1> 	call print
  3003 00002532 E9A3EFFFFF          <1> 	jmp nwcmd
  3004                              <1> 	
  3005 00002537 05046B6579636F6465- <1> db 5,4,"keycode",0
  3006 00002540 00                  <1>
  3007                              <1> keycode:
  3008 00002541 E880060000          <1> 	call guistartin
  3009 00002546 B800000000          <1> 	mov eax, 0
  3010 0000254B 66A1[3F0F0000]      <1> 	mov ax, [lastkey]
  3011 00002551 80FC01              <1> 	cmp ah, 1
  3012 00002554 0F840E000000        <1> 	je near killkeycode
  3013 0000255A B900000000          <1> 	mov ecx, 0
  3014 0000255F 88E1                <1> 	mov cl, ah
  3015 00002561 E8A8F3FFFF          <1> 	call showhexsmall
  3016 00002566 EBD9                <1> 	jmp keycode
  3017                              <1> killkeycode:
  3018 00002568 BE[FC530000]        <1> 	mov esi, line
  3019 0000256D E811EAFFFF          <1> 	call print
  3020 00002572 E963EFFFFF          <1> 	jmp nwcmd
  3021                              <1> 
  3022 00002577 050470636900        <1> db 5,4,"pci",0
  3023                              <1> 	pcishow:
  3024 0000257D E8E3230000          <1> 	call pcidump
  3025 00002582 E953EFFFFF          <1> 	jmp nwcmd
  3026                              <1> 	
  3027 00002587 050461727000        <1> db 5,4,"arp",0
  3028 0000258D E8CE220000          <1> 	call arptest
  3029 00002592 E943EFFFFF          <1> 	jmp nwcmd
  3030                              <1> 
  3031 00002597 0504626174636800    <1> db 5,4,"batch",0
  3032                              <1> 	batchst: 
  3033 0000259F BF[7A1B0000]        <1> 		mov edi, buftxt
  3034 000025A4 81C706000000        <1> 		add edi, 6
  3035 000025AA 803F00              <1> 		cmp byte [edi], 0
  3036 000025AD 0F8473000000        <1> 		je near nonamefound
  3037 000025B3 BE00004000          <1> 		mov esi, 0x400000
  3038 000025B8 E862250000          <1> 		call loadfile
  3039 000025BD 89D0                <1> 		mov eax, edx
  3040 000025BF 3D94010000          <1> 		cmp eax, 404
  3041 000025C4 746F                <1> 		je goodbatchname
  3042 000025C6 BE[D5250000]        <1> 		mov esi, badbatchname
  3043 000025CB E8B3E9FFFF          <1> 		call print
  3044 000025D0 E905EFFFFF          <1> 		jmp nwcmd
  3045 000025D5 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  3046 000025DE 20616C726561647920- <1>
  3047 000025E7 657869737473210A0D- <1>
  3048 000025F0 00                  <1>
  3049 000025F1 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  3050 000025FA 746F20747970652061- <1>
  3051 00002603 206E616D6520616674- <1>
  3052 0000260C 65722074686520636F- <1>
  3053 00002615 6D6D616E642E0A0D00  <1>
  3054 0000261E 00000000            <1> 		esicache3 dd 0
  3055 00002622 00000000            <1> 		esicache2 dd 0
  3056                              <1> 	nonamefound:
  3057 00002626 BE[F1250000]        <1> 		mov esi, namenotfoundbatch
  3058 0000262B E853E9FFFF          <1> 		call print
  3059 00002630 E9A5EEFFFF          <1> 		jmp nwcmd
  3060                              <1> 	goodbatchname:
  3061 00002635 BE00004000          <1> 		mov esi, 0x400000
  3062                              <1> 	batchcreate:
  3063 0000263A 8935[1E260000]      <1> 		mov [esicache3], esi
  3064 00002640 B00D                <1> 		mov al, 13
  3065 00002642 B307                <1> 		mov bl, 7
  3066 00002644 B404                <1> 		mov ah, 4
  3067 00002646 CD30                <1> 		int 30h
  3068 00002648 8935[22260000]      <1> 		mov [esicache2], esi
  3069 0000264E 8A0E                <1> 		mov cl, [esi]
  3070 00002650 8B35[1E260000]      <1> 		mov esi, [esicache3]
  3071 00002656 BB[AD260000]        <1> 		mov ebx, exitword
  3072 0000265B E8F8EFFFFF          <1> 		call cndtest
  3073 00002660 3C01                <1> 		cmp al, 1
  3074 00002662 7423                <1> 		je endbatchcreate
  3075 00002664 3C02                <1> 		cmp al, 2
  3076 00002666 741F                <1> 		je endbatchcreate
  3077 00002668 BE[FC530000]        <1> 		mov esi, line
  3078 0000266D E811E9FFFF          <1> 		call print
  3079 00002672 8B35[22260000]      <1> 		mov esi, [esicache2]
  3080 00002678 B00D                <1> 		mov al, 13
  3081 0000267A B40A                <1> 		mov ah, 10
  3082 0000267C 668906              <1> 		mov [esi], ax
  3083 0000267F 81C602000000        <1> 		add esi, 2
  3084 00002685 EBB3                <1> 		jmp batchcreate
  3085                              <1> 	endbatchcreate:
  3086 00002687 8B35[1E260000]      <1> 		mov esi, [esicache3]
  3087 0000268D B800000000          <1> 		mov eax, 0
  3088 00002692 8806                <1> 		mov [esi], al
  3089 00002694 BE[FC530000]        <1> 		mov esi, line
  3090 00002699 E8E5E8FFFF          <1> 		call print
  3091 0000269E BE00004000          <1> 		mov esi, 0x400000
  3092 000026A3 E8DBE8FFFF          <1> 		call print
  3093 000026A8 E92DEEFFFF          <1> 		jmp nwcmd
  3094                              <1> 	
  3095 000026AD 5C7800              <1> 	exitword db "\x",0
  3096 000026B0 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  3097 000026B9 6F20657869742E0A0D- <1>
  3098 000026C2 00                  <1>
  3099                              <1> 		
  3100 000026C3 050473686F7700      <1> db 5,4,"show",0
  3101 000026CA BF[7A1B0000]        <1> 		mov edi, buftxt
  3102 000026CF 81C705000000        <1> 		add edi, 5
  3103 000026D5 BE00004000          <1> 		mov esi, 0x400000
  3104 000026DA E840240000          <1> 		call loadfile
  3105 000026DF BE00004000          <1> 		mov esi, 0x400000
  3106 000026E4 66813E424D          <1> 		cmp word [esi], "BM"
  3107 000026E9 7414                <1> 		je bmpfound
  3108 000026EB E893E8FFFF          <1> 		call print
  3109 000026F0 BE[FC530000]        <1> 		mov esi, line
  3110 000026F5 E889E8FFFF          <1> 		call print
  3111 000026FA E9DBEDFFFF          <1> 		jmp nwcmd
  3112                              <1> bmpfound:
  3113 000026FF 803D[AB310000]00    <1> 		cmp byte [guion], 0
  3114 00002706 0F8452000000        <1> 		je near noguibmp
  3115 0000270C BE00004000          <1> 		mov esi, 0x400000
  3116 00002711 B900000000          <1> 		mov ecx, 0
  3117 00002716 BA00000000          <1> 		mov edx, 0
  3118 0000271B B800000000          <1> 		mov eax, 0
  3119 00002720 BB00000000          <1> 		mov ebx, 0
  3120 00002725 E8941A0000          <1> 		call showbmp
  3121 0000272A B000                <1> 		mov al, 0
  3122 0000272C B405                <1> 		mov ah, 5
  3123 0000272E CD30                <1> 		int 30h
  3124 00002730 E8DD080000          <1> 		call guiclear
  3125 00002735 E8720A0000          <1> 		call clearmousecursor
  3126 0000273A E8F0100000          <1> 		call reloadallgraphics
  3127 0000273F BE[7A1B0000]        <1> 		mov esi, buftxt
  3128 00002744 81C605000000        <1> 		add esi, 5
  3129 0000274A E834E8FFFF          <1> 		call print
  3130 0000274F BE[E1270000]        <1> 		mov esi, loadedbmpmsg
  3131 00002754 E82AE8FFFF          <1> 		call print
  3132 00002759 E97CEDFFFF          <1> 		jmp nwcmd
  3133                              <1> noguibmp:
  3134 0000275E BE[6D270000]        <1> 		mov esi, warnguibmp
  3135 00002763 E81BE8FFFF          <1> 		call print
  3136 00002768 E96DEDFFFF          <1> 		jmp nwcmd
  3137 0000276D 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  3138 00002776 6E6F7420626520646F- <1>
  3139 0000277F 6E6520776974686F75- <1>
  3140 00002788 742074686520677569- <1>
  3141 00002791 2E0A0D00            <1>
  3142                              <1> 
  3143                              <1> 		
  3144                              <1> filenotfound:
  3145 00002795 BE[BE270000]        <1> 		mov esi, filenf
  3146 0000279A E8E4E7FFFF          <1> 		call print
  3147 0000279F BE[7A1B0000]        <1> 		mov esi, buftxt
  3148 000027A4 81C608000000        <1> 		add esi, 8
  3149 000027AA E8D4E7FFFF          <1> 		call print
  3150 000027AF BE[C9270000]        <1> 		mov esi, filenf2
  3151 000027B4 E8CAE7FFFF          <1> 		call print
  3152 000027B9 E91CEDFFFF          <1> 		jmp nwcmd
  3153 000027BE 5468652066696C6520- <1> filenf db "The file ",34,0
  3154 000027C7 2200                <1>
  3155 000027C9 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  3156 000027D2 6F7420626520666F75- <1>
  3157 000027DB 6E642E0D0A00        <1>
  3158                              <1> 		
  3159 000027E1 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  3160 000027EA 0A00                <1>
  3161                              <1> 
  3162 000027EC 050464756D7000      <1> 	db 5,4,"dump",0
  3163 000027F3 BE[7A1B0000]        <1> 	mov esi, buftxt
  3164 000027F8 81C605000000        <1> 	add esi, 5
  3165 000027FE B900000000          <1> 	mov ecx, 0
  3166 00002803 E859F2FFFF          <1> 	call cnvrttxt
  3167 00002808 89CF                <1> 	mov edi, ecx
  3168 0000280A 89FE                <1> 	mov esi, edi
  3169 0000280C 81C680030000        <1> 	add esi, 896
  3170 00002812 C605[0D190000]00    <1> 	mov byte [firsthexshown],0
  3171                              <1> dumphexloop:
  3172 00002819 8B0F                <1> 	mov ecx, [edi]
  3173 0000281B E802F1FFFF          <1> 	call showhex
  3174 00002820 81C704000000        <1> 	add edi, 4
  3175 00002826 39F7                <1> 	cmp edi, esi
  3176 00002828 72EF                <1> 	jb dumphexloop
  3177 0000282A E9ABECFFFF          <1> 	jmp nwcmd
  3178                              <1> 
  3179 0000282F 050474696D6500      <1> db 5,4,"time",0
  3180 00002836 E823000000          <1> 	call time
  3181 0000283B BE[482A0000]        <1> 	mov esi, timeshow
  3182 00002840 E83EE7FFFF          <1> 	call print
  3183 00002845 BE[FC530000]        <1> 	mov esi, line
  3184 0000284A E834E7FFFF          <1> 	call print
  3185 0000284F BE[522A0000]        <1> 	mov esi, dateshow
  3186 00002854 E82AE7FFFF          <1> 	call print
  3187 00002859 E97CECFFFF          <1> 	jmp nwcmd
  3188                              <1> 	time:
  3189 0000285E E86D010000          <1> 	call tstackput1
  3190 00002863 B00A                <1> 	mov al,10			;Get RTC register A
  3191 00002865 E897010000          <1> 	call tget1
  3192 0000286A A880                <1> 	test al,0x80			;Is update in progress?
  3193 0000286C 75F0                <1> 	jne time				; yes, wait
  3194                              <1> 
  3195 0000286E B000                <1> 	mov al,0			;Get seconds (00 to 59)
  3196 00002870 E88C010000          <1> 	call tget1
  3197 00002875 A2[3F2A0000]        <1> 	mov [RTCtimeSecond],al
  3198                              <1> 
  3199 0000287A B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  3200 0000287C E880010000          <1> 	call tget1
  3201 00002881 A2[402A0000]        <1> 	mov [RTCtimeMinute],al
  3202                              <1> 
  3203 00002886 B004                <1> 	mov al,0x04			;Get hours (see notes)
  3204 00002888 E874010000          <1> 	call tget1
  3205 0000288D A2[412A0000]        <1> 	mov [RTCtimeHour],al
  3206                              <1> 
  3207 00002892 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  3208 00002894 E868010000          <1> 	call tget1
  3209                              <1> ;	mov ah, 0			;;fix day
  3210                              <1> ;	mov ah, al
  3211                              <1> ;	shr ah, 4
  3212                              <1> ;	shl al, 4
  3213                              <1> ;	shr al, 4
  3214                              <1> ;	cmp al, 0
  3215                              <1> ;	jne nodecahday
  3216                              <1> ;	mov al, 10
  3217                              <1> ;	dec ah
  3218                              <1> ;nodecahday:
  3219                              <1> ;	dec al
  3220                              <1> ;	shl ah, 4
  3221                              <1> ;	or al, ah
  3222 00002899 A2[422A0000]        <1> 	mov [RTCtimeDay],al
  3223                              <1> 
  3224 0000289E B008                <1> 	mov al,0x08			;Get month (01 to 12)
  3225 000028A0 E85C010000          <1> 	call tget1
  3226 000028A5 A2[432A0000]        <1> 	mov [RTCtimeMonth],al
  3227                              <1> 
  3228 000028AA B009                <1> 	mov al,0x09			;Get year (00 to 99)
  3229 000028AC E850010000          <1> 	call tget1
  3230 000028B1 A2[442A0000]        <1> 	mov [RTCtimeYear],al
  3231                              <1> 	
  3232 000028B6 BE[482A0000]        <1> 	mov esi, timeshow
  3233 000028BB 8A2D[412A0000]      <1> 	mov ch, [RTCtimeHour]
  3234 000028C1 E846010000          <1> 	call tput1
  3235 000028C6 8A2D[402A0000]      <1> 	mov ch, [RTCtimeMinute]
  3236 000028CC E83B010000          <1> 	call tput1
  3237 000028D1 8A2D[3F2A0000]      <1> 	mov ch, [RTCtimeSecond]
  3238 000028D7 E830010000          <1> 	call tput1
  3239 000028DC BE[522A0000]        <1> 	mov esi, dateshow
  3240 000028E1 8A2D[432A0000]      <1> 	mov ch, [RTCtimeMonth]
  3241 000028E7 E820010000          <1> 	call tput1
  3242 000028EC 8A2D[422A0000]      <1> 	mov ch, [RTCtimeDay]
  3243 000028F2 E815010000          <1> 	call tput1
  3244 000028F7 B520                <1> 	mov ch, 0x20
  3245 000028F9 E80E010000          <1> 	call tput1
  3246 000028FE 4E                  <1> 	dec esi
  3247 000028FF 8A2D[442A0000]      <1> 	mov ch, [RTCtimeYear]
  3248 00002905 E802010000          <1> 	call tput1
  3249 0000290A E8DB000000          <1> 	call tstackget1
  3250 0000290F BE[482A0000]        <1> 	mov esi, timeshow
  3251 00002914 66BB0700            <1> 	mov bx, 7
  3252 00002918 B401                <1> 	mov ah, 1
  3253 0000291A B000                <1> 	mov al, 0
  3254 0000291C CD30                <1> 	int 30h
  3255                              <1> ;;get day of week
  3256                              <1> ;;add these:
  3257                              <1> ;;century value
  3258                              <1> ;;last 2 digits of year
  3259                              <1> ;;last 2 digits of year right shifted twice
  3260                              <1> ;;month table value
  3261                              <1> ;;day of the month
  3262                              <1> ;;divide these by 7
  3263                              <1> ;;the remainder is the day
  3264 0000291E B800000000          <1> 	mov eax, 0
  3265                              <1> ;;first convert the values from BCD to hex
  3266 00002923 A0[422A0000]        <1> 	mov al, [RTCtimeDay]
  3267 00002928 E88A000000          <1> 	call converttohex
  3268 0000292D 8825[452A0000]      <1> 	mov [dayhex], ah
  3269 00002933 A0[432A0000]        <1> 	mov al, [RTCtimeMonth]
  3270 00002938 E87A000000          <1> 	call converttohex
  3271 0000293D 8825[462A0000]      <1> 	mov [monthhex], ah
  3272 00002943 A0[442A0000]        <1> 	mov al, [RTCtimeYear]
  3273 00002948 E86A000000          <1> 	call converttohex
  3274 0000294D 8825[472A0000]      <1> 	mov [yearhex], ah
  3275 00002953 B800000000          <1> 	mov eax, 0
  3276 00002958 A0[472A0000]        <1> 	mov al, [yearhex]
  3277 0000295D C0E802              <1> 	shr al, 2
  3278 00002960 0205[472A0000]      <1> 	add al, [yearhex]
  3279 00002966 0506000000          <1> 	add eax, 6
  3280 0000296B BB00000000          <1> 	mov ebx, 0
  3281 00002970 8A1D[462A0000]      <1> 	mov bl, [monthhex]
  3282 00002976 FECB                <1> 	dec bl
  3283 00002978 81C3[682A0000]      <1> 	add ebx, month
  3284 0000297E B900000000          <1> 	mov ecx, 0
  3285 00002983 8A0B                <1> 	mov cl, [ebx]
  3286 00002985 01C8                <1> 	add eax, ecx
  3287 00002987 8A0D[452A0000]      <1> 	mov cl, [dayhex]
  3288 0000298D 01C8                <1> 	add eax, ecx
  3289 0000298F 66BB0700            <1> 	mov bx, 7
  3290 00002993 BA00000000          <1> 	mov edx, 0
  3291 00002998 66F7F3              <1> 	div bx
  3292 0000299B C1E202              <1> 	shl edx, 2
  3293 0000299E 81C2[742A0000]      <1> 	add edx, day
  3294 000029A4 8B32                <1> 	mov esi, [edx]
  3295 000029A6 66BB0700            <1> 	mov bx, 7
  3296 000029AA B401                <1> 	mov ah, 1
  3297 000029AC B000                <1> 	mov al, 0
  3298 000029AE CD30                <1> 	int 30h
  3299 000029B0 66B80000            <1> 	mov ax, 0
  3300 000029B4 CD30                <1> 	int 30h
  3301 000029B6 F4                  <1> 	hlt
  3302                              <1> 	
  3303                              <1> converttohex:
  3304 000029B7 88C4                <1> 	mov ah, al
  3305 000029B9 C0E804              <1> 	shr al, 4
  3306 000029BC C0E404              <1> 	shl ah, 4
  3307 000029BF C0EC04              <1> 	shr ah, 4
  3308 000029C2 3C00                <1> 	cmp al, 0
  3309 000029C4 7409                <1> 	je noconverttohex
  3310                              <1> converttohexlp:
  3311 000029C6 80C40A              <1> 	add ah, 10
  3312 000029C9 FEC8                <1> 	dec al
  3313 000029CB 3C00                <1> 	cmp al, 0
  3314 000029CD 75F7                <1> 	jne converttohexlp
  3315                              <1> noconverttohex:
  3316 000029CF C3                  <1> 	ret
  3317                              <1> 	
  3318                              <1> tstackput1:
  3319 000029D0 8935[3B2A0000]      <1> 	mov [tstack + 20], esi
  3320 000029D6 BE[272A0000]        <1> 	mov esi, tstack
  3321 000029DB 8906                <1> 	mov [esi], eax
  3322 000029DD 895E04              <1> 	mov [esi + 4], ebx
  3323 000029E0 894E08              <1> 	mov [esi + 8], ecx
  3324 000029E3 89560C              <1> 	mov [esi + 12], edx
  3325 000029E6 897E10              <1> 	mov [esi + 16], edi
  3326 000029E9 C3                  <1> 	ret
  3327                              <1> 	
  3328                              <1> tstackget1:
  3329 000029EA BE[272A0000]        <1> 	mov esi, tstack
  3330 000029EF 8B06                <1> 	mov eax, [esi]
  3331 000029F1 8B5E04              <1> 	mov ebx, [esi + 4]
  3332 000029F4 8B4E08              <1> 	mov ecx, [esi + 8]
  3333 000029F7 8B560C              <1> 	mov edx, [esi + 12]
  3334 000029FA 8B7E10              <1> 	mov edi, [esi + 16]
  3335 000029FD 8B7614              <1> 	mov esi, [esi + 20]
  3336 00002A00 C3                  <1> 	ret
  3337                              <1> 	
  3338                              <1> tget1:
  3339 00002A01 66BA7000            <1> 	mov dx, 0x70
  3340 00002A05 EE                  <1> 	out dx, al
  3341 00002A06 6642                <1> 	inc dx
  3342 00002A08 EC                  <1> 	in al, dx
  3343 00002A09 664A                <1> 	dec dx
  3344 00002A0B C3                  <1> 	ret
  3345                              <1> 	
  3346                              <1> tput1:
  3347 00002A0C 66C1E904            <1> 	shr cx, 4
  3348 00002A10 B030                <1> 	mov al, 48
  3349 00002A12 00E8                <1> 	add al, ch
  3350 00002A14 8806                <1> 	mov [esi], al
  3351 00002A16 46                  <1> 	inc esi
  3352 00002A17 B030                <1> 	mov al, 48
  3353 00002A19 C0E904              <1> 	shr cl, 4
  3354 00002A1C 00C8                <1> 	add al, cl
  3355 00002A1E 8806                <1> 	mov [esi], al
  3356 00002A20 81C602000000        <1> 	add esi, 2
  3357 00002A26 C3                  <1> 	ret
  3358                              <1> 		
  3359 00002A27 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  3360 00002A30 000000000000000000- <1>
  3361 00002A39 000000000000        <1>
  3362 00002A3F 00                  <1> 	RTCtimeSecond db 0
  3363 00002A40 00                  <1> 	RTCtimeMinute db 0
  3364 00002A41 00                  <1> 	RTCtimeHour db 0
  3365 00002A42 00                  <1> 	RTCtimeDay db 0
  3366 00002A43 00                  <1> 	RTCtimeMonth db 0
  3367 00002A44 00                  <1> 	RTCtimeYear db 0
  3368 00002A45 00                  <1> 	dayhex db 0
  3369 00002A46 00                  <1> 	monthhex db 0
  3370 00002A47 00                  <1> 	yearhex db 0
  3371 00002A48 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  3372 00002A51 0A                  <1>
  3373 00002A52 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  3374 00002A5B 300D0A00            <1>
  3375                              <1> 	oldcentury:	;;from 1700 to 1900
  3376 00002A5F 040200              <1> 	db 4,2,0
  3377                              <1> 	century:	;;from 2000 to 2500
  3378 00002A62 060402000604        <1> 	db 6,4,2,0,6,4
  3379                              <1> 	month:
  3380 00002A68 000303060104060205- <1> 	db 0,3,3,6,1,4,6,2,5,0,3,5
  3381 00002A71 000305              <1>
  3382                              <1> 	day:
  3383 00002A74 [902A0000]          <1> 	dd sunday
  3384 00002A78 [992A0000]          <1> 	dd monday
  3385 00002A7C [A22A0000]          <1> 	dd tuesday
  3386 00002A80 [AC2A0000]          <1> 	dd wednesday
  3387 00002A84 [B82A0000]          <1> 	dd thursday
  3388 00002A88 [C32A0000]          <1> 	dd friday
  3389 00002A8C [CC2A0000]          <1> 	dd saturday
  3390                              <1> sunday:
  3391 00002A90 53756E6461790D0A00  <1> 	db "Sunday",13,10,0
  3392                              <1> monday:
  3393 00002A99 4D6F6E6461790D0A00  <1> 	db "Monday",13,10,0
  3394                              <1> tuesday:
  3395 00002AA2 547565736461790D0A- <1> 	db "Tuesday",13,10,0
  3396 00002AAB 00                  <1>
  3397                              <1> wednesday:
  3398 00002AAC 5765646E6573646179- <1> 	db "Wednesday",13,10,0
  3399 00002AB5 0D0A00              <1>
  3400                              <1> thursday:
  3401 00002AB8 54687572736461790D- <1> 	db "Thursday",13,10,0
  3402 00002AC1 0A00                <1>
  3403                              <1> friday:
  3404 00002AC3 4672696461790D0A00  <1> 	db "Friday",13,10,0
  3405                              <1> saturday:
  3406 00002ACC 53617475726461790D- <1> 	db "Saturday",13,10,0
  3407 00002AD5 0A00                <1>
  3408                              <1> 
  3409 00002AD7 0504637075696400    <1> db 5,4,"cpuid",0
  3410 00002ADF B800000000          <1> 	mov eax, 0
  3411 00002AE4 0FA2                <1> 	cpuid
  3412 00002AE6 891D[3B2B0000]      <1> 	mov [cpuidbuf], ebx
  3413 00002AEC 8915[3F2B0000]      <1> 	mov [cpuidbuf + 4], edx
  3414 00002AF2 890D[432B0000]      <1> 	mov [cpuidbuf + 8], ecx
  3415 00002AF8 BE[3B2B0000]        <1> 	mov esi, cpuidbuf
  3416 00002AFD E881E4FFFF          <1> 	call print
  3417 00002B02 BE[FC530000]        <1> 	mov esi, line
  3418 00002B07 E877E4FFFF          <1> 	call print
  3419 00002B0C B801000000          <1> 	mov eax, 1
  3420 00002B11 0FA2                <1> 	cpuid
  3421 00002B13 89C1                <1> 	mov ecx, eax
  3422 00002B15 C605[0D190000]02    <1> 	mov byte [firsthexshown], 2
  3423 00002B1C E801EEFFFF          <1> 	call showhex
  3424 00002B21 B808000080          <1> 	mov eax, 0x80000008
  3425 00002B26 0FA2                <1> 	cpuid
  3426 00002B28 89C1                <1> 	mov ecx, eax
  3427 00002B2A C605[0D190000]02    <1> 	mov byte [firsthexshown], 2
  3428 00002B31 E8ECEDFFFF          <1> 	call showhex
  3429 00002B36 E99FE9FFFF          <1> 	jmp nwcmd
  3430                              <1> 	
  3431 00002B3B 00<rept>            <1> cpuidbuf times 13 db 0
  3432                              <1> cpuidvendorend:
  3433                              <1> progend:		;programs end here	
  3434                              <1> batchprogend:
  3435                                      %include 'source/input.asm'
  3436                              <1> PS2SET:
  3437 00002B48 B0A8                <1>   mov  al, 0xa8		; enable mouse port
  3438 00002B4A E664                <1>   out  0x64, al		; write to keyboardcontroller
  3439 00002B4C E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  3440 00002B51 C3                  <1> ret
  3441                              <1> 
  3442                              <1> CHKPRT:
  3443 00002B52 66B96400            <1>   mov  cx, 100
  3444                              <1>  .again:
  3445 00002B56 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3446 00002B58 A802                <1>   test al, 2		; Check if input buffer is empty
  3447 00002B5A 7402                <1>   je .go
  3448 00002B5C E2F8                <1>   loop .again
  3449                              <1>  .go:
  3450 00002B5E C3                  <1> ret
  3451                              <1> 
  3452                              <1> WMOUS:
  3453 00002B5F B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  3454 00002B61 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3455 00002B63 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3456 00002B68 C3                  <1> ret
  3457                              <1> 
  3458                              <1> MBUFFUL:
  3459 00002B69 66B96400            <1>   mov cx, 100
  3460                              <1>  .mn:
  3461 00002B6D E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3462 00002B6F A820                <1>   test al, 0x20		; check if mouse output buffer is full
  3463 00002B71 7402                <1>   jz  .mnn
  3464 00002B73 E2F8                <1>   loop .mn
  3465                              <1>  .mnn:
  3466 00002B75 C3                  <1> ret
  3467                              <1> 
  3468                              <1> 
  3469                              <1> ACTMOUS:
  3470 00002B76 E8E4FFFFFF          <1>   call WMOUS
  3471 00002B7B B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  3472 00002B7D E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  3473 00002B7F E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3474 00002B84 E801000000          <1>   call CHKMOUS		; check if a byte is available
  3475 00002B89 C3                  <1> ret
  3476                              <1> 
  3477                              <1> CHKMOUS:
  3478 00002B8A B300                <1>   mov  bl, 0
  3479 00002B8C 66B96400            <1>   mov cx, 100
  3480                              <1>  .vrd:
  3481 00002B90 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3482 00002B92 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  3483 00002B94 7504                <1>   jnz .yy
  3484 00002B96 E2F8                <1>   loop .vrd
  3485 00002B98 B301                <1>   mov  bl, 1
  3486                              <1>  .yy:
  3487 00002B9A C3                  <1> ret
  3488                              <1> 
  3489                              <1> GETB:
  3490                              <1>  .cagain:
  3491 00002B9B E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  3492 00002BA0 08DB                <1>   or bl, bl
  3493 00002BA2 75F7                <1>   jnz .cagain
  3494 00002BA4 B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  3495 00002BA6 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3496 00002BA8 E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3497 00002BAD 6631C0              <1>   xor  ax, ax
  3498 00002BB0 E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3499 00002BB2 88C2                <1>   mov  dl, al
  3500 00002BB4 B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  3501 00002BB6 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3502 00002BB8 E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3503 00002BBD 88D0                <1>   mov  al, dl
  3504 00002BBF C3                  <1> ret
  3505                              <1> 
  3506 00002BC0 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  3507 00002BC1 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  3508 00002BC2 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  3509 00002BC3 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  3510 00002BC4 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  3511                              <1> 
  3512 00002BC5 00                  <1> specialkey db 0
  3513                              <1> 
  3514                              <1> 	guistartin:
  3515 00002BC6 B800000000          <1> 		mov eax, 0
  3516 00002BCB A2[C52B0000]        <1> 		mov [specialkey], al
  3517 00002BD0 66A3[3F0F0000]      <1> 		mov [lastkey], ax
  3518 00002BD6 E464                <1> 		in al, 64h ; Status
  3519 00002BD8 A801                <1> 		test al, 1 ; output buffer full?
  3520 00002BDA 74EA                <1> 		jz guistartin
  3521 00002BDC A820                <1> 		test al, 20h ; PS2-Mouse?
  3522 00002BDE 0F8577010000        <1> 		jnz near maincall2
  3523                              <1> 	guigetkey:
  3524 00002BE4 E460                <1> 		in al, 60h
  3525 00002BE6 88C4                <1> 		mov ah, al
  3526 00002BE8 B000                <1> 		mov al, 0
  3527 00002BEA 8825[400F0000]      <1> 		mov [lastkey + 1], ah
  3528 00002BF0 88E0                <1> 		mov al, ah
  3529 00002BF2 BF[9E2F0000]        <1> 		mov edi, scancode
  3530                              <1> 	guisearchscan: 
  3531 00002BF7 3C3A                <1> 		cmp al, 3Ah
  3532 00002BF9 7315                <1> 		jae guiscanother
  3533 00002BFB B400                <1> 		mov ah, 0
  3534 00002BFD D0E0                <1> 		shl al, 1
  3535 00002BFF 01C7                <1> 		add edi, eax
  3536 00002C01 D0E8                <1> 		shr al, 1
  3537 00002C03 8A27                <1> 		mov ah, [edi]
  3538 00002C05 80FC00              <1> 		cmp ah, 0
  3539 00002C08 7406                <1> 		je guiscanother
  3540 00002C0A E99C000000          <1> 		jmp guiscanfound
  3541 00002C0F 00                  <1> guiupper db 0
  3542                              <1> guiscanother:
  3543 00002C10 88C4                <1> 		mov ah, al
  3544 00002C12 B000                <1> 		mov al, 0
  3545 00002C14 66A3[3F0F0000]      <1> 		mov [lastkey], ax
  3546 00002C1A 80FCE0              <1> 		cmp ah, 0E0h
  3547 00002C1D 0F845A000000        <1> 		je near guigetkeyspecial
  3548 00002C23 B0E0                <1> 		mov al, 0xE0
  3549 00002C25 3805[C52B0000]      <1> 		cmp [specialkey], al
  3550 00002C2B 7507                <1> 		jne nospecialkey
  3551 00002C2D 66A3[3F0F0000]      <1> 		mov [lastkey], ax
  3552 00002C33 C3                  <1> 		ret
  3553                              <1> nospecialkey:
  3554                              <1> 		;cmp ah, 4Dh
  3555                              <1> 		;je near nextimage
  3556 00002C34 80FC2A              <1> 		cmp ah, 2Ah
  3557 00002C37 0F8455000000        <1> 		je near guishifton
  3558 00002C3D 80FC36              <1> 		cmp ah, 36h
  3559 00002C40 0F844C000000        <1> 		je near guishifton
  3560 00002C46 80FC1C              <1> 		cmp ah, 1Ch
  3561 00002C49 0F845B000000        <1> 		je near guientdown
  3562 00002C4F 80FCAA              <1> 		cmp ah, 0AAh
  3563 00002C52 0F8446000000        <1> 		je near guishiftoff
  3564 00002C58 80FCB6              <1> 		cmp ah, 0B6h
  3565 00002C5B 0F843D000000        <1> 		je near guishiftoff
  3566 00002C61 80FC3A              <1> 		cmp ah, 3Ah
  3567 00002C64 0F8461000000        <1> 		je near guicaps
  3568 00002C6A 80FC45              <1> 		cmp ah, 0x45
  3569 00002C6D 0F8466000000        <1> 		je near guinumlock
  3570 00002C73 80FC46              <1> 		cmp ah, 0x46
  3571 00002C76 0F8475000000        <1> 		je near guiscrolllock
  3572 00002C7C C3                  <1> 		ret
  3573                              <1> 	guigetkeyspecial:
  3574 00002C7D B0E0                <1> 		mov al, 0xE0
  3575 00002C7F A2[C52B0000]        <1> 		mov [specialkey], al
  3576 00002C84 E95BFFFFFF          <1> 		jmp guigetkey
  3577                              <1> 	guishift:
  3578 00002C89 A0[0F2C0000]        <1> 		mov al, [guiupper]
  3579 00002C8E 3C01                <1> 		cmp al, 1
  3580 00002C90 730C                <1> 		jae guishiftoff
  3581                              <1> 	guishifton:
  3582 00002C92 C605[0F2C0000]01    <1> 		mov byte [guiupper], 1
  3583 00002C99 E928FFFFFF          <1> 		jmp guistartin
  3584                              <1> 	guishiftoff:
  3585 00002C9E C605[0F2C0000]00    <1> 		mov byte [guiupper], 0
  3586 00002CA5 E91CFFFFFF          <1> 		jmp guistartin
  3587                              <1> 	guientdown:
  3588 00002CAA C3                  <1> 		ret
  3589                              <1> 	guiscanfound:
  3590 00002CAB 81C701000000        <1> 		add edi, 1
  3591 00002CB1 803D[0F2C0000]01    <1> 		cmp byte [guiupper], 1
  3592 00002CB8 7306                <1> 		jae uppercasegui
  3593 00002CBA 81EF01000000        <1> 		sub edi, 1
  3594                              <1> uppercasegui:
  3595 00002CC0 8A07                <1> 		mov al,[edi]
  3596 00002CC2 A2[3F0F0000]        <1> 		mov [lastkey], al
  3597 00002CC7 C3                  <1> 		ret
  3598                              <1> 		
  3599 00002CC8 00                  <1> keyboardstatus db 0
  3600 00002CC9 00                  <1> numlockstatus db 0
  3601 00002CCA 00                  <1> scrolllockstatus db 0
  3602                              <1> 	guicaps:
  3603 00002CCB 8035[C82C0000]04    <1> 		xor byte [keyboardstatus], 00000100b
  3604 00002CD2 E832000000          <1> 		call updatekblights
  3605 00002CD7 EBB0                <1> 		jmp guishift
  3606                              <1> 		
  3607                              <1> 	guinumlock:
  3608 00002CD9 8035[C82C0000]02    <1> 		xor byte [keyboardstatus], 00000010b
  3609 00002CE0 8035[C92C0000]01    <1> 		xor byte [numlockstatus], 1
  3610 00002CE7 E81D000000          <1> 		call updatekblights
  3611 00002CEC E9D5FEFFFF          <1> 		jmp guistartin
  3612                              <1> 	
  3613                              <1> 	guiscrolllock:
  3614 00002CF1 8035[C82C0000]01    <1> 		xor byte [keyboardstatus], 00000001b
  3615 00002CF8 8035[CA2C0000]01    <1> 		xor byte [scrolllockstatus], 1
  3616 00002CFF E805000000          <1> 		call updatekblights
  3617 00002D04 E9BDFEFFFF          <1> 		jmp guistartin
  3618                              <1> 		
  3619                              <1> 	updatekblights:
  3620 00002D09 B0ED                <1> 		mov al, 0xED
  3621 00002D0B 66BA6000            <1> 		mov dx, 0x60
  3622 00002D0F EE                  <1> 		out dx, al
  3623                              <1> 	chkkbdack:
  3624 00002D10 EC                  <1> 		in al, dx
  3625 00002D11 3CFA                <1> 		cmp al, 0xFA
  3626 00002D13 75FB                <1> 		jne chkkbdack
  3627 00002D15 A0[C82C0000]        <1> 		mov al, [keyboardstatus]
  3628 00002D1A EE                  <1> 		out dx, al
  3629 00002D1B C3                  <1> 		ret
  3630                              <1> 	
  3631                              <1> 	cursorgui:
  3632 00002D1C 803D[67420000]01    <1> 		cmp byte [mouseon], 1
  3633 00002D23 0F8432000000        <1> 		je near maincall2
  3634 00002D29 803D[AB310000]00    <1> 		cmp byte [guion], 0
  3635 00002D30 0F8474FFFFFF        <1> 		je guientdown
  3636                              <1> 	initmouse:
  3637 00002D36 803D[AB310000]00    <1> 		cmp byte [guion], 0
  3638 00002D3D 7405                <1> 		je noswmsposinit
  3639 00002D3F E834050000          <1> 		call switchmousepos2
  3640                              <1> 	noswmsposinit:
  3641 00002D44 E8FFFDFFFF          <1> 	  	call PS2SET
  3642 00002D49 E828FEFFFF          <1> 		call ACTMOUS
  3643 00002D4E C605[67420000]01    <1> 		mov byte [mouseon],1
  3644 00002D55 E841FEFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  3645                              <1> 				;;If the bytes are mixed up,
  3646                              <1> 				;;remove this line or add another of this line.
  3647                              <1> 		;call GETB
  3648 00002D5A C3                  <1> 		ret
  3649                              <1> 	maincall2:
  3650 00002D5B 803D[67420000]01    <1> 		  cmp byte [mouseon], 1
  3651 00002D62 75D2                <1> 		  jne initmouse
  3652 00002D64 E832FEFFFF          <1> 		  call GETB
  3653 00002D69 88C3                <1> 		  mov  bl, al
  3654 00002D6B 80E301              <1> 		  and  bl, 1
  3655 00002D6E 881D[C02B0000]      <1> 		  mov  BYTE [LBUTTON], bl
  3656 00002D74 88C3                <1> 		  mov  bl, al
  3657 00002D76 80E302              <1> 		  and  bl, 2
  3658 00002D79 D0EB                <1> 		  shr  bl, 1
  3659 00002D7B 881D[C12B0000]      <1> 		  mov  BYTE [RBUTTON], bl
  3660 00002D81 88C3                <1> 		  mov  bl, al
  3661 00002D83 80E304              <1> 		  and  bl, 4
  3662 00002D86 C0EB02              <1> 		  shr  bl, 2
  3663 00002D89 881D[C22B0000]      <1> 		  mov  BYTE [MBUTTON], bl
  3664 00002D8F E807FEFFFF          <1> 		  call GETB
  3665 00002D94 A2[C32B0000]        <1> 		  mov  BYTE [XCOORD], al
  3666 00002D99 E8FDFDFFFF          <1> 		  call GETB
  3667 00002D9E A2[C42B0000]        <1> 		  mov  BYTE [YCOORD], al
  3668                              <1> 
  3669                              <1> 	showpixelcursor:
  3670 00002DA3 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  3671 00002DAA 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  3672 00002DB1 668915[F92E0000]    <1> 		mov [lastmouseposition], dx
  3673 00002DB8 66890D[FB2E0000]    <1> 		mov [lastmouseposition + 2], cx
  3674 00002DBF A0[C32B0000]        <1> 		mov al, [XCOORD]
  3675 00002DC4 3C80                <1> 		cmp al, 128
  3676 00002DC6 730C                <1> 		jae subxcoord
  3677 00002DC8 00C0                <1> 		add al, al
  3678 00002DCA B400                <1> 		mov ah, 0
  3679 00002DCC 6601C2              <1> 		add dx, ax
  3680 00002DCF E90B000000          <1> 		jmp subxcoorddn
  3681                              <1> 	subxcoord:
  3682 00002DD4 00C0                <1> 		add al, al
  3683 00002DD6 B300                <1> 		mov bl, 0
  3684 00002DD8 28C3                <1> 		sub bl, al
  3685 00002DDA B700                <1> 		mov bh, 0
  3686 00002DDC 6629DA              <1> 		sub dx, bx
  3687                              <1> 	subxcoorddn:
  3688 00002DDF 8A1D[C42B0000]      <1> 		mov bl, [YCOORD]
  3689 00002DE5 B000                <1> 		mov al, 0
  3690 00002DE7 28D8                <1> 		sub al, bl
  3691 00002DE9 3C80                <1> 		cmp al, 128
  3692 00002DEB 730A                <1> 		jae subycoord
  3693 00002DED B400                <1> 		mov ah, 0
  3694 00002DEF 6601C1              <1> 		add cx, ax
  3695 00002DF2 E909000000          <1> 		jmp subycoorddn
  3696                              <1> 	subycoord:
  3697 00002DF7 B300                <1> 		mov bl, 0
  3698 00002DF9 28C3                <1> 		sub bl, al
  3699 00002DFB B700                <1> 		mov bh, 0
  3700 00002DFD 6629D9              <1> 		sub cx, bx
  3701                              <1> 	subycoorddn:
  3702 00002E00 6681FA204E          <1> 		cmp dx, 20000
  3703 00002E05 7604                <1> 		jbe nooriginx2
  3704 00002E07 66BA0000            <1> 		mov dx, 0
  3705                              <1> 	nooriginx2:
  3706 00002E0B 6681F9204E          <1> 		cmp cx, 20000
  3707 00002E10 7604                <1> 		jbe nooriginy2
  3708 00002E12 66B90000            <1> 		mov cx, 0
  3709                              <1> 	nooriginy2:
  3710 00002E16 6681FA0000          <1> 		cmp dx, 0
  3711 00002E1B 7415                <1> 		je nofixxcolumn2
  3712 00002E1D 663B15[0F400000]    <1> 		cmp dx, [resolutionx2]
  3713 00002E24 720C                <1> 		jb nofixxcolumn2
  3714 00002E26 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  3715 00002E2D 6681EA0200          <1> 		sub dx, 2
  3716                              <1> 	nofixxcolumn2:
  3717 00002E32 6681F90000          <1> 		cmp cx, 0
  3718 00002E37 7415                <1> 		je nofixyrow2
  3719 00002E39 663B0D[0B400000]    <1> 		cmp cx, [resolutiony]
  3720 00002E40 720C                <1> 		jb nofixyrow2
  3721 00002E42 668B0D[0B400000]    <1> 		mov cx, [resolutiony]
  3722 00002E49 6681E90100          <1> 		sub cx, 1
  3723                              <1> 	nofixyrow2:
  3724 00002E4E 668915[FD2E0000]    <1> 		mov [mousecursorposition], dx
  3725 00002E55 66890D[FF2E0000]    <1> 		mov [mousecursorposition + 2], cx
  3726 00002E5C 803D[AB310000]00    <1> 		cmp byte [guion], 0
  3727 00002E63 0F8498000000        <1> 		je near termmouse
  3728 00002E69 E8A1030000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3729 00002E6E 803D[C02B0000]01    <1> 		cmp byte [LBUTTON], 1
  3730 00002E75 0F847A040000        <1> 		je near clickicon
  3731 00002E7B 803D[C12B0000]01    <1> 		cmp byte [RBUTTON], 1
  3732 00002E82 0F846D040000        <1> 		je near clickicon
  3733 00002E88 A0[E2320000]        <1> 		mov al, [pbutton]
  3734 00002E8D C705[E5320000]0000- <1> 		mov dword [dragging], 0
  3735 00002E95 0000                <1>
  3736 00002E97 3C00                <1> 		cmp al, 0
  3737 00002E99 740F                <1> 		je nopreviousbutton
  3738 00002E9B E80C030000          <1> 		call clearmousecursor
  3739 00002EA0 E88A090000          <1> 		call reloadallgraphics
  3740                              <1> 	windowtermcopyend:
  3741 00002EA5 E8CE030000          <1> 		call switchmousepos2
  3742                              <1> 	nopreviousbutton:
  3743 00002EAA B000                <1> 		mov al, 0
  3744 00002EAC A2[E2320000]        <1> 		mov [pbutton], al
  3745 00002EB1 A0[C02B0000]        <1> 		mov al, [LBUTTON]
  3746 00002EB6 A2[E3320000]        <1> 		mov [pLBUTTON], al
  3747 00002EBB A0[C12B0000]        <1> 		mov al, [RBUTTON]
  3748 00002EC0 A2[E4320000]        <1> 		mov [pRBUTTON], al
  3749 00002EC5 B900000000          <1> 		mov ecx, 0
  3750 00002ECA BA00000000          <1> 		mov edx, 0
  3751 00002ECF 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  3752 00002ED6 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  3753 00002EDD 66BB18C7            <1> 		mov bx, 1100011100011000b
  3754 00002EE1 B400                <1> 		mov ah, 0
  3755 00002EE3 B080                <1> 		mov al, 128
  3756 00002EE5 C605[A8310000]01    <1> 		mov byte [showcursorfonton], 1
  3757 00002EEC E82E110000          <1> 		call showfontvesa
  3758 00002EF1 C605[A8310000]00    <1> 		mov byte [showcursorfonton], 0
  3759 00002EF8 C3                  <1> 		ret
  3760                              <1> 
  3761 00002EF9 84008400            <1> lastmouseposition dw 132,132
  3762 00002EFD 84008400            <1> mousecursorposition dw 132,132	
  3763                              <1> 
  3764                              <1> termmouse:
  3765 00002F01 BE[8F1C0000]        <1> 		mov esi, videobuf2
  3766 00002F06 BA00000000          <1> 		mov edx, 0
  3767 00002F0B 668B15[F92E0000]    <1> 		mov dx, [lastmouseposition]
  3768 00002F12 668B0D[FB2E0000]    <1> 		mov cx, [lastmouseposition + 2]
  3769 00002F19 66A1[9C2F0000]      <1> 		mov ax, [cursorcache]
  3770 00002F1F 663D0000            <1> 		cmp ax, 0
  3771 00002F23 7426                <1> 		je nocopycursorcache
  3772 00002F25 66C1E104            <1> 		shl cx, 4
  3773 00002F29 66C1E203            <1> 		shl dx, 3
  3774 00002F2D 01D6                <1> 		add esi, edx
  3775 00002F2F 66BA0000            <1> 		mov dx, 0
  3776 00002F33 8A15[970D0000]      <1> 		mov dl, [charxy]
  3777 00002F39 6641                <1> 		inc cx
  3778                              <1> termmousecplp1:
  3779 00002F3B 01D6                <1> 		add esi, edx
  3780 00002F3D 6649                <1> 		dec cx
  3781 00002F3F 6681F90000          <1> 		cmp cx, 0
  3782 00002F44 75F5                <1> 		jne termmousecplp1
  3783 00002F46 29D6                <1> 		sub esi, edx
  3784 00002F48 668906              <1> 		mov [esi], ax
  3785                              <1> nocopycursorcache:
  3786 00002F4B BE[8F1C0000]        <1> 		mov esi, videobuf2
  3787 00002F50 BA00000000          <1> 		mov edx, 0
  3788 00002F55 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  3789 00002F5C 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  3790 00002F63 66C1E104            <1> 		shl cx, 4
  3791 00002F67 66C1E203            <1> 		shl dx, 3
  3792 00002F6B 01D6                <1> 		add esi, edx
  3793 00002F6D 66BA0000            <1> 		mov dx, 0
  3794 00002F71 8A15[970D0000]      <1> 		mov dl, [charxy]
  3795 00002F77 6641                <1> 		inc cx
  3796                              <1> termmousecplp2:
  3797 00002F79 01D6                <1> 		add esi, edx
  3798 00002F7B 6649                <1> 		dec cx
  3799 00002F7D 6681F90000          <1> 		cmp cx, 0
  3800 00002F82 75F5                <1> 		jne termmousecplp2
  3801 00002F84 29D6                <1> 		sub esi, edx
  3802 00002F86 668B06              <1> 		mov ax, [esi]
  3803 00002F89 66A3[9C2F0000]      <1> 		mov [cursorcache], ax
  3804 00002F8F B080                <1> 		mov al, 128
  3805 00002F91 B407                <1> 		mov ah, 7
  3806 00002F93 668906              <1> 		mov [esi], ax
  3807 00002F96 E829E3FFFF          <1> 		call termcopy
  3808 00002F9B C3                  <1> 		ret
  3809 00002F9C 0000                <1> cursorcache db 0,0
  3810                              <1> 	
  3811                              <1> scancode:
  3812 00002F9E 0000                <1> 	db 0,0		;,0h
  3813 00002FA0 0000                <1> 	db 0,0		;,1h
  3814 00002FA2 3121                <1> 	db '1','!'	;,2h
  3815 00002FA4 3240                <1> 	db '2','@'	;,3h
  3816 00002FA6 3323                <1> 	db '3','#'	;,4h
  3817 00002FA8 3424                <1> 	db '4','$'	;,5h
  3818 00002FAA 3525                <1> 	db '5','%'	;,6h
  3819 00002FAC 365E                <1> 	db '6','^'	;,7h
  3820 00002FAE 3726                <1> 	db '7','&'	;,8h
  3821 00002FB0 382A                <1> 	db '8','*'	;,9h
  3822 00002FB2 3928                <1> 	db '9','('	;,0Ah
  3823 00002FB4 3029                <1> 	db '0',')'	;,0Bh
  3824 00002FB6 2D5F                <1> 	db '-','_'	;,0Ch
  3825 00002FB8 3D2B                <1> 	db '=','+'	;,0Dh
  3826 00002FBA 0808                <1> 	db 8,8		;,0Eh
  3827 00002FBC 0000                <1> 	db 0,0		;,0Fh
  3828 00002FBE 7151                <1> 	db 'q','Q'	;,10h
  3829 00002FC0 7757                <1> 	db 'w','W'	;,11h
  3830 00002FC2 6545                <1> 	db 'e','E'	;,12h
  3831 00002FC4 7252                <1> 	db 'r','R'	;,13h
  3832 00002FC6 7454                <1> 	db 't','T'	;,14h
  3833 00002FC8 7959                <1> 	db 'y','Y'	;,15h
  3834 00002FCA 7555                <1> 	db 'u','U'	;,16h
  3835 00002FCC 6949                <1> 	db 'i','I'	;,17h
  3836 00002FCE 6F4F                <1> 	db 'o','O'	;,18h
  3837 00002FD0 7050                <1> 	db 'p','P'	;,19h
  3838 00002FD2 5B7B                <1> 	db '[','{'	;,1Ah
  3839 00002FD4 5D7D                <1> 	db ']','}'	;,1Bh
  3840 00002FD6 0000                <1> 	db 0,0		;,1Ch
  3841 00002FD8 0000                <1> 	db 0,0		;,1Dh
  3842 00002FDA 6141                <1> 	db 'a','A'	;,1Eh
  3843 00002FDC 7353                <1> 	db 's','S'	;,1Fh
  3844 00002FDE 6444                <1> 	db 'd','D'	;,20h
  3845 00002FE0 6646                <1> 	db 'f','F'	;,21h
  3846 00002FE2 6747                <1> 	db 'g','G'	;,22h
  3847 00002FE4 6848                <1> 	db 'h','H'	;,23h
  3848 00002FE6 6A4A                <1> 	db 'j','J'	;,24h
  3849 00002FE8 6B4B                <1> 	db 'k','K'	;,25h
  3850 00002FEA 6C4C                <1> 	db 'l','L'	;,26h
  3851 00002FEC 3B3A                <1> 	db ';',':'	;,27h
  3852 00002FEE 2722                <1> 	db 27h,22h	;,28h
  3853 00002FF0 607E                <1> 	db '`','~'	;,29h
  3854 00002FF2 0000                <1> 	db 0,0		;,2Ah
  3855 00002FF4 5C7C                <1> 	db '\','|'	;,2Bh
  3856 00002FF6 7A5A                <1> 	db 'z','Z'	;,2Ch
  3857 00002FF8 7858                <1> 	db 'x','X'	;,2Dh
  3858 00002FFA 6343                <1> 	db 'c','C'	;,2Eh
  3859 00002FFC 7656                <1> 	db 'v','V'	;,2Fh
  3860 00002FFE 6242                <1> 	db 'b','B'	;,30h
  3861 00003000 6E4E                <1> 	db 'n','N'	;,31h
  3862 00003002 6D4D                <1> 	db 'm','M'	;,32h
  3863 00003004 2C3C                <1> 	db ',','<'	;,33h
  3864 00003006 2E3E                <1> 	db '.','>'	;,34h
  3865 00003008 2F3F                <1> 	db '/','?'	;,35h
  3866 0000300A 0000                <1> 	db 0,0		;,36h
  3867 0000300C 0000                <1> 	db 0,0		;,37h
  3868 0000300E 0000                <1> 	db 0,0		;,38h
  3869 00003010 2020                <1> 	db ' ',' '	;,39h
  3870                              <1> noscan:
  3871                                      %include 'source/gui.asm'
  3872                              <1> guiclear:
  3873 00003012 8B3D[6A5E0000]      <1> 	mov edi, [physbaseptr]
  3874 00003018 668B15[0D400000]    <1> 	mov dx, [resolutionx]
  3875 0000301F 668B0D[0B400000]    <1> 	mov cx, [resolutiony]
  3876 00003026 66A1[4F300000]      <1> 	mov ax, [background]
  3877                              <1> guiclearloop:
  3878 0000302C 668907              <1> 	mov [edi], ax
  3879 0000302F 81C702000000        <1> 	add edi, 2
  3880 00003035 664A                <1> 	dec dx
  3881 00003037 6681FA0000          <1> 	cmp dx, 0
  3882 0000303C 77EE                <1> 	ja guiclearloop
  3883 0000303E 6649                <1> 	dec cx
  3884 00003040 668B15[0D400000]    <1> 	mov dx, [resolutionx]
  3885 00003047 6681F90000          <1> 	cmp cx, 0
  3886 0000304C 77DE                <1> 	ja guiclearloop
  3887 0000304E C3                  <1> 	ret
  3888                              <1> 
  3889 0000304F CF7B                <1> background dw 0111101111001111b
  3890                              <1> 
  3891                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  3892 00003051 B800000000          <1> 	mov eax, 0
  3893 00003056 BB00000000          <1> 	mov ebx, 0
  3894 0000305B B900000000          <1> 	mov ecx, 0
  3895 00003060 BA00000000          <1> 	mov edx, 0
  3896 00003065 8B3D[6A5E0000]      <1> 	mov edi, [physbaseptr]
  3897 0000306B 668B15[0D400000]    <1> 	mov dx, [resolutionx]
  3898 00003072 668B0D[0B400000]    <1> 	mov cx, [resolutiony]
  3899 00003079 668B1D[4F300000]    <1> 	mov bx, [background]
  3900                              <1> guiclearloop2:
  3901 00003080 66891F              <1> 	mov [edi], bx
  3902 00003083 81C702000000        <1> 	add edi, 2
  3903 00003089 664A                <1> 	dec dx
  3904 0000308B 6681FA0000          <1> 	cmp dx, 0
  3905 00003090 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  3906 00003096 6649                <1> 	dec cx
  3907 00003098 668B15[0D400000]    <1> 	mov dx, [resolutionx]
  3908 0000309F 6681F90000          <1> 	cmp cx, 0
  3909 000030A4 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  3910 000030AA C605[AB310000]01    <1> 	mov byte [guion], 1
  3911 000030B1 C605[AA310000]00    <1> 	mov byte [mouseselecton], 0
  3912 000030B8 B800000000          <1> 	mov eax, 0
  3913 000030BD BB00000000          <1> 	mov ebx, 0
  3914 000030C2 B900000000          <1> 	mov ecx, 0
  3915 000030C7 BA00000000          <1> 	mov edx, 0
  3916                              <1> 	
  3917 000030CC BE[7C420000]        <1> 	mov esi, pacmsg
  3918 000030D1 66B80000            <1> 	mov ax, 0
  3919 000030D5 BB00000000          <1> 	mov ebx, 0
  3920 000030DA 66B99000            <1> 	mov cx, 144
  3921 000030DE 66BA0400            <1> 	mov dx, 4
  3922 000030E2 E88F0A0000          <1> 	call showstring
  3923                              <1> 	
  3924 000030E7 BE[92430000]        <1> 	mov esi, interneticon
  3925 000030EC 66B80000            <1> 	mov ax, 0
  3926 000030F0 BB[F1420000]        <1> 	mov ebx, noie
  3927 000030F5 66B91800            <1> 	mov cx, 24
  3928 000030F9 66BA0400            <1> 	mov dx, 4
  3929 000030FD E8300E0000          <1> 	call showicon
  3930                              <1> 	
  3931 00003102 BE[14440000]        <1> 	mov esi, wordicon
  3932 00003107 66B80000            <1> 	mov ax, 0
  3933 0000310B BB00000000          <1> 	mov ebx, 0
  3934 00003110 66B91800            <1> 	mov cx, 24
  3935 00003114 66BA3000            <1> 	mov dx, 48
  3936 00003118 E8150E0000          <1> 	call showicon
  3937                              <1> 	
  3938 0000311D BE[96440000]        <1> 	mov esi, pacmanpellet
  3939 00003122 66B80000            <1> 	mov ax, 0
  3940 00003126 BB00000000          <1> 	mov ebx, 0
  3941 0000312B 66B94000            <1> 	mov cx, 64
  3942 0000312F 66BA0400            <1> 	mov dx, 4
  3943 00003133 E8FA0D0000          <1> 	call showicon
  3944                              <1> 	
  3945 00003138 BE[9A450000]        <1> 	mov esi, pacman
  3946 0000313D 66B80000            <1> 	mov ax, 0
  3947 00003141 BB[D6420000]        <1> 	mov ebx, pacmannomnom
  3948 00003146 66B94000            <1> 	mov cx, 64
  3949 0000314A 66BA3000            <1> 	mov dx, 48
  3950 0000314E E8DF0D0000          <1> 	call showicon
  3951                              <1> 	
  3952 00003153 BE[18450000]        <1> 	mov esi, ghostie
  3953 00003158 66B80000            <1> 	mov ax, 0
  3954 0000315C BB[BB420000]        <1> 	mov ebx, boo
  3955 00003161 66B96C00            <1> 	mov cx, 108
  3956 00003165 66BA0400            <1> 	mov dx, 4
  3957 00003169 E8C40D0000          <1> 	call showicon
  3958                              <1> 
  3959 0000316E BE[68420000]        <1> 	mov esi, start
  3960 00003173 668B0D[0B400000]    <1> 	mov cx, [resolutiony]
  3961 0000317A 6681E91000          <1> 	sub cx, 16
  3962 0000317F 66BA0200            <1> 	mov dx, 2
  3963 00003183 B400                <1> 	mov ah, 0
  3964 00003185 B010                <1> 	mov al, 00010000b
  3965 00003187 BB[3F430000]        <1> 	mov ebx, winblows
  3966 0000318C E8E5090000          <1> 	call showstring
  3967                              <1> 	
  3968 00003191 E886FBFFFF          <1> 	call cursorgui
  3969                              <1> guistart:
  3970 00003196 E82BFAFFFF          <1> 	call guistartin
  3971 0000319B C605[A4310000]00    <1> 	mov byte [copygui], 0
  3972 000031A2 EBF2                <1> 	jmp guistart
  3973                              <1> 	
  3974                              <1> ;guicopy:	;;for double buffering
  3975                              <1> ;	mov byte [copygui], 1
  3976                              <1> ;	mov edi, [offscreenmemoffset]
  3977                              <1> ;	mov edx, 0
  3978                              <1> ;	mov ecx, 0
  3979                              <1> ;	mov dx, [mousecursorposition]
  3980                              <1> ;	mov cx, [mousecursorposition + 2]
  3981                              <1> ;	add edi, edx
  3982                              <1> ;	mov dx, [resolutionx2]
  3983                              <1> ;	inc cx
  3984                              <1> ;guicp2:
  3985                              <1> ;	add edi, edx
  3986                              <1> ;	dec cx
  3987                              <1> ;	cmp cx, 0
  3988                              <1> ;	jne guicp2
  3989                              <1> ;	sub edi, edx
  3990                              <1> ;	mov [cursorloc], edi
  3991                              <1> ;	mov ebx, cursorbmp
  3992                              <1> ;	mov cx, [resolutiony]
  3993                              <1> ;	rol ecx, 16
  3994                              <1> ;	mov cx, [resolutionx]
  3995                              <1> ;	mov esi, [physbaseptr]
  3996                              <1> ;	mov edi, [offscreenmemoffset]
  3997                              <1> ;guicp1:
  3998                              <1> ;	mov ax, [esi]
  3999                              <1> ;	mov [edi], ax
  4000                              <1> ;	add esi, 2
  4001                              <1> ;	add edi, 2
  4002                              <1> ;	cmp edi, [cursorloc]
  4003                              <1> ;	je copycursor
  4004                              <1> ;dncopycursor:
  4005                              <1> ;	dec cx
  4006                              <1> ;	cmp cx, 0
  4007                              <1> ;	jne guicp1
  4008                              <1> ;	mov cx, [resolutionx]
  4009                              <1> ;	rol ecx, 16
  4010                              <1> ;	dec cx
  4011                              <1> ;	cmp cx, 0
  4012                              <1> ;	rol ecx, 16
  4013                              <1> ;	jne guicp1
  4014                              <1> ;	mov byte [copygui], 0
  4015                              <1> ;	ret
  4016                              <1> ;copycursor:
  4017                              <1> ;	cmp ebx, cursorbmpend
  4018                              <1> ;	jae dncopycursor
  4019                              <1> ;	mov dx, [resolutionx2]
  4020                              <1> ;	add edi, edx
  4021                              <1> ;	mov [cursorloc], edi
  4022                              <1> ;	sub edi, edx
  4023                              <1> ;	dec ebx
  4024                              <1> ;	sub edi, 2
  4025                              <1> ;	sub esi, 2
  4026                              <1> ;	mov dx, 9
  4027                              <1> ;curscplp:
  4028                              <1> ;	inc ebx
  4029                              <1> ;	add esi, 2
  4030                              <1> ;	add edi, 2
  4031                              <1> ;	mov ax, [esi]
  4032                              <1> ;	mov [edi], ax
  4033                              <1> ;	mov al, [ebx]
  4034                              <1> ;	cmp al, 0
  4035                              <1> ;	je curscplp2
  4036                              <1> ;	mov word [edi], 1110011110011100b
  4037                              <1> ;curscplp2:
  4038                              <1> ;	dec cx
  4039                              <1> ;	cmp cx, 0
  4040                              <1> ;	je dncopycursor
  4041                              <1> ;	dec dx
  4042                              <1> ;	cmp dx, 0
  4043                              <1> ;	jne curscplp
  4044                              <1> ;	jmp dncopycursor
  4045                              <1> 	
  4046                              <1> 	
  4047                              <1> ;cursorloc: dd 0
  4048                              <1> 		
  4049                              <1> ;nextimage:	
  4050                              <1> ;	call guiclear
  4051                              <1> ;	mov esi, [bmpend]
  4052                              <1> ;	mov eax, 0
  4053                              <1> ;	mov ebx, 0
  4054                              <1> ;	mov ecx, 0
  4055                              <1> ;	mov edx, 0
  4056                              <1> ;	call showbmp
  4057                              <1> ;	jmp guistartin
  4058                              <1> 		
  4059 000031A4 00                  <1> copygui db 0
  4060 000031A5 00                  <1> graphicsset db 0
  4061 000031A6 0000                <1> graphicspos db 0,0
  4062 000031A8 00                  <1> showcursorfonton db 0
  4063 000031A9 00                  <1> savefonton db 0
  4064 000031AA 00                  <1> mouseselecton db 0
  4065 000031AB 00                  <1> guion db 0
  4066                              <1> 
  4067                              <1> 		
  4068                              <1> clearmousecursor:
  4069 000031AC BE[4F300000]        <1> 		mov esi, background
  4070 000031B1 8B3D[6A5E0000]      <1> 		mov edi, [physbaseptr]
  4071 000031B7 BA00000000          <1> 		mov edx, 0
  4072 000031BC B900000000          <1> 		mov ecx, 0
  4073 000031C1 668B15[F92E0000]    <1> 		mov dx, [lastmouseposition]
  4074 000031C8 668B0D[FB2E0000]    <1> 		mov cx, [lastmouseposition + 2]
  4075 000031CF 01D7                <1> 		add edi, edx
  4076 000031D1 BA00000000          <1> 		mov edx, 0
  4077 000031D6 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4078 000031DD 6681F90000          <1> 		cmp cx, 0
  4079 000031E2 740B                <1> 		je noyclr
  4080 000031E4 01D7                <1> yclr:	add edi, edx
  4081 000031E6 6649                <1> 		dec cx
  4082 000031E8 6681F90000          <1> 		cmp cx, 0
  4083 000031ED 75F5                <1> 		jne yclr
  4084 000031EF 668B06              <1> noyclr:	mov ax, [esi]
  4085 000031F2 C1C010              <1> 		rol eax, 16
  4086 000031F5 668B06              <1> 		mov ax, [esi]
  4087 000031F8 8907                <1> 		mov [edi], eax
  4088 000031FA 894704              <1> 		mov [edi + 4], eax
  4089 000031FD 894708              <1> 		mov [edi + 8], eax
  4090 00003200 89470C              <1> 		mov [edi + 12], eax
  4091 00003203 01D7                <1> 		add edi, edx
  4092 00003205 6641                <1> 		inc cx
  4093 00003207 6681F91000          <1> 		cmp cx, 16
  4094 0000320C 72E1                <1> 		jb noyclr
  4095 0000320E C3                  <1> 		ret
  4096                              <1> 
  4097                              <1> switchmousepos:		;;switch were the mouse is located
  4098 0000320F BE[00120000]        <1> 		mov esi, mousecolorbuf
  4099 00003214 8B3D[6A5E0000]      <1> 		mov edi, [physbaseptr]
  4100 0000321A BA00000000          <1> 		mov edx, 0
  4101 0000321F B900000000          <1> 		mov ecx, 0
  4102 00003224 668B15[F92E0000]    <1> 		mov dx, [lastmouseposition]
  4103 0000322B 668B0D[FB2E0000]    <1> 		mov cx, [lastmouseposition + 2]
  4104 00003232 01D7                <1> 		add edi, edx
  4105 00003234 BA00000000          <1> 		mov edx, 0
  4106 00003239 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4107 00003240 6681F90000          <1> 		cmp cx, 0
  4108 00003245 740B                <1> 		je noswmsy
  4109 00003247 01D7                <1> swmsy:		add edi, edx
  4110 00003249 6649                <1> 		dec cx
  4111 0000324B 6681F90000          <1> 		cmp cx, 0
  4112 00003250 75F5                <1> 		jne swmsy
  4113 00003252 8B06                <1> noswmsy:	mov eax, [esi]
  4114 00003254 8B5E04              <1> 		mov ebx, [esi + 4]
  4115 00003257 8907                <1> 		mov [edi], eax
  4116 00003259 895F04              <1> 		mov [edi + 4], ebx
  4117 0000325C 8B4608              <1> 		mov eax, [esi + 8]
  4118 0000325F 8B5E0C              <1> 		mov ebx, [esi + 12]
  4119 00003262 894708              <1> 		mov [edi + 8], eax
  4120 00003265 895F0C              <1> 		mov [edi + 12], ebx
  4121 00003268 01D7                <1> 		add edi, edx
  4122 0000326A 81C610000000        <1> 		add esi, 16
  4123 00003270 81FE[00130000]      <1> 		cmp esi, mcolorend
  4124 00003276 72DA                <1> 		jb noswmsy
  4125                              <1> 		
  4126                              <1> switchmousepos2:
  4127 00003278 BE[00120000]        <1> 		mov esi, mousecolorbuf
  4128 0000327D 8B3D[6A5E0000]      <1> 		mov edi, [physbaseptr]
  4129 00003283 BA00000000          <1> 		mov edx, 0
  4130 00003288 B900000000          <1> 		mov ecx, 0
  4131 0000328D 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  4132 00003294 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4133 0000329B 01D7                <1> 		add edi, edx
  4134 0000329D BA00000000          <1> 		mov edx, 0
  4135 000032A2 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4136 000032A9 6681F90000          <1> 		cmp cx, 0
  4137 000032AE 740B                <1> 		je noswmsy2
  4138 000032B0 01D7                <1> swmsy2:		add edi, edx
  4139 000032B2 6649                <1> 		dec cx
  4140 000032B4 6681F90000          <1> 		cmp cx, 0
  4141 000032B9 75F5                <1> 		jne swmsy2
  4142 000032BB 8B07                <1> noswmsy2:	mov eax, [edi]
  4143 000032BD 8B5F04              <1> 		mov ebx, [edi + 4]
  4144 000032C0 8906                <1> 		mov [esi], eax
  4145 000032C2 895E04              <1> 		mov [esi + 4], ebx
  4146 000032C5 8B4708              <1> 		mov eax, [edi + 8]
  4147 000032C8 8B5F0C              <1> 		mov ebx, [edi + 12]
  4148 000032CB 894608              <1> 		mov [esi + 8], eax
  4149 000032CE 895E0C              <1> 		mov [esi + 12], ebx
  4150 000032D1 01D7                <1> 		add edi, edx
  4151 000032D3 81C610000000        <1> 		add esi, 16
  4152 000032D9 81FE[00130000]      <1> 		cmp esi, mcolorend
  4153 000032DF 72DA                <1> 		jb noswmsy2
  4154 000032E1 C3                  <1> 		ret
  4155                              <1> 
  4156 000032E2 00                  <1> pbutton db 0
  4157 000032E3 00                  <1> pLBUTTON db 0
  4158 000032E4 00                  <1> pRBUTTON db 0
  4159 000032E5 00000000            <1> dragging dw 0,0
  4160 000032E9 0000000000000000    <1> lastpos dw 0,0,0,0
  4161 000032F1 00000000            <1> colorbuf dw 0,0
  4162                              <1> 	
  4163                              <1> 	clickicon:
  4164 000032F5 B001                <1> 		mov al, 1
  4165 000032F7 A2[E2320000]        <1> 		mov [pbutton], al
  4166 000032FC A0[E3320000]        <1> 		mov al, [pLBUTTON]
  4167 00003301 2205[C02B0000]      <1> 		and al, [LBUTTON]
  4168 00003307 8A25[E4320000]      <1> 		mov ah, [pRBUTTON]
  4169 0000330D 2225[C12B0000]      <1> 		and ah, [RBUTTON]
  4170 00003313 08E0                <1> 		or al, ah
  4171 00003315 3C00                <1> 		cmp al, 0
  4172 00003317 741B                <1> 		je nodragclick
  4173 00003319 813D[E5320000]0100- <1> 		cmp dword [dragging], 1
  4174 00003321 0000                <1>
  4175 00003323 732D                <1> 		jae dragclick
  4176 00003325 C705[E5320000]0100- <1> 		mov dword [dragging], 1
  4177 0000332D 0000                <1>
  4178 0000332F E91E000000          <1> 		jmp dragclick
  4179                              <1> 	nodragclick:
  4180 00003334 C705[E5320000]0000- <1> 		mov dword [dragging], 0
  4181 0000333C 0000                <1>
  4182 0000333E A0[C02B0000]        <1> 		mov al, [LBUTTON]
  4183 00003343 A2[E3320000]        <1> 		mov [pLBUTTON], al
  4184 00003348 A0[C12B0000]        <1> 		mov al, [RBUTTON]
  4185 0000334D A2[E4320000]        <1> 		mov [pRBUTTON], al
  4186                              <1> 	dragclick:
  4187 00003352 66B80000            <1> 		mov ax, 0
  4188 00003356 BE[00100000]        <1> 		mov esi, graphicstable
  4189 0000335B C705[B6420000]0000- <1> 		mov dword [codepointer], 0
  4190 00003363 0000                <1>
  4191                              <1> 	clicon2:
  4192 00003365 BA00000000          <1> 		mov edx, 0
  4193 0000336A B900000000          <1> 		mov ecx, 0
  4194 0000336F 66813E0100          <1> 		cmp word [esi], 1
  4195 00003374 0F841B000000        <1> 		je near iconselect
  4196 0000337A 66813E0200          <1> 		cmp word [esi], 2
  4197 0000337F 0F8472010000        <1> 		je near textselected
  4198 00003385 66813E0300          <1> 		cmp word [esi], 3
  4199 0000338A 0F84C7020000        <1> 		je near windowselect
  4200 00003390 E90B040000          <1> 		jmp nexticonsel
  4201                              <1> 	iconselect:
  4202 00003395 668B5606            <1> 		mov dx, [esi + 6]
  4203 00003399 6689D0              <1> 		mov ax, dx
  4204 0000339C 668B4E08            <1> 		mov cx, [esi + 8]
  4205 000033A0 6689CB              <1> 		mov bx, cx
  4206 000033A3 6681C32000          <1> 		add bx, 32
  4207 000033A8 6601D0              <1> 		add ax, dx
  4208 000033AB 813D[E5320000]0100- <1> 		cmp dword [dragging], 1
  4209 000033B3 0000                <1>
  4210 000033B5 746F                <1> 		je dragicon
  4211 000033B7 813D[E5320000]0000- <1> 		cmp dword [dragging], 0
  4212 000033BF 0000                <1>
  4213 000033C1 7411                <1> 		je nodragiconcheck
  4214 000033C3 3935[E5320000]      <1> 		cmp dword [dragging], esi
  4215 000033C9 0F85D1030000        <1> 		jne near nexticonsel
  4216 000033CF E952000000          <1> 		jmp dragicon
  4217                              <1> 	nodragiconcheck:
  4218 000033D4 663905[FD2E0000]    <1> 		cmp [mousecursorposition], ax
  4219 000033DB 0F82BF030000        <1> 		jb near nexticonsel
  4220 000033E1 66054000            <1> 		add ax, 64
  4221 000033E5 663905[FD2E0000]    <1> 		cmp [mousecursorposition], ax
  4222 000033EC 0F87AE030000        <1> 		ja near nexticonsel
  4223 000033F2 6629D0              <1> 		sub ax, dx
  4224 000033F5 66390D[FF2E0000]    <1> 		cmp [mousecursorposition + 2], cx
  4225 000033FC 0F829E030000        <1> 		jb near nexticonsel
  4226 00003402 66391D[FF2E0000]    <1> 		cmp [mousecursorposition + 2], bx
  4227 00003409 0F8791030000        <1> 		ja near nexticonsel
  4228 0000340F 668B460A            <1> 		mov ax, [esi + 10]
  4229 00003413 66250100            <1> 		and ax, 1
  4230 00003417 663D0100            <1> 		cmp ax, 1
  4231 0000341B 0F84B6000000        <1> 		je near unselecticon
  4232 00003421 E98D000000          <1> 		jmp nodragicon
  4233                              <1> 	dragicon:
  4234 00003426 663905[F92E0000]    <1> 		cmp [lastmouseposition], ax
  4235 0000342D 0F826D030000        <1> 		jb near nexticonsel
  4236 00003433 66054000            <1> 		add ax, 64
  4237 00003437 663905[F92E0000]    <1> 		cmp [lastmouseposition], ax
  4238 0000343E 0F875C030000        <1> 		ja near nexticonsel
  4239 00003444 6629D0              <1> 		sub ax, dx
  4240 00003447 66390D[FB2E0000]    <1> 		cmp [lastmouseposition + 2], cx
  4241 0000344E 0F824C030000        <1> 		jb near nexticonsel
  4242 00003454 66391D[FB2E0000]    <1> 		cmp [lastmouseposition + 2], bx
  4243 0000345B 0F873F030000        <1> 		ja near nexticonsel
  4244 00003461 668B460A            <1> 		mov ax, [esi + 10]
  4245 00003465 2410                <1> 		and al, 00010000b
  4246 00003467 3C10                <1> 		cmp al, 00010000b
  4247 00003469 7448                <1> 		je nodragicon
  4248 0000346B 8935[E5320000]      <1> 		mov [dragging], esi
  4249 00003471 66D1E2              <1> 		shl dx, 1
  4250 00003474 662B15[F92E0000]    <1> 		sub dx, [lastmouseposition]
  4251 0000347B 660315[FD2E0000]    <1> 		add dx, [mousecursorposition]
  4252 00003482 66D1EA              <1> 		shr dx, 1
  4253 00003485 66030D[FF2E0000]    <1> 		add cx, [mousecursorposition + 2]
  4254 0000348C 662B0D[FB2E0000]    <1> 		sub cx, [lastmouseposition + 2]
  4255 00003493 663B15[0F400000]    <1> 		cmp dx, [resolutionx2]
  4256 0000349A 7607                <1> 		jbe chkyresdrgicn
  4257 0000349C 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  4258                              <1> 	chkyresdrgicn:
  4259 000034A3 663B0D[0B400000]    <1> 		cmp cx, [resolutiony]
  4260 000034AA 7607                <1> 		jbe nodragicon
  4261 000034AC 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4262                              <1> 	nodragicon:
  4263 000034B3 66814E0A0100        <1> 		or word [esi + 10], 1
  4264 000034B9 8B5E0C              <1> 		mov ebx, [esi + 12]
  4265 000034BC 668B460A            <1> 		mov ax, [esi + 10]
  4266 000034C0 8B7602              <1> 		mov esi, [esi + 2]
  4267 000034C3 C705[B6420000]0000- <1> 		mov dword [codepointer], 0
  4268 000034CB 0000                <1>
  4269 000034CD E8600A0000          <1> 		call showicon
  4270 000034D2 E9E2020000          <1> 		jmp doneiconsel
  4271                              <1> 	unselecticon:
  4272 000034D7 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4273 000034DD 8B5E0C              <1> 		mov ebx, [esi + 12]
  4274 000034E0 668B460A            <1> 		mov ax, [esi + 10]
  4275 000034E4 8B7602              <1> 		mov esi, [esi + 2]
  4276 000034E7 891D[B6420000]      <1> 		mov [codepointer], ebx
  4277 000034ED E8400A0000          <1> 		call showicon
  4278 000034F2 E9C2020000          <1> 		jmp doneiconsel
  4279                              <1> 	textselected:
  4280 000034F7 8B5E02              <1> 		mov ebx, [esi + 2]
  4281 000034FA 668B5606            <1> 		mov dx, [esi + 6]
  4282 000034FE 6689D0              <1> 		mov ax, dx
  4283 00003501 668B4E08            <1> 		mov cx, [esi + 8]
  4284                              <1> 	lengthtesttext:
  4285 00003505 803B00              <1> 		cmp byte [ebx], 0
  4286 00003508 7407                <1> 		je donetesttextlength
  4287 0000350A 43                  <1> 		inc ebx
  4288 0000350B 66051000            <1> 		add ax, 16
  4289 0000350F EBF4                <1> 		jmp lengthtesttext
  4290                              <1> 	donetesttextlength:
  4291 00003511 6689CB              <1> 		mov bx, cx
  4292 00003514 6681C30F00          <1> 		add bx, 15
  4293 00003519 813D[E5320000]0100- <1> 		cmp dword [dragging], 1
  4294 00003521 0000                <1>
  4295 00003523 7468                <1> 		je dragtext
  4296 00003525 813D[E5320000]0000- <1> 		cmp dword [dragging], 0
  4297 0000352D 0000                <1>
  4298 0000352F 7411                <1> 		je nodragtextcheck
  4299 00003531 3935[E5320000]      <1> 		cmp dword [dragging], esi
  4300 00003537 0F8563020000        <1> 		jne near nexticonsel
  4301 0000353D E94B000000          <1> 		jmp dragtext
  4302                              <1> 	nodragtextcheck:
  4303 00003542 663915[FD2E0000]    <1> 		cmp [mousecursorposition], dx
  4304 00003549 0F8251020000        <1> 		jb near nexticonsel
  4305 0000354F 663905[FD2E0000]    <1> 		cmp [mousecursorposition], ax
  4306 00003556 0F8744020000        <1> 		ja near nexticonsel
  4307 0000355C 66390D[FF2E0000]    <1> 		cmp [mousecursorposition + 2], cx
  4308 00003563 0F8237020000        <1> 		jb near nexticonsel
  4309 00003569 66391D[FF2E0000]    <1> 		cmp [mousecursorposition + 2], bx
  4310 00003570 0F872A020000        <1> 		ja near nexticonsel
  4311 00003576 668B460A            <1> 		mov ax, [esi + 10]
  4312 0000357A 66250100            <1> 		and ax, 1
  4313 0000357E 663D0100            <1> 		cmp ax, 1
  4314 00003582 0F84AB000000        <1> 		je near unselecttext
  4315 00003588 E986000000          <1> 		jmp nodragtext
  4316                              <1> 	dragtext:
  4317 0000358D 663915[F92E0000]    <1> 		cmp [lastmouseposition], dx
  4318 00003594 0F8206020000        <1> 		jb near nexticonsel
  4319 0000359A 663905[F92E0000]    <1> 		cmp [lastmouseposition], ax
  4320 000035A1 0F87F9010000        <1> 		ja near nexticonsel
  4321 000035A7 66390D[FB2E0000]    <1> 		cmp [lastmouseposition + 2], cx
  4322 000035AE 0F82EC010000        <1> 		jb near nexticonsel
  4323 000035B4 66391D[FB2E0000]    <1> 		cmp [lastmouseposition + 2], bx
  4324 000035BB 0F87DF010000        <1> 		ja near nexticonsel
  4325 000035C1 668B460A            <1> 		mov ax, [esi + 10]
  4326 000035C5 2410                <1> 		and al, 00010000b
  4327 000035C7 663D1000            <1> 		cmp ax, 00010000b
  4328 000035CB 0F8442000000        <1> 		je near nodragtext
  4329 000035D1 8935[E5320000]      <1> 		mov [dragging], esi
  4330 000035D7 662B15[F92E0000]    <1> 		sub dx, [lastmouseposition]
  4331 000035DE 660315[FD2E0000]    <1> 		add dx, [mousecursorposition]
  4332 000035E5 66030D[FF2E0000]    <1> 		add cx, [mousecursorposition + 2]
  4333 000035EC 662B0D[FB2E0000]    <1> 		sub cx, [lastmouseposition + 2]
  4334 000035F3 663B15[0F400000]    <1> 		cmp dx, [resolutionx2]
  4335 000035FA 7607                <1> 		jbe chkyresdrgtxt
  4336 000035FC 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  4337                              <1> 	chkyresdrgtxt:
  4338 00003603 663B0D[0B400000]    <1> 		cmp cx, [resolutiony]
  4339 0000360A 7607                <1> 		jbe nodragtext
  4340 0000360C 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4341                              <1> 	nodragtext:
  4342 00003613 66814E0A0100        <1> 		or word [esi + 10], 1
  4343 00003619 8B5E0C              <1> 		mov ebx, [esi + 12]
  4344 0000361C 891D[B6420000]      <1> 		mov [codepointer], ebx
  4345 00003622 668B460A            <1> 		mov ax, [esi + 10]
  4346 00003626 8B7602              <1> 		mov esi, [esi + 2]
  4347 00003629 E848050000          <1> 		call showstring
  4348 0000362E E986010000          <1> 		jmp doneiconsel
  4349                              <1> 	unselecttext:
  4350 00003633 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4351 00003639 8B5E0C              <1> 		mov ebx, [esi + 12]
  4352 0000363C 668B460A            <1> 		mov ax, [esi + 10]
  4353 00003640 8B7602              <1> 		mov esi, [esi + 2]
  4354 00003643 C705[B6420000]0000- <1> 		mov dword [codepointer], 0
  4355 0000364B 0000                <1>
  4356 0000364D E824050000          <1> 		call showstring
  4357 00003652 E962010000          <1> 		jmp doneiconsel
  4358                              <1> windowselect:
  4359 00003657 8B7E02              <1> 		mov edi, [esi + 2]
  4360 0000365A 668B5606            <1> 		mov dx, [esi + 6]
  4361 0000365E 6689D0              <1> 		mov ax, dx
  4362 00003661 668B4E08            <1> 		mov cx, [esi + 8]
  4363 00003665 6689CB              <1> 		mov bx, cx
  4364 00003668 6681C31000          <1> 		add bx, 16
  4365 0000366D 813D[E5320000]0100- <1> 		cmp dword [dragging], 1
  4366 00003675 0000                <1>
  4367 00003677 746D                <1> 		je dragwin
  4368 00003679 813D[E5320000]0000- <1> 		cmp dword [dragging], 0
  4369 00003681 0000                <1>
  4370 00003683 7411                <1> 		je nodragwincheck
  4371 00003685 3935[E5320000]      <1> 		cmp dword [dragging], esi
  4372 0000368B 0F850F010000        <1> 		jne near nexticonsel
  4373 00003691 E950000000          <1> 		jmp dragwin
  4374                              <1> 	nodragwincheck:
  4375 00003696 663905[FD2E0000]    <1> 		cmp [mousecursorposition], ax
  4376 0000369D 0F82FD000000        <1> 		jb near nexticonsel
  4377 000036A3 660307              <1> 		add ax, [edi]
  4378 000036A6 660307              <1> 		add ax, [edi]
  4379 000036A9 663905[FD2E0000]    <1> 		cmp [mousecursorposition], ax
  4380 000036B0 0F87EA000000        <1> 		ja near nexticonsel
  4381 000036B6 66390D[FF2E0000]    <1> 		cmp [mousecursorposition + 2], cx
  4382 000036BD 0F82DD000000        <1> 		jb near nexticonsel
  4383 000036C3 66391D[FF2E0000]    <1> 		cmp [mousecursorposition + 2], bx
  4384 000036CA 0F87D0000000        <1> 		ja near nexticonsel
  4385 000036D0 662D1400            <1> 		sub ax, 20
  4386 000036D4 663905[FD2E0000]    <1> 		cmp [mousecursorposition], ax
  4387 000036DB 0F8795000000        <1> 		ja near killwin
  4388 000036E1 E97C000000          <1> 		jmp nodragwin
  4389                              <1> 	dragwin:
  4390 000036E6 663905[F92E0000]    <1> 		cmp [lastmouseposition], ax
  4391 000036ED 0F82AD000000        <1> 		jb near nexticonsel
  4392 000036F3 660307              <1> 		add ax, [edi]
  4393 000036F6 660307              <1> 		add ax, [edi]
  4394 000036F9 663905[F92E0000]    <1> 		cmp [lastmouseposition], ax
  4395 00003700 0F879A000000        <1> 		ja near nexticonsel
  4396 00003706 66390D[FB2E0000]    <1> 		cmp [lastmouseposition + 2], cx
  4397 0000370D 0F828D000000        <1> 		jb near nexticonsel
  4398 00003713 66391D[FB2E0000]    <1> 		cmp [lastmouseposition + 2], bx
  4399 0000371A 0F8780000000        <1> 		ja near nexticonsel
  4400 00003720 8935[E5320000]      <1> 		mov [dragging], esi
  4401 00003726 662B15[F92E0000]    <1> 		sub dx, [lastmouseposition]
  4402 0000372D 660315[FD2E0000]    <1> 		add dx, [mousecursorposition]
  4403 00003734 66030D[FF2E0000]    <1> 		add cx, [mousecursorposition + 2]
  4404 0000373B 662B0D[FB2E0000]    <1> 		sub cx, [lastmouseposition + 2]
  4405 00003742 663B15[0F400000]    <1> 		cmp dx, [resolutionx2]
  4406 00003749 7607                <1> 		jbe chkyresdrgwin
  4407 0000374B 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  4408                              <1> 	chkyresdrgwin:
  4409 00003752 663B0D[0B400000]    <1> 		cmp cx, [resolutiony]
  4410 00003759 7607                <1> 		jbe nodragwin
  4411 0000375B 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4412                              <1> 	nodragwin:
  4413 00003762 8B5E0C              <1> 		mov ebx, [esi + 12]
  4414 00003765 668B460A            <1> 		mov ax, [esi + 10]
  4415 00003769 8B7602              <1> 		mov esi, [esi + 2]
  4416 0000376C E85B040000          <1> 		call showwindow
  4417 00003771 E943000000          <1> 		jmp doneiconsel
  4418                              <1> 	killwin:
  4419 00003776 66C7060000          <1> 		mov word [esi], 0
  4420 0000377B C705[EC030000]0000- <1> 		mov dword [user2codepoint], 0
  4421 00003783 0000                <1>
  4422 00003785 C605[A60D0000]00    <1> 		mov byte [termguion], 0
  4423 0000378C E881F8FFFF          <1> 		call guiclear
  4424 00003791 E899000000          <1> 		call reloadallgraphics
  4425 00003796 E9FBF9FFFF          <1> 		jmp guistart
  4426 0000379B E93A000000          <1> 		jmp doneiconsel2
  4427                              <1> 	nexticonsel:
  4428 000037A0 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4429 000037A6 81C610000000        <1> 		add esi, 16
  4430 000037AC 81FE[00120000]      <1> 		cmp esi, graphicstableend
  4431 000037B2 7305                <1> 		jae doneiconsel
  4432 000037B4 E9ACFBFFFF          <1> 		jmp clicon2
  4433                              <1> 	doneiconsel:
  4434 000037B9 813D[E5320000]0100- <1> 		cmp dword [dragging], 1
  4435 000037C1 0000                <1>
  4436 000037C3 7315                <1> 		jae doneiconsel2
  4437 000037C5 813D[B6420000]0000- <1> 		cmp dword [codepointer], 0
  4438 000037CD 0000                <1>
  4439 000037CF 7409                <1> 		je doneiconsel2
  4440 000037D1 8B1D[B6420000]      <1> 		mov ebx, [codepointer]
  4441 000037D7 FFD3                <1> 		call ebx 
  4442 000037D9 C3                  <1> 		ret
  4443                              <1> 	doneiconsel2:
  4444 000037DA A0[C02B0000]        <1> 		mov al, [LBUTTON]
  4445 000037DF A2[E3320000]        <1> 		mov [pLBUTTON], al
  4446 000037E4 A0[C12B0000]        <1> 		mov al, [RBUTTON]
  4447 000037E9 A2[E4320000]        <1> 		mov [pRBUTTON], al
  4448 000037EE E83C000000          <1> call reloadallgraphics
  4449 000037F3 B900000000          <1> 		mov ecx, 0
  4450 000037F8 BA00000000          <1> 		mov edx, 0
  4451 000037FD B400                <1> 		mov ah, 0
  4452 000037FF B080                <1> 		mov al, 128
  4453 00003801 668B15[FD2E0000]    <1> 		mov dx, [mousecursorposition]
  4454 00003808 668B0D[FF2E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4455 0000380F 66BBE738            <1> 		mov bx, 0011100011100111b
  4456 00003813 C605[A8310000]01    <1> 		mov byte [showcursorfonton], 1
  4457 0000381A E800080000          <1> 		call showfontvesa
  4458 0000381F C605[A8310000]00    <1> 		mov byte [showcursorfonton], 0
  4459 00003826 C3                  <1> 		ret
  4460 00003827 00000000            <1> lastdrag dw 0,0
  4461 0000382B 00000000            <1> grpctblpos dw 0,0
  4462                              <1> 
  4463                              <1> reloadallgraphics:
  4464 0000382F BF[00100000]        <1> 		mov edi, graphicstable
  4465                              <1> reloadgraphicsloop:
  4466 00003834 8B7702              <1> 		mov esi, [edi + 2]
  4467 00003837 668B5706            <1> 		mov dx, [edi + 6]
  4468 0000383B 668B4F08            <1> 		mov cx, [edi + 8]
  4469 0000383F 668B07              <1> 		mov ax, [edi]
  4470 00003842 668B5F0A            <1> 		mov bx, [edi + 10]
  4471 00003846 893D[2B380000]      <1> 		mov [grpctblpos], edi
  4472 0000384C 3B3D[E5320000]      <1> 		cmp edi, [dragging]
  4473 00003852 741E                <1> 		je loadedgraphic
  4474 00003854 663D0100            <1> 		cmp ax, 1
  4475 00003858 0F8431000000        <1> 		je near icongraphic
  4476 0000385E 663D0200            <1> 		cmp ax, 2
  4477 00003862 0F8437000000        <1> 		je near stringgraphic
  4478 00003868 663D0300            <1> 		cmp ax, 3
  4479 0000386C 0F8416000000        <1> 		je near windowgraphic
  4480 00003872 8B3D[2B380000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  4481 00003878 81C710000000        <1> 		add edi, 16
  4482 0000387E 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4483 00003884 7329                <1> 		jae donereloadgraphics
  4484 00003886 EBAC                <1> 		jmp reloadgraphicsloop
  4485 00003888 E892030000          <1> windowgraphic:	call showwindow2
  4486 0000388D EBE3                <1> 		jmp loadedgraphic
  4487 0000388F 80E301              <1> icongraphic:	and bl, 1
  4488 00003892 881D[BA420000]      <1> 		mov [iconselected], bl
  4489 00003898 E8A8060000          <1> 		call showicon2
  4490 0000389D EBD3                <1> 		jmp loadedgraphic
  4491 0000389F 80E301              <1> stringgraphic:  and bl, 1
  4492 000038A2 881D[AA310000]      <1> 		mov [mouseselecton], bl
  4493 000038A8 E8DC020000          <1> 		call showstring2
  4494 000038AD EBC3                <1> 		jmp loadedgraphic
  4495                              <1> donereloadgraphics:
  4496 000038AF 8B3D[E5320000]      <1> 		mov edi, [dragging]
  4497 000038B5 81FF[00100000]      <1> 		cmp edi, graphicstable
  4498 000038BB 7226                <1> 		jb notcorrectdrag
  4499 000038BD 668B07              <1> 		mov ax, [edi]
  4500 000038C0 8B7702              <1> 		mov esi, [edi + 2]
  4501 000038C3 668B5706            <1> 		mov dx, [edi + 6]
  4502 000038C7 668B4F08            <1> 		mov cx, [edi + 8]
  4503 000038CB 668B5F0A            <1> 		mov bx, [edi + 10]
  4504 000038CF 663D0100            <1> 		cmp ax, 1
  4505 000038D3 750F                <1> 		jne noticondragging
  4506 000038D5 80E301              <1> 		and bl, 1
  4507 000038D8 881D[BA420000]      <1> 		mov [iconselected], bl
  4508 000038DE E862060000          <1> 		call showicon2
  4509                              <1> notcorrectdrag:
  4510 000038E3 C3                  <1> 		ret
  4511                              <1> 
  4512                              <1> 	noticondragging:
  4513 000038E4 663D0200            <1> 		cmp ax, 2
  4514 000038E8 75F9                <1> 		jne notcorrectdrag
  4515 000038EA 80E301              <1> 		and bl, 1
  4516 000038ED 881D[AA310000]      <1> 		mov [mouseselecton], bl
  4517 000038F3 E891020000          <1> 		call showstring2
  4518 000038F8 EBE9                <1> 		jmp notcorrectdrag
  4519                              <1> 
  4520 000038FA 00<rept>            <1> grphbuf times 16 db 0
  4521                              <1> 	graphicsadd:
  4522 0000390A BF[00100000]        <1> 		mov edi, graphicstable
  4523                              <1> 	shwgrph1:
  4524 0000390F 397702              <1> 		cmp dword [edi + 2], esi
  4525 00003912 7414                <1> 		je showgraphicsreplace2
  4526 00003914 81C710000000        <1> 		add edi, 16
  4527 0000391A 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4528 00003920 0F8335020000        <1> 		jae near showgraphicsnew
  4529 00003926 EBE7                <1> 		jmp shwgrph1
  4530                              <1> 	showgraphicsreplace2:
  4531 00003928 8935[FC380000]      <1> 		mov [grphbuf + 2], esi
  4532 0000392E 668915[00390000]    <1> 		mov [grphbuf + 6], dx
  4533 00003935 66890D[02390000]    <1> 		mov [grphbuf + 8], cx
  4534 0000393C 891D[06390000]      <1> 		mov [grphbuf + 12], ebx
  4535 00003942 B700                <1> 		mov bh, 0
  4536 00003944 88E3                <1> 		mov bl, ah
  4537 00003946 B400                <1> 		mov ah, 0
  4538 00003948 66A3[04390000]      <1> 		mov [grphbuf + 10], ax	
  4539 0000394E 66891D[FA380000]    <1> 		mov [grphbuf], bx
  4540 00003955 66A1[FA380000]      <1> 		mov ax, [grphbuf]
  4541 0000395B 663D0100            <1> 		cmp ax, 1
  4542 0000395F 0F8419000000        <1> 		je near replaceicon
  4543 00003965 663D0200            <1> 		cmp ax, 2
  4544 00003969 0F8493000000        <1> 		je near replacestring
  4545 0000396F 663D0300            <1> 		cmp ax, 3
  4546 00003973 0F840F010000        <1> 		je near replacewindow
  4547 00003979 E9BA010000          <1> 		jmp showgraphicsreplace
  4548                              <1> 	replaceicon:
  4549 0000397E 893D[E9320000]      <1> 		mov [lastpos], edi
  4550 00003984 8935[ED320000]      <1> 		mov [lastpos + 4], esi
  4551 0000398A 8B7702              <1> 		mov esi, [edi + 2]
  4552 0000398D 668B5F0C            <1> 		mov bx, [edi + 12]
  4553 00003991 668B5706            <1> 		mov dx, [edi + 6]
  4554 00003995 668B4F08            <1> 		mov cx, [edi + 8]
  4555 00003999 668B06              <1> 		mov ax, [esi]
  4556 0000399C 66A3[F1320000]      <1> 		mov [colorbuf], ax
  4557 000039A2 66A1[4F300000]      <1> 		mov ax, [background]
  4558 000039A8 668906              <1> 		mov [esi], ax
  4559 000039AB 8B5F0C              <1> 		mov ebx, [edi + 12]
  4560 000039AE 668B470A            <1> 		mov ax, [edi + 10]
  4561 000039B2 2401                <1> 		and al, 1
  4562 000039B4 A2[BA420000]        <1> 		mov [iconselected], al
  4563 000039B9 668B470A            <1> 		mov ax, [edi + 10]
  4564 000039BD E883050000          <1> 		call showicon2
  4565 000039C2 8B3D[E9320000]      <1> 		mov edi, [lastpos]
  4566 000039C8 8B7702              <1> 		mov esi, [edi + 2]
  4567 000039CB 66A1[F1320000]      <1> 		mov ax, [colorbuf]
  4568 000039D1 668906              <1> 		mov [esi], ax
  4569 000039D4 8B35[ED320000]      <1> 		mov esi, [lastpos + 4]
  4570 000039DA 668B15[00390000]    <1> 		mov dx, [grphbuf + 6]
  4571 000039E1 668B0D[02390000]    <1> 		mov cx, [grphbuf + 8]
  4572 000039E8 668B1D[FA380000]    <1> 		mov bx, [grphbuf]
  4573 000039EF 66A1[04390000]      <1> 		mov ax, [grphbuf + 10]
  4574 000039F5 88DC                <1> 		mov ah, bl
  4575 000039F7 8B1D[06390000]      <1> 		mov ebx, [grphbuf + 12]
  4576 000039FD E936010000          <1> 		jmp showgraphicsreplace
  4577                              <1> 	replacestring:
  4578 00003A02 893D[E9320000]      <1> 		mov [lastpos], edi
  4579 00003A08 8935[ED320000]      <1> 		mov [lastpos + 4], esi
  4580 00003A0E 8B5F0C              <1> 		mov ebx, [edi + 12]
  4581 00003A11 8B7702              <1> 		mov esi, [edi + 2]
  4582 00003A14 668B5706            <1> 		mov dx, [edi + 6]
  4583 00003A18 668B4F08            <1> 		mov cx, [edi + 8]
  4584 00003A1C 66A1[B93B0000]      <1> 		mov ax, [colorfont2]
  4585 00003A22 66A3[F1320000]      <1> 		mov [colorbuf], ax
  4586 00003A28 66A1[4F300000]      <1> 		mov ax, [background]
  4587 00003A2E 66A3[B93B0000]      <1> 		mov [colorfont2], ax		
  4588 00003A34 8B5F0C              <1> 		mov ebx, [edi + 12]
  4589 00003A37 668B470A            <1> 		mov ax, [edi + 10]
  4590 00003A3B 2401                <1> 		and al, 1
  4591 00003A3D A2[AA310000]        <1> 		mov [mouseselecton], al
  4592 00003A42 668B470A            <1> 		mov ax, [edi + 10]
  4593 00003A46 E83E010000          <1> 		call showstring2
  4594 00003A4B 66A1[F1320000]      <1> 		mov ax, [colorbuf]
  4595 00003A51 66A3[B93B0000]      <1> 		mov [colorfont2], ax
  4596 00003A57 8B3D[E9320000]      <1> 		mov edi, [lastpos]
  4597 00003A5D 8B7702              <1> 		mov esi, [edi + 2]
  4598 00003A60 668B15[00390000]    <1> 		mov dx, [grphbuf + 6]
  4599 00003A67 668B0D[02390000]    <1> 		mov cx, [grphbuf + 8]
  4600 00003A6E 668B1D[FA380000]    <1> 		mov bx, [grphbuf]
  4601 00003A75 66A1[04390000]      <1> 		mov ax, [grphbuf + 10]
  4602 00003A7B 88DC                <1> 		mov ah, bl
  4603 00003A7D 8B1D[06390000]      <1> 		mov ebx, [grphbuf + 12]
  4604 00003A83 E9B0000000          <1> 		jmp showgraphicsreplace
  4605                              <1> 	replacewindow:
  4606 00003A88 893D[E9320000]      <1> 		mov [lastpos], edi
  4607 00003A8E 8935[ED320000]      <1> 		mov [lastpos + 4], esi
  4608 00003A94 8B7702              <1> 		mov esi, [edi + 2]
  4609 00003A97 8B3D[C83B0000]      <1> 		mov edi, [windowbufloc]
  4610 00003A9D BA00000000          <1> 		mov edx, 0
  4611 00003AA2 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4612 00003AA9 C1E204              <1> 		shl edx, 4
  4613 00003AAC 29D7                <1> 		sub edi, edx
  4614 00003AAE BA00000000          <1> 		mov edx, 0
  4615 00003AB3 668B16              <1> 		mov dx, [esi]
  4616 00003AB6 660316              <1> 		add dx, [esi]
  4617 00003AB9 668B4E02            <1> 		mov cx, [esi + 2]
  4618 00003ABD 6681C11000          <1> 		add cx, 16
  4619 00003AC2 66A1[4F300000]      <1> 		mov ax, [background]
  4620                              <1> 	clearwindow:
  4621 00003AC8 668907              <1> 		mov [edi], ax
  4622 00003ACB 81C702000000        <1> 		add edi, 2
  4623 00003AD1 81EA02000000        <1> 		sub edx, 2
  4624 00003AD7 81FA00000000        <1> 		cmp edx, 0
  4625 00003ADD 75E9                <1> 		jne clearwindow
  4626 00003ADF 6649                <1> 		dec cx
  4627 00003AE1 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4628 00003AE8 662B16              <1> 		sub dx, [esi]
  4629 00003AEB 662B16              <1> 		sub dx, [esi]
  4630 00003AEE 01D7                <1> 		add edi, edx
  4631 00003AF0 668B16              <1> 		mov dx, [esi]
  4632 00003AF3 660316              <1> 		add dx, [esi]
  4633 00003AF6 6681F90000          <1> 		cmp cx, 0
  4634 00003AFB 75CB                <1> 		jne clearwindow
  4635 00003AFD C605[A70D0000]00    <1> 		mov byte [termcopyon], 0
  4636 00003B04 8B3D[E9320000]      <1> 		mov edi, [lastpos]
  4637 00003B0A 8B35[FC380000]      <1> 		mov esi, [grphbuf + 2]
  4638 00003B10 668B15[00390000]    <1> 		mov dx, [grphbuf + 6]
  4639 00003B17 668B0D[02390000]    <1> 		mov cx, [grphbuf + 8]
  4640 00003B1E 668B1D[FA380000]    <1> 		mov bx, [grphbuf]
  4641 00003B25 66A1[04390000]      <1> 		mov ax, [grphbuf + 10]
  4642 00003B2B 88DC                <1> 		mov ah, bl
  4643 00003B2D 8B1D[06390000]      <1> 		mov ebx, [grphbuf + 12]
  4644 00003B33 E900000000          <1> 		jmp showgraphicsreplace
  4645                              <1> 	showgraphicsreplace:
  4646 00003B38 897702              <1> 		mov [edi + 2], esi
  4647 00003B3B 66895706            <1> 		mov [edi + 6], dx
  4648 00003B3F 66894F08            <1> 		mov [edi + 8], cx
  4649 00003B43 895F0C              <1> 		mov [edi + 12], ebx
  4650 00003B46 B700                <1> 		mov bh, 0
  4651 00003B48 88E3                <1> 		mov bl, ah
  4652 00003B4A B400                <1> 		mov ah, 0
  4653 00003B4C 6689470A            <1> 		mov [edi + 10], ax
  4654 00003B50 66891F              <1> 		mov [edi], bx
  4655 00003B53 8B5F0C              <1> 		mov ebx, [edi + 12]
  4656 00003B56 668B470A            <1> 		mov ax, [edi + 10]
  4657 00003B5A C3                  <1> 		ret
  4658                              <1> 	showgraphicsnew:
  4659 00003B5B BF[00100000]        <1> 		mov edi, graphicstable
  4660                              <1> 	shwgrph2:
  4661 00003B60 66813F0000          <1> 		cmp word [edi], 0
  4662 00003B65 74D1                <1> 		je showgraphicsreplace
  4663 00003B67 81C710000000        <1> 		add edi, 16
  4664 00003B6D 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4665 00003B73 72EB                <1> 		jb shwgrph2
  4666                              <1> 	showgraphicsdone:
  4667 00003B75 C3                  <1> 		ret
  4668                              <1> 
  4669                              <1> 	showstring:
  4670 00003B76 A2[AA310000]        <1> 		mov [mouseselecton], al
  4671 00003B7B 8025[AA310000]01    <1> 		and byte [mouseselecton], 1
  4672 00003B82 B402                <1> 		mov ah, 2
  4673 00003B84 E881FDFFFF          <1> 		call graphicsadd
  4674                              <1> 	showstring2:
  4675 00003B89 B400                <1> 		mov ah, 0
  4676 00003B8B 8A06                <1> 		mov al, [esi]
  4677 00003B8D 3C00                <1> 		cmp al, 0
  4678 00003B8F 7420                <1> 		je doneshowstring
  4679 00003B91 46                  <1> 		inc esi
  4680 00003B92 8935[63420000]      <1> 		mov [showstringesi], esi
  4681 00003B98 668B1D[B93B0000]    <1> 		mov bx, [colorfont2]
  4682 00003B9F E87B040000          <1> 		call showfontvesa
  4683 00003BA4 6681C20800          <1> 		add dx, 8
  4684 00003BA9 8B35[63420000]      <1> 		mov esi, [showstringesi]
  4685 00003BAF EBD8                <1> 		jmp showstring2
  4686                              <1> 	doneshowstring:
  4687 00003BB1 C605[AA310000]00    <1> 		mov byte [mouseselecton], 0
  4688 00003BB8 C3                  <1> 		ret
  4689                              <1> 
  4690 00003BB9 FFFF                <1> colorfont2 dw 0xFFFF
  4691 00003BBB 00                  <1> colorcache db 0
  4692 00003BBC 0000                <1> winvcopystx dw 0
  4693 00003BBE 0000                <1> winvcopysty dw 0
  4694 00003BC0 0000                <1> winvcopydx dw 0
  4695 00003BC2 0000                <1> winvcopycx dw 0
  4696 00003BC4 FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4697 00003BC8 00000000            <1> windowbufloc: dw 0,0
  4698                              <1> 
  4699                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4700 00003BCC C605[A60D0000]01    <1> 		mov byte [termguion], 1
  4701 00003BD3 6681C11000          <1> 		add cx, 16
  4702 00003BD8 668915[BC3B0000]    <1> 		mov [winvcopystx], dx
  4703 00003BDF 66890D[BE3B0000]    <1> 		mov [winvcopysty], cx
  4704 00003BE6 668B16              <1> 		mov dx, [esi]
  4705 00003BE9 668B4E02            <1> 		mov cx, [esi + 2]
  4706 00003BED 6601D2              <1> 		add dx, dx
  4707 00003BF0 668915[C03B0000]    <1> 		mov [winvcopydx], dx
  4708 00003BF7 66890D[C23B0000]    <1> 		mov [winvcopycx], cx
  4709 00003BFE 668B0D[BE3B0000]    <1> 		mov cx, [winvcopysty]
  4710 00003C05 6681E91000          <1> 		sub cx, 16
  4711 00003C0A 668B15[BC3B0000]    <1> 		mov dx, [winvcopystx]
  4712 00003C11 C605[A70D0000]00    <1> 		mov byte [termcopyon], 0
  4713 00003C18 B403                <1> 		mov ah, 3
  4714 00003C1A E8EBFCFFFF          <1> 		call graphicsadd
  4715                              <1> 	showwindow2:
  4716 00003C1F 6681C11000          <1> 		add cx, 16
  4717 00003C24 668915[BC3B0000]    <1> 		mov [winvcopystx], dx
  4718 00003C2B 66890D[BE3B0000]    <1> 		mov [winvcopysty], cx
  4719 00003C32 668B16              <1> 		mov dx, [esi]
  4720 00003C35 668B4E02            <1> 		mov cx, [esi + 2]
  4721 00003C39 6601D2              <1> 		add dx, dx
  4722 00003C3C 668915[C03B0000]    <1> 		mov [winvcopydx], dx
  4723 00003C43 66890D[C23B0000]    <1> 		mov [winvcopycx], cx
  4724 00003C4A 8B3D[C83B0000]      <1> 		mov edi, [windowbufloc]
  4725 00003C50 BA00000000          <1> 		mov edx, 0
  4726 00003C55 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4727 00003C5C C1E204              <1> 		shl edx, 4
  4728 00003C5F 29D7                <1> 		sub edi, edx
  4729 00003C61 803D[A70D0000]00    <1> 		cmp byte [termcopyon], 0
  4730 00003C68 753E                <1> 		jne nocleartitlebarpos
  4731 00003C6A 8B3D[6A5E0000]      <1> 		mov edi, [physbaseptr]
  4732 00003C70 BA00000000          <1> 		mov edx, 0
  4733 00003C75 668B15[BC3B0000]    <1> 		mov dx, [winvcopystx]
  4734 00003C7C 01D7                <1> 		add edi, edx
  4735 00003C7E 668B0D[BE3B0000]    <1> 		mov cx, [winvcopysty]
  4736 00003C85 6681E91000          <1> 		sub cx, 16
  4737 00003C8A 6681F90000          <1> 		cmp cx, 0
  4738 00003C8F 7417                <1> 		je nocleartitlebarpos
  4739                              <1> 	cleartitlebarpos:
  4740 00003C91 BA00000000          <1> 		mov edx, 0
  4741 00003C96 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4742 00003C9D 01D7                <1> 		add edi, edx
  4743 00003C9F 6649                <1> 		dec cx
  4744 00003CA1 6681F90000          <1> 		cmp cx, 0
  4745 00003CA6 75E9                <1> 		jne cleartitlebarpos
  4746                              <1> 	nocleartitlebarpos:
  4747 00003CA8 66B91000            <1> 		mov cx, 16
  4748 00003CAC 668B15[C03B0000]    <1> 		mov dx, [winvcopydx]
  4749 00003CB3 6681F90000          <1> 		cmp cx, 0
  4750 00003CB8 0F844B000000        <1> 		je near canceltitlebarput
  4751 00003CBE 6681FA0000          <1> 		cmp dx, 0
  4752 00003CC3 0F8440000000        <1> 		je near canceltitlebarput
  4753                              <1> 	titlebarput:
  4754 00003CC9 66A1[C43B0000]      <1> 		mov ax, [windowcolor]
  4755 00003CCF 668907              <1> 		mov [edi], ax
  4756 00003CD2 6681EA0200          <1> 		sub dx, 2
  4757 00003CD7 81C702000000        <1> 		add edi, 2
  4758 00003CDD 6681FA0000          <1> 		cmp dx, 0
  4759 00003CE2 75E5                <1> 		jne titlebarput
  4760 00003CE4 BA00000000          <1> 		mov edx, 0
  4761 00003CE9 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4762 00003CF0 6649                <1> 		dec cx
  4763 00003CF2 662B15[C03B0000]    <1> 		sub dx, [winvcopydx]
  4764 00003CF9 01D7                <1> 		add edi, edx
  4765 00003CFB 668B15[C03B0000]    <1> 		mov dx, [winvcopydx]
  4766 00003D02 6681F90000          <1> 		cmp cx, 0
  4767 00003D07 75C0                <1> 		jne titlebarput
  4768                              <1> 	canceltitlebarput:
  4769 00003D09 893D[C83B0000]      <1> 		mov [windowbufloc], edi
  4770 00003D0F 803D[A70D0000]02    <1> 		cmp byte [termcopyon], 2
  4771 00003D16 0F8463000000        <1> 		je near winvcpst
  4772 00003D1C 66B80000            <1> 		mov ax, 0
  4773 00003D20 81C604000000        <1> 		add esi, 4
  4774 00003D26 668B15[BC3B0000]    <1> 		mov dx, [winvcopystx]
  4775 00003D2D 668B0D[BE3B0000]    <1> 		mov cx, [winvcopysty]
  4776 00003D34 6681E91000          <1> 		sub cx, 16
  4777 00003D39 66BB0000            <1> 		mov bx, 0
  4778 00003D3D C605[AA310000]01    <1> 		mov byte [mouseselecton], 1
  4779 00003D44 E840FEFFFF          <1> 		call showstring2
  4780 00003D49 B058                <1> 		mov al, "X"
  4781 00003D4B B400                <1> 		mov ah, 0
  4782 00003D4D 668B1D[B93B0000]    <1> 		mov bx, [colorfont2]
  4783 00003D54 668B15[BC3B0000]    <1> 		mov dx, [winvcopystx]
  4784 00003D5B 668B0D[BE3B0000]    <1> 		mov cx, [winvcopysty]
  4785 00003D62 6681E91000          <1> 		sub cx, 16
  4786 00003D67 6681EA1400          <1> 		sub dx, 20
  4787 00003D6C 660315[C03B0000]    <1> 		add dx, [winvcopydx]
  4788 00003D73 C605[AA310000]01    <1> 		mov byte [mouseselecton], 1
  4789 00003D7A E8A0020000          <1> 		call showfontvesa
  4790                              <1> 	winvcpst:
  4791 00003D7F 8B3D[C83B0000]      <1> 		mov edi, [windowbufloc]
  4792 00003D85 E957000000          <1> 		jmp windowvideocopyset
  4793                              <1> 
  4794                              <1> 	windowvideocopy:
  4795 00003D8A 8B3D[C83B0000]      <1> 		mov edi, [windowbufloc]
  4796 00003D90 3B3D[6A5E0000]      <1> 		cmp edi, [physbaseptr]
  4797 00003D96 0F8345000000        <1> 		jae near windowvideocopyset
  4798 00003D9C B900000000          <1> 		mov ecx, 0
  4799 00003DA1 BA00000000          <1> 		mov edx, 0
  4800 00003DA6 668B15[BC3B0000]    <1> 		mov dx, [winvcopystx]
  4801 00003DAD 668B0D[BE3B0000]    <1> 		mov cx, [winvcopysty]
  4802 00003DB4 8B3D[6A5E0000]      <1> 		mov edi, [physbaseptr]
  4803 00003DBA 01D7                <1> 		add edi, edx
  4804 00003DBC 81F900000000        <1> 		cmp ecx, 0
  4805 00003DC2 741D                <1> 		je windowvideocopyset
  4806                              <1> 	yrescopylp:
  4807 00003DC4 BA00000000          <1> 		mov edx, 0
  4808 00003DC9 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4809 00003DD0 01D7                <1> 		add edi, edx
  4810 00003DD2 6649                <1> 		dec cx
  4811 00003DD4 6681F90000          <1> 		cmp cx, 0
  4812 00003DD9 75E9                <1> 		jne yrescopylp
  4813 00003DDB 893D[C83B0000]      <1> 		mov [windowbufloc], edi
  4814                              <1> 	windowvideocopyset:
  4815 00003DE1 66B90000            <1> 		mov cx, 0
  4816 00003DE5 66890D[2A3F0000]    <1> 		mov [charposline], cx
  4817 00003DEC BE[8F1C0000]        <1> 		mov esi, videobuf2
  4818 00003DF1 8935[2C3F0000]      <1> 		mov [charposvbuf], esi
  4819 00003DF7 8A5E01              <1> 		mov bl, [esi + 1]
  4820 00003DFA 881D[BB3B0000]      <1> 		mov [colorcache], bl
  4821 00003E00 8A1E                <1> 		mov bl, [esi]
  4822 00003E02 B700                <1> 		mov bh, 0
  4823 00003E04 66C1E304            <1> 		shl bx, 4
  4824 00003E08 678AB7[2254]        <1> 		mov dh, [fonts + bx]
  4825 00003E0D D0CE                <1> 		ror dh, 1
  4826 00003E0F 89FE                <1> 		mov esi, edi
  4827                              <1> 	copywindow:
  4828 00003E11 B201                <1> 		mov dl, 1
  4829 00003E13 D0C6                <1> 		rol dh, 1
  4830 00003E15 20F2                <1> 		and dl, dh
  4831 00003E17 803D[BB3B0000]10    <1> 		cmp byte [colorcache], 0x10
  4832 00003E1E 731C                <1> 		jae switchwincolors
  4833 00003E20 66A1[C63B0000]      <1> 		mov ax, [windowcolor + 2]
  4834 00003E26 668907              <1> 		mov [edi], ax
  4835 00003E29 80FA00              <1> 		cmp dl, 0
  4836 00003E2C 7425                <1> 		je nowritewin
  4837 00003E2E 66A1[C43B0000]      <1> 		mov ax, [windowcolor]
  4838 00003E34 668907              <1> 		mov [edi], ax
  4839 00003E37 E917000000          <1> 		jmp nowritewin
  4840                              <1> 	switchwincolors:
  4841 00003E3C 66A1[C43B0000]      <1> 		mov ax, [windowcolor]
  4842 00003E42 668907              <1> 		mov [edi], ax
  4843 00003E45 80FA00              <1> 		cmp dl, 0
  4844 00003E48 7409                <1> 		je nowritewin
  4845 00003E4A 66A1[C63B0000]      <1> 		mov ax, [windowcolor + 2]
  4846 00003E50 668907              <1> 		mov [edi], ax
  4847                              <1> 	nowritewin:
  4848 00003E53 81C702000000        <1> 		add edi, 2
  4849 00003E59 FEC1                <1> 		inc cl
  4850 00003E5B 80F908              <1> 		cmp cl, 8
  4851 00003E5E 75B1                <1> 		jne copywindow
  4852 00003E60 6643                <1> 		inc bx
  4853 00003E62 B100                <1> 		mov cl, 0
  4854 00003E64 BA00000000          <1> 		mov edx, 0
  4855 00003E69 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4856 00003E70 01D6                <1> 		add esi, edx
  4857 00003E72 89F7                <1> 		mov edi, esi
  4858 00003E74 678AB7[2254]        <1> 		mov dh, [fonts + bx]
  4859 00003E79 D0CE                <1> 		ror dh, 1
  4860 00003E7B FEC5                <1> 		inc ch
  4861 00003E7D 80FD10              <1> 		cmp ch, 16
  4862 00003E80 758F                <1> 		jne copywindow
  4863 00003E82 66B90000            <1> 		mov cx, 0
  4864 00003E86 8B3D[2C3F0000]      <1> 		mov edi, [charposvbuf]
  4865 00003E8C 81C702000000        <1> 		add edi, 2
  4866 00003E92 81FF[4F2F0000]      <1> 		cmp edi, videobufend
  4867 00003E98 7379                <1> 		jae donewincopynow
  4868 00003E9A 8A5F01              <1> 		mov bl, [edi + 1]
  4869 00003E9D 881D[BB3B0000]      <1> 		mov [colorcache], bl
  4870 00003EA3 8A1F                <1> 		mov bl, [edi]
  4871 00003EA5 B700                <1> 		mov bh, 0
  4872 00003EA7 66C1E304            <1> 		shl bx, 4
  4873 00003EAB 893D[2C3F0000]      <1> 		mov [charposvbuf], edi
  4874 00003EB1 BA00000000          <1> 		mov edx, 0
  4875 00003EB6 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4876 00003EBD C1E204              <1> 		shl edx, 4
  4877 00003EC0 29D6                <1> 		sub esi, edx
  4878 00003EC2 81C610000000        <1> 		add esi, 16
  4879 00003EC8 89F7                <1> 		mov edi, esi
  4880 00003ECA 668B0D[2A3F0000]    <1> 		mov cx, [charposline]
  4881 00003ED1 6641                <1> 		inc cx
  4882 00003ED3 6681F95000          <1> 		cmp cx, 80
  4883 00003ED8 7317                <1> 		jae fixwindowcopy
  4884 00003EDA 66890D[2A3F0000]    <1> 		mov [charposline], cx
  4885 00003EE1 66B90000            <1> 		mov cx, 0
  4886 00003EE5 678AB7[2254]        <1> 		mov dh, [fonts + bx]
  4887 00003EEA D0CE                <1> 		ror dh, 1
  4888 00003EEC E920FFFFFF          <1> 		jmp copywindow
  4889                              <1> fixwindowcopy:
  4890 00003EF1 66B90000            <1> 		mov cx, 0
  4891 00003EF5 66890D[2A3F0000]    <1> 		mov [charposline], cx
  4892 00003EFC 662B15[C03B0000]    <1> 		sub dx, [winvcopydx]
  4893 00003F03 01D6                <1> 		add esi, edx
  4894 00003F05 89F7                <1> 		mov edi, esi
  4895 00003F07 678AB7[2254]        <1> 		mov dh, [fonts + bx]
  4896 00003F0C D0CE                <1> 		ror dh, 1
  4897 00003F0E E9FEFEFFFF          <1> 		jmp copywindow
  4898                              <1> donewincopynow:
  4899 00003F13 E88BD4FFFF          <1> 		call switchtermcursor
  4900 00003F18 803D[A70D0000]01    <1> 		cmp byte [termcopyon], 1
  4901 00003F1F 7501                <1> 		jne forgetresetstuff
  4902 00003F21 61                  <1> 		popa
  4903                              <1> forgetresetstuff:
  4904 00003F22 C605[A70D0000]00    <1> 		mov byte [termcopyon], 0
  4905 00003F29 C3                  <1> 		ret
  4906                              <1> 
  4907 00003F2A 0000                <1> charposline dw 0
  4908 00003F2C 00000000            <1> charposvbuf dw 0,0
  4909 00003F30 0000                <1> iconcolor dw 0
  4910                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  4911 00003F32 A2[BA420000]        <1> 		mov [iconselected], al
  4912 00003F37 8025[BA420000]01    <1> 		and byte [iconselected], 1
  4913 00003F3E B401                <1> 		mov ah, 1
  4914 00003F40 E8C5F9FFFF          <1> 		call graphicsadd
  4915                              <1> 	showicon2:
  4916 00003F45 8B3D[6A5E0000]      <1> 		mov edi, [physbaseptr]
  4917 00003F4B 6601D2              <1> 		add dx, dx
  4918 00003F4E 663B15[0F400000]    <1> 		cmp dx, [resolutionx2]
  4919 00003F55 720C                <1> 		jb screenxgood
  4920 00003F57 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4921 00003F5E 6681EA4000          <1> 		sub dx, 64
  4922                              <1> 	screenxgood:
  4923 00003F63 6681F90000          <1> 		cmp cx, 0
  4924 00003F68 7425                <1> 		je noscreenygoodchk
  4925 00003F6A 663B0D[0B400000]    <1> 		cmp cx, [resolutiony]
  4926 00003F71 720C                <1> 		jb screenygood
  4927 00003F73 668B0D[0B400000]    <1> 		mov cx, [resolutiony]
  4928 00003F7A 6681E92000          <1> 		sub cx, 32
  4929                              <1> 	screenygood:
  4930 00003F7F BB00000000          <1> 		mov ebx, 0
  4931 00003F84 668B1D[0F400000]    <1> 		mov bx, [resolutionx2]
  4932 00003F8B 01DF                <1> 		add edi, ebx
  4933 00003F8D E2F0                <1> 		loop screenygood
  4934                              <1> 	noscreenygoodchk:
  4935 00003F8F BB00000000          <1> 		mov ebx, 0
  4936 00003F94 6689D3              <1> 		mov bx, dx
  4937 00003F97 01DF                <1> 		add edi, ebx
  4938 00003F99 66B90000            <1> 		mov cx, 0
  4939 00003F9D 668B06              <1> 		mov ax, [esi]
  4940 00003FA0 81C602000000        <1> 		add esi, 2
  4941 00003FA6 66A3[303F0000]      <1> 		mov [iconcolor], ax
  4942                              <1> 	writeicon:
  4943 00003FAC 8B06                <1> 		mov eax, [esi]
  4944 00003FAE D1C0                <1> 		rol eax, 1
  4945 00003FB0 B100                <1> 		mov cl, 0
  4946                              <1> 	writeiconline:
  4947 00003FB2 B201                <1> 		mov dl, 1
  4948 00003FB4 20C2                <1> 		and dl, al
  4949 00003FB6 3215[BA420000]      <1> 		xor dl, [iconselected]
  4950 00003FBC 668B1D[4F300000]    <1> 		mov bx, [background]
  4951 00003FC3 66891F              <1> 		mov [edi], bx
  4952 00003FC6 80FA00              <1> 		cmp dl, 0
  4953 00003FC9 740A                <1> 		je noiconline
  4954 00003FCB 668B15[303F0000]    <1> 		mov dx, [iconcolor]
  4955 00003FD2 668917              <1> 		mov [edi], dx
  4956                              <1> 	noiconline:
  4957 00003FD5 81C702000000        <1> 		add edi, 2
  4958 00003FDB D1C0                <1> 		rol eax, 1
  4959 00003FDD FEC1                <1> 		inc cl
  4960 00003FDF 80F920              <1> 		cmp cl, 32
  4961 00003FE2 72CE                <1> 		jb writeiconline
  4962 00003FE4 81C604000000        <1> 		add esi, 4
  4963 00003FEA FEC5                <1> 		inc ch
  4964 00003FEC BA00000000          <1> 		mov edx, 0
  4965 00003FF1 668B15[0F400000]    <1> 		mov dx, [resolutionx2]
  4966 00003FF8 01D7                <1> 		add edi, edx
  4967 00003FFA 81EF40000000        <1> 		sub edi, 64
  4968 00004000 80FD20              <1> 		cmp ch, 32
  4969 00004003 72A7                <1> 		jb writeicon
  4970 00004005 B800000000          <1> 		mov eax, 0
  4971 0000400A C3                  <1> 		ret
  4972                              <1> 
  4973 0000400B 0000                <1> resolutiony dw 0
  4974 0000400D 0000                <1> resolutionx dw 0
  4975 0000400F 0000                <1> resolutionx2 dw 0
  4976 00004011 02                  <1> resolutionbytes db 2
  4977 00004012 0000                <1> posxvesa dw 0
  4978 00004014 0000                <1> posyvesa dw 0
  4979 00004016 FFFF                <1> colorfont dw 0xFFFF
  4980                              <1> savefontvesa:		;;same rules as showfontvesa
  4981 00004018 C605[A9310000]01    <1> 	mov byte [savefonton], 1
  4982                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  4983 0000401F 66890D[14400000]    <1> 	mov [posyvesa], cx
  4984 00004026 668915[12400000]    <1> 	mov [posxvesa], dx
  4985 0000402D 8B3D[6A5E0000]      <1> 	mov edi, [physbaseptr]
  4986 00004033 66891D[16400000]    <1> 	mov [colorfont], bx
  4987 0000403A BB00000000          <1> 	mov ebx, 0
  4988 0000403F 88C3                <1> 	mov bl, al
  4989 00004041 B800000000          <1> 	mov eax, 0
  4990 00004046 88D8                <1> 	mov al, bl
  4991 00004048 6689D3              <1> 	mov bx, dx
  4992 0000404B 89DA                <1> 	mov edx, ebx
  4993 0000404D BB00000000          <1> 	mov ebx, 0
  4994 00004052 6681F90000          <1> 	cmp cx, 0
  4995 00004057 7415                <1> 	je vesaposloopdn
  4996 00004059 668B1D[0F400000]    <1> 	mov bx, [resolutionx2]
  4997                              <1> vesaposloop:
  4998 00004060 01DA                <1> 	add edx, ebx
  4999 00004062 6681E90100          <1> 	sub cx, 1
  5000 00004067 6681F90000          <1> 	cmp cx, 0
  5001 0000406C 75F2                <1> 	jne vesaposloop
  5002                              <1> vesaposloopdn:
  5003 0000406E 01D7                <1> 	add edi, edx
  5004 00004070 BE[22540000]        <1> 	mov esi, fonts
  5005                              <1> findfontvesa:
  5006 00004075 B400                <1> 	mov ah, 0
  5007 00004077 C1E004              <1> 	shl eax, 4
  5008 0000407A 01C6                <1> 	add esi, eax
  5009 0000407C C1E804              <1> 	shr eax, 4
  5010 0000407F 81FE[425C0000]      <1> 	cmp esi, fontend
  5011 00004085 0F83BF000000        <1> 	jae near donefontvesa
  5012 0000408B 4E                  <1> 	dec esi
  5013                              <1> foundfontvesa:
  5014 0000408C 46                  <1> 	inc esi
  5015 0000408D 803D[A9310000]01    <1> 	cmp byte [savefonton], 1
  5016 00004094 0F84E1000000        <1> 	je near vesafontsaver
  5017 0000409A B100                <1> 	mov cl, 0
  5018 0000409C 8A06                <1> 	mov al, [esi]
  5019 0000409E 668B15[0F400000]    <1> 	mov dx, [resolutionx2]
  5020 000040A5 662B15[12400000]    <1> 	sub dx, [posxvesa]
  5021 000040AC 6681FA1000          <1> 	cmp dx, 16
  5022 000040B1 7708                <1> 	ja paintfontvesa
  5023 000040B3 D0EA                <1> 	shr dl, 1
  5024 000040B5 8815[7A410000]      <1> 	mov [charwidth], dl
  5025                              <1> paintfontvesa:
  5026 000040BB B201                <1> 	mov dl, 1
  5027 000040BD 20C2                <1> 	and dl, al
  5028 000040BF 803D[A8310000]01    <1> 	cmp byte [showcursorfonton], 1
  5029 000040C6 0F8435000000        <1> 	je near nodelpaintedfont
  5030 000040CC 803D[A8310000]02    <1> 	cmp byte [showcursorfonton], 2
  5031 000040D3 0F8518000000        <1> 	jne near noswitchcursorfonton
  5032 000040D9 80FA00              <1> 	cmp dl, 0
  5033 000040DC 0F842E000000        <1> 	je near nopixelset
  5034 000040E2 668B1D[16400000]    <1> 	mov bx, [colorfont]
  5035 000040E9 66891F              <1> 	mov [edi], bx
  5036 000040EC E91F000000          <1> 	jmp nopixelset
  5037                              <1> noswitchcursorfonton:
  5038 000040F1 3215[AA310000]      <1> 	xor dl, [mouseselecton]
  5039 000040F7 668B1D[4F300000]    <1> 	mov bx, [background]
  5040 000040FE 66891F              <1> 	mov [edi], bx
  5041                              <1> nodelpaintedfont:
  5042 00004101 80FA00              <1> 	cmp dl, 0
  5043 00004104 740A                <1> 	je nopixelset
  5044 00004106 668B15[16400000]    <1> 	mov dx, [colorfont]
  5045 0000410D 668917              <1> 	mov [edi], dx
  5046                              <1> nopixelset:
  5047 00004110 81C702000000        <1> 	add edi, 2
  5048 00004116 D0C0                <1> 	rol al, 1
  5049 00004118 FEC1                <1> 	inc cl
  5050 0000411A 3A0D[7A410000]      <1> 	cmp cl, [charwidth]
  5051 00004120 7299                <1> 	jb paintfontvesa
  5052 00004122 FEC5                <1> 	inc ch
  5053 00004124 BA00000000          <1> 	mov edx, 0
  5054 00004129 668B15[0F400000]    <1> 	mov dx, [resolutionx2]
  5055 00004130 01D7                <1> 	add edi, edx
  5056 00004132 BA00000000          <1> 	mov edx, 0
  5057 00004137 8A15[7A410000]      <1> 	mov dl, [charwidth]
  5058 0000413D 00D2                <1> 	add dl, dl
  5059 0000413F 29D7                <1> 	sub edi, edx
  5060 00004141 80FD10              <1> 	cmp ch, 16
  5061 00004144 0F8242FFFFFF        <1> 	jb foundfontvesa
  5062                              <1> donefontvesa:
  5063 0000414A B208                <1> 	mov dl, 8
  5064 0000414C 8815[7A410000]      <1> 	mov [charwidth], dl
  5065 00004152 668B15[12400000]    <1> 	mov dx, [posxvesa]
  5066 00004159 8A1D[7A410000]      <1> 	mov bl, [charwidth]
  5067 0000415F B700                <1> 	mov bh, 0
  5068 00004161 6601DA              <1> 	add dx, bx
  5069 00004164 668B1D[16400000]    <1> 	mov bx, [colorfont]
  5070 0000416B 668B0D[14400000]    <1> 	mov cx, [posyvesa]
  5071 00004172 C605[A9310000]00    <1> 	mov byte [savefonton], 0
  5072 00004179 C3                  <1> 	ret
  5073 0000417A 08                  <1> charwidth db 8
  5074                              <1> vesafontsaver:
  5075 0000417B B000                <1> 	mov al, 0
  5076 0000417D B100                <1> 	mov cl, 0
  5077                              <1> vesafontsaver2:
  5078 0000417F 668B17              <1> 	mov dx, [edi]
  5079 00004182 663B15[16400000]    <1> 	cmp dx, [colorfont]
  5080 00004189 742F                <1> 	je colorfontmatch
  5081                              <1> donecolormatch:
  5082 0000418B 81C702000000        <1> 	add edi, 2
  5083 00004191 D0C0                <1> 	rol al, 1
  5084 00004193 FEC1                <1> 	inc cl
  5085 00004195 80F908              <1> 	cmp cl, 8
  5086 00004198 72E5                <1> 	jb vesafontsaver2
  5087 0000419A 8806                <1> 	mov [esi], al
  5088 0000419C 46                  <1> 	inc esi
  5089 0000419D FEC5                <1> 	inc ch
  5090 0000419F BA00000000          <1> 	mov edx, 0
  5091 000041A4 668B15[0F400000]    <1> 	mov dx, [resolutionx2]
  5092 000041AB 01D7                <1> 	add edi, edx
  5093 000041AD 81EF10000000        <1> 	sub edi, 16
  5094 000041B3 80FD10              <1> 	cmp ch, 16
  5095 000041B6 72C3                <1> 	jb vesafontsaver
  5096 000041B8 EB90                <1> 	jmp donefontvesa
  5097                              <1> colorfontmatch:
  5098 000041BA 0401                <1> 	add al, 1
  5099 000041BC EBCD                <1> 	jmp donecolormatch
  5100                              <1> 	
  5101                              <1> showbmp:
  5102 000041BE 668B06              <1> 	mov ax, [esi]
  5103 000041C1 663D424D            <1> 	cmp ax, "BM"
  5104 000041C5 0F858E000000        <1> 	jne near endedbmp
  5105 000041CB 8B3D[6A5E0000]      <1> 	mov edi, [physbaseptr]
  5106 000041D1 6689D0              <1> 	mov ax, dx
  5107 000041D4 6689CB              <1> 	mov bx, cx
  5108 000041D7 B900000000          <1> 	mov ecx, 0
  5109 000041DC BA00000000          <1> 	mov edx, 0
  5110 000041E1 6689D9              <1> 	mov cx, bx
  5111 000041E4 6689C2              <1> 	mov dx, ax
  5112 000041E7 01D7                <1> 	add edi, edx
  5113 000041E9 01D7                <1> 	add edi, edx
  5114 000041EB BA00000000          <1> 	mov edx, 0
  5115 000041F0 668B15[0F400000]    <1> 	mov dx, [resolutionx2]
  5116 000041F7 41                  <1> 	inc ecx
  5117 000041F8 034E16              <1> 	add ecx, [esi + 22]
  5118                              <1> bmplocloop:
  5119 000041FB 01D7                <1> 	add edi, edx
  5120 000041FD E2FC                <1> 	loop bmplocloop
  5121 000041FF 29D7                <1> 	sub edi, edx
  5122 00004201 8B5612              <1> 	mov edx, [esi + 18]
  5123 00004204 8B4E16              <1> 	mov ecx, [esi + 22]
  5124 00004207 8B460A              <1> 	mov eax, [esi + 10]
  5125 0000420A 8B5E02              <1> 	mov ebx, [esi + 2]
  5126 0000420D 01F3                <1> 	add ebx, esi
  5127 0000420F 891D[5F420000]      <1> 	mov [bmpend], ebx
  5128 00004215 89D3                <1> 	mov ebx, edx
  5129 00004217 01C6                <1> 	add esi, eax
  5130                              <1> ldxbmp:
  5131 00004219 668B06              <1> 	mov ax, [esi]
  5132 0000421C 668907              <1> 	mov [edi], ax
  5133 0000421F 81C702000000        <1> 	add edi, 2
  5134 00004225 81C602000000        <1> 	add esi, 2
  5135 0000422B 3B35[5F420000]      <1> 	cmp esi, [bmpend]
  5136 00004231 7726                <1> 	ja endedbmp
  5137 00004233 4A                  <1> 	dec edx
  5138 00004234 81FA00000000        <1> 	cmp edx, 0
  5139 0000423A 77DD                <1> 	ja ldxbmp
  5140 0000423C BA00000000          <1> 	mov edx, 0
  5141 00004241 668B15[0F400000]    <1> 	mov dx, [resolutionx2]
  5142 00004248 29DF                <1> 	sub edi, ebx
  5143 0000424A 29DF                <1> 	sub edi, ebx
  5144 0000424C 29D7                <1> 	sub edi, edx
  5145 0000424E 49                  <1> 	dec ecx
  5146 0000424F 89DA                <1> 	mov edx, ebx
  5147 00004251 81F900000000        <1> 	cmp ecx, 0
  5148 00004257 77C0                <1> 	ja ldxbmp
  5149                              <1> endedbmp:
  5150 00004259 E81AF0FFFF          <1> 	call switchmousepos2
  5151 0000425E C3                  <1> 	ret
  5152                              <1> 	
  5153 0000425F 00000000            <1> 	bmpend dd 0
  5154                              <1> 
  5155                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5156 00004263 00000000            <1> 	showstringesi dw 0,0
  5157 00004267 00                  <1> 	mouseon db 0
  5158 00004268 737461727400        <1> 	start	db "start",0
  5159 0000426E 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  5160 00004277 426F6F2100          <1> 	boomsg db "Boo!",0
  5161 0000427C 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  5162 00004285 73206561737920746F- <1>
  5163 0000428E 20647261772E00      <1>
  5164 00004295 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  5165 0000429E 6D206E6F6D00        <1>
  5166 000042A4 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  5167 000042AD 75636B7300          <1>
  5168 000042B2 5800                <1> 	xmsg db "X",0
  5169 000042B4 0000                <1> 	icon dw 0	;pointer to icon
  5170 000042B6 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  5171 000042BA 00                  <1> 	iconselected db 0
  5172                              <1> 	
  5173                              <1> 	boo:
  5174 000042BB BE[77420000]        <1> 		mov esi, boomsg
  5175 000042C0 66BA6400            <1> 		mov dx, 100
  5176 000042C4 66B94001            <1> 		mov cx, 320
  5177 000042C8 BB00000000          <1> 		mov ebx, 0
  5178 000042CD 66B80000            <1> 		mov ax, 0
  5179 000042D1 E9A0F8FFFF          <1> 		jmp showstring
  5180                              <1> 
  5181                              <1> 	pacmannomnom:
  5182 000042D6 BE[95420000]        <1> 		mov esi, pacnom
  5183 000042DB 66BA8200            <1> 		mov dx, 130
  5184 000042DF 66B93C00            <1> 		mov cx, 60
  5185 000042E3 BB00000000          <1> 		mov ebx, 0
  5186 000042E8 66B80000            <1> 		mov ax, 0
  5187 000042EC E985F8FFFF          <1> 		jmp showstring	
  5188                              <1> 	
  5189                              <1> 	noie:
  5190 000042F1 BE[85430000]        <1> 		mov esi, termwindow
  5191 000042F6 66BA0000            <1> 		mov dx, 0
  5192 000042FA 66B90000            <1> 		mov cx, 0
  5193 000042FE BB[C8130000]        <1> 		mov ebx, os
  5194                              <1> ;;		mov ebx, internettest
  5195 00004303 891D[EC030000]      <1> 		mov [user2codepoint], ebx
  5196 00004309 66B80000            <1> 		mov ax, 0
  5197 0000430D E8BAF8FFFF          <1> 		call showwindow
  5198                              <1> ;;		jmp internettest
  5199 00004312 E9B1D0FFFF          <1> 		jmp os
  5200 00004317 C3                  <1> 		ret
  5201                              <1> 
  5202                              <1> 	gotomenuboot:
  5203 00004318 BE[85430000]        <1> 		mov esi, termwindow
  5204 0000431D 66BA0000            <1> 		mov dx, 0
  5205 00004321 66B90000            <1> 		mov cx, 0
  5206 00004325 BB[C8130000]        <1> 		mov ebx, os
  5207 0000432A 891D[EC030000]      <1> 		mov [user2codepoint], ebx
  5208 00004330 66B80000            <1> 		mov ax, 0
  5209 00004334 E893F8FFFF          <1> 		call showwindow
  5210 00004339 E98AD0FFFF          <1> 		jmp os
  5211 0000433E C3                  <1> 		ret
  5212                              <1> 
  5213                              <1> 	winblows:
  5214 0000433F BE[A4420000]        <1> 		mov esi, winmsg
  5215 00004344 66BA0000            <1> 		mov dx, 0
  5216 00004348 668B0D[0B400000]    <1> 		mov cx, [resolutiony]
  5217 0000434F 6681E92000          <1> 		sub cx, 32
  5218 00004354 BB00000000          <1> 		mov ebx, 0
  5219 00004359 B400                <1> 		mov ah, 0
  5220 0000435B B011                <1> 		mov al, 00010001b
  5221 0000435D E814F8FFFF          <1> 		call showstring
  5222 00004362 BE[6E420000]        <1> 		mov esi, gotomenu
  5223 00004367 668B0D[0B400000]    <1> 		mov cx, [resolutiony]
  5224 0000436E 6681E93000          <1> 		sub cx, 48
  5225 00004373 66BA0000            <1> 		mov dx, 0
  5226 00004377 B400                <1> 		mov ah, 0
  5227 00004379 B010                <1> 		mov al, 00010000b
  5228 0000437B BB[18430000]        <1> 		mov ebx, gotomenuboot
  5229 00004380 E9F1F7FFFF          <1> 		jmp showstring
  5230                              <1> 
  5231 00004385 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  5232 00004389 5465726D696E616C00  <1> 	termmsg:	db "Terminal",0	;;window title
  5233                              <1> 	
  5234 00004389 <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  5235 00004389 <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  5236 00004389 <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  5237 00004389 <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  5238 00004389 <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  5239                                      ;%include 'source/network.asm'
  5240                                  	%include 'source/rtl8139.asm'
  5241                              <1> ;;rtl8139.asm
  5242                              <1> initcard:	;;should find card, get mac, and initialize card
  5243 0000461C B800000000          <1> 	mov eax, 0
  5244 00004621 A2[56490000]        <1> 	mov [pcifunction], al
  5245 00004626 A2[54490000]        <1> 	mov [pcibus], al
  5246 0000462B A2[55490000]        <1> 	mov [pcidevice], al
  5247 00004630 B002                <1> 	mov al, 0x02 ;;type code
  5248 00004632 A2[D9490000]        <1> 	mov [pcitype], al
  5249 00004637 E81D030000          <1> 	call getpciport
  5250                              <1> initnic:		;;;;Here i tried the rtl8139 interface, fuck it
  5251 0000463C 8915[2B480000]      <1> 	mov [basenicaddr], edx
  5252 00004642 89D1                <1> 	mov ecx, edx
  5253 00004644 C605[0D190000]03    <1> 	mov byte [firsthexshown], 3
  5254 0000464B E8D2D2FFFF          <1> 	call showhex	;;for debugging, please remove
  5255 00004650 BE[1F340000]        <1> 	mov esi, rbuffstart
  5256 00004655 B900200000          <1> 	mov ecx, 8192
  5257 0000465A B800000000          <1> 	mov eax, 0
  5258                              <1> clearrbuff:		;;clear receive buffer which starts at rbuffstart
  5259 0000465F 8806                <1> 	mov [esi], al
  5260 00004661 46                  <1> 	inc esi
  5261 00004662 6649                <1> 	dec cx
  5262 00004664 6681F90000          <1> 	cmp cx, 0
  5263 00004669 75F4                <1> 	jne clearrbuff
  5264                              <1> findmac:
  5265 0000466B 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5266 00004671 BF[33480000]        <1> 	mov edi, sysmac
  5267 00004676 B906000000          <1> 	mov ecx, 6
  5268                              <1> macputloop:
  5269 0000467B EC                  <1> 	in al, dx
  5270 0000467C 8807                <1> 	mov [edi], al
  5271 0000467E 47                  <1> 	inc edi
  5272 0000467F 42                  <1> 	inc edx
  5273 00004680 49                  <1> 	dec ecx
  5274 00004681 75F8                <1> 	jnz macputloop
  5275 00004683 B9[33480000]        <1> 	mov ecx, sysmac
  5276 00004688 E837010000          <1> 	call showmac
  5277                              <1> resetnic:
  5278 0000468D 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5279 00004693 81C252000000        <1> 	add edx, 0x52
  5280 00004699 B000                <1> 	mov al, 0
  5281 0000469B EE                  <1> 	out dx, al	;;WAKE UP!!!!
  5282 0000469C 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5283 000046A2 81C237000000        <1> 	add edx, 0x37
  5284 000046A8 B010                <1> 	mov al, 0x10
  5285 000046AA EE                  <1> 	out dx, al	;;Reset
  5286                              <1> resetnicwait:
  5287 000046AB 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5288 000046B1 81C237000000        <1> 	add edx, 0x37
  5289 000046B7 EC                  <1> 	in al, dx
  5290 000046B8 2410                <1> 	and al, 0x10
  5291 000046BA 3C10                <1> 	cmp al, 0x10
  5292 000046BC 0F84E9FFFFFF        <1> 	je near resetnicwait
  5293 000046C2 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5294 000046C8 81C230000000        <1> 	add edx, 0x30
  5295 000046CE B8[1F340000]        <1> 	mov eax, rbuffstart
  5296 000046D3 EF                  <1> 	out dx, eax	;;give nic receive buffer location
  5297 000046D4 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5298 000046DA 81C23C000000        <1> 	add edx, 0x3C
  5299 000046E0 66B80500            <1> 	mov ax, 0x0005
  5300 000046E4 66EF                <1> 	out dx, ax	;;set TOK and ROK
  5301 000046E6 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5302 000046EC 81C244000000        <1> 	add edx, 0x44
  5303 000046F2 B80F000000          <1> 	mov eax, 0xf
  5304 000046F7 EF                  <1> 	out dx, eax	;;recieve packets from all matches
  5305 000046F8 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5306 000046FE 81C237000000        <1> 	add edx, 0x37
  5307 00004704 B00C                <1> 	mov al, 0x0C
  5308 00004706 EE                  <1> 	out dx, al	;;use transmit and receive
  5309 00004707 C605[14480000]01    <1> 	mov byte [nicconfig], 1
  5310 0000470E C3                  <1> 	ret
  5311                              <1> 	
  5312                              <1> sendframe:	;;padded frame with beginning in edi and end in esi
  5313 0000470F 56                  <1> 	push esi
  5314 00004710 57                  <1> 	push edi
  5315                              <1> nic2:		;;here come the low level drivers :(
  5316                              <1> 			;;frame begins at esi, ends at edi 			;;0x0200 is the class code for ethernet cards
  5317 00004711 803D[14480000]01    <1> 	cmp byte [nicconfig], 1
  5318 00004718 7405                <1> 	je sendcachedata
  5319 0000471A E8FDFEFFFF          <1> 	call initcard
  5320                              <1> sendcachedata:
  5321 0000471F 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5322 00004725 81C210000000        <1> 	add edx, 0x10
  5323 0000472B ED                  <1> 	in eax, dx
  5324 0000472C 89C1                <1> 	mov ecx, eax
  5325 0000472E E8EFD1FFFF          <1> 	call showhex
  5326 00004733 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5327 00004739 81C213000000        <1> 	add edx, 0x13
  5328 0000473F ED                  <1> 	in eax, dx
  5329 00004740 89C1                <1> 	mov ecx, eax
  5330 00004742 E8DBD1FFFF          <1> 	call showhex
  5331 00004747 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5332 0000474D 81C223000000        <1> 	add edx, 0x23	;;23 or 20?
  5333 00004753 5F                  <1> 	pop edi
  5334 00004754 89F8                <1> 	mov eax, edi
  5335 00004756 EF                  <1> 	out dx, eax	;;here's Johnny!
  5336 00004757 5E                  <1> 	pop esi
  5337 00004758 29FE                <1> 	sub esi, edi
  5338 0000475A 89F0                <1> 	mov eax, esi
  5339 0000475C 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5340 00004762 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5341 00004768 EF                  <1> 	out dx, eax
  5342                              <1> checknicstatus1:
  5343 00004769 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5344 0000476F 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5345 00004775 ED                  <1> 	in eax, dx
  5346 00004776 2500200000          <1> 	and eax, 0x2000
  5347 0000477B 3D00200000          <1> 	cmp eax, 0x2000
  5348 00004780 75E7                <1> 	jne checknicstatus1
  5349                              <1> checknicstatus:
  5350 00004782 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5351 00004788 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5352 0000478E ED                  <1> 	in eax, dx
  5353 0000478F 2500800000          <1> 	and eax, 0x8000
  5354 00004794 3D00800000          <1> 	cmp eax, 0x8000
  5355 00004799 75E7                <1> 	jne checknicstatus
  5356 0000479B 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5357 000047A1 81C210000000        <1> 	add edx, 0x10
  5358 000047A7 ED                  <1> 	in eax, dx
  5359 000047A8 89C1                <1> 	mov ecx, eax
  5360 000047AA E873D1FFFF          <1> 	call showhex
  5361 000047AF 8B15[2B480000]      <1> 	mov edx, [basenicaddr]
  5362 000047B5 81C213000000        <1> 	add edx, 0x13
  5363 000047BB ED                  <1> 	in eax, dx
  5364 000047BC 89C1                <1> 	mov ecx, eax
  5365 000047BE E85FD1FFFF          <1> 	call showhex
  5366 000047C3 C3                  <1> 	ret
  5367                              <1> 	
  5368                              <1> showmac:	;;mac begins in [ecx]
  5369 000047C4 BE[FC470000]        <1> 	mov esi, macprint
  5370 000047C9 89CF                <1> 	mov edi, ecx
  5371 000047CB 81C106000000        <1> 	add ecx, 6
  5372                              <1> showmacloop:
  5373 000047D1 8A07                <1> 	mov al, [edi]
  5374 000047D3 8A27                <1> 	mov ah, [edi]
  5375 000047D5 C0E804              <1> 	shr al, 4
  5376 000047D8 C0E404              <1> 	shl ah, 4
  5377 000047DB C0EC04              <1> 	shr ah, 4
  5378 000047DE 0430                <1> 	add al, 48
  5379 000047E0 80C430              <1> 	add ah, 48
  5380 000047E3 668906              <1> 	mov [esi], ax
  5381 000047E6 81C603000000        <1> 	add esi, 3
  5382 000047EC 47                  <1> 	inc edi
  5383 000047ED 39CF                <1> 	cmp edi, ecx
  5384 000047EF 72E0                <1> 	jb showmacloop
  5385 000047F1 BE[FC470000]        <1> 	mov esi, macprint
  5386 000047F6 E888C7FFFF          <1> 	call print
  5387 000047FB C3                  <1> 	ret
  5388                              <1> 	
  5389 000047FC 30302D30302D30302D- <1> macprint db "00-00-00-00-00-00  ",0
  5390 00004805 30302D30302D303020- <1>
  5391 0000480E 2000                <1>
  5392 00004810 00000000            <1> ethernetend dw 0,0
  5393 00004814 00                  <1> nicconfig db 0
  5394 00004815 4E4F204E494300      <1> nonicfoundmsg db "NO NIC",0
  5395 0000481C 496E6974696174696E- <1> initnicmsg	db "Initiating NIC",0
  5396 00004825 67204E494300        <1>
  5397 0000482B 00000000            <1> basenicaddr	db 0,0,0,0
  5398 0000482F C0A80005            <1> sysip db 192,168,0,5
  5399 00004833 000000000000        <1> sysmac	db 0,0,0,0,0,0		;;my mac address
  5400                                  	%include 'source/arp.asm'
  5401                              <1> ;;let's try something else
  5402                              <1> ;;arp.asm
  5403                              <1> arpinit:
  5404 00004839 BE[F0480000]        <1> 	mov esi, arptable
  5405 0000483E BF[33480000]        <1> 	mov edi, sysmac
  5406 00004843 BB[2F480000]        <1> 	mov ebx, sysip
  5407 00004848 8B0F                <1> 	mov ecx, [edi]
  5408 0000484A 890E                <1> 	mov [esi], ecx
  5409 0000484C 668B4F04            <1> 	mov cx, [edi + 4]
  5410 00004850 894E04              <1> 	mov [esi + 4], ecx
  5411 00004853 8B0B                <1> 	mov ecx, [ebx]
  5412 00004855 894E06              <1> 	mov [esi + 6], ecx
  5413 00004858 C605[EF480000]01    <1> 	mov byte [arpconfig], 1
  5414 0000485F C3                  <1> 	ret
  5415                              <1> arptest:
  5416 00004860 803D[EF480000]01    <1> 	cmp byte [arpconfig], 1
  5417 00004867 7405                <1> 	je arptest2
  5418 00004869 E8CBFFFFFF          <1> 	call arpinit
  5419                              <1> arptest2:	;;try to reach 192.168.0.1
  5420 0000486E 8B0D[33480000]      <1> 	mov ecx, [sysmac]
  5421 00004874 668B1D[37480000]    <1> 	mov bx, [sysmac + 4]
  5422 0000487B 890D[B5480000]      <1> 	mov [sourcemac], ecx
  5423 00004881 66891D[B9480000]    <1> 	mov [sourcemac + 4],bx
  5424 00004888 890D[C5480000]      <1> 	mov [arpsenderinfo], ecx
  5425 0000488E 66891D[C9480000]    <1> 	mov [arpsenderinfo + 4], bx
  5426 00004895 BF[AF480000]        <1> 	mov edi, frame
  5427 0000489A BE[EF480000]        <1> 	mov esi, framend
  5428 0000489F E86BFEFFFF          <1> 	call sendframe
  5429 000048A4 BE[FC530000]        <1> 	mov esi, line
  5430 000048A9 E8D5C6FFFF          <1> 	call print
  5431 000048AE C3                  <1> 	ret
  5432                              <1> 	
  5433                              <1> ;;example frame
  5434                              <1> frame:
  5435 000048AF FFFFFFFFFFFF        <1> destinationmac:	db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  5436 000048B5 000000000000        <1> sourcemac:		db 0,0,0,0,0,0
  5437 000048BB 0608                <1> ethertype:		dw 0x0806			;;arp
  5438                              <1> 	;;example packet
  5439 000048BD 0100                <1> 	arppacket: 		dw 1				;;ethernet is 1
  5440 000048BF 0008                <1> 	arpprotocol: 	dw 0x0800			;;ip is 0x800
  5441 000048C1 0604                <1> 					db 6,4				;;length of mac, length of ip
  5442 000048C3 0100                <1> 	arpoperation: 	dw 1				;;one for arp request
  5443 000048C5 000000000000        <1> 	arpsenderinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;mac
  5444 000048CB C0A80005            <1> 					db 192,168,0,5			;;ip
  5445 000048CF 000000000000        <1> 	arptargetinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;ignored in requests
  5446 000048D5 C0A80001            <1> 					db 192,168,0,1			;;ip
  5447 000048D9 00<rept>            <1> padding:		times (64-($-frame)) db 0
  5448                              <1> framend:
  5449                              <1> 
  5450 000048EF 00                  <1> arpconfig db 0
  5451                              <1> arptable:	;;mac,ip
  5452 000048F0 000000000000000000- <1> 	times 10 db 0,0,0,0,0,0,0,0,0,0
  5453 000048F9 00<rept>            <1>
  5454                              <1> arptableend:
  5455                                  	%include 'source/pci.asm'
  5456 00004954 00                  <1> pcibus		db 0
  5457 00004955 00                  <1> pcidevice	db 0
  5458 00004956 00                  <1> pcifunction	db 0
  5459 00004957 00                  <1> pciregister	db 0
  5460 00004958 00                  <1> pcireqtype db 0
  5461                              <1> 
  5462                              <1> getpciport:
  5463 00004959 B001                <1> 	mov al, 1
  5464 0000495B A2[58490000]        <1> 	mov [pcireqtype], al
  5465 00004960 E91E000000          <1> 	jmp searchpci
  5466                              <1> pcidump:
  5467 00004965 B800000000          <1> 	mov eax, 0
  5468 0000496A A2[56490000]        <1> 	mov [pcifunction], al
  5469 0000496F A2[54490000]        <1> 	mov [pcibus], al
  5470 00004974 A2[55490000]        <1> 	mov [pcidevice], al
  5471 00004979 A2[58490000]        <1> 	mov [pcireqtype], al
  5472 0000497E E900000000          <1> 	jmp searchpci
  5473                              <1> searchpci:		;;return in ebx, start X in pciX
  5474 00004983 B000                <1> 	mov al, 0
  5475 00004985 A2[57490000]        <1> 	mov [pciregister], al
  5476 0000498A E84F010000          <1> 	call getpciaddr
  5477 0000498F BAF80C0000          <1> 	mov edx, 0xCF8
  5478 00004994 EF                  <1> 	out dx, eax	;;request pci config
  5479 00004995 BAFC0C0000          <1> 	mov edx, 0xCFC
  5480 0000499A ED                  <1> 	in eax, dx 	;;read in pci config
  5481 0000499B 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  5482 000049A0 0F8237000000        <1> 	jb near checkpcidevice
  5483                              <1> searchpciret:
  5484                              <1> nextpcidevice:
  5485 000049A6 B000                <1> 	mov al, 0
  5486 000049A8 A2[56490000]        <1> 	mov [pcifunction], al
  5487 000049AD A0[55490000]        <1> 	mov al, [pcidevice]
  5488 000049B2 3C1F                <1> 	cmp al, 11111b
  5489 000049B4 0F83B8000000        <1> 	jae near nextpcibus
  5490 000049BA FEC0                <1> 	inc al
  5491 000049BC A2[55490000]        <1> 	mov [pcidevice], al
  5492 000049C1 EBC0                <1> 	jmp searchpci
  5493 000049C3 A0[56490000]        <1> 	mov al, [pcifunction]
  5494 000049C8 3C07                <1> 	cmp al, 111b
  5495 000049CA 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  5496 000049D0 FEC0                <1> 	inc al
  5497 000049D2 A2[56490000]        <1> 	mov [pcifunction], al
  5498 000049D7 EBAA                <1> 	jmp searchpci
  5499 000049D9 00000000            <1> pcitype: db 0,0,0,0
  5500                              <1> checkpcidevice:
  5501 000049DD B000                <1> 	mov al, 0
  5502 000049DF 3805[58490000]      <1> 	cmp [pcireqtype], al
  5503 000049E5 0F842B000000        <1> 	je near dumppcidevice
  5504 000049EB B008                <1> 	mov al, 0x08
  5505 000049ED A2[57490000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  5506 000049F2 E8E7000000          <1> 	call getpciaddr
  5507 000049F7 BAF80C0000          <1> 	mov edx, 0xCF8
  5508 000049FC EF                  <1> 	out dx, eax
  5509 000049FD BAFC0C0000          <1> 	mov edx, 0xCFC
  5510 00004A02 ED                  <1> 	in eax, dx
  5511 00004A03 C1C008              <1> 	rol eax, 8
  5512 00004A06 8A1D[D9490000]      <1> 	mov bl, [pcitype]
  5513 00004A0C 38D8                <1> 	cmp al, bl
  5514 00004A0E 0F8480000000        <1> 	je near foundpciaddr
  5515 00004A14 EB90                <1> 	jmp searchpciret
  5516                              <1> dumppcidevice:
  5517 00004A16 B000                <1> 	mov al, 0
  5518 00004A18 A2[57490000]        <1> 	mov [pciregister], al
  5519 00004A1D E8BC000000          <1> 	call getpciaddr
  5520 00004A22 89C1                <1> 	mov ecx, eax
  5521 00004A24 C605[0D190000]00    <1> 	mov byte [firsthexshown],0
  5522 00004A2B E8F2CEFFFF          <1> 	call showhex
  5523                              <1> dumppcidevicelp:
  5524 00004A30 A2[57490000]        <1> 	mov [pciregister], al
  5525 00004A35 E8A4000000          <1> 	call getpciaddr
  5526 00004A3A BAF80C0000          <1> 	mov edx, 0xCF8
  5527 00004A3F EF                  <1> 	out dx, eax
  5528 00004A40 BAFC0C0000          <1> 	mov edx, 0xCFC
  5529 00004A45 ED                  <1> 	in eax, dx
  5530 00004A46 89C1                <1> 	mov ecx, eax
  5531 00004A48 A0[57490000]        <1> 	mov al, [pciregister]
  5532 00004A4D 0404                <1> 	add al, 4
  5533 00004A4F 3C1A                <1> 	cmp al, 0x1A
  5534 00004A51 730E                <1> 	jae dumppcidn
  5535 00004A53 C605[0D190000]00    <1> 	mov byte [firsthexshown],0
  5536 00004A5A E8C3CEFFFF          <1> 	call showhex
  5537 00004A5F EBCF                <1> 	jmp dumppcidevicelp
  5538                              <1> dumppcidn:
  5539 00004A61 C605[0D190000]00    <1> 	mov byte [firsthexshown],0
  5540 00004A68 E8B5CEFFFF          <1> 	call showhex
  5541 00004A6D E934FFFFFF          <1> 	jmp searchpciret
  5542                              <1> nextpcibus:
  5543 00004A72 B000                <1> 	mov al, 0
  5544 00004A74 A2[55490000]        <1> 	mov [pcidevice], al
  5545 00004A79 A0[54490000]        <1> 	mov al, [pcibus]
  5546 00004A7E 3C7F                <1> 	cmp al, 1111111b
  5547 00004A80 730C                <1> 	jae donesearchpci
  5548 00004A82 FEC0                <1> 	inc al
  5549 00004A84 A2[54490000]        <1> 	mov [pcibus], al
  5550 00004A89 E9F5FEFFFF          <1> 	jmp searchpci
  5551                              <1> donesearchpci:
  5552 00004A8E BA00000000          <1> 	mov edx, 0
  5553 00004A93 C3                  <1> 	ret
  5554                              <1> foundpciaddr:
  5555 00004A94 B010                <1> 	mov al, 0x10
  5556 00004A96 A2[57490000]        <1> 	mov [pciregister], al
  5557                              <1> findpciioaddr:
  5558 00004A9B E83E000000          <1> 	call getpciaddr
  5559 00004AA0 BAF80C0000          <1> 	mov edx, 0xCF8
  5560 00004AA5 EF                  <1> 	out dx, eax
  5561 00004AA6 BAFC0C0000          <1> 	mov edx, 0xCFC
  5562 00004AAB ED                  <1> 	in eax, dx
  5563 00004AAC 89C3                <1> 	mov ebx, eax
  5564 00004AAE 81E301000000        <1> 	and ebx, 1
  5565 00004AB4 81FB00000000        <1> 	cmp ebx, 0
  5566 00004ABA 0F8408000000        <1> 	je near notpciioaddr
  5567 00004AC0 2D01000000          <1> 	sub eax, 1
  5568 00004AC5 89C2                <1> 	mov edx, eax
  5569 00004AC7 C3                  <1> 	ret
  5570                              <1> notpciioaddr:
  5571 00004AC8 A0[57490000]        <1> 	mov al, [pciregister]
  5572 00004ACD 0404                <1> 	add al, 4
  5573 00004ACF 3C28                <1> 	cmp al, 0x28
  5574 00004AD1 0F87CFFEFFFF        <1> 	ja near searchpciret
  5575 00004AD7 A2[57490000]        <1> 	mov [pciregister], al
  5576 00004ADC EBBD                <1> 	jmp findpciioaddr
  5577                              <1> getpciaddr:		;;puts it in eax and ebx
  5578 00004ADE B800000000          <1> 			mov eax, 0
  5579 00004AE3 BB00000080          <1> 			mov ebx, 0x80000000
  5580 00004AE8 A0[54490000]        <1> 			mov al, [pcibus]
  5581 00004AED C1E010              <1> 			shl eax, 16
  5582 00004AF0 01C3                <1> 			add ebx, eax
  5583 00004AF2 B800000000          <1> 			mov eax, 0
  5584 00004AF7 A0[55490000]        <1> 			mov al, [pcidevice]
  5585 00004AFC C1E00B              <1> 			shl eax, 11
  5586 00004AFF 01C3                <1> 			add ebx, eax
  5587 00004B01 B800000000          <1> 			mov eax, 0
  5588 00004B06 A0[56490000]        <1> 			mov al, [pcifunction]
  5589 00004B0B C1E008              <1> 			shl eax, 8
  5590 00004B0E 01C3                <1> 			add ebx, eax
  5591 00004B10 B800000000          <1> 			mov eax, 0
  5592 00004B15 A0[57490000]        <1> 			mov al, [pciregister]
  5593 00004B1A 01C3                <1> 			add ebx, eax
  5594 00004B1C 89D8                <1> 			mov eax, ebx
  5595 00004B1E C3                  <1> 			ret
  5596                              <1> 			
  5597                                  	;%include 'source/process.asm'
  5598                                      %include 'source/disk.asm'
  5599                              <1> ;;disk.asm - new - using lba
  5600                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  5601 00004B1F 803F00              <1> 	cmp byte [edi], 0
  5602 00004B22 0F8444000000        <1> 	je near nofileload
  5603 00004B28 89FA                <1> 	mov edx, edi
  5604 00004B2A BB[4C530000]        <1> 	mov ebx, diskfileindex
  5605                              <1> nextnamechar:
  5606 00004B2F 8A07                <1> 	mov al, [edi]
  5607 00004B31 8A23                <1> 	mov ah, [ebx]
  5608 00004B33 47                  <1> 	inc edi
  5609 00004B34 43                  <1> 	inc ebx
  5610 00004B35 88C1                <1> 	mov cl, al
  5611 00004B37 08E1                <1> 	or cl, ah
  5612 00004B39 80F900              <1> 	cmp cl, 0
  5613 00004B3C 744E                <1> 	je equalfilenames
  5614 00004B3E 80F920              <1> 	cmp cl, ' '
  5615 00004B41 7449                <1> 	je equalfilenames
  5616 00004B43 3C2A                <1> 	cmp al, '*'
  5617 00004B45 742B                <1> 	je equalfilenames2
  5618 00004B47 80FC00              <1> 	cmp ah, 0
  5619 00004B4A 7410                <1> 	je nextfilename
  5620 00004B4C 3C00                <1> 	cmp al, 0
  5621 00004B4E 740C                <1> 	je nextfilename
  5622 00004B50 38E0                <1> 	cmp al, ah
  5623 00004B52 74DB                <1> 	je nextnamechar
  5624                              <1> getebxzero:
  5625 00004B54 8A23                <1> 	mov ah, [ebx]
  5626 00004B56 43                  <1> 	inc ebx
  5627 00004B57 80FC00              <1> 	cmp ah, 0
  5628 00004B5A 75F8                <1> 	jne getebxzero
  5629                              <1> nextfilename:
  5630 00004B5C 81C308000000        <1> 	add ebx, 8		;;next descriptor
  5631 00004B62 89D7                <1> 	mov edi, edx
  5632 00004B64 81FB[BE530000]      <1> 	cmp ebx, enddiskfileindex
  5633 00004B6A 72C3                <1> 	jb nextnamechar
  5634                              <1> nofileload:
  5635 00004B6C BA94010000          <1> 	mov edx, 404	;;indicate not found error
  5636 00004B71 C3                  <1> 	ret
  5637                              <1> equalfilenames2:
  5638 00004B72 81EB02000000        <1> 	sub ebx, 2
  5639                              <1> eqfilefind:
  5640 00004B78 43                  <1> 	inc ebx
  5641 00004B79 81FB[BE530000]      <1> 	cmp ebx, enddiskfileindex
  5642 00004B7F 0F83E7FFFFFF        <1> 	jae near nofileload
  5643 00004B85 8A03                <1> 	mov al, [ebx]
  5644 00004B87 3C00                <1> 	cmp al, 0
  5645 00004B89 75ED                <1> 	jne eqfilefind
  5646 00004B8B 43                  <1> 	inc ebx
  5647                              <1> equalfilenames:
  5648 00004B8C 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  5649 00004B8F 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  5650 00004B91 031D[83010000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  5651 00004B97 B900000000          <1> 	mov ecx, 0
  5652 00004B9C 88C1                <1> 	mov cl, al			;;get excess number of sectors
  5653 00004B9E D0E1                <1> 	shl cl, 1
  5654 00004BA0 D0E9                <1> 	shr cl, 1			;;cut off at 128
  5655 00004BA2 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  5656 00004BA4 B500                <1> 	mov ch, 0			;;drive 0
  5657 00004BA6 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  5658                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  5659 00004BA9 A3[E74B0000]        <1> 	mov [filetracks], eax
  5660 00004BAE 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  5661 00004BB0 89DA                <1> 	mov edx, ebx
  5662 00004BB2 80F900              <1> 	cmp cl, 0
  5663 00004BB5 7405                <1> 	je copytracksforfile
  5664 00004BB7 E831000000          <1> 	call diskr		;;take care of excess sectors
  5665                              <1> copytracksforfile:
  5666 00004BBC A1[E74B0000]        <1> 	mov eax, [filetracks]
  5667 00004BC1 3D00000000          <1> 	cmp eax, 0
  5668 00004BC6 7419                <1> 	je donecopyfile
  5669 00004BC8 48                  <1> 	dec eax
  5670 00004BC9 A3[E74B0000]        <1> 	mov [filetracks], eax
  5671 00004BCE 89D3                <1> 	mov ebx, edx	;;get end lba
  5672 00004BD0 B180                <1> 	mov cl, 0x80
  5673 00004BD2 8A2D[82010000]      <1> 	mov ch, [DriveNumber]
  5674 00004BD8 89FE                <1> 	mov esi, edi	;;reset buffer
  5675 00004BDA E80E000000          <1> 	call diskr
  5676 00004BDF EBDB                <1> 	jmp copytracksforfile
  5677                              <1> donecopyfile:
  5678 00004BE1 BA00000000          <1> 	mov edx, 0	;;no error
  5679 00004BE6 C3                  <1> 	ret
  5680                              <1> 	
  5681 00004BE7 00000000            <1> filetracks dd 0
  5682                              <1> 	
  5683 00004BEB 6400                <1> segments dw 100
  5684                              <1> 
  5685                              <1> diskr:		;;sector count in cl, disk number in ch, 48 bit address with first 32 bits in ebx, buffer in esi, puts end buffer in edi and end lba in edx
  5686                              <1> 
  5687 00004BED 8935[D14C0000]      <1> 	mov [bufferstartesi], esi
  5688 00004BF3 891D[CD4C0000]      <1> 	mov [lbaadstartebx], ebx
  5689 00004BF9 BA00000000          <1> 	mov edx, 0
  5690 00004BFE 88CA                <1> 	mov dl, cl
  5691 00004C00 01DA                <1> 	add edx, ebx
  5692 00004C02 8915[C94C0000]      <1> 	mov [lbaadend], edx
  5693 00004C08 66B80000            <1> 	mov ax, 0
  5694 00004C0C 66BAF101            <1> 	mov dx, 0x1F1
  5695 00004C10 EE                  <1> 	out dx, al	;;2 null bytes
  5696 00004C11 EE                  <1> 	out dx, al
  5697 00004C12 B000                <1> 	mov al, 0
  5698 00004C14 66BAF201            <1> 	mov dx, 0x1F2
  5699 00004C18 EE                  <1> 	out dx, al	;;16 bit sector count-last byte now 0
  5700 00004C19 88C8                <1> 	mov al, cl
  5701 00004C1B EE                  <1> 	out dx, al
  5702 00004C1C 66BAF301            <1> 	mov dx, 0x1F3
  5703 00004C20 89D8                <1> 	mov eax, ebx
  5704 00004C22 C1C818              <1> 	ror eax, 24
  5705 00004C25 EE                  <1> 	out dx, al	;;4th byte of address
  5706 00004C26 C1C018              <1> 	rol eax, 24
  5707 00004C29 EE                  <1> 	out dx, al	;;1st byte of address
  5708 00004C2A 66BAF401            <1> 	mov dx, 0x1F4
  5709 00004C2E B000                <1> 	mov al, 0
  5710 00004C30 EE                  <1> 	out dx, al	;;5th byte of address-always 0 for now
  5711 00004C31 C1C808              <1> 	ror eax, 8
  5712 00004C34 EE                  <1> 	out dx, al	;;2nd byte of address
  5713 00004C35 66BAF501            <1> 	mov dx, 0x1F5
  5714 00004C39 C1C008              <1> 	rol eax, 8
  5715 00004C3C B000                <1> 	mov al, 0
  5716 00004C3E EE                  <1> 	out dx, al	;;6th byte
  5717 00004C3F C1C810              <1> 	ror eax, 16
  5718 00004C42 EE                  <1> 	out dx, al	;;3rd byte
  5719 00004C43 B840000000          <1> 	mov eax, 0x40
  5720 00004C48 66BAF601            <1> 	mov dx, 0x1F6
  5721 00004C4C EE                  <1> 	out dx, al	;;send magic bits-add drive indicator later
  5722 00004C4D B024                <1> 	mov al, 0x24
  5723 00004C4F 66BAF701            <1> 	mov dx, 0x1F7
  5724 00004C53 EE                  <1> 	out dx, al	;;READ!!!
  5725                              <1> diskrwait:
  5726 00004C54 66BAF701            <1> 	mov dx, 0x1F7
  5727 00004C58 EC                  <1> 	in al, dx
  5728 00004C59 2408                <1> 	and al, 0x08
  5729 00004C5B 3C08                <1> 	cmp al, 0x08
  5730 00004C5D 75F5                <1> 	jne diskrwait
  5731 00004C5F 88CD                <1> 	mov ch, cl	;;move sector data into ch, multiplying it by 256
  5732 00004C61 B100                <1> 	mov cl, 0
  5733                              <1> diskdataread:
  5734 00004C63 66BAF001            <1> 	mov dx, 0x1F0
  5735 00004C67 66ED                <1> 	in ax, dx
  5736 00004C69 668906              <1> 	mov [esi], ax
  5737 00004C6C 81C602000000        <1> 	add esi, 2
  5738 00004C72 6649                <1> 	dec cx
  5739 00004C74 6681F90000          <1> 	cmp cx, 0
  5740 00004C79 75E8                <1> 	jne diskdataread		;;read all sectors
  5741 00004C7B 89F7                <1> 	mov edi, esi
  5742 00004C7D 8B15[C94C0000]      <1> 	mov edx, [lbaadend]
  5743 00004C83 8B35[D14C0000]      <1> 	mov esi, [bufferstartesi]
  5744 00004C89 8B1D[CD4C0000]      <1> 	mov ebx, [lbaadstartebx]
  5745 00004C8F C3                  <1> 	ret
  5746                              <1> 	
  5747                              <1> 	
  5748                              <1> diskold: ;;28 bits
  5749 00004C90 66B80000            <1> 	mov ax, 0
  5750 00004C94 66BAF101            <1> 	mov dx, 0x1F1
  5751 00004C98 EE                  <1> 	out dx, al	;;send null byte to port
  5752 00004C99 6642                <1> 	inc dx	;;0x1F2
  5753 00004C9B 88C8                <1> 	mov al, cl	;;get sector count
  5754 00004C9D EE                  <1> 	out dx, al	;;send sector count
  5755 00004C9E 6642                <1> 	inc dx	;;0x1F3
  5756 00004CA0 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  5757 00004CA2 EE                  <1> 	out dx, al	;;send them
  5758 00004CA3 6642                <1> 	inc dx	;;0x1F4
  5759 00004CA5 C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  5760 00004CA8 88D8                <1> 	mov al, bl
  5761 00004CAA EE                  <1> 	out dx, al
  5762 00004CAB 6642                <1> 	inc dx	;;0x1F5
  5763 00004CAD C1CB08              <1> 	ror ebx, 8	;;again
  5764 00004CB0 88D8                <1> 	mov al, bl
  5765 00004CB2 EE                  <1> 	out dx, al
  5766 00004CB3 6642                <1> 	inc dx	;;0x1F6
  5767 00004CB5 C1CB08              <1> 	ror ebx, 8
  5768 00004CB8 88D8                <1> 	mov al, bl
  5769 00004CBA 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  5770 00004CBC 0CE0                <1> 	or al, 0xE0			;;majic number
  5771 00004CBE C0E504              <1> 	shl ch, 4
  5772 00004CC1 08E8                <1> 	or al, ch
  5773 00004CC3 EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  5774 00004CC4 6642                <1> 	inc dx	;;0x1F7
  5775 00004CC6 B020                <1> 	mov al, 0x20
  5776 00004CC8 EE                  <1> 	out dx, al			;;execute read command
  5777                              <1> 	
  5778 00004CC9 00000000            <1> lbaadend dd 0
  5779 00004CCD 00000000            <1> lbaadstartebx dd 0
  5780 00004CD1 00000000            <1> bufferstartesi dd 0
  5781                                  	%include 'source/threads.asm'
  5782                              <1> ;;THIS IS MY FIRST ATTEMPT AT IMPLEMENTING THREADS
  5783                              <1> threadstarttest:
  5784 00004CD5 E9ED040000          <1>     jmp startthreads
  5785                              <1> mainthread:
  5786 00004CDA F4                  <1> 	hlt		;;this does not work properly
  5787 00004CDB EBFD                <1> 	jmp mainthread
  5788                              <1> 	
  5789                              <1> nwcmdst:
  5790 00004CDD FA                  <1> 	cli			;;no more interrupts!!!
  5791 00004CDE BE[FC530000]        <1> 	mov esi, line
  5792 00004CE3 E89BC2FFFF          <1> 	call print
  5793 00004CE8 C605[254D0000]00    <1> 	mov byte [threadson], 0
  5794 00004CEF E9E6C7FFFF          <1> 	jmp nwcmd
  5795                              <1> 	
  5796                              <1> modelthread:
  5797 00004CF4 668B1D[4A530000]    <1> 	mov bx, [currentthread]
  5798 00004CFB B001                <1> 	mov al, 1
  5799 00004CFD B409                <1> 	mov ah, 9
  5800 00004CFF B900000000          <1> 	mov ecx, 0
  5801 00004D04 6689D9              <1> 	mov cx, bx
  5802 00004D07 CD30                <1> 	int 0x30
  5803                              <1> 	
  5804 00004D09 B90000DEC0          <1> 	mov ecx, 0xC0DE0000
  5805 00004D0E 6689D9              <1> 	mov cx, bx
  5806 00004D11 CD30                <1> 	int 0x30
  5807                              <1> 	
  5808 00004D13 B90000ADDE          <1> 	mov ecx, 0xDEAD0000
  5809 00004D18 6689D9              <1> 	mov cx, bx
  5810 00004D1B CD30                <1> 	int 0x30
  5811                              <1> 	
  5812 00004D1D CD08                <1> 	int 8	;;skip this thread three times to ensure that all threads run
  5813 00004D1F CD08                <1> 	int 8
  5814 00004D21 CD08                <1> 	int 8
  5815                              <1> 	
  5816 00004D23 EBB8                <1> 	jmp nwcmdst
  5817                              <1> 	
  5818                              <1> 	
  5819 00004D25 00                  <1> threadson db 0
  5820 00004D26 04000000            <1> lastthread dd 4
  5821                              <1> 
  5822                              <1> thrdtst:
  5823 00004D2A [F44C0000]<rept>    <1> times 256 dd modelthread	;;could go up to 2048, but that takes too long
  5824                              <1> thrdtstend:
  5825                              <1> 
  5826 0000512A 00000000            <1> 	espold dd 0
  5827                              <1> 
  5828                              <1> threadfork:
  5829 0000512E C605[254D0000]01    <1> 	mov byte [threadson], 1
  5830 00005135 60                  <1> 	pushad
  5831 00005136 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  5832 0000513A E640                <1> 	out 0x40, al
  5833 0000513C 66C1C008            <1> 	rol ax, 8
  5834 00005140 E640                <1> 	out 0x40, al
  5835                              <1> 	
  5836 00005142 8CC8                <1> 	mov eax, cs
  5837 00005144 89C2                <1> 	mov edx, eax
  5838 00005146 8B4C2428            <1> 	mov ecx, [esp + 40]
  5839 0000514A 81C900020000        <1> 	or ecx, 0x200
  5840 00005150 89E3                <1> 	mov ebx, esp
  5841 00005152 BC[27580000]        <1> 	mov esp, stackdummy
  5842 00005157 90                  <1> 	nop
  5843                              <1> 	
  5844 00005158 60                  <1> 	pushad
  5845 00005159 B8[DA4C0000]        <1> 	mov eax, mainthread
  5846 0000515E 89442420            <1> 	mov [esp + 32], eax
  5847 00005162 89542424            <1> 	mov [esp + 36], edx
  5848 00005166 894C2428            <1> 	mov [esp + 40], ecx
  5849 0000516A 8925[1F340000]      <1> 	mov [threadlist], esp
  5850                              <1> 	
  5851 00005170 891D[2A510000]      <1> 	mov [espold], ebx
  5852 00005176 89F0                <1> 	mov eax, esi
  5853 00005178 BC[275C0000]        <1> 	mov esp, stack1
  5854 0000517D 8B1D[264D0000]      <1> 	mov ebx, [lastthread]
  5855 00005183 C1E30A              <1> 	shl ebx, 10
  5856 00005186 01DC                <1> 	add esp, ebx
  5857 00005188 C1EB0A              <1> 	shr ebx, 10
  5858 0000518B 90                  <1> 	nop
  5859 0000518C 60                  <1> 	pushad
  5860 0000518D 89442420            <1> 	mov [esp + 32], eax
  5861 00005191 89542424            <1> 	mov [esp + 36], edx
  5862 00005195 894C2428            <1> 	mov [esp + 40], ecx
  5863 00005199 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  5864 0000519F 8B25[2A510000]      <1> 	mov esp, [espold]
  5865 000051A5 81C304000000        <1> 	add ebx, 4
  5866 000051AB 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  5867 000051B1 81C304000000        <1> 	add ebx, 4
  5868 000051B7 891D[264D0000]      <1> 	mov [lastthread], ebx
  5869 000051BD B0FE                <1> 	mov al, 0xFE
  5870 000051BF E621                <1> 	out 0x21, al
  5871 000051C1 B020                <1> 	mov al, 0x20
  5872 000051C3 E620                <1> 	out 0x20, al
  5873 000051C5 61                  <1> 	popad
  5874 000051C6 C3                  <1> 	ret
  5875                              <1> 
  5876                              <1> startthreads:
  5877 000051C7 C605[254D0000]01    <1> 	mov byte [threadson], 1
  5878 000051CE 60                  <1> 	pushad
  5879 000051CF 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  5880 000051D3 E640                <1> 	out 0x40, al
  5881 000051D5 66C1C008            <1> 	rol ax, 8
  5882 000051D9 E640                <1> 	out 0x40, al
  5883                              <1> 	
  5884 000051DB 8CC8                <1> 	mov eax, cs
  5885 000051DD 89C2                <1> 	mov edx, eax
  5886 000051DF 8B4C2428            <1> 	mov ecx, [esp + 40]
  5887 000051E3 81C900020000        <1> 	or ecx, 0x200
  5888 000051E9 89E3                <1> 	mov ebx, esp
  5889 000051EB BC[27580000]        <1> 	mov esp, stackdummy
  5890 000051F0 90                  <1> 	nop
  5891                              <1> 	
  5892 000051F1 60                  <1> 	pushad
  5893 000051F2 B8[DA4C0000]        <1> 	mov eax, mainthread
  5894 000051F7 89442420            <1> 	mov [esp + 32], eax
  5895 000051FB 89542424            <1> 	mov [esp + 36], edx
  5896 000051FF 894C2428            <1> 	mov [esp + 40], ecx
  5897 00005203 8925[1F340000]      <1> 	mov [threadlist], esp
  5898                              <1> 
  5899                              <1> 			;;that above setup the dummy thread which for some reason does not run
  5900                              <1> 			;;this below will setup the threads found in thrdtst
  5901                              <1> 
  5902                              <1> testthreads:
  5903 00005209 BE[2A4D0000]        <1> 	mov esi, thrdtst
  5904 0000520E BC[275C0000]        <1> 	mov esp, stack1
  5905 00005213 BF[1F340000]        <1> 	mov edi, threadlist
  5906 00005218 81C704000000        <1> 	add edi, 4
  5907                              <1> nxtthreadld:
  5908 0000521E 60                  <1> 	pushad
  5909 0000521F 8B06                <1> 	mov eax, [esi]
  5910 00005221 89442420            <1> 	mov [esp + 32], eax
  5911 00005225 89542424            <1> 	mov [esp + 36], edx
  5912 00005229 894C2428            <1> 	mov [esp + 40], ecx
  5913 0000522D 8927                <1> 	mov [edi], esp
  5914 0000522F 81C400040000        <1> 	add esp, 1024
  5915 00005235 81C604000000        <1> 	add esi, 4
  5916 0000523B 81C704000000        <1> 	add edi, 4
  5917 00005241 81FF[27540000]      <1> 	cmp edi, threadlistend
  5918 00005247 0F8322000000        <1> 	jae near nomorethreadspace
  5919 0000524D 81FC[27642000]      <1> 	cmp esp, bssend
  5920 00005253 0F8350000000        <1> 	jae near nomorestackspace
  5921 00005259 81FE[2A510000]      <1> 	cmp esi, thrdtstend
  5922 0000525F 72BD                <1> 	jb nxtthreadld
  5923 00005261 89DC                <1> 	mov esp, ebx	
  5924 00005263 B0FE                <1> 	mov al, 0xFE
  5925 00005265 E621                <1> 	out 0x21, al
  5926 00005267 B020                <1> 	mov al, 0x20
  5927 00005269 E620                <1> 	out 0x20, al
  5928 0000526B 61                  <1> 	popad
  5929 0000526C FB                  <1> 	sti
  5930 0000526D EBFE                <1> 	jmp $	;;wait for the irq to hook
  5931                              <1> 	
  5932                              <1> nomorethreadspace:
  5933 0000526F BE[85520000]        <1> 	mov esi, nmts
  5934 00005274 E80ABDFFFF          <1> 	call print
  5935 00005279 C605[254D0000]00    <1> 	mov byte [threadson], 0
  5936 00005280 E955C2FFFF          <1> 	jmp nwcmd
  5937 00005285 74656820636F6C6F6E- <1> nmts	db "teh colonel no can haz moar treds",13,10,0
  5938 0000528E 656C206E6F2063616E- <1>
  5939 00005297 2068617A206D6F6172- <1>
  5940 000052A0 2074726564730D0A00  <1>
  5941                              <1> 
  5942                              <1> nomorestackspace:
  5943 000052A9 BE[BF520000]        <1> 	mov esi, nmss
  5944 000052AE E8D0BCFFFF          <1> 	call print
  5945 000052B3 C605[254D0000]00    <1> 	mov byte [threadson], 0
  5946 000052BA E91BC2FFFF          <1> 	jmp nwcmd
  5947 000052BF 74656820636F6C6F6E- <1> nmss	db "teh colonel no can haz moar staqz",13,10,0
  5948 000052C8 656C206E6F2063616E- <1>
  5949 000052D1 2068617A206D6F6172- <1>
  5950 000052DA 20737461717A0D0A00  <1>
  5951                              <1> 	
  5952                              <1> threadswitch:
  5953 000052E3 FA                  <1> 	cli
  5954 000052E4 60                  <1> 	pushad
  5955 000052E5 BF[1F340000]        <1> 	mov edi, threadlist
  5956 000052EA B800000000          <1> 	mov eax, 0
  5957 000052EF 66A1[4A530000]      <1> 	mov ax, [currentthread]
  5958 000052F5 6640                <1> 	inc ax
  5959 000052F7 66A3[4A530000]      <1> 	mov [currentthread], ax
  5960 000052FD 6648                <1> 	dec ax
  5961 000052FF C1E002              <1> 	shl eax, 2
  5962 00005302 01C7                <1> 	add edi, eax
  5963 00005304 8927                <1> 	mov [edi], esp
  5964 00005306 81C704000000        <1> 	add edi, 4
  5965 0000530C 81FF[27540000]      <1> 	cmp edi, threadlistend
  5966 00005312 0F830D000000        <1> 	jae near nookespthread
  5967 00005318 8B07                <1> 	mov eax, [edi]
  5968 0000531A 3D00000000          <1> 	cmp eax, 0
  5969 0000531F 0F851C000000        <1> 	jne near okespthread
  5970                              <1> nookespthread:
  5971 00005325 BF[1F340000]        <1> 	mov edi, threadlist
  5972 0000532A 66B80000            <1> 	mov ax, 0
  5973 0000532E 66A3[4A530000]      <1> 	mov [currentthread], ax
  5974 00005334 8B07                <1> 	mov eax, [edi]
  5975 00005336 3D00000000          <1> 	cmp eax, 0
  5976 0000533B 0F849CF9FFFF        <1> 	je near nwcmdst
  5977                              <1> okespthread:
  5978 00005341 89C4                <1> 	mov esp, eax
  5979 00005343 B020                <1> 	mov al, 0x20
  5980 00005345 E620                <1> 	out 0x20, al
  5981 00005347 61                  <1> 	popad
  5982 00005348 FB                  <1> 	sti
  5983 00005349 CF                  <1> 	iretd
  5984                              <1> 	
  5985 0000534A 0000                <1> currentthread dw 0
  5986                                      %include 'fileindex.asm'
  5987                              <1> diskfileindex:
  5988 0000534C 65787000            <1> db "exp",0
  5989 00005350 30000000            <1> dd (f0-$$)/512
  5990 00005354 01000000            <1> dd (f1-f0)/512
  5991 00005358 666F726B00          <1> db "fork",0
  5992 0000535D 31000000            <1> dd (f1-$$)/512
  5993 00005361 01000000            <1> dd (f2-f1)/512
  5994 00005365 736F6C6C65726F732E- <1> db "solleros.bmp",0
  5995 0000536E 626D7000            <1>
  5996 00005372 32000000            <1> dd (f2-$$)/512
  5997 00005376 B0020000            <1> dd (f3-f2)/512
  5998 0000537A 736F6C6C65726F732E- <1> db "solleros.txt",0
  5999 00005383 74787400            <1>
  6000 00005387 E2020000            <1> dd (f3-$$)/512
  6001 0000538B 01000000            <1> dd (f4-f3)/512
  6002 0000538F 74656C7900          <1> db "tely",0
  6003 00005394 E3020000            <1> dd (f4-$$)/512
  6004 00005398 01000000            <1> dd (f5-f4)/512
  6005 0000539C 74696D6500          <1> db "time",0
  6006 000053A1 E4020000            <1> dd (f5-$$)/512
  6007 000053A5 02000000            <1> dd (f6-f5)/512
  6008 000053A9 7475746F7269616C2E- <1> db "tutorial.bat",0
  6009 000053B2 62617400            <1>
  6010 000053B6 E6020000            <1> dd (f6-$$)/512
  6011 000053BA 03000000            <1> dd (f7-f6)/512
  6012                              <1> enddiskfileindex:
  6013                              <1> 
  6014                                  	%include 'source/msg.asm'
  6015 000053BE 6578697400          <1> 	exitmsg db	"exit",0
  6016 000053C3 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  6017 000053CC 00                  <1>
  6018 000053CD 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  6019 000053D6 6E642E0D0A00        <1>
  6020 000053DC 757365726E616D653A- <1> 	userask db "username:",0
  6021 000053E5 00                  <1>
  6022 000053E6 70617373776F72643A- <1> 	pwdask	db	"password:",0
  6023 000053EF 00                  <1>
  6024 000053F0 40536F6C6C65724F53- <1> 	location	db	"@SollerOS]#",0
  6025 000053F9 5D2300              <1>
  6026 000053FC 0D0A00              <1> 	line	db	13,10,0
  6027                              <1> 	userlst:
  6028 000053FF 7573657200          <1> 			db "user",0
  6029 00005404 70617373776F726400  <1> 			db "password",0
  6030 0000540D 726F6F7400          <1> 			db "root",0
  6031 00005412 617765736F6D65706F- <1> 			db "awesomepower",0
  6032 0000541B 77657200            <1>
  6033 0000541F 6E00                <1> 			db "n",0	;;use for quick entry-a quick double n followed by a double enter will get you in
  6034 00005421 00                  <1> 			db 0
  6035                              <1> 	userlstend:
  6036                              <1> 	
  6037 00005421 <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  6038                              <1> fontend2:
  6039                              <1> mcursor:
  6040 00005C32 01                  <1> 	db	00000001b
  6041 00005C33 81                  <1> 	db	10000001b
  6042 00005C34 C1                  <1> 	db	11000001b
  6043 00005C35 E1                  <1> 	db	11100001b
  6044 00005C36 F1                  <1> 	db	11110001b
  6045 00005C37 F9                  <1> 	db	11111001b
  6046 00005C38 FD                  <1> 	db	11111101b
  6047 00005C39 FF                  <1> 	db	11111111b
  6048 00005C3A F9                  <1> 	db	11111001b
  6049 00005C3B B9                  <1> 	db	10111001b
  6050 00005C3C 39                  <1> 	db	00111001b
  6051 00005C3D 1C                  <1> 	db	00011100b
  6052 00005C3E 1C                  <1> 	db	00011100b
  6053 00005C3F 0E                  <1> 	db	00001110b
  6054 00005C40 0E                  <1> 	db	00001110b
  6055 00005C41 0C                  <1> 	db	00001100b
  6056                              <1> fontend:
  6057                              <1> 
  6058                              <1> ;cursorbmp:
  6059                              <1> ;	db	1,0,0,0,0,0,0,0
  6060                              <1> ;	db	1,1,0,0,0,0,0,0
  6061                              <1> ;	db	1,1,1,0,0,0,0,0
  6062                              <1> ;	db	1,1,1,1,0,0,0,0
  6063                              <1> ;	db	1,1,1,1,1,0,0,0
  6064                              <1> ;	db	1,1,1,1,1,1,0,0
  6065                              <1> ;	db	1,1,1,1,1,1,1,0
  6066                              <1> ;	db	1,1,1,1,1,1,1,1
  6067                              <1> ;	db	1,1,1,1,1,1,0,0
  6068                              <1> ;	db	1,1,0,1,1,1,0,0
  6069                              <1> ;	db	1,0,0,1,1,1,0,0
  6070                              <1> ;	db	0,0,0,0,1,1,1,0
  6071                              <1> ;	db	0,0,0,0,1,1,1,0
  6072                              <1> ;	db	0,0,0,0,0,1,1,1
  6073                              <1> ;	db	0,0,0,0,0,1,1,1
  6074                              <1> ;	db	0,0,0,0,0,1,1,0
  6075                              <1> ;cursorbmpend:
  6076                              <1> 
  6077                              <1> 
  6078                              <1> VBEMODEBLOCK:
  6079 00005C42 00<rept>            <1> vbesignature 		times 4 db 0	;VBE Signature
  6080 00005C46 00<rept>            <1> vbeversion  		times 2 db 0	;VBE Version
  6081 00005C48 00<rept>            <1> oemstringptr  		times 4 db 0	;Pointer to OEM String
  6082 00005C4C 00<rept>            <1> capabilities 		times 4 db 0	;Capabilities of graphics cont.
  6083 00005C50 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  6084 00005C54 00<rept>            <1> totalmemory   		times 2 db 0	;number of 64Kb memory blocks
  6085 00005C56 00<rept>            <1> oemsoftwarerev  	times 2 db 0	;VBE implementation Software revision
  6086 00005C58 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  6087 00005C5C 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  6088 00005C60 00<rept>            <1> oemproductrevptr 	times 4 db 0	;Pointer to Product Revision String
  6089 00005C64 00<rept>            <1> reserved			times 222 db 0	;Reserved for VBE implementation scratch area
  6090 00005D42 00<rept>            <1> oemdata 			times 256 db 0	;Data Area for OEM Strings
  6091                              <1> 
  6092                              <1> 
  6093                              <1> VBEMODEINFOBLOCK:
  6094                              <1> ;Mandatory information for all VBE revision
  6095 00005E42 00<rept>            <1> modeattributes   	times 2 db 0	;Mode attributes
  6096 00005E44 00                  <1> winaattributes   	times 1 db 0	;Window A attributes
  6097 00005E45 00                  <1> winbattributes   	times 1 db 0	;Window B attributes
  6098 00005E46 00<rept>            <1> wingranularity   	times 2 db 0	;Window granularity
  6099 00005E48 00<rept>            <1> winsize          	times 2 db 0	;Window size
  6100 00005E4A 00<rept>            <1> winasegment      	times 2 db 0	;Window A start segment
  6101 00005E4C 00<rept>            <1> winbsegment      	times 2 db 0	;Window B start segment
  6102 00005E4E 00<rept>            <1> winfuncptr       	times 4 db 0	;pointer to window function
  6103 00005E52 00<rept>            <1> bytesperscanline 	times 2 db 0	;Bytes per scan line
  6104                              <1> 
  6105                              <1> ;Mandatory information for VBE 1.2 and above
  6106 00005E54 00<rept>            <1> xresolution     	times 2 db 0	;Horizontal resolution in pixel or chars
  6107 00005E56 00<rept>            <1> yresolution	    	times 2 db 0	;Vertical resolution in pixel or chars
  6108 00005E58 00                  <1> xcharsize       	times 1 db 0	;Character cell width in pixel
  6109 00005E59 00                  <1> ycharsize       	times 1 db 0	;Character cell height in pixel
  6110 00005E5A 00                  <1> numberofplanes  	times 1 db 0	;Number of memory planes
  6111 00005E5B 00                  <1> bitsperpixel    	times 1 db 0	;Bits per pixel
  6112 00005E5C 00                  <1> numberofbanks   	times 1 db 0	;Number of banks
  6113 00005E5D 00                  <1> memorymodel     	times 1 db 0	;Memory model type
  6114 00005E5E 00                  <1> banksize        	times 1 db 0	;Bank size in KB
  6115 00005E5F 00                  <1> numberofimagepages	times 1 db 0	;Number of images
  6116 00005E60 00                  <1> reserved1       	times 1 db 0	;Reserved for page function
  6117                              <1> 
  6118                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  6119 00005E61 00                  <1> redmasksize			times 1 db 0	;Size of direct color red mask in bits
  6120 00005E62 00                  <1> redfieldposition	times 1 db 0	;Bit position of lsb of red bask
  6121 00005E63 00                  <1> greenmasksize   	times 1 db 0	;Size of direct color green mask in bits
  6122 00005E64 00                  <1> greenfieldposition	times 1 db 0	;Bit position of lsb of green bask
  6123 00005E65 00                  <1> bluemasksize		times 1 db 0	;Size of direct color blue mask in bits
  6124 00005E66 00                  <1> bluefieldposition	times 1 db 0	;Bit position of lsb of blue bask
  6125 00005E67 00                  <1> rsvdmasksize        times 1	db 0	;Size of direct color reserved mask in bits
  6126 00005E68 00                  <1> rsvdfieldposition	times 1	db 0	;Bit position of lsb of reserved bask
  6127 00005E69 00                  <1> directcolormodeinfo	times 1 db 0	;Direct color mode attributes
  6128                              <1> 
  6129                              <1> ;Mandatory information for VBE 2.0 and above
  6130 00005E6A 00<rept>            <1> physbaseptr 		times 4 db 0	;Physical address for flat frame buffer
  6131 00005E6E 00<rept>            <1> offscreenmemoffset 	times 4 db 0	;Pointer to start of off screen memory
  6132 00005E72 00<rept>            <1> offscreenmemsize 	times 2 db 0    ;Amount of off screen memory in 1Kb units
  6133 00005E74 00<rept>            <1> reserved2 			times 206 db 0  ;Remainder of ModeInfoBlock
  6134                                  	;%include 'source/memory.asm'
  6135                                  	%include 'source/buf.asm'
  6136 00005F42 4255465354415254    <1> db "BUFSTART"
  6137                              <1> [section .bss]
  6138                              <1> bssstart:
  6139                              <1> stack:
  6140 00000000 <res 00001000>      <1> 	resb 4096
  6141                              <1> stackend:
  6142                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  6143 00001000 <res 00000200>      <1> 	resb 200h 
  6144                              <1> 	graphicstableend:
  6145                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  6146 00001200 <res 00000100>      <1> 	resb 256 
  6147                              <1> mcolorend:
  6148 00001300 <res 00000001>      <1> IFON resb 1 
  6149 00001301 <res 00000064>      <1> IFTRUE resb 100 
  6150 00001365 <res 00000004>      <1> BATCHPOS resb 4 
  6151 00001369 <res 00000001>      <1> BATCHISON resb 1 
  6152 0000136A <res 00000001>      <1> LOOPON resb 1 
  6153 0000136B <res 00000004>      <1> LOOPPOS	resb 4 
  6154 0000136F <res 00000200>      <1> fileindex: resb 200h 
  6155                              <1> fileindexend:
  6156 0000156F <res 00000500>      <1> variables: 	resb 500h 
  6157 00001A6F <res 00000001>      <1> varend: resb 1
  6158 00001A70 <res 00000100>      <1> buftxt2: resb 100h
  6159 00001B70 <res 0000000A>      <1> resb 10
  6160 00001B7A <res 00000100>      <1> buftxt: resb 100h 
  6161 00001C7A <res 00000014>      <1> buf2:	resb 20 
  6162 00001C8E <res 00000001>      <1> numbuf: resb 1 
  6163 00001C8F <res 000012C0>      <1> videobuf2 		resb 0x12C0 
  6164 00002F4F <res 000000C8>      <1> videobufend		resb 200
  6165 00003017 <res 00000004>      <1> lastcommandpos: resb 4
  6166 0000301B <res 00000004>      <1> currentcommandpos: resb 4
  6167                              <1> commandbuf:
  6168 0000301F <res 00000400>      <1> resb 1024
  6169                              <1> commandbufend:
  6170                              <1> rbuffstart: ;for use with networking
  6171                              <1> ;resb 8212
  6172                              <1> threadlist:	;;this buffer will hold the stack locations of all of the threads, up to 2048
  6173 0000341F <res 00002008>      <1> 	resb 2050*4
  6174                              <1> threadlistend:
  6175                              <1> stacks:		;;the stacks will go on forever until end of memory
  6176 00005427 <res 00000400>      <1> 	resb 1024
  6177                              <1> stackdummy:
  6178 00005827 <res 00000400>      <1> 	resb 1024
  6179                              <1> stack1:
  6180 00005C27 <res 00200800>      <1> 	resb 1024*2050	;;woah, thats a lot of space for stacks
  6181                              <1> bssend:		;;from here on, it is not kernel space so apps can be loaded here.
  6182                              <1> [section .text]
  6183                                      %include 'files.asm'
  6184 00005F4A 00<rept>            <1> align 512,db 0
  6185                              <1> f0:
  6186 00005F4A <incbin>            <1> incbin "included/exp"
  6187 00006052 00<rept>            <1> align 512,db 0
  6188                              <1> f1:
  6189 00006052 <incbin>            <1> incbin "included/fork"
  6190 00006267 00<rept>            <1> align 512,db 0
  6191                              <1> f2:
  6192 00006267 <incbin>            <1> incbin "included/solleros.bmp"
  6193 0005C3E6 00<rept>            <1> align 512,db 0
  6194                              <1> f3:
  6195 0005C3E6 <incbin>            <1> incbin "included/solleros.txt"
  6196 0005C576 00<rept>            <1> align 512,db 0
  6197                              <1> f4:
  6198 0005C576 <incbin>            <1> incbin "included/tely"
  6199 0005C7BD 00<rept>            <1> align 512,db 0
  6200                              <1> f5:
  6201 0005C7BD <incbin>            <1> incbin "included/time"
  6202 0005CA7B 00<rept>            <1> align 512,db 0
  6203                              <1> f6:
  6204 0005CA7B <incbin>            <1> incbin "included/tutorial.bat"
  6205 0005D0AA 00<rept>            <1> align 512,db 0
  6206                              <1> f7:
