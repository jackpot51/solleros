     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> prog:	
     5 00000000 8CC8                <1> 	    mov ax, cs
     6 00000002 E90400              <1> 	    jmp mainindex	;;this command gives the solleros user the location of mainindex
     7 00000005 4A525300            <1> 	    db "JRS",0	;;this gives the bootloader a key to look for
     8                              <1> mainindex:
     9 00000009 E90000              <1> 	    jmp mainindexdn	;;this gives the size of the index
    10                              <1> 	    ;not needed;dw 0405h,progstart,batchprogend,fileindex,fileindexend,variables,varend,nwcmd,int30h,physbaseptr,0
    11                              <1> mainindexdn:
    12 0000000C 8ED8                <1> 	mov ds, ax
    13 0000000E 8EC0                <1> 	mov es, ax
    14 00000010 8ED0                <1> 	mov ss, ax
    15 00000012 880E[2B00]          <1> 	mov [DriveNumber], cl
    16 00000016 668916[2C00]        <1> 	mov [lbaad], edx
    17 0000001B B800A0              <1> 	mov ax, 0xA000
    18 0000001E 8EE8                <1> 	mov gs, ax
    19 00000020 B81200              <1> 	mov ax, 12h
    20 00000023 BB0000              <1> 	mov bx, 0
    21 00000026 CD10                <1> 	int 10h
    22                              <1> ;	mov si, graphicstable
    23                              <1> ;	mov di, rbuffstart
    24                              <1> ;	mov eax, 0
    25                              <1> ;initmemory:		;;no longer necessary
    26                              <1> ;	mov [si], eax
    27                              <1> ;	add si, 4
    28                              <1> ;	cmp si, di
    29                              <1> ;	jbe initmemory
    30 00000028 E90900              <1> 	jmp guiload
    31                              <1> 
    32 0000002B 00                  <1> DriveNumber db 0
    33 0000002C 00000000            <1> lbaad dd 0
    34                              <1> 	
    35 00000030 0000                <1> vesamode dw 0
    36 00000032 0000                <1> videomodecache dw 0
    37                              <1> 
    38                              <1> guiload:
    39 00000034 B8004F              <1> 	mov ax, 04F00h
    40 00000037 BF[746A]            <1> 	mov di, VBEMODEBLOCK
    41 0000003A CD10                <1> 	int 10h
    42 0000003C BE[966A]            <1> 	mov si, reserved
    43 0000003F 81EE0200            <1> 	sub si, 2
    44                              <1> findvideomodes:
    45 00000043 81C60200            <1> 	add si, 2
    46 00000047 8B0C                <1> 	mov cx, [si]
    47 00000049 81F9FFFF            <1> 	cmp cx, 0xFFFF
    48 0000004D 0F840A00            <1> 	je near nextvmode
    49 00000051 81FE[746B]          <1> 	cmp si, oemdata
    50 00000055 0F83DBFF            <1> 	jae near guiload	;;kill if no valid list is found
    51 00000059 EBE8                <1> 	jmp findvideomodes 	
    52                              <1> ;;debug,shows vmodes available
    53                              <1> nextvmode:
    54 0000005B 81EE0200            <1> 	sub si, 2
    55 0000005F 81FE[966A]          <1> 	cmp si, reserved
    56 00000063 0F82CDFF            <1> 	jb near guiload
    57 00000067 8B0C                <1> 	mov cx, [si]
    58 00000069 81F9FFFF            <1> 	cmp cx, 0xFFFF
    59 0000006D 0F84C3FF            <1> 	je near guiload
    60 00000071 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    61 00000075 B8014F              <1> 	mov ax, 04F01h
    62 00000078 BF[746C]            <1> 	mov di, VBEMODEINFOBLOCK
    63 0000007B 890E[3000]          <1> 	mov [vesamode], cx
    64 0000007F CD10                <1> 	int 10h
    65 00000081 A0[8D6C]            <1> 	mov al, [bitsperpixel]
    66 00000084 3C10                <1> 	cmp al, 16
    67 00000086 75D3                <1> 	jne nextvmode
    68 00000088 8936[3200]          <1> 	mov [videomodecache], si
    69 0000008C 80FC00              <1> 	cmp ah, 0
    70 0000008F 0F842200            <1> 	je near setvesamode
    71 00000093 EBC6                <1> 	jmp nextvmode
    72 00000095 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    73 0000009E 20766964656F206D6F- <1>
    74 000000A7 6465204F4B3F28792F- <1>
    75 000000B0 6E290D0A00          <1>
    76                              <1> setvesamode:
    77 000000B5 8B0E[866C]          <1> 	mov cx, [xresolution]
    78 000000B9 E89800              <1> 	call decshow
    79 000000BC B078                <1> 	mov al, "x"
    80 000000BE E80001              <1> 	call char
    81 000000C1 8B0E[886C]          <1> 	mov cx, [yresolution]
    82 000000C5 E88C00              <1> 	call decshow
    83 000000C8 B040                <1> 	mov al, "@"
    84 000000CA E8F400              <1> 	call char
    85 000000CD 8A0E[8D6C]          <1> 	mov cl, [bitsperpixel]
    86 000000D1 E88000              <1> 	call decshow
    87 000000D4 BE[9500]            <1> 	mov si, isthisvideook
    88 000000D7 E86200              <1> 	call printrm
    89 000000DA B80000              <1> 	mov ax, 0
    90 000000DD CD16                <1> 	int 16h
    91 000000DF 8B36[3200]          <1> 	mov si, [videomodecache]
    92 000000E3 3C79                <1> 	cmp al, "y"
    93 000000E5 0F8572FF            <1> 	jne nextvmode
    94 000000E9 8B16[866C]          <1> 	mov dx, [xresolution]
    95 000000ED 8B0E[886C]          <1> 	mov cx, [yresolution]
    96 000000F1 8916[3C37]          <1> 	mov [resolutionx], dx
    97 000000F5 890E[3A37]          <1> 	mov [resolutiony], cx
    98 000000F9 01D2                <1> 	add dx, dx
    99 000000FB 8916[3E37]          <1> 	mov [resolutionx2], dx
   100 000000FF BA0000              <1> 	mov dx, 0
   101 00000102 B90000              <1> 	mov cx, 0
   102 00000105 B8024F              <1> 	mov ax, 04F02h
   103 00000108 8B1E[3000]          <1> 	mov bx, [vesamode]
   104 0000010C CD10                <1> 	int 10h		;;enter VESA mode
   105 0000010E 668B3E[9C6C]        <1> 	mov edi, [physbaseptr]
   106 00000113 66B800000000        <1> 	mov eax, 0
   107 00000119 8CD8                <1> 	mov ax, ds
   108 0000011B 66C1E004            <1> 	shl eax, 4
   109 0000011F 6629C7              <1> 	sub edi, eax
   110 00000122 66893E[9C6C]        <1> 	mov [physbaseptr], edi	;;fix lfb base, is over by 0x20000 or 0x2000:0 where OS starts
   111 00000127 6631C0              <1> 	xor eax, eax
   112 0000012A 6631DB              <1> 	xor ebx, ebx
   113 0000012D 6631C9              <1> 	xor ecx, ecx
   114 00000130 6631D2              <1> 	xor edx, edx
   115 00000133 6631F6              <1> 	xor esi, esi
   116 00000136 6631FF              <1> 	xor edi, edi	;;reset registers
   117 00000139 E9EB00              <1> jmp pmode
   118                              <1> 
   119                              <1> ;;	jmp gui ;;test vesa
   120                              <1> 
   121                              <1> 
   122                              <1>     printrm:			; 'si' comes in with string address
   123 0000013C BB0700              <1> 	    mov bx,07		; write to display
   124 0000013F B40E                <1> 	    mov ah,0Eh		; screen function
   125 00000141 8A04                <1>     prs2:    mov al,[si]         ; get next character
   126 00000143 3C00                <1> 	    cmp al,0		; look for terminator 
   127 00000145 7405                <1>             je finpr2		; zero byte at end of string
   128 00000147 CD10                <1> 	    int 10h		; write character to screen.    
   129 00000149 46                  <1>      	    inc si	     	; move to next character
   130 0000014A EBF5                <1> 	    jmp prs2		; loop
   131 0000014C C3                  <1>     finpr2: ret
   132                              <1> 
   133 0000014D 0000000000          <1> dcnm db 0,0,0,0,0
   134 00000152 0000                <1> dcnmend db 0,0
   135                              <1> 
   136                              <1> 
   137                              <1> decshow:
   138 00000154 BE[4D01]            <1> 	mov si, dcnm
   139                              <1> decclear:
   140 00000157 B030                <1> 	mov al, "0"
   141 00000159 8804                <1> 	mov [si], al
   142 0000015B 46                  <1> 	inc si
   143 0000015C 81FE[5201]          <1> 	cmp si, dcnmend
   144 00000160 76F5                <1> 	jbe decclear
   145 00000162 4E                  <1> 	dec si
   146 00000163 E81500              <1> 	call convertrm
   147 00000166 BE[4D01]            <1> 	mov si, dcnm
   148                              <1> dectst:
   149 00000169 8A04                <1> 	mov al, [si]
   150 0000016B 46                  <1> 	inc si
   151 0000016C 81FE[5201]          <1> 	cmp si, dcnmend
   152 00000170 7704                <1> 	ja dectstend
   153 00000172 3C30                <1> 	cmp al, "0"
   154 00000174 76F3                <1> 	jbe dectst
   155                              <1> dectstend:
   156 00000176 4E                  <1> 	dec si
   157 00000177 E8C2FF              <1> 	call printrm
   158 0000017A C3                  <1> 	ret
   159                              <1> 	
   160                              <1> 	
   161                              <1> convertrm:
   162 0000017B 4E                  <1> 	dec si
   163 0000017C 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   164                              <1> cnvrtrm:
   165 0000017E 89DE                <1> 	mov si, bx
   166 00000180 81EE0300            <1> 	sub si, 3
   167 00000184 46                  <1> ten3rm:	inc si
   168 00000185 81F9E803            <1> 	cmp cx, 1000
   169 00000189 7208                <1> 	jb ten2rm
   170 0000018B 81E9E803            <1> 	sub cx, 1000
   171 0000018F FE04                <1> 	inc byte [si]
   172 00000191 EBEB                <1> 	jmp cnvrtrm
   173 00000193 46                  <1> ten2rm:	inc si
   174 00000194 81F96400            <1> 	cmp cx, 100
   175 00000198 7208                <1> 	jb ten1rm
   176 0000019A 81E96400            <1> 	sub cx, 100
   177 0000019E FE04                <1> 	inc byte [si]
   178 000001A0 EBDC                <1> 	jmp cnvrtrm
   179 000001A2 46                  <1> ten1rm:	inc si
   180 000001A3 81F90A00            <1> 	cmp cx, 10
   181 000001A7 7208                <1> 	jb ten0rm
   182 000001A9 81E90A00            <1> 	sub cx, 10
   183 000001AD FE04                <1> 	inc byte [si]
   184 000001AF EBCD                <1> 	jmp cnvrtrm
   185 000001B1 46                  <1> ten0rm:	inc si
   186 000001B2 81F90100            <1> 	cmp cx, 1
   187 000001B6 7208                <1> 	jb tendnrm
   188 000001B8 81E90100            <1> 	sub cx, 1
   189 000001BC FE04                <1> 	inc byte [si]
   190 000001BE EBBE                <1> 	jmp cnvrtrm
   191                              <1> tendnrm:
   192 000001C0 C3                  <1> 	ret
   193                              <1> 
   194                              <1> 
   195                              <1> 
   196                              <1> 
   197                              <1>     char: 		    ;char must be in al
   198 000001C1 BB0700              <1>            mov bx, 07
   199 000001C4 B40E                <1> 	   mov ah, 0Eh
   200 000001C6 CD10                <1> 	   int 10h
   201 000001C8 C3                  <1> 	    ret
   202                              <1> 
   203                              <1> 		shutdown:
   204 000001C9 E84B00              <1> 			call realmode	
   205 000001CC B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   206 000001CF 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   207 000001D1 CD15                <1> 			INT 15h		; shut down
   208 000001D3 B80453              <1> 			MOV AX, 5304h
   209 000001D6 31DB                <1> 			XOR BX, BX
   210 000001D8 CD15                <1> 			INT 15h		; Interrupt 15h originally was
   211 000001DA B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   212 000001DD 31DB                <1> 			XOR BX, BX	; but is still in use for
   213 000001DF CD15                <1> 			INT 15h		; diverse things
   214 000001E1 B80753              <1> 			MOV AX, 5307h
   215 000001E4 BB0100              <1> 			MOV BX, 1
   216 000001E7 B90300              <1> 			MOV CX, 3
   217 000001EA CD15                <1> 			INT 15h
   218 000001EC CF                  <1> 			IRET
   219                              <1> 
   220                              <1> 	coldboot:
   221 000001ED E82700              <1> 			call realmode
   222 000001F0 B84000              <1> 			MOV AX, 0040h
   223 000001F3 8EC0                <1> 			MOV ES, AX
   224 000001F5 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   225 000001FC EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   226 00000201 CF                  <1> 			IRET
   227                              <1> 
   228                              <1> 		warmboot:
   229 00000202 E81200              <1> 			call realmode
   230 00000205 B84000              <1> 			MOV AX, 0040h
   231 00000208 8EC0                <1> 			MOV ES, AX
   232 0000020A 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   233 00000211 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   234 00000216 CF                  <1> 			IRET
   235                              <1> 
   236                              <1> 
   237                              <1> realmode:
   238 00000217 0F20C0              <1>    mov eax, cr0
   239 0000021A 24FE                <1>    and al,0xFE     ; back to realmode
   240 0000021C 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   241 0000021F FB                  <1>    sti
   242                              <1> 
   243 00000220 66B800000000        <1>    mov eax, 0
   244 00000226 C3                  <1>    ret
   245                                      %include 'source/pmode.asm'
   246                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   247                              <1> ;	16-bit real mode
   248                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   249                              <1> [BITS 16]
   250                              <1> pmode:
   251 00000227 E492                <1> 	in al, 0x92	;;A20
   252 00000229 0C02                <1> 	or al, 2
   253 0000022B E692                <1> 	out 0x92, al
   254                              <1> ; set base of code/data descriptors to CS<<4/DS<<4 (CS=DS)
   255 0000022D 6631DB              <1> 	xor ebx,ebx
   256 00000230 8CCB                <1> 	mov bx,cs		; EBX=segment
   257 00000232 66C1E304            <1> 	shl ebx,4		;	<< 4
   258 00000236 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   259 0000023A A3[E307]            <1> 	mov [gdt2 + 2],ax
   260 0000023D A3[EB07]            <1> 	mov [gdt3 + 2],ax
   261 00000240 A3[F307]            <1> 	mov [gdt4 + 2],ax
   262 00000243 A3[FB07]            <1> 	mov [gdt5 + 2],ax
   263 00000246 66C1E810            <1> 	shr eax,16
   264 0000024A A2[E507]            <1> 	mov [gdt2 + 4],al
   265 0000024D A2[ED07]            <1> 	mov [gdt3 + 4],al
   266 00000250 A2[F507]            <1> 	mov [gdt4 + 4],al
   267 00000253 A2[FD07]            <1> 	mov [gdt5 + 4],al
   268 00000256 8826[E807]          <1> 	mov [gdt2 + 7],ah
   269 0000025A 8826[F007]          <1> 	mov [gdt3 + 7],ah
   270 0000025E 8826[F807]          <1> 	mov [gdt4 + 7],ah
   271 00000262 8826[0008]          <1> 	mov [gdt5 + 7],ah
   272                              <1> ; fix up TSS entries, too
   273 00000266 67668D83[A6090000]  <1> 	lea eax,[ebx + stss]	; EAX=linear address of stss
   274 0000026E A3[0308]            <1> 	mov [gdt6 + 2],ax
   275 00000271 66C1E810            <1> 	shr eax,16
   276 00000275 A2[0508]            <1> 	mov [gdt6 + 4],al
   277 00000278 8826[0808]          <1> 	mov [gdt6 + 7],ah
   278 0000027C 67668D83[0E0A0000]  <1> 	lea eax,[ebx + utss1]	; EAX=linear address of utss1
   279 00000284 A3[0B08]            <1> 	mov [gdt7 + 2],ax
   280 00000287 66C1E810            <1> 	shr eax,16
   281 0000028B A2[0D08]            <1> 	mov [gdt7 + 4],al
   282 0000028E 8826[1008]          <1> 	mov [gdt7 + 7],ah
   283 00000292 67668D83[760A0000]  <1> 	lea eax,[ebx + utss2]	; EAX=linear address of utss2
   284 0000029A A3[1308]            <1> 	mov [gdt8 + 2],ax
   285 0000029D 66C1E810            <1> 	shr eax,16
   286 000002A1 A2[1508]            <1> 	mov [gdt8 + 4],al
   287 000002A4 8826[1808]          <1> 	mov [gdt8 + 7],ah
   288                              <1> ;	lea eax,[ebx + utss3]	; EAX=linear address of utss2
   289                              <1> ;	mov [gdt9 + 2],ax
   290                              <1> ;	shr eax,16
   291                              <1> ;	mov [gdt9 + 4],al
   292                              <1> ;	mov [gdt9 + 7],ah
   293                              <1> ; point gdtr to the gdt, idtr to the idt
   294 000002A8 67668D83[D1070000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   295 000002B0 66A3[C107]          <1> 	mov [gdtr + 2],eax
   296 000002B4 67668D83[1E080000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   297 000002BC 66A3[C707]          <1> 	mov [idtr + 2],eax
   298                              <1> ; disable interrupts
   299 000002C0 FA                  <1> 	cli
   300                              <1> ; load GDT and IDT for full protected mode
   301 000002C1 0F0116[BF07]        <1> 	lgdt [gdtr]
   302 000002C6 0F011E[C507]        <1> 	lidt [idtr]
   303                              <1> ; save real-mode CS in BP
   304 000002CB 8CCD                <1> 	mov bp,cs
   305                              <1> ; set PE [protected mode enable] bit and go
   306 000002CD 0F20C0              <1> 	mov eax,cr0
   307 000002D0 0C01                <1> 	or al,1
   308 000002D2 0F22C0              <1> 	mov cr0,eax
   309 000002D5 EA[DA02]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   310                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   311                              <1> ;	32-bit protected mode
   312                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   313                              <1> [BITS 32]
   314                              <1> do_pm:
   315 000002DA 66B81800            <1> 	mov ax, SYS_DATA_SEL
   316 000002DE 8ED8                <1> 	mov ds,ax
   317 000002E0 8ED0                <1> 	mov ss,ax
   318 000002E2 BC00000000          <1> 	mov esp, 0
   319 000002E7 90                  <1> 	nop
   320 000002E8 8EC0                <1> 	mov es,ax
   321 000002EA 8EE0                <1> 	mov fs,ax
   322 000002EC 8EE8                <1> 	mov gs,ax
   323                              <1> ; load task register. All registers from this task will be dumped
   324                              <1> ; into SYS_TSS after executing the CALL USERx_TSS:0
   325 000002EE 66B83000            <1> 	mov ax,SYS_TSS
   326 000002F2 0F00D8              <1> 	ltr ax
   327                              <1> ; print starting msg
   328                              <1> 	;lea esi,[st_msg]
   329                              <1> 	;call wrstr
   330                              <1> ; initialize user TSSes
   331 000002F5 8D05[5B030000]      <1> 	lea eax,[user1]
   332 000002FB A3[2E0A0000]        <1> 	mov [utss1_eip],eax
   333 00000300 8D842400FEFFFF      <1> 	lea eax,[esp - 512]
   334 00000307 8925[460A0000]      <1> 	mov [utss1_esp],esp	; task1 stack 512 bytes below system
   335 0000030D 8D05[62030000]      <1> 	lea eax,[user2]
   336 00000313 A3[960A0000]        <1> 	mov [utss2_eip],eax
   337 00000318 8D842400FCFFFF      <1> 	lea eax,[esp - 1024]	; task2 stack 1K bytes below system
   338 0000031F 8925[AE0A0000]      <1> 	mov [utss2_esp],esp
   339                              <1> ;	lea eax,[user3]
   340                              <1> ;	mov [utss3_eip],eax
   341                              <1> ;	lea eax,[esp - 1536]	; task3 stack 1.5K bytes below system
   342                              <1> ;	mov [utss3_esp],esp
   343                              <1> 
   344                              <1> ; shut off interrupts at the 8259 PIC, except for timer interrupt.
   345                              <1> ; The switch to user task will enable interrupts at the CPU.
   346                              <1> 
   347 00000325 B0FE                <1> 	mov al,0xFE
   348 00000327 E621                <1> 	out 0x21,al
   349                              <1> sched:
   350 00000329 EA000000003800      <1> jmp USER1_TSS:0
   351                              <1> 	; timer interrupt returns us here. Reset 8259 PIC:
   352 00000330 B020                <1> mov al,0x20
   353 00000332 E620                <1> out 0x20,al
   354                              <1> 	; clear busy bit of user1 task
   355 00000334 C605[0E080000]89    <1> mov [gdt7 + 5],byte 0x89
   356                              <1> ;jmp sched2
   357                              <1> ;sched1:
   358                              <1> ;jmp USER3_TSS:0
   359                              <1> ;mov al,0x20
   360                              <1> ;out 0x20,al
   361                              <1> ;mov [gdt9 + 5],byte 0x89
   362                              <1> ;cmp byte [copygui], 1
   363                              <1> ;je sched1
   364                              <1> 
   365                              <1> sched2:
   366 0000033B 813D[94030000]0000- <1> cmp dword [user2codepoint], 0
   367 00000343 0000                <1>
   368 00000345 74E2                <1> je sched
   369                              <1> 
   370 00000347 EA000000004000      <1> jmp USER2_TSS:0
   371 0000034E B020                <1> mov al,0x20
   372 00000350 E620                <1> out 0x20,al
   373 00000352 C605[16080000]89    <1> mov [gdt8 + 5],byte 0x89
   374                              <1> 
   375 00000359 EBCE                <1> jmp sched
   376                              <1> 
   377                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   378                              <1> ;	user tasks
   379                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   380                              <1> 
   381 0000035B E950230000          <1> user1: 	jmp gui
   382 00000360 EBF9                <1> 	jmp user1
   383                              <1> 
   384                              <1> user2: 
   385 00000362 8B1D[94030000]      <1> 	mov ebx, [user2codepoint]
   386 00000368 81FB00000000        <1> 	cmp ebx, 0
   387 0000036E 74F2                <1> 	je user2
   388 00000370 FFD3                <1> 	call ebx
   389 00000372 EBEE                <1> 	jmp user2
   390                              <1> 	
   391                              <1> user3:
   392 00000374 803D[1E290000]00    <1> 	cmp byte [guion], 0
   393 0000037B 74F7                <1> 	je user3
   394 0000037D 803D[17290000]02    <1> 	cmp byte [copygui], 2
   395 00000384 74EE                <1> 	je user3
   396 00000386 E85A240000          <1> 	call guicopy
   397 0000038B C605[17290000]02    <1> 	mov byte [copygui], 2
   398 00000392 EBE0                <1> 	jmp user3
   399                              <1> 	
   400 00000394 00000000            <1> user2codepoint dw 0,0
   401 00000398 554E48414E44        <1> db "UNHAND"
   402                              <1> unhand:	
   403                              <1> 	;mov al,20h
   404                              <1> 	;out 20h,al
   405                              <1> 	%assign i 0
   406                              <1> 	%rep 40
   407                              <1> 	cli
   408                              <1> 	mov byte [intprob], i
   409                              <1> 	jmp unhand2
   410                              <1> 	%assign i i+1
   411                              <1> 	%endrep
   412 0000039E FA                  <2>  cli
   413 0000039F C605[E6060000]00    <2>  mov byte [intprob], i
   414 000003A6 E9FB010000          <2>  jmp unhand2
   415                              <2>  %assign i i+1
   416 000003AB FA                  <2>  cli
   417 000003AC C605[E6060000]01    <2>  mov byte [intprob], i
   418 000003B3 E9EE010000          <2>  jmp unhand2
   419                              <2>  %assign i i+1
   420 000003B8 FA                  <2>  cli
   421 000003B9 C605[E6060000]02    <2>  mov byte [intprob], i
   422 000003C0 E9E1010000          <2>  jmp unhand2
   423                              <2>  %assign i i+1
   424 000003C5 FA                  <2>  cli
   425 000003C6 C605[E6060000]03    <2>  mov byte [intprob], i
   426 000003CD E9D4010000          <2>  jmp unhand2
   427                              <2>  %assign i i+1
   428 000003D2 FA                  <2>  cli
   429 000003D3 C605[E6060000]04    <2>  mov byte [intprob], i
   430 000003DA E9C7010000          <2>  jmp unhand2
   431                              <2>  %assign i i+1
   432 000003DF FA                  <2>  cli
   433 000003E0 C605[E6060000]05    <2>  mov byte [intprob], i
   434 000003E7 E9BA010000          <2>  jmp unhand2
   435                              <2>  %assign i i+1
   436 000003EC FA                  <2>  cli
   437 000003ED C605[E6060000]06    <2>  mov byte [intprob], i
   438 000003F4 E9AD010000          <2>  jmp unhand2
   439                              <2>  %assign i i+1
   440 000003F9 FA                  <2>  cli
   441 000003FA C605[E6060000]07    <2>  mov byte [intprob], i
   442 00000401 E9A0010000          <2>  jmp unhand2
   443                              <2>  %assign i i+1
   444 00000406 FA                  <2>  cli
   445 00000407 C605[E6060000]08    <2>  mov byte [intprob], i
   446 0000040E E993010000          <2>  jmp unhand2
   447                              <2>  %assign i i+1
   448 00000413 FA                  <2>  cli
   449 00000414 C605[E6060000]09    <2>  mov byte [intprob], i
   450 0000041B E986010000          <2>  jmp unhand2
   451                              <2>  %assign i i+1
   452 00000420 FA                  <2>  cli
   453 00000421 C605[E6060000]0A    <2>  mov byte [intprob], i
   454 00000428 E979010000          <2>  jmp unhand2
   455                              <2>  %assign i i+1
   456 0000042D FA                  <2>  cli
   457 0000042E C605[E6060000]0B    <2>  mov byte [intprob], i
   458 00000435 E96C010000          <2>  jmp unhand2
   459                              <2>  %assign i i+1
   460 0000043A FA                  <2>  cli
   461 0000043B C605[E6060000]0C    <2>  mov byte [intprob], i
   462 00000442 E95F010000          <2>  jmp unhand2
   463                              <2>  %assign i i+1
   464 00000447 FA                  <2>  cli
   465 00000448 C605[E6060000]0D    <2>  mov byte [intprob], i
   466 0000044F E952010000          <2>  jmp unhand2
   467                              <2>  %assign i i+1
   468 00000454 FA                  <2>  cli
   469 00000455 C605[E6060000]0E    <2>  mov byte [intprob], i
   470 0000045C E945010000          <2>  jmp unhand2
   471                              <2>  %assign i i+1
   472 00000461 FA                  <2>  cli
   473 00000462 C605[E6060000]0F    <2>  mov byte [intprob], i
   474 00000469 E938010000          <2>  jmp unhand2
   475                              <2>  %assign i i+1
   476 0000046E FA                  <2>  cli
   477 0000046F C605[E6060000]10    <2>  mov byte [intprob], i
   478 00000476 E92B010000          <2>  jmp unhand2
   479                              <2>  %assign i i+1
   480 0000047B FA                  <2>  cli
   481 0000047C C605[E6060000]11    <2>  mov byte [intprob], i
   482 00000483 E91E010000          <2>  jmp unhand2
   483                              <2>  %assign i i+1
   484 00000488 FA                  <2>  cli
   485 00000489 C605[E6060000]12    <2>  mov byte [intprob], i
   486 00000490 E911010000          <2>  jmp unhand2
   487                              <2>  %assign i i+1
   488 00000495 FA                  <2>  cli
   489 00000496 C605[E6060000]13    <2>  mov byte [intprob], i
   490 0000049D E904010000          <2>  jmp unhand2
   491                              <2>  %assign i i+1
   492 000004A2 FA                  <2>  cli
   493 000004A3 C605[E6060000]14    <2>  mov byte [intprob], i
   494 000004AA E9F7000000          <2>  jmp unhand2
   495                              <2>  %assign i i+1
   496 000004AF FA                  <2>  cli
   497 000004B0 C605[E6060000]15    <2>  mov byte [intprob], i
   498 000004B7 E9EA000000          <2>  jmp unhand2
   499                              <2>  %assign i i+1
   500 000004BC FA                  <2>  cli
   501 000004BD C605[E6060000]16    <2>  mov byte [intprob], i
   502 000004C4 E9DD000000          <2>  jmp unhand2
   503                              <2>  %assign i i+1
   504 000004C9 FA                  <2>  cli
   505 000004CA C605[E6060000]17    <2>  mov byte [intprob], i
   506 000004D1 E9D0000000          <2>  jmp unhand2
   507                              <2>  %assign i i+1
   508 000004D6 FA                  <2>  cli
   509 000004D7 C605[E6060000]18    <2>  mov byte [intprob], i
   510 000004DE E9C3000000          <2>  jmp unhand2
   511                              <2>  %assign i i+1
   512 000004E3 FA                  <2>  cli
   513 000004E4 C605[E6060000]19    <2>  mov byte [intprob], i
   514 000004EB E9B6000000          <2>  jmp unhand2
   515                              <2>  %assign i i+1
   516 000004F0 FA                  <2>  cli
   517 000004F1 C605[E6060000]1A    <2>  mov byte [intprob], i
   518 000004F8 E9A9000000          <2>  jmp unhand2
   519                              <2>  %assign i i+1
   520 000004FD FA                  <2>  cli
   521 000004FE C605[E6060000]1B    <2>  mov byte [intprob], i
   522 00000505 E99C000000          <2>  jmp unhand2
   523                              <2>  %assign i i+1
   524 0000050A FA                  <2>  cli
   525 0000050B C605[E6060000]1C    <2>  mov byte [intprob], i
   526 00000512 E98F000000          <2>  jmp unhand2
   527                              <2>  %assign i i+1
   528 00000517 FA                  <2>  cli
   529 00000518 C605[E6060000]1D    <2>  mov byte [intprob], i
   530 0000051F E982000000          <2>  jmp unhand2
   531                              <2>  %assign i i+1
   532 00000524 FA                  <2>  cli
   533 00000525 C605[E6060000]1E    <2>  mov byte [intprob], i
   534 0000052C E975000000          <2>  jmp unhand2
   535                              <2>  %assign i i+1
   536 00000531 FA                  <2>  cli
   537 00000532 C605[E6060000]1F    <2>  mov byte [intprob], i
   538 00000539 E968000000          <2>  jmp unhand2
   539                              <2>  %assign i i+1
   540 0000053E FA                  <2>  cli
   541 0000053F C605[E6060000]20    <2>  mov byte [intprob], i
   542 00000546 E95B000000          <2>  jmp unhand2
   543                              <2>  %assign i i+1
   544 0000054B FA                  <2>  cli
   545 0000054C C605[E6060000]21    <2>  mov byte [intprob], i
   546 00000553 E94E000000          <2>  jmp unhand2
   547                              <2>  %assign i i+1
   548 00000558 FA                  <2>  cli
   549 00000559 C605[E6060000]22    <2>  mov byte [intprob], i
   550 00000560 E941000000          <2>  jmp unhand2
   551                              <2>  %assign i i+1
   552 00000565 FA                  <2>  cli
   553 00000566 C605[E6060000]23    <2>  mov byte [intprob], i
   554 0000056D E934000000          <2>  jmp unhand2
   555                              <2>  %assign i i+1
   556 00000572 FA                  <2>  cli
   557 00000573 C605[E6060000]24    <2>  mov byte [intprob], i
   558 0000057A E927000000          <2>  jmp unhand2
   559                              <2>  %assign i i+1
   560 0000057F FA                  <2>  cli
   561 00000580 C605[E6060000]25    <2>  mov byte [intprob], i
   562 00000587 E91A000000          <2>  jmp unhand2
   563                              <2>  %assign i i+1
   564 0000058C FA                  <2>  cli
   565 0000058D C605[E6060000]26    <2>  mov byte [intprob], i
   566 00000594 E90D000000          <2>  jmp unhand2
   567                              <2>  %assign i i+1
   568 00000599 FA                  <2>  cli
   569 0000059A C605[E6060000]27    <2>  mov byte [intprob], i
   570 000005A1 E900000000          <2>  jmp unhand2
   571                              <2>  %assign i i+1
   572                              <1> unhand2:
   573                              <1> 	;pusha
   574                              <1> 	;mov al, 20h
   575                              <1> 	;out 20h, al
   576                              <1> 	;popa
   577 000005A6 60                  <1> 	pushad
   578 000005A7 C705[94030000]0000- <1> 	mov dword [user2codepoint], 0
   579 000005AF 0000                <1>
   580 000005B1 8925[DC060000]      <1> 	mov [esploc], esp
   581 000005B7 BE[09070000]        <1> 	mov esi, unhandmsg
   582 000005BC 8935[E0060000]      <1> 	mov [esiloc], esi
   583 000005C2 B900000000          <1> 	mov ecx, 0
   584 000005C7 8A0D[E6060000]      <1> 	mov cl, [intprob]
   585 000005CD E8C2000000          <1> 	call expdump
   586 000005D2 8B35[DC060000]      <1> 	mov esi, [esploc]
   587 000005D8 8B4E24              <1> 	mov ecx, [esi + 36]
   588 000005DB E8B4000000          <1> 	call expdump
   589 000005E0 8B35[DC060000]      <1> 	mov esi, [esploc]
   590 000005E6 8B4E20              <1> 	mov ecx, [esi + 32]
   591 000005E9 E8A6000000          <1> 	call expdump
   592 000005EE 8B35[DC060000]      <1> 	mov esi, [esploc]
   593 000005F4 8B4E1C              <1> 	mov ecx, [esi + 28]
   594 000005F7 E898000000          <1> 	call expdump
   595 000005FC 8B35[DC060000]      <1> 	mov esi, [esploc]
   596 00000602 8B4E10              <1> 	mov ecx, [esi + 16]
   597 00000605 E88A000000          <1> 	call expdump
   598 0000060A 8B35[DC060000]      <1> 	mov esi, [esploc]
   599 00000610 8B4E18              <1> 	mov ecx, [esi + 24]
   600 00000613 E87C000000          <1> 	call expdump
   601 00000618 8B35[DC060000]      <1> 	mov esi, [esploc]
   602 0000061E 8B4E14              <1> 	mov ecx, [esi + 20]
   603 00000621 E86E000000          <1> 	call expdump
   604 00000626 8B35[DC060000]      <1> 	mov esi, [esploc]
   605 0000062C 8B4E04              <1> 	mov ecx, [esi + 4]
   606 0000062F E860000000          <1> 	call expdump
   607 00000634 8B35[DC060000]      <1> 	mov esi, [esploc]
   608 0000063A 8B0E                <1> 	mov ecx, [esi]
   609 0000063C E853000000          <1> 	call expdump
   610 00000641 8B35[DC060000]      <1> 	mov esi, [esploc]
   611 00000647 8B4E08              <1> 	mov ecx, [esi + 8]
   612 0000064A E845000000          <1> 	call expdump
   613 0000064F 8B35[DC060000]      <1> 	mov esi, [esploc]
   614 00000655 8B4E0C              <1> 	mov ecx, [esi + 12]
   615 00000658 E837000000          <1> 	call expdump
   616 0000065D 8B35[DC060000]      <1> 	mov esi, [esploc]
   617 00000663 8B7C2420            <1> 	mov edi, [esp + 32]
   618 00000667 8B4FFC              <1> 	mov ecx, [edi - 4]
   619 0000066A E825000000          <1> 	call expdump
   620 0000066F 8B35[DC060000]      <1> 	mov esi, [esploc]
   621 00000675 8B7C2420            <1> 	mov edi, [esp + 32]
   622 00000679 8B0F                <1> 	mov ecx, [edi]
   623 0000067B E814000000          <1> 	call expdump
   624 00000680 8B35[DC060000]      <1> 	mov esi, [esploc]
   625 00000686 8B7C2420            <1> 	mov edi, [esp + 32]
   626 0000068A 8B4F04              <1> 	mov ecx, [edi + 4]
   627 0000068D E802000000          <1> 	call expdump
   628 00000692 EBFE                <1> 	jmp $
   629                              <1> expdump:
   630 00000694 8B35[E0060000]      <1> 	mov esi, [esiloc]
   631 0000069A 89F7                <1> 	mov edi, esi
   632 0000069C 81C70D000000        <1> 	add edi, 13
   633 000006A2 81C604000000        <1> 	add esi, 4
   634 000006A8 893D[E0060000]      <1> 	mov [esiloc], edi
   635 000006AE 4F                  <1> 	dec edi
   636 000006AF E82A0B0000          <1> 	call converthex
   637 000006B4 81EE04000000        <1> 	sub esi, 4
   638 000006BA 668B0D[E4060000]    <1> 	mov cx, [locunhand]
   639 000006C1 668105[E4060000]10- <1> 	add word [locunhand], 16
   640 000006C9 00                  <1>
   641 000006CA 66BA0200            <1> 	mov dx, 2
   642 000006CE 66B80100            <1> 	mov ax, 1
   643 000006D2 66BB0000            <1> 	mov bx, 0
   644 000006D6 E8072C0000          <1> 	call showstring
   645 000006DB C3                  <1> 	ret
   646                              <1> 
   647 000006DC 00000000            <1> esploc dd 0
   648 000006E0 00000000            <1> esiloc dd 0
   649 000006E4 0100                <1> locunhand dw 1
   650 000006E6 00                  <1> intprob db 0
   651                              <1> 
   652                              <1> timekeeper:
   653 000006E7 803D[1E290000]01    <1> 	cmp byte [guion], 1
   654 000006EE 7515                <1> 	jne notimekeep
   655 000006F0 6650                <1> 	push ax
   656 000006F2 A0[07070000]        <1> 	mov al, [framesdone]
   657 000006F7 A2[08070000]        <1> 	mov [fps], al
   658 000006FC B000                <1> 	mov al, 0
   659 000006FE A2[07070000]        <1> 	mov [framesdone], al
   660 00000703 6658                <1> 	pop ax
   661                              <1> notimekeep:
   662 00000705 C3                  <1> 	ret
   663                              <1> 	
   664 00000706 CF                  <1> handled: iret
   665                              <1> 
   666 00000707 00                  <1> framesdone db 0
   667 00000708 00                  <1> fps db 0
   668 00000709 494E54203030303030- <1> unhandmsg	db "INT 00000000",0
   669 00000712 30303000            <1>
   670 00000716 43533A3D3030303030- <1> 			db "CS:=00000000",0
   671 0000071F 30303000            <1>
   672 00000723 4549503D3030303030- <1> 			db "EIP=00000000",0
   673 0000072C 30303000            <1>
   674 00000730 4541583D3030303030- <1> 			db "EAX=00000000",0
   675 00000739 30303000            <1>
   676 0000073D 4542583D3030303030- <1> 			db "EBX=00000000",0
   677 00000746 30303000            <1>
   678 0000074A 4543583D3030303030- <1> 			db "ECX=00000000",0
   679 00000753 30303000            <1>
   680 00000757 4544583D3030303030- <1> 			db "EDX=00000000",0
   681 00000760 30303000            <1>
   682 00000764 4553493D3030303030- <1> 			db "ESI=00000000",0
   683 0000076D 30303000            <1>
   684 00000771 4544493D3030303030- <1> 			db "EDI=00000000",0
   685 0000077A 30303000            <1>
   686 0000077E 4542503D3030303030- <1> 			db "EBP=00000000",0
   687 00000787 30303000            <1>
   688 0000078B 4553503D3030303030- <1> 			db "ESP=00000000",0
   689 00000794 30303000            <1>
   690 00000798 434D443D3030303030- <1> 			db "CMD=00000000",0
   691 000007A1 30303000            <1>
   692 000007A5 434D443D3030303030- <1> 			db "CMD=00000000",0
   693 000007AE 30303000            <1>
   694 000007B2 434D443D3030303030- <1> 			db "CMD=00000000",0
   695 000007BB 30303000            <1>
   696                              <1> unhandmsgend:
   697                              <1> [BITS 16]
   698                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   699                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   700                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   701 000007BF 4700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   702 000007C1 [D1070000]          <1> 	dd gdt			; linear, physical address of GDT
   703                              <1> 
   704 000007C5 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   705 000007C7 [1E080000]          <1> 	dd idt			; linear, physical address of IDT
   706                              <1> 
   707                              <1> ; an IDTR 'appropriate' for real mode
   708 000007CB FFFF                <1> ridtr:	dw 0xFFFF		; limit=0xFFFF
   709 000007CD 00000000            <1> 	dd 0			; base=0
   710                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   711                              <1> ;	global descriptor table (GDT)
   712                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   713                              <1> ; null descriptor
   714 000007D1 0000                <1> gdt:	dw 0			; limit 15:0
   715 000007D3 0000                <1> 	dw 0			; base 15:0
   716 000007D5 00                  <1> 	db 0			; base 23:16
   717 000007D6 00                  <1> 	db 0			; type
   718 000007D7 00                  <1> 	db 0			; limit 19:16, flags
   719 000007D8 00                  <1> 	db 0			; base 31:24
   720                              <1> ; linear data segment descriptor
   721                              <1> LINEAR_SEL	equ	$-gdt
   722 000007D9 FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   723 000007DB 0000                <1> 	dw 0			; base for this one is always 0
   724 000007DD 00                  <1> 	db 0
   725 000007DE 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   726 000007DF CF                  <1> 	db 0xCF			; page-granular, 32-bit
   727 000007E0 00                  <1> 	db 0
   728                              <1> ; code segment descriptor
   729                              <1> SYS_CODE_SEL	equ	$-gdt
   730 000007E1 FFFF                <1> gdt2:	dw 0xFFFF
   731 000007E3 0000                <1> 	dw 0			; (base gets set above)
   732 000007E5 00                  <1> 	db 0
   733 000007E6 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   734 000007E7 CF                  <1> 	db 0xCF
   735 000007E8 00                  <1> 	db 0
   736                              <1> ; data segment descriptor
   737                              <1> SYS_DATA_SEL	equ	$-gdt
   738 000007E9 FFFF                <1> gdt3:	dw 0xFFFF
   739 000007EB 0000                <1> 	dw 0			; (base gets set above)
   740 000007ED 00                  <1> 	db 0
   741 000007EE 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   742 000007EF CF                  <1> 	db 0xCF
   743 000007F0 00                  <1> 	db 0
   744                              <1> ; code segment descriptor that is 'appropriate' for real mode
   745                              <1> ; (16-bit, limit=0xFFFF)
   746                              <1> REAL_CODE_SEL	equ	$-gdt
   747 000007F1 FFFF                <1> gdt4:	dw 0xFFFF
   748 000007F3 0000                <1> 	dw 0			; (base gets set above)
   749 000007F5 00                  <1> 	db 0
   750 000007F6 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   751 000007F7 00                  <1> 	db 0			; byte-granular, 16-bit
   752 000007F8 00                  <1> 	db 0
   753                              <1> ; data segment descriptor that is 'appropriate' for real mode
   754                              <1> ; (16-bit, limit=0xFFFF)
   755                              <1> REAL_DATA_SEL	equ	$-gdt
   756 000007F9 FFFF                <1> gdt5:	dw 0xFFFF
   757 000007FB 0000                <1> 	dw 0			; (base gets set above)
   758 000007FD 00                  <1> 	db 0
   759 000007FE 92                  <1> 	db 0x92			; present, ring 0, code, non-conforming, readable
   760 000007FF 00                  <1> 	db 0			; byte-granular, 16-bit
   761 00000800 00                  <1> 	db 0
   762                              <1> ; system TSS
   763                              <1> SYS_TSS		equ	$-gdt
   764 00000801 6700                <1> gdt6:	dw 103
   765 00000803 0000                <1> 	dw 0			; set to stss
   766 00000805 00                  <1> 	db 0
   767 00000806 89                  <1> 	db 0x89			; present, ring 0, 32-bit available TSS
   768 00000807 00                  <1> 	db 0
   769 00000808 00                  <1> 	db 0
   770                              <1> ; user TSS 1
   771                              <1> USER1_TSS	equ	$-gdt
   772 00000809 6700                <1> gdt7:	dw 103
   773 0000080B 0000                <1> 	dw 0			; set to utss1
   774 0000080D 00                  <1> 	db 0
   775 0000080E 89                  <1> 	db 0x89			; present, ring 0, 32-bit available TSS
   776 0000080F 00                  <1> 	db 0
   777 00000810 00                  <1> 	db 0
   778                              <1> ; user TSS 2
   779                              <1> USER2_TSS	equ	$-gdt
   780 00000811 6700                <1> gdt8:	dw 103
   781 00000813 0000                <1> 	dw 0			; set to utss2
   782 00000815 00                  <1> 	db 0
   783 00000816 89                  <1> 	db 0x89			; present, ring 0, 32-bit available TSS
   784 00000817 00                  <1> 	db 0
   785 00000818 00                  <1> 	db 0
   786                              <1> ; user TSS 3
   787                              <1> ;USER3_TSS	equ	$-gdt
   788                              <1> ;gdt9:	dw 103
   789                              <1> ;	dw 0			; set to utss3
   790                              <1> ;	db 0
   791                              <1> ;	db 0x89			; present, ring 0, 32-bit available TSS
   792                              <1> ;	db 0
   793                              <1> ;	db 0
   794                              <1> gdt_end:
   795                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   796                              <1> ;	interrupt descriptor table (IDT)
   797                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   798                              <1> ; 32 reserved interrupts:
   799 00000819 494454              <1> db "IDT"
   800 0000081C [9E03]              <1> dw unhand
   801                              <1> idt:	
   802                              <1> %assign i 0 
   803                              <1> %rep    8
   804                              <1>         dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   805                              <1> %assign i i+1 
   806                              <1> %endrep
   807 0000081E [9E03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   808                              <2> %assign i i+1
   809 00000826 [AB03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   810                              <2> %assign i i+1
   811 0000082E [B803]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   812                              <2> %assign i i+1
   813 00000836 [C503]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   814                              <2> %assign i i+1
   815 0000083E [D203]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   816                              <2> %assign i i+1
   817 00000846 [DF03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   818                              <2> %assign i i+1
   819 0000084E [EC03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   820                              <2> %assign i i+1
   821 00000856 [F903]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   822                              <2> %assign i i+1
   823                              <1> 
   824                              <1> ;	dw unhand
   825                              <1> ;	dw SYS_CODE_SEL
   826                              <1> ;	db 0
   827                              <1> ;	db 0x8E
   828                              <1> ;	dw 0
   829                              <1> ; INT 8 is IRQ0 (timer interrupt). The 8259's can (and should) be
   830                              <1> ; reprogrammed to assign the IRQs to higher INTs, since the first
   831                              <1> ; 32 INTs are Intel-reserved. Didn't IBM or Microsoft RTFM?
   832 0000085E 0000                <1> 	dw 0
   833 00000860 3000                <1> 	dw SYS_TSS
   834 00000862 00                  <1> 	db 0
   835 00000863 85                  <1> 	db 0x85			; Ring 0 task gate
   836 00000864 0000                <1> 	dw 0
   837                              <1> 
   838                              <1> %assign i 9
   839                              <1> %rep    39
   840                              <1>         dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   841                              <1> %assign i i+1 
   842                              <1> %endrep
   843 00000866 [1304]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   844                              <2> %assign i i+1
   845 0000086E [2004]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   846                              <2> %assign i i+1
   847 00000876 [2D04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   848                              <2> %assign i i+1
   849 0000087E [3A04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   850                              <2> %assign i i+1
   851 00000886 [4704]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   852                              <2> %assign i i+1
   853 0000088E [5404]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   854                              <2> %assign i i+1
   855 00000896 [6104]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   856                              <2> %assign i i+1
   857 0000089E [6E04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   858                              <2> %assign i i+1
   859 000008A6 [7B04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   860                              <2> %assign i i+1
   861 000008AE [8804]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   862                              <2> %assign i i+1
   863 000008B6 [9504]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   864                              <2> %assign i i+1
   865 000008BE [A204]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   866                              <2> %assign i i+1
   867 000008C6 [AF04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   868                              <2> %assign i i+1
   869 000008CE [BC04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   870                              <2> %assign i i+1
   871 000008D6 [C904]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   872                              <2> %assign i i+1
   873 000008DE [D604]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   874                              <2> %assign i i+1
   875 000008E6 [E304]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   876                              <2> %assign i i+1
   877 000008EE [F004]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   878                              <2> %assign i i+1
   879 000008F6 [FD04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   880                              <2> %assign i i+1
   881 000008FE [0A05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   882                              <2> %assign i i+1
   883 00000906 [1705]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   884                              <2> %assign i i+1
   885 0000090E [2405]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   886                              <2> %assign i i+1
   887 00000916 [3105]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   888                              <2> %assign i i+1
   889 0000091E [3E05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   890                              <2> %assign i i+1
   891 00000926 [4B05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   892                              <2> %assign i i+1
   893 0000092E [5805]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   894                              <2> %assign i i+1
   895 00000936 [6505]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   896                              <2> %assign i i+1
   897 0000093E [7205]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   898                              <2> %assign i i+1
   899 00000946 [7F05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   900                              <2> %assign i i+1
   901 0000094E [8C05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   902                              <2> %assign i i+1
   903 00000956 [9905]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   904                              <2> %assign i i+1
   905 0000095E [A605]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   906                              <2> %assign i i+1
   907 00000966 [B305]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   908                              <2> %assign i i+1
   909 0000096E [C005]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   910                              <2> %assign i i+1
   911 00000976 [CD05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   912                              <2> %assign i i+1
   913 0000097E [DA05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   914                              <2> %assign i i+1
   915 00000986 [E705]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   916                              <2> %assign i i+1
   917 0000098E [F405]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   918                              <2> %assign i i+1
   919 00000996 [0106]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   920                              <2> %assign i i+1
   921                              <1> 
   922                              <1> ;;INT 30h for os use and 3rd party use:
   923 0000099E [DE0A]1000008E0000  <1> 	dw newints,SYS_CODE_SEL,0x8E00,0
   924                              <1> 	
   925                              <1> ;;	db 0
   926                              <1> ;;	db 0x85			; Ring 0 task gate
   927                              <1> ;;	dw 0
   928                              <1> 
   929                              <1> idt_end:
   930                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   931                              <1> ;	task state segments
   932                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   933 000009A6 00000000            <1> stss:	dw 0, 0			; back link
   934 000009AA 00000000            <1> 	dd 0			; ESP0
   935 000009AE 00000000            <1> 	dw 0, 0			; SS0, reserved
   936 000009B2 00000000            <1> 	dd 0			; ESP1
   937 000009B6 00000000            <1> 	dw 0, 0			; SS1, reserved
   938 000009BA 00000000            <1> 	dd 0			; ESP2
   939 000009BE 00000000            <1> 	dw 0, 0			; SS2, reserved
   940 000009C2 000000000000000000- <1> 	dd 0, 0, 0		; CR3, EIP, EFLAGS
   941 000009CB 000000              <1>
   942 000009CE 000000000000000000- <1> 	dd 0, 0, 0, 0		; EAX, ECX, EDX, EBX
   943 000009D7 00000000000000      <1>
   944 000009DE 000000000000000000- <1> 	dd 0, 0, 0, 0		; ESP, EBP, ESI, EDI
   945 000009E7 00000000000000      <1>
   946 000009EE 00000000            <1> 	dw 0, 0			; ES, reserved
   947 000009F2 00000000            <1> 	dw 0, 0			; CS, reserved
   948 000009F6 00000000            <1> 	dw 0, 0			; SS, reserved
   949 000009FA 00000000            <1> 	dw 0, 0			; DS, reserved
   950 000009FE 00000000            <1> 	dw 0, 0			; FS, reserved
   951 00000A02 00000000            <1> 	dw 0, 0			; GS, reserved
   952 00000A06 00000000            <1> 	dw 0, 0			; LDT, reserved
   953 00000A0A 00000000            <1> 	dw 0, 0			; debug, IO perm. bitmap
   954                              <1> 
   955 00000A0E 00000000            <1> utss1:	dw 0, 0			; back link
   956 00000A12 00000000            <1> 	dd 0			; ESP0
   957 00000A16 00000000            <1> 	dw 0, 0			; SS0, reserved
   958 00000A1A 00000000            <1> 	dd 0			; ESP1
   959 00000A1E 00000000            <1> 	dw 0, 0			; SS1, reserved
   960 00000A22 00000000            <1> 	dd 0			; ESP2
   961 00000A26 00000000            <1> 	dw 0, 0			; SS2, reserved
   962 00000A2A 00000000            <1> 	dd 0			; CR3
   963                              <1> utss1_eip:
   964 00000A2E 0000000000020000    <1> 	dd 0, 0x200		; EIP, EFLAGS (EFLAGS=0x200 for ints)
   965 00000A36 000000000000000000- <1> 	dd 0, 0, 0, 0		; EAX, ECX, EDX, EBX
   966 00000A3F 00000000000000      <1>
   967                              <1> utss1_esp:
   968 00000A46 000000000000000000- <1> 	dd 0, 0, 0, 0		; ESP, EBP, ESI, EDI
   969 00000A4F 00000000000000      <1>
   970 00000A56 18000000            <1> 	dw SYS_DATA_SEL, 0	; ES, reserved
   971 00000A5A 10000000            <1> 	dw SYS_CODE_SEL, 0	; CS, reserved
   972 00000A5E 18000000            <1> 	dw SYS_DATA_SEL, 0	; SS, reserved
   973 00000A62 18000000            <1> 	dw SYS_DATA_SEL, 0	; DS, reserved
   974 00000A66 18000000            <1> 	dw SYS_DATA_SEL, 0	; FS, reserved
   975 00000A6A 18000000            <1> 	dw SYS_DATA_SEL, 0	; GS, reserved
   976 00000A6E 00000000            <1> 	dw 0, 0			; LDT, reserved
   977 00000A72 00000000            <1> 	dw 0, 0			; debug, IO perm. bitmap
   978                              <1> 
   979 00000A76 00000000            <1> utss2:	dw 0, 0			; back link
   980 00000A7A 00000000            <1> 	dd 0			; ESP0
   981 00000A7E 00000000            <1> 	dw 0, 0			; SS0, reserved
   982 00000A82 00000000            <1> 	dd 0			; ESP1
   983 00000A86 00000000            <1> 	dw 0, 0			; SS1, reserved
   984 00000A8A 00000000            <1> 	dd 0			; ESP2
   985 00000A8E 00000000            <1> 	dw 0, 0			; SS2, reserved
   986 00000A92 00000000            <1> 	dd 0			; CR3
   987                              <1> utss2_eip:
   988 00000A96 0000000000020000    <1> 	dd 0, 0x200		; EIP, EFLAGS (EFLAGS=0x200 for ints)
   989 00000A9E 000000000000000000- <1> 	dd 0, 0, 0, 0		; EAX, ECX, EDX, EBX
   990 00000AA7 00000000000000      <1>
   991                              <1> utss2_esp:
   992 00000AAE 000000000000000000- <1> 	dd 0, 0, 0, 0		; ESP, EBP, ESI, EDI
   993 00000AB7 00000000000000      <1>
   994 00000ABE 18000000            <1> 	dw SYS_DATA_SEL, 0	; ES, reserved
   995 00000AC2 10000000            <1> 	dw SYS_CODE_SEL, 0	; CS, reserved
   996 00000AC6 18000000            <1> 	dw SYS_DATA_SEL, 0	; SS, reserved
   997 00000ACA 18000000            <1> 	dw SYS_DATA_SEL, 0	; DS, reserved
   998 00000ACE 18000000            <1> 	dw SYS_DATA_SEL, 0	; FS, reserved
   999 00000AD2 18000000            <1> 	dw SYS_DATA_SEL, 0	; GS, reserved
  1000 00000AD6 00000000            <1> 	dw 0, 0			; LDT, reserved
  1001 00000ADA 00000000            <1> 	dw 0, 0			; debug, IO perm. bitmap
  1002                              <1> 	
  1003                              <1> ;utss3:	dw 0, 0			; back link
  1004                              <1> ;	dd 0			; ESP0
  1005                              <1> ;	dw 0, 0			; SS0, reserved
  1006                              <1> ;	dd 0			; ESP1
  1007                              <1> ;	dw 0, 0			; SS1, reserved
  1008                              <1> ;	dd 0			; ESP2
  1009                              <1> ;	dw 0, 0			; SS2, reserved
  1010                              <1> ;	dd 0			; CR3
  1011                              <1> ;utss3_eip:
  1012                              <1> ;	dd 0, 0x200		; EIP, EFLAGS (EFLAGS=0x200 for ints)
  1013                              <1> ;	dd 0, 0, 0, 0		; EAX, ECX, EDX, EBX
  1014                              <1> ;utss3_esp:
  1015                              <1> ;	dd 0, 0, 0, 0		; ESP, EBP, ESI, EDI
  1016                              <1> ;	dw SYS_DATA_SEL, 0	; ES, reserved
  1017                              <1> ;	dw SYS_CODE_SEL, 0	; CS, reserved
  1018                              <1> ;	dw SYS_DATA_SEL, 0	; SS, reserved
  1019                              <1> ;	dw SYS_DATA_SEL, 0	; DS, reserved
  1020                              <1> ;	dw SYS_DATA_SEL, 0	; FS, reserved
  1021                              <1> ;	dw SYS_DATA_SEL, 0	; GS, reserved
  1022                              <1> ;	dw 0, 0			; LDT, reserved
  1023                              <1> ;	dw 0, 0			; debug, IO perm. bitmap
  1024                              <1> end:
  1025                                  [BITS 32]
  1026                                      %include 'source/ints.asm'
  1027                              <1> newints:	;;for great justice
  1028 00000ADE 80FC00              <1> 	cmp ah, 0		;;originally 0
  1029 00000AE1 0F8440000000        <1> 	je near intx0   ;;0=kills app
  1030 00000AE7 80FC01              <1> 	cmp ah, 1		;;originally 1
  1031 00000AEA 0F843C000000        <1> 	je near intx1   ;;3=print string
  1032 00000AF0 80FC02              <1> 	cmp ah, 2		;;originally 2
  1033 00000AF3 0F8439000000        <1> 	je near intx2	;;4=read string
  1034 00000AF9 80FC03              <1> 	cmp ah, 3		;;originally 3
  1035 00000AFC 0F8436000000        <1> 	je near intx3	;;6=clear screen
  1036 00000B02 80FC04              <1> 	cmp ah, 4		;;originally 4
  1037 00000B05 0F8433000000        <1> 	je near intx4	;;5=read and print string
  1038 00000B0B 80FC05              <1> 	cmp ah, 5		;;originally 5		
  1039 00000B0E 0F8430000000        <1> 	je near intx5	;;2=get char
  1040 00000B14 80FC06              <1> 	cmp ah, 6		;;originally 6
  1041 00000B17 0F842D000000        <1> 	je near intx6	;;1=print char
  1042 00000B1D 80FC07              <1> 	cmp ah, 7
  1043 00000B20 0F842A000000        <1> 	je near intx7 ;;read file
  1044 00000B26 C3                  <1> 	ret
  1045                              <1> 	
  1046                              <1> intx0:
  1047 00000B27 E98D030000          <1> 	jmp nwcmd
  1048                              <1> intx1:
  1049 00000B2C E814020000          <1> 	call int303
  1050 00000B31 C3                  <1> 	ret
  1051                              <1> intx2:
  1052 00000B32 E844020000          <1> 	call int304
  1053 00000B37 C3                  <1> 	ret
  1054                              <1> intx3:
  1055 00000B38 E8B1020000          <1> 	call int306
  1056 00000B3D C3                  <1> 	ret
  1057                              <1> intx4:
  1058 00000B3E E85C020000          <1> 	call int305
  1059 00000B43 C3                  <1> 	ret
  1060                              <1> intx5:
  1061 00000B44 E8C4010000          <1> 	call int302
  1062 00000B49 C3                  <1> 	ret
  1063                              <1> intx6:
  1064 00000B4A E811000000          <1> 	call int301
  1065 00000B4F C3                  <1> 	ret
  1066                              <1> intx7:
  1067 00000B50 E8AE330000          <1> 	call loadfile
  1068 00000B55 C3                  <1> 	ret
  1069                              <1> 	
  1070 00000B56 0000                <1> linebeginpos dw 0
  1071 00000B58 0000                <1> videobufpos: dw 0
  1072 00000B5A 0000                <1> charpos db 0,0
  1073 00000B5C A01E                <1> charxy db 160,30
  1074 00000B5E 0000                <1> charbuf dw 0
  1075                              <1> 
  1076                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
  1077 00000B60 E820000000          <1> 	call int301prnt
  1078 00000B65 60                  <1> 	pusha
  1079 00000B66 C605[1D290000]00    <1> 	mov byte [mouseselecton], 0
  1080 00000B6D C605[840B0000]01    <1> 	mov byte [termcopyon], 1
  1081 00000B74 803D[830B0000]01    <1> 	cmp byte [termguion], 1
  1082 00000B7B 0F8474290000        <1> 	je near windowvideocopy
  1083 00000B81 61                  <1> 	popa
  1084 00000B82 C3                  <1> 	ret
  1085 00000B83 00                  <1> termguion db 0
  1086 00000B84 00                  <1> termcopyon db 0
  1087                              <1> int301prnt:
  1088 00000B85 88DC                <1> 	mov ah, bl
  1089 00000B87 66A3[5E0B0000]      <1> 	mov [charbuf], ax
  1090 00000B8D BB00000000          <1> 	mov ebx, 0
  1091 00000B92 668B1D[580B0000]    <1> 	mov bx, [videobufpos]
  1092 00000B99 BF[EC560000]        <1> 	mov edi, videobuf2
  1093 00000B9E 01DF                <1> 	add edi, ebx
  1094 00000BA0 BA00000000          <1> 	mov edx, 0
  1095 00000BA5 668B15[5A0B0000]    <1> 	mov dx, [charpos]
  1096 00000BAC B900000000          <1> 	mov ecx, 0
  1097 00000BB1 668B0D[5C0B0000]    <1> 	mov cx, [charxy]
  1098 00000BB8 3C0D                <1> 	cmp al, 13
  1099 00000BBA 0F844B000000        <1> 	je near int301cr
  1100 00000BC0 3C0A                <1> 	cmp al, 10
  1101 00000BC2 0F847F000000        <1> 	je near int301nl
  1102 00000BC8 3C08                <1> 	cmp al, 8
  1103 00000BCA 0F8452000000        <1> 	je near int301bs
  1104 00000BD0 668907              <1> 	mov [edi], ax
  1105 00000BD3 81C702000000        <1> 	add edi, 2
  1106 00000BD9 80C202              <1> 	add dl, 2
  1107                              <1> donecrnl:
  1108 00000BDC 38CA                <1> 	cmp dl, cl
  1109 00000BDE 0F8394000000        <1> 	jae near int301eol
  1110                              <1> doneeol:
  1111 00000BE4 38EE                <1> 	cmp dh, ch
  1112 00000BE6 0F83AA000000        <1> 	jae near int301scr	
  1113                              <1> donescr:
  1114 00000BEC 89FB                <1> 	mov ebx, edi
  1115 00000BEE 81EB[EC560000]      <1> 	sub ebx, videobuf2
  1116 00000BF4 66891D[580B0000]    <1> 	mov [videobufpos], bx
  1117 00000BFB 668915[5A0B0000]    <1> 	mov [charpos], dx
  1118 00000C02 66A1[5E0B0000]      <1> 	mov ax, [charbuf]
  1119 00000C08 88E3                <1> 	mov bl, ah
  1120 00000C0A C3                  <1> 	ret
  1121                              <1> 	
  1122                              <1> 	int301cr:
  1123 00000C0B B200                <1> 		mov dl, 0
  1124 00000C0D BB00000000          <1> 		mov ebx, 0
  1125 00000C12 BF[EC560000]        <1> 		mov edi, videobuf2
  1126 00000C17 668B1D[560B0000]    <1> 		mov bx, [linebeginpos]
  1127 00000C1E 01DF                <1> 		add edi, ebx
  1128 00000C20 EBBA                <1> 		jmp donecrnl
  1129                              <1> 			
  1130                              <1> 	int301bs:
  1131 00000C22 80FA00              <1> 		cmp dl, 0
  1132 00000C25 7415                <1> 		je int301backline
  1133                              <1> 	int301nobmr:
  1134 00000C27 80EA02              <1> 		sub dl, 2
  1135 00000C2A 66B80000            <1> 		mov ax, 0
  1136 00000C2E 668907              <1> 		mov [edi], ax
  1137 00000C31 81EF02000000        <1> 		sub edi, 2
  1138 00000C37 668907              <1> 		mov [edi], ax
  1139 00000C3A EBA0                <1> 		jmp donecrnl
  1140                              <1> 	int301backline:
  1141 00000C3C 88CA                <1> 		mov dl, cl
  1142 00000C3E 80FE00              <1> 		cmp dh, 0
  1143 00000C41 74E4                <1> 		je int301nobmr
  1144 00000C43 FECE                <1> 		dec dh
  1145 00000C45 EBE0                <1> 		jmp int301nobmr
  1146                              <1> 		
  1147                              <1> 	int301nl:
  1148 00000C47 FEC6                <1> 		inc dh
  1149 00000C49 BB00000000          <1> 		mov ebx, 0
  1150 00000C4E 88CB                <1> 		mov bl, cl
  1151 00000C50 BF[EC560000]        <1> 		mov edi, videobuf2
  1152 00000C55 66031D[580B0000]    <1> 		add bx, [videobufpos]
  1153 00000C5C 01DF                <1> 		add edi, ebx
  1154 00000C5E BB00000000          <1> 		mov ebx, 0
  1155 00000C63 88CB                <1> 		mov bl, cl
  1156 00000C65 66031D[560B0000]    <1> 		add bx, [linebeginpos]
  1157 00000C6C 66891D[560B0000]    <1> 		mov [linebeginpos], bx
  1158 00000C73 E964FFFFFF          <1> 		jmp donecrnl
  1159                              <1> 		
  1160                              <1> 	int301eol:
  1161 00000C78 B200                <1> 		mov dl, 0
  1162 00000C7A FEC6                <1> 		inc dh
  1163 00000C7C BB00000000          <1> 		mov ebx, 0
  1164 00000C81 88CB                <1> 		mov bl, cl
  1165 00000C83 66031D[560B0000]    <1> 		add bx, [linebeginpos]
  1166 00000C8A 66891D[560B0000]    <1> 		mov [linebeginpos], bx
  1167 00000C91 E94EFFFFFF          <1> 		jmp doneeol
  1168                              <1> 		
  1169                              <1> 	int301scr:
  1170 00000C96 FECE                <1> 		dec dh
  1171 00000C98 BF[EC560000]        <1> 		mov edi, videobuf2
  1172 00000C9D BB00000000          <1> 		mov ebx, 0
  1173 00000CA2 88CB                <1> 		mov bl, cl
  1174 00000CA4 01FB                <1> 		add ebx, edi
  1175                              <1> 	intscrollloop:
  1176 00000CA6 668B03              <1> 		mov ax, [ebx]
  1177 00000CA9 668907              <1> 		mov [edi], ax
  1178 00000CAC 81C702000000        <1> 		add edi, 2
  1179 00000CB2 81C302000000        <1> 		add ebx, 2
  1180 00000CB8 80E902              <1> 		sub cl, 2
  1181 00000CBB 80F900              <1> 		cmp cl, 0
  1182 00000CBE 75E6                <1> 		jne intscrollloop
  1183 00000CC0 8A0D[5C0B0000]      <1> 		mov cl, [charxy]
  1184 00000CC6 FECD                <1> 		dec ch
  1185 00000CC8 80FD01              <1> 		cmp ch, 1
  1186 00000CCB 77D9                <1> 		ja intscrollloop
  1187 00000CCD 66B80000            <1> 		mov ax, 0
  1188 00000CD1 81EF[EC560000]      <1> 		sub edi, videobuf2
  1189 00000CD7 66893D[560B0000]    <1> 		mov [linebeginpos], di
  1190 00000CDE 81C7[EC560000]      <1> 		add edi, videobuf2
  1191 00000CE4 89FB                <1> 		mov ebx, edi
  1192                              <1> 	intloopclear:
  1193 00000CE6 668903              <1> 		mov [ebx], ax
  1194 00000CE9 81C302000000        <1> 		add ebx, 2
  1195 00000CEF 80E902              <1> 		sub cl, 2
  1196 00000CF2 80F900              <1> 		cmp cl, 0
  1197 00000CF5 75EF                <1> 		jne intloopclear
  1198 00000CF7 FECD                <1> 		dec ch
  1199 00000CF9 80FD00              <1> 		cmp ch, 0
  1200 00000CFC 75E8                <1> 		jne intloopclear
  1201 00000CFE 668B0D[5C0B0000]    <1> 		mov cx, [charxy]
  1202 00000D05 E9E2FEFFFF          <1> 		jmp donescr
  1203                              <1> 		
  1204                              <1> 		
  1205 00000D0A 0000                <1> lastkey db 0,0
  1206 00000D0C 00                  <1> trans db 0
  1207                              <1> 
  1208                              <1> 	int302:		;;get char, if al is 0, wait for key
  1209 00000D0D A2[0C0D0000]        <1> 		mov [trans], al
  1210                              <1> 	transcheck:
  1211 00000D12 E86D160000          <1> 		call guistartin
  1212 00000D17 8A3D[0C0D0000]      <1> 		mov bh, [trans]
  1213 00000D1D 66A1[0A0D0000]      <1> 		mov ax, [lastkey]
  1214 00000D23 80FC1C              <1> 		cmp ah, 1Ch
  1215 00000D26 740C                <1> 		je int302enter
  1216 00000D28 08C7                <1> 		or bh, al
  1217 00000D2A 80FF00              <1> 		cmp bh, 0
  1218 00000D2D 74E3                <1> 		je transcheck
  1219 00000D2F E907000000          <1> 		jmp int302end
  1220                              <1> 	int302enter:
  1221 00000D34 B00D                <1> 		mov al, 13
  1222 00000D36 E900000000          <1> 		jmp int302end
  1223                              <1> 	int302end:
  1224 00000D3B C3                  <1> 		ret
  1225                              <1> 	
  1226 00000D3C 00                  <1> endkey303 db 0
  1227                              <1>     print:
  1228 00000D3D 66B80000            <1> 		mov ax, 0
  1229 00000D41 66BB0700            <1> 		mov bx, 7
  1230                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  1231 00000D45 A2[3C0D0000]        <1> 		mov [endkey303], al
  1232                              <1> 	int303b:
  1233 00000D4A 8A06                <1> 		mov al, [esi]
  1234 00000D4C 3A05[3C0D0000]      <1> 		cmp al, [endkey303]
  1235 00000D52 7408                <1> 		je doneint303
  1236 00000D54 E82CFEFFFF          <1> 		call int301prnt
  1237 00000D59 46                  <1> 		inc esi
  1238 00000D5A EBEE                <1> 		jmp int303b
  1239                              <1> 	doneint303:
  1240 00000D5C 60                  <1> 		pusha
  1241 00000D5D C605[1D290000]00    <1> 		mov byte [mouseselecton], 0
  1242 00000D64 C605[840B0000]01    <1> 		mov byte [termcopyon], 1
  1243 00000D6B 803D[830B0000]01    <1> 		cmp byte [termguion], 1
  1244 00000D72 0F847D270000        <1> 		je near windowvideocopy
  1245 00000D78 61                  <1> 		popa
  1246 00000D79 C3                  <1> 		ret
  1247                              <1> 	
  1248 00000D7A 00                  <1> endkey304 db 0
  1249                              <1> 	int304:	;;get line, al=last key, esi = buffer
  1250 00000D7B A2[7A0D0000]        <1> 		mov [endkey304], al
  1251                              <1> 	int304b:
  1252 00000D80 56                  <1> 		push esi
  1253 00000D81 B000                <1> 		mov al, 0
  1254 00000D83 E885FFFFFF          <1> 		call int302
  1255 00000D88 5E                  <1> 		pop esi
  1256 00000D89 8806                <1> 		mov [esi], al
  1257 00000D8B 46                  <1> 		inc esi
  1258 00000D8C 3A05[7A0D0000]      <1> 		cmp al, [endkey304]
  1259 00000D92 75EC                <1> 		jne int304b
  1260 00000D94 4E                  <1> 		dec esi
  1261 00000D95 C60600              <1> 		mov byte [esi], 0
  1262 00000D98 C3                  <1> 	ret
  1263                              <1> 	
  1264 00000D99 00                  <1> endkey305 db 0
  1265 00000D9A 00                  <1> modkey305 db 0
  1266 00000D9B 00000000            <1> firstesi305 dd 0
  1267                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
  1268 00000D9F A2[990D0000]        <1> 		mov [endkey305], al
  1269 00000DA4 881D[9A0D0000]      <1> 		mov [modkey305], bl
  1270 00000DAA 8935[9B0D0000]      <1> 		mov [firstesi305], esi
  1271                              <1> 	int305b:
  1272 00000DB0 56                  <1> 		push esi
  1273 00000DB1 B000                <1> 		mov al, 0
  1274 00000DB3 E855FFFFFF          <1> 		call int302
  1275 00000DB8 5E                  <1> 		pop esi
  1276 00000DB9 3C08                <1> 		cmp al, 8
  1277 00000DBB 0F841D000000        <1> 		je near int305bscheck
  1278 00000DC1 8806                <1> 		mov [esi], al
  1279 00000DC3 46                  <1> 		inc esi
  1280                              <1> 	bscheckequal:
  1281 00000DC4 8A1D[9A0D0000]      <1> 		mov bl, [modkey305]
  1282 00000DCA E891FDFFFF          <1> 		call int301
  1283 00000DCF 8A25[990D0000]      <1> 		mov ah, [endkey305]
  1284 00000DD5 38E0                <1> 		cmp al, ah
  1285 00000DD7 75D7                <1> 		jne int305b
  1286 00000DD9 4E                  <1> 		dec esi
  1287 00000DDA C60600              <1> 		mov byte [esi], 0
  1288 00000DDD C3                  <1> 		ret
  1289                              <1> 	
  1290                              <1> 	int305bscheck:
  1291 00000DDE 3B35[9B0D0000]      <1> 		cmp esi, [firstesi305]
  1292 00000DE4 7702                <1> 		ja goodbscheck
  1293 00000DE6 EBC8                <1> 		jmp int305b
  1294                              <1> 	goodbscheck:
  1295 00000DE8 4E                  <1> 		dec esi
  1296 00000DE9 C60600              <1> 		mov byte [esi], 0
  1297 00000DEC EBD6                <1> 		jmp bscheckequal
  1298                              <1> 		
  1299                              <1> 	clear:		
  1300                              <1> 	
  1301                              <1> 	int306:	;;clear screen
  1302 00000DEE 668B0D[5C0B0000]    <1> 		mov cx, [charxy]
  1303 00000DF5 BF[EC560000]        <1> 		mov edi, videobuf2
  1304 00000DFA 66B80000            <1> 		mov ax, 0
  1305 00000DFE 66A3[560B0000]      <1> 		mov [linebeginpos], ax
  1306 00000E04 66A3[580B0000]      <1> 		mov [videobufpos], ax
  1307 00000E0A 66BA0000            <1> 		mov dx, 0
  1308 00000E0E 66A3[5A0B0000]      <1> 		mov [charpos], ax
  1309                              <1> 	int306b:
  1310 00000E14 668907              <1> 		mov [edi], ax
  1311 00000E17 81C702000000        <1> 		add edi, 2
  1312 00000E1D 80E902              <1> 		sub cl, 2
  1313 00000E20 80F900              <1> 		cmp cl, 0
  1314 00000E23 75EF                <1> 		jne int306b
  1315 00000E25 8A0D[5C0B0000]      <1> 		mov cl, [charxy]
  1316 00000E2B FECD                <1> 		dec ch
  1317 00000E2D 80FD00              <1> 		cmp ch, 0
  1318 00000E30 75E2                <1> 		jne int306b
  1319 00000E32 C3                  <1> 		ret
  1320                                      %include 'source/solleros.asm'
  1321                              <1> 	;SOLLEROS.ASM
  1322                              <1> os:
  1323 00000E33 B403                <1> 	mov ah, 3
  1324 00000E35 CD30                <1> 	int 30h
  1325 00000E37 BE[54400000]        <1> 	mov esi, pwdask
  1326 00000E3C E8FCFEFFFF          <1> 	call print
  1327                              <1> 
  1328                              <1> passcheck:
  1329 00000E41 BE[D7540000]        <1> 	mov esi, buftxt
  1330 00000E46 B00D                <1> 	mov al, 13
  1331 00000E48 B307                <1> 	mov bl, 7
  1332                              <1> 
  1333 00000E4A 66B90002            <1> 	mov cx, 200h
  1334 00000E4E B402                <1> 	mov ah, 2
  1335 00000E50 CD30                <1> 	int 30h
  1336 00000E52 E91A000000          <1> 	jmp passenter
  1337 00000E57 E892FFFFFF          <1> pwdrgt:	call clear
  1338 00000E5C 66B90002            <1> 	mov cx, 200h
  1339 00000E60 BE[D7540000]        <1> 	mov esi, buftxt
  1340 00000E65 B000                <1> 	mov al, 0
  1341 00000E67 8806                <1> bufclr:	mov [esi], al
  1342 00000E69 46                  <1> 	inc esi
  1343 00000E6A E2FB                <1> 	loop bufclr
  1344 00000E6C E948000000          <1> 	jmp nwcmd
  1345                              <1> 
  1346                              <1> passenter:
  1347 00000E71 B000                <1> 	mov al,0
  1348 00000E73 8806                <1> 	mov [esi], al
  1349 00000E75 BE[85400000]        <1> 	mov esi, line
  1350 00000E7A E8BEFEFFFF          <1> 	call print
  1351 00000E7F BE[D7540000]        <1> 	mov esi, buftxt
  1352 00000E84 BB[64400000]        <1> 	mov ebx, pwd
  1353 00000E89 E8F6000000          <1> 	call tester
  1354 00000E8E 3C01                <1> 	cmp al, 1
  1355 00000E90 74C5                <1> 	je pwdrgt
  1356 00000E92 EB9F                <1> 	jmp os
  1357 00000E94 EBDB                <1> fullpass: jmp passenter
  1358                              <1> 
  1359                              <1> buftxtclear:
  1360 00000E96 B000                <1> 	mov al, 0
  1361 00000E98 BE[D7540000]        <1> 	mov esi, buftxt
  1362 00000E9D 81FE[D7560000]      <1> clearbuftxt: cmp esi, buf2
  1363 00000EA3 730E                <1> 	jae retbufclr
  1364 00000EA5 8806                <1> 	mov [esi], al
  1365 00000EA7 46                  <1> 	inc esi
  1366 00000EA8 EBF3                <1> 	jmp clearbuftxt
  1367                              <1> 
  1368 00000EAA 39DE                <1> clearitbuf: cmp esi, ebx
  1369 00000EAC 7305                <1> 	jae retbufclr
  1370 00000EAE 8806                <1> 	mov [esi], al
  1371 00000EB0 46                  <1> 	inc esi
  1372 00000EB1 EBF7                <1> 	jmp clearitbuf
  1373 00000EB3 C3                  <1> retbufclr: ret
  1374                              <1> 
  1375 00000EB4 E900000000          <1> full:	jmp nwcmd
  1376                              <1> 
  1377                              <1> 
  1378 00000EB9 B001                <1> nwcmd:	mov al, 1
  1379 00000EBB 3805[D04D0000]      <1> 	cmp [BATCHISON], al
  1380 00000EC1 0F832D000000        <1> 	jae near batchran
  1381 00000EC7 B000                <1> cancel:	mov al, 0
  1382 00000EC9 A2[674D0000]        <1> 	mov [IFON], al
  1383 00000ECE A2[D04D0000]        <1> 	mov [BATCHISON], al
  1384 00000ED3 BE[6D400000]        <1> 	mov esi, cmd
  1385 00000ED8 E860FEFFFF          <1> 	call print
  1386 00000EDD E8B4FFFFFF          <1> 	call buftxtclear
  1387 00000EE2 BE[D7540000]        <1> 	mov esi, buftxt
  1388 00000EE7 B00D                <1> 	mov al, 13
  1389 00000EE9 B307                <1> 	mov bl, 7
  1390 00000EEB B404                <1> 	mov ah, 4
  1391 00000EED CD30                <1> 	int 30h
  1392                              <1> gotcmd:	
  1393 00000EEF E914000000          <1> 	jmp run
  1394                              <1> 	
  1395                              <1> batchran:
  1396 00000EF4 C3                  <1> 	ret
  1397                              <1> 
  1398 00000EF5 E89CFFFFFF          <1> input:	call buftxtclear
  1399 00000EFA BE[D7540000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1400 00000EFF B00D                <1> stdin:	mov al, 13
  1401 00000F01 B307                <1> 	mov bl, 7
  1402 00000F03 B404                <1> 	mov ah, 4
  1403 00000F05 CD30                <1> 	int 30h
  1404 00000F07 C3                  <1> 	ret
  1405                              <1> 
  1406 00000F08 BE[85400000]        <1> run:	mov esi, line
  1407 00000F0D E82BFEFFFF          <1> 		call print
  1408                              <1> progtest:
  1409 00000F12 BE[D7540000]        <1> 	mov esi, buftxt
  1410 00000F17 BB[D64D0000]        <1> 	mov ebx, fileindex
  1411 00000F1C 668B03              <1> prgnxt:	mov ax, [ebx]
  1412 00000F1F B105                <1> 	mov cl, 5
  1413 00000F21 B504                <1> 	mov ch, 4
  1414 00000F23 6639C8              <1> 	cmp ax, cx
  1415 00000F26 740B                <1> 	je fndprg
  1416 00000F28 43                  <1> 	inc ebx
  1417 00000F29 81FB[D64F0000]      <1> 	cmp ebx, fileindexend
  1418 00000F2F 7330                <1> 	jae prgnf
  1419 00000F31 EBE9                <1> 	jmp prgnxt
  1420 00000F33 81C302000000        <1> fndprg: add ebx, 2
  1421 00000F39 BE[D7540000]        <1> 	mov esi, buftxt
  1422 00000F3E 66B90000            <1> 	mov cx, 0
  1423 00000F42 E877000000          <1> 	call cndtest
  1424 00000F47 3C01                <1> 	cmp al, 1
  1425 00000F49 7302                <1> 	jae prggood
  1426 00000F4B EBCF                <1> 	jmp prgnxt
  1427 00000F4D 81FB[D64F0000]      <1> prggood: cmp ebx, fileindexend
  1428 00000F53 732A                <1> 	jae prgdn
  1429 00000F55 81C303000000        <1> 	add ebx, 3
  1430 00000F5B 8B3B                <1> 	mov edi, [ebx]
  1431 00000F5D 90                  <1> 	nop
  1432 00000F5E 90                  <1> 	nop
  1433 00000F5F FFE7                <1> 	jmp edi
  1434 00000F61 BE[3B400000]        <1> prgnf:	mov esi, notfound1
  1435 00000F66 E8D2FDFFFF          <1> 	call print
  1436 00000F6B BE[D7540000]        <1> 	mov esi, buftxt
  1437 00000F70 E8C8FDFFFF          <1> 	call print
  1438 00000F75 BE[45400000]        <1> 	mov esi, notfound2
  1439 00000F7A E8BEFDFFFF          <1> 	call print
  1440 00000F7F E935FFFFFF          <1> prgdn:	jmp nwcmd
  1441                              <1> 
  1442                              <1> 
  1443                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1444 00000F84 B000                <1> 	mov al, 0
  1445 00000F86 8A06                <1> retest:	mov al, [esi]
  1446 00000F88 8A23                <1> 	mov ah, [ebx]
  1447 00000F8A 3C00                <1> 	cmp al, 0
  1448 00000F8C 7408                <1> 	je testtrue
  1449 00000F8E 38E0                <1> 	cmp al, ah
  1450 00000F90 750C                <1> 	jne testfalse
  1451 00000F92 43                  <1> 	inc ebx
  1452 00000F93 46                  <1> 	inc esi
  1453 00000F94 EBF0                <1> 	jmp retest
  1454                              <1> testtrue:
  1455 00000F96 80FC00              <1> 	cmp ah, 0
  1456 00000F99 7503                <1> 	jne testfalse
  1457 00000F9B B001                <1> 	mov al, 1
  1458 00000F9D C3                  <1> 	ret
  1459                              <1> testfalse:
  1460 00000F9E B000                <1> 	mov al, 0
  1461 00000FA0 C3                  <1> 	ret
  1462                              <1> 
  1463                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1464 00000FA1 B000                <1> 	mov al, 0
  1465                              <1> opretest:
  1466 00000FA3 8A06                <1> 	mov al, [esi]
  1467 00000FA5 8A23                <1> 	mov ah, [ebx]
  1468 00000FA7 38E0                <1> 	cmp al, ah
  1469 00000FA9 7510                <1> 	jne optestfalse
  1470 00000FAB 80FC00              <1> 	cmp ah, 0
  1471 00000FAE 7404                <1> 	je optesttrue
  1472 00000FB0 43                  <1> 	inc ebx
  1473 00000FB1 46                  <1> 	inc esi
  1474 00000FB2 EBEF                <1> 	jmp opretest
  1475                              <1> optesttrue:
  1476 00000FB4 3C00                <1> 	cmp al, 0
  1477 00000FB6 7503                <1> 	jne optestfalse
  1478 00000FB8 B001                <1> 	mov al, 1
  1479 00000FBA C3                  <1> 	ret
  1480                              <1> optestfalse:
  1481 00000FBB B000                <1> 	mov al, 0
  1482 00000FBD C3                  <1> 	ret
  1483                              <1> 
  1484                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1485 00000FBE B000                <1> 	mov al, 0
  1486 00000FC0 8A06                <1> cndretest:	mov al, [esi]
  1487 00000FC2 8A23                <1> 	mov ah, [ebx]
  1488 00000FC4 38CC                <1> 	cmp ah, cl
  1489 00000FC6 7408                <1> 	je cndtesttrue
  1490 00000FC8 38E0                <1> 	cmp al, ah
  1491 00000FCA 750B                <1> 	jne cndtestfalse
  1492 00000FCC 43                  <1> 	inc ebx
  1493 00000FCD 46                  <1> 	inc esi
  1494 00000FCE EBF0                <1> 	jmp cndretest
  1495                              <1> cndtesttrue:
  1496 00000FD0 38C8                <1> 	cmp al, cl
  1497 00000FD2 7506                <1> 	jne cndtestalmost
  1498 00000FD4 B001                <1> 	mov al, 1
  1499 00000FD6 C3                  <1> 	ret
  1500                              <1> cndtestfalse:
  1501 00000FD7 B000                <1> 	mov al, 0
  1502 00000FD9 C3                  <1> 	ret
  1503                              <1> cndtestalmost:
  1504 00000FDA B002                <1> 	mov al, 2
  1505 00000FDC C3                  <1> 	ret
  1506 00000FDD 00                  <1> currentdir db 0
  1507 00000FDE BE[D64D0000]        <1> dir:	mov esi, fileindex
  1508 00000FE3 8A06                <1> 	dirnxt:	mov al, [esi]
  1509 00000FE5 B400                <1> 		mov ah, 0
  1510 00000FE7 3C05                <1> 		cmp al, 5
  1511 00000FE9 744A                <1> 		je dirfnd
  1512 00000FEB 3C07                <1> 		cmp al, 7
  1513 00000FED 743C                <1> 		je dirfnd3
  1514 00000FEF 3C06                <1> 		cmp al, 6
  1515 00000FF1 7438                <1> 		je dirfnd3
  1516 00000FF3 46                  <1> 		inc esi
  1517 00000FF4 81FE[D64F0000]      <1> 		cmp esi,  fileindexend
  1518 00000FFA 737B                <1> 		jae dirdn
  1519 00000FFC EBE5                <1> 		jmp dirnxt
  1520 00000FFE 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1521 00001007 070400646F63756D65- <1>
  1522 00001010 6E74000A0400666F6C- <1>
  1523 00001019 646572000504006578- <1>
  1524 00001022 6563757461626C6500  <1>
  1525                              <1> 	dirfnd3:
  1526 0000102B 46                  <1> 		inc esi
  1527 0000102C 81FE[D64F0000]      <1> 		cmp esi, fileindexend
  1528 00001032 76AF                <1> 		jbe dirnxt
  1529 00001034 4E                  <1> 		dec esi
  1530 00001035 46                  <1> 	dirfnd:	inc esi
  1531 00001036 8A06                <1> 		mov al, [esi]
  1532 00001038 B400                <1> 		mov ah, 0
  1533 0000103A 3C04                <1> 		cmp al, 4
  1534 0000103C 740B                <1> 		je dirfnd2
  1535 0000103E 46                  <1> 		inc esi
  1536 0000103F 81FE[D64F0000]      <1> 		cmp esi,  fileindexend
  1537 00001045 7330                <1> 		jae dirdn
  1538 00001047 EB9A                <1> 		jmp dirnxt
  1539 00001049 81C601000000        <1> 	dirfnd2: add esi, 1
  1540 0000104F E8E9FCFFFF          <1> 		call print
  1541 00001054 8935[7C100000]      <1> 		mov [esidir], esi
  1542 0000105A BE[85400000]        <1> 		mov esi, line
  1543 0000105F E8D9FCFFFF          <1> 		call print
  1544 00001064 8B35[7C100000]      <1> 		mov esi, [esidir]
  1545 0000106A 81FE[D64F0000]      <1> 		cmp esi,  fileindexend
  1546 00001070 7305                <1> 		jae dirdn
  1547 00001072 E96CFFFFFF          <1> 		jmp dirnxt
  1548 00001077 E93DFEFFFF          <1> 	dirdn:	jmp nwcmd
  1549 0000107C 00000000            <1> esidir dd 0
  1550                              <1> 
  1551                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1552                              <1> 		                ;ends if array seperator is found backwards after 0
  1553                              <1> 	arnxt:	      
  1554 00001080 88E8                <1> 		mov al, ch
  1555 00001082 88CC                <1> 		mov ah, cl        
  1556 00001084 663906              <1> 		cmp [esi], ax
  1557 00001087 744D                <1> 		je ardn
  1558 00001089 66390E              <1> 		cmp [esi], cx
  1559 0000108C 7407                <1> 		je arfnd
  1560 0000108E 46                  <1> 		inc esi
  1561 0000108F 39DE                <1> 		cmp esi, ebx
  1562 00001091 7343                <1> 		jae ardn
  1563 00001093 EBEB                <1> 		jmp arnxt
  1564 00001095 81C602000000        <1> 	arfnd: add esi, 2
  1565 0000109B 891D[D7100000]      <1> 		mov [arbx], ebx
  1566 000010A1 890D[DB100000]      <1> 		mov [arcx], ecx
  1567 000010A7 E891FCFFFF          <1> 		call print
  1568 000010AC 8935[DD100000]      <1> 		mov [arsi], esi
  1569 000010B2 BE[85400000]        <1> 		mov esi, line
  1570 000010B7 E881FCFFFF          <1> 		call print
  1571 000010BC 8B1D[D7100000]      <1> 		mov ebx, [arbx]
  1572 000010C2 668B0D[DB100000]    <1> 		mov cx, [arcx]
  1573 000010C9 8B35[DD100000]      <1> 		mov esi, [arsi]
  1574 000010CF 46                  <1> 		inc esi
  1575 000010D0 39DE                <1> 		cmp esi, ebx
  1576 000010D2 7302                <1> 		jae ardn
  1577 000010D4 EBAA                <1> 		jmp arnxt
  1578 000010D6 C3                  <1> 	ardn:	ret
  1579 000010D7 00000000            <1> arbx:	dw 0,0
  1580 000010DB 0000                <1> arcx:	db 0,0
  1581 000010DD 00000000            <1> arsi:	dw 0,0
  1582                              <1> 
  1583                              <1> clearbuffer:
  1584 000010E1 BE[D7560000]        <1> 	mov esi, buf2
  1585 000010E6 B030                <1> 	mov al, '0'
  1586 000010E8 81FE[EB560000]      <1> clearbuf: cmp esi, numbuf
  1587 000010EE 7305                <1> 	jae doneclearbuff
  1588 000010F0 8806                <1> 	mov [esi], al
  1589 000010F2 46                  <1> 	inc esi
  1590 000010F3 EBF3                <1> 	jmp clearbuf
  1591                              <1> doneclearbuff: 
  1592 000010F5 C3                  <1> 		ret
  1593                              <1> 
  1594                              <1> convert:
  1595 000010F6 4E                  <1> 	dec esi
  1596 000010F7 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  1597                              <1> cnvrt:
  1598 000010F9 89DE                <1> 	mov esi, ebx
  1599 000010FB 81EE09000000        <1> 	sub esi, 9
  1600 00001101 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  1601 00001107 720A                <1> 	jb ten8
  1602 00001109 81E900CA9A3B        <1> 	sub ecx, 1000000000
  1603 0000110F FE06                <1> 	inc byte [esi]
  1604 00001111 EBE6                <1> 	jmp cnvrt
  1605 00001113 46                  <1> ten8:	inc esi
  1606 00001114 81F900E1F505        <1> 	cmp ecx, 100000000
  1607 0000111A 720A                <1> 	jb ten7
  1608 0000111C 81E900E1F505        <1> 	sub ecx, 100000000
  1609 00001122 FE06                <1> 	inc byte [esi]
  1610 00001124 EBD3                <1> 	jmp cnvrt
  1611 00001126 46                  <1> ten7:	inc esi
  1612 00001127 81F980969800        <1> 	cmp ecx, 10000000
  1613 0000112D 720A                <1> 	jb ten6
  1614 0000112F 81E980969800        <1> 	sub ecx, 10000000
  1615 00001135 FE06                <1> 	inc byte [esi]
  1616 00001137 EBC0                <1> 	jmp cnvrt
  1617 00001139 46                  <1> ten6:	inc esi
  1618 0000113A 81F940420F00        <1> 	cmp ecx, 1000000
  1619 00001140 720A                <1> 	jb ten5
  1620 00001142 81E940420F00        <1> 	sub ecx, 1000000
  1621 00001148 FE06                <1> 	inc byte [esi]
  1622 0000114A EBAD                <1> 	jmp cnvrt
  1623 0000114C 46                  <1> ten5:	inc esi
  1624 0000114D 81F9A0860100        <1> 	cmp ecx, 100000
  1625 00001153 720A                <1> 	jb ten4
  1626 00001155 81E9A0860100        <1> 	sub ecx, 100000
  1627 0000115B FE06                <1> 	inc byte [esi]
  1628 0000115D EB9A                <1> 	jmp cnvrt
  1629 0000115F 46                  <1> ten4:	inc esi
  1630 00001160 81F910270000        <1> 	cmp ecx, 10000
  1631 00001166 720A                <1> 	jb ten3
  1632 00001168 81E910270000        <1> 	sub ecx, 10000
  1633 0000116E FE06                <1> 	inc byte [esi]
  1634 00001170 EB87                <1> 	jmp cnvrt
  1635 00001172 46                  <1> ten3:	inc esi
  1636 00001173 81F9E8030000        <1> 	cmp ecx, 1000
  1637 00001179 720D                <1> 	jb ten2
  1638 0000117B 81E9E8030000        <1> 	sub ecx, 1000
  1639 00001181 FE06                <1> 	inc byte [esi]
  1640 00001183 E971FFFFFF          <1> 	jmp cnvrt
  1641 00001188 46                  <1> ten2:	inc esi
  1642 00001189 81F964000000        <1> 	cmp ecx, 100
  1643 0000118F 720D                <1> 	jb ten1
  1644 00001191 81E964000000        <1> 	sub ecx, 100
  1645 00001197 FE06                <1> 	inc byte [esi]
  1646 00001199 E95BFFFFFF          <1> 	jmp cnvrt
  1647 0000119E 46                  <1> ten1:	inc esi
  1648 0000119F 81F90A000000        <1> 	cmp ecx, 10
  1649 000011A5 720D                <1> 	jb ten0
  1650 000011A7 81E90A000000        <1> 	sub ecx, 10
  1651 000011AD FE06                <1> 	inc byte [esi]
  1652 000011AF E945FFFFFF          <1> 	jmp cnvrt
  1653 000011B4 46                  <1> ten0:	inc esi
  1654 000011B5 81F901000000        <1> 	cmp ecx, 1
  1655 000011BB 720D                <1> 	jb tendn
  1656 000011BD 81E901000000        <1> 	sub ecx, 1
  1657 000011C3 FE06                <1> 	inc byte [esi]
  1658 000011C5 E92FFFFFFF          <1> 	jmp cnvrt
  1659                              <1> tendn:
  1660 000011CA C3                  <1> 	ret
  1661                              <1> 
  1662                              <1> 	
  1663                              <1> 
  1664 000011CB 00<rept>            <1> hexnumber times 8 db 0
  1665 000011D3 202000              <1> hexnumberend db "  ",0
  1666                              <1> 
  1667                              <1> 
  1668 000011D6 00000000            <1> sibuf dw 0,0
  1669 000011DA 00000000            <1> dibuf dw 0,0
  1670                              <1> 
  1671                              <1> converthex:
  1672                              <1> clearbufferhex:
  1673 000011DE B030                <1> 	mov al, '0'
  1674 000011E0 8935[D6110000]      <1> 	mov [sibuf], esi
  1675 000011E6 893D[DA110000]      <1> 	mov [dibuf], edi
  1676 000011EC 39FE                <1> clearbufhex: cmp esi, edi
  1677 000011EE 7305                <1> 	jae doneclearbuffhex
  1678 000011F0 8806                <1> 	mov [esi], al
  1679 000011F2 46                  <1> 	inc esi
  1680 000011F3 EBF7                <1> 	jmp clearbufhex
  1681                              <1> doneclearbuffhex:
  1682 000011F5 8B35[DA110000]      <1> 	mov esi, [dibuf]
  1683 000011FB 89CA                <1> 	mov edx, ecx
  1684 000011FD 81FA00000000        <1> 	cmp edx, 0
  1685 00001203 741F                <1> 	je donenxtephx
  1686                              <1> nxtexphx:	;0x10^x
  1687 00001205 4E                  <1> 	dec esi
  1688 00001206 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  1689 00001208 89D1                <1> 	mov ecx, edx
  1690 0000120A 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  1691 00001210 E81C000000          <1> 	call cnvrtexphx		;;get this digit
  1692 00001215 89FE                <1> 	mov esi, edi
  1693 00001217 C1EA04              <1> 	shr edx, 4		;;next digit
  1694 0000121A 81FA00000000        <1> 	cmp edx, 0
  1695 00001220 7402                <1> 	je donenxtephx
  1696 00001222 EBE1                <1> 	jmp nxtexphx
  1697                              <1> donenxtephx:
  1698 00001224 8B35[D6110000]      <1> 	mov esi, [sibuf]
  1699 0000122A 8B3D[DA110000]      <1> 	mov edi, [dibuf]
  1700 00001230 C3                  <1> 	ret
  1701                              <1> cnvrtexphx:			;;convert this number
  1702 00001231 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  1703 00001233 81F900000000        <1> 	cmp ecx, 0
  1704 00001239 7429                <1> 	je zerohx
  1705 0000123B 8A06                <1> cnvrthx:  mov al, [esi]
  1706 0000123D 3C39                <1> 	cmp al, '9'
  1707 0000123F 741B                <1> 	je lettershx
  1708 00001241 3C46                <1> lttrhxdn: cmp al, 'F'
  1709 00001243 741F                <1> 	je zerohx
  1710 00001245 8A06                <1> 	mov al, [esi]
  1711 00001247 FEC0                <1> 	inc al
  1712 00001249 8806                <1> 	mov [esi], al
  1713 0000124B 89DE                <1> 	mov esi, ebx
  1714 0000124D 81E901000000        <1> cnvrtlphx: sub ecx, 1
  1715 00001253 81F900000000        <1> 	cmp ecx, 0
  1716 00001259 75E0                <1> 	jne cnvrthx
  1717 0000125B C3                  <1> 	ret
  1718                              <1> lettershx:
  1719 0000125C B041                <1> 	mov al, 'A'
  1720 0000125E 2C01                <1> 	sub al, 1
  1721 00001260 8806                <1> 	mov [esi], al
  1722 00001262 EBDD                <1> 	jmp lttrhxdn
  1723 00001264 B030                <1> zerohx:	mov al, '0'
  1724 00001266 8806                <1> 	mov [esi], al
  1725 00001268 4E                  <1> 	dec esi
  1726 00001269 8A06                <1> 	mov al, [esi]
  1727 0000126B 3C46                <1> 	cmp al, 'F'
  1728 0000126D 74F5                <1> 	je zerohx
  1729 0000126F 41                  <1> 	inc ecx
  1730 00001270 EBDB                <1> 	jmp cnvrtlphx
  1731                              <1> 
  1732 00001272 01                  <1> firsthexshown db 1
  1733                              <1> showhex:
  1734 00001273 60                  <1> 	pusha
  1735 00001274 BE[CB110000]        <1> 	mov esi, hexnumber
  1736 00001279 BF[D3110000]        <1> 	mov edi, hexnumberend
  1737 0000127E E85BFFFFFF          <1> 	call converthex
  1738 00001283 803D[72120000]01    <1> 	cmp byte [firsthexshown], 1
  1739 0000128A 7504                <1> 	jne showthathex
  1740 0000128C 66BA0000            <1> 	mov dx, 0
  1741                              <1> showthathex:
  1742 00001290 803D[72120000]03    <1> 	cmp byte [firsthexshown], 3
  1743 00001297 750A                <1> 	jne nonewhexline
  1744 00001299 BE[85400000]        <1> 	mov esi, line
  1745 0000129E E89AFAFFFF          <1> 	call print
  1746                              <1> nonewhexline:
  1747 000012A3 803D[72120000]04    <1> 	cmp byte [firsthexshown], 4
  1748 000012AA 7527                <1> 	jne notabfixhex
  1749 000012AC B1A0                <1> 	mov cl, 160
  1750 000012AE 28D1                <1> 	sub cl, dl
  1751 000012B0 C0E905              <1> 	shr cl, 5
  1752 000012B3 C0E105              <1> 	shl cl, 5
  1753 000012B6 80F900              <1> 	cmp cl, 0
  1754 000012B9 750F                <1> 	jne nonewlinetabfixhex
  1755 000012BB BE[85400000]        <1> 	mov esi, line
  1756 000012C0 E878FAFFFF          <1> 	call print
  1757 000012C5 E909000000          <1> 	jmp notabfixhex
  1758                              <1> nonewlinetabfixhex:
  1759 000012CA 80C20F              <1> 	add dl, 15
  1760 000012CD C0EA04              <1> 	shr dl, 4
  1761 000012D0 C0E204              <1> 	shl dl, 4
  1762                              <1> notabfixhex:
  1763 000012D3 BE[CB110000]        <1> 	mov esi, hexnumber
  1764 000012D8 E860FAFFFF          <1> 	call print
  1765 000012DD 803D[72120000]02    <1> 	cmp byte [firsthexshown], 2
  1766 000012E4 750A                <1> 	jne hexshown
  1767 000012E6 BE[85400000]        <1> 	mov esi, line
  1768 000012EB E84DFAFFFF          <1> 	call print
  1769                              <1> hexshown:
  1770 000012F0 C605[72120000]00    <1> 	mov byte [firsthexshown], 0
  1771 000012F7 61                  <1> 	popa
  1772 000012F8 C3                  <1> 	ret
  1773                              <1> 
  1774                              <1> 
  1775 000012F9 303030303030303030- <1> decnumber db "00000000000000"
  1776 00001302 3030303030          <1>
  1777 00001307 2000                <1> decnumberend: db " ",0
  1778                              <1> 
  1779                              <1> showdec: ;;same as showhex, just uses decimal conversion
  1780 00001309 60                  <1> 	pusha
  1781 0000130A BF[F9120000]        <1> 	mov edi, decnumber
  1782 0000130F BE[07130000]        <1> 	mov esi, decnumberend
  1783                              <1> cleardecbuf:
  1784 00001314 C60730              <1> 	mov byte [edi], '0'
  1785 00001317 47                  <1> 	inc edi
  1786 00001318 39F7                <1> 	cmp edi, esi
  1787 0000131A 72F8                <1> 	jb cleardecbuf
  1788 0000131C BF[F9120000]        <1> 	mov edi, decnumber
  1789 00001321 E8D0FDFFFF          <1> 	call convert
  1790 00001326 803D[72120000]01    <1> 	cmp byte [firsthexshown], 1
  1791 0000132D 7504                <1> 	jne showthatdec
  1792 0000132F 66BA0000            <1> 	mov dx, 0
  1793                              <1> showthatdec:
  1794 00001333 803D[72120000]03    <1> 	cmp byte [firsthexshown], 3
  1795 0000133A 750A                <1> 	jne nonewdecline
  1796 0000133C BE[85400000]        <1> 	mov esi, line
  1797 00001341 E8F7F9FFFF          <1> 	call print
  1798                              <1> nonewdecline:
  1799 00001346 803D[72120000]04    <1> 	cmp byte [firsthexshown], 4
  1800 0000134D 7527                <1> 	jne notabfixdec
  1801 0000134F B1A0                <1> 	mov cl, 160
  1802 00001351 28D1                <1> 	sub cl, dl
  1803 00001353 C0E905              <1> 	shr cl, 5
  1804 00001356 C0E105              <1> 	shl cl, 5
  1805 00001359 80F900              <1> 	cmp cl, 0
  1806 0000135C 750F                <1> 	jne nonewlinetabfixdec
  1807 0000135E BE[85400000]        <1> 	mov esi, line
  1808 00001363 E8D5F9FFFF          <1> 	call print
  1809 00001368 E909000000          <1> 	jmp notabfixdec
  1810                              <1> nonewlinetabfixdec:
  1811 0000136D 80C20F              <1> 	add dl, 15
  1812 00001370 C0EA04              <1> 	shr dl, 4
  1813 00001373 C0E204              <1> 	shl dl, 4
  1814                              <1> notabfixdec:
  1815 00001376 BE[F9120000]        <1> 	mov esi, decnumber
  1816 0000137B 4E                  <1> 	dec esi
  1817                              <1> sifind:
  1818 0000137C 46                  <1> 	inc esi
  1819 0000137D 803E30              <1> 	cmp byte [esi], '0'
  1820 00001380 74FA                <1> 	je sifind
  1821 00001382 E8B6F9FFFF          <1> 	call print
  1822 00001387 803D[72120000]02    <1> 	cmp byte [firsthexshown], 2
  1823 0000138E 750A                <1> 	jne decshown
  1824 00001390 BE[85400000]        <1> 	mov esi, line
  1825 00001395 E8A3F9FFFF          <1> 	call print
  1826                              <1> decshown:
  1827 0000139A C605[72120000]00    <1> 	mov byte [firsthexshown], 0
  1828 000013A1 61                  <1> 	popa
  1829 000013A2 C3                  <1> 	ret
  1830                              <1> 	
  1831                              <1> cnvrttxt: 
  1832 000013A3 B900000000          <1> 	mov ecx, 0
  1833 000013A8 B800000000          <1> 	mov eax, 0
  1834 000013AD BA00000000          <1> 	mov edx, 0
  1835 000013B2 BB00000000          <1> 	mov ebx, 0
  1836 000013B7 4E                  <1> 	dec esi
  1837                              <1> cnvrtlptxt:
  1838 000013B8 46                  <1> 	inc esi
  1839 000013B9 8A06                <1> 	mov al, [esi]
  1840 000013BB 3C00                <1> 	cmp al, 0
  1841 000013BD 75F9                <1> 	jne cnvrtlptxt
  1842 000013BF 4E                  <1> 	dec esi
  1843 000013C0 8A06                <1> 	mov al, [esi]
  1844 000013C2 3C30                <1> 	cmp al, '0'
  1845 000013C4 7405                <1> 	je zerotest
  1846 000013C6 E908000000          <1> 	jmp txtlp
  1847 000013CB 81FE[D7540000]      <1> zerotest: cmp esi, buftxt
  1848 000013D1 745F                <1> 	je donecnvrt
  1849                              <1> txtlp:	
  1850 000013D3 B800000000          <1> 	mov eax, 0
  1851 000013D8 8A06                <1> 	mov al, [esi]
  1852 000013DA 3C3D                <1> 	cmp al, '='
  1853 000013DC 7454                <1> 	je donecnvrt
  1854 000013DE 3C30                <1> 	cmp al, 48
  1855 000013E0 7250                <1> 	jb donecnvrt
  1856 000013E2 3C23                <1> 	cmp al, '#'
  1857 000013E4 744C                <1> 	je donecnvrt
  1858 000013E6 81FE[D7540000]      <1> 	cmp esi, buftxt
  1859 000013EC 7244                <1> 	jb donecnvrt
  1860 000013EE 81F900000000        <1> 	cmp ecx, 0
  1861 000013F4 7708                <1> 	ja exp
  1862 000013F6 2C30                <1> noexp:	sub al, 48
  1863 000013F8 01C2                <1> 	add edx, eax
  1864 000013FA 4E                  <1> 	dec esi
  1865 000013FB 41                  <1> 	inc ecx
  1866 000013FC EBD5                <1> 	jmp txtlp
  1867 000013FE 81F900000000        <1> exp:	cmp ecx, 0
  1868 00001404 74F0                <1> 	je noexp
  1869 00001406 2C30                <1> 	sub al, 48
  1870 00001408 51                  <1> 	push ecx
  1871 00001409 89C3                <1> expmul:	mov ebx, eax
  1872 0000140B 01D8                <1> 	add eax, ebx
  1873 0000140D 01D8                <1> 	add eax, ebx
  1874 0000140F 01D8                <1> 	add eax, ebx
  1875 00001411 01D8                <1> 	add eax, ebx
  1876 00001413 01D8                <1> 	add eax, ebx
  1877 00001415 01D8                <1> 	add eax, ebx
  1878 00001417 01D8                <1> 	add eax, ebx
  1879 00001419 01D8                <1> 	add eax, ebx
  1880 0000141B 01D8                <1> 	add eax, ebx
  1881 0000141D 81E901000000        <1> 	sub ecx, 1
  1882 00001423 81F900000000        <1> 	cmp ecx, 0
  1883 00001429 77DE                <1> 	ja expmul
  1884 0000142B 01C2                <1> 	add edx, eax
  1885 0000142D 59                  <1> 	pop ecx
  1886 0000142E 4E                  <1> 	dec esi
  1887 0000142F 41                  <1> 	inc ecx
  1888 00001430 EBA1                <1> 	jmp txtlp
  1889 00001432 89D1                <1> donecnvrt: mov ecx, edx
  1890 00001434 C3                  <1> 	ret
  1891                                      %include 'source/programs.asm'
  1892 00001435 050406040704        <1> filetypes db 5,4,6,4,7,4
  1893                              <1> progstart:		;programs start here
  1894 0000143B 0504696E64657800    <1> db 5,4,"index",0
  1895 00001443 E805000000          <1> 	call indexfiles
  1896 00001448 E96CFAFFFF          <1> 	jmp nwcmd
  1897                              <1> indexfiles:
  1898 0000144D BE[3B140000]        <1> 	mov esi, progstart
  1899 00001452 BB[D64D0000]        <1> 	mov ebx, fileindex
  1900 00001457 BF[3B140000]        <1> 	mov edi, progstart
  1901 0000145C 81EF02000000        <1> 	sub edi, 2
  1902                              <1> indexloop:
  1903 00001462 668B0E              <1> 	mov cx, [esi]
  1904                              <1> 	indexloop2:
  1905 00001465 663B0F              <1> 		cmp cx, [edi]
  1906 00001468 7424                <1> 		je indexloop2done
  1907 0000146A 81EF02000000        <1> 		sub edi, 2
  1908 00001470 81FF[35140000]      <1> 		cmp edi, filetypes
  1909 00001476 73ED                <1> 		jae indexloop2
  1910 00001478 BF[3B140000]        <1> 	mov edi, progstart
  1911 0000147D 81EF02000000        <1> 	sub edi, 2
  1912 00001483 46                  <1> 	inc esi
  1913 00001484 81FE[07230000]      <1> 	cmp esi, batchprogend
  1914 0000148A 734E                <1> 	jae indexloopdone
  1915 0000148C EBD4                <1> 	jmp indexloop
  1916                              <1> indexloop2done:
  1917 0000148E 66890B              <1> 	mov [ebx], cx
  1918 00001491 81C302000000        <1> 	add ebx, 2
  1919 00001497 81C602000000        <1> 	add esi, 2
  1920                              <1> 	nameindex:
  1921 0000149D 8A0E                <1> 		mov cl, [esi]
  1922 0000149F 80F900              <1> 		cmp cl, 0
  1923 000014A2 7406                <1> 		je nameindexdone
  1924 000014A4 880B                <1> 		mov [ebx], cl
  1925 000014A6 46                  <1> 		inc esi
  1926 000014A7 43                  <1> 		inc ebx
  1927 000014A8 EBF3                <1> 		jmp nameindex
  1928                              <1> 	nameindexdone:
  1929 000014AA 43                  <1> 		inc ebx
  1930 000014AB 66C7030000          <1> 		mov word [ebx], 0
  1931 000014B0 81C302000000        <1> 		add ebx, 2
  1932 000014B6 46                  <1> 		inc esi
  1933 000014B7 8933                <1> 		mov [ebx], esi
  1934 000014B9 81C304000000        <1> 		add ebx, 4
  1935 000014BF 66C7030000          <1> 		mov word [ebx], 0
  1936 000014C4 81C302000000        <1> 		add ebx, 2
  1937 000014CA 81FB[D64F0000]      <1> 		cmp ebx, fileindexend
  1938 000014D0 7308                <1> 		jae indexloopdone
  1939 000014D2 81C601000000        <1> 		add esi, 1
  1940 000014D8 EB88                <1> 		jmp indexloop
  1941 000014DA C3                  <1> indexloopdone: 	ret
  1942                              <1> 
  1943 000014DB 0504696E7465726E65- <1> db 5,4,"internet",0
  1944 000014E4 7400                <1>
  1945                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  1946                              <1> 					;;^^used to^^, now tests int 30h functions		
  1947 000014E6 B403                <1> 		mov ah, 3
  1948 000014E8 CD30                <1> 		int 30h
  1949 000014EA B401                <1> 		mov ah, 1
  1950 000014EC BE[FE140000]        <1> 		mov esi, datmsg
  1951 000014F1 66BB0700            <1> 		mov bx, 7
  1952 000014F5 B000                <1> 		mov al, 0
  1953 000014F7 CD30                <1> 		int 30h
  1954                              <1> 	;jmp packettest
  1955 000014F9 E9BBF9FFFF          <1> 		jmp nwcmd
  1956 000014FE 496E7465726E657420- <1> datmsg: db "Internet has not been implemented yet.",10,13,0
  1957 00001507 686173206E6F742062- <1>
  1958 00001510 65656E20696D706C65- <1>
  1959 00001519 6D656E746564207965- <1>
  1960 00001522 742E0A0D00          <1>
  1961                              <1> 		
  1962 00001527 050470636900        <1> db 5,4,"pci",0
  1963                              <1> 	pcishow:
  1964 0000152D E817280000          <1> 	call pcidump
  1965 00001532 E982F9FFFF          <1> 	jmp nwcmd
  1966                              <1> 
  1967 00001537 050473686F77696E64- <1> db 5,4,"showindex",0
  1968 00001540 657800              <1>
  1969 00001543 BE[D64D0000]        <1> 	mov esi, fileindex
  1970 00001548 BB[D64F0000]        <1> 	mov ebx, fileindexend
  1971 0000154D B105                <1> 	mov cl, 5
  1972 0000154F B504                <1> 	mov ch, 4
  1973 00001551 E82AFBFFFF          <1> 	call array
  1974 00001556 BE[D64D0000]        <1> 	mov esi, fileindex
  1975 0000155B BB[D64F0000]        <1> 	mov ebx, fileindexend
  1976 00001560 B106                <1> 	mov cl, 6
  1977 00001562 B504                <1> 	mov ch, 4
  1978 00001564 E817FBFFFF          <1> 	call array
  1979 00001569 BE[D64D0000]        <1> 	mov esi, fileindex
  1980 0000156E BB[D64F0000]        <1> 	mov ebx, fileindexend
  1981 00001573 B107                <1> 	mov cl, 7
  1982 00001575 B504                <1> 	mov ch, 4
  1983 00001577 E804FBFFFF          <1> 	call array
  1984 0000157C E938F9FFFF          <1> 	jmp nwcmd
  1985                              <1> 	
  1986 00001581 050464697200        <1> db 5,4,"dir",0
  1987 00001587 E952FAFFFF          <1> 	dircmd:	jmp dir
  1988                              <1> 	
  1989 0000158C 05046C7300          <1> db 5,4,"ls",0
  1990 00001591 BE[3B140000]        <1> 	lscmd:	mov esi, progstart
  1991 00001596 BB[07230000]        <1> 		mov ebx, progend
  1992 0000159B E93EFAFFFF          <1> 		jmp dir
  1993                              <1> 
  1994 000015A0 05046469736B00      <1> db 5,4,"disk",0
  1995 000015A7 BE[746D0000]        <1> 		mov esi, diskfileindex
  1996                              <1> 	diskindexdir:
  1997 000015AC E88CF7FFFF          <1> 		call print
  1998 000015B1 8B4E05              <1> 		mov ecx, [esi + 5]
  1999 000015B4 C605[72120000]03    <1> 		mov byte [firsthexshown], 3
  2000 000015BB E849FDFFFF          <1> 		call showdec
  2001 000015C0 56                  <1> 		push esi
  2002 000015C1 BE[85400000]        <1> 		mov esi, line
  2003 000015C6 E872F7FFFF          <1> 		call print
  2004 000015CB 5E                  <1> 		pop esi
  2005 000015CC 81C609000000        <1> 		add esi, 9
  2006 000015D2 81FE[2B6E0000]      <1> 		cmp esi, enddiskfileindex
  2007 000015D8 72D2                <1> 		jb diskindexdir
  2008 000015DA E9DAF8FFFF          <1> 		jmp nwcmd
  2009                              <1> 		
  2010 000015DF 0504756E616D6500    <1> db 5,4,"uname",0
  2011 000015E7 BE[88400000]        <1> 	uname:	mov esi, unamemsg
  2012 000015EC E84CF7FFFF          <1> 		call print
  2013 000015F1 E9C3F8FFFF          <1> 		jmp nwcmd
  2014                              <1> 
  2015 000015F6 050468656C7000      <1> db 5,4,"help",0
  2016 000015FD BE[CF400000]        <1> 	help:	mov esi, helpmsg
  2017 00001602 E836F7FFFF          <1> 		call print
  2018 00001607 E9ADF8FFFF          <1> 		jmp nwcmd
  2019                              <1> 
  2020 0000160C 0504636C65617200    <1> db 5,4,"clear",0
  2021 00001614 E8D5F7FFFF          <1> 	cls:	call clear
  2022 00001619 E99BF8FFFF          <1> 		jmp nwcmd
  2023                              <1> 
  2024 0000161E 05046563686F00      <1> db 5,4,"echo",0
  2025 00001625 BE[D7540000]        <1> 	echo:	mov esi, buftxt
  2026 0000162A 81C605000000        <1> 		add esi, 5
  2027 00001630 8A06                <1> 		mov al, [esi]
  2028 00001632 3C24                <1> 		cmp al, '$'
  2029 00001634 7414                <1> 		je echovr
  2030 00001636 E802F7FFFF          <1> 		call print
  2031 0000163B BE[85400000]        <1> 		mov esi, line
  2032 00001640 E8F8F6FFFF          <1> 		call print
  2033 00001645 E96FF8FFFF          <1> 		jmp nwcmd
  2034 0000164A BB[D74F0000]        <1> 	echovr:	mov ebx, variables
  2035 0000164F BF06000000          <1> 		mov edi, 6
  2036 00001654 E83A000000          <1> 		call nxtvrech
  2037 00001659 E957000000          <1> 		jmp prntvr2
  2038 0000165E B13D                <1> 	echvar:	mov cl, '='
  2039 00001660 43                  <1> 		inc ebx
  2040 00001661 8A03                <1> 		mov al, [ebx]
  2041 00001663 3C00                <1> 		cmp al, 0
  2042 00001665 742C                <1> 		je nxtvrech
  2043 00001667 3C3D                <1> 		cmp al, '='
  2044 00001669 7420                <1> 		je nxtvrechb1
  2045 0000166B BE[D7540000]        <1> 		mov esi, buftxt
  2046 00001670 01FE                <1> 		add esi, edi
  2047 00001672 E847F9FFFF          <1> 		call cndtest
  2048 00001677 3C02                <1> 		cmp al, 2
  2049 00001679 7436                <1> 		je prntvr
  2050 0000167B 3C01                <1> 		cmp al, 1
  2051 0000167D 7432                <1> 		je prntvr
  2052 0000167F BE[D7540000]        <1> 		mov esi, buftxt
  2053 00001684 01FE                <1> 		add esi, edi
  2054 00001686 E908000000          <1> 		jmp nxtvrech
  2055                              <1> 	nxtvrechb1:
  2056 0000168B 81EB02000000        <1> 		sub ebx, 2
  2057 00001691 EBCB                <1> 		jmp echvar
  2058 00001693 8A03                <1> 	nxtvrech: mov al, [ebx]
  2059 00001695 3C05                <1> 		cmp al, 5
  2060 00001697 740F                <1> 		je nxtvrec2
  2061 00001699 43                  <1> 		inc ebx
  2062 0000169A 81FB[D7540000]      <1> 		cmp ebx, varend
  2063 000016A0 0F8313F8FFFF        <1> 		jae nwcmd
  2064 000016A6 EBEB                <1> 		jmp nxtvrech
  2065 000016A8 43                  <1> 	nxtvrec2: inc ebx
  2066 000016A9 8A03                <1> 		mov al, [ebx]
  2067 000016AB 3C04                <1> 		cmp al, 4
  2068 000016AD 74AF                <1> 		je echvar
  2069 000016AF EBE2                <1> 		jmp nxtvrech
  2070 000016B1 43                  <1> 	prntvr: inc ebx
  2071 000016B2 89DE                <1> 		mov esi, ebx
  2072 000016B4 C3                  <1> 		ret
  2073 000016B5 E883F6FFFF          <1> 	prntvr2: call print
  2074 000016BA BE[85400000]        <1> 		mov esi, line
  2075 000016BF E879F6FFFF          <1> 		call print
  2076 000016C4 E9F0F7FFFF          <1> 		jmp nwcmd
  2077 000016C9 050472756E62617463- <1> db 5,4,"runbatch",0
  2078 000016D2 6800                <1>
  2079                              <1> 	runbatch2:
  2080 000016D4 BE[85400000]        <1> 		mov esi, line
  2081 000016D9 E85FF6FFFF          <1> 		call print
  2082 000016DE BF[D7540000]        <1> 		mov edi, buftxt
  2083 000016E3 81C709000000        <1> 		add edi, 9
  2084 000016E9 BE00001000          <1> 		mov esi, 0x100000
  2085 000016EE E810280000          <1> 		call loadfile
  2086 000016F3 BF00001000          <1> 		mov edi, 0x100000
  2087 000016F8 C605[D04D0000]01    <1> 		mov byte [BATCHISON], 1
  2088                              <1> 	batchrunloop:
  2089 000016FF E892F7FFFF          <1> 		call buftxtclear
  2090 00001704 BE[D7540000]        <1> 		mov esi, buftxt
  2091                              <1> 	batchrunloop2:
  2092 00001709 B10D                <1> 		mov cl, 13
  2093 0000170B B50A                <1> 		mov ch, 10
  2094 0000170D 66390F              <1> 		cmp [edi], cx
  2095 00001710 0F841E000000        <1> 		je near nxtbatchrunline
  2096 00001716 66C1C108            <1> 		rol cx, 8
  2097 0000171A 66390F              <1> 		cmp [edi], cx
  2098 0000171D 0F8411000000        <1> 		je near nxtbatchrunline
  2099 00001723 803F00              <1> 		cmp byte [edi], 0
  2100 00001726 0F8408000000        <1> 		je near nxtbatchrunline
  2101 0000172C 8A07                <1> 		mov al, [edi]
  2102 0000172E 8806                <1> 		mov [esi], al
  2103 00001730 46                  <1> 		inc esi
  2104 00001731 47                  <1> 		inc edi
  2105 00001732 EBD5                <1> 		jmp batchrunloop2
  2106                              <1> 	nxtbatchrunline:
  2107 00001734 81C702000000        <1> 		add edi, 2
  2108 0000173A 893D[99170000]      <1> 		mov [batchedi], edi
  2109 00001740 C60600              <1> 		mov byte [esi], 0
  2110 00001743 BE[D7540000]        <1> 		mov esi, buftxt
  2111 00001748 803E00              <1> 		cmp byte [esi], 0
  2112 0000174B 0F843C000000        <1> 		je near nobatchfoundrun
  2113 00001751 BB00000000          <1> 		mov ebx, 0
  2114 00001756 8A1D[674D0000]      <1> 		mov bl, [IFON]
  2115 0000175C 80FB01              <1> 		cmp bl, 1
  2116 0000175F 0F8338000000        <1> 		jae near iftestbatch
  2117                              <1> 	doneiftest:
  2118 00001765 803D[4C180000]00    <1> 		cmp byte [runnextline], 0
  2119 0000176C 0F8405000000        <1> 		je near noruniftest
  2120 00001772 E89BF7FFFF          <1> 		call progtest
  2121                              <1> 	noruniftest:
  2122 00001777 C605[4C180000]01    <1> 		mov byte [runnextline], 1
  2123 0000177E 8B3D[99170000]      <1> 		mov edi, [batchedi]
  2124 00001784 803F00              <1> 		cmp byte [edi], 0
  2125 00001787 0F8572FFFFFF        <1> 		jne near batchrunloop
  2126                              <1> 	nobatchfoundrun:
  2127 0000178D C605[D04D0000]00    <1> 		mov byte [BATCHISON], 0
  2128 00001794 E920F7FFFF          <1> 		jmp nwcmd
  2129                              <1> 	
  2130 00001799 00000000            <1> batchedi dd 0	
  2131                              <1> 	
  2132                              <1> 	iftestbatch:
  2133 0000179D BE[684D0000]        <1> 		mov esi, IFTRUE
  2134 000017A2 01DE                <1> 		add esi, ebx
  2135 000017A4 803E00              <1> 		cmp byte [esi], 0
  2136 000017A7 0F85B8FFFFFF        <1> 		jne near doneiftest
  2137 000017AD 881D[4D180000]      <1> 		mov [iffalsebuf], bl
  2138                              <1> 	fifindbatch:
  2139 000017B3 66B96966            <1> 		mov cx, "if"
  2140 000017B7 66B86669            <1> 		mov ax, "fi"
  2141 000017BB 663907              <1> 		cmp [edi], ax
  2142 000017BE 0F841A000000        <1> 		je near fifoundbatch
  2143 000017C4 66390F              <1> 		cmp [edi], cx
  2144 000017C7 0F8462000000        <1> 		je near iffoundbatch
  2145 000017CD 803F00              <1> 		cmp byte [edi], 0
  2146 000017D0 0F8408000000        <1> 		je near fifoundbatch
  2147 000017D6 81C702000000        <1> 		add edi, 2
  2148 000017DC EBD5                <1> 		jmp fifindbatch
  2149                              <1> 	fifoundbatch:
  2150 000017DE 81C702000000        <1> 		add edi, 2
  2151 000017E4 B00D                <1> 		mov al, 13
  2152 000017E6 B40A                <1> 		mov ah, 10
  2153 000017E8 663907              <1> 		cmp [edi], ax
  2154 000017EB 7414                <1> 		je goodfibatch
  2155 000017ED 66C1C008            <1> 		rol ax, 8
  2156 000017F1 663907              <1> 		cmp [edi], ax
  2157 000017F4 740B                <1> 		je goodfibatch
  2158 000017F6 803F00              <1> 		cmp byte [edi], 0
  2159 000017F9 0F848EFFFFFF        <1> 		je near nobatchfoundrun
  2160 000017FF EBB2                <1> 		jmp fifindbatch
  2161                              <1> 	goodfibatch:
  2162 00001801 B001                <1> 		mov al, 1
  2163 00001803 2805[674D0000]      <1> 		sub [IFON], al 
  2164 00001809 A0[674D0000]        <1> 		mov al, [IFON]
  2165 0000180E 8A1D[4D180000]      <1> 		mov bl, [iffalsebuf]
  2166 00001814 38D8                <1> 		cmp al, bl
  2167 00001816 779B                <1> 		ja fifindbatch
  2168 00001818 BE[D7540000]        <1> 		mov esi, buftxt
  2169 0000181D 81EF02000000        <1> 		sub edi, 2
  2170 00001823 C605[4C180000]00    <1> 		mov byte [runnextline], 0
  2171 0000182A E9D0FEFFFF          <1> 		jmp batchrunloop
  2172                              <1> 	iffoundbatch:
  2173 0000182F B020                <1> 		mov al, ' '
  2174 00001831 81C702000000        <1> 		add edi, 2
  2175 00001837 3807                <1> 		cmp [edi], al
  2176 00001839 0F8574FFFFFF        <1> 		jne near fifindbatch
  2177 0000183F B001                <1> 		mov al, 1
  2178 00001841 0005[674D0000]      <1> 		add [IFON], al
  2179 00001847 E967FFFFFF          <1> 		jmp fifindbatch
  2180                              <1> 		
  2181                              <1> 		
  2182 0000184C 01                  <1> runnextline db 1
  2183 0000184D 00                  <1> iffalsebuf db 0
  2184                              <1> 
  2185 0000184E 0504626174636800    <1> db 5,4,"batch",0
  2186                              <1> 	batchst: 
  2187 00001856 BF[D7540000]        <1> 		mov edi, buftxt
  2188 0000185B 81C706000000        <1> 		add edi, 6
  2189 00001861 803F00              <1> 		cmp byte [edi], 0
  2190 00001864 0F8473000000        <1> 		je near nonamefound
  2191 0000186A BE00001000          <1> 		mov esi, 0x100000
  2192 0000186F E88F260000          <1> 		call loadfile
  2193 00001874 89D0                <1> 		mov eax, edx
  2194 00001876 3D94010000          <1> 		cmp eax, 404
  2195 0000187B 746F                <1> 		je goodbatchname
  2196 0000187D BE[8C180000]        <1> 		mov esi, badbatchmsg
  2197 00001882 E8B6F4FFFF          <1> 		call print
  2198 00001887 E92DF6FFFF          <1> 		jmp nwcmd
  2199 0000188C 546869732066696C65- <1> 		badbatchmsg db "This file already exists!",10,13,0
  2200 00001895 20616C726561647920- <1>
  2201 0000189E 657869737473210A0D- <1>
  2202 000018A7 00                  <1>
  2203 000018A8 596F75206861766520- <1> 		nobatchname db "You have to type a name after the command.",10,13,0
  2204 000018B1 746F20747970652061- <1>
  2205 000018BA 206E616D6520616674- <1>
  2206 000018C3 65722074686520636F- <1>
  2207 000018CC 6D6D616E642E0A0D00  <1>
  2208 000018D5 00000000            <1> 		esicache3 dd 0
  2209 000018D9 00000000            <1> 		esicache2 dd 0
  2210                              <1> 	nonamefound:
  2211 000018DD BE[A8180000]        <1> 		mov esi, nobatchname
  2212 000018E2 E856F4FFFF          <1> 		call print
  2213 000018E7 E9CDF5FFFF          <1> 		jmp nwcmd
  2214                              <1> 	goodbatchname:
  2215 000018EC BE00001000          <1> 		mov esi, 0x100000
  2216                              <1> 	batchcreate:
  2217 000018F1 8935[D5180000]      <1> 		mov [esicache3], esi
  2218 000018F7 B00D                <1> 		mov al, 13
  2219 000018F9 B307                <1> 		mov bl, 7
  2220 000018FB B404                <1> 		mov ah, 4
  2221 000018FD CD30                <1> 		int 30h
  2222 000018FF 8935[D9180000]      <1> 		mov [esicache2], esi
  2223 00001905 8A0E                <1> 		mov cl, [esi]
  2224 00001907 8B35[D5180000]      <1> 		mov esi, [esicache3]
  2225 0000190D BB[6F1A0000]        <1> 		mov ebx, exitword
  2226 00001912 E8A7F6FFFF          <1> 		call cndtest
  2227 00001917 3C01                <1> 		cmp al, 1
  2228 00001919 7423                <1> 		je endbatchcreate
  2229 0000191B 3C02                <1> 		cmp al, 2
  2230 0000191D 741F                <1> 		je endbatchcreate
  2231 0000191F BE[85400000]        <1> 		mov esi, line
  2232 00001924 E814F4FFFF          <1> 		call print
  2233 00001929 8B35[D9180000]      <1> 		mov esi, [esicache2]
  2234 0000192F B00D                <1> 		mov al, 13
  2235 00001931 B40A                <1> 		mov ah, 10
  2236 00001933 668906              <1> 		mov [esi], ax
  2237 00001936 81C602000000        <1> 		add esi, 2
  2238 0000193C EBB3                <1> 		jmp batchcreate
  2239                              <1> 	endbatchcreate:
  2240 0000193E 8B35[D5180000]      <1> 		mov esi, [esicache3]
  2241 00001944 B800000000          <1> 		mov eax, 0
  2242 00001949 8806                <1> 		mov [esi], al
  2243 0000194B BE[85400000]        <1> 		mov esi, line
  2244 00001950 E8E8F3FFFF          <1> 		call print
  2245 00001955 BE00001000          <1> 		mov esi, 0x100000
  2246 0000195A E8DEF3FFFF          <1> 		call print
  2247 0000195F E955F5FFFF          <1> 		jmp nwcmd
  2248                              <1> 	
  2249                              <1> 		
  2250 00001964 8A06                <1> 	startbatch: mov al, [esi]
  2251 00001966 8803                <1> 		mov [ebx], al
  2252 00001968 43                  <1> 		inc ebx
  2253 00001969 46                  <1> 		inc esi
  2254 0000196A 3C00                <1> 		cmp al, 0
  2255                              <1> 	;	je batchfile
  2256 0000196C EBF6                <1> 		jmp startbatch
  2257                              <1> 	donebatch2:
  2258 0000196E 5B                  <1> 		pop ebx
  2259 0000196F B104                <1> 		mov cl, 4
  2260 00001971 880B                <1> 		mov [ebx], cl
  2261 00001973 43                  <1> 		inc ebx
  2262 00001974 B503                <1> 		mov ch, 3
  2263 00001976 882B                <1> 		mov [ebx], ch
  2264 00001978 BE[94410000]        <1> 		mov esi, batchmsg
  2265 0000197D E8BBF3FFFF          <1> 		call print
  2266 00001982 E932F5FFFF          <1> 		jmp nwcmd
  2267                              <1> 	donebatch:
  2268 00001987 E80AF5FFFF          <1> 		call buftxtclear
  2269 0000198C BE[D7540000]        <1> 		mov esi, buftxt
  2270 00001991 8A03                <1> 	batchfind: mov al, [ebx]
  2271 00001993 3C03                <1> 		cmp al, 3
  2272 00001995 741C                <1> 		je batchnext
  2273 00001997 3C04                <1> 		cmp al, 4
  2274 00001999 7405                <1> 		je batchendtest
  2275                              <1> ;;cmp ebx, commandlst
  2276 0000199B 7334                <1> 		jae backtonwcmd
  2277 0000199D 43                  <1> 		inc ebx
  2278 0000199E EBF1                <1> 		jmp batchfind
  2279                              <1> 	batchendtest:
  2280 000019A0 43                  <1> 		inc ebx
  2281 000019A1 8A03                <1> 		mov al, [ebx]
  2282 000019A3 3C03                <1> 		cmp al, 3
  2283 000019A5 7402                <1> 		je backtonwcmdtest
  2284 000019A7 EBE8                <1> 		jmp batchfind
  2285                              <1> 	backtonwcmdtest:
  2286 000019A9 43                  <1> 		inc ebx
  2287 000019AA 8A03                <1> 		mov al, [ebx]
  2288 000019AC 3C00                <1> 		cmp al, 0
  2289 000019AE 7421                <1> 		je backtonwcmd
  2290 000019B0 4B                  <1> 		dec ebx
  2291 000019B1 EBDE                <1> 		jmp batchfind
  2292                              <1> 	batchnext:
  2293 000019B3 BE[D7540000]        <1> 		mov esi, buftxt
  2294 000019B8 43                  <1> 		inc ebx
  2295 000019B9 8A03                <1> 		mov al, [ebx]
  2296 000019BB 3C04                <1> 		cmp al, 4
  2297 000019BD 7404                <1> 		je batchfound
  2298                              <1> ;;		cmp ebx, commandlst
  2299 000019BF 7310                <1> 		jae backtonwcmd
  2300 000019C1 EBCE                <1> 		jmp batchfind
  2301                              <1> 	batchfound:
  2302 000019C3 43                  <1> 		inc ebx
  2303 000019C4 8A03                <1> 		mov al, [ebx]
  2304 000019C6 8806                <1> 		mov [esi], al
  2305 000019C8 46                  <1> 		inc esi
  2306 000019C9 3C00                <1> 		cmp al, 0
  2307 000019CB 741A                <1> 		je runbatch
  2308                              <1> ;;		cmp ebx, commandlst
  2309 000019CD 7302                <1> 		jae backtonwcmd
  2310 000019CF EBF2                <1> 		jmp batchfound
  2311                              <1> 	backtonwcmd:
  2312 000019D1 A0[D04D0000]        <1> 		mov al, [BATCHISON]
  2313 000019D6 FEC8                <1> 		dec al
  2314 000019D8 A2[D04D0000]        <1> 		mov [BATCHISON], al
  2315 000019DD E8B4F4FFFF          <1> 		call buftxtclear
  2316 000019E2 E9D2F4FFFF          <1> 		jmp nwcmd
  2317                              <1> 	runbatch:
  2318 000019E7 A0[D04D0000]        <1> 		mov al, [BATCHISON]
  2319 000019EC FEC0                <1> 		inc al
  2320 000019EE A2[D04D0000]        <1> 		mov [BATCHISON], al
  2321 000019F3 891D[CC4D0000]      <1> 		mov [BATCHPOS], ebx
  2322 000019F9 BE[D7540000]        <1> 		mov esi, buftxt
  2323 000019FE 8A25[674D0000]      <1> 		mov ah, [IFON]
  2324 00001A04 80FC01              <1> 		cmp ah, 1
  2325 00001A07 7305                <1> 		jae ifit
  2326 00001A09 E904F5FFFF          <1> 	brun:	jmp progtest
  2327 00001A0E 8A06                <1> 	ifit:	mov al, [esi]
  2328 00001A10 3C66                <1> 		cmp al, 'f'
  2329 00001A12 7428                <1> 		je ifit2
  2330 00001A14 3C65                <1> 		cmp al, 'e'
  2331 00001A16 742E                <1> 		je ifelse
  2332 00001A18 B800000000          <1> 	ifitst:	mov eax, 0
  2333 00001A1D A0[674D0000]        <1> 		mov al, [IFON]
  2334 00001A22 BF[684D0000]        <1> 		mov edi, IFTRUE
  2335 00001A27 01C7                <1> 		add edi, eax 
  2336 00001A29 B101                <1> 		mov cl, 1
  2337 00001A2B 380F                <1> 		cmp [edi],cl
  2338 00001A2D 7405                <1> 		je brun2
  2339 00001A2F E95DFFFFFF          <1> 		jmp batchfind
  2340 00001A34 891D[CC4D0000]      <1> 	brun2:	mov [BATCHPOS], ebx
  2341 00001A3A EBCD                <1> 		jmp brun
  2342 00001A3C 46                  <1> 	ifit2:	inc esi
  2343 00001A3D 8A06                <1> 		mov al, [esi]
  2344 00001A3F 3C69                <1> 		cmp al, 'i'
  2345 00001A41 7429                <1> 		je ifit3
  2346 00001A43 4E                  <1> 		dec esi
  2347 00001A44 EBD2                <1> 		jmp ifitst
  2348 00001A46 46                  <1> 	ifelse:	inc esi
  2349 00001A47 8A06                <1> 		mov al, [esi]
  2350 00001A49 3C6C                <1> 		cmp al, 'l'
  2351 00001A4B 7403                <1> 		je ifelse2
  2352 00001A4D 4E                  <1> 		dec esi
  2353 00001A4E EBC8                <1> 		jmp ifitst
  2354 00001A50 46                  <1> 	ifelse2:	inc esi
  2355 00001A51 8A06                <1> 		mov al, [esi]
  2356 00001A53 3C73                <1> 		cmp al, 's'
  2357 00001A55 7404                <1> 		je ifelse3
  2358 00001A57 4E                  <1> 		dec esi
  2359 00001A58 4E                  <1> 		dec esi
  2360 00001A59 EBBD                <1> 		jmp ifitst
  2361 00001A5B 46                  <1> 	ifelse3:	inc esi
  2362 00001A5C 8A06                <1> 		mov al, [esi]
  2363 00001A5E 3C65                <1> 		cmp al, 'e'
  2364 00001A60 7405                <1> 		je ifelse4
  2365 00001A62 4E                  <1> 		dec esi
  2366 00001A63 4E                  <1> 		dec esi
  2367 00001A64 4E                  <1> 		dec esi
  2368 00001A65 EBB1                <1> 		jmp ifitst
  2369 00001A67 4E                  <1> 	ifelse4: dec esi
  2370 00001A68 4E                  <1> 		dec esi
  2371 00001A69 4E                  <1> 		dec esi
  2372 00001A6A EBC8                <1> 		jmp brun2
  2373 00001A6C 4E                  <1> 	ifit3:	dec esi
  2374 00001A6D EBC5                <1> 		jmp brun2
  2375                              <1> 		
  2376                              <1> ;	batchran: 
  2377                              <1> ;		call buftxtclear
  2378                              <1> ;		mov ebx, [BATCHPOS]
  2379                              <1> ;		jmp batchfind
  2380                              <1> 
  2381 00001A6F 5C7800              <1> 	exitword db "\x",0
  2382 00001A72 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  2383 00001A7B 6F20657869742E0A0D- <1>
  2384 00001A84 00                  <1>
  2385                              <1> 		
  2386 00001A85 050473686F77626D70- <1> db 5,4,"showbmp",0
  2387 00001A8E 00                  <1>
  2388 00001A8F BF[D7540000]        <1> 		mov edi, buftxt
  2389 00001A94 81C708000000        <1> 		add edi, 8
  2390 00001A9A BE00001000          <1> 		mov esi, 0x100000
  2391 00001A9F E85F240000          <1> 		call loadfile
  2392 00001AA4 BE00001000          <1> 		mov esi, 0x100000
  2393 00001AA9 B900000000          <1> 		mov ecx, 0
  2394 00001AAE BA00000000          <1> 		mov edx, 0
  2395 00001AB3 B800000000          <1> 		mov eax, 0
  2396 00001AB8 BB00000000          <1> 		mov ebx, 0
  2397 00001ABD E8271E0000          <1> 		call showbmp
  2398 00001AC2 B000                <1> 		mov al, 0
  2399 00001AC4 B405                <1> 		mov ah, 5
  2400 00001AC6 CD30                <1> 		int 30h
  2401 00001AC8 BE[D7540000]        <1> 		mov esi, buftxt
  2402 00001ACD 81C608000000        <1> 		add esi, 8
  2403 00001AD3 E865F2FFFF          <1> 		call print
  2404 00001AD8 BE[1F1B0000]        <1> 		mov esi, loadedbmpmsg
  2405 00001ADD E85BF2FFFF          <1> 		call print
  2406 00001AE2 E9D2F3FFFF          <1> 		jmp nwcmd
  2407                              <1> 
  2408 00001AE7 050473686F77747874- <1> db 5,4,"showtxt",0
  2409 00001AF0 00                  <1>
  2410 00001AF1 BF[D7540000]        <1> 		mov edi, buftxt
  2411 00001AF6 81C708000000        <1> 		add edi, 8
  2412 00001AFC BE00001000          <1> 		mov esi, 0x100000
  2413 00001B01 E8FD230000          <1> 		call loadfile
  2414 00001B06 BE00001000          <1> 		mov esi, 0x100000
  2415 00001B0B E82DF2FFFF          <1> 		call print
  2416 00001B10 BE[85400000]        <1> 		mov esi, line
  2417 00001B15 E823F2FFFF          <1> 		call print
  2418 00001B1A E99AF3FFFF          <1> 		jmp nwcmd
  2419                              <1> 		
  2420 00001B1F 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  2421 00001B28 0A00                <1>
  2422                              <1> 
  2423 00001B2A 05042300            <1> db 5,4,"#",0
  2424                              <1> 	num:	
  2425 00001B2E 52                  <1> 		push edx
  2426 00001B2F E8ADF5FFFF          <1> 		call clearbuffer
  2427 00001B34 C605[E31D0000]00    <1> 		mov byte [decimal], 0
  2428 00001B3B C605[E41D0000]00    <1> 		mov byte [decimal2], 0
  2429 00001B42 BE[D7540000]        <1> 		mov esi, buftxt
  2430 00001B47 B800000000          <1> 		mov eax, 0
  2431 00001B4C B900000000          <1> 		mov ecx, 0
  2432 00001B51 BB00000000          <1> 		mov ebx, 0
  2433 00001B56 8A06                <1> 	num2:	mov al, [esi]
  2434 00001B58 3C2B                <1> 		cmp al, '+'
  2435 00001B5A 741B                <1> 		je operatorfound
  2436 00001B5C 3C2D                <1> 		cmp al, '-'
  2437 00001B5E 7417                <1> 		je operatorfound
  2438 00001B60 3C2A                <1> 		cmp al, '*'
  2439 00001B62 7413                <1> 		je operatorfound
  2440 00001B64 3C2F                <1> 		cmp al, '/'
  2441 00001B66 740F                <1> 		je operatorfound
  2442 00001B68 3C5E                <1> 		cmp al, '^'
  2443 00001B6A 740B                <1> 		je operatorfound
  2444 00001B6C 46                  <1> 		inc esi
  2445 00001B6D 3C00                <1> 		cmp al, 0
  2446 00001B6F 0F8444F3FFFF        <1> 		je near nwcmd
  2447 00001B75 EBDF                <1> 		jmp num2
  2448 00001B77 50                  <1> 	operatorfound: push eax
  2449 00001B78 B400                <1> 		mov ah, 0
  2450 00001B7A 8826                <1> 		mov [esi], ah
  2451 00001B7C 46                  <1> 		inc esi
  2452 00001B7D 8A06                <1> 		mov al, [esi]
  2453 00001B7F 3C24                <1> 		cmp al, '$'
  2454 00001B81 0F8480000000        <1> 		je near varnum1
  2455 00001B87 3C25                <1> 		cmp al, '%'
  2456 00001B89 0F8468000000        <1> 		je near resultnum1
  2457 00001B8F E900000000          <1> 		jmp varnum2
  2458                              <1> 	varnum2: 
  2459 00001B94 E8BE000000          <1> 		call checkdecimal
  2460 00001B99 E805F8FFFF          <1> 		call cnvrttxt
  2461                              <1> 	vrnm2:
  2462 00001B9E 89CB                <1> 		mov ebx, ecx
  2463 00001BA0 53                  <1> 		push ebx
  2464 00001BA1 E83BF5FFFF          <1> 		call clearbuffer
  2465 00001BA6 BE[D7540000]        <1> 		mov esi, buftxt
  2466 00001BAB 46                  <1> 		inc esi
  2467 00001BAC 8A06                <1> 		mov al, [esi]
  2468 00001BAE 3C24                <1> 		cmp al, '$'
  2469 00001BB0 0F846F000000        <1> 		je near varnum3
  2470 00001BB6 3C25                <1> 		cmp al, '%'
  2471 00001BB8 0F8441000000        <1> 		je near resultnum2
  2472                              <1> 	varnum4: 
  2473 00001BBE E880000000          <1> 		call checkdecimal2
  2474 00001BC3 E8DBF7FFFF          <1> 		call cnvrttxt
  2475                              <1> 	vrnm4:
  2476 00001BC8 5B                  <1> 		pop ebx
  2477 00001BC9 58                  <1> 		pop eax
  2478 00001BCA 3C2B                <1> 		cmp al, '+'
  2479 00001BCC 0F84B3000000        <1> 		je near plusnum
  2480 00001BD2 3C2D                <1> 		cmp al, '-'
  2481 00001BD4 0F84B7000000        <1> 		je near subnum
  2482 00001BDA 3C2A                <1> 		cmp al, '*'
  2483 00001BDC 0F84BB000000        <1> 		je near mulnum
  2484 00001BE2 3C2F                <1> 		cmp al, '/'
  2485 00001BE4 0F84C9000000        <1> 		je near divnum
  2486 00001BEA 3C5E                <1> 		cmp al, '^'
  2487 00001BEC 0F84E7000000        <1> 		je near expnum
  2488 00001BF2 E9C2F2FFFF          <1> 		jmp nwcmd
  2489                              <1> 	resultnum1:
  2490 00001BF7 8B0D[E51D0000]      <1> 		mov ecx, [result]
  2491 00001BFD EB9F                <1> 		jmp vrnm2
  2492                              <1> 	resultnum2:
  2493 00001BFF 8B0D[E51D0000]      <1> 		mov ecx, [result]
  2494 00001C05 EBC1                <1> 		jmp vrnm4
  2495 00001C07 81EE[D7540000]      <1> 	varnum1: sub esi, buftxt
  2496 00001C0D 89F7                <1> 		mov edi, esi
  2497 00001C0F 81C6[D7540000]      <1> 		add esi, buftxt
  2498 00001C15 47                  <1> 		inc edi
  2499 00001C16 BB[D74F0000]        <1> 		mov ebx, variables
  2500 00001C1B E873FAFFFF          <1> 		call nxtvrech
  2501 00001C20 E96FFFFFFF          <1> 		jmp varnum2
  2502 00001C25 81EE[D7540000]      <1> 	varnum3: sub esi, buftxt
  2503 00001C2B 89F7                <1> 		mov edi, esi
  2504 00001C2D 81C6[D7540000]      <1> 		add esi, buftxt
  2505 00001C33 47                  <1> 		inc edi
  2506 00001C34 BB[D74F0000]        <1> 		mov ebx, variables
  2507 00001C39 E855FAFFFF          <1> 		call nxtvrech
  2508 00001C3E E97BFFFFFF          <1> 		jmp varnum4
  2509                              <1> 	checkdecimal2:
  2510 00001C43 8A25[E31D0000]      <1> 		mov ah, [decimal]
  2511 00001C49 8825[E41D0000]      <1> 		mov [decimal2], ah
  2512 00001C4F B400                <1> 		mov ah, 0
  2513 00001C51 8825[E31D0000]      <1> 		mov [decimal], ah
  2514                              <1> 	checkdecimal:
  2515 00001C57 89F7                <1> 		mov edi, esi
  2516                              <1> 	chkdec1:
  2517 00001C59 8A07                <1> 		mov al, [edi]
  2518 00001C5B 3C2E                <1> 		cmp al, '.'
  2519 00001C5D 0F840B000000        <1> 		je near fnddec
  2520 00001C63 3C00                <1> 		cmp al, 0
  2521 00001C65 0F8419000000        <1> 		je near nodecimal
  2522 00001C6B 47                  <1> 		inc edi
  2523 00001C6C EBEB                <1> 		jmp chkdec1
  2524                              <1> 	fnddec:
  2525 00001C6E 8A4701              <1> 		mov al, [edi + 1]
  2526 00001C71 8807                <1> 		mov [edi], al
  2527 00001C73 3C00                <1> 		cmp al, 0
  2528 00001C75 0F8409000000        <1> 		je near nodecimal
  2529 00001C7B FE05[E31D0000]      <1> 		inc byte [decimal]
  2530 00001C81 47                  <1> 		inc edi
  2531 00001C82 EBEA                <1> 		jmp fnddec
  2532                              <1> 	nodecimal:
  2533 00001C84 C3                  <1> 		ret
  2534                              <1> 	plusnum:
  2535 00001C85 E817010000          <1> 		call decaddfix
  2536 00001C8A 01D9                <1> 		add ecx, ebx
  2537 00001C8C E991000000          <1> 		jmp retnum
  2538                              <1> 	subnum:
  2539 00001C91 E80B010000          <1> 		call decaddfix
  2540 00001C96 29D9                <1> 		sub ecx, ebx
  2541 00001C98 E985000000          <1> 		jmp retnum
  2542                              <1> 	mulnum:
  2543 00001C9D A0[E41D0000]        <1> 		mov al, [decimal2]
  2544 00001CA2 0005[E31D0000]      <1> 		add [decimal], al
  2545 00001CA8 89C8                <1> 		mov eax, ecx
  2546 00001CAA F7E3                <1> 		mul ebx
  2547 00001CAC 89C1                <1> 		mov ecx, eax
  2548 00001CAE E96F000000          <1> 		jmp retnum
  2549                              <1> 	divnum:
  2550 00001CB3 E8E9000000          <1> 		call decaddfix
  2551 00001CB8 B000                <1> 		mov al, 0
  2552 00001CBA A2[E31D0000]        <1> 		mov [decimal], al
  2553 00001CBF 6689C8              <1> 		mov ax, cx
  2554 00001CC2 80FB00              <1> 		cmp bl, 0
  2555 00001CC5 0F8457000000        <1> 		je near retnum
  2556 00001CCB F6F3                <1> 		div bl
  2557 00001CCD B900000000          <1> 		mov ecx, 0
  2558 00001CD2 88C1                <1> 		mov cl, al
  2559 00001CD4 E949000000          <1> 		jmp retnum
  2560                              <1> 	expnum:
  2561 00001CD9 8A15[E31D0000]      <1> 		mov dl, [decimal]
  2562 00001CDF 8815[E41D0000]      <1> 		mov [decimal2], dl
  2563 00001CE5 BA00000000          <1> 		mov edx, 0
  2564 00001CEA 89C8                <1> 		mov eax, ecx
  2565 00001CEC 89D9                <1> 		mov ecx, ebx
  2566 00001CEE 89C3                <1> 		mov ebx, eax
  2567 00001CF0 81F900000000        <1> 		cmp ecx, 0
  2568 00001CF6 7425                <1> 		je noexpnum
  2569 00001CF8 49                  <1> 		dec ecx
  2570 00001CF9 81F900000000        <1> 		cmp ecx, 0
  2571 00001CFF 7415                <1> 		je noexpnumlp
  2572 00001D01 F7E3                <1> 	expnumlp: mul ebx
  2573 00001D03 8A15[E41D0000]      <1> 		mov dl, [decimal2]
  2574 00001D09 0015[E31D0000]      <1> 		add [decimal], dl
  2575 00001D0F BA00000000          <1> 		mov edx, 0
  2576 00001D14 E2EB                <1> 		loop expnumlp
  2577                              <1> 	noexpnumlp:
  2578 00001D16 89C1                <1> 		mov ecx, eax
  2579 00001D18 E905000000          <1> 		jmp retnum
  2580                              <1> 	noexpnum:
  2581 00001D1D B901000000          <1> 		mov ecx, 1
  2582                              <1> 	retnum: 
  2583 00001D22 5A                  <1> 		pop edx
  2584 00001D23 BE[EB560000]        <1> 		mov esi, numbuf
  2585 00001D28 890D[E51D0000]      <1> 		mov [result], ecx
  2586 00001D2E E8C3F3FFFF          <1> 		call convert
  2587 00001D33 BE[EB560000]        <1> 		mov esi, numbuf
  2588 00001D38 8A25[E31D0000]      <1> 		mov ah, [decimal]
  2589 00001D3E 80FC00              <1> 		cmp ah, 0
  2590 00001D41 0F8425000000        <1> 		je near noputdecimal
  2591                              <1> 	putdecimal:
  2592 00001D47 4E                  <1> 		dec esi
  2593 00001D48 FECC                <1> 		dec ah
  2594 00001D4A 80FC00              <1> 		cmp ah, 0
  2595 00001D4D 0F87F4FFFFFF        <1> 		ja near putdecimal
  2596 00001D53 4E                  <1> 		dec esi
  2597 00001D54 8A06                <1> 		mov al, [esi]
  2598 00001D56 C6062E              <1> 		mov byte [esi], '.'
  2599                              <1> 	decputloop:
  2600 00001D59 4E                  <1> 		dec esi
  2601 00001D5A 8A26                <1> 		mov ah, [esi]
  2602 00001D5C 8806                <1> 		mov [esi], al
  2603 00001D5E 88E0                <1> 		mov al, ah
  2604 00001D60 81FE[D7560000]      <1> 		cmp esi, buf2
  2605 00001D66 0F87EDFFFFFF        <1> 		ja near decputloop
  2606                              <1> 	noputdecimal:
  2607 00001D6C BE[D7560000]        <1> 		mov esi, buf2
  2608 00001D71 E809000000          <1> 		call chkadd
  2609 00001D76 E93EF1FFFF          <1> 		jmp nwcmd
  2610 00001D7B 00000000            <1> edxnumbuf dw 0,0
  2611 00001D7F 8A06                <1> 	chkadd: mov al, [esi]
  2612 00001D81 3C30                <1> 		cmp al, '0'
  2613 00001D83 750C                <1> 		jne dnadd
  2614 00001D85 46                  <1> 		inc esi
  2615 00001D86 81FE[EB560000]      <1> 		cmp esi, numbuf
  2616 00001D8C 7402                <1> 		je dnaddm1
  2617 00001D8E EBEF                <1> 		jmp chkadd
  2618 00001D90 4E                  <1> 	dnaddm1: dec esi
  2619 00001D91 E8A7EFFFFF          <1> 	dnadd:	call print
  2620 00001D96 BE[85400000]        <1> 		mov esi, line
  2621 00001D9B E89DEFFFFF          <1> 		call print
  2622 00001DA0 C3                  <1> 		ret
  2623                              <1> 		
  2624                              <1> 	decaddfix:
  2625 00001DA1 A0[E41D0000]        <1> 		mov al, [decimal2]
  2626 00001DA6 8A25[E31D0000]      <1> 		mov ah, [decimal]
  2627 00001DAC 38E0                <1> 		cmp al, ah
  2628 00001DAE 7432                <1> 		je gooddecadd
  2629 00001DB0 38E0                <1> 		cmp al, ah
  2630 00001DB2 721A                <1> 		jb lowdecadd
  2631                              <1> 	highdecadd:
  2632 00001DB4 FEC4                <1> 		inc ah
  2633 00001DB6 89CA                <1> 		mov edx, ecx
  2634 00001DB8 C1E103              <1> 		shl ecx, 3
  2635 00001DBB 01D1                <1> 		add ecx, edx
  2636 00001DBD 01D1                <1> 		add ecx, edx
  2637 00001DBF 38E0                <1> 		cmp al, ah
  2638 00001DC1 77F1                <1> 		ja highdecadd
  2639 00001DC3 8825[E31D0000]      <1> 		mov [decimal], ah
  2640 00001DC9 E914000000          <1> 		jmp gooddecadd
  2641                              <1> 	lowdecadd:
  2642 00001DCE FEC0                <1> 		inc al
  2643 00001DD0 89DA                <1> 		mov edx, ebx
  2644 00001DD2 C1E303              <1> 		shl ebx, 3
  2645 00001DD5 01D3                <1> 		add ebx, edx
  2646 00001DD7 01D3                <1> 		add ebx, edx
  2647 00001DD9 38E0                <1> 		cmp al, ah
  2648 00001DDB 72F1                <1> 		jb lowdecadd
  2649 00001DDD A2[E31D0000]        <1> 		mov [decimal], al
  2650                              <1> 	gooddecadd:
  2651 00001DE2 C3                  <1> 		ret
  2652                              <1> 		
  2653 00001DE3 00                  <1> decimal db 0
  2654 00001DE4 00                  <1> decimal2 db 0
  2655 00001DE5 00000000            <1> result db 0,0,0,0
  2656                              <1> 	
  2657 00001DE9 05042500            <1> db 5,4,"%",0
  2658 00001DED E8EFF2FFFF          <1> 	ans:	call clearbuffer
  2659 00001DF2 8B0D[E51D0000]      <1> 		mov ecx, [result]
  2660 00001DF8 BE[D7560000]        <1> 		mov esi, buf2
  2661 00001DFD E8F4F2FFFF          <1> 		call convert
  2662 00001E02 BE[D7560000]        <1> 		mov esi, buf2
  2663 00001E07 E873FFFFFF          <1> 		call chkadd
  2664 00001E0C E9A8F0FFFF          <1> 		jmp nwcmd
  2665                              <1> 
  2666 00001E11 05042400            <1> db 5,4,"$",0
  2667 00001E15 BE[D7540000]        <1> var:	mov esi, buftxt
  2668 00001E1A BB[D74F0000]        <1> 	mov ebx, variables
  2669 00001E1F 8A06                <1> lkeq:	mov al, [esi]
  2670 00001E21 3C3D                <1> 	cmp al, '='
  2671 00001E23 741F                <1> 	je eqfnd	;is there an '=' sign?
  2672 00001E25 3C00                <1> 	cmp al, 0
  2673 00001E27 7403                <1> 	je echovars
  2674 00001E29 46                  <1> 	inc esi
  2675 00001E2A EBF3                <1> 	jmp lkeq
  2676 00001E2C BE[D74F0000]        <1> echovars: mov esi, variables
  2677 00001E31 BB[D7540000]        <1> 	mov ebx, varend
  2678 00001E36 B105                <1> 	mov cl, 5
  2679 00001E38 B504                <1> 	mov ch, 4
  2680 00001E3A E841F2FFFF          <1> 	call array
  2681 00001E3F E975F0FFFF          <1> 	jmp nwcmd
  2682 00001E44 46                  <1> eqfnd:	inc esi
  2683 00001E45 8A06                <1> 	mov al, [esi]
  2684 00001E47 3C00                <1> 	cmp al, 0
  2685 00001E49 740F                <1> 	je readvar
  2686 00001E4B BE[D7540000]        <1> 	mov esi, buftxt
  2687 00001E50 BB[D74F0000]        <1> 	mov ebx, variables
  2688 00001E55 E917000000          <1> 	jmp seek
  2689                              <1> readvar: 
  2690 00001E5A B00D                <1> 	mov al, 13
  2691 00001E5C B404                <1> 	mov ah, 4
  2692 00001E5E B307                <1> 	mov bl, 7
  2693 00001E60 E8D9ECFFFF          <1> 	call intx4
  2694 00001E65 BE[85400000]        <1> 	mov esi, line
  2695 00001E6A E8CEEEFFFF          <1> 	call print
  2696 00001E6F EBA4                <1> 	jmp var
  2697 00001E71 668B03              <1> seek:	mov ax, [ebx]
  2698 00001E74 B105                <1> 	mov cl, 5
  2699 00001E76 B504                <1> 	mov ch, 4
  2700 00001E78 663D0000            <1> 	cmp ax, 0
  2701 00001E7C 0F8459000000        <1> 	je near save
  2702 00001E82 6639C8              <1> 	cmp ax, cx
  2703 00001E85 7403                <1> 	je skfnd
  2704 00001E87 43                  <1> 	inc ebx
  2705 00001E88 EBE7                <1> 	jmp seek
  2706 00001E8A BE[D7540000]        <1> skfnd:	mov esi, buftxt
  2707 00001E8F 46                  <1> 	inc esi
  2708 00001E90 81C302000000        <1> 	add ebx, 2
  2709 00001E96 89DF                <1> 	mov edi, ebx
  2710 00001E98 B13D                <1> 	mov cl, '='
  2711 00001E9A E81FF1FFFF          <1> 	call cndtest
  2712 00001E9F 3C01                <1> 	cmp al, 1	
  2713 00001EA1 7417                <1> 	je varfnd
  2714 00001EA3 89FB                <1> 	mov ebx, edi
  2715 00001EA5 BE[D7540000]        <1> 	mov esi, buftxt
  2716 00001EAA 668B03              <1> 	mov ax, [ebx]
  2717 00001EAD 663D0000            <1> 	cmp ax, 0
  2718 00001EB1 0F8424000000        <1> 	je near save
  2719 00001EB7 43                  <1> 	inc ebx
  2720 00001EB8 EBB7                <1> 	jmp seek
  2721 00001EBA 8A03                <1> varfnd:	mov al, [ebx]
  2722 00001EBC 3C04                <1> 	cmp al, 4
  2723 00001EBE 7404                <1> 	je save2
  2724 00001EC0 4B                  <1> 	dec ebx
  2725 00001EC1 4E                  <1> 	dec esi
  2726 00001EC2 EBF6                <1> 	jmp varfnd
  2727 00001EC4 4B                  <1> save2:	dec ebx
  2728 00001EC5 4E                  <1> 	dec esi
  2729 00001EC6 8A03                <1> 	mov al, [ebx]
  2730 00001EC8 3C05                <1> 	cmp al, 5
  2731 00001ECA 7402                <1> 	je remove
  2732 00001ECC EBEC                <1> 	jmp varfnd
  2733 00001ECE 8A03                <1> remove: mov al, [ebx]
  2734 00001ED0 3C00                <1> 	cmp al, 0
  2735 00001ED2 749D                <1> 	je seek
  2736 00001ED4 B000                <1> 	mov al, 0
  2737 00001ED6 8803                <1> 	mov [ebx], al
  2738 00001ED8 43                  <1> 	inc ebx
  2739 00001ED9 EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2740 00001EDB BE[D7540000]        <1> save:	mov esi, buftxt
  2741 00001EE0 43                  <1> 	inc ebx
  2742 00001EE1 B005                <1> 	mov al, 5
  2743 00001EE3 B404                <1> 	mov ah, 4
  2744 00001EE5 668903              <1> 	mov [ebx], ax
  2745 00001EE8 43                  <1> 	inc ebx
  2746 00001EE9 43                  <1> svhere:	inc ebx
  2747 00001EEA 46                  <1> 	inc esi
  2748 00001EEB 8A06                <1> 	mov al, [esi]
  2749 00001EED 3C00                <1> 	cmp al, 0
  2750 00001EEF 0F8442000000        <1> 	je near svdone
  2751 00001EF5 3C25                <1> 	cmp al, '%'
  2752 00001EF7 7404                <1> 	je ans2
  2753 00001EF9 8803                <1> 	mov [ebx], al	
  2754 00001EFB EBEC                <1> 	jmp svhere
  2755 00001EFD 56                  <1> ans2:	push esi
  2756 00001EFE BE[D7560000]        <1> 	mov esi, buf2
  2757 00001F03 E823000000          <1> 	call ansfnd
  2758 00001F08 E803000000          <1> 	call anscp
  2759 00001F0D 5E                  <1> 	pop esi
  2760 00001F0E EBD9                <1> 	jmp svhere
  2761 00001F10 8A06                <1> anscp:	mov al, [esi]
  2762 00001F12 8803                <1> 	mov [ebx], al
  2763 00001F14 81FE[EB560000]      <1> 	cmp esi, numbuf
  2764 00001F1A 74CD                <1> 	je svhere
  2765 00001F1C 3C00                <1> 	cmp al, 0
  2766 00001F1E 74C9                <1> 	je svhere
  2767 00001F20 43                  <1> 	inc ebx
  2768 00001F21 46                  <1> 	inc esi
  2769 00001F22 EBEC                <1> 	jmp anscp
  2770 00001F24 5E                  <1> ansnf:	pop esi
  2771 00001F25 8A06                <1> 	mov al, [esi]
  2772 00001F27 8803                <1> 	mov [ebx], al
  2773 00001F29 EBBE                <1> 	jmp svhere
  2774 00001F2B 46                  <1> ansfnd:	inc esi
  2775 00001F2C 8A06                <1> 	mov al, [esi]
  2776 00001F2E 3C00                <1> 	cmp al, 0
  2777 00001F30 74F2                <1> 	je ansnf
  2778 00001F32 3C30                <1> 	cmp al, '0'
  2779 00001F34 74F5                <1> 	je ansfnd
  2780 00001F36 C3                  <1> 	ret
  2781 00001F37 B000                <1> svdone:	mov al, 0
  2782 00001F39 8803                <1> 	mov [ebx], al
  2783 00001F3B E979EFFFFF          <1> 	jmp nwcmd
  2784                              <1> 
  2785                              <1> 	
  2786 00001F40 050465787000        <1> 	db 5,4,"exp",0
  2787 00001F46 B878563412          <1> 	mov eax, 0x12345678
  2788 00001F4B BBEFCDAB90          <1> 	mov ebx, 0x90ABCDEF
  2789 00001F50 B945584345          <1> 	mov ecx, "EXCE"
  2790 00001F55 BA5054494F          <1> 	mov edx, "PTIO"
  2791 00001F5A BE4E203133          <1> 	mov esi, "N 13"
  2792 00001F5F BF[B90E0000]        <1> 	mov edi, nwcmd
  2793 00001F64 CD0D                <1> exception1:	int 13
  2794                              <1> 	
  2795 00001F66 05042E2F00          <1> 	db 5,4,"./",0
  2796                              <1> rundiskprog:
  2797 00001F6B BF[D7540000]        <1> 	mov edi, buftxt
  2798 00001F70 81C702000000        <1> 	add edi, 2
  2799 00001F76 BE00001000          <1> 	mov esi, 0x100000
  2800 00001F7B E8831F0000          <1> 	call loadfile
  2801 00001F80 81FA94010000        <1> 	cmp edx, 404
  2802 00001F86 7414                <1> 	je noprogfound
  2803 00001F88 BB00001000          <1> 	mov ebx, 0x100000
  2804 00001F8D 66813B4558          <1> 	cmp word [ebx], "EX"
  2805 00001F92 7508                <1> 	jne noprogfound
  2806 00001F94 81C302000000        <1> 	add ebx, 2
  2807 00001F9A FFE3                <1> 	jmp ebx
  2808                              <1> noprogfound:
  2809 00001F9C E918EFFFFF          <1> 	jmp nwcmd
  2810                              <1> 
  2811 00001FA1 050466707300        <1> db 5,4,"fps",0
  2812 00001FA7 B900000000          <1> 	mov ecx, 0
  2813 00001FAC 8A0D[08070000]      <1> 	mov cl, [fps]
  2814 00001FB2 E8BCF2FFFF          <1> 	call showhex
  2815 00001FB7 E9FDEEFFFF          <1> 	jmp nwcmd
  2816                              <1> 
  2817 00001FBC 050474696D6500      <1> db 5,4,"time",0
  2818 00001FC3 E805000000          <1> 	call time
  2819 00001FC8 E9ECEEFFFF          <1> 	jmp nwcmd
  2820                              <1> time:
  2821 00001FCD E8C1000000          <1> 	call tstackput1
  2822 00001FD2 B00A                <1> 	mov al,10			;Get RTC register A
  2823 00001FD4 E8EB000000          <1> 	call tget1
  2824 00001FD9 A880                <1> 	test al,0x80			;Is update in progress?
  2825 00001FDB 75F0                <1> 	jne time				; yes, wait
  2826                              <1> 
  2827 00001FDD B000                <1> 	mov al,0			;Get seconds (00 to 59)
  2828 00001FDF E8E0000000          <1> 	call tget1
  2829 00001FE4 A2[02210000]        <1> 	mov [RTCtimeSecond],al
  2830                              <1> 
  2831 00001FE9 B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  2832 00001FEB E8D4000000          <1> 	call tget1
  2833 00001FF0 A2[03210000]        <1> 	mov [RTCtimeMinute],al
  2834                              <1> 
  2835 00001FF5 B004                <1> 	mov al,0x04			;Get hours (see notes)
  2836 00001FF7 E8C8000000          <1> 	call tget1
  2837 00001FFC A2[04210000]        <1> 	mov [RTCtimeHour],al
  2838                              <1> 
  2839 00002001 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  2840 00002003 E8BC000000          <1> 	call tget1
  2841 00002008 A2[05210000]        <1> 	mov [RTCtimeDay],al
  2842                              <1> 
  2843 0000200D B008                <1> 	mov al,0x08			;Get month (01 to 12)
  2844 0000200F E8B0000000          <1> 	call tget1
  2845 00002014 A2[06210000]        <1> 	mov [RTCtimeMonth],al
  2846                              <1> 
  2847 00002019 B009                <1> 	mov al,0x09			;Get year (00 to 99)
  2848 0000201B E8A4000000          <1> 	call tget1
  2849 00002020 A2[07210000]        <1> 	mov [RTCtimeYear],al
  2850                              <1> 	
  2851 00002025 BE[08210000]        <1> 	mov esi, timeshow
  2852 0000202A 8A2D[04210000]      <1> 	mov ch, [RTCtimeHour]
  2853 00002030 E89A000000          <1> 	call tput1
  2854 00002035 8A2D[03210000]      <1> 	mov ch, [RTCtimeMinute]
  2855 0000203B E88F000000          <1> 	call tput1
  2856 00002040 8A2D[02210000]      <1> 	mov ch, [RTCtimeSecond]
  2857 00002046 E884000000          <1> 	call tput1
  2858 0000204B BE[12210000]        <1> 	mov esi, dateshow
  2859 00002050 8A2D[06210000]      <1> 	mov ch, [RTCtimeMonth]
  2860 00002056 E874000000          <1> 	call tput1
  2861 0000205B 8A2D[05210000]      <1> 	mov ch, [RTCtimeDay]
  2862 00002061 E869000000          <1> 	call tput1
  2863 00002066 B520                <1> 	mov ch, 0x20
  2864 00002068 E862000000          <1> 	call tput1
  2865 0000206D 4E                  <1> 	dec esi
  2866 0000206E 8A2D[07210000]      <1> 	mov ch, [RTCtimeYear]
  2867 00002074 E856000000          <1> 	call tput1
  2868 00002079 E82F000000          <1> 	call tstackget1
  2869 0000207E BE[08210000]        <1> 	mov esi, timeshow
  2870 00002083 66BB0700            <1> 	mov bx, 7
  2871 00002087 B401                <1> 	mov ah, 1
  2872 00002089 B000                <1> 	mov al, 0
  2873 0000208B CD30                <1> 	int 30h
  2874 0000208D 66B80000            <1> 	mov ax, 0
  2875 00002091 CD30                <1> 	int 30h
  2876                              <1> 	
  2877                              <1> tstackput1:
  2878 00002093 8935[FE200000]      <1> 	mov [tstack + 20], esi
  2879 00002099 BE[EA200000]        <1> 	mov esi, tstack
  2880 0000209E 8906                <1> 	mov [esi], eax
  2881 000020A0 895E04              <1> 	mov [esi + 4], ebx
  2882 000020A3 894E08              <1> 	mov [esi + 8], ecx
  2883 000020A6 89560C              <1> 	mov [esi + 12], edx
  2884 000020A9 897E10              <1> 	mov [esi + 16], edi
  2885 000020AC C3                  <1> 	ret
  2886                              <1> 	
  2887                              <1> tstackget1:
  2888 000020AD BE[EA200000]        <1> 	mov esi, tstack
  2889 000020B2 8B06                <1> 	mov eax, [esi]
  2890 000020B4 8B5E04              <1> 	mov ebx, [esi + 4]
  2891 000020B7 8B4E08              <1> 	mov ecx, [esi + 8]
  2892 000020BA 8B560C              <1> 	mov edx, [esi + 12]
  2893 000020BD 8B7E10              <1> 	mov edi, [esi + 16]
  2894 000020C0 8B7614              <1> 	mov esi, [esi + 20]
  2895 000020C3 C3                  <1> 	ret
  2896                              <1> 	
  2897                              <1> tget1:
  2898 000020C4 66BA7000            <1> 	mov dx, 0x70
  2899 000020C8 EE                  <1> 	out dx, al
  2900 000020C9 6642                <1> 	inc dx
  2901 000020CB EC                  <1> 	in al, dx
  2902 000020CC 664A                <1> 	dec dx
  2903 000020CE C3                  <1> 	ret
  2904                              <1> 	
  2905                              <1> tput1:
  2906 000020CF 66C1E904            <1> 	shr cx, 4
  2907 000020D3 B030                <1> 	mov al, 48
  2908 000020D5 00E8                <1> 	add al, ch
  2909 000020D7 8806                <1> 	mov [esi], al
  2910 000020D9 46                  <1> 	inc esi
  2911 000020DA B030                <1> 	mov al, 48
  2912 000020DC C0E904              <1> 	shr cl, 4
  2913 000020DF 00C8                <1> 	add al, cl
  2914 000020E1 8806                <1> 	mov [esi], al
  2915 000020E3 81C602000000        <1> 	add esi, 2
  2916 000020E9 C3                  <1> 	ret
  2917                              <1> 		
  2918 000020EA 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  2919 000020F3 000000000000000000- <1>
  2920 000020FC 000000000000        <1>
  2921 00002102 00                  <1> 	RTCtimeSecond db 0
  2922 00002103 00                  <1> 	RTCtimeMinute db 0
  2923 00002104 00                  <1> 	RTCtimeHour db 0
  2924 00002105 00                  <1> 	RTCtimeDay db 0
  2925 00002106 00                  <1> 	RTCtimeMonth db 0
  2926 00002107 00                  <1> 	RTCtimeYear db 0
  2927 00002108 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  2928 00002111 0A                  <1>
  2929 00002112 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  2930 0000211B 300D0A00            <1>
  2931                                      %include 'source/batchprogs.asm'
  2932                              <1> 	
  2933 0000211F E995EDFFFF          <1> notbatch: jmp nwcmd
  2934                              <1> 
  2935 00002124 05047768696C6500    <1> 	db 5,4,"while",0
  2936 0000212C B000                <1> while:  mov al, 0
  2937 0000212E 3805[D04D0000]      <1> 	cmp [BATCHISON], al
  2938 00002134 0F84E5FFFFFF        <1> 	je near notbatch
  2939 0000213A 8B35[CC4D0000]      <1> 	MOV esi, [BATCHPOS]
  2940 00002140 4E                  <1> whilefnd: dec esi
  2941 00002141 8A06                <1> 	mov al, [esi]
  2942 00002143 3C05                <1> 	cmp al, 5
  2943 00002145 0F85F5FFFFFF        <1> 	jne near whilefnd
  2944 0000214B 8935[D24D0000]      <1> 	mov [LOOPPOS], esi
  2945 00002151 C605[D14D0000]01    <1> 	mov BYTE [LOOPON], 1
  2946 00002158 0005[674D0000]      <1> 	add [IFON], al
  2947 0000215E BE[D7540000]        <1> 	mov esi, buftxt
  2948 00002163 BB[D7540000]        <1> 	mov ebx, buftxt
  2949 00002168 81C306000000        <1> 	add ebx, 6
  2950 0000216E E923000000          <1> 	jmp chkeqsn
  2951                              <1> 
  2952                              <1> 
  2953 00002173 0504696600          <1> 	db 5,4,"if",0
  2954 00002178 B000                <1> if:	mov al, 0
  2955 0000217A 3805[D04D0000]      <1> 	cmp [BATCHISON], al
  2956 00002180 0F8499FFFFFF        <1> 	je near notbatch
  2957 00002186 BE[D7540000]        <1> 	mov esi, buftxt
  2958 0000218B BB[D7540000]        <1> 	mov ebx, buftxt
  2959 00002190 81C303000000        <1> 	add ebx, 3
  2960 00002196 8A06                <1> chkeqsn: mov al, [esi]
  2961 00002198 3C00                <1> 	cmp al, 0
  2962 0000219A 0F847FFFFFFF        <1> 	je near notbatch
  2963 000021A0 3C3D                <1> 	cmp al, '='
  2964 000021A2 0F8403000000        <1> 	je near chkeqdn
  2965 000021A8 46                  <1> 	inc esi
  2966 000021A9 EBEB                <1> 	jmp chkeqsn
  2967 000021AB B000                <1> chkeqdn: mov al, 0 
  2968 000021AD 8806                <1> 	mov [esi], al
  2969 000021AF 46                  <1> 	inc esi
  2970 000021B0 8A06                <1> 	mov al, [esi]
  2971 000021B2 3C24                <1> 	cmp al, '$'
  2972 000021B4 0F8462000000        <1> 	je near ifvar1
  2973 000021BA 8A03                <1> ifvar2: mov al, [ebx]
  2974 000021BC 3C24                <1> 	cmp al, '$'
  2975 000021BE 0F847B000000        <1> 	je near ifvar3
  2976 000021C4 E8BBEDFFFF          <1> ifvar4:	call tester
  2977 000021C9 3C01                <1> 	cmp al, 1
  2978 000021CB 0F8405000000        <1> 	je near trueif
  2979 000021D1 E923000000          <1> 	jmp falseif
  2980 000021D6 B800000000          <1> trueif:	mov eax, 0
  2981 000021DB A0[674D0000]        <1> 	mov al, [IFON]
  2982 000021E0 FEC0                <1> 	inc al
  2983 000021E2 A2[674D0000]        <1> 	mov [IFON], al
  2984 000021E7 B400                <1> 	mov ah, 0
  2985 000021E9 BE[684D0000]        <1> 	mov esi, IFTRUE
  2986 000021EE 01C6                <1> 	add esi, eax
  2987 000021F0 B401                <1> 	mov ah, 1
  2988 000021F2 8826                <1> 	mov [esi], ah
  2989 000021F4 E9C0ECFFFF          <1> 	jmp nwcmd
  2990 000021F9 B800000000          <1> falseif: mov eax, 0
  2991 000021FE A0[674D0000]        <1> 	mov al, [IFON]
  2992 00002203 FEC0                <1> 	inc al
  2993 00002205 A2[674D0000]        <1> 	mov [IFON], al
  2994 0000220A B400                <1> 	mov ah, 0
  2995 0000220C BE[684D0000]        <1> 	mov esi, IFTRUE
  2996 00002211 01C6                <1> 	add esi, eax
  2997 00002213 B400                <1> 	mov ah, 0
  2998 00002215 8826                <1> 	mov [esi], ah
  2999 00002217 E99DECFFFF          <1> 	jmp nwcmd
  3000 0000221C 89F7                <1> ifvar1: mov edi, esi
  3001 0000221E 81EF[D7540000]      <1> 	sub edi, buftxt
  3002 00002224 47                  <1> 	inc edi
  3003 00002225 BB[D74F0000]        <1> 	mov ebx, variables
  3004 0000222A E864F4FFFF          <1> 	call nxtvrech
  3005 0000222F BB[D7540000]        <1> 	mov ebx, buftxt
  3006 00002234 81C303000000        <1> 	add ebx, 3
  3007 0000223A E97BFFFFFF          <1> 	jmp ifvar2
  3008 0000223F 8935[5F220000]      <1> ifvar3: mov [esiif], esi
  3009 00002245 BF04000000          <1> 	mov edi, 4
  3010 0000224A BB[D74F0000]        <1> 	mov ebx, variables
  3011 0000224F E83FF4FFFF          <1> 	call nxtvrech
  3012 00002254 8B35[5F220000]      <1> 	mov esi, [esiif]
  3013 0000225A E965FFFFFF          <1> 	jmp ifvar4
  3014                              <1> 
  3015 0000225F 00000000            <1> esiif dd 0
  3016                              <1> 	
  3017 00002263 0504656C736500      <1> 	db 5,4,"else",0
  3018 0000226A B800000000          <1> else:	mov eax, 0
  3019 0000226F A0[674D0000]        <1> 	mov al, [IFON]
  3020 00002274 BE[684D0000]        <1> 	mov esi, IFTRUE
  3021 00002279 01C6                <1> 	add esi, eax
  3022 0000227B 8A06                <1> 	mov al, [esi]
  3023 0000227D 3C00                <1> 	cmp al, 0		
  3024 0000227F 7409                <1> 	je else1
  3025 00002281 3C01                <1> 	cmp al, 1
  3026 00002283 740E                <1> 	je else2
  3027 00002285 E92FECFFFF          <1> 	jmp nwcmd
  3028 0000228A B001                <1> else1:  mov al, 1
  3029 0000228C 8806                <1> 	mov [esi], al
  3030 0000228E E926ECFFFF          <1> 	jmp nwcmd
  3031 00002293 B000                <1> else2:	mov al, 0
  3032 00002295 8806                <1> 	mov [esi], al
  3033 00002297 E91DECFFFF          <1> 	jmp nwcmd
  3034                              <1> 
  3035 0000229C 05046C6F6F7000      <1> 	db 5,4,"loop",0
  3036 000022A3 3805[D14D0000]      <1> 	cmp [LOOPON], al
  3037 000022A9 0F8405000000        <1> 	je near filoop
  3038 000022AF E905ECFFFF          <1> 	jmp nwcmd
  3039 000022B4 8B35[D24D0000]      <1> filoop: mov esi, [LOOPPOS]
  3040 000022BA 8935[CC4D0000]      <1> 	mov [BATCHPOS], esi
  3041 000022C0 E9F4EBFFFF          <1> 	jmp nwcmd
  3042                              <1> 	
  3043                              <1> 
  3044 000022C5 0504666900          <1> 	db 5,4,"fi",0
  3045 000022CA B000                <1> 	mov al, 0
  3046 000022CC 3805[D04D0000]      <1> 	cmp [BATCHISON], al
  3047 000022D2 0F8447FEFFFF        <1> 	je near notbatch
  3048 000022D8 B001                <1> fi:	mov al, 1
  3049 000022DA 2805[674D0000]      <1> 	sub [IFON],al
  3050 000022E0 E9D4EBFFFF          <1> 	jmp nwcmd
  3051                              <1> 
  3052 000022E5 050473746F7000      <1> 	db 5,4,"stop",0
  3053 000022EC B000                <1> stop:	mov al, 0
  3054 000022EE A2[D04D0000]        <1> 	mov [BATCHISON], al
  3055 000022F3 A2[674D0000]        <1> 	mov [IFON], al
  3056 000022F8 A2[684D0000]        <1> 	mov [IFTRUE], al
  3057 000022FD A2[D14D0000]        <1> 	mov [LOOPON], al
  3058 00002302 E9B2EBFFFF          <1> 	jmp nwcmd
  3059                              <1> 
  3060                              <1> progend:		;programs end here	
  3061                              <1> batchprogend:
  3062                                      %include 'source/input.asm'
  3063                              <1> PS2SET:
  3064 00002307 B0A8                <1>   mov  al, 0xa8		; enable mouse port
  3065 00002309 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3066 0000230B E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  3067 00002310 C3                  <1> ret
  3068                              <1> 
  3069                              <1> ;***********************************************************************
  3070                              <1> ;Check if command is accepted. (not got stuck in inputbuffer)
  3071                              <1> ;***********************************************************************
  3072                              <1> CHKPRT:
  3073 00002311 66B96400            <1>   mov  cx, 100
  3074                              <1>  .again:
  3075 00002315 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3076 00002317 A802                <1>   test al, 2		; Check if input buffer is empty
  3077 00002319 7402                <1>   je .go
  3078 0000231B E2F8                <1>   loop .again
  3079                              <1>  .go:
  3080 0000231D C3                  <1> ret
  3081                              <1> 
  3082                              <1> ;***********************************************************************
  3083                              <1> ;Write to mouse
  3084                              <1> ;***********************************************************************
  3085                              <1> WMOUS:
  3086 0000231E B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  3087 00002320 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3088 00002322 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3089 00002327 C3                  <1> ret
  3090                              <1> 
  3091                              <1> 
  3092                              <1> 
  3093                              <1> ;***********************************************************************
  3094                              <1> ;mouse output buffer full
  3095                              <1> ;***********************************************************************
  3096                              <1> MBUFFUL:
  3097 00002328 66B96400            <1>   mov cx, 100
  3098                              <1>  .mn:
  3099 0000232C E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3100 0000232E A820                <1>   test al, 0x20		; check if mouse output buffer is full
  3101 00002330 7402                <1>   jz  .mnn
  3102 00002332 E2F8                <1>   loop .mn
  3103                              <1>  .mnn:
  3104 00002334 C3                  <1> ret
  3105                              <1> 
  3106                              <1> 
  3107                              <1> ;***********************************************************************
  3108                              <1> ;Write activate Mouse HardWare
  3109                              <1> ;***********************************************************************
  3110                              <1> ACTMOUS:
  3111 00002335 E8E4FFFFFF          <1>   call WMOUS
  3112 0000233A B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  3113 0000233C E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  3114 0000233E E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3115 00002343 E801000000          <1>   call CHKMOUS		; check if a byte is available
  3116 00002348 C3                  <1> ret
  3117                              <1> 
  3118                              <1> ;***********************************************************************
  3119                              <1> ;Check if mouse has info for us
  3120                              <1> ;***********************************************************************
  3121                              <1> CHKMOUS:
  3122 00002349 B300                <1>   mov  bl, 0
  3123 0000234B 66B96400            <1>   mov cx, 100
  3124                              <1>  .vrd:
  3125 0000234F E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3126 00002351 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  3127 00002353 7504                <1>   jnz .yy
  3128 00002355 E2F8                <1>   loop .vrd
  3129 00002357 B301                <1>   mov  bl, 1
  3130                              <1>  .yy:
  3131 00002359 C3                  <1> ret
  3132                              <1> 
  3133                              <1> ;***********************************************************************
  3134                              <1> ;Get Mouse Byte
  3135                              <1> ;***********************************************************************
  3136                              <1> GETB:
  3137                              <1>  .cagain:
  3138 0000235A E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  3139 0000235F 08DB                <1>   or bl, bl
  3140 00002361 75F7                <1>   jnz .cagain
  3141 00002363 B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  3142 00002365 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3143 00002367 E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3144 0000236C 6631C0              <1>   xor  ax, ax
  3145 0000236F E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3146 00002371 88C2                <1>   mov  dl, al
  3147 00002373 B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  3148 00002375 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3149 00002377 E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3150 0000237C 88D0                <1>   mov  al, dl
  3151 0000237E C3                  <1> ret
  3152                              <1> 
  3153 0000237F 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  3154 00002380 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  3155 00002381 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  3156 00002382 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  3157 00002383 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  3158                              <1> 
  3159                              <1> 
  3160                              <1> 	guistartin:
  3161 00002384 B800000000          <1> 		mov eax, 0
  3162 00002389 66A3[0A0D0000]      <1> 		mov [lastkey], ax
  3163 0000238F E464                <1> 		in al, 64h ; Status
  3164 00002391 A801                <1> 		test al, 1 ; output buffer full?
  3165 00002393 74EF                <1> 		jz guistartin
  3166 00002395 A820                <1> 		test al, 20h ; PS2-Mouse?
  3167 00002397 0F85D9000000        <1> 		jnz near maincall2
  3168 0000239D E460                <1> 		in al, 60h
  3169 0000239F 88C4                <1> 		mov ah, al
  3170 000023A1 B000                <1> 		mov al, 0
  3171 000023A3 8825[0B0D0000]      <1> 		mov [lastkey + 1], ah
  3172 000023A9 88E0                <1> 		mov al, ah
  3173 000023AB BF[FD250000]        <1> 		mov edi, scancode
  3174                              <1> 	guisearchscan: 
  3175 000023B0 3C40                <1> 		cmp al, 40h
  3176 000023B2 7315                <1> 		jae guiscanother
  3177 000023B4 B400                <1> 		mov ah, 0
  3178 000023B6 D0E0                <1> 		shl al, 1
  3179 000023B8 01C7                <1> 		add edi, eax
  3180 000023BA D0E8                <1> 		shr al, 1
  3181 000023BC 8A27                <1> 		mov ah, [edi]
  3182 000023BE 80FC00              <1> 		cmp ah, 0
  3183 000023C1 7406                <1> 		je guiscanother
  3184 000023C3 E964000000          <1> 		jmp guiscanfound
  3185 000023C8 00                  <1> guiupper db 0
  3186                              <1> guiscanother:
  3187 000023C9 88C4                <1> 		mov ah, al
  3188 000023CB B000                <1> 		mov al, 0
  3189 000023CD 66A3[0A0D0000]      <1> 		mov [lastkey], ax
  3190                              <1> 		;cmp ah, 4Dh
  3191                              <1> 		;je near nextimage
  3192 000023D3 80FC2A              <1> 		cmp ah, 2Ah
  3193 000023D6 0F8437000000        <1> 		je near guishifton
  3194 000023DC 80FC36              <1> 		cmp ah, 36h
  3195 000023DF 0F842E000000        <1> 		je near guishifton
  3196 000023E5 80FC1C              <1> 		cmp ah, 1Ch
  3197 000023E8 0F843D000000        <1> 		je near guientdown
  3198 000023EE 80FCAA              <1> 		cmp ah, 0AAh
  3199 000023F1 0F8428000000        <1> 		je near guishiftoff
  3200 000023F7 80FCB6              <1> 		cmp ah, 0B6h
  3201 000023FA 0F841F000000        <1> 		je near guishiftoff
  3202 00002400 80FC3A              <1> 		cmp ah, 3Ah
  3203 00002403 0F8401000000        <1> 		je near guishift
  3204 00002409 C3                  <1> 		ret
  3205                              <1> 	guishift:
  3206 0000240A A0[C8230000]        <1> 		mov al, [guiupper]
  3207 0000240F 3C01                <1> 		cmp al, 1
  3208 00002411 730C                <1> 		jae guishiftoff
  3209                              <1> 	guishifton:
  3210 00002413 C605[C8230000]01    <1> 		mov byte [guiupper], 1
  3211 0000241A E965FFFFFF          <1> 		jmp guistartin
  3212                              <1> 	guishiftoff:
  3213 0000241F C605[C8230000]00    <1> 		mov byte [guiupper], 0
  3214 00002426 E959FFFFFF          <1> 		jmp guistartin
  3215                              <1> 	guientdown:
  3216 0000242B C3                  <1> 		ret
  3217                              <1> 	guiscanfound:
  3218 0000242C 81C701000000        <1> 		add edi, 1
  3219 00002432 803D[C8230000]01    <1> 		cmp byte [guiupper], 1
  3220 00002439 7306                <1> 		jae uppercasegui
  3221 0000243B 81EF01000000        <1> 		sub edi, 1
  3222                              <1> uppercasegui:
  3223 00002441 8A07                <1> 		mov al,[edi]
  3224 00002443 A2[0A0D0000]        <1> 		mov [lastkey], al
  3225 00002448 C3                  <1> 		ret
  3226                              <1> 		
  3227                              <1> 		
  3228                              <1> 	cursorgui:
  3229 00002449 803D[8D390000]01    <1> 		cmp byte [mouseon], 1
  3230 00002450 0F8420000000        <1> 		je near maincall2
  3231                              <1> 
  3232                              <1> 	initmouse:
  3233 00002456 E890050000          <1> 		call switchmousepos2
  3234 0000245B E8A7FEFFFF          <1> 	  	call PS2SET
  3235 00002460 E8D0FEFFFF          <1> 		call ACTMOUS
  3236 00002465 E8F0FEFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  3237                              <1> 				;;If the bytes are mixed up,
  3238                              <1> 				;;remove this line or add another of this line.
  3239 0000246A E8EBFEFFFF          <1> 		call GETB
  3240 0000246F C605[8D390000]01    <1> 		mov byte [mouseon],1
  3241                              <1> 
  3242                              <1> 	maincall2:  
  3243 00002476 E460                <1> 		  in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3244 00002478 88C3                <1> 		  mov  bl, al
  3245 0000247A 80E301              <1> 		  and  bl, 1
  3246 0000247D 881D[7F230000]      <1> 		  mov  BYTE [LBUTTON], bl
  3247 00002483 88C3                <1> 		  mov  bl, al
  3248 00002485 80E302              <1> 		  and  bl, 2
  3249 00002488 D0EB                <1> 		  shr  bl, 1
  3250 0000248A 881D[80230000]      <1> 		  mov  BYTE [RBUTTON], bl
  3251 00002490 88C3                <1> 		  mov  bl, al
  3252 00002492 80E304              <1> 		  and  bl, 4
  3253 00002495 C0EB02              <1> 		  shr  bl, 2
  3254 00002498 881D[81230000]      <1> 		  mov  BYTE [MBUTTON], bl
  3255 0000249E E460                <1> 		  in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3256 000024A0 A2[82230000]        <1> 		  mov  BYTE [XCOORD], al
  3257 000024A5 E460                <1> 		  in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3258 000024A7 A2[83230000]        <1> 		  mov  BYTE [YCOORD], al
  3259                              <1> 
  3260                              <1> 	showpixelcursor:
  3261 000024AC 668B15[F9250000]    <1> 		mov dx, [mousecursorposition]
  3262 000024B3 668B0D[FB250000]    <1> 		mov cx, [mousecursorposition + 2]
  3263 000024BA 668915[F5250000]    <1> 		mov [lastmouseposition], dx
  3264 000024C1 66890D[F7250000]    <1> 		mov [lastmouseposition + 2], cx
  3265 000024C8 A0[82230000]        <1> 		mov al, [XCOORD]
  3266 000024CD 3C80                <1> 		cmp al, 128
  3267 000024CF 730C                <1> 		jae subxcoord
  3268 000024D1 00C0                <1> 		add al, al
  3269 000024D3 B400                <1> 		mov ah, 0
  3270 000024D5 6601C2              <1> 		add dx, ax
  3271 000024D8 E90B000000          <1> 		jmp subxcoorddn
  3272                              <1> 	subxcoord:
  3273 000024DD 00C0                <1> 		add al, al
  3274 000024DF B300                <1> 		mov bl, 0
  3275 000024E1 28C3                <1> 		sub bl, al
  3276 000024E3 B700                <1> 		mov bh, 0
  3277 000024E5 6629DA              <1> 		sub dx, bx
  3278                              <1> 	subxcoorddn:
  3279 000024E8 8A1D[83230000]      <1> 		mov bl, [YCOORD]
  3280 000024EE B000                <1> 		mov al, 0
  3281 000024F0 28D8                <1> 		sub al, bl
  3282 000024F2 3C80                <1> 		cmp al, 128
  3283 000024F4 730A                <1> 		jae subycoord
  3284 000024F6 B400                <1> 		mov ah, 0
  3285 000024F8 6601C1              <1> 		add cx, ax
  3286 000024FB E909000000          <1> 		jmp subycoorddn
  3287                              <1> 	subycoord:
  3288 00002500 B300                <1> 		mov bl, 0
  3289 00002502 28C3                <1> 		sub bl, al
  3290 00002504 B700                <1> 		mov bh, 0
  3291 00002506 6629D9              <1> 		sub cx, bx
  3292                              <1> 	subycoorddn:
  3293 00002509 6681FA204E          <1> 		cmp dx, 20000
  3294 0000250E 7604                <1> 		jbe nooriginx2
  3295 00002510 66BA0000            <1> 		mov dx, 0
  3296                              <1> 	nooriginx2:
  3297 00002514 6681F9204E          <1> 		cmp cx, 20000
  3298 00002519 7604                <1> 		jbe nooriginy2
  3299 0000251B 66B90000            <1> 		mov cx, 0
  3300                              <1> 	nooriginy2:
  3301 0000251F 6681FA0000          <1> 		cmp dx, 0
  3302 00002524 7415                <1> 		je nofixxcolumn2
  3303 00002526 663B15[3E370000]    <1> 		cmp dx, [resolutionx2]
  3304 0000252D 720C                <1> 		jb nofixxcolumn2
  3305 0000252F 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  3306 00002536 6681EA0200          <1> 		sub dx, 2
  3307                              <1> 	nofixxcolumn2:
  3308 0000253B 6681F90000          <1> 		cmp cx, 0
  3309 00002540 7415                <1> 		je nofixyrow2
  3310 00002542 663B0D[3A370000]    <1> 		cmp cx, [resolutiony]
  3311 00002549 720C                <1> 		jb nofixyrow2
  3312 0000254B 668B0D[3A370000]    <1> 		mov cx, [resolutiony]
  3313 00002552 6681E90100          <1> 		sub cx, 1
  3314                              <1> 	nofixyrow2:
  3315 00002557 668915[F9250000]    <1> 		mov [mousecursorposition], dx
  3316 0000255E 66890D[FB250000]    <1> 		mov [mousecursorposition + 2], cx
  3317 00002565 E818040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3318 0000256A 803D[7F230000]01    <1> 		cmp byte [LBUTTON], 1
  3319 00002571 0F84F1040000        <1> 		je near clickicon
  3320 00002577 803D[80230000]01    <1> 		cmp byte [RBUTTON], 1
  3321 0000257E 0F84E4040000        <1> 		je near clickicon
  3322 00002584 A0[552A0000]        <1> 		mov al, [pbutton]
  3323 00002589 C705[582A0000]0000- <1> 		mov dword [dragging], 0
  3324 00002591 0000                <1>
  3325 00002593 3C00                <1> 		cmp al, 0
  3326 00002595 740F                <1> 		je nopreviousbutton
  3327 00002597 E883030000          <1> 		call clearmousecursor
  3328 0000259C E8FB090000          <1> 		call reloadallgraphics
  3329 000025A1 E845040000          <1> 		call switchmousepos2
  3330                              <1> 	nopreviousbutton:
  3331 000025A6 B000                <1> 		mov al, 0
  3332 000025A8 A2[552A0000]        <1> 		mov [pbutton], al
  3333 000025AD A0[7F230000]        <1> 		mov al, [LBUTTON]
  3334 000025B2 A2[562A0000]        <1> 		mov [pLBUTTON], al
  3335 000025B7 A0[80230000]        <1> 		mov al, [RBUTTON]
  3336 000025BC A2[572A0000]        <1> 		mov [pRBUTTON], al
  3337 000025C1 B900000000          <1> 		mov ecx, 0
  3338 000025C6 BA00000000          <1> 		mov edx, 0
  3339 000025CB 668B15[F9250000]    <1> 		mov dx, [mousecursorposition]
  3340 000025D2 668B0D[FB250000]    <1> 		mov cx, [mousecursorposition + 2]
  3341 000025D9 66BB9CE7            <1> 		mov bx, 1110011110011100b
  3342 000025DD B400                <1> 		mov ah, 0
  3343 000025DF B080                <1> 		mov al, 128
  3344 000025E1 C605[1B290000]01    <1> 		mov byte [showcursorfonton], 1
  3345 000025E8 E861110000          <1> 		call showfontvesa
  3346 000025ED C605[1B290000]00    <1> 		mov byte [showcursorfonton], 0
  3347 000025F4 C3                  <1> 		ret
  3348                              <1> 
  3349 000025F5 84008400            <1> lastmouseposition dw 132,132
  3350 000025F9 84008400            <1> mousecursorposition dw 132,132	
  3351                              <1> 
  3352                              <1> 		
  3353                              <1> 		
  3354                              <1> 	
  3355                              <1> scancode:
  3356 000025FD 0000                <1> 	db 0,0		;,0h
  3357 000025FF 0000                <1> 	db 0,0		;,1h
  3358 00002601 3121                <1> 	db '1','!'	;,2h
  3359 00002603 3240                <1> 	db '2','@'	;,3h
  3360 00002605 3323                <1> 	db '3','#'	;,4h
  3361 00002607 3424                <1> 	db '4','$'	;,5h
  3362 00002609 3525                <1> 	db '5','%'	;,6h
  3363 0000260B 365E                <1> 	db '6','^'	;,7h
  3364 0000260D 3726                <1> 	db '7','&'	;,8h
  3365 0000260F 382A                <1> 	db '8','*'	;,9h
  3366 00002611 3928                <1> 	db '9','('	;,0Ah
  3367 00002613 3029                <1> 	db '0',')'	;,0Bh
  3368 00002615 2D5F                <1> 	db '-','_'	;,0Ch
  3369 00002617 3D2B                <1> 	db '=','+'	;,0Dh
  3370 00002619 0808                <1> 	db 8,8		;,0Eh
  3371 0000261B 0000                <1> 	db 0,0		;,0Fh
  3372 0000261D 7151                <1> 	db 'q','Q'	;,10h
  3373 0000261F 7757                <1> 	db 'w','W'	;,11h
  3374 00002621 6545                <1> 	db 'e','E'	;,12h
  3375 00002623 7252                <1> 	db 'r','R'	;,13h
  3376 00002625 7454                <1> 	db 't','T'	;,14h
  3377 00002627 7959                <1> 	db 'y','Y'	;,15h
  3378 00002629 7555                <1> 	db 'u','U'	;,16h
  3379 0000262B 6949                <1> 	db 'i','I'	;,17h
  3380 0000262D 6F4F                <1> 	db 'o','O'	;,18h
  3381 0000262F 7050                <1> 	db 'p','P'	;,19h
  3382 00002631 5B7B                <1> 	db '[','{'	;,1Ah
  3383 00002633 5D7D                <1> 	db ']','}'	;,1Bh
  3384 00002635 0000                <1> 	db 0,0		;,1Ch
  3385 00002637 0000                <1> 	db 0,0		;,1Dh
  3386 00002639 6141                <1> 	db 'a','A'	;,1Eh
  3387 0000263B 7353                <1> 	db 's','S'	;,1Fh
  3388 0000263D 6444                <1> 	db 'd','D'	;,20h
  3389 0000263F 6646                <1> 	db 'f','F'	;,21h
  3390 00002641 6747                <1> 	db 'g','G'	;,22h
  3391 00002643 6848                <1> 	db 'h','H'	;,23h
  3392 00002645 6A4A                <1> 	db 'j','J'	;,24h
  3393 00002647 6B4B                <1> 	db 'k','K'	;,25h
  3394 00002649 6C4C                <1> 	db 'l','L'	;,26h
  3395 0000264B 3B3A                <1> 	db ';',':'	;,27h
  3396 0000264D 2722                <1> 	db 27h,22h	;,28h
  3397 0000264F 607E                <1> 	db '`','~'	;,29h
  3398 00002651 0000                <1> 	db 0,0		;,2Ah
  3399 00002653 5C7C                <1> 	db '\','|'	;,2Bh
  3400 00002655 7A5A                <1> 	db 'z','Z'	;,2Ch
  3401 00002657 7858                <1> 	db 'x','X'	;,2Dh
  3402 00002659 6343                <1> 	db 'c','C'	;,2Eh
  3403 0000265B 7656                <1> 	db 'v','V'	;,2Fh
  3404 0000265D 6242                <1> 	db 'b','B'	;,30h
  3405 0000265F 6E4E                <1> 	db 'n','N'	;,31h
  3406 00002661 6D4D                <1> 	db 'm','M'	;,32h
  3407 00002663 2C3C                <1> 	db ',','<'	;,33h
  3408 00002665 2E3E                <1> 	db '.','>'	;,34h
  3409 00002667 2F3F                <1> 	db '/','?'	;,35h
  3410 00002669 0000                <1> 	db 0,0		;,36h
  3411 0000266B 0000                <1> 	db 0,0		;,37h
  3412 0000266D 0000                <1> 	db 0,0		;,38h
  3413 0000266F 2020                <1> 	db ' ',' '	;,39h
  3414                              <1> noscan:
  3415                                      %include 'source/gui.asm'
  3416                              <1> guiclear:
  3417 00002671 8B3D[9C6C0000]      <1> 	mov edi, [physbaseptr]
  3418 00002677 668B15[3C370000]    <1> 	mov dx, [resolutionx]
  3419 0000267E 668B0D[3A370000]    <1> 	mov cx, [resolutiony]
  3420 00002685 66A1[AE260000]      <1> 	mov ax, [background]
  3421                              <1> guiclearloop:
  3422 0000268B 668907              <1> 	mov [edi], ax
  3423 0000268E 81C702000000        <1> 	add edi, 2
  3424 00002694 664A                <1> 	dec dx
  3425 00002696 6681FA0000          <1> 	cmp dx, 0
  3426 0000269B 77EE                <1> 	ja guiclearloop
  3427 0000269D 6649                <1> 	dec cx
  3428 0000269F 668B15[3C370000]    <1> 	mov dx, [resolutionx]
  3429 000026A6 6681F90000          <1> 	cmp cx, 0
  3430 000026AB 77DE                <1> 	ja guiclearloop
  3431 000026AD C3                  <1> 	ret
  3432                              <1> 
  3433 000026AE CF7B                <1> background dw 0111101111001111b
  3434                              <1> 
  3435                              <1> gui:	;Let's see what I can do
  3436                              <1> 	;I am going to try to make this as freestanding as possible
  3437 000026B0 E898EDFFFF          <1> 	call indexfiles
  3438 000026B5 8B3D[9C6C0000]      <1> 	mov edi, [physbaseptr]
  3439 000026BB 668B15[3C370000]    <1> 	mov dx, [resolutionx]
  3440 000026C2 668B0D[3A370000]    <1> 	mov cx, [resolutiony]
  3441 000026C9 668B1D[AE260000]    <1> 	mov bx, [background]
  3442                              <1> guiclearloop2:
  3443 000026D0 66891F              <1> 	mov [edi], bx
  3444 000026D3 81C702000000        <1> 	add edi, 2
  3445 000026D9 664A                <1> 	dec dx
  3446 000026DB 6681FA0000          <1> 	cmp dx, 0
  3447 000026E0 77EE                <1> 	ja guiclearloop2
  3448 000026E2 6649                <1> 	dec cx
  3449 000026E4 668B15[3C370000]    <1> 	mov dx, [resolutionx]
  3450 000026EB 6681F90000          <1> 	cmp cx, 0
  3451 000026F0 77DE                <1> 	ja guiclearloop2
  3452                              <1> ;	mov esi, [physbaseptr]
  3453                              <1> ;	mov [offscreenmemoffset], esi
  3454                              <1> ;	mov esi, 0xA00000
  3455                              <1> ;	mov [physbaseptr], esi
  3456                              <1> ;	call guiclear
  3457 000026F2 C605[1E290000]01    <1> 	mov byte [guion], 1
  3458 000026F9 B800000000          <1> 	mov eax, 0
  3459 000026FE BB00000000          <1> 	mov ebx, 0
  3460 00002703 B900000000          <1> 	mov ecx, 0
  3461 00002708 BA00000000          <1> 	mov edx, 0
  3462                              <1> 	
  3463 0000270D BE[A2390000]        <1> 	mov esi, pacmsg
  3464 00002712 66B80000            <1> 	mov ax, 0
  3465 00002716 BB00000000          <1> 	mov ebx, 0
  3466 0000271B 66B90200            <1> 	mov cx, 2
  3467 0000271F 66BA0400            <1> 	mov dx, 4
  3468 00002723 E8BA0B0000          <1> 	call showstring
  3469                              <1> 	
  3470 00002728 BE[AE3A0000]        <1> 	mov esi, interneticon
  3471 0000272D 66B80000            <1> 	mov ax, 0
  3472 00002731 BB[173A0000]        <1> 	mov ebx, noie
  3473 00002736 66B91800            <1> 	mov cx, 24
  3474 0000273A 66BA0400            <1> 	mov dx, 4
  3475 0000273E E81E0F0000          <1> 	call showicon
  3476                              <1> 	
  3477 00002743 BE[303B0000]        <1> 	mov esi, wordicon
  3478 00002748 66B80000            <1> 	mov ax, 0
  3479 0000274C BB00000000          <1> 	mov ebx, 0
  3480 00002751 66B91800            <1> 	mov cx, 24
  3481 00002755 66BA3000            <1> 	mov dx, 48
  3482 00002759 E8030F0000          <1> 	call showicon
  3483                              <1> 	
  3484 0000275E BE[B23B0000]        <1> 	mov esi, pacmanpellet
  3485 00002763 66B80000            <1> 	mov ax, 0
  3486 00002767 BB00000000          <1> 	mov ebx, 0
  3487 0000276C 66B94000            <1> 	mov cx, 64
  3488 00002770 66BA0400            <1> 	mov dx, 4
  3489 00002774 E8E80E0000          <1> 	call showicon
  3490                              <1> 	
  3491 00002779 BE[B63C0000]        <1> 	mov esi, pacman
  3492 0000277E 66B80000            <1> 	mov ax, 0
  3493 00002782 BB[FC390000]        <1> 	mov ebx, pacmannomnom
  3494 00002787 66B94000            <1> 	mov cx, 64
  3495 0000278B 66BA3000            <1> 	mov dx, 48
  3496 0000278F E8CD0E0000          <1> 	call showicon
  3497                              <1> 	
  3498 00002794 BE[343C0000]        <1> 	mov esi, ghostie
  3499 00002799 66B80000            <1> 	mov ax, 0
  3500 0000279D BB[E1390000]        <1> 	mov ebx, boo
  3501 000027A2 66B96C00            <1> 	mov cx, 108
  3502 000027A6 66BA0400            <1> 	mov dx, 4
  3503 000027AA E8B20E0000          <1> 	call showicon
  3504                              <1> 
  3505 000027AF BE[8E390000]        <1> 	mov esi, start
  3506 000027B4 668B0D[3A370000]    <1> 	mov cx, [resolutiony]
  3507 000027BB 6681E91000          <1> 	sub cx, 16
  3508 000027C0 66BA0200            <1> 	mov dx, 2
  3509 000027C4 B400                <1> 	mov ah, 0
  3510 000027C6 B010                <1> 	mov al, 00010000b
  3511 000027C8 BB[5B3A0000]        <1> 	mov ebx, winblows
  3512 000027CD E8100B0000          <1> 	call showstring
  3513                              <1> 	
  3514 000027D2 E872FCFFFF          <1> 	call cursorgui
  3515                              <1> guistart:
  3516 000027D7 E8A8FBFFFF          <1> 	call guistartin
  3517 000027DC C605[17290000]00    <1> 	mov byte [copygui], 0
  3518 000027E3 EBF2                <1> 	jmp guistart
  3519                              <1> 	
  3520                              <1> guicopy:	;;for double buffering
  3521 000027E5 C605[17290000]01    <1> 	mov byte [copygui], 1
  3522 000027EC 8B3D[A06C0000]      <1> 	mov edi, [offscreenmemoffset]
  3523 000027F2 BA00000000          <1> 	mov edx, 0
  3524 000027F7 B900000000          <1> 	mov ecx, 0
  3525 000027FC 668B15[F9250000]    <1> 	mov dx, [mousecursorposition]
  3526 00002803 668B0D[FB250000]    <1> 	mov cx, [mousecursorposition + 2]
  3527 0000280A 01D7                <1> 	add edi, edx
  3528 0000280C 668B15[3E370000]    <1> 	mov dx, [resolutionx2]
  3529 00002813 6641                <1> 	inc cx
  3530                              <1> guicp2:
  3531 00002815 01D7                <1> 	add edi, edx
  3532 00002817 6649                <1> 	dec cx
  3533 00002819 6681F90000          <1> 	cmp cx, 0
  3534 0000281E 75F5                <1> 	jne guicp2
  3535 00002820 29D7                <1> 	sub edi, edx
  3536 00002822 893D[EA280000]      <1> 	mov [cursorloc], edi
  3537 00002828 BB[E7490000]        <1> 	mov ebx, cursorbmp
  3538 0000282D 668B0D[3A370000]    <1> 	mov cx, [resolutiony]
  3539 00002834 C1C110              <1> 	rol ecx, 16
  3540 00002837 668B0D[3C370000]    <1> 	mov cx, [resolutionx]
  3541 0000283E 8B35[9C6C0000]      <1> 	mov esi, [physbaseptr]
  3542 00002844 8B3D[A06C0000]      <1> 	mov edi, [offscreenmemoffset]
  3543                              <1> guicp1:
  3544 0000284A 668B06              <1> 	mov ax, [esi]
  3545 0000284D 668907              <1> 	mov [edi], ax
  3546 00002850 81C602000000        <1> 	add esi, 2
  3547 00002856 81C702000000        <1> 	add edi, 2
  3548 0000285C 3B3D[EA280000]      <1> 	cmp edi, [cursorloc]
  3549 00002862 7427                <1> 	je copycursor
  3550                              <1> dncopycursor:
  3551 00002864 6649                <1> 	dec cx
  3552 00002866 6681F90000          <1> 	cmp cx, 0
  3553 0000286B 75DD                <1> 	jne guicp1
  3554 0000286D 668B0D[3C370000]    <1> 	mov cx, [resolutionx]
  3555 00002874 C1C110              <1> 	rol ecx, 16
  3556 00002877 6649                <1> 	dec cx
  3557 00002879 6681F90000          <1> 	cmp cx, 0
  3558 0000287E C1C110              <1> 	rol ecx, 16
  3559 00002881 75C7                <1> 	jne guicp1
  3560 00002883 C605[17290000]00    <1> 	mov byte [copygui], 0
  3561 0000288A C3                  <1> 	ret
  3562                              <1> copycursor:
  3563 0000288B 81FB[674A0000]      <1> 	cmp ebx, cursorbmpend
  3564 00002891 73D1                <1> 	jae dncopycursor
  3565 00002893 668B15[3E370000]    <1> 	mov dx, [resolutionx2]
  3566 0000289A 01D7                <1> 	add edi, edx
  3567 0000289C 893D[EA280000]      <1> 	mov [cursorloc], edi
  3568 000028A2 29D7                <1> 	sub edi, edx
  3569 000028A4 4B                  <1> 	dec ebx
  3570 000028A5 81EF02000000        <1> 	sub edi, 2
  3571 000028AB 81EE02000000        <1> 	sub esi, 2
  3572 000028B1 66BA0900            <1> 	mov dx, 9
  3573                              <1> curscplp:
  3574 000028B5 43                  <1> 	inc ebx
  3575 000028B6 81C602000000        <1> 	add esi, 2
  3576 000028BC 81C702000000        <1> 	add edi, 2
  3577 000028C2 668B06              <1> 	mov ax, [esi]
  3578 000028C5 668907              <1> 	mov [edi], ax
  3579 000028C8 8A03                <1> 	mov al, [ebx]
  3580 000028CA 3C00                <1> 	cmp al, 0
  3581 000028CC 7405                <1> 	je curscplp2
  3582 000028CE 66C7079CE7          <1> 	mov word [edi], 1110011110011100b
  3583                              <1> curscplp2:
  3584 000028D3 6649                <1> 	dec cx
  3585 000028D5 6681F90000          <1> 	cmp cx, 0
  3586 000028DA 7488                <1> 	je dncopycursor
  3587 000028DC 664A                <1> 	dec dx
  3588 000028DE 6681FA0000          <1> 	cmp dx, 0
  3589 000028E3 75D0                <1> 	jne curscplp
  3590 000028E5 E97AFFFFFF          <1> 	jmp dncopycursor
  3591                              <1> 	
  3592                              <1> 	
  3593 000028EA 00000000            <1> cursorloc: dd 0
  3594                              <1> 		
  3595                              <1> nextimage:	
  3596 000028EE E87EFDFFFF          <1> 	call guiclear
  3597 000028F3 8B35[85390000]      <1> 	mov esi, [bmpend]
  3598 000028F9 B800000000          <1> 	mov eax, 0
  3599 000028FE BB00000000          <1> 	mov ebx, 0
  3600 00002903 B900000000          <1> 	mov ecx, 0
  3601 00002908 BA00000000          <1> 	mov edx, 0
  3602 0000290D E8D70F0000          <1> 	call showbmp
  3603 00002912 E96DFAFFFF          <1> 	jmp guistartin
  3604                              <1> 		
  3605 00002917 00                  <1> copygui db 0
  3606 00002918 00                  <1> graphicsset db 0
  3607 00002919 0000                <1> graphicspos db 0,0
  3608 0000291B 00                  <1> showcursorfonton db 0
  3609 0000291C 00                  <1> savefonton db 0
  3610 0000291D 00                  <1> mouseselecton db 0
  3611 0000291E 00                  <1> guion db 0
  3612                              <1> 
  3613                              <1> 		
  3614                              <1> clearmousecursor:
  3615 0000291F BE[AE260000]        <1> 		mov esi, background
  3616 00002924 8B3D[9C6C0000]      <1> 		mov edi, [physbaseptr]
  3617 0000292A BA00000000          <1> 		mov edx, 0
  3618 0000292F B900000000          <1> 		mov ecx, 0
  3619 00002934 668B15[F5250000]    <1> 		mov dx, [lastmouseposition]
  3620 0000293B 668B0D[F7250000]    <1> 		mov cx, [lastmouseposition + 2]
  3621 00002942 01D7                <1> 		add edi, edx
  3622 00002944 BA00000000          <1> 		mov edx, 0
  3623 00002949 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  3624 00002950 6681F90000          <1> 		cmp cx, 0
  3625 00002955 740B                <1> 		je noyclr
  3626 00002957 01D7                <1> yclr:	add edi, edx
  3627 00002959 6649                <1> 		dec cx
  3628 0000295B 6681F90000          <1> 		cmp cx, 0
  3629 00002960 75F5                <1> 		jne yclr
  3630 00002962 668B06              <1> noyclr:	mov ax, [esi]
  3631 00002965 C1C010              <1> 		rol eax, 16
  3632 00002968 668B06              <1> 		mov ax, [esi]
  3633 0000296B 8907                <1> 		mov [edi], eax
  3634 0000296D 894704              <1> 		mov [edi + 4], eax
  3635 00002970 894708              <1> 		mov [edi + 8], eax
  3636 00002973 89470C              <1> 		mov [edi + 12], eax
  3637 00002976 01D7                <1> 		add edi, edx
  3638 00002978 6641                <1> 		inc cx
  3639 0000297A 6681F91000          <1> 		cmp cx, 16
  3640 0000297F 72E1                <1> 		jb noyclr
  3641 00002981 C3                  <1> 		ret
  3642                              <1> 
  3643                              <1> switchmousepos:		;;switch were the mouse is located
  3644 00002982 BE[674C0000]        <1> 		mov esi, mousecolorbuf
  3645 00002987 8B3D[9C6C0000]      <1> 		mov edi, [physbaseptr]
  3646 0000298D BA00000000          <1> 		mov edx, 0
  3647 00002992 B900000000          <1> 		mov ecx, 0
  3648 00002997 668B15[F5250000]    <1> 		mov dx, [lastmouseposition]
  3649 0000299E 668B0D[F7250000]    <1> 		mov cx, [lastmouseposition + 2]
  3650 000029A5 01D7                <1> 		add edi, edx
  3651 000029A7 BA00000000          <1> 		mov edx, 0
  3652 000029AC 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  3653 000029B3 6681F90000          <1> 		cmp cx, 0
  3654 000029B8 740B                <1> 		je noswmsy
  3655 000029BA 01D7                <1> swmsy:		add edi, edx
  3656 000029BC 6649                <1> 		dec cx
  3657 000029BE 6681F90000          <1> 		cmp cx, 0
  3658 000029C3 75F5                <1> 		jne swmsy
  3659 000029C5 8B06                <1> noswmsy:	mov eax, [esi]
  3660 000029C7 8B5E04              <1> 		mov ebx, [esi + 4]
  3661 000029CA 8907                <1> 		mov [edi], eax
  3662 000029CC 895F04              <1> 		mov [edi + 4], ebx
  3663 000029CF 8B4608              <1> 		mov eax, [esi + 8]
  3664 000029D2 8B5E0C              <1> 		mov ebx, [esi + 12]
  3665 000029D5 894708              <1> 		mov [edi + 8], eax
  3666 000029D8 895F0C              <1> 		mov [edi + 12], ebx
  3667 000029DB 01D7                <1> 		add edi, edx
  3668 000029DD 81C610000000        <1> 		add esi, 16
  3669 000029E3 81FE[674D0000]      <1> 		cmp esi, mcolorend
  3670 000029E9 72DA                <1> 		jb noswmsy
  3671                              <1> 		
  3672                              <1> switchmousepos2:
  3673 000029EB BE[674C0000]        <1> 		mov esi, mousecolorbuf
  3674 000029F0 8B3D[9C6C0000]      <1> 		mov edi, [physbaseptr]
  3675 000029F6 BA00000000          <1> 		mov edx, 0
  3676 000029FB B900000000          <1> 		mov ecx, 0
  3677 00002A00 668B15[F9250000]    <1> 		mov dx, [mousecursorposition]
  3678 00002A07 668B0D[FB250000]    <1> 		mov cx, [mousecursorposition + 2]
  3679 00002A0E 01D7                <1> 		add edi, edx
  3680 00002A10 BA00000000          <1> 		mov edx, 0
  3681 00002A15 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  3682 00002A1C 6681F90000          <1> 		cmp cx, 0
  3683 00002A21 740B                <1> 		je noswmsy2
  3684 00002A23 01D7                <1> swmsy2:		add edi, edx
  3685 00002A25 6649                <1> 		dec cx
  3686 00002A27 6681F90000          <1> 		cmp cx, 0
  3687 00002A2C 75F5                <1> 		jne swmsy2
  3688 00002A2E 8B07                <1> noswmsy2:	mov eax, [edi]
  3689 00002A30 8B5F04              <1> 		mov ebx, [edi + 4]
  3690 00002A33 8906                <1> 		mov [esi], eax
  3691 00002A35 895E04              <1> 		mov [esi + 4], ebx
  3692 00002A38 8B4708              <1> 		mov eax, [edi + 8]
  3693 00002A3B 8B5F0C              <1> 		mov ebx, [edi + 12]
  3694 00002A3E 894608              <1> 		mov [esi + 8], eax
  3695 00002A41 895E0C              <1> 		mov [esi + 12], ebx
  3696 00002A44 01D7                <1> 		add edi, edx
  3697 00002A46 81C610000000        <1> 		add esi, 16
  3698 00002A4C 81FE[674D0000]      <1> 		cmp esi, mcolorend
  3699 00002A52 72DA                <1> 		jb noswmsy2
  3700 00002A54 C3                  <1> 		ret
  3701                              <1> 
  3702 00002A55 00                  <1> pbutton db 0
  3703 00002A56 00                  <1> pLBUTTON db 0
  3704 00002A57 00                  <1> pRBUTTON db 0
  3705 00002A58 00000000            <1> dragging dw 0,0
  3706 00002A5C 0000000000000000    <1> lastpos dw 0,0,0,0
  3707 00002A64 00000000            <1> colorbuf dw 0,0
  3708                              <1> 	
  3709                              <1> 	clickicon:
  3710 00002A68 B001                <1> 		mov al, 1
  3711 00002A6A A2[552A0000]        <1> 		mov [pbutton], al
  3712 00002A6F A0[562A0000]        <1> 		mov al, [pLBUTTON]
  3713 00002A74 2205[7F230000]      <1> 		and al, [LBUTTON]
  3714 00002A7A 8A25[572A0000]      <1> 		mov ah, [pRBUTTON]
  3715 00002A80 2225[80230000]      <1> 		and ah, [RBUTTON]
  3716 00002A86 08E0                <1> 		or al, ah
  3717 00002A88 3C00                <1> 		cmp al, 0
  3718 00002A8A 741B                <1> 		je nodragclick
  3719 00002A8C 813D[582A0000]0100- <1> 		cmp dword [dragging], 1
  3720 00002A94 0000                <1>
  3721 00002A96 732D                <1> 		jae dragclick
  3722 00002A98 C705[582A0000]0100- <1> 		mov dword [dragging], 1
  3723 00002AA0 0000                <1>
  3724 00002AA2 E91E000000          <1> 		jmp dragclick
  3725                              <1> 	nodragclick:
  3726 00002AA7 C705[582A0000]0000- <1> 		mov dword [dragging], 0
  3727 00002AAF 0000                <1>
  3728 00002AB1 A0[7F230000]        <1> 		mov al, [LBUTTON]
  3729 00002AB6 A2[562A0000]        <1> 		mov [pLBUTTON], al
  3730 00002ABB A0[80230000]        <1> 		mov al, [RBUTTON]
  3731 00002AC0 A2[572A0000]        <1> 		mov [pRBUTTON], al
  3732                              <1> 	dragclick:
  3733 00002AC5 66B80000            <1> 		mov ax, 0
  3734 00002AC9 BE[674A0000]        <1> 		mov esi, graphicstable
  3735 00002ACE C705[DC390000]0000- <1> 		mov dword [codepointer], 0
  3736 00002AD6 0000                <1>
  3737                              <1> 	clicon2:
  3738 00002AD8 BA00000000          <1> 		mov edx, 0
  3739 00002ADD B900000000          <1> 		mov ecx, 0
  3740 00002AE2 66813E0100          <1> 		cmp word [esi], 1
  3741 00002AE7 0F841B000000        <1> 		je near iconselect
  3742 00002AED 66813E0200          <1> 		cmp word [esi], 2
  3743 00002AF2 0F8472010000        <1> 		je near textselected
  3744 00002AF8 66813E0300          <1> 		cmp word [esi], 3
  3745 00002AFD 0F84C7020000        <1> 		je near windowselect
  3746 00002B03 E901040000          <1> 		jmp nexticonsel
  3747                              <1> 	iconselect:
  3748 00002B08 668B5606            <1> 		mov dx, [esi + 6]
  3749 00002B0C 6689D0              <1> 		mov ax, dx
  3750 00002B0F 668B4E08            <1> 		mov cx, [esi + 8]
  3751 00002B13 6689CB              <1> 		mov bx, cx
  3752 00002B16 6681C32000          <1> 		add bx, 32
  3753 00002B1B 6601D0              <1> 		add ax, dx
  3754 00002B1E 813D[582A0000]0100- <1> 		cmp dword [dragging], 1
  3755 00002B26 0000                <1>
  3756 00002B28 746F                <1> 		je dragicon
  3757 00002B2A 813D[582A0000]0000- <1> 		cmp dword [dragging], 0
  3758 00002B32 0000                <1>
  3759 00002B34 7411                <1> 		je nodragiconcheck
  3760 00002B36 3935[582A0000]      <1> 		cmp dword [dragging], esi
  3761 00002B3C 0F85C7030000        <1> 		jne near nexticonsel
  3762 00002B42 E952000000          <1> 		jmp dragicon
  3763                              <1> 	nodragiconcheck:
  3764 00002B47 663905[F9250000]    <1> 		cmp [mousecursorposition], ax
  3765 00002B4E 0F82B5030000        <1> 		jb near nexticonsel
  3766 00002B54 66054000            <1> 		add ax, 64
  3767 00002B58 663905[F9250000]    <1> 		cmp [mousecursorposition], ax
  3768 00002B5F 0F87A4030000        <1> 		ja near nexticonsel
  3769 00002B65 6629D0              <1> 		sub ax, dx
  3770 00002B68 66390D[FB250000]    <1> 		cmp [mousecursorposition + 2], cx
  3771 00002B6F 0F8294030000        <1> 		jb near nexticonsel
  3772 00002B75 66391D[FB250000]    <1> 		cmp [mousecursorposition + 2], bx
  3773 00002B7C 0F8787030000        <1> 		ja near nexticonsel
  3774 00002B82 668B460A            <1> 		mov ax, [esi + 10]
  3775 00002B86 66250100            <1> 		and ax, 1
  3776 00002B8A 663D0100            <1> 		cmp ax, 1
  3777 00002B8E 0F84B6000000        <1> 		je near unselecticon
  3778 00002B94 E98D000000          <1> 		jmp nodragicon
  3779                              <1> 	dragicon:
  3780 00002B99 663905[F5250000]    <1> 		cmp [lastmouseposition], ax
  3781 00002BA0 0F8263030000        <1> 		jb near nexticonsel
  3782 00002BA6 66054000            <1> 		add ax, 64
  3783 00002BAA 663905[F5250000]    <1> 		cmp [lastmouseposition], ax
  3784 00002BB1 0F8752030000        <1> 		ja near nexticonsel
  3785 00002BB7 6629D0              <1> 		sub ax, dx
  3786 00002BBA 66390D[F7250000]    <1> 		cmp [lastmouseposition + 2], cx
  3787 00002BC1 0F8242030000        <1> 		jb near nexticonsel
  3788 00002BC7 66391D[F7250000]    <1> 		cmp [lastmouseposition + 2], bx
  3789 00002BCE 0F8735030000        <1> 		ja near nexticonsel
  3790 00002BD4 668B460A            <1> 		mov ax, [esi + 10]
  3791 00002BD8 2410                <1> 		and al, 00010000b
  3792 00002BDA 3C10                <1> 		cmp al, 00010000b
  3793 00002BDC 7448                <1> 		je nodragicon
  3794 00002BDE 8935[582A0000]      <1> 		mov [dragging], esi
  3795 00002BE4 66D1E2              <1> 		shl dx, 1
  3796 00002BE7 662B15[F5250000]    <1> 		sub dx, [lastmouseposition]
  3797 00002BEE 660315[F9250000]    <1> 		add dx, [mousecursorposition]
  3798 00002BF5 66D1EA              <1> 		shr dx, 1
  3799 00002BF8 66030D[FB250000]    <1> 		add cx, [mousecursorposition + 2]
  3800 00002BFF 662B0D[F7250000]    <1> 		sub cx, [lastmouseposition + 2]
  3801 00002C06 663B15[3E370000]    <1> 		cmp dx, [resolutionx2]
  3802 00002C0D 7607                <1> 		jbe chkyresdrgicn
  3803 00002C0F 668B15[F9250000]    <1> 		mov dx, [mousecursorposition]
  3804                              <1> 	chkyresdrgicn:
  3805 00002C16 663B0D[3A370000]    <1> 		cmp cx, [resolutiony]
  3806 00002C1D 7607                <1> 		jbe nodragicon
  3807 00002C1F 668B0D[FB250000]    <1> 		mov cx, [mousecursorposition + 2]
  3808                              <1> 	nodragicon:
  3809 00002C26 66814E0A0100        <1> 		or word [esi + 10], 1
  3810 00002C2C 8B5E0C              <1> 		mov ebx, [esi + 12]
  3811 00002C2F 668B460A            <1> 		mov ax, [esi + 10]
  3812 00002C33 8B7602              <1> 		mov esi, [esi + 2]
  3813 00002C36 C705[DC390000]0000- <1> 		mov dword [codepointer], 0
  3814 00002C3E 0000                <1>
  3815 00002C40 E81C0A0000          <1> 		call showicon
  3816 00002C45 E9D8020000          <1> 		jmp doneiconsel
  3817                              <1> 	unselecticon:
  3818 00002C4A 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3819 00002C50 8B5E0C              <1> 		mov ebx, [esi + 12]
  3820 00002C53 668B460A            <1> 		mov ax, [esi + 10]
  3821 00002C57 8B7602              <1> 		mov esi, [esi + 2]
  3822 00002C5A 891D[DC390000]      <1> 		mov [codepointer], ebx
  3823 00002C60 E8FC090000          <1> 		call showicon
  3824 00002C65 E9B8020000          <1> 		jmp doneiconsel
  3825                              <1> 	textselected:
  3826 00002C6A 8B5E02              <1> 		mov ebx, [esi + 2]
  3827 00002C6D 668B5606            <1> 		mov dx, [esi + 6]
  3828 00002C71 6689D0              <1> 		mov ax, dx
  3829 00002C74 668B4E08            <1> 		mov cx, [esi + 8]
  3830                              <1> 	lengthtesttext:
  3831 00002C78 803B00              <1> 		cmp byte [ebx], 0
  3832 00002C7B 7407                <1> 		je donetesttextlength
  3833 00002C7D 43                  <1> 		inc ebx
  3834 00002C7E 66051000            <1> 		add ax, 16
  3835 00002C82 EBF4                <1> 		jmp lengthtesttext
  3836                              <1> 	donetesttextlength:
  3837 00002C84 6689CB              <1> 		mov bx, cx
  3838 00002C87 6681C30F00          <1> 		add bx, 15
  3839 00002C8C 813D[582A0000]0100- <1> 		cmp dword [dragging], 1
  3840 00002C94 0000                <1>
  3841 00002C96 7468                <1> 		je dragtext
  3842 00002C98 813D[582A0000]0000- <1> 		cmp dword [dragging], 0
  3843 00002CA0 0000                <1>
  3844 00002CA2 7411                <1> 		je nodragtextcheck
  3845 00002CA4 3935[582A0000]      <1> 		cmp dword [dragging], esi
  3846 00002CAA 0F8559020000        <1> 		jne near nexticonsel
  3847 00002CB0 E94B000000          <1> 		jmp dragtext
  3848                              <1> 	nodragtextcheck:
  3849 00002CB5 663915[F9250000]    <1> 		cmp [mousecursorposition], dx
  3850 00002CBC 0F8247020000        <1> 		jb near nexticonsel
  3851 00002CC2 663905[F9250000]    <1> 		cmp [mousecursorposition], ax
  3852 00002CC9 0F873A020000        <1> 		ja near nexticonsel
  3853 00002CCF 66390D[FB250000]    <1> 		cmp [mousecursorposition + 2], cx
  3854 00002CD6 0F822D020000        <1> 		jb near nexticonsel
  3855 00002CDC 66391D[FB250000]    <1> 		cmp [mousecursorposition + 2], bx
  3856 00002CE3 0F8720020000        <1> 		ja near nexticonsel
  3857 00002CE9 668B460A            <1> 		mov ax, [esi + 10]
  3858 00002CED 66250100            <1> 		and ax, 1
  3859 00002CF1 663D0100            <1> 		cmp ax, 1
  3860 00002CF5 0F84AB000000        <1> 		je near unselecttext
  3861 00002CFB E986000000          <1> 		jmp nodragtext
  3862                              <1> 	dragtext:
  3863 00002D00 663915[F5250000]    <1> 		cmp [lastmouseposition], dx
  3864 00002D07 0F82FC010000        <1> 		jb near nexticonsel
  3865 00002D0D 663905[F5250000]    <1> 		cmp [lastmouseposition], ax
  3866 00002D14 0F87EF010000        <1> 		ja near nexticonsel
  3867 00002D1A 66390D[F7250000]    <1> 		cmp [lastmouseposition + 2], cx
  3868 00002D21 0F82E2010000        <1> 		jb near nexticonsel
  3869 00002D27 66391D[F7250000]    <1> 		cmp [lastmouseposition + 2], bx
  3870 00002D2E 0F87D5010000        <1> 		ja near nexticonsel
  3871 00002D34 668B460A            <1> 		mov ax, [esi + 10]
  3872 00002D38 2410                <1> 		and al, 00010000b
  3873 00002D3A 663D1000            <1> 		cmp ax, 00010000b
  3874 00002D3E 0F8442000000        <1> 		je near nodragtext
  3875 00002D44 8935[582A0000]      <1> 		mov [dragging], esi
  3876 00002D4A 662B15[F5250000]    <1> 		sub dx, [lastmouseposition]
  3877 00002D51 660315[F9250000]    <1> 		add dx, [mousecursorposition]
  3878 00002D58 66030D[FB250000]    <1> 		add cx, [mousecursorposition + 2]
  3879 00002D5F 662B0D[F7250000]    <1> 		sub cx, [lastmouseposition + 2]
  3880 00002D66 663B15[3E370000]    <1> 		cmp dx, [resolutionx2]
  3881 00002D6D 7607                <1> 		jbe chkyresdrgtxt
  3882 00002D6F 668B15[F9250000]    <1> 		mov dx, [mousecursorposition]
  3883                              <1> 	chkyresdrgtxt:
  3884 00002D76 663B0D[3A370000]    <1> 		cmp cx, [resolutiony]
  3885 00002D7D 7607                <1> 		jbe nodragtext
  3886 00002D7F 668B0D[FB250000]    <1> 		mov cx, [mousecursorposition + 2]
  3887                              <1> 	nodragtext:
  3888 00002D86 66814E0A0100        <1> 		or word [esi + 10], 1
  3889 00002D8C 8B5E0C              <1> 		mov ebx, [esi + 12]
  3890 00002D8F 891D[DC390000]      <1> 		mov [codepointer], ebx
  3891 00002D95 668B460A            <1> 		mov ax, [esi + 10]
  3892 00002D99 8B7602              <1> 		mov esi, [esi + 2]
  3893 00002D9C E841050000          <1> 		call showstring
  3894 00002DA1 E97C010000          <1> 		jmp doneiconsel
  3895                              <1> 	unselecttext:
  3896 00002DA6 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3897 00002DAC 8B5E0C              <1> 		mov ebx, [esi + 12]
  3898 00002DAF 668B460A            <1> 		mov ax, [esi + 10]
  3899 00002DB3 8B7602              <1> 		mov esi, [esi + 2]
  3900 00002DB6 C705[DC390000]0000- <1> 		mov dword [codepointer], 0
  3901 00002DBE 0000                <1>
  3902 00002DC0 E81D050000          <1> 		call showstring
  3903 00002DC5 E958010000          <1> 		jmp doneiconsel
  3904                              <1> windowselect:
  3905 00002DCA 8B7E02              <1> 		mov edi, [esi + 2]
  3906 00002DCD 668B5606            <1> 		mov dx, [esi + 6]
  3907 00002DD1 6689D0              <1> 		mov ax, dx
  3908 00002DD4 668B4E08            <1> 		mov cx, [esi + 8]
  3909 00002DD8 6689CB              <1> 		mov bx, cx
  3910 00002DDB 6681C31000          <1> 		add bx, 16
  3911 00002DE0 813D[582A0000]0100- <1> 		cmp dword [dragging], 1
  3912 00002DE8 0000                <1>
  3913 00002DEA 746D                <1> 		je dragwin
  3914 00002DEC 813D[582A0000]0000- <1> 		cmp dword [dragging], 0
  3915 00002DF4 0000                <1>
  3916 00002DF6 7411                <1> 		je nodragwincheck
  3917 00002DF8 3935[582A0000]      <1> 		cmp dword [dragging], esi
  3918 00002DFE 0F8505010000        <1> 		jne near nexticonsel
  3919 00002E04 E950000000          <1> 		jmp dragwin
  3920                              <1> 	nodragwincheck:
  3921 00002E09 663905[F9250000]    <1> 		cmp [mousecursorposition], ax
  3922 00002E10 0F82F3000000        <1> 		jb near nexticonsel
  3923 00002E16 660307              <1> 		add ax, [edi]
  3924 00002E19 660307              <1> 		add ax, [edi]
  3925 00002E1C 663905[F9250000]    <1> 		cmp [mousecursorposition], ax
  3926 00002E23 0F87E0000000        <1> 		ja near nexticonsel
  3927 00002E29 66390D[FB250000]    <1> 		cmp [mousecursorposition + 2], cx
  3928 00002E30 0F82D3000000        <1> 		jb near nexticonsel
  3929 00002E36 66391D[FB250000]    <1> 		cmp [mousecursorposition + 2], bx
  3930 00002E3D 0F87C6000000        <1> 		ja near nexticonsel
  3931 00002E43 662D1400            <1> 		sub ax, 20
  3932 00002E47 663905[F9250000]    <1> 		cmp [mousecursorposition], ax
  3933 00002E4E 0F8795000000        <1> 		ja near killwin
  3934 00002E54 E97C000000          <1> 		jmp nodragwin
  3935                              <1> 	dragwin:
  3936 00002E59 663905[F5250000]    <1> 		cmp [lastmouseposition], ax
  3937 00002E60 0F82A3000000        <1> 		jb near nexticonsel
  3938 00002E66 660307              <1> 		add ax, [edi]
  3939 00002E69 660307              <1> 		add ax, [edi]
  3940 00002E6C 663905[F5250000]    <1> 		cmp [lastmouseposition], ax
  3941 00002E73 0F8790000000        <1> 		ja near nexticonsel
  3942 00002E79 66390D[F7250000]    <1> 		cmp [lastmouseposition + 2], cx
  3943 00002E80 0F8283000000        <1> 		jb near nexticonsel
  3944 00002E86 66391D[F7250000]    <1> 		cmp [lastmouseposition + 2], bx
  3945 00002E8D 0F8776000000        <1> 		ja near nexticonsel
  3946 00002E93 8935[582A0000]      <1> 		mov [dragging], esi
  3947 00002E99 662B15[F5250000]    <1> 		sub dx, [lastmouseposition]
  3948 00002EA0 660315[F9250000]    <1> 		add dx, [mousecursorposition]
  3949 00002EA7 66030D[FB250000]    <1> 		add cx, [mousecursorposition + 2]
  3950 00002EAE 662B0D[F7250000]    <1> 		sub cx, [lastmouseposition + 2]
  3951 00002EB5 663B15[3E370000]    <1> 		cmp dx, [resolutionx2]
  3952 00002EBC 7607                <1> 		jbe chkyresdrgwin
  3953 00002EBE 668B15[F9250000]    <1> 		mov dx, [mousecursorposition]
  3954                              <1> 	chkyresdrgwin:
  3955 00002EC5 663B0D[3A370000]    <1> 		cmp cx, [resolutiony]
  3956 00002ECC 7607                <1> 		jbe nodragwin
  3957 00002ECE 668B0D[FB250000]    <1> 		mov cx, [mousecursorposition + 2]
  3958                              <1> 	nodragwin:
  3959 00002ED5 8B5E0C              <1> 		mov ebx, [esi + 12]
  3960 00002ED8 668B460A            <1> 		mov ax, [esi + 10]
  3961 00002EDC 8B7602              <1> 		mov esi, [esi + 2]
  3962 00002EDF E853040000          <1> 		call showwindow
  3963 00002EE4 E939000000          <1> 		jmp doneiconsel
  3964                              <1> 	killwin:
  3965 00002EE9 66C7060000          <1> 		mov word [esi], 0
  3966 00002EEE C705[94030000]0000- <1> 		mov dword [user2codepoint], 0
  3967 00002EF6 0000                <1>
  3968 00002EF8 C605[830B0000]00    <1> 		mov byte [termguion], 0
  3969 00002EFF E86DF7FFFF          <1> 		call guiclear
  3970 00002F04 E939000000          <1> 		jmp doneiconsel2
  3971                              <1> 	nexticonsel:
  3972 00002F09 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3973 00002F0F 81C610000000        <1> 		add esi, 16
  3974 00002F15 81FE[674C0000]      <1> 		cmp esi, graphicstableend
  3975 00002F1B 7305                <1> 		jae doneiconsel
  3976 00002F1D E9B6FBFFFF          <1> 		jmp clicon2
  3977                              <1> 	doneiconsel:
  3978 00002F22 813D[582A0000]0100- <1> 		cmp dword [dragging], 1
  3979 00002F2A 0000                <1>
  3980 00002F2C 7314                <1> 		jae doneiconsel2
  3981 00002F2E 813D[DC390000]0000- <1> 		cmp dword [codepointer], 0
  3982 00002F36 0000                <1>
  3983 00002F38 7408                <1> 		je doneiconsel2
  3984 00002F3A 8B1D[DC390000]      <1> 		mov ebx, [codepointer]
  3985 00002F40 FFE3                <1> 		jmp ebx 
  3986                              <1> 	doneiconsel2:
  3987 00002F42 A0[7F230000]        <1> 		mov al, [LBUTTON]
  3988 00002F47 A2[562A0000]        <1> 		mov [pLBUTTON], al
  3989 00002F4C A0[80230000]        <1> 		mov al, [RBUTTON]
  3990 00002F51 A2[572A0000]        <1> 		mov [pRBUTTON], al
  3991 00002F56 E8C4F9FFFF          <1> call clearmousecursor
  3992 00002F5B E83C000000          <1> call reloadallgraphics
  3993 00002F60 B900000000          <1> 		mov ecx, 0
  3994 00002F65 BA00000000          <1> 		mov edx, 0
  3995 00002F6A B400                <1> 		mov ah, 0
  3996 00002F6C B080                <1> 		mov al, 128
  3997 00002F6E 668B15[F9250000]    <1> 		mov dx, [mousecursorposition]
  3998 00002F75 668B0D[FB250000]    <1> 		mov cx, [mousecursorposition + 2]
  3999 00002F7C 66BBE738            <1> 		mov bx, 0011100011100111b
  4000 00002F80 C605[1B290000]01    <1> 		mov byte [showcursorfonton], 1
  4001 00002F87 E8C2070000          <1> 		call showfontvesa
  4002 00002F8C C605[1B290000]00    <1> 		mov byte [showcursorfonton], 0
  4003 00002F93 C3                  <1> 		ret
  4004 00002F94 00000000            <1> lastdrag dw 0,0
  4005 00002F98 00000000            <1> grpctblpos dw 0,0
  4006                              <1> 
  4007                              <1> reloadallgraphics:
  4008 00002F9C BF[674A0000]        <1> 		mov edi, graphicstable
  4009                              <1> reloadgraphicsloop:
  4010 00002FA1 8B7702              <1> 		mov esi, [edi + 2]
  4011 00002FA4 668B5706            <1> 		mov dx, [edi + 6]
  4012 00002FA8 668B4F08            <1> 		mov cx, [edi + 8]
  4013 00002FAC 668B07              <1> 		mov ax, [edi]
  4014 00002FAF 668B5F0A            <1> 		mov bx, [edi + 10]
  4015 00002FB3 893D[982F0000]      <1> 		mov [grpctblpos], edi
  4016 00002FB9 3B3D[582A0000]      <1> 		cmp edi, [dragging]
  4017 00002FBF 741E                <1> 		je loadedgraphic
  4018 00002FC1 663D0100            <1> 		cmp ax, 1
  4019 00002FC5 0F8431000000        <1> 		je near icongraphic
  4020 00002FCB 663D0200            <1> 		cmp ax, 2
  4021 00002FCF 0F8437000000        <1> 		je near stringgraphic
  4022 00002FD5 663D0300            <1> 		cmp ax, 3
  4023 00002FD9 0F8416000000        <1> 		je near windowgraphic
  4024 00002FDF 8B3D[982F0000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  4025 00002FE5 81C710000000        <1> 		add edi, 16
  4026 00002FEB 81FF[674C0000]      <1> 		cmp edi, graphicstableend
  4027 00002FF1 7329                <1> 		jae donereloadgraphics
  4028 00002FF3 EBAC                <1> 		jmp reloadgraphicsloop
  4029 00002FF5 E890030000          <1> windowgraphic:	call showwindow2
  4030 00002FFA EBE3                <1> 		jmp loadedgraphic
  4031 00002FFC 80E301              <1> icongraphic:	and bl, 1
  4032 00002FFF 881D[E0390000]      <1> 		mov [iconselected], bl
  4033 00003005 E86A060000          <1> 		call showicon2
  4034 0000300A EBD3                <1> 		jmp loadedgraphic
  4035 0000300C 80E301              <1> stringgraphic:  and bl, 1
  4036 0000300F 881D[1D290000]      <1> 		mov [mouseselecton], bl
  4037 00003015 E8DB020000          <1> 		call showstring2
  4038 0000301A EBC3                <1> 		jmp loadedgraphic
  4039                              <1> donereloadgraphics:
  4040 0000301C 8B3D[582A0000]      <1> 		mov edi, [dragging]
  4041 00003022 81FF[674A0000]      <1> 		cmp edi, graphicstable
  4042 00003028 723B                <1> 		jb notcorrectdrag
  4043 0000302A 668B07              <1> 		mov ax, [edi]
  4044 0000302D 8B7702              <1> 		mov esi, [edi + 2]
  4045 00003030 668B5706            <1> 		mov dx, [edi + 6]
  4046 00003034 668B4F08            <1> 		mov cx, [edi + 8]
  4047 00003038 668B5F0A            <1> 		mov bx, [edi + 10]
  4048 0000303C 663D0100            <1> 		cmp ax, 1
  4049 00003040 750F                <1> 		jne noticondragging
  4050 00003042 80E301              <1> 		and bl, 1
  4051 00003045 881D[E0390000]      <1> 		mov [iconselected], bl
  4052 0000304B E824060000          <1> 		call showicon2
  4053 00003050 C3                  <1> 		ret
  4054                              <1> 
  4055                              <1> 	noticondragging:
  4056 00003051 663D0200            <1> 		cmp ax, 2
  4057 00003055 750E                <1> 		jne notcorrectdrag
  4058 00003057 80E301              <1> 		and bl, 1
  4059 0000305A 881D[1D290000]      <1> 		mov [mouseselecton], bl
  4060 00003060 E890020000          <1> 		call showstring2
  4061                              <1> 	notcorrectdrag:
  4062 00003065 C3                  <1> 		ret
  4063                              <1> 
  4064 00003066 00<rept>            <1> grphbuf times 16 db 0
  4065                              <1> 	graphicsadd:
  4066 00003076 BF[674A0000]        <1> 		mov edi, graphicstable
  4067                              <1> 	shwgrph1:
  4068 0000307B 397702              <1> 		cmp dword [edi + 2], esi
  4069 0000307E 7414                <1> 		je showgraphicsreplace2
  4070 00003080 81C710000000        <1> 		add edi, 16
  4071 00003086 81FF[674C0000]      <1> 		cmp edi, graphicstableend
  4072 0000308C 0F8335020000        <1> 		jae near showgraphicsnew
  4073 00003092 EBE7                <1> 		jmp shwgrph1
  4074                              <1> 	showgraphicsreplace2:
  4075 00003094 8935[68300000]      <1> 		mov [grphbuf + 2], esi
  4076 0000309A 668915[6C300000]    <1> 		mov [grphbuf + 6], dx
  4077 000030A1 66890D[6E300000]    <1> 		mov [grphbuf + 8], cx
  4078 000030A8 891D[72300000]      <1> 		mov [grphbuf + 12], ebx
  4079 000030AE B700                <1> 		mov bh, 0
  4080 000030B0 88E3                <1> 		mov bl, ah
  4081 000030B2 B400                <1> 		mov ah, 0
  4082 000030B4 66A3[70300000]      <1> 		mov [grphbuf + 10], ax	
  4083 000030BA 66891D[66300000]    <1> 		mov [grphbuf], bx
  4084 000030C1 66A1[66300000]      <1> 		mov ax, [grphbuf]
  4085 000030C7 663D0100            <1> 		cmp ax, 1
  4086 000030CB 0F8419000000        <1> 		je near replaceicon
  4087 000030D1 663D0200            <1> 		cmp ax, 2
  4088 000030D5 0F8493000000        <1> 		je near replacestring
  4089 000030DB 663D0300            <1> 		cmp ax, 3
  4090 000030DF 0F840F010000        <1> 		je near replacewindow
  4091 000030E5 E9BA010000          <1> 		jmp showgraphicsreplace
  4092                              <1> 	replaceicon:
  4093 000030EA 893D[5C2A0000]      <1> 		mov [lastpos], edi
  4094 000030F0 8935[602A0000]      <1> 		mov [lastpos + 4], esi
  4095 000030F6 8B7702              <1> 		mov esi, [edi + 2]
  4096 000030F9 668B5F0C            <1> 		mov bx, [edi + 12]
  4097 000030FD 668B5706            <1> 		mov dx, [edi + 6]
  4098 00003101 668B4F08            <1> 		mov cx, [edi + 8]
  4099 00003105 668B06              <1> 		mov ax, [esi]
  4100 00003108 66A3[642A0000]      <1> 		mov [colorbuf], ax
  4101 0000310E 66A1[AE260000]      <1> 		mov ax, [background]
  4102 00003114 668906              <1> 		mov [esi], ax
  4103 00003117 8B5F0C              <1> 		mov ebx, [edi + 12]
  4104 0000311A 668B470A            <1> 		mov ax, [edi + 10]
  4105 0000311E 2401                <1> 		and al, 1
  4106 00003120 A2[E0390000]        <1> 		mov [iconselected], al
  4107 00003125 668B470A            <1> 		mov ax, [edi + 10]
  4108 00003129 E846050000          <1> 		call showicon2
  4109 0000312E 8B3D[5C2A0000]      <1> 		mov edi, [lastpos]
  4110 00003134 8B7702              <1> 		mov esi, [edi + 2]
  4111 00003137 66A1[642A0000]      <1> 		mov ax, [colorbuf]
  4112 0000313D 668906              <1> 		mov [esi], ax
  4113 00003140 8B35[602A0000]      <1> 		mov esi, [lastpos + 4]
  4114 00003146 668B15[6C300000]    <1> 		mov dx, [grphbuf + 6]
  4115 0000314D 668B0D[6E300000]    <1> 		mov cx, [grphbuf + 8]
  4116 00003154 668B1D[66300000]    <1> 		mov bx, [grphbuf]
  4117 0000315B 66A1[70300000]      <1> 		mov ax, [grphbuf + 10]
  4118 00003161 88DC                <1> 		mov ah, bl
  4119 00003163 8B1D[72300000]      <1> 		mov ebx, [grphbuf + 12]
  4120 00003169 E936010000          <1> 		jmp showgraphicsreplace
  4121                              <1> 	replacestring:
  4122 0000316E 893D[5C2A0000]      <1> 		mov [lastpos], edi
  4123 00003174 8935[602A0000]      <1> 		mov [lastpos + 4], esi
  4124 0000317A 8B5F0C              <1> 		mov ebx, [edi + 12]
  4125 0000317D 8B7702              <1> 		mov esi, [edi + 2]
  4126 00003180 668B5706            <1> 		mov dx, [edi + 6]
  4127 00003184 668B4F08            <1> 		mov cx, [edi + 8]
  4128 00003188 66A1[25330000]      <1> 		mov ax, [colorfont2]
  4129 0000318E 66A3[642A0000]      <1> 		mov [colorbuf], ax
  4130 00003194 66A1[AE260000]      <1> 		mov ax, [background]
  4131 0000319A 66A3[25330000]      <1> 		mov [colorfont2], ax		
  4132 000031A0 8B5F0C              <1> 		mov ebx, [edi + 12]
  4133 000031A3 668B470A            <1> 		mov ax, [edi + 10]
  4134 000031A7 2401                <1> 		and al, 1
  4135 000031A9 A2[1D290000]        <1> 		mov [mouseselecton], al
  4136 000031AE 668B470A            <1> 		mov ax, [edi + 10]
  4137 000031B2 E83E010000          <1> 		call showstring2
  4138 000031B7 66A1[642A0000]      <1> 		mov ax, [colorbuf]
  4139 000031BD 66A3[25330000]      <1> 		mov [colorfont2], ax
  4140 000031C3 8B3D[5C2A0000]      <1> 		mov edi, [lastpos]
  4141 000031C9 8B7702              <1> 		mov esi, [edi + 2]
  4142 000031CC 668B15[6C300000]    <1> 		mov dx, [grphbuf + 6]
  4143 000031D3 668B0D[6E300000]    <1> 		mov cx, [grphbuf + 8]
  4144 000031DA 668B1D[66300000]    <1> 		mov bx, [grphbuf]
  4145 000031E1 66A1[70300000]      <1> 		mov ax, [grphbuf + 10]
  4146 000031E7 88DC                <1> 		mov ah, bl
  4147 000031E9 8B1D[72300000]      <1> 		mov ebx, [grphbuf + 12]
  4148 000031EF E9B0000000          <1> 		jmp showgraphicsreplace
  4149                              <1> 	replacewindow:
  4150 000031F4 893D[5C2A0000]      <1> 		mov [lastpos], edi
  4151 000031FA 8935[602A0000]      <1> 		mov [lastpos + 4], esi
  4152 00003200 8B7702              <1> 		mov esi, [edi + 2]
  4153 00003203 8B3D[33330000]      <1> 		mov edi, [windowbufloc]
  4154 00003209 BA00000000          <1> 		mov edx, 0
  4155 0000320E 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4156 00003215 C1E204              <1> 		shl edx, 4
  4157 00003218 29D7                <1> 		sub edi, edx
  4158 0000321A BA00000000          <1> 		mov edx, 0
  4159 0000321F 668B16              <1> 		mov dx, [esi]
  4160 00003222 660316              <1> 		add dx, [esi]
  4161 00003225 668B4E02            <1> 		mov cx, [esi + 2]
  4162 00003229 6681C11000          <1> 		add cx, 16
  4163 0000322E 66A1[AE260000]      <1> 		mov ax, [background]
  4164                              <1> 	clearwindow:
  4165 00003234 668907              <1> 		mov [edi], ax
  4166 00003237 81C702000000        <1> 		add edi, 2
  4167 0000323D 81EA02000000        <1> 		sub edx, 2
  4168 00003243 81FA00000000        <1> 		cmp edx, 0
  4169 00003249 75E9                <1> 		jne clearwindow
  4170 0000324B 6649                <1> 		dec cx
  4171 0000324D 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4172 00003254 662B16              <1> 		sub dx, [esi]
  4173 00003257 662B16              <1> 		sub dx, [esi]
  4174 0000325A 01D7                <1> 		add edi, edx
  4175 0000325C 668B16              <1> 		mov dx, [esi]
  4176 0000325F 660316              <1> 		add dx, [esi]
  4177 00003262 6681F90000          <1> 		cmp cx, 0
  4178 00003267 75CB                <1> 		jne clearwindow
  4179 00003269 C605[840B0000]00    <1> 		mov byte [termcopyon], 0
  4180 00003270 8B3D[5C2A0000]      <1> 		mov edi, [lastpos]
  4181 00003276 8B35[68300000]      <1> 		mov esi, [grphbuf + 2]
  4182 0000327C 668B15[6C300000]    <1> 		mov dx, [grphbuf + 6]
  4183 00003283 668B0D[6E300000]    <1> 		mov cx, [grphbuf + 8]
  4184 0000328A 668B1D[66300000]    <1> 		mov bx, [grphbuf]
  4185 00003291 66A1[70300000]      <1> 		mov ax, [grphbuf + 10]
  4186 00003297 88DC                <1> 		mov ah, bl
  4187 00003299 8B1D[72300000]      <1> 		mov ebx, [grphbuf + 12]
  4188 0000329F E900000000          <1> 		jmp showgraphicsreplace
  4189                              <1> 	showgraphicsreplace:
  4190 000032A4 897702              <1> 		mov [edi + 2], esi
  4191 000032A7 66895706            <1> 		mov [edi + 6], dx
  4192 000032AB 66894F08            <1> 		mov [edi + 8], cx
  4193 000032AF 895F0C              <1> 		mov [edi + 12], ebx
  4194 000032B2 B700                <1> 		mov bh, 0
  4195 000032B4 88E3                <1> 		mov bl, ah
  4196 000032B6 B400                <1> 		mov ah, 0
  4197 000032B8 6689470A            <1> 		mov [edi + 10], ax
  4198 000032BC 66891F              <1> 		mov [edi], bx
  4199 000032BF 8B5F0C              <1> 		mov ebx, [edi + 12]
  4200 000032C2 668B470A            <1> 		mov ax, [edi + 10]
  4201 000032C6 C3                  <1> 		ret
  4202                              <1> 	showgraphicsnew:
  4203 000032C7 BF[674A0000]        <1> 		mov edi, graphicstable
  4204                              <1> 	shwgrph2:
  4205 000032CC 66813F0000          <1> 		cmp word [edi], 0
  4206 000032D1 74D1                <1> 		je showgraphicsreplace
  4207 000032D3 81C710000000        <1> 		add edi, 16
  4208 000032D9 81FF[674C0000]      <1> 		cmp edi, graphicstableend
  4209 000032DF 72EB                <1> 		jb shwgrph2
  4210                              <1> 	showgraphicsdone:
  4211 000032E1 C3                  <1> 		ret
  4212                              <1> 
  4213                              <1> 	showstring:
  4214 000032E2 A2[1D290000]        <1> 		mov [mouseselecton], al
  4215 000032E7 8025[1D290000]01    <1> 		and byte [mouseselecton], 1
  4216 000032EE B402                <1> 		mov ah, 2
  4217 000032F0 E881FDFFFF          <1> 		call graphicsadd
  4218                              <1> 	showstring2:
  4219 000032F5 B400                <1> 		mov ah, 0
  4220 000032F7 8A06                <1> 		mov al, [esi]
  4221 000032F9 3C00                <1> 		cmp al, 0
  4222 000032FB 7420                <1> 		je doneshowstring
  4223 000032FD 46                  <1> 		inc esi
  4224 000032FE 8935[89390000]      <1> 		mov [showstringesi], esi
  4225 00003304 668B1D[25330000]    <1> 		mov bx, [colorfont2]
  4226 0000330B E83E040000          <1> 		call showfontvesa
  4227 00003310 6681C20800          <1> 		add dx, 8
  4228 00003315 8B35[89390000]      <1> 		mov esi, [showstringesi]
  4229 0000331B EBD8                <1> 		jmp showstring2
  4230                              <1> 	doneshowstring:
  4231 0000331D C605[1D290000]00    <1> 		mov byte [mouseselecton], 0
  4232 00003324 C3                  <1> 		ret
  4233                              <1> 
  4234 00003325 FFFF                <1> colorfont2 dw 0xFFFF
  4235 00003327 0000                <1> winvcopystx dw 0
  4236 00003329 0000                <1> winvcopysty dw 0
  4237 0000332B 0000                <1> winvcopydx dw 0
  4238 0000332D 0000                <1> winvcopycx dw 0
  4239 0000332F FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4240 00003333 00000000            <1> windowbufloc: dw 0,0
  4241                              <1> 
  4242                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4243 00003337 C605[830B0000]01    <1> 		mov byte [termguion], 1
  4244 0000333E 6681C11000          <1> 		add cx, 16
  4245 00003343 668915[27330000]    <1> 		mov [winvcopystx], dx
  4246 0000334A 66890D[29330000]    <1> 		mov [winvcopysty], cx
  4247 00003351 668B16              <1> 		mov dx, [esi]
  4248 00003354 668B4E02            <1> 		mov cx, [esi + 2]
  4249 00003358 6601D2              <1> 		add dx, dx
  4250 0000335B 668915[2B330000]    <1> 		mov [winvcopydx], dx
  4251 00003362 66890D[2D330000]    <1> 		mov [winvcopycx], cx
  4252 00003369 668B0D[29330000]    <1> 		mov cx, [winvcopysty]
  4253 00003370 6681E91000          <1> 		sub cx, 16
  4254 00003375 668B15[27330000]    <1> 		mov dx, [winvcopystx]
  4255 0000337C C605[840B0000]00    <1> 		mov byte [termcopyon], 0
  4256 00003383 B403                <1> 		mov ah, 3
  4257 00003385 E8ECFCFFFF          <1> 		call graphicsadd
  4258                              <1> 	showwindow2:
  4259 0000338A 6681C11000          <1> 		add cx, 16
  4260 0000338F 668915[27330000]    <1> 		mov [winvcopystx], dx
  4261 00003396 66890D[29330000]    <1> 		mov [winvcopysty], cx
  4262 0000339D 668B16              <1> 		mov dx, [esi]
  4263 000033A0 668B4E02            <1> 		mov cx, [esi + 2]
  4264 000033A4 6601D2              <1> 		add dx, dx
  4265 000033A7 668915[2B330000]    <1> 		mov [winvcopydx], dx
  4266 000033AE 66890D[2D330000]    <1> 		mov [winvcopycx], cx
  4267 000033B5 8B3D[33330000]      <1> 		mov edi, [windowbufloc]
  4268 000033BB BA00000000          <1> 		mov edx, 0
  4269 000033C0 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4270 000033C7 C1E204              <1> 		shl edx, 4
  4271 000033CA 29D7                <1> 		sub edi, edx
  4272 000033CC 803D[840B0000]00    <1> 		cmp byte [termcopyon], 0
  4273 000033D3 753E                <1> 		jne nocleartitlebarpos
  4274 000033D5 8B3D[9C6C0000]      <1> 		mov edi, [physbaseptr]
  4275 000033DB BA00000000          <1> 		mov edx, 0
  4276 000033E0 668B15[27330000]    <1> 		mov dx, [winvcopystx]
  4277 000033E7 01D7                <1> 		add edi, edx
  4278 000033E9 668B0D[29330000]    <1> 		mov cx, [winvcopysty]
  4279 000033F0 6681E91000          <1> 		sub cx, 16
  4280 000033F5 6681F90000          <1> 		cmp cx, 0
  4281 000033FA 7417                <1> 		je nocleartitlebarpos
  4282                              <1> 	cleartitlebarpos:
  4283 000033FC BA00000000          <1> 		mov edx, 0
  4284 00003401 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4285 00003408 01D7                <1> 		add edi, edx
  4286 0000340A 6649                <1> 		dec cx
  4287 0000340C 6681F90000          <1> 		cmp cx, 0
  4288 00003411 75E9                <1> 		jne cleartitlebarpos
  4289                              <1> 	nocleartitlebarpos:
  4290 00003413 66B91000            <1> 		mov cx, 16
  4291 00003417 668B15[2B330000]    <1> 		mov dx, [winvcopydx]
  4292 0000341E 6681F90000          <1> 		cmp cx, 0
  4293 00003423 0F844B000000        <1> 		je near canceltitlebarput
  4294 00003429 6681FA0000          <1> 		cmp dx, 0
  4295 0000342E 0F8440000000        <1> 		je near canceltitlebarput
  4296                              <1> 	titlebarput:
  4297 00003434 66A1[2F330000]      <1> 		mov ax, [windowcolor]
  4298 0000343A 668907              <1> 		mov [edi], ax
  4299 0000343D 6681EA0200          <1> 		sub dx, 2
  4300 00003442 81C702000000        <1> 		add edi, 2
  4301 00003448 6681FA0000          <1> 		cmp dx, 0
  4302 0000344D 75E5                <1> 		jne titlebarput
  4303 0000344F BA00000000          <1> 		mov edx, 0
  4304 00003454 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4305 0000345B 6649                <1> 		dec cx
  4306 0000345D 662B15[2B330000]    <1> 		sub dx, [winvcopydx]
  4307 00003464 01D7                <1> 		add edi, edx
  4308 00003466 668B15[2B330000]    <1> 		mov dx, [winvcopydx]
  4309 0000346D 6681F90000          <1> 		cmp cx, 0
  4310 00003472 75C0                <1> 		jne titlebarput
  4311                              <1> 	canceltitlebarput:
  4312 00003474 893D[33330000]      <1> 		mov [windowbufloc], edi
  4313 0000347A 803D[840B0000]02    <1> 		cmp byte [termcopyon], 2
  4314 00003481 0F8463000000        <1> 		je near winvcpst
  4315 00003487 66B80000            <1> 		mov ax, 0
  4316 0000348B 81C604000000        <1> 		add esi, 4
  4317 00003491 668B15[27330000]    <1> 		mov dx, [winvcopystx]
  4318 00003498 668B0D[29330000]    <1> 		mov cx, [winvcopysty]
  4319 0000349F 6681E91000          <1> 		sub cx, 16
  4320 000034A4 66BB0000            <1> 		mov bx, 0
  4321 000034A8 C605[1D290000]01    <1> 		mov byte [mouseselecton], 1
  4322 000034AF E841FEFFFF          <1> 		call showstring2
  4323 000034B4 B058                <1> 		mov al, "X"
  4324 000034B6 B400                <1> 		mov ah, 0
  4325 000034B8 668B1D[25330000]    <1> 		mov bx, [colorfont2]
  4326 000034BF 668B15[27330000]    <1> 		mov dx, [winvcopystx]
  4327 000034C6 668B0D[29330000]    <1> 		mov cx, [winvcopysty]
  4328 000034CD 6681E91000          <1> 		sub cx, 16
  4329 000034D2 6681EA1400          <1> 		sub dx, 20
  4330 000034D7 660315[2B330000]    <1> 		add dx, [winvcopydx]
  4331 000034DE C605[1D290000]01    <1> 		mov byte [mouseselecton], 1
  4332 000034E5 E864020000          <1> 		call showfontvesa
  4333                              <1> 	winvcpst:
  4334 000034EA 8B3D[33330000]      <1> 		mov edi, [windowbufloc]
  4335 000034F0 E957000000          <1> 		jmp windowvideocopyset
  4336                              <1> 
  4337                              <1> 	windowvideocopy:
  4338 000034F5 8B3D[33330000]      <1> 		mov edi, [windowbufloc]
  4339 000034FB 3B3D[9C6C0000]      <1> 		cmp edi, [physbaseptr]
  4340 00003501 0F8345000000        <1> 		jae near windowvideocopyset
  4341 00003507 B900000000          <1> 		mov ecx, 0
  4342 0000350C BA00000000          <1> 		mov edx, 0
  4343 00003511 668B15[27330000]    <1> 		mov dx, [winvcopystx]
  4344 00003518 668B0D[29330000]    <1> 		mov cx, [winvcopysty]
  4345 0000351F 8B3D[9C6C0000]      <1> 		mov edi, [physbaseptr]
  4346 00003525 01D7                <1> 		add edi, edx
  4347 00003527 81F900000000        <1> 		cmp ecx, 0
  4348 0000352D 741D                <1> 		je windowvideocopyset
  4349                              <1> 	yrescopylp:
  4350 0000352F BA00000000          <1> 		mov edx, 0
  4351 00003534 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4352 0000353B 01D7                <1> 		add edi, edx
  4353 0000353D 6649                <1> 		dec cx
  4354 0000353F 6681F90000          <1> 		cmp cx, 0
  4355 00003544 75E9                <1> 		jne yrescopylp
  4356 00003546 893D[33330000]      <1> 		mov [windowbufloc], edi
  4357                              <1> 	windowvideocopyset:
  4358 0000354C 66B90000            <1> 		mov cx, 0
  4359 00003550 66890D[59360000]    <1> 		mov [charposline], cx
  4360 00003557 BE[EC560000]        <1> 		mov esi, videobuf2
  4361 0000355C 8935[5B360000]      <1> 		mov [charposvbuf], esi
  4362 00003562 8A1E                <1> 		mov bl, [esi]
  4363 00003564 B700                <1> 		mov bh, 0
  4364 00003566 66C1E304            <1> 		shl bx, 4
  4365 0000356A 678AB7[C741]        <1> 		mov dh, [fonts + bx]
  4366 0000356F D0CE                <1> 		ror dh, 1
  4367 00003571 89FE                <1> 		mov esi, edi
  4368                              <1> 	copywindow:
  4369 00003573 B201                <1> 		mov dl, 1
  4370 00003575 D0C6                <1> 		rol dh, 1
  4371 00003577 20F2                <1> 		and dl, dh
  4372 00003579 66A1[31330000]      <1> 		mov ax, [windowcolor + 2]
  4373 0000357F 668907              <1> 		mov [edi], ax
  4374 00003582 80FA00              <1> 		cmp dl, 0
  4375 00003585 7409                <1> 		je nowritewin
  4376 00003587 66A1[2F330000]      <1> 		mov ax, [windowcolor]
  4377 0000358D 668907              <1> 		mov [edi], ax
  4378                              <1> 	nowritewin:
  4379 00003590 81C702000000        <1> 		add edi, 2
  4380 00003596 FEC1                <1> 		inc cl
  4381 00003598 80F908              <1> 		cmp cl, 8
  4382 0000359B 75D6                <1> 		jne copywindow
  4383 0000359D 6643                <1> 		inc bx
  4384 0000359F B100                <1> 		mov cl, 0
  4385 000035A1 BA00000000          <1> 		mov edx, 0
  4386 000035A6 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4387 000035AD 01D6                <1> 		add esi, edx
  4388 000035AF 89F7                <1> 		mov edi, esi
  4389 000035B1 678AB7[C741]        <1> 		mov dh, [fonts + bx]
  4390 000035B6 D0CE                <1> 		ror dh, 1
  4391 000035B8 FEC5                <1> 		inc ch
  4392 000035BA 80FD10              <1> 		cmp ch, 16
  4393 000035BD 75B4                <1> 		jne copywindow
  4394 000035BF 66B90000            <1> 		mov cx, 0
  4395 000035C3 8B3D[5B360000]      <1> 		mov edi, [charposvbuf]
  4396 000035C9 81C702000000        <1> 		add edi, 2
  4397 000035CF 81FF[AC690000]      <1> 		cmp edi, videobufend
  4398 000035D5 7370                <1> 		jae donewincopynow
  4399 000035D7 8A1F                <1> 		mov bl, [edi]
  4400 000035D9 B700                <1> 		mov bh, 0
  4401 000035DB 66C1E304            <1> 		shl bx, 4
  4402 000035DF 893D[5B360000]      <1> 		mov [charposvbuf], edi
  4403 000035E5 BA00000000          <1> 		mov edx, 0
  4404 000035EA 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4405 000035F1 C1E204              <1> 		shl edx, 4
  4406 000035F4 29D6                <1> 		sub esi, edx
  4407 000035F6 81C610000000        <1> 		add esi, 16
  4408 000035FC 89F7                <1> 		mov edi, esi
  4409 000035FE 668B0D[59360000]    <1> 		mov cx, [charposline]
  4410 00003605 6641                <1> 		inc cx
  4411 00003607 6681F95000          <1> 		cmp cx, 80
  4412 0000360C 7317                <1> 		jae fixwindowcopy
  4413 0000360E 66890D[59360000]    <1> 		mov [charposline], cx
  4414 00003615 66B90000            <1> 		mov cx, 0
  4415 00003619 678AB7[C741]        <1> 		mov dh, [fonts + bx]
  4416 0000361E D0CE                <1> 		ror dh, 1
  4417 00003620 E94EFFFFFF          <1> 		jmp copywindow
  4418                              <1> fixwindowcopy:
  4419 00003625 66B90000            <1> 		mov cx, 0
  4420 00003629 66890D[59360000]    <1> 		mov [charposline], cx
  4421 00003630 662B15[2B330000]    <1> 		sub dx, [winvcopydx]
  4422 00003637 01D6                <1> 		add esi, edx
  4423 00003639 89F7                <1> 		mov edi, esi
  4424 0000363B 678AB7[C741]        <1> 		mov dh, [fonts + bx]
  4425 00003640 D0CE                <1> 		ror dh, 1
  4426 00003642 E92CFFFFFF          <1> 		jmp copywindow
  4427                              <1> donewincopynow:
  4428 00003647 803D[840B0000]01    <1> 		cmp byte [termcopyon], 1
  4429 0000364E 7501                <1> 		jne forgetresetstuff
  4430 00003650 61                  <1> 		popa
  4431                              <1> forgetresetstuff:
  4432 00003651 C605[840B0000]00    <1> 		mov byte [termcopyon], 0
  4433 00003658 C3                  <1> 		ret
  4434                              <1> 
  4435 00003659 0000                <1> charposline dw 0
  4436 0000365B 00000000            <1> charposvbuf dw 0,0
  4437 0000365F 0000                <1> iconcolor dw 0
  4438                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  4439 00003661 A2[E0390000]        <1> 		mov [iconselected], al
  4440 00003666 8025[E0390000]01    <1> 		and byte [iconselected], 1
  4441 0000366D B401                <1> 		mov ah, 1
  4442 0000366F E802FAFFFF          <1> 		call graphicsadd
  4443                              <1> 	showicon2:
  4444 00003674 8B3D[9C6C0000]      <1> 		mov edi, [physbaseptr]
  4445 0000367A 6601D2              <1> 		add dx, dx
  4446 0000367D 663B15[3E370000]    <1> 		cmp dx, [resolutionx2]
  4447 00003684 720C                <1> 		jb screenxgood
  4448 00003686 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4449 0000368D 6681EA4000          <1> 		sub dx, 64
  4450                              <1> 	screenxgood:
  4451 00003692 6681F90000          <1> 		cmp cx, 0
  4452 00003697 7425                <1> 		je noscreenygoodchk
  4453 00003699 663B0D[3A370000]    <1> 		cmp cx, [resolutiony]
  4454 000036A0 720C                <1> 		jb screenygood
  4455 000036A2 668B0D[3A370000]    <1> 		mov cx, [resolutiony]
  4456 000036A9 6681E92000          <1> 		sub cx, 32
  4457                              <1> 	screenygood:
  4458 000036AE BB00000000          <1> 		mov ebx, 0
  4459 000036B3 668B1D[3E370000]    <1> 		mov bx, [resolutionx2]
  4460 000036BA 01DF                <1> 		add edi, ebx
  4461 000036BC E2F0                <1> 		loop screenygood
  4462                              <1> 	noscreenygoodchk:
  4463 000036BE BB00000000          <1> 		mov ebx, 0
  4464 000036C3 6689D3              <1> 		mov bx, dx
  4465 000036C6 01DF                <1> 		add edi, ebx
  4466 000036C8 66B90000            <1> 		mov cx, 0
  4467 000036CC 668B06              <1> 		mov ax, [esi]
  4468 000036CF 81C602000000        <1> 		add esi, 2
  4469 000036D5 66A3[5F360000]      <1> 		mov [iconcolor], ax
  4470                              <1> 	writeicon:
  4471 000036DB 8B06                <1> 		mov eax, [esi]
  4472 000036DD D1C0                <1> 		rol eax, 1
  4473 000036DF B100                <1> 		mov cl, 0
  4474                              <1> 	writeiconline:
  4475 000036E1 B201                <1> 		mov dl, 1
  4476 000036E3 20C2                <1> 		and dl, al
  4477 000036E5 3215[E0390000]      <1> 		xor dl, [iconselected]
  4478 000036EB 668B1D[AE260000]    <1> 		mov bx, [background]
  4479 000036F2 66891F              <1> 		mov [edi], bx
  4480 000036F5 80FA00              <1> 		cmp dl, 0
  4481 000036F8 740A                <1> 		je noiconline
  4482 000036FA 668B15[5F360000]    <1> 		mov dx, [iconcolor]
  4483 00003701 668917              <1> 		mov [edi], dx
  4484                              <1> 	noiconline:
  4485 00003704 81C702000000        <1> 		add edi, 2
  4486 0000370A D1C0                <1> 		rol eax, 1
  4487 0000370C FEC1                <1> 		inc cl
  4488 0000370E 80F920              <1> 		cmp cl, 32
  4489 00003711 72CE                <1> 		jb writeiconline
  4490 00003713 81C604000000        <1> 		add esi, 4
  4491 00003719 FEC5                <1> 		inc ch
  4492 0000371B BA00000000          <1> 		mov edx, 0
  4493 00003720 668B15[3E370000]    <1> 		mov dx, [resolutionx2]
  4494 00003727 01D7                <1> 		add edi, edx
  4495 00003729 81EF40000000        <1> 		sub edi, 64
  4496 0000372F 80FD20              <1> 		cmp ch, 32
  4497 00003732 72A7                <1> 		jb writeicon
  4498 00003734 B800000000          <1> 		mov eax, 0
  4499 00003739 C3                  <1> 		ret
  4500                              <1> 
  4501 0000373A 0000                <1> resolutiony dw 0
  4502 0000373C 0000                <1> resolutionx dw 0
  4503 0000373E 0000                <1> resolutionx2 dw 0
  4504 00003740 02                  <1> resolutionbytes db 2
  4505 00003741 0000                <1> posxvesa dw 0
  4506 00003743 0000                <1> posyvesa dw 0
  4507 00003745 FFFF                <1> colorfont dw 0xFFFF
  4508                              <1> savefontvesa:		;;same rules as showfontvesa
  4509 00003747 C605[1C290000]01    <1> 	mov byte [savefonton], 1
  4510                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  4511 0000374E 25FF000000          <1> 	and eax, 0xFF
  4512 00003753 66890D[43370000]    <1> 	mov [posyvesa], cx
  4513 0000375A 668915[41370000]    <1> 	mov [posxvesa], dx
  4514 00003761 8B3D[9C6C0000]      <1> 	mov edi, [physbaseptr]
  4515 00003767 66891D[45370000]    <1> 	mov [colorfont], bx
  4516 0000376E BB00000000          <1> 	mov ebx, 0
  4517 00003773 6689D3              <1> 	mov bx, dx
  4518 00003776 89DA                <1> 	mov edx, ebx
  4519 00003778 BB00000000          <1> 	mov ebx, 0
  4520 0000377D 6681F90000          <1> 	cmp cx, 0
  4521 00003782 7415                <1> 	je vesaposloopdn
  4522 00003784 668B1D[3E370000]    <1> 	mov bx, [resolutionx2]
  4523                              <1> vesaposloop:
  4524 0000378B 01DA                <1> 	add edx, ebx
  4525 0000378D 6681E90100          <1> 	sub cx, 1
  4526 00003792 6681F90000          <1> 	cmp cx, 0
  4527 00003797 75F2                <1> 	jne vesaposloop
  4528                              <1> vesaposloopdn:
  4529 00003799 01D7                <1> 	add edi, edx
  4530 0000379B BE[C7410000]        <1> 	mov esi, fonts
  4531                              <1> findfontvesa:
  4532 000037A0 B400                <1> 	mov ah, 0
  4533 000037A2 C1E004              <1> 	shl eax, 4
  4534 000037A5 01C6                <1> 	add esi, eax
  4535 000037A7 C1E804              <1> 	shr eax, 4
  4536 000037AA 81FE[E7490000]      <1> 	cmp esi, fontend
  4537 000037B0 0F83BF000000        <1> 	jae near donefontvesa
  4538 000037B6 4E                  <1> 	dec esi
  4539                              <1> foundfontvesa:
  4540 000037B7 46                  <1> 	inc esi
  4541 000037B8 803D[1C290000]01    <1> 	cmp byte [savefonton], 1
  4542 000037BF 0F84E1000000        <1> 	je near vesafontsaver
  4543 000037C5 B100                <1> 	mov cl, 0
  4544 000037C7 8A06                <1> 	mov al, [esi]
  4545 000037C9 668B15[3E370000]    <1> 	mov dx, [resolutionx2]
  4546 000037D0 662B15[41370000]    <1> 	sub dx, [posxvesa]
  4547 000037D7 6681FA1000          <1> 	cmp dx, 16
  4548 000037DC 7708                <1> 	ja paintfontvesa
  4549 000037DE D0EA                <1> 	shr dl, 1
  4550 000037E0 8815[A5380000]      <1> 	mov [charwidth], dl
  4551                              <1> paintfontvesa:
  4552 000037E6 B201                <1> 	mov dl, 1
  4553 000037E8 20C2                <1> 	and dl, al
  4554 000037EA 803D[1B290000]01    <1> 	cmp byte [showcursorfonton], 1
  4555 000037F1 0F8435000000        <1> 	je near nodelpaintedfont
  4556 000037F7 803D[1B290000]02    <1> 	cmp byte [showcursorfonton], 2
  4557 000037FE 0F8518000000        <1> 	jne near noswitchcursorfonton
  4558 00003804 80FA00              <1> 	cmp dl, 0
  4559 00003807 0F842E000000        <1> 	je near nopixelset
  4560 0000380D 668B1D[45370000]    <1> 	mov bx, [colorfont]
  4561 00003814 66891F              <1> 	mov [edi], bx
  4562 00003817 E91F000000          <1> 	jmp nopixelset
  4563                              <1> noswitchcursorfonton:
  4564 0000381C 3215[1D290000]      <1> 	xor dl, [mouseselecton]
  4565 00003822 668B1D[AE260000]    <1> 	mov bx, [background]
  4566 00003829 66891F              <1> 	mov [edi], bx
  4567                              <1> nodelpaintedfont:
  4568 0000382C 80FA00              <1> 	cmp dl, 0
  4569 0000382F 740A                <1> 	je nopixelset
  4570 00003831 668B15[45370000]    <1> 	mov dx, [colorfont]
  4571 00003838 668917              <1> 	mov [edi], dx
  4572                              <1> nopixelset:
  4573 0000383B 81C702000000        <1> 	add edi, 2
  4574 00003841 D0C0                <1> 	rol al, 1
  4575 00003843 FEC1                <1> 	inc cl
  4576 00003845 3A0D[A5380000]      <1> 	cmp cl, [charwidth]
  4577 0000384B 7299                <1> 	jb paintfontvesa
  4578 0000384D FEC5                <1> 	inc ch
  4579 0000384F BA00000000          <1> 	mov edx, 0
  4580 00003854 668B15[3E370000]    <1> 	mov dx, [resolutionx2]
  4581 0000385B 01D7                <1> 	add edi, edx
  4582 0000385D BA00000000          <1> 	mov edx, 0
  4583 00003862 8A15[A5380000]      <1> 	mov dl, [charwidth]
  4584 00003868 00D2                <1> 	add dl, dl
  4585 0000386A 29D7                <1> 	sub edi, edx
  4586 0000386C 80FD10              <1> 	cmp ch, 16
  4587 0000386F 0F8242FFFFFF        <1> 	jb foundfontvesa
  4588                              <1> donefontvesa:
  4589 00003875 B208                <1> 	mov dl, 8
  4590 00003877 8815[A5380000]      <1> 	mov [charwidth], dl
  4591 0000387D 668B15[41370000]    <1> 	mov dx, [posxvesa]
  4592 00003884 8A1D[A5380000]      <1> 	mov bl, [charwidth]
  4593 0000388A B700                <1> 	mov bh, 0
  4594 0000388C 6601DA              <1> 	add dx, bx
  4595 0000388F 668B1D[45370000]    <1> 	mov bx, [colorfont]
  4596 00003896 668B0D[43370000]    <1> 	mov cx, [posyvesa]
  4597 0000389D C605[1C290000]00    <1> 	mov byte [savefonton], 0
  4598 000038A4 C3                  <1> 	ret
  4599 000038A5 08                  <1> charwidth db 8
  4600                              <1> vesafontsaver:
  4601 000038A6 B000                <1> 	mov al, 0
  4602 000038A8 B100                <1> 	mov cl, 0
  4603                              <1> vesafontsaver2:
  4604 000038AA 668B17              <1> 	mov dx, [edi]
  4605 000038AD 663B15[45370000]    <1> 	cmp dx, [colorfont]
  4606 000038B4 742F                <1> 	je colorfontmatch
  4607                              <1> donecolormatch:
  4608 000038B6 81C702000000        <1> 	add edi, 2
  4609 000038BC D0C0                <1> 	rol al, 1
  4610 000038BE FEC1                <1> 	inc cl
  4611 000038C0 80F908              <1> 	cmp cl, 8
  4612 000038C3 72E5                <1> 	jb vesafontsaver2
  4613 000038C5 8806                <1> 	mov [esi], al
  4614 000038C7 46                  <1> 	inc esi
  4615 000038C8 FEC5                <1> 	inc ch
  4616 000038CA BA00000000          <1> 	mov edx, 0
  4617 000038CF 668B15[3E370000]    <1> 	mov dx, [resolutionx2]
  4618 000038D6 01D7                <1> 	add edi, edx
  4619 000038D8 81EF10000000        <1> 	sub edi, 16
  4620 000038DE 80FD10              <1> 	cmp ch, 16
  4621 000038E1 72C3                <1> 	jb vesafontsaver
  4622 000038E3 EB90                <1> 	jmp donefontvesa
  4623                              <1> colorfontmatch:
  4624 000038E5 0401                <1> 	add al, 1
  4625 000038E7 EBCD                <1> 	jmp donecolormatch
  4626                              <1> 	
  4627                              <1> showbmp:
  4628 000038E9 668B06              <1> 	mov ax, [esi]
  4629 000038EC 663D424D            <1> 	cmp ax, "BM"
  4630 000038F0 0F858E000000        <1> 	jne near endedbmp
  4631 000038F6 8B3D[9C6C0000]      <1> 	mov edi, [physbaseptr]
  4632 000038FC 6689D0              <1> 	mov ax, dx
  4633 000038FF 6689CB              <1> 	mov bx, cx
  4634 00003902 B900000000          <1> 	mov ecx, 0
  4635 00003907 BA00000000          <1> 	mov edx, 0
  4636 0000390C 6689D9              <1> 	mov cx, bx
  4637 0000390F 6689C2              <1> 	mov dx, ax
  4638 00003912 01D7                <1> 	add edi, edx
  4639 00003914 01D7                <1> 	add edi, edx
  4640 00003916 BA00000000          <1> 	mov edx, 0
  4641 0000391B 668B15[3E370000]    <1> 	mov dx, [resolutionx2]
  4642 00003922 41                  <1> 	inc ecx
  4643 00003923 034E16              <1> 	add ecx, [esi + 22]
  4644                              <1> bmplocloop:
  4645 00003926 01D7                <1> 	add edi, edx
  4646 00003928 E2FC                <1> 	loop bmplocloop
  4647 0000392A 29D7                <1> 	sub edi, edx
  4648 0000392C 8B5612              <1> 	mov edx, [esi + 18]
  4649 0000392F 8B4E16              <1> 	mov ecx, [esi + 22]
  4650 00003932 8B460A              <1> 	mov eax, [esi + 10]
  4651 00003935 8B5E02              <1> 	mov ebx, [esi + 2]
  4652 00003938 01F3                <1> 	add ebx, esi
  4653 0000393A 891D[85390000]      <1> 	mov [bmpend], ebx
  4654 00003940 89D3                <1> 	mov ebx, edx
  4655 00003942 01C6                <1> 	add esi, eax
  4656                              <1> ldxbmp:
  4657 00003944 668B06              <1> 	mov ax, [esi]
  4658 00003947 668907              <1> 	mov [edi], ax
  4659 0000394A 81C702000000        <1> 	add edi, 2
  4660 00003950 81C602000000        <1> 	add esi, 2
  4661 00003956 3B35[85390000]      <1> 	cmp esi, [bmpend]
  4662 0000395C 7726                <1> 	ja endedbmp
  4663 0000395E 4A                  <1> 	dec edx
  4664 0000395F 81FA00000000        <1> 	cmp edx, 0
  4665 00003965 77DD                <1> 	ja ldxbmp
  4666 00003967 BA00000000          <1> 	mov edx, 0
  4667 0000396C 668B15[3E370000]    <1> 	mov dx, [resolutionx2]
  4668 00003973 29DF                <1> 	sub edi, ebx
  4669 00003975 29DF                <1> 	sub edi, ebx
  4670 00003977 29D7                <1> 	sub edi, edx
  4671 00003979 49                  <1> 	dec ecx
  4672 0000397A 89DA                <1> 	mov edx, ebx
  4673 0000397C 81F900000000        <1> 	cmp ecx, 0
  4674 00003982 77C0                <1> 	ja ldxbmp
  4675                              <1> endedbmp:
  4676 00003984 C3                  <1> 	ret
  4677                              <1> 	
  4678 00003985 00000000            <1> 	bmpend dd 0
  4679                              <1> 
  4680                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4681 00003989 00000000            <1> 	showstringesi dw 0,0
  4682 0000398D 00                  <1> 	mouseon db 0
  4683 0000398E 737461727400        <1> 	start	db "start",0
  4684 00003994 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  4685 0000399D 426F6F2100          <1> 	boomsg db "Boo!",0
  4686 000039A2 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  4687 000039AB 73206561737920746F- <1>
  4688 000039B4 20647261772E00      <1>
  4689 000039BB 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  4690 000039C4 6D206E6F6D00        <1>
  4691 000039CA 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  4692 000039D3 75636B7300          <1>
  4693 000039D8 5800                <1> 	xmsg db "X",0
  4694 000039DA 0000                <1> 	icon dw 0	;pointer to icon
  4695 000039DC 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  4696 000039E0 00                  <1> 	iconselected db 0
  4697                              <1> 	
  4698                              <1> 	boo:
  4699 000039E1 BE[9D390000]        <1> 		mov esi, boomsg
  4700 000039E6 66BA6400            <1> 		mov dx, 100
  4701 000039EA 66B94001            <1> 		mov cx, 320
  4702 000039EE BB00000000          <1> 		mov ebx, 0
  4703 000039F3 66B80000            <1> 		mov ax, 0
  4704 000039F7 E9E6F8FFFF          <1> 		jmp showstring
  4705                              <1> 
  4706                              <1> 	pacmannomnom:
  4707 000039FC BE[BB390000]        <1> 		mov esi, pacnom
  4708 00003A01 66BA8200            <1> 		mov dx, 130
  4709 00003A05 66B93C00            <1> 		mov cx, 60
  4710 00003A09 BB00000000          <1> 		mov ebx, 0
  4711 00003A0E 66B80000            <1> 		mov ax, 0
  4712 00003A12 E9CBF8FFFF          <1> 		jmp showstring	
  4713                              <1> 	
  4714                              <1> 	noie:
  4715 00003A17 BE[A13A0000]        <1> 		mov esi, termwindow
  4716 00003A1C 66BA0000            <1> 		mov dx, 0
  4717 00003A20 66B90000            <1> 		mov cx, 0
  4718 00003A24 BB[B90E0000]        <1> 		mov ebx, nwcmd
  4719                              <1> ;;		mov ebx, internettest
  4720 00003A29 891D[94030000]      <1> 		mov [user2codepoint], ebx
  4721 00003A2F 66B80000            <1> 		mov ax, 0
  4722 00003A33 E9FFF8FFFF          <1> 		jmp showwindow
  4723                              <1> ;;		jmp internettest
  4724 00003A38 C3                  <1> 		ret
  4725                              <1> 
  4726                              <1> 	gotomenuboot:
  4727 00003A39 BE[A13A0000]        <1> 		mov esi, termwindow
  4728 00003A3E 66BA0000            <1> 		mov dx, 0
  4729 00003A42 66B90000            <1> 		mov cx, 0
  4730 00003A46 BB[330E0000]        <1> 		mov ebx, os
  4731 00003A4B 891D[94030000]      <1> 		mov [user2codepoint], ebx
  4732 00003A51 66B80000            <1> 		mov ax, 0
  4733 00003A55 E9DDF8FFFF          <1> 		jmp showwindow
  4734 00003A5A C3                  <1> 		ret
  4735                              <1> 
  4736                              <1> 	winblows:
  4737 00003A5B BE[CA390000]        <1> 		mov esi, winmsg
  4738 00003A60 66BA0000            <1> 		mov dx, 0
  4739 00003A64 668B0D[3A370000]    <1> 		mov cx, [resolutiony]
  4740 00003A6B 6681E92000          <1> 		sub cx, 32
  4741 00003A70 BB00000000          <1> 		mov ebx, 0
  4742 00003A75 B400                <1> 		mov ah, 0
  4743 00003A77 B011                <1> 		mov al, 00010001b
  4744 00003A79 E864F8FFFF          <1> 		call showstring
  4745 00003A7E BE[94390000]        <1> 		mov esi, gotomenu
  4746 00003A83 668B0D[3A370000]    <1> 		mov cx, [resolutiony]
  4747 00003A8A 6681E93000          <1> 		sub cx, 48
  4748 00003A8F 66BA0000            <1> 		mov dx, 0
  4749 00003A93 B400                <1> 		mov ah, 0
  4750 00003A95 B010                <1> 		mov al, 00010000b
  4751 00003A97 BB[393A0000]        <1> 		mov ebx, gotomenuboot
  4752 00003A9C E941F8FFFF          <1> 		jmp showstring
  4753                              <1> 
  4754 00003AA1 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  4755 00003AA5 5445524D494E414C00  <1> 	termmsg:	db "TERMINAL",0	;;window title
  4756 00003AA5 <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  4757 00003AA5 <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  4758 00003AA5 <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  4759 00003AA5 <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  4760 00003AA5 <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  4761                                      ;%include 'source/network.asm'
  4762                                  	%include 'source/pci.asm'
  4763 00003D38 00                  <1> pcibus		db 0
  4764 00003D39 00                  <1> pcidevice	db 0
  4765 00003D3A 00                  <1> pcifunction	db 0
  4766 00003D3B 00                  <1> pciregister	db 0
  4767 00003D3C 00                  <1> pcireqtype db 0
  4768                              <1> 
  4769                              <1> getpciport:
  4770 00003D3D B001                <1> 	mov al, 1
  4771 00003D3F A2[3C3D0000]        <1> 	mov [pcireqtype], al
  4772 00003D44 E91E000000          <1> 	jmp searchpci
  4773                              <1> pcidump:
  4774 00003D49 B800000000          <1> 	mov eax, 0
  4775 00003D4E A2[3A3D0000]        <1> 	mov [pcifunction], al
  4776 00003D53 A2[383D0000]        <1> 	mov [pcibus], al
  4777 00003D58 A2[393D0000]        <1> 	mov [pcidevice], al
  4778 00003D5D A2[3C3D0000]        <1> 	mov [pcireqtype], al
  4779 00003D62 E900000000          <1> 	jmp searchpci
  4780                              <1> searchpci:		;;return in ebx, start X in pciX
  4781 00003D67 B000                <1> 	mov al, 0
  4782 00003D69 A2[3B3D0000]        <1> 	mov [pciregister], al
  4783 00003D6E E84F010000          <1> 	call getpciaddr
  4784 00003D73 BAF80C0000          <1> 	mov edx, 0xCF8
  4785 00003D78 EF                  <1> 	out dx, eax	;;request pci config
  4786 00003D79 BAFC0C0000          <1> 	mov edx, 0xCFC
  4787 00003D7E ED                  <1> 	in eax, dx 	;;read in pci config
  4788 00003D7F 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  4789 00003D84 0F8237000000        <1> 	jb near checkpcidevice
  4790                              <1> searchpciret:
  4791                              <1> nextpcidevice:
  4792 00003D8A B000                <1> 	mov al, 0
  4793 00003D8C A2[3A3D0000]        <1> 	mov [pcifunction], al
  4794 00003D91 A0[393D0000]        <1> 	mov al, [pcidevice]
  4795 00003D96 3C1F                <1> 	cmp al, 11111b
  4796 00003D98 0F83B8000000        <1> 	jae near nextpcibus
  4797 00003D9E FEC0                <1> 	inc al
  4798 00003DA0 A2[393D0000]        <1> 	mov [pcidevice], al
  4799 00003DA5 EBC0                <1> 	jmp searchpci
  4800 00003DA7 A0[3A3D0000]        <1> 	mov al, [pcifunction]
  4801 00003DAC 3C07                <1> 	cmp al, 111b
  4802 00003DAE 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  4803 00003DB4 FEC0                <1> 	inc al
  4804 00003DB6 A2[3A3D0000]        <1> 	mov [pcifunction], al
  4805 00003DBB EBAA                <1> 	jmp searchpci
  4806 00003DBD 00000000            <1> pcitype: db 0,0,0,0
  4807                              <1> checkpcidevice:
  4808 00003DC1 B000                <1> 	mov al, 0
  4809 00003DC3 3805[3C3D0000]      <1> 	cmp [pcireqtype], al
  4810 00003DC9 0F842B000000        <1> 	je near dumppcidevice
  4811 00003DCF B008                <1> 	mov al, 0x08
  4812 00003DD1 A2[3B3D0000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  4813 00003DD6 E8E7000000          <1> 	call getpciaddr
  4814 00003DDB BAF80C0000          <1> 	mov edx, 0xCF8
  4815 00003DE0 EF                  <1> 	out dx, eax
  4816 00003DE1 BAFC0C0000          <1> 	mov edx, 0xCFC
  4817 00003DE6 ED                  <1> 	in eax, dx
  4818 00003DE7 C1C008              <1> 	rol eax, 8
  4819 00003DEA 8A1D[BD3D0000]      <1> 	mov bl, [pcitype]
  4820 00003DF0 38D8                <1> 	cmp al, bl
  4821 00003DF2 0F8480000000        <1> 	je near foundpciaddr
  4822 00003DF8 EB90                <1> 	jmp searchpciret
  4823                              <1> dumppcidevice:
  4824 00003DFA B000                <1> 	mov al, 0
  4825 00003DFC A2[3B3D0000]        <1> 	mov [pciregister], al
  4826 00003E01 E8BC000000          <1> 	call getpciaddr
  4827 00003E06 89C1                <1> 	mov ecx, eax
  4828 00003E08 C605[72120000]03    <1> 	mov byte [firsthexshown],3
  4829 00003E0F E85FD4FFFF          <1> 	call showhex
  4830                              <1> dumppcidevicelp:
  4831 00003E14 A2[3B3D0000]        <1> 	mov [pciregister], al
  4832 00003E19 E8A4000000          <1> 	call getpciaddr
  4833 00003E1E BAF80C0000          <1> 	mov edx, 0xCF8
  4834 00003E23 EF                  <1> 	out dx, eax
  4835 00003E24 BAFC0C0000          <1> 	mov edx, 0xCFC
  4836 00003E29 ED                  <1> 	in eax, dx
  4837 00003E2A 89C1                <1> 	mov ecx, eax
  4838 00003E2C A0[3B3D0000]        <1> 	mov al, [pciregister]
  4839 00003E31 0404                <1> 	add al, 4
  4840 00003E33 3C3C                <1> 	cmp al, 0x3C
  4841 00003E35 730E                <1> 	jae dumppcidn
  4842 00003E37 C605[72120000]00    <1> 	mov byte [firsthexshown],0
  4843 00003E3E E830D4FFFF          <1> 	call showhex
  4844 00003E43 EBCF                <1> 	jmp dumppcidevicelp
  4845                              <1> dumppcidn:	
  4846 00003E45 C605[72120000]02    <1> 	mov byte [firsthexshown],2
  4847 00003E4C E822D4FFFF          <1> 	call showhex
  4848 00003E51 E934FFFFFF          <1> 	jmp searchpciret
  4849                              <1> nextpcibus:
  4850 00003E56 B000                <1> 	mov al, 0
  4851 00003E58 A2[393D0000]        <1> 	mov [pcidevice], al
  4852 00003E5D A0[383D0000]        <1> 	mov al, [pcibus]
  4853 00003E62 3C7F                <1> 	cmp al, 1111111b
  4854 00003E64 730C                <1> 	jae donesearchpci
  4855 00003E66 FEC0                <1> 	inc al
  4856 00003E68 A2[383D0000]        <1> 	mov [pcibus], al
  4857 00003E6D E9F5FEFFFF          <1> 	jmp searchpci
  4858                              <1> donesearchpci:
  4859 00003E72 BA00000000          <1> 	mov edx, 0
  4860 00003E77 C3                  <1> 	ret
  4861                              <1> foundpciaddr:
  4862 00003E78 B010                <1> 	mov al, 0x10
  4863 00003E7A A2[3B3D0000]        <1> 	mov [pciregister], al
  4864                              <1> findpciioaddr:
  4865 00003E7F E83E000000          <1> 	call getpciaddr
  4866 00003E84 BAF80C0000          <1> 	mov edx, 0xCF8
  4867 00003E89 EF                  <1> 	out dx, eax
  4868 00003E8A BAFC0C0000          <1> 	mov edx, 0xCFC
  4869 00003E8F ED                  <1> 	in eax, dx
  4870 00003E90 89C3                <1> 	mov ebx, eax
  4871 00003E92 81E301000000        <1> 	and ebx, 1
  4872 00003E98 81FB00000000        <1> 	cmp ebx, 0
  4873 00003E9E 0F8408000000        <1> 	je near notpciioaddr
  4874 00003EA4 2D01000000          <1> 	sub eax, 1
  4875 00003EA9 89C2                <1> 	mov edx, eax
  4876 00003EAB C3                  <1> 	ret
  4877                              <1> notpciioaddr:
  4878 00003EAC A0[3B3D0000]        <1> 	mov al, [pciregister]
  4879 00003EB1 0404                <1> 	add al, 4
  4880 00003EB3 3C28                <1> 	cmp al, 0x28
  4881 00003EB5 0F87CFFEFFFF        <1> 	ja near searchpciret
  4882 00003EBB A2[3B3D0000]        <1> 	mov [pciregister], al
  4883 00003EC0 EBBD                <1> 	jmp findpciioaddr
  4884                              <1> getpciaddr:		;;puts it in eax and ebx
  4885 00003EC2 B800000000          <1> 			mov eax, 0
  4886 00003EC7 BB00000080          <1> 			mov ebx, 0x80000000
  4887 00003ECC A0[383D0000]        <1> 			mov al, [pcibus]
  4888 00003ED1 C1E010              <1> 			shl eax, 16
  4889 00003ED4 01C3                <1> 			add ebx, eax
  4890 00003ED6 B800000000          <1> 			mov eax, 0
  4891 00003EDB A0[393D0000]        <1> 			mov al, [pcidevice]
  4892 00003EE0 C1E00B              <1> 			shl eax, 11
  4893 00003EE3 01C3                <1> 			add ebx, eax
  4894 00003EE5 B800000000          <1> 			mov eax, 0
  4895 00003EEA A0[3A3D0000]        <1> 			mov al, [pcifunction]
  4896 00003EEF C1E008              <1> 			shl eax, 8
  4897 00003EF2 01C3                <1> 			add ebx, eax
  4898 00003EF4 B800000000          <1> 			mov eax, 0
  4899 00003EF9 A0[3B3D0000]        <1> 			mov al, [pciregister]
  4900 00003EFE 01C3                <1> 			add ebx, eax
  4901 00003F00 89D8                <1> 			mov eax, ebx
  4902 00003F02 C3                  <1> 			ret
  4903                                      %include 'source/disk.asm'
  4904                              <1> ;;disk.asm - new - using lba
  4905                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  4906 00003F03 89FA                <1> 	mov edx, edi
  4907 00003F05 BB[746D0000]        <1> 	mov ebx, diskfileindex
  4908                              <1> nextnamechar:
  4909 00003F0A 8A07                <1> 	mov al, [edi]
  4910 00003F0C 8A23                <1> 	mov ah, [ebx]
  4911 00003F0E 47                  <1> 	inc edi
  4912 00003F0F 43                  <1> 	inc ebx
  4913 00003F10 08E0                <1> 	or al, ah
  4914 00003F12 3C00                <1> 	cmp al, 0
  4915 00003F14 7427                <1> 	je equalfilenames
  4916 00003F16 80FC00              <1> 	cmp ah, 0
  4917 00003F19 740C                <1> 	je nextfilename
  4918 00003F1B 38E0                <1> 	cmp al, ah
  4919 00003F1D 74EB                <1> 	je nextnamechar
  4920                              <1> getebxzero:
  4921 00003F1F 8A23                <1> 	mov ah, [ebx]
  4922 00003F21 43                  <1> 	inc ebx
  4923 00003F22 80FC00              <1> 	cmp ah, 0
  4924 00003F25 75F8                <1> 	jne getebxzero
  4925                              <1> nextfilename:
  4926 00003F27 81C308000000        <1> 	add ebx, 8		;;next descriptor
  4927 00003F2D 89D7                <1> 	mov edi, edx
  4928 00003F2F 81FB[2B6E0000]      <1> 	cmp ebx, enddiskfileindex
  4929 00003F35 72D3                <1> 	jb nextnamechar
  4930 00003F37 BA94010000          <1> 	mov edx, 404	;;indicate not found error
  4931 00003F3C C3                  <1> 	ret
  4932                              <1> equalfilenames:
  4933 00003F3D 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  4934 00003F40 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  4935 00003F42 031D[2C000000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  4936 00003F48 B900000000          <1> 	mov ecx, 0
  4937 00003F4D 88C1                <1> 	mov cl, al			;;get excess number of sectors
  4938 00003F4F D0E1                <1> 	shl cl, 1
  4939 00003F51 D0E9                <1> 	shr cl, 1			;;cut off at 128
  4940 00003F53 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  4941 00003F55 B500                <1> 	mov ch, 0			;;drive 0
  4942 00003F57 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  4943                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  4944 00003F5A A3[943F0000]        <1> 	mov [filetracks], eax
  4945 00003F5F 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  4946 00003F61 89DA                <1> 	mov edx, ebx
  4947 00003F63 80F900              <1> 	cmp cl, 0
  4948 00003F66 7405                <1> 	je copytracksforfile
  4949 00003F68 E82D000000          <1> 	call diskr		;;take care of excess sectors
  4950                              <1> copytracksforfile:
  4951 00003F6D A1[943F0000]        <1> 	mov eax, [filetracks]
  4952 00003F72 3D00000000          <1> 	cmp eax, 0
  4953 00003F77 7415                <1> 	je donecopyfile
  4954 00003F79 48                  <1> 	dec eax
  4955 00003F7A A3[943F0000]        <1> 	mov [filetracks], eax
  4956 00003F7F 89D3                <1> 	mov ebx, edx	;;get end lba
  4957 00003F81 66B98000            <1> 	mov cx, 0x80
  4958 00003F85 89FE                <1> 	mov esi, edi	;;reset buffer
  4959 00003F87 E80E000000          <1> 	call diskr
  4960 00003F8C EBDF                <1> 	jmp copytracksforfile
  4961                              <1> donecopyfile:
  4962 00003F8E BA00000000          <1> 	mov edx, 0	;;no error
  4963 00003F93 C3                  <1> 	ret
  4964                              <1> 	
  4965 00003F94 00000000            <1> filetracks dd 0
  4966                              <1> 	
  4967 00003F98 6400                <1> segments dw 100
  4968                              <1> 
  4969                              <1> diskr:		;;sector count in cl, disk number in ch, 28 bit address in first 28 bits of ebx, buffer in esi, puts end buffer in edi and end lba in edx
  4970 00003F9A 8935[32400000]      <1> 	mov [bufferstartesi], esi
  4971 00003FA0 891D[2E400000]      <1> 	mov [lbaadstartebx], ebx
  4972 00003FA6 BA00000000          <1> 	mov edx, 0
  4973 00003FAB 88CA                <1> 	mov dl, cl
  4974 00003FAD 01DA                <1> 	add edx, ebx
  4975 00003FAF 8915[2A400000]      <1> 	mov [lbaadend], edx
  4976 00003FB5 66B80000            <1> 	mov ax, 0
  4977 00003FB9 66BAF101            <1> 	mov dx, 0x1F1
  4978 00003FBD EE                  <1> 	out dx, al	;;send null byte to port
  4979 00003FBE 6642                <1> 	inc dx	;;0x1F2
  4980 00003FC0 88C8                <1> 	mov al, cl	;;get sector count
  4981 00003FC2 EE                  <1> 	out dx, al	;;send sector count
  4982 00003FC3 6642                <1> 	inc dx	;;0x1F3
  4983 00003FC5 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  4984 00003FC7 EE                  <1> 	out dx, al	;;send them
  4985 00003FC8 6642                <1> 	inc dx	;;0x1F4
  4986 00003FCA C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  4987 00003FCD 88D8                <1> 	mov al, bl
  4988 00003FCF EE                  <1> 	out dx, al
  4989 00003FD0 6642                <1> 	inc dx	;;0x1F5
  4990 00003FD2 C1CB08              <1> 	ror ebx, 8	;;again
  4991 00003FD5 88D8                <1> 	mov al, bl
  4992 00003FD7 EE                  <1> 	out dx, al
  4993 00003FD8 6642                <1> 	inc dx	;;0x1F6
  4994 00003FDA C1CB08              <1> 	ror ebx, 8
  4995 00003FDD 88D8                <1> 	mov al, bl
  4996 00003FDF 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  4997 00003FE1 0CE0                <1> 	or al, 0xE0			;;majic number
  4998 00003FE3 C0E504              <1> 	shl ch, 4
  4999 00003FE6 08E8                <1> 	or al, ch
  5000 00003FE8 EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  5001 00003FE9 6642                <1> 	inc dx	;;0x1F7
  5002 00003FEB B020                <1> 	mov al, 0x20
  5003 00003FED EE                  <1> 	out dx, al			;;execute read command
  5004                              <1> diskrwait:
  5005 00003FEE 66BAF701            <1> 	mov dx, 0x1F7
  5006 00003FF2 EC                  <1> 	in al, dx
  5007 00003FF3 2408                <1> 	and al, 0x08
  5008 00003FF5 3C08                <1> 	cmp al, 0x08
  5009 00003FF7 75F5                <1> 	jne diskrwait
  5010 00003FF9 88CD                <1> 	mov ch, cl	;;move sector data into ch, multiplying it by 256
  5011 00003FFB B100                <1> 	mov cl, 0
  5012                              <1> diskdataread:
  5013 00003FFD 66BAF001            <1> 	mov dx, 0x1F0
  5014 00004001 66ED                <1> 	in ax, dx
  5015 00004003 668906              <1> 	mov [esi], ax
  5016 00004006 81C602000000        <1> 	add esi, 2
  5017 0000400C 6649                <1> 	dec cx
  5018 0000400E 6681F90000          <1> 	cmp cx, 0
  5019 00004013 75E8                <1> 	jne diskdataread		;;read all sectors
  5020 00004015 89F7                <1> 	mov edi, esi
  5021 00004017 8B15[2A400000]      <1> 	mov edx, [lbaadend]
  5022 0000401D 8B35[32400000]      <1> 	mov esi, [bufferstartesi]
  5023 00004023 8B1D[2E400000]      <1> 	mov ebx, [lbaadstartebx]
  5024 00004029 C3                  <1> 	ret
  5025                              <1> 	
  5026 0000402A 00000000            <1> lbaadend dd 0
  5027 0000402E 00000000            <1> lbaadstartebx dd 0
  5028 00004032 00000000            <1> bufferstartesi dd 0
  5029                                      %include 'source/msg.asm'
  5030 00004036 6578697400          <1> 	exitmsg db	"exit",0
  5031 0000403B 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  5032 00004044 00                  <1>
  5033 00004045 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  5034 0000404E 6E642E0D0A00        <1>
  5035 00004054 456E74657220506173- <1> 	pwdask	db	"Enter Password:",0
  5036 0000405D 73776F72643A00      <1>
  5037 00004064 70617373776F726400  <1> 	pwd	db	"password",0
  5038 0000406D 5B7573657240536F6C- <1> 	cmd	db	"[user@SollerOS-v0.9.0$]",0
  5039 00004076 6C65724F532D76302E- <1>
  5040 0000407F 392E30245D00        <1>
  5041 00004085 0D0A00              <1> 	line	db	13,10,0
  5042 00004088 536F6C6C65724F532D- <1> 	unamemsg db	"SollerOS-v0.9.0 x86 Made from scratch with assembly by Jeremy Soller",10,13,0
  5043 00004091 76302E392E30207838- <1>
  5044 0000409A 36204D616465206672- <1>
  5045 000040A3 6F6D20736372617463- <1>
  5046 000040AC 682077697468206173- <1>
  5047 000040B5 73656D626C79206279- <1>
  5048 000040BE 204A6572656D792053- <1>
  5049 000040C7 6F6C6C65720A0D00    <1>
  5050 000040CF 54686973206F706572- <1> 	helpmsg db	"This operating system is way too simple to warrant the creation of a help file.",10,13,0
  5051 000040D8 6174696E6720737973- <1>
  5052 000040E1 74656D206973207761- <1>
  5053 000040EA 7920746F6F2073696D- <1>
  5054 000040F3 706C6520746F207761- <1>
  5055 000040FC 7272616E7420746865- <1>
  5056 00004105 206372656174696F6E- <1>
  5057 0000410E 206F6620612068656C- <1>
  5058 00004117 702066696C652E0A0D- <1>
  5059 00004120 00                  <1>
  5060 00004121 536F6C6C65724F5320- <1>     msg:       db "SollerOS Beta version 0.9.0 - compiled by Jeremy Soller.",13,10,0
  5061 0000412A 426574612076657273- <1>
  5062 00004133 696F6E20302E392E30- <1>
  5063 0000413C 202D20636F6D70696C- <1>
  5064 00004145 6564206279204A6572- <1>
  5065 0000414E 656D7920536F6C6C65- <1>
  5066 00004157 722E0D0A00          <1>
  5067 0000415C 506C65617365207365- <1>     wrongmsg:  db "Please select one of the options above.",13,10,"You selected: ",0
  5068 00004165 6C656374206F6E6520- <1>
  5069 0000416E 6F6620746865206F70- <1>
  5070 00004177 74696F6E732061626F- <1>
  5071 00004180 76652E0D0A596F7520- <1>
  5072 00004189 73656C65637465643A- <1>
  5073 00004192 2000                <1>
  5074 00004194 546F2072756E207468- <1> 	batchmsg db "To run this batch type runbatch and press enter.",10,13,0
  5075 0000419D 697320626174636820- <1>
  5076 000041A6 747970652072756E62- <1>
  5077 000041AF 6174636820616E6420- <1>
  5078 000041B8 707265737320656E74- <1>
  5079 000041C1 65722E0A0D00        <1>
  5080                              <1> 	
  5081 000041C1 <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  5082                              <1> fontend2:
  5083                              <1> mcursor:
  5084 000049D7 01                  <1> 	db	00000001b
  5085 000049D8 81                  <1> 	db	10000001b
  5086 000049D9 C1                  <1> 	db	11000001b
  5087 000049DA E1                  <1> 	db	11100001b
  5088 000049DB F1                  <1> 	db	11110001b
  5089 000049DC F9                  <1> 	db	11111001b
  5090 000049DD FD                  <1> 	db	11111101b
  5091 000049DE FF                  <1> 	db	11111111b
  5092 000049DF F9                  <1> 	db	11111001b
  5093 000049E0 B9                  <1> 	db	10111001b
  5094 000049E1 39                  <1> 	db	00111001b
  5095 000049E2 1C                  <1> 	db	00011100b
  5096 000049E3 1C                  <1> 	db	00011100b
  5097 000049E4 0E                  <1> 	db	00001110b
  5098 000049E5 0E                  <1> 	db	00001110b
  5099 000049E6 0C                  <1> 	db	00001100b
  5100                              <1> fontend:
  5101                              <1> 
  5102                              <1> cursorbmp:
  5103 000049E7 0100000000000000    <1> 	db	1,0,0,0,0,0,0,0
  5104 000049EF 0101000000000000    <1> 	db	1,1,0,0,0,0,0,0
  5105 000049F7 0101010000000000    <1> 	db	1,1,1,0,0,0,0,0
  5106 000049FF 0101010100000000    <1> 	db	1,1,1,1,0,0,0,0
  5107 00004A07 0101010101000000    <1> 	db	1,1,1,1,1,0,0,0
  5108 00004A0F 0101010101010000    <1> 	db	1,1,1,1,1,1,0,0
  5109 00004A17 0101010101010100    <1> 	db	1,1,1,1,1,1,1,0
  5110 00004A1F 0101010101010101    <1> 	db	1,1,1,1,1,1,1,1
  5111 00004A27 0101010101010000    <1> 	db	1,1,1,1,1,1,0,0
  5112 00004A2F 0101000101010000    <1> 	db	1,1,0,1,1,1,0,0
  5113 00004A37 0100000101010000    <1> 	db	1,0,0,1,1,1,0,0
  5114 00004A3F 0000000001010100    <1> 	db	0,0,0,0,1,1,1,0
  5115 00004A47 0000000001010100    <1> 	db	0,0,0,0,1,1,1,0
  5116 00004A4F 0000000000010101    <1> 	db	0,0,0,0,0,1,1,1
  5117 00004A57 0000000000010101    <1> 	db	0,0,0,0,0,1,1,1
  5118 00004A5F 0000000000010100    <1> 	db	0,0,0,0,0,1,1,0
  5119                              <1> cursorbmpend:
  5120                              <1> ;;; ZEROS-THESE DO NOT NEED TO BE COMPILED BUT ADDRESSES SHOULD BE USED
  5121                              <1> ;;[section .bss] compile these
  5122                              <1> 
  5123                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  5124 00004A67 00<rept>            <1> 	times 200h db 0
  5125                              <1> 	graphicstableend:
  5126                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  5127 00004C67 00<rept>            <1> times 256 db 0
  5128                              <1> mcolorend:
  5129 00004D67 00                  <1> IFON times 1 db 0
  5130 00004D68 00<rept>            <1> IFTRUE times 100 db 0
  5131 00004DCC 00<rept>            <1> BATCHPOS times 4 db 0
  5132 00004DD0 00                  <1> BATCHISON times 1 db 0
  5133 00004DD1 00                  <1> LOOPON times 1 db 0
  5134 00004DD2 00<rept>            <1> LOOPPOS	times 4 db 0
  5135 00004DD6 00<rept>            <1> fileindex: times 200h db 0	
  5136                              <1> fileindexend:
  5137 00004FD6 00                  <1> bufferhelper:	db 0
  5138 00004FD7 00<rept>            <1> variables: 	times 500h db 0
  5139                              <1> varend:
  5140 000054D7 00<rept>            <1> buftxt: times 200h db 0
  5141 000056D7 00<rept>            <1> buf2:	times 20 db 0	;;should be initialized as '0'
  5142 000056EB 00                  <1> numbuf:  db 0
  5143 000056EC 00<rept>            <1> videobuf2 	times 0x12C0 db 0
  5144                              <1> videobufend:
  5145 000069AC 00<rept>            <1> 	times 200 db 0
  5146                              <1> 
  5147                              <1> VBEMODEBLOCK:
  5148 00006A74 00<rept>            <1> vbesignature 	times 4 db 0	;VBE Signature
  5149 00006A78 00<rept>            <1> vbeversion  		times 2 db 0   ;VBE Version
  5150 00006A7A 00<rept>            <1> oemstringptr  		times 4 db 0 ;Pointer to OEM String
  5151 00006A7E 00<rept>            <1> capabilities 	times 4 db 0  	;Capabilities of graphics cont.
  5152 00006A82 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  5153 00006A86 00<rept>            <1> totalmemory   		times 2 db 0    ;number of 64Kb memory blocks
  5154 00006A88 00<rept>            <1> oemsoftwarerev  	times 2	db 0	;VBE implementation Software revision
  5155 00006A8A 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  5156 00006A8E 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  5157 00006A92 00<rept>            <1> oemproductrevptr 	times 4 db 0 	;Pointer to Product Revision String
  5158 00006A96 00<rept>            <1> reserved	times 222 db 0	;Reserved for VBE implementation scratch area
  5159 00006B74 00<rept>            <1> oemdata 	times 256 db 0	;Data Area for OEM Strings
  5160                              <1> 
  5161                              <1> 
  5162                              <1> VBEMODEINFOBLOCK:
  5163                              <1> ;Mandatory information for all VBE revision
  5164 00006C74 00<rept>            <1> modeattributes   times 2 db 0 ;Mode attributes
  5165 00006C76 00                  <1> winaattributes   times 1 db 0 ;Window A attributes
  5166 00006C77 00                  <1> winbattributes   times 1 db 0 ;Window B attributes
  5167 00006C78 00<rept>            <1> wingranularity   times 2 db 0 ;Window granularity
  5168 00006C7A 00<rept>            <1> winsize          times 2 db 0 ;Window size
  5169 00006C7C 00<rept>            <1> winasegment      times 2 db 0 ;Window A start segment
  5170 00006C7E 00<rept>            <1> winbsegment      times 2 db 0 ;Window B start segment
  5171 00006C80 00<rept>            <1> winfuncptr       times 4 db 0 ;pointer to window function
  5172 00006C84 00<rept>            <1> bytesperscanline times 2 db 0 ;Bytes per scan line
  5173                              <1> 
  5174                              <1> ;Mandatory information for VBE 1.2 and above
  5175 00006C86 00<rept>            <1> xresolution     times 2	db 0    ;Horizontal resolution in pixel or chars
  5176 00006C88 00<rept>            <1> yresolution	times 2 db 0       ;Vertical resolution in pixel or chars
  5177 00006C8A 00                  <1> xcharsize       times 1	db 0    ;Character cell width in pixel
  5178 00006C8B 00                  <1> ycharsize       times 1	db 0    ;Character cell height in pixel
  5179 00006C8C 00                  <1> numberofplanes  times 1	db 0    ;Number of memory planes
  5180 00006C8D 00                  <1> bitsperpixel    times 1	db 0    ;Bits per pixel
  5181 00006C8E 00                  <1> numberofbanks   times 1	db 0    ;Number of banks
  5182 00006C8F 00                  <1> memorymodel     times 1	db 0    ;Memory model type
  5183 00006C90 00                  <1> banksize        times 1 db 0	    ;Bank size in KB
  5184 00006C91 00                  <1> numberofimagepages    times 1 db 0 ;Number of images
  5185 00006C92 00                  <1> reserved1       times 1	db 0    ;Reserved for page function
  5186                              <1> 
  5187                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  5188 00006C93 00                  <1> redmasksize		times 1 db 0       ;Size of direct color red mask in bits
  5189 00006C94 00                  <1> redfieldposition	times 1	db 0    ;Bit position of lsb of red bask
  5190 00006C95 00                  <1> greenmasksize   	times 1	db 0    ;Size of direct color green mask in bits
  5191 00006C96 00                  <1> greenfieldposition	times 1	db 0    ;Bit position of lsb of green bask
  5192 00006C97 00                  <1> bluemasksize		times 1 db 0     ;Size of direct color blue mask in bits
  5193 00006C98 00                  <1> bluefieldposition	times 1	db 0    ;Bit position of lsb of blue bask
  5194 00006C99 00                  <1> rsvdmasksize        times 1	db 0    ;Size of direct color reserved mask in bits
  5195 00006C9A 00                  <1> rsvdfieldposition	times 1	db 0    ;Bit position of lsb of reserved bask
  5196 00006C9B 00                  <1> directcolormodeinfo	times 1	db 0    ;Direct color mode attributes
  5197                              <1> 
  5198                              <1> ;Mandatory information for VBE 2.0 and above
  5199 00006C9C 00<rept>            <1> physbaseptr times 4 db 0        ;Physical address for flat frame buffer
  5200 00006CA0 00<rept>            <1> offscreenmemoffset times 4 db 0 ;Pointer to start of off screen memory
  5201 00006CA4 00<rept>            <1> offscreenmemsize times 2 db 0     ;Amount of off screen memory in 1Kb units
  5202 00006CA6 00<rept>            <1> reserved2 times 206 db 0  ;Remainder of ModeInfoBlock
  5203                                      %include 'files.asm'
  5204                              <1> diskfileindex:
  5205 00006D74 65786563757461626C- <1> db "executablewithareallyreallyreallyextremelyterriblylongnameandnoextension",0
  5206 00006D7D 657769746861726561- <1>
  5207 00006D86 6C6C797265616C6C79- <1>
  5208 00006D8F 7265616C6C79657874- <1>
  5209 00006D98 72656D656C79746572- <1>
  5210 00006DA1 7269626C796C6F6E67- <1>
  5211 00006DAA 6E616D65616E646E6F- <1>
  5212 00006DB3 657874656E73696F6E- <1>
  5213 00006DBC 00                  <1>
  5214 00006DBD 38000000            <1> dd (f0-$$)/512
  5215 00006DC1 01000000            <1> dd (f1-f0)/512
  5216 00006DC5 736F6C6C65726F732E- <1> db "solleros.bmp",0
  5217 00006DCE 626D7000            <1>
  5218 00006DD2 39000000            <1> dd (f1-$$)/512
  5219 00006DD6 B0020000            <1> dd (f2-f1)/512
  5220 00006DDA 736F6C6C65726F732E- <1> db "solleros.txt",0
  5221 00006DE3 74787400            <1>
  5222 00006DE7 E9020000            <1> dd (f2-$$)/512
  5223 00006DEB 01000000            <1> dd (f3-f2)/512
  5224 00006DEF 74656C7900          <1> db "tely",0
  5225 00006DF4 EA020000            <1> dd (f3-$$)/512
  5226 00006DF8 01000000            <1> dd (f4-f3)/512
  5227 00006DFC 7465737400          <1> db "test",0
  5228 00006E01 EB020000            <1> dd (f4-$$)/512
  5229 00006E05 01000000            <1> dd (f5-f4)/512
  5230 00006E09 74696D6500          <1> db "time",0
  5231 00006E0E EC020000            <1> dd (f5-$$)/512
  5232 00006E12 01000000            <1> dd (f6-f5)/512
  5233 00006E16 7475746F7269616C2E- <1> db "tutorial.bat",0
  5234 00006E1F 62617400            <1>
  5235 00006E23 ED020000            <1> dd (f6-$$)/512
  5236 00006E27 02000000            <1> dd (f7-f6)/512
  5237                              <1> enddiskfileindex:
  5238                              <1> 
  5239 00006E2B 00<rept>            <1> align 512,db 0
  5240                              <1> f0:
  5241 00006E2B <incbin>            <1> incbin "included/executablewithareallyreallyreallyextremelyterriblylongnameandnoextension"
  5242 00007037 00<rept>            <1> align 512,db 0
  5243                              <1> f1:
  5244 00007037 <incbin>            <1> incbin "included/solleros.bmp"
  5245 0005D1E6 00<rept>            <1> align 512,db 0
  5246                              <1> f2:
  5247 0005D1E6 <incbin>            <1> incbin "included/solleros.txt"
  5248 0005D397 00<rept>            <1> align 512,db 0
  5249                              <1> f3:
  5250 0005D397 <incbin>            <1> incbin "included/tely"
  5251 0005D5BD 00<rept>            <1> align 512,db 0
  5252                              <1> f4:
  5253 0005D5BD <incbin>            <1> incbin "included/test"
  5254 0005D666 00<rept>            <1> align 512,db 0
  5255                              <1> f5:
  5256 0005D666 <incbin>            <1> incbin "included/time"
  5257 0005D954 00<rept>            <1> align 512,db 0
  5258                              <1> f6:
  5259 0005D954 <incbin>            <1> incbin "included/tutorial.bat"
  5260 0005DD57 00<rept>            <1> align 512,db 0
  5261                              <1> f7:
