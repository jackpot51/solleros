     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> %include 'source/signature.asm'
     5                              <2> signature:	;used by bootloader to find SollerOS, is totally awesome
     6 00000000 EDA55ED1            <2> dd 0xD15EA5ED	;diseased
     7 00000004 15D000B1            <2> dd 0xB100D015	;blood is
     8 00000008 EDFED2BA            <2> dd 0xBAD2FEED	;bad to feed
     9 0000000C 95D0112A            <2> dd 0x2A11D095	;to all dogs
    10 00000010 52A71CA1            <2> dd 0xA11CA752	;all cats too.
    11 00000014 0F751015            <2> dd 0x1510750F   ;is lots of
    12 00000018 75CAADDE            <2> dd 0xDEADCA75   ;dead cats
    13 0000001C 95D0ADDE            <2> dd 0xDEADD095   ;dead dogs
    14 00000020 14000000            <2> dd 20			;version
    15 00000024 534F4C4C45524F53    <2> db "SOLLEROS"
    16                              <2> signatureend:
    17                              <1> menustart:	
    18 0000002C 8CC8                <1> 	mov ax, cs
    19 0000002E 8ED8                <1> 	mov ds, ax
    20 00000030 8EC0                <1> 	mov es, ax
    21 00000032 8ED0                <1> 	mov ss, ax
    22 00000034 880E[8701]          <1> 	mov [DriveNumber], cl
    23 00000038 668916[8801]        <1> 	mov [lbaad], edx
    24 0000003D B800A0              <1> 	mov ax, 0xA000
    25 00000040 8EE8                <1> 	mov gs, ax
    26 00000042 B81200              <1> 	mov ax, 12h
    27 00000045 BB0000              <1> 	mov bx, 0
    28 00000048 CD10                <1> 	int 10h
    29                              <1> guiload:
    30 0000004A BE[9802]            <1> 	mov si, bootmsg
    31 0000004D E85101              <1> 	call printrm
    32 00000050 B80000              <1> 	mov ax, 0
    33 00000053 CD16                <1> 	int 16h
    34 00000055 3C79                <1> 	cmp al, "y"
    35 00000057 0F85F900            <1> 	jne near guiload2
    36                              <1> guiloadagain:
    37 0000005B B8004F              <1> 	mov ax, 04F00h
    38 0000005E BF[4C68]            <1> 	mov di, VBEMODEBLOCK
    39 00000061 CD10                <1> 	int 10h
    40 00000063 BE[6E68]            <1> 	mov si, reserved
    41 00000066 81EE0200            <1> 	sub si, 2
    42                              <1> findvideomodes:
    43 0000006A 81C60200            <1> 	add si, 2
    44 0000006E 8B0C                <1> 	mov cx, [si]
    45 00000070 81F9FFFF            <1> 	cmp cx, 0xFFFF
    46 00000074 0F840A00            <1> 	je near nextvmode
    47 00000078 81FE[4C69]          <1> 	cmp si, oemdata
    48 0000007C 0F83D400            <1> 	jae near guiload2	;;kill if no valid list is found
    49 00000080 EBE8                <1> 	jmp findvideomodes 	
    50                              <1> ;;debug,shows vmodes available
    51                              <1> nextvmode:
    52 00000082 81EE0200            <1> 	sub si, 2
    53 00000086 81FE[6E68]          <1> 	cmp si, reserved
    54 0000008A 0F82CDFF            <1> 	jb near guiloadagain
    55 0000008E 8B0C                <1> 	mov cx, [si]
    56 00000090 81F9FFFF            <1> 	cmp cx, 0xFFFF
    57 00000094 0F84EAFF            <1> 	je near nextvmode
    58 00000098 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    59 0000009C B8014F              <1> 	mov ax, 04F01h
    60 0000009F BF[4C6A]            <1> 	mov di, VBEMODEINFOBLOCK
    61 000000A2 890E[8C01]          <1> 	mov [vesamode], cx
    62 000000A6 CD10                <1> 	int 10h
    63 000000A8 A0[656A]            <1> 	mov al, [bitsperpixel]
    64 000000AB 3C10                <1> 	cmp al, 16
    65 000000AD 75D3                <1> 	jne nextvmode
    66 000000AF 8936[8E01]          <1> 	mov [videomodecache], si
    67 000000B3 80FC00              <1> 	cmp ah, 0
    68 000000B6 0F842200            <1> 	je near setvesamode
    69 000000BA EBC6                <1> 	jmp nextvmode
    70 000000BC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    71 000000C5 20766964656F206D6F- <1>
    72 000000CE 6465204F4B3F28792F- <1>
    73 000000D7 6E290D0A00          <1>
    74                              <1> setvesamode:
    75 000000DC 8B0E[5E6A]          <1> 	mov cx, [xresolution]
    76 000000E0 E8D600              <1> 	call decshow
    77 000000E3 B078                <1> 	mov al, "x"
    78 000000E5 E83E01              <1> 	call char
    79 000000E8 8B0E[606A]          <1> 	mov cx, [yresolution]
    80 000000EC E8CA00              <1> 	call decshow
    81 000000EF B040                <1> 	mov al, "@"
    82 000000F1 E83201              <1> 	call char
    83 000000F4 8A0E[656A]          <1> 	mov cl, [bitsperpixel]
    84 000000F8 E8BE00              <1> 	call decshow
    85 000000FB BE[BC00]            <1> 	mov si, isthisvideook
    86 000000FE E8A000              <1> 	call printrm
    87 00000101 B80000              <1> 	mov ax, 0
    88 00000104 CD16                <1> 	int 16h
    89 00000106 8B36[8E01]          <1> 	mov si, [videomodecache]
    90 0000010A 3C79                <1> 	cmp al, "y"
    91 0000010C 0F8572FF            <1> 	jne near nextvmode
    92 00000110 8B16[5E6A]          <1> 	mov dx, [xresolution]
    93 00000114 8B0E[606A]          <1> 	mov cx, [yresolution]
    94 00000118 8916[6443]          <1> 	mov [resolutionx], dx
    95 0000011C 890E[6243]          <1> 	mov [resolutiony], cx
    96 00000120 01D2                <1> 	add dx, dx
    97 00000122 8916[6643]          <1> 	mov [resolutionx2], dx
    98 00000126 BA0000              <1> 	mov dx, 0
    99 00000129 B90000              <1> 	mov cx, 0
   100 0000012C B8024F              <1> 	mov ax, 04F02h
   101 0000012F 8B1E[8C01]          <1> 	mov bx, [vesamode]
   102 00000133 CD10                <1> 	int 10h		;;enter VESA mode
   103 00000135 C606[9001]00        <1> 	mov byte [guinodo], 0
   104 0000013A C606[E234]01        <1> 	mov byte [guion], 1
   105 0000013F 6631C0              <1> 	xor eax, eax
   106 00000142 6631DB              <1> 	xor ebx, ebx
   107 00000145 6631C9              <1> 	xor ecx, ecx
   108 00000148 6631D2              <1> 	xor edx, edx
   109 0000014B 6631F6              <1> 	xor esi, esi
   110 0000014E 6631FF              <1> 	xor edi, edi	;;reset registers
   111 00000151 E95E01              <1> 	jmp pmode
   112                              <1> guiload2:
   113 00000154 B9E001              <1> 	mov cx, 480
   114 00000157 BA8002              <1> 	mov dx, 640
   115 0000015A 8916[6443]          <1> 	mov [resolutionx], dx
   116 0000015E 01D2                <1> 	add dx, dx
   117 00000160 8916[6643]          <1> 	mov [resolutionx2], dx
   118 00000164 890E[6243]          <1> 	mov [resolutiony], cx
   119 00000168 B81200              <1> 	mov ax, 12h
   120 0000016B BB0000              <1> 	mov bx, 0
   121 0000016E CD10                <1> 	int 10h
   122 00000170 C606[9001]01        <1> 	mov byte [guinodo], 1
   123 00000175 6631DB              <1> 	xor ebx, ebx
   124 00000178 6631C9              <1> 	xor ecx, ecx
   125 0000017B 6631D2              <1> 	xor edx, edx
   126 0000017E 6631F6              <1> 	xor esi, esi
   127 00000181 6631FF              <1> 	xor edi, edi
   128 00000184 E92B01              <1> 	jmp pmode
   129                              <1> 
   130 00000187 00                  <1> DriveNumber db 0
   131 00000188 00000000            <1> lbaad dd 0
   132                              <1> 	
   133 0000018C 0000                <1> vesamode dw 0
   134 0000018E 0000                <1> videomodecache dw 0
   135                              <1> 
   136 00000190 00                  <1> guinodo db 0
   137                              <1> tests:
   138 00000191 BB0700              <1> 	mov bx, 7
   139 00000194 B40E                <1> 	mov ah, 0Eh
   140 00000196 FEC0                <1> 	inc al
   141 00000198 3C02                <1> 	cmp al, 2
   142 0000019A 7501                <1> 	jne cnttest
   143 0000019C C3                  <1> 	ret
   144                              <1> cnttest:
   145 0000019D CD10                <1> 	int 10h
   146 0000019F EBF0                <1> 	jmp tests
   147                              <1> 
   148                              <1>     printrm:			; 'si' comes in with string address
   149 000001A1 BB0700              <1> 	    mov bx,07		; write to display
   150 000001A4 B40E                <1> 	    mov ah,0Eh		; screen function
   151 000001A6 8A04                <1>     prs2:    mov al,[si]         ; get next character
   152 000001A8 3C00                <1> 	    cmp al,0		; look for terminator 
   153 000001AA 7405                <1>             je finpr2		; zero byte at end of string
   154 000001AC CD10                <1> 	    int 10h		; write character to screen.    
   155 000001AE 46                  <1>      	    inc si	     	; move to next character
   156 000001AF EBF5                <1> 	    jmp prs2		; loop
   157 000001B1 C3                  <1>     finpr2: ret
   158                              <1> 
   159 000001B2 0000000000          <1> dcnm db 0,0,0,0,0
   160 000001B7 0000                <1> dcnmend db 0,0
   161                              <1> 
   162                              <1> 
   163                              <1> decshow:
   164 000001B9 BE[B201]            <1> 	mov si, dcnm
   165                              <1> decclear:
   166 000001BC B030                <1> 	mov al, "0"
   167 000001BE 8804                <1> 	mov [si], al
   168 000001C0 46                  <1> 	inc si
   169 000001C1 81FE[B701]          <1> 	cmp si, dcnmend
   170 000001C5 76F5                <1> 	jbe decclear
   171 000001C7 4E                  <1> 	dec si
   172 000001C8 E81500              <1> 	call convertrm
   173 000001CB BE[B201]            <1> 	mov si, dcnm
   174                              <1> dectst:
   175 000001CE 8A04                <1> 	mov al, [si]
   176 000001D0 46                  <1> 	inc si
   177 000001D1 81FE[B701]          <1> 	cmp si, dcnmend
   178 000001D5 7704                <1> 	ja dectstend
   179 000001D7 3C30                <1> 	cmp al, "0"
   180 000001D9 76F3                <1> 	jbe dectst
   181                              <1> dectstend:
   182 000001DB 4E                  <1> 	dec si
   183 000001DC E8C2FF              <1> 	call printrm
   184 000001DF C3                  <1> 	ret
   185                              <1> 	
   186                              <1> 	
   187                              <1> convertrm:
   188 000001E0 4E                  <1> 	dec si
   189 000001E1 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   190                              <1> cnvrtrm:
   191 000001E3 89DE                <1> 	mov si, bx
   192 000001E5 81EE0300            <1> 	sub si, 3
   193 000001E9 46                  <1> ten3rm:	inc si
   194 000001EA 81F9E803            <1> 	cmp cx, 1000
   195 000001EE 7208                <1> 	jb ten2rm
   196 000001F0 81E9E803            <1> 	sub cx, 1000
   197 000001F4 FE04                <1> 	inc byte [si]
   198 000001F6 EBEB                <1> 	jmp cnvrtrm
   199 000001F8 46                  <1> ten2rm:	inc si
   200 000001F9 81F96400            <1> 	cmp cx, 100
   201 000001FD 7208                <1> 	jb ten1rm
   202 000001FF 81E96400            <1> 	sub cx, 100
   203 00000203 FE04                <1> 	inc byte [si]
   204 00000205 EBDC                <1> 	jmp cnvrtrm
   205 00000207 46                  <1> ten1rm:	inc si
   206 00000208 81F90A00            <1> 	cmp cx, 10
   207 0000020C 7208                <1> 	jb ten0rm
   208 0000020E 81E90A00            <1> 	sub cx, 10
   209 00000212 FE04                <1> 	inc byte [si]
   210 00000214 EBCD                <1> 	jmp cnvrtrm
   211 00000216 46                  <1> ten0rm:	inc si
   212 00000217 81F90100            <1> 	cmp cx, 1
   213 0000021B 7208                <1> 	jb tendnrm
   214 0000021D 81E90100            <1> 	sub cx, 1
   215 00000221 FE04                <1> 	inc byte [si]
   216 00000223 EBBE                <1> 	jmp cnvrtrm
   217                              <1> tendnrm:
   218 00000225 C3                  <1> 	ret
   219                              <1> 
   220                              <1> 
   221                              <1> 
   222                              <1> 
   223                              <1>     char: 		    ;char must be in al
   224 00000226 BB0700              <1>        mov bx, 07
   225 00000229 B40E                <1> 	   mov ah, 0Eh
   226 0000022B CD10                <1> 	   int 10h
   227 0000022D C3                  <1> 	   ret
   228                              <1> 
   229                              <1> 		shutdown:
   230 0000022E 0F20C0              <1> 				mov eax, cr0
   231 00000231 24FE                <1> 				and al,0xFE     ; back to realmode
   232 00000233 0F22C0              <1> 				mov  cr0, eax   ; by toggling bit again
   233 00000236 FB                  <1> 				sti
   234 00000237 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   235 0000023A 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   236 0000023C CD15                <1> 			INT 15h		; shut down
   237 0000023E B80453              <1> 			MOV AX, 5304h
   238 00000241 31DB                <1> 			XOR BX, BX
   239 00000243 CD15                <1> 			INT 15h		; Interrupt 15h originally was
   240 00000245 B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   241 00000248 31DB                <1> 			XOR BX, BX	; but is still in use for
   242 0000024A CD15                <1> 			INT 15h		; diverse things
   243 0000024C B80753              <1> 			MOV AX, 5307h
   244 0000024F BB0100              <1> 			MOV BX, 1
   245 00000252 B90300              <1> 			MOV CX, 3
   246 00000255 CD15                <1> 			INT 15h
   247 00000257 CF                  <1> 			IRET
   248                              <1> 
   249                              <1> 	coldboot:
   250 00000258 0F20C0              <1> 			   mov eax, cr0
   251 0000025B 24FE                <1> 			   and al,0xFE     ; back to realmode
   252 0000025D 0F22C0              <1> 			   mov  cr0, eax   ; by toggling bit again
   253 00000260 FB                  <1> 			   sti
   254 00000261 B84000              <1> 			MOV AX, 0040h
   255 00000264 8EC0                <1> 			MOV ES, AX
   256 00000266 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   257 0000026D EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   258 00000272 CF                  <1> 			IRET
   259                              <1> 
   260                              <1> 		warmboot:
   261 00000273 E81200              <1> 			call realmode
   262 00000276 B84000              <1> 			MOV AX, 0040h
   263 00000279 8EC0                <1> 			MOV ES, AX
   264 0000027B 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   265 00000282 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   266 00000287 CF                  <1> 			IRET
   267                              <1> 
   268                              <1> 
   269                              <1> realmode:
   270 00000288 0F20C0              <1>    mov eax, cr0
   271 0000028B 24FE                <1>    and al,0xFE     ; back to realmode
   272 0000028D 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   273 00000290 FB                  <1>    sti
   274 00000291 66B800000000        <1>    mov eax, 0
   275 00000297 C3                  <1>    ret
   276                              <1>    
   277 00000298 426F6F7420696E746F- <1> bootmsg:	db "Boot into the GUI?(y/n)",10,13,0
   278 000002A1 20746865204755493F- <1>
   279 000002AA 28792F6E290A0D00    <1>
   280                                      %include 'source/pmode.asm'
   281                              <1> [BITS 16]
   282                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   283                              <1> ;	16-bit real mode
   284                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   285                              <1> 
   286                              <1> pmode:
   287 000002B2 BA9200              <1> 	mov dx, 0x92
   288 000002B5 EC                  <1> 	in al, dx	;;A20
   289 000002B6 0C02                <1> 	or al, 2
   290 000002B8 EE                  <1> 	out dx, al
   291 000002B9 66BB00000000        <1> 	mov ebx, 0
   292 000002BF 8CCB                <1> 	mov bx,cs		; EBX=segment
   293 000002C1 66C1E304            <1> 	shl ebx,4		;	<< 4
   294 000002C5 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   295 000002C9 A3[340C]            <1> 	mov [gdt2 + 2],ax
   296 000002CC A3[3C0C]            <1> 	mov [gdt3 + 2],ax
   297 000002CF 66C1E810            <1> 	shr eax,16
   298 000002D3 A2[360C]            <1> 	mov [gdt2 + 4],al
   299 000002D6 A2[3E0C]            <1> 	mov [gdt3 + 4],al
   300 000002D9 8826[390C]          <1> 	mov [gdt2 + 7],ah
   301 000002DD 8826[410C]          <1> 	mov [gdt3 + 7],ah
   302                              <1> 	
   303 000002E1 66B8[00000000]      <1> 	mov eax, stack
   304 000002E7 A3[440C]            <1> 	mov [gdts + 2],ax
   305 000002EA 66C1E810            <1> 	shr eax,16
   306 000002EE A2[460C]            <1> 	mov [gdts + 4],al
   307 000002F1 8826[490C]          <1> 	mov [gdts + 7],ah
   308 000002F5 66A1[0104]          <1> 	mov eax, [newcodecache]
   309 000002F9 A3[4C0C]            <1> 	mov [gdt4 + 2],ax
   310 000002FC A3[540C]            <1> 	mov [gdt5 + 2],ax
   311 000002FF 66C1E810            <1> 	shr eax,16
   312 00000303 A2[4E0C]            <1> 	mov [gdt4 + 4],al
   313 00000306 A2[560C]            <1> 	mov [gdt5 + 4],al
   314 00000309 8826[510C]          <1> 	mov [gdt4 + 7],ah
   315 0000030D 8826[590C]          <1> 	mov [gdt5 + 7],ah
   316                              <1> 	
   317                              <1> ; fix up gdt and idt
   318 00000311 67668D83[220C0000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   319 00000319 66A3[180C]          <1> 	mov [gdtr + 2],eax
   320 0000031D 67668D83[5A0C0000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   321 00000325 66A3[1E0C]          <1> 	mov [idtr + 2],eax
   322 00000329 FA                  <1> 	cli
   323 0000032A 0F0116[160C]        <1> 	lgdt [gdtr]
   324 0000032F 0F011E[1C0C]        <1> 	lidt [idtr]
   325 00000334 66BB00000000        <1> 	mov ebx, 0
   326 0000033A 8CDB                <1> 	mov bx, ds
   327 0000033C 66891E[FD03]        <1> 	mov [basecache], ebx
   328 00000341 0F20C0              <1> 	mov eax,cr0
   329 00000344 0C01                <1> 	or al,1
   330 00000346 0F22C0              <1> 	mov cr0,eax
   331 00000349 EA[5203]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   332                              <1> [BITS 32]
   333 0000034E 90                  <1> 	nop
   334 0000034F 90                  <1> 	nop
   335 00000350 90                  <1> 	nop
   336 00000351 90                  <1> 	nop
   337                              <1> do_pm:
   338 00000352 B800000000          <1> 	mov eax, 0
   339 00000357 66B81800            <1> 	mov ax, SYS_DATA_SEL
   340 0000035B 8ED8                <1> 	mov ds,ax
   341 0000035D 8ED0                <1> 	mov ss,ax	;;can switch back to STACK_SEL later
   342 0000035F BC[00100000]        <1> 	mov esp, stackend	;;can switch back to 4096 later
   343 00000364 90                  <1> 	nop
   344 00000365 90                  <1> 	nop
   345 00000366 8EC0                <1> 	mov es, ax
   346 00000368 8EE0                <1> 	mov fs, ax
   347 0000036A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   348 0000036E 8EE8                <1> 	mov gs, ax
   349                              <1> 	
   350                              <1> copykernel:
   351 00000370 648B06              <1> 	mov eax, [fs:esi]
   352 00000373 658906              <1> 	mov [gs:esi], eax
   353 00000376 81C604000000        <1> 	add esi, 4
   354 0000037C 81FE[00000000]      <1> 	cmp esi, bssstart
   355 00000382 72EC                <1> 	jb copykernel
   356 00000384 EA[8B030000]2800    <1> 	jmp NEW_CODE_SEL:done_copy
   357                              <1> 	
   358                              <1> done_copy:
   359 0000038B 66B83000            <1> 	mov ax, NEW_DATA_SEL	;;these MUST be setup AFTER the kernel switches places!!!
   360 0000038F 8ED8                <1> 	mov ds, ax
   361 00000391 8ED0                <1> 	mov ss, ax
   362 00000393 BC[00100000]        <1> 	mov esp, stackend
   363 00000398 90                  <1> 	nop
   364 00000399 90                  <1> 	nop
   365 0000039A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   366 0000039E 8EC0                <1> 	mov es, ax
   367 000003A0 8EE0                <1> 	mov fs, ax
   368 000003A2 66B81800            <1> 	mov ax, SYS_DATA_SEL
   369 000003A6 8EE8                <1> 	mov gs, ax
   370                              <1> 	
   371 000003A8 A1[01040000]        <1> 	mov eax, [newcodecache]
   372 000003AD C1E804              <1> 	shr eax, 4
   373 000003B0 A3[FD030000]        <1> 	mov [basecache], eax
   374                              <1> 	
   375 000003B5 89C3                <1> 	mov ebx, eax
   376 000003B7 C1E304              <1> 	shl ebx, 4
   377 000003BA 8B3D[746A0000]      <1> 	mov edi, [physbaseptr]
   378 000003C0 29DF                <1> 	sub edi, ebx
   379 000003C2 893D[746A0000]      <1> 	mov [physbaseptr], edi
   380                              <1> 	
   381 000003C8 BE[00000000]        <1> 	mov esi, bssstart
   382 000003CD B800000000          <1> 	mov eax, 0
   383                              <1> clearkernelbuffers:
   384 000003D2 8906                <1> 	mov [esi], eax
   385 000003D4 81C604000000        <1> 	add esi, 4
   386 000003DA 81FE[27642000]      <1> 	cmp esi, bssend
   387 000003E0 72F0                <1> 	jb clearkernelbuffers
   388 000003E2 803D[90010000]01    <1> 	cmp byte [guinodo], 1
   389 000003E9 7407                <1> 	je guidonot
   390 000003EB 90                  <1> 	nop
   391 000003EC 90                  <1> 	nop
   392 000003ED E9962F0000          <1> 	jmp gui
   393                              <1> guidonot:
   394 000003F2 90                  <1> 	nop
   395 000003F3 90                  <1> 	nop
   396 000003F4 E914110000          <1> 	jmp os
   397                              <1> 	
   398 000003F9 00000000            <1> user2codepoint dw 0,0
   399 000003FD 00000000            <1> basecache dd 0
   400 00000401 00001000            <1> newcodecache dd 0x100000
   401                              <1> 	
   402                              <1> 
   403                              <1> unhand:	
   404                              <1> 	%assign i 0
   405                              <1> 	%rep 40
   406                              <1> 	cli
   407                              <1> 	mov byte [intprob], i
   408                              <1> 	jmp unhand2
   409                              <1> 	%assign i i+1
   410                              <1> 	%endrep
   411 00000405 FA                  <2>  cli
   412 00000406 C605[69080000]00    <2>  mov byte [intprob], i
   413 0000040D E9FB010000          <2>  jmp unhand2
   414                              <2>  %assign i i+1
   415 00000412 FA                  <2>  cli
   416 00000413 C605[69080000]01    <2>  mov byte [intprob], i
   417 0000041A E9EE010000          <2>  jmp unhand2
   418                              <2>  %assign i i+1
   419 0000041F FA                  <2>  cli
   420 00000420 C605[69080000]02    <2>  mov byte [intprob], i
   421 00000427 E9E1010000          <2>  jmp unhand2
   422                              <2>  %assign i i+1
   423 0000042C FA                  <2>  cli
   424 0000042D C605[69080000]03    <2>  mov byte [intprob], i
   425 00000434 E9D4010000          <2>  jmp unhand2
   426                              <2>  %assign i i+1
   427 00000439 FA                  <2>  cli
   428 0000043A C605[69080000]04    <2>  mov byte [intprob], i
   429 00000441 E9C7010000          <2>  jmp unhand2
   430                              <2>  %assign i i+1
   431 00000446 FA                  <2>  cli
   432 00000447 C605[69080000]05    <2>  mov byte [intprob], i
   433 0000044E E9BA010000          <2>  jmp unhand2
   434                              <2>  %assign i i+1
   435 00000453 FA                  <2>  cli
   436 00000454 C605[69080000]06    <2>  mov byte [intprob], i
   437 0000045B E9AD010000          <2>  jmp unhand2
   438                              <2>  %assign i i+1
   439 00000460 FA                  <2>  cli
   440 00000461 C605[69080000]07    <2>  mov byte [intprob], i
   441 00000468 E9A0010000          <2>  jmp unhand2
   442                              <2>  %assign i i+1
   443 0000046D FA                  <2>  cli
   444 0000046E C605[69080000]08    <2>  mov byte [intprob], i
   445 00000475 E993010000          <2>  jmp unhand2
   446                              <2>  %assign i i+1
   447 0000047A FA                  <2>  cli
   448 0000047B C605[69080000]09    <2>  mov byte [intprob], i
   449 00000482 E986010000          <2>  jmp unhand2
   450                              <2>  %assign i i+1
   451 00000487 FA                  <2>  cli
   452 00000488 C605[69080000]0A    <2>  mov byte [intprob], i
   453 0000048F E979010000          <2>  jmp unhand2
   454                              <2>  %assign i i+1
   455 00000494 FA                  <2>  cli
   456 00000495 C605[69080000]0B    <2>  mov byte [intprob], i
   457 0000049C E96C010000          <2>  jmp unhand2
   458                              <2>  %assign i i+1
   459 000004A1 FA                  <2>  cli
   460 000004A2 C605[69080000]0C    <2>  mov byte [intprob], i
   461 000004A9 E95F010000          <2>  jmp unhand2
   462                              <2>  %assign i i+1
   463 000004AE FA                  <2>  cli
   464 000004AF C605[69080000]0D    <2>  mov byte [intprob], i
   465 000004B6 E952010000          <2>  jmp unhand2
   466                              <2>  %assign i i+1
   467 000004BB FA                  <2>  cli
   468 000004BC C605[69080000]0E    <2>  mov byte [intprob], i
   469 000004C3 E945010000          <2>  jmp unhand2
   470                              <2>  %assign i i+1
   471 000004C8 FA                  <2>  cli
   472 000004C9 C605[69080000]0F    <2>  mov byte [intprob], i
   473 000004D0 E938010000          <2>  jmp unhand2
   474                              <2>  %assign i i+1
   475 000004D5 FA                  <2>  cli
   476 000004D6 C605[69080000]10    <2>  mov byte [intprob], i
   477 000004DD E92B010000          <2>  jmp unhand2
   478                              <2>  %assign i i+1
   479 000004E2 FA                  <2>  cli
   480 000004E3 C605[69080000]11    <2>  mov byte [intprob], i
   481 000004EA E91E010000          <2>  jmp unhand2
   482                              <2>  %assign i i+1
   483 000004EF FA                  <2>  cli
   484 000004F0 C605[69080000]12    <2>  mov byte [intprob], i
   485 000004F7 E911010000          <2>  jmp unhand2
   486                              <2>  %assign i i+1
   487 000004FC FA                  <2>  cli
   488 000004FD C605[69080000]13    <2>  mov byte [intprob], i
   489 00000504 E904010000          <2>  jmp unhand2
   490                              <2>  %assign i i+1
   491 00000509 FA                  <2>  cli
   492 0000050A C605[69080000]14    <2>  mov byte [intprob], i
   493 00000511 E9F7000000          <2>  jmp unhand2
   494                              <2>  %assign i i+1
   495 00000516 FA                  <2>  cli
   496 00000517 C605[69080000]15    <2>  mov byte [intprob], i
   497 0000051E E9EA000000          <2>  jmp unhand2
   498                              <2>  %assign i i+1
   499 00000523 FA                  <2>  cli
   500 00000524 C605[69080000]16    <2>  mov byte [intprob], i
   501 0000052B E9DD000000          <2>  jmp unhand2
   502                              <2>  %assign i i+1
   503 00000530 FA                  <2>  cli
   504 00000531 C605[69080000]17    <2>  mov byte [intprob], i
   505 00000538 E9D0000000          <2>  jmp unhand2
   506                              <2>  %assign i i+1
   507 0000053D FA                  <2>  cli
   508 0000053E C605[69080000]18    <2>  mov byte [intprob], i
   509 00000545 E9C3000000          <2>  jmp unhand2
   510                              <2>  %assign i i+1
   511 0000054A FA                  <2>  cli
   512 0000054B C605[69080000]19    <2>  mov byte [intprob], i
   513 00000552 E9B6000000          <2>  jmp unhand2
   514                              <2>  %assign i i+1
   515 00000557 FA                  <2>  cli
   516 00000558 C605[69080000]1A    <2>  mov byte [intprob], i
   517 0000055F E9A9000000          <2>  jmp unhand2
   518                              <2>  %assign i i+1
   519 00000564 FA                  <2>  cli
   520 00000565 C605[69080000]1B    <2>  mov byte [intprob], i
   521 0000056C E99C000000          <2>  jmp unhand2
   522                              <2>  %assign i i+1
   523 00000571 FA                  <2>  cli
   524 00000572 C605[69080000]1C    <2>  mov byte [intprob], i
   525 00000579 E98F000000          <2>  jmp unhand2
   526                              <2>  %assign i i+1
   527 0000057E FA                  <2>  cli
   528 0000057F C605[69080000]1D    <2>  mov byte [intprob], i
   529 00000586 E982000000          <2>  jmp unhand2
   530                              <2>  %assign i i+1
   531 0000058B FA                  <2>  cli
   532 0000058C C605[69080000]1E    <2>  mov byte [intprob], i
   533 00000593 E975000000          <2>  jmp unhand2
   534                              <2>  %assign i i+1
   535 00000598 FA                  <2>  cli
   536 00000599 C605[69080000]1F    <2>  mov byte [intprob], i
   537 000005A0 E968000000          <2>  jmp unhand2
   538                              <2>  %assign i i+1
   539 000005A5 FA                  <2>  cli
   540 000005A6 C605[69080000]20    <2>  mov byte [intprob], i
   541 000005AD E95B000000          <2>  jmp unhand2
   542                              <2>  %assign i i+1
   543 000005B2 FA                  <2>  cli
   544 000005B3 C605[69080000]21    <2>  mov byte [intprob], i
   545 000005BA E94E000000          <2>  jmp unhand2
   546                              <2>  %assign i i+1
   547 000005BF FA                  <2>  cli
   548 000005C0 C605[69080000]22    <2>  mov byte [intprob], i
   549 000005C7 E941000000          <2>  jmp unhand2
   550                              <2>  %assign i i+1
   551 000005CC FA                  <2>  cli
   552 000005CD C605[69080000]23    <2>  mov byte [intprob], i
   553 000005D4 E934000000          <2>  jmp unhand2
   554                              <2>  %assign i i+1
   555 000005D9 FA                  <2>  cli
   556 000005DA C605[69080000]24    <2>  mov byte [intprob], i
   557 000005E1 E927000000          <2>  jmp unhand2
   558                              <2>  %assign i i+1
   559 000005E6 FA                  <2>  cli
   560 000005E7 C605[69080000]25    <2>  mov byte [intprob], i
   561 000005EE E91A000000          <2>  jmp unhand2
   562                              <2>  %assign i i+1
   563 000005F3 FA                  <2>  cli
   564 000005F4 C605[69080000]26    <2>  mov byte [intprob], i
   565 000005FB E90D000000          <2>  jmp unhand2
   566                              <2>  %assign i i+1
   567 00000600 FA                  <2>  cli
   568 00000601 C605[69080000]27    <2>  mov byte [intprob], i
   569 00000608 E900000000          <2>  jmp unhand2
   570                              <2>  %assign i i+1
   571                              <1> unhand2:
   572 0000060D 1E                  <1> 	push ds
   573 0000060E 06                  <1> 	push es
   574 0000060F 0FA0                <1> 	push fs
   575 00000611 0FA8                <1> 	push gs
   576 00000613 16                  <1> 	push ss
   577 00000614 60                  <1> 	pushad
   578 00000615 803D[E2340000]00    <1> 	cmp byte [guion], 0
   579 0000061C 0F8432000000        <1> 	je near noguiunhandstuff
   580 00000622 66C705[63080000]08- <1> 	mov word [locunhandy], 8
   581 0000062A 00                  <1>
   582 0000062B 66C705[65080000]08- <1> 	mov word [locunhandx], 8
   583 00000633 00                  <1>
   584 00000634 668B1D[86330000]    <1> 	mov bx, [background]
   585 0000063B 66891D[67080000]    <1> 	mov [backgroundcache], bx
   586 00000642 C605[732D0000]01    <1> 	mov byte [mousedisabled],1
   587 00000649 66BB00F8            <1> 	mov bx, 1111100000000000b
   588 0000064D 66891D[86330000]    <1> 	mov [background], bx
   589                              <1> noguiunhandstuff
   590 00000654 89E6                <1> 	mov esi, esp
   591 00000656 8935[5B080000]      <1> 	mov [espfirst], esi
   592 0000065C 81C6BC000000        <1> 	add esi, ((unhndrgend - unhndrg)/15)*4
   593 00000662 8935[57080000]      <1> 	mov [esploc], esi
   594 00000668 BE[72080000]        <1> 	mov esi, unhandmsg
   595 0000066D 8935[5F080000]      <1> 	mov [esiloc], esi
   596 00000673 BE[13580000]        <1> 	mov esi, line
   597 00000678 E84B0A0000          <1> 	call print
   598 0000067D B900000000          <1> 	mov ecx, 0
   599 00000682 8A0D[69080000]      <1> 	mov cl, [intprob]
   600 00000688 E862010000          <1> 	call expdump
   601                              <1> dumpstack:
   602 0000068D 8B35[57080000]      <1> 	mov esi, [esploc]
   603 00000693 39E6                <1> 	cmp esi, esp
   604 00000695 7216                <1> 	jb donedump
   605 00000697 368B0E              <1> 	mov ecx, [ss:esi]
   606 0000069A 81EE04000000        <1> 	sub esi, 4
   607 000006A0 8935[57080000]      <1> 	mov [esploc], esi
   608 000006A6 E844010000          <1> 	call expdump
   609 000006AB EBE0                <1> 	jmp dumpstack
   610                              <1> donedump:
   611 000006AD 0F20C1              <1> 	mov ecx, cr0
   612 000006B0 E83A010000          <1> 	call expdump
   613 000006B5 0F20D1              <1> 	mov ecx, cr2
   614 000006B8 E832010000          <1> 	call expdump
   615 000006BD 0F20D9              <1> 	mov ecx, cr3
   616 000006C0 E82A010000          <1> 	call expdump
   617 000006C5 0F20E1              <1> 	mov ecx, cr4
   618 000006C8 E822010000          <1> 	call expdump
   619 000006CD 8B35[57080000]      <1> 	mov esi, [esploc]
   620 000006D3 368B7C2434          <1> 	mov edi, [ss:esp + 52]
   621 000006D8 81C710000000        <1> 	add edi, 16
   622 000006DE 893D[6E080000]      <1> 	mov [codelocend], edi
   623 000006E4 81EF20000000        <1> 	sub edi, 32
   624                              <1> dumpcodeloop:
   625 000006EA 893D[6A080000]      <1> 	mov [codeloc], edi
   626 000006F0 8B0F                <1> 	mov ecx, [edi]
   627 000006F2 E8F8000000          <1> 	call expdump
   628 000006F7 8B3D[6A080000]      <1> 	mov edi, [codeloc]
   629 000006FD 81C704000000        <1> 	add edi, 4
   630 00000703 3B3D[6E080000]      <1> 	cmp edi, [codelocend]
   631 00000709 72DF                <1> 	jb dumpcodeloop
   632 0000070B BE[C9070000]        <1> 	mov esi, backtoosmsg
   633 00000710 803D[E2340000]00    <1> 	cmp byte [guion], 0
   634 00000717 750A                <1> 	jne guibacktomsg
   635 00000719 E8AA090000          <1> 	call print
   636 0000071E E91B000000          <1> 	jmp backtomsgdone
   637                              <1> guibacktomsg:
   638 00000723 668B15[65080000]    <1> 	mov dx, [locunhandx]
   639 0000072A 668B0D[63080000]    <1> 	mov cx, [locunhandy]
   640 00000731 66B80100            <1> 	mov ax, 1
   641 00000735 66BB0000            <1> 	mov bx, 0
   642 00000739 E896370000          <1> 	call showstring2
   643                              <1> backtomsgdone:
   644 0000073E B000                <1> 	mov al, 0
   645 00000740 E83D090000          <1> 	call int302
   646 00000745 803D[69080000]03    <1> 	cmp byte [intprob], 3
   647 0000074C 753D                <1> 	jne nodebugint
   648 0000074E 803D[E2340000]00    <1> 	cmp byte [guion], 0
   649 00000755 7423                <1> 	je nodebuggui
   650 00000757 668B1D[67080000]    <1> 	mov bx, [backgroundcache]
   651 0000075E 66891D[86330000]    <1> 	mov [background], bx
   652 00000765 66BB0000            <1> 	mov bx, 0
   653 00000769 C605[732D0000]00    <1> 	mov byte [mousedisabled], 0
   654 00000770 E8D42B0000          <1> 	call guiclear
   655 00000775 E800340000          <1> 	call reloadallgraphics
   656                              <1> nodebuggui:
   657 0000077A 8B35[5B080000]      <1> 	mov esi, [espfirst]
   658 00000780 89F4                <1> 	mov esp, esi
   659 00000782 61                  <1> 	popad
   660 00000783 17                  <1> 	pop ss
   661 00000784 0FA9                <1> 	pop gs
   662 00000786 0FA1                <1> 	pop fs
   663 00000788 07                  <1> 	pop es
   664 00000789 1F                  <1> 	pop ds
   665 0000078A CF                  <1> 	iret
   666                              <1> nodebugint:
   667 0000078B 61                  <1> 	popad
   668 0000078C 17                  <1> 	pop ss
   669 0000078D 0FA9                <1> 	pop gs
   670 0000078F 0FA1                <1> 	pop fs
   671 00000791 07                  <1> 	pop es
   672 00000792 1F                  <1> 	pop ds
   673 00000793 803D[E2340000]00    <1> 	cmp byte [guion], 0
   674 0000079A 7428                <1> 	je returnunhandgui
   675 0000079C 668B1D[67080000]    <1> 	mov bx, [backgroundcache]
   676 000007A3 66891D[86330000]    <1> 	mov [background], bx
   677 000007AA 66BB0000            <1> 	mov bx, 0
   678 000007AE C605[732D0000]00    <1> 	mov byte [mousedisabled], 0
   679 000007B5 E88F2B0000          <1> 	call guiclear
   680 000007BA E8BB330000          <1> 	call reloadallgraphics
   681 000007BF E9C42B0000          <1> 	jmp gui
   682                              <1> returnunhandgui:
   683 000007C4 E9600E0000          <1> 	jmp nwcmd
   684 000007C9 507265737320616E79- <1> backtoosmsg db "Press any key to return to SollerOS",10,13,0
   685 000007D2 206B657920746F2072- <1>
   686 000007DB 657475726E20746F20- <1>
   687 000007E4 536F6C6C65724F530A- <1>
   688 000007ED 0D00                <1>
   689                              <1> expdump:
   690 000007EF 8B35[5F080000]      <1> 	mov esi, [esiloc]
   691 000007F5 89F7                <1> 	mov edi, esi
   692 000007F7 81C70F000000        <1> 	add edi, 15
   693 000007FD 81C604000000        <1> 	add esi, 4
   694 00000803 893D[5F080000]      <1> 	mov [esiloc], edi
   695 00000809 81EF03000000        <1> 	sub edi, 3
   696 0000080F E8D8110000          <1> 	call converthex
   697 00000814 81EE04000000        <1> 	sub esi, 4
   698 0000081A 803D[E2340000]00    <1> 	cmp byte [guion], 0
   699 00000821 0F842A000000        <1> 	je near expdumptext
   700 00000827 668B0D[63080000]    <1> 	mov cx, [locunhandy]
   701 0000082E 668B15[65080000]    <1> 	mov dx, [locunhandx]
   702 00000835 66B80100            <1> 	mov ax, 1
   703 00000839 66BB0000            <1> 	mov bx, 0
   704 0000083D E892360000          <1> 	call showstring2
   705 00000842 66890D[63080000]    <1> 	mov [locunhandy], cx
   706 00000849 668915[65080000]    <1> 	mov [locunhandx], dx
   707 00000850 C3                  <1> 	ret
   708                              <1> expdumptext:
   709 00000851 E872080000          <1> 	call print
   710 00000856 C3                  <1> 	ret
   711 00000857 00000000            <1> esploc dd 0
   712 0000085B 00000000            <1> espfirst dd 0
   713 0000085F 00000000            <1> esiloc dd 0
   714 00000863 0100                <1> locunhandy dw 1
   715 00000865 0100                <1> locunhandx dw 1
   716 00000867 0000                <1> backgroundcache dw 0
   717 00000869 00                  <1> intprob db 0
   718 0000086A 00000000            <1> codeloc dd 0
   719 0000086E 00000000            <1> codelocend dd 0
   720                              <1> 	unhandmsg:	
   721 00000872 494E543D3030303030- <1> 			db "INT=00000000",10,13,0
   722 0000087B 3030300A0D00        <1>
   723                              <1> unhndrg:
   724 00000881 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   725 0000088A 303030202000<rept>  <1>
   726 000008EA FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   727 000008F3 3030300A0D00        <1>
   728 000008F9 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   729 00000902 303030202000<rept>  <1>
   730 00000962 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   731 0000096B 3030300A0D00        <1>
   732 00000971 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   733 0000097A 303030202000<rept>  <1>
   734 000009DA FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   735 000009E3 3030300A0D00        <1>
   736 000009E9 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   737 000009F2 303030202000<rept>  <1>
   738 00000A52 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   739 00000A5B 3030300A0D00        <1>
   740                              <1> unhandregs:
   741 00000A61 45464C3D3030303030- <1> 			db "EFL=00000000",10,13,0
   742 00000A6A 3030300A0D00        <1>
   743 00000A70 43533A3D3030303030- <1> 			db "CS:=00000000",10,13,0
   744 00000A79 3030300A0D00        <1>
   745 00000A7F 4549503D3030303030- <1> 			db "EIP=00000000",10,13,0
   746 00000A88 3030300A0D00        <1>
   747 00000A8E 44533A3D3030303030- <1> 			db "DS:=00000000",10,13,0
   748 00000A97 3030300A0D00        <1>
   749 00000A9D 45533A3D3030303030- <1> 			db "ES:=00000000",10,13,0
   750 00000AA6 3030300A0D00        <1>
   751 00000AAC 46533A3D3030303030- <1> 			db "FS:=00000000",10,13,0
   752 00000AB5 3030300A0D00        <1>
   753 00000ABB 47533A3D3030303030- <1> 			db "GS:=00000000",10,13,0
   754 00000AC4 3030300A0D00        <1>
   755 00000ACA 53533A3D3030303030- <1> 			db "SS:=00000000",10,13,0
   756 00000AD3 3030300A0D00        <1>
   757 00000AD9 4541583D3030303030- <1> 			db "EAX=00000000",10,13,0
   758 00000AE2 3030300A0D00        <1>
   759 00000AE8 4543583D3030303030- <1> 			db "ECX=00000000",10,13,0
   760 00000AF1 3030300A0D00        <1>
   761 00000AF7 4544583D3030303030- <1> 			db "EDX=00000000",10,13,0
   762 00000B00 3030300A0D00        <1>
   763 00000B06 4542583D3030303030- <1> 			db "EBX=00000000",10,13,0
   764 00000B0F 3030300A0D00        <1>
   765 00000B15 4553503D3030303030- <1> 			db "ESP=00000000",10,13,0
   766 00000B1E 3030300A0D00        <1>
   767 00000B24 4542503D3030303030- <1> 			db "EBP=00000000",10,13,0
   768 00000B2D 3030300A0D00        <1>
   769 00000B33 4553493D3030303030- <1> 			db "ESI=00000000",10,13,0
   770 00000B3C 3030300A0D00        <1>
   771 00000B42 4544493D3030303030- <1> unhndrgend:	db "EDI=00000000",10,13,0
   772 00000B4B 3030300A0D00        <1>
   773 00000B51 4352303D3030303030- <1> 			db "CR0=00000000",10,13,0
   774 00000B5A 3030300A0D00        <1>
   775 00000B60 4352323D3030303030- <1> 			db "CR2=00000000",10,13,0
   776 00000B69 3030300A0D00        <1>
   777 00000B6F 4352333D3030303030- <1> 			db "CR3=00000000",10,13,0
   778 00000B78 3030300A0D00        <1>
   779 00000B7E 4352343D3030303030- <1> 			db "CR4=00000000",10,13,0
   780 00000B87 3030300A0D00        <1>
   781 00000B8D FFFFFFFF3030303030- <1> unhandcode: times 2 db 255,255,255,255,"00000000  ",0	;;this dumps the code before and after the interrupt in question
   782 00000B96 303030202000<rept>  <1>
   783 00000BAB FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000 ",255,0
   784 00000BB4 30303020FF00        <1>
   785 00000BBA FFFFFF5B3030303030- <1> 			db 255,255,255,"[00000000] ",0
   786 00000BC3 3030305D2000        <1>
   787 00000BC9 FFFFFFFF3030303030- <1> 			times 3 db 255,255,255,255,"00000000  ",0
   788 00000BD2 303030202000<rept>  <1>
   789 00000BF6 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   790 00000BFF 3030300A0D00        <1>
   791                              <1> unhandmsgend:
   792                              <1> 
   793                              <1> timerinterrupt:
   794 00000C05 803D[3C510000]01    <1> 	cmp byte [threadson], 1
   795 00000C0C 7505                <1> 	jne handled
   796 00000C0E E9E74A0000          <1> 	jmp threadswitch
   797                              <1> 	
   798                              <1> handled:
   799 00000C13 CF                  <1> 	iret
   800 00000C14 EBFE                <1> 	jmp $
   801                              <1> [BITS 16]
   802                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   803                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   804                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   805 00000C16 3700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   806 00000C18 00000000            <1> 	dd 0    		; filled with linear, physical address of GDT
   807                              <1> 
   808 00000C1C 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   809 00000C1E 00000000            <1> 	dd 0			; filled with linear, physical address of IDT
   810                              <1> 
   811                              <1> 
   812 00000C22 0000                <1> gdt:	dw 0			; limit 15:0
   813 00000C24 0000                <1> 	dw 0			; base 15:0
   814 00000C26 00                  <1> 	db 0			; base 23:16
   815 00000C27 00                  <1> 	db 0			; type
   816 00000C28 00                  <1> 	db 0			; limit 19:16, flags
   817 00000C29 00                  <1> 	db 0			; base 31:24
   818                              <1> ; linear data segment descriptor
   819                              <1> LINEAR_SEL	equ	$-gdt
   820 00000C2A FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   821 00000C2C 0000                <1> 	dw 0			; base for this one is always 0
   822 00000C2E 00                  <1> 	db 0
   823 00000C2F 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   824 00000C30 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   825 00000C31 00                  <1> 	db 0
   826                              <1> ; code segment descriptor
   827                              <1> SYS_CODE_SEL	equ	$-gdt
   828 00000C32 FFFF                <1> gdt2:	dw 0xFFFF
   829 00000C34 0000                <1> 	dw 0			; (base gets set above)
   830 00000C36 00                  <1> 	db 0
   831 00000C37 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   832 00000C38 CF                  <1> 	db 0xCF
   833 00000C39 00                  <1> 	db 0
   834                              <1> ; data segment descriptor
   835                              <1> SYS_DATA_SEL	equ	$-gdt
   836 00000C3A FFFF                <1> gdt3:	dw 0xFFFF
   837 00000C3C 0000                <1> 	dw 0			; (base gets set above)
   838 00000C3E 00                  <1> 	db 0
   839 00000C3F 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   840 00000C40 CF                  <1> 	db 0xCF
   841 00000C41 00                  <1> 	db 0
   842                              <1> STACK_SEL	equ	$-gdt	;;this is no longer used for various reasons
   843 00000C42 0100                <1> gdts:	dw 1
   844 00000C44 0000                <1> 	dw 0			; (base gets set above)
   845 00000C46 00                  <1> 	db 0
   846 00000C47 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   847 00000C48 C0                  <1> 	db 0xC0
   848 00000C49 00                  <1> 	db 0
   849                              <1> NEW_CODE_SEL	equ	$-gdt
   850 00000C4A FFFF                <1> gdt4:	dw 0xFFFF
   851 00000C4C 0000                <1> 	dw 0			; (base gets set above)
   852 00000C4E 00                  <1> 	db 0
   853 00000C4F 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   854 00000C50 CF                  <1> 	db 0xCF
   855 00000C51 00                  <1> 	db 0
   856                              <1> ; data segment descriptor
   857                              <1> NEW_DATA_SEL	equ	$-gdt
   858 00000C52 FFFF                <1> gdt5:	dw 0xFFFF
   859 00000C54 0000                <1> 	dw 0			; (base gets set above)
   860 00000C56 00                  <1> 	db 0
   861 00000C57 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   862 00000C58 CF                  <1> 	db 0xCF
   863 00000C59 00                  <1> 	db 0
   864                              <1> gdt_end:
   865                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   866                              <1> ;	interrupt descriptor table (IDT)
   867                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   868                              <1> ; 32 reserved interrupts:
   869                              <1> idt:	
   870                              <1> %assign i 0
   871                              <1> %rep    8
   872                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   873                              <1> %assign i i+1 
   874                              <1> %endrep
   875 00000C5A [0504]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   876                              <2> %assign i i+1
   877 00000C62 [1204]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   878                              <2> %assign i i+1
   879 00000C6A [1F04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   880                              <2> %assign i i+1
   881 00000C72 [2C04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   882                              <2> %assign i i+1
   883 00000C7A [3904]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   884                              <2> %assign i i+1
   885 00000C82 [4604]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   886                              <2> %assign i i+1
   887 00000C8A [5304]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   888                              <2> %assign i i+1
   889 00000C92 [6004]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   890                              <2> %assign i i+1
   891 00000C9A [050C]2800008E0000  <1> 		dw timerinterrupt,NEW_CODE_SEL,0x8E00,0
   892                              <1> %assign i 9
   893                              <1> %rep    6
   894                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   895                              <1> %assign i i+1 
   896                              <1> %endrep
   897 00000CA2 [7A04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   898                              <2> %assign i i+1
   899 00000CAA [8704]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   900                              <2> %assign i i+1
   901 00000CB2 [9404]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   902                              <2> %assign i i+1
   903 00000CBA [A104]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   904                              <2> %assign i i+1
   905 00000CC2 [AE04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   906                              <2> %assign i i+1
   907 00000CCA [BB04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   908                              <2> %assign i i+1
   909 00000CD2 [130C]2800008E0000  <1> 		dw handled,NEW_CODE_SEL,0x8E00,0		;;irq 7 or int 0xF is random, unusable, and usually reserved
   910                              <1> %assign i 16
   911                              <1> %rep    32
   912                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   913                              <1> %assign i i+1
   914                              <1> %endrep
   915 00000CDA [D504]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   916                              <2> %assign i i+1
   917 00000CE2 [E204]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   918                              <2> %assign i i+1
   919 00000CEA [EF04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   920                              <2> %assign i i+1
   921 00000CF2 [FC04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   922                              <2> %assign i i+1
   923 00000CFA [0905]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   924                              <2> %assign i i+1
   925 00000D02 [1605]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   926                              <2> %assign i i+1
   927 00000D0A [2305]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   928                              <2> %assign i i+1
   929 00000D12 [3005]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   930                              <2> %assign i i+1
   931 00000D1A [3D05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   932                              <2> %assign i i+1
   933 00000D22 [4A05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   934                              <2> %assign i i+1
   935 00000D2A [5705]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   936                              <2> %assign i i+1
   937 00000D32 [6405]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   938                              <2> %assign i i+1
   939 00000D3A [7105]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   940                              <2> %assign i i+1
   941 00000D42 [7E05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   942                              <2> %assign i i+1
   943 00000D4A [8B05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   944                              <2> %assign i i+1
   945 00000D52 [9805]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   946                              <2> %assign i i+1
   947 00000D5A [A505]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   948                              <2> %assign i i+1
   949 00000D62 [B205]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   950                              <2> %assign i i+1
   951 00000D6A [BF05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   952                              <2> %assign i i+1
   953 00000D72 [CC05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   954                              <2> %assign i i+1
   955 00000D7A [D905]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   956                              <2> %assign i i+1
   957 00000D82 [E605]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   958                              <2> %assign i i+1
   959 00000D8A [F305]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   960                              <2> %assign i i+1
   961 00000D92 [0006]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   962                              <2> %assign i i+1
   963 00000D9A [0D06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   964                              <2> %assign i i+1
   965 00000DA2 [1A06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   966                              <2> %assign i i+1
   967 00000DAA [2706]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   968                              <2> %assign i i+1
   969 00000DB2 [3406]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   970                              <2> %assign i i+1
   971 00000DBA [4106]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   972                              <2> %assign i i+1
   973 00000DC2 [4E06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   974                              <2> %assign i i+1
   975 00000DCA [5B06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   976                              <2> %assign i i+1
   977 00000DD2 [6806]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   978                              <2> %assign i i+1
   979                              <1> 		
   980                              <1> ;;INT 30h for os use and 3rd party use:
   981 00000DDA [E20D]1000008E0000  <1> 	dw newints,SYS_CODE_SEL,0x8E00,0
   982                              <1> idt_end:
   983                              <1> [BITS 32]
   984                                  [BITS 32]
   985                                      %include 'source/ints.asm'
   986                              <1> newints:	;;for great justice
   987 00000DE2 FA                  <1> 	cli				;;stop other interrupts
   988 00000DE3 80FC00              <1> 	cmp ah, 0		;;originally 0
   989 00000DE6 0F8452000000        <1> 	je near intx0   ;;0=kills app
   990 00000DEC 80FC01              <1> 	cmp ah, 1		;;originally 1
   991 00000DEF 0F844E000000        <1> 	je near intx1   ;;3=print string
   992 00000DF5 80FC02              <1> 	cmp ah, 2		;;originally 2
   993 00000DF8 0F844F000000        <1> 	je near intx2	;;4=read string
   994 00000DFE 80FC03              <1> 	cmp ah, 3		;;originally 3
   995 00000E01 0F8450000000        <1> 	je near intx3	;;6=clear screen
   996 00000E07 80FC04              <1> 	cmp ah, 4		;;originally 4
   997 00000E0A 0F8451000000        <1> 	je near intx4	;;5=read and print string
   998 00000E10 80FC05              <1> 	cmp ah, 5		;;originally 5		
   999 00000E13 0F8452000000        <1> 	je near intx5	;;2=get char
  1000 00000E19 80FC06              <1> 	cmp ah, 6		;;originally 6
  1001 00000E1C 0F8453000000        <1> 	je near intx6	;;1=print char
  1002 00000E22 80FC07              <1> 	cmp ah, 7
  1003 00000E25 0F8454000000        <1> 	je near intx7	;;read file
  1004 00000E2B 80FC09              <1> 	cmp ah, 9
  1005 00000E2E 0F8455000000        <1> 	je near intx9	;;convert number
  1006 00000E34 80FC0A              <1> 	cmp ah, 10
  1007 00000E37 0F8464000000        <1> 	je near intx10	;;create thread
  1008 00000E3D C3                  <1> 	ret
  1009                              <1> 	
  1010                              <1> ;;the jmp timerinterrupt's ensure that task switches occur
  1011                              <1> 	
  1012                              <1> intx0:
  1013 00000E3E E9E6070000          <1> 	jmp nwcmd
  1014                              <1> intx1:
  1015 00000E43 E888020000          <1> 	call int303
  1016 00000E48 E9B8FDFFFF          <1> 	jmp timerinterrupt
  1017                              <1> intx2:
  1018 00000E4D E8A2020000          <1> 	call int304
  1019 00000E52 E9AEFDFFFF          <1> 	jmp timerinterrupt
  1020                              <1> intx3:
  1021 00000E57 E85D050000          <1> 	call int306
  1022 00000E5C E9A4FDFFFF          <1> 	jmp timerinterrupt
  1023                              <1> intx4:
  1024 00000E61 E8BB020000          <1> 	call int305
  1025 00000E66 E99AFDFFFF          <1> 	jmp timerinterrupt
  1026                              <1> intx5:
  1027 00000E6B E812020000          <1> 	call int302
  1028 00000E70 E990FDFFFF          <1> 	jmp timerinterrupt
  1029                              <1> intx6:
  1030 00000E75 E837000000          <1> 	call int301
  1031 00000E7A E986FDFFFF          <1> 	jmp timerinterrupt
  1032                              <1> intx7:
  1033 00000E7F E877400000          <1> 	call loadfile
  1034 00000E84 E97CFDFFFF          <1> 	jmp timerinterrupt
  1035                              <1> intx9:
  1036 00000E89 3C00                <1> 	cmp al, 0
  1037 00000E8B 750A                <1> 	jne intx9B
  1038 00000E8D E8A90C0000          <1> 	call showdec
  1039 00000E92 E96EFDFFFF          <1> 	jmp timerinterrupt
  1040                              <1> intx9B:
  1041 00000E97 E8FA0B0000          <1> 	call showhex
  1042 00000E9C E964FDFFFF          <1> 	jmp timerinterrupt
  1043                              <1> intx10:
  1044 00000EA1 E89F460000          <1> 	call threadfork
  1045 00000EA6 CF                  <1> 	iret
  1046                              <1> 	
  1047 00000EA7 0000                <1> linebeginpos dw 0
  1048 00000EA9 0000                <1> videobufpos: dw 0
  1049 00000EAB 0000                <1> charpos db 0,0
  1050 00000EAD A01E                <1> charxy db 160,30
  1051 00000EAF 0000                <1> charbuf dw 0
  1052                              <1> 	
  1053                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
  1054 00000EB1 E808000000          <1> 	call int301prnt
  1055 00000EB6 E84E050000          <1> 	call termcopy
  1056 00000EBB C3                  <1> 	ret
  1057 00000EBC 00                  <1> termguion db 0
  1058 00000EBD 00                  <1> termcopyon db 0
  1059                              <1> int301prnt:
  1060 00000EBE 88DC                <1> 	mov ah, bl
  1061 00000EC0 66A3[AF0E0000]      <1> 	mov [charbuf], ax
  1062 00000EC6 BB00000000          <1> 	mov ebx, 0
  1063 00000ECB 668B1D[A90E0000]    <1> 	mov bx, [videobufpos]
  1064 00000ED2 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1065 00000ED7 01DF                <1> 	add edi, ebx
  1066 00000ED9 66A1[07140000]      <1> 	mov ax, [removedvideo]
  1067 00000EDF 668907              <1> 	mov [edi], ax
  1068 00000EE2 66A1[AF0E0000]      <1> 	mov ax, [charbuf]
  1069 00000EE8 BA00000000          <1> 	mov edx, 0
  1070 00000EED 668B15[AB0E0000]    <1> 	mov dx, [charpos]
  1071 00000EF4 B900000000          <1> 	mov ecx, 0
  1072 00000EF9 668B0D[AD0E0000]    <1> 	mov cx, [charxy]
  1073 00000F00 3C09                <1> 	cmp al, 9
  1074 00000F02 0F8464000000        <1> 	je near int301tab
  1075 00000F08 3C0D                <1> 	cmp al, 13
  1076 00000F0A 0F8476000000        <1> 	je near int301cr
  1077 00000F10 3C0A                <1> 	cmp al, 10
  1078 00000F12 0F84A4000000        <1> 	je near int301nl
  1079 00000F18 3C08                <1> 	cmp al, 8
  1080 00000F1A 0F847D000000        <1> 	je near int301bs
  1081 00000F20 3CFF                <1> 	cmp al, 255		;;null character
  1082 00000F22 0F841C000000        <1> 	je near donescr
  1083 00000F28 668907              <1> 	mov [edi], ax
  1084 00000F2B 81C702000000        <1> 	add edi, 2
  1085 00000F31 80C202              <1> 	add dl, 2
  1086                              <1> donecrnl:
  1087 00000F34 38CA                <1> 	cmp dl, cl
  1088 00000F36 0F83B1000000        <1> 	jae near int301eol
  1089                              <1> doneeol:
  1090 00000F3C 38EE                <1> 	cmp dh, ch
  1091 00000F3E 0F83C7000000        <1> 	jae near int301scr	
  1092                              <1> donescr:
  1093 00000F44 89FB                <1> 	mov ebx, edi
  1094 00000F46 668B07              <1> 	mov ax, [edi]
  1095 00000F49 66A3[07140000]      <1> 	mov [removedvideo], ax
  1096 00000F4F 81EB[8F1C0000]      <1> 	sub ebx, videobuf2
  1097 00000F55 66891D[A90E0000]    <1> 	mov [videobufpos], bx
  1098 00000F5C 668915[AB0E0000]    <1> 	mov [charpos], dx
  1099 00000F63 66A1[AF0E0000]      <1> 	mov ax, [charbuf]
  1100 00000F69 88E3                <1> 	mov bl, ah
  1101 00000F6B C3                  <1> 	ret
  1102                              <1> 	
  1103                              <1> 	int301tab:
  1104 00000F6C C1EF04              <1> 		shr edi, 4
  1105 00000F6F C1E704              <1> 		shl edi, 4
  1106 00000F72 81C710000000        <1> 		add edi, 16
  1107 00000F78 C0EA04              <1> 		shr dl, 4
  1108 00000F7B C0E204              <1> 		shl dl, 4
  1109 00000F7E 80C210              <1> 		add dl, 16
  1110 00000F81 4F                  <1> 		dec edi
  1111 00000F82 FECA                <1> 		dec dl
  1112 00000F84 EBAE                <1> 		jmp donecrnl
  1113                              <1> 	
  1114                              <1> 	int301cr:
  1115 00000F86 B200                <1> 		mov dl, 0
  1116 00000F88 BB00000000          <1> 		mov ebx, 0
  1117 00000F8D BF[8F1C0000]        <1> 		mov edi, videobuf2
  1118 00000F92 668B1D[A70E0000]    <1> 		mov bx, [linebeginpos]
  1119 00000F99 01DF                <1> 		add edi, ebx
  1120 00000F9B EB97                <1> 		jmp donecrnl
  1121                              <1> 			
  1122                              <1> 	int301bs:
  1123 00000F9D 80FA00              <1> 		cmp dl, 0
  1124 00000FA0 740F                <1> 		je int301backline
  1125                              <1> 	int301nobmr:
  1126 00000FA2 80EA02              <1> 		sub dl, 2
  1127 00000FA5 66B80000            <1> 		mov ax, 0
  1128 00000FA9 81EF02000000        <1> 		sub edi, 2
  1129 00000FAF EB83                <1> 		jmp donecrnl
  1130                              <1> 	int301backline:
  1131 00000FB1 88CA                <1> 		mov dl, cl
  1132 00000FB3 80FE00              <1> 		cmp dh, 0
  1133 00000FB6 74EA                <1> 		je int301nobmr
  1134 00000FB8 FECE                <1> 		dec dh
  1135 00000FBA EBE6                <1> 		jmp int301nobmr
  1136                              <1> 		
  1137                              <1> 	int301nl:
  1138 00000FBC FEC6                <1> 		inc dh
  1139 00000FBE BB00000000          <1> 		mov ebx, 0
  1140 00000FC3 88CB                <1> 		mov bl, cl
  1141 00000FC5 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1142 00000FCA 66031D[A90E0000]    <1> 		add bx, [videobufpos]
  1143 00000FD1 01DF                <1> 		add edi, ebx
  1144 00000FD3 BB00000000          <1> 		mov ebx, 0
  1145 00000FD8 88CB                <1> 		mov bl, cl
  1146 00000FDA 66031D[A70E0000]    <1> 		add bx, [linebeginpos]
  1147 00000FE1 66891D[A70E0000]    <1> 		mov [linebeginpos], bx
  1148 00000FE8 E947FFFFFF          <1> 		jmp donecrnl
  1149                              <1> 		
  1150                              <1> 	int301eol:
  1151 00000FED B200                <1> 		mov dl, 0
  1152 00000FEF FEC6                <1> 		inc dh
  1153 00000FF1 BB00000000          <1> 		mov ebx, 0
  1154 00000FF6 88CB                <1> 		mov bl, cl
  1155 00000FF8 66031D[A70E0000]    <1> 		add bx, [linebeginpos]
  1156 00000FFF 66891D[A70E0000]    <1> 		mov [linebeginpos], bx
  1157 00001006 E931FFFFFF          <1> 		jmp doneeol
  1158                              <1> 	int301scr:
  1159 0000100B FECE                <1> 		dec dh
  1160 0000100D BF[8F1C0000]        <1> 		mov edi, videobuf2
  1161 00001012 BB00000000          <1> 		mov ebx, 0
  1162 00001017 88CB                <1> 		mov bl, cl
  1163 00001019 01FB                <1> 		add ebx, edi
  1164                              <1> 	intscrollloop:
  1165 0000101B 668B03              <1> 		mov ax, [ebx]
  1166 0000101E 668907              <1> 		mov [edi], ax
  1167 00001021 81C702000000        <1> 		add edi, 2
  1168 00001027 81C302000000        <1> 		add ebx, 2
  1169 0000102D 80E902              <1> 		sub cl, 2
  1170 00001030 80F900              <1> 		cmp cl, 0
  1171 00001033 75E6                <1> 		jne intscrollloop
  1172 00001035 8A0D[AD0E0000]      <1> 		mov cl, [charxy]
  1173 0000103B FECD                <1> 		dec ch
  1174 0000103D 80FD01              <1> 		cmp ch, 1
  1175 00001040 77D9                <1> 		ja intscrollloop
  1176 00001042 66B80000            <1> 		mov ax, 0
  1177 00001046 81EF[8F1C0000]      <1> 		sub edi, videobuf2
  1178 0000104C 66893D[A70E0000]    <1> 		mov [linebeginpos], di
  1179 00001053 81C7[8F1C0000]      <1> 		add edi, videobuf2
  1180 00001059 89FB                <1> 		mov ebx, edi
  1181                              <1> 	intloopclear:
  1182 0000105B 668903              <1> 		mov [ebx], ax
  1183 0000105E 81C302000000        <1> 		add ebx, 2
  1184 00001064 80E902              <1> 		sub cl, 2
  1185 00001067 80F900              <1> 		cmp cl, 0
  1186 0000106A 75EF                <1> 		jne intloopclear
  1187 0000106C FECD                <1> 		dec ch
  1188 0000106E 80FD00              <1> 		cmp ch, 0
  1189 00001071 75E8                <1> 		jne intloopclear
  1190 00001073 668B0D[AD0E0000]    <1> 		mov cx, [charxy]
  1191 0000107A E9C5FEFFFF          <1> 		jmp donescr
  1192                              <1> 		
  1193                              <1> 		
  1194 0000107F 0000                <1> lastkey db 0,0
  1195 00001081 00                  <1> trans db 0
  1196                              <1> 
  1197                              <1> 	int302:		;;get char, if al is 0, wait for key
  1198 00001082 A2[81100000]        <1> 		mov [trans], al
  1199                              <1> 	transcheck:
  1200 00001087 E8111D0000          <1> 		call guistartin
  1201 0000108C 8A3D[81100000]      <1> 		mov bh, [trans]
  1202 00001092 66A1[7F100000]      <1> 		mov ax, [lastkey]
  1203 00001098 80FC1C              <1> 		cmp ah, 1Ch
  1204 0000109B 7419                <1> 		je int302enter
  1205 0000109D 803D[742D0000]E0    <1> 		cmp byte [specialkey], 0xE0
  1206 000010A4 7504                <1> 		jne nospecialtrans
  1207 000010A6 88C3                <1> 		mov bl, al
  1208 000010A8 B000                <1> 		mov al, 0
  1209                              <1> 	nospecialtrans:
  1210 000010AA 08C7                <1> 		or bh, al
  1211 000010AC 80FF00              <1> 		cmp bh, 0
  1212 000010AF 74D6                <1> 		je transcheck
  1213 000010B1 E902000000          <1> 		jmp int302end
  1214                              <1> 	int302enter:
  1215 000010B6 B00D                <1> 		mov al, 13
  1216                              <1> 	int302end:
  1217 000010B8 C3                  <1> 		ret
  1218                              <1> 	
  1219 000010B9 00                  <1> endkey303 db 0
  1220                              <1> 	printquiet:
  1221 000010BA 66B80000            <1> 		mov ax, 0
  1222 000010BE 66BB0700            <1> 		mov bx, 7
  1223 000010C2 E819000000          <1> 		call int303b
  1224 000010C7 C3                  <1> 		ret
  1225                              <1>     print:
  1226 000010C8 66B80000            <1> 		mov ax, 0
  1227 000010CC 66BB0700            <1> 		mov bx, 7
  1228                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  1229 000010D0 A2[B9100000]        <1> 		mov [endkey303], al
  1230 000010D5 E806000000          <1> 		call int303b
  1231 000010DA E82A030000          <1> 		call termcopy
  1232 000010DF C3                  <1> 		ret
  1233                              <1> 	int303b:
  1234 000010E0 8A06                <1> 		mov al, [esi]
  1235 000010E2 3A05[B9100000]      <1> 		cmp al, [endkey303]
  1236 000010E8 7408                <1> 		je doneint303
  1237 000010EA E8CFFDFFFF          <1> 		call int301prnt
  1238 000010EF 46                  <1> 		inc esi
  1239 000010F0 EBEE                <1> 		jmp int303b
  1240                              <1> 	doneint303:
  1241 000010F2 C3                  <1> 		ret
  1242                              <1> 		
  1243 000010F3 00                  <1> endkey304 db 0
  1244                              <1> 	int304:	;;get line, al=last key, esi = buffer
  1245 000010F4 A2[F3100000]        <1> 		mov [endkey304], al
  1246                              <1> 	int304b:
  1247 000010F9 56                  <1> 		push esi
  1248 000010FA B000                <1> 		mov al, 0
  1249 000010FC E881FFFFFF          <1> 		call int302
  1250 00001101 5E                  <1> 		pop esi
  1251 00001102 8806                <1> 		mov [esi], al
  1252 00001104 46                  <1> 		inc esi
  1253 00001105 3A05[F3100000]      <1> 		cmp al, [endkey304]
  1254 0000110B 75EC                <1> 		jne int304b
  1255 0000110D 4E                  <1> 		dec esi
  1256 0000110E C60600              <1> 		mov byte [esi], 0
  1257 00001111 C3                  <1> 	ret
  1258                              <1> 	
  1259 00001112 00                  <1> endkey305 db 0
  1260 00001113 00                  <1> modkey305 db 0
  1261 00001114 00000000            <1> firstesi305 dd 0
  1262 00001118 00                  <1> commandedit db 0
  1263 00001119 00                  <1> txtmask db 0
  1264 0000111A 00000000            <1> buftxtloc dd 0
  1265 0000111E 082000              <1> backcursor db 8," ",0
  1266                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
  1267 00001121 8935[1A110000]      <1> 		mov [buftxtloc], esi
  1268 00001127 A2[12110000]        <1> 		mov [endkey305], al
  1269 0000112C 881D[13110000]      <1> 		mov [modkey305], bl
  1270 00001132 8935[14110000]      <1> 		mov [firstesi305], esi
  1271                              <1> 	int305b:
  1272 00001138 56                  <1> 		push esi
  1273 00001139 B001                <1> 		mov al, 1
  1274 0000113B E842FFFFFF          <1> 		call int302
  1275 00001140 5E                  <1> 		pop esi
  1276 00001141 80FC48              <1> 		cmp ah, 0x48
  1277 00001144 0F845E010000        <1> 		je near int305up
  1278 0000114A 80FC50              <1> 		cmp ah, 0x50
  1279 0000114D 0F8438010000        <1> 		je near int305down
  1280 00001153 80FC4D              <1> 		cmp ah, 0x4D
  1281 00001156 0F84ED000000        <1> 		je near int305right
  1282 0000115C 80FC4B              <1> 		cmp ah, 0x4B
  1283 0000115F 0F84AB000000        <1> 		je near int305left
  1284 00001165 3C08                <1> 		cmp al, 8
  1285 00001167 0F842E020000        <1> 		je near int305bscheck
  1286 0000116D 3C00                <1> 		cmp al, 0
  1287 0000116F 74C7                <1> 		je int305b
  1288 00001171 8806                <1> 		mov [esi], al
  1289 00001173 46                  <1> 		inc esi
  1290                              <1> 	bscheckequal:
  1291 00001174 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1292 0000117A 8A3D[19110000]      <1> 		mov bh, [txtmask]
  1293 00001180 80FF00              <1> 		cmp bh, 0
  1294 00001183 7402                <1> 		je nomasktxt
  1295 00001185 88F8                <1> 		mov al, bh
  1296                              <1> 	nomasktxt:
  1297 00001187 E825FDFFFF          <1> 		call int301
  1298 0000118C 56                  <1> 		push esi
  1299 0000118D 66A3[0E120000]      <1> 		mov [int305axcache], ax
  1300 00001193 8A25[12110000]      <1> 		mov ah, [endkey305]
  1301 00001199 38E0                <1> 		cmp al, ah
  1302 0000119B 7429                <1> 		je nobackprintbuftxt2
  1303 0000119D BE[701A0000]        <1> 		mov esi, buftxt2
  1304 000011A2 E813FFFFFF          <1> 		call printquiet
  1305 000011A7 B020                <1> 		mov al, " "
  1306 000011A9 E810FDFFFF          <1> 		call int301prnt
  1307 000011AE B008                <1> 		mov al, 8
  1308 000011B0 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1309 000011B6 740E                <1> 		je nobackprintbuftxt2
  1310                              <1> 	backprintbuftxt2:
  1311 000011B8 E801FDFFFF          <1> 		call int301prnt
  1312 000011BD 4E                  <1> 		dec esi
  1313 000011BE 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1314 000011C4 77F2                <1> 		ja backprintbuftxt2
  1315                              <1> 	nobackprintbuftxt2:
  1316 000011C6 E8E6FCFFFF          <1> 		call int301
  1317 000011CB 5E                  <1> 		pop esi
  1318 000011CC 66A1[0E120000]      <1> 		mov ax, [int305axcache]
  1319 000011D2 8A25[12110000]      <1> 		mov ah, [endkey305]
  1320 000011D8 38E0                <1> 		cmp al, ah
  1321 000011DA 0F8558FFFFFF        <1> 		jne int305b
  1322 000011E0 4E                  <1> 		dec esi
  1323 000011E1 BF[701A0000]        <1> 		mov edi, buftxt2
  1324                              <1> 	copylaterstuff:
  1325 000011E6 8A07                <1> 		mov al, [edi]
  1326 000011E8 3C00                <1> 		cmp al, 0
  1327 000011EA 7406                <1> 		je nocopylaterstuff
  1328 000011EC 8806                <1> 		mov [esi], al
  1329 000011EE 47                  <1> 		inc edi
  1330 000011EF 46                  <1> 		inc esi
  1331 000011F0 EBF4                <1> 		jmp copylaterstuff
  1332                              <1> 	nocopylaterstuff:
  1333 000011F2 C60600              <1> 		mov byte [esi], 0
  1334 000011F5 E801000000          <1> 		call clearbuftxt2
  1335 000011FA C3                  <1> 		ret
  1336                              <1> 	
  1337                              <1> 	clearbuftxt2:
  1338 000011FB B000                <1> 		mov al, 0
  1339 000011FD BF[701A0000]        <1> 		mov edi, buftxt2
  1340                              <1> 	clearbuftxt2lp:
  1341 00001202 8807                <1> 		mov [edi], al
  1342 00001204 47                  <1> 		inc edi
  1343 00001205 81FF[7A1B0000]      <1> 		cmp edi, buftxt
  1344 0000120B 75F5                <1> 		jne clearbuftxt2lp
  1345 0000120D C3                  <1> 		ret
  1346                              <1> 		
  1347 0000120E 0000                <1> 	int305axcache dw 0
  1348                              <1> 		
  1349                              <1> 	int305left:
  1350 00001210 3B35[1A110000]      <1> 		cmp esi, [buftxtloc]
  1351 00001216 0F841CFFFFFF        <1> 		je near int305b
  1352 0000121C BF[701A0000]        <1> 		mov edi, buftxt2
  1353 00001221 8A07                <1> 		mov al, [edi]
  1354                              <1> 	shiftbuftxt2:
  1355 00001223 3C00                <1> 		cmp al, 0
  1356 00001225 7409                <1> 		je noshiftbuftxt2
  1357 00001227 47                  <1> 		inc edi
  1358 00001228 8A27                <1> 		mov ah, [edi]
  1359 0000122A 8807                <1> 		mov [edi], al
  1360 0000122C 88E0                <1> 		mov al, ah
  1361 0000122E EBF3                <1> 		jmp shiftbuftxt2
  1362                              <1> 	noshiftbuftxt2:
  1363 00001230 BF[701A0000]        <1> 		mov edi, buftxt2
  1364 00001235 4E                  <1> 		dec esi
  1365 00001236 8A06                <1> 		mov al, [esi]
  1366 00001238 8807                <1> 		mov [edi], al
  1367 0000123A C60600              <1> 		mov byte [esi], 0
  1368 0000123D B008                <1> 		mov al, 8
  1369 0000123F E86DFCFFFF          <1> 		call int301
  1370 00001244 E9EFFEFFFF          <1> 		jmp int305b
  1371                              <1> 		
  1372                              <1> 	int305right:
  1373 00001249 BF[701A0000]        <1> 		mov edi, buftxt2
  1374 0000124E 8A07                <1> 		mov al, [edi]
  1375 00001250 3C00                <1> 		cmp al, 0
  1376 00001252 0F84E0FEFFFF        <1> 		je near int305b
  1377 00001258 8806                <1> 		mov [esi], al
  1378                              <1> 	shiftbuftxt2lft:
  1379 0000125A 3C00                <1> 		cmp al, 0
  1380 0000125C 7408                <1> 		je noshiftbuftxt2lft
  1381 0000125E 47                  <1> 		inc edi
  1382 0000125F 8A07                <1> 		mov al, [edi]
  1383 00001261 8847FF              <1> 		mov [edi - 1], al
  1384 00001264 EBF4                <1> 		jmp shiftbuftxt2lft
  1385                              <1> 	noshiftbuftxt2lft:
  1386 00001266 8A06                <1> 		mov al, [esi]
  1387 00001268 46                  <1> 		inc esi
  1388 00001269 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1389 0000126F E83DFCFFFF          <1> 		call int301
  1390 00001274 E9BFFEFFFF          <1> 		jmp int305b
  1391                              <1> 		
  1392                              <1> 	int305downbck:
  1393 00001279 FECC                <1> 		dec ah
  1394 0000127B 8825[18110000]      <1> 		mov [commandedit], ah
  1395 00001281 E83A000000          <1> 		call int305bckspc
  1396 00001286 E9ADFEFFFF          <1> 		jmp int305b
  1397                              <1> 	
  1398                              <1> 	int305down:
  1399 0000128B 8A25[18110000]      <1> 		mov ah, [commandedit]
  1400 00001291 80FC01              <1> 		cmp ah, 1
  1401 00001294 0F869EFEFFFF        <1> 		jbe near int305b
  1402 0000129A 80FC02              <1> 		cmp ah, 2
  1403 0000129D 74DA                <1> 		je int305downbck
  1404 0000129F 80EC02              <1> 		sub ah, 2
  1405 000012A2 8825[18110000]      <1> 		mov [commandedit], ah
  1406                              <1> 		
  1407                              <1> 	int305up:
  1408                              <1> 		;cmp bl, 0xE0
  1409                              <1> 		;jne int305b
  1410 000012A8 B000                <1> 		mov al, 0
  1411 000012AA 3805[18110000]      <1> 		cmp [commandedit], al
  1412 000012B0 0F8482FEFFFF        <1> 		je near int305b
  1413 000012B6 E805000000          <1> 		call int305bckspc
  1414 000012BB E93C000000          <1> 		jmp getcurrentcommandstr
  1415                              <1> 	int305bckspc:
  1416 000012C0 3B35[1A110000]      <1> 		cmp esi, [buftxtloc]
  1417 000012C6 7426                <1> 		je noint305upbck
  1418                              <1> 	int305upbckspclp:
  1419 000012C8 B008                <1> 		mov al, 8
  1420 000012CA 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1421 000012D0 E8E9FBFFFF          <1> 		call int301prnt
  1422 000012D5 B020                <1> 		mov al, " "
  1423 000012D7 E8E2FBFFFF          <1> 		call int301prnt
  1424 000012DC B008                <1> 		mov al, 8
  1425 000012DE E8CEFBFFFF          <1> 		call int301
  1426 000012E3 4E                  <1> 		dec esi
  1427 000012E4 3B35[1A110000]      <1> 		cmp esi, [buftxtloc]
  1428 000012EA 7402                <1> 		je noint305upbck
  1429 000012EC EBDA                <1> 		jmp int305upbckspclp
  1430                              <1> 	noint305upbck:
  1431 000012EE 8B3D[1B300000]      <1> 		mov edi, [currentcommandpos]
  1432 000012F4 81C7[1F300000]      <1> 		add edi, commandbuf
  1433 000012FA 4F                  <1> 		dec edi
  1434 000012FB C3                  <1> 		ret
  1435                              <1> 	getcurrentcommandstr:
  1436 000012FC 8A25[18110000]      <1> 		mov ah, [commandedit]
  1437 00001302 FE05[18110000]      <1> 		inc byte [commandedit]
  1438                              <1> 	getccmdlp:
  1439 00001308 4F                  <1> 		dec edi
  1440 00001309 8A07                <1> 		mov al, [edi]
  1441 0000130B 81FF[1F300000]      <1> 		cmp edi, commandbuf
  1442 00001311 7231                <1> 		jb getcmdresetcommandbuf
  1443 00001313 81EF[1F300000]      <1> 		sub edi, commandbuf
  1444 00001319 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1445 0000131F 0F8413FEFFFF        <1> 		je near int305b
  1446 00001325 81C7[1F300000]      <1> 		add edi, commandbuf
  1447 0000132B 3C00                <1> 		cmp al, 0
  1448 0000132D 75D9                <1> 		jne getccmdlp
  1449 0000132F FECC                <1> 		dec ah
  1450 00001331 80FC00              <1> 		cmp ah, 0
  1451 00001334 77D2                <1> 		ja getccmdlp
  1452 00001336 47                  <1> 		inc edi
  1453 00001337 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1454 0000133D 770D                <1> 		ja fixcmdbufb4moreint305
  1455 0000133F E915000000          <1> 		jmp moreint305up
  1456                              <1> 	getcmdresetcommandbuf:
  1457 00001344 BF[1F340000]        <1> 		mov edi, commandbufend
  1458 00001349 47                  <1> 		inc edi
  1459 0000134A EBBC                <1> 		jmp getccmdlp
  1460                              <1> 	fixcmdbufb4moreint305:
  1461 0000134C 4F                  <1> 		dec edi
  1462 0000134D 81EF[1F340000]      <1> 		sub edi, commandbufend
  1463 00001353 81C7[1F300000]      <1> 		add edi, commandbuf
  1464                              <1> 	moreint305up:
  1465 00001359 8A07                <1> 		mov al, [edi]
  1466 0000135B 47                  <1> 		inc edi
  1467 0000135C 81EF[1F300000]      <1> 		sub edi, commandbuf
  1468 00001362 3C00                <1> 		cmp al, 0
  1469 00001364 0F84CEFDFFFF        <1> 		je near int305b
  1470 0000136A 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1471 00001370 0F83C2FDFFFF        <1> 		jae near int305b
  1472 00001376 81C7[1F300000]      <1> 		add edi, commandbuf
  1473 0000137C 8806                <1> 		mov [esi], al
  1474 0000137E 46                  <1> 		inc esi
  1475 0000137F 57                  <1> 		push edi
  1476 00001380 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1477 00001386 E826FBFFFF          <1> 		call int301
  1478 0000138B 5F                  <1> 		pop edi
  1479 0000138C 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1480 00001392 76C5                <1> 		jbe moreint305up
  1481 00001394 BF[1F300000]        <1> 		mov edi, commandbuf
  1482 00001399 EBBE                <1> 		jmp moreint305up
  1483                              <1> 	int305bscheck:
  1484 0000139B 3B35[14110000]      <1> 		cmp esi, [firstesi305]
  1485 000013A1 7705                <1> 		ja goodbscheck
  1486 000013A3 E990FDFFFF          <1> 		jmp int305b
  1487                              <1> 	goodbscheck:
  1488 000013A8 4E                  <1> 		dec esi
  1489 000013A9 C60600              <1> 		mov byte [esi], 0
  1490 000013AC 8A1D[13110000]      <1> 		mov bl, [modkey305]
  1491 000013B2 B008                <1> 		mov al, 8
  1492 000013B4 E9BBFDFFFF          <1> 		jmp bscheckequal
  1493                              <1> 	
  1494                              <1> 		
  1495                              <1> 	clear:		
  1496                              <1> 	
  1497                              <1> 	int306:	;;clear screen
  1498 000013B9 668B0D[AD0E0000]    <1> 		mov cx, [charxy]
  1499 000013C0 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1500 000013C5 66B80000            <1> 		mov ax, 0
  1501 000013C9 66A3[A70E0000]      <1> 		mov [linebeginpos], ax
  1502 000013CF 66A3[A90E0000]      <1> 		mov [videobufpos], ax
  1503 000013D5 66BA0000            <1> 		mov dx, 0
  1504 000013D9 66A3[AB0E0000]      <1> 		mov [charpos], ax
  1505                              <1> 	int306b:
  1506 000013DF 668907              <1> 		mov [edi], ax
  1507 000013E2 81C702000000        <1> 		add edi, 2
  1508 000013E8 80E902              <1> 		sub cl, 2
  1509 000013EB 80F900              <1> 		cmp cl, 0
  1510 000013EE 75EF                <1> 		jne int306b
  1511 000013F0 8A0D[AD0E0000]      <1> 		mov cl, [charxy]
  1512 000013F6 FECD                <1> 		dec ch
  1513 000013F8 80FD00              <1> 		cmp ch, 0
  1514 000013FB 75E2                <1> 		jne int306b
  1515 000013FD E807000000          <1> 		call termcopy
  1516 00001402 C3                  <1> 		ret
  1517                              <1> 		
  1518 00001403 00000000            <1> 	termcursorpos dd 0
  1519 00001407 0000                <1> 	removedvideo dw 0
  1520                              <1> termcopy:	
  1521 00001409 60                  <1> 	pusha
  1522 0000140A BF[8F1C0000]        <1> 	mov edi, videobuf2
  1523 0000140F BB00000000          <1> 	mov ebx, 0
  1524 00001414 668B1D[A90E0000]    <1> 	mov bx, [videobufpos]
  1525 0000141B 01DF                <1> 	add edi, ebx
  1526 0000141D 893D[03140000]      <1> 	mov [termcursorpos], edi
  1527 00001423 E8C0000000          <1> 	call switchtermcursor
  1528 00001428 C605[E1340000]00    <1> 	mov byte [mouseselecton], 0
  1529 0000142F C605[BD0E0000]01    <1> 	mov byte [termcopyon], 1
  1530 00001436 803D[E2340000]00    <1> 	cmp byte [guion], 0
  1531 0000143D 0F8412000000        <1> 	je near nowincopy
  1532 00001443 803D[BC0E0000]01    <1> 	cmp byte [termguion], 1
  1533 0000144A 0F84912C0000        <1> 	je near windowvideocopy
  1534 00001450 E98C000000          <1> 	jmp nocopytermatall
  1535                              <1> nowincopy:
  1536 00001455 BE00000A00          <1> 	mov esi, 0xA0000
  1537 0000145A A1[FD030000]        <1> 	mov eax, [basecache]
  1538 0000145F C1E004              <1> 	shl eax, 4
  1539 00001462 29C6                <1> 	sub esi, eax
  1540 00001464 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1541 00001469 B900000000          <1> 	mov ecx, 0
  1542 0000146E 668B0D[AD0E0000]    <1> 	mov cx, [charxy]
  1543                              <1> nowincopy2:
  1544 00001475 BB[3C580000]        <1> 	mov ebx, fonts
  1545 0000147A B800000000          <1> 	mov eax, 0
  1546 0000147F 8A07                <1> 	mov al, [edi]
  1547 00001481 C1E004              <1> 	shl eax, 4
  1548 00001484 01C3                <1> 	add ebx, eax
  1549 00001486 47                  <1> 	inc edi
  1550 00001487 8A27                <1> 	mov ah, [edi]
  1551 00001489 BA00000000          <1> 	mov edx, 0
  1552 0000148E 8A15[AD0E0000]      <1> 	mov dl, [charxy]
  1553 00001494 D1EA                <1> 	shr edx, 1
  1554 00001496 C1C110              <1> 	rol ecx, 16
  1555 00001499 B110                <1> 	mov cl, 16
  1556                              <1> nowinfont:
  1557 0000149B 8A03                <1> 	mov al, [ebx]
  1558 0000149D D0C8                <1> 	ror al, 1
  1559 0000149F 80FC07              <1> 	cmp ah, 7
  1560 000014A2 7602                <1> 	jbe notnotfont
  1561 000014A4 F6D0                <1> 	not al
  1562                              <1> notnotfont:
  1563 000014A6 8806                <1> 	mov [esi], al
  1564 000014A8 01D6                <1> 	add esi, edx
  1565 000014AA 43                  <1> 	inc ebx
  1566 000014AB FEC9                <1> 	dec cl
  1567 000014AD 80F900              <1> 	cmp cl, 0
  1568 000014B0 75E9                <1> 	jne nowinfont
  1569 000014B2 C1E204              <1> 	shl edx, 4
  1570 000014B5 29D6                <1> 	sub esi, edx
  1571 000014B7 C1C110              <1> 	rol ecx, 16
  1572                              <1> nopresentwinfont:
  1573 000014BA 47                  <1> 	inc edi
  1574 000014BB 46                  <1> 	inc esi
  1575 000014BC 80E902              <1> 	sub cl, 2
  1576 000014BF 80F900              <1> 	cmp cl, 0
  1577 000014C2 75B1                <1> 	jne nowincopy2
  1578 000014C4 8A0D[AD0E0000]      <1> 	mov cl, [charxy]
  1579 000014CA BA00000000          <1> 	mov edx, 0
  1580 000014CF 88CA                <1> 	mov dl, cl
  1581 000014D1 D1EA                <1> 	shr edx, 1
  1582 000014D3 29D6                <1> 	sub esi, edx
  1583 000014D5 C1E204              <1> 	shl edx, 4
  1584 000014D8 01D6                <1> 	add esi, edx
  1585 000014DA FECD                <1> 	dec ch
  1586 000014DC 80FD00              <1> 	cmp ch, 0
  1587 000014DF 7594                <1> 	jne nowincopy2
  1588                              <1> nocopytermatall:
  1589 000014E1 E802000000          <1> 	call switchtermcursor
  1590 000014E6 61                  <1> 	popa
  1591 000014E7 C3                  <1> 	ret
  1592                              <1> 	
  1593                              <1> switchtermcursor:
  1594 000014E8 8B3D[03140000]      <1> 	mov edi, [termcursorpos]
  1595 000014EE 8A4701              <1> 	mov al, [edi + 1]
  1596 000014F1 8A27                <1> 	mov ah, [edi]
  1597 000014F3 3C07                <1> 	cmp al, 7
  1598 000014F5 7607                <1> 	jbe movlargecursorterm
  1599 000014F7 B007                <1> 	mov al, 7
  1600 000014F9 E902000000          <1> 	jmp movedcursorterm
  1601                              <1> movlargecursorterm:
  1602 000014FE B0F0                <1> 	mov al, 0xF0
  1603                              <1> movedcursorterm:
  1604 00001500 884701              <1> 	mov [edi + 1], al
  1605 00001503 80FC00              <1> 	cmp ah, 0
  1606 00001506 7504                <1> 	jne fixednocursorterm
  1607 00001508 B420                <1> 	mov ah, " "
  1608 0000150A 8827                <1> 	mov [edi], ah
  1609                              <1> fixednocursorterm:
  1610 0000150C C3                  <1> 	ret
  1611                              <1> 	
  1612                                      %include 'source/solleros.asm'
  1613                              <1> 	;SOLLEROS.ASM
  1614                              <1> os:
  1615 0000150D E8A7FEFFFF          <1> 	call clear
  1616 00001512 BE[F3570000]        <1> 	mov esi, userask
  1617 00001517 E8ACFBFFFF          <1> 	call print
  1618                              <1> usercheck:
  1619 0000151C BE[7A1B0000]        <1> 	mov esi, buftxt
  1620 00001521 B00D                <1> 	mov al, 13
  1621 00001523 B404                <1> 	mov ah, 4
  1622 00001525 CD30                <1> 	int 30h
  1623 00001527 56                  <1> 	push esi
  1624 00001528 BE[13580000]        <1> 	mov esi, line
  1625 0000152D E896FBFFFF          <1> 	call print
  1626 00001532 BE[FD570000]        <1> 	mov esi, pwdask
  1627 00001537 E88CFBFFFF          <1> 	call print
  1628 0000153C 5E                  <1> 	pop esi
  1629 0000153D 46                  <1> 	inc esi
  1630 0000153E 8935[F4150000]      <1> 	mov [esipass], esi
  1631                              <1> passcheck:
  1632 00001544 B000                <1> 	mov al, 0
  1633 00001546 B405                <1> 	mov ah, 5
  1634 00001548 CD30                <1> 	int 30h
  1635 0000154A 3C0D                <1> 	cmp al, 13
  1636 0000154C 0F8435000000        <1> 	je near gotpass
  1637 00001552 3C08                <1> 	cmp al, 8
  1638 00001554 0F840F000000        <1> 	je near backpass
  1639 0000155A 8806                <1> 	mov [esi], al
  1640 0000155C 46                  <1> 	inc esi
  1641 0000155D B02A                <1> 	mov al, '*'
  1642 0000155F B406                <1> 	mov ah, 6
  1643 00001561 CD30                <1> 	int 30h
  1644 00001563 EBDF                <1> 	jmp passcheck
  1645 00001565 08200800            <1> backcursor2 db 8," ",8,0
  1646                              <1> backpass:
  1647 00001569 3B35[F4150000]      <1> 	cmp esi, [esipass]
  1648 0000156F 0F84CFFFFFFF        <1> 	je near passcheck
  1649 00001575 4E                  <1> 	dec esi
  1650 00001576 C60600              <1> 	mov byte [esi], 0
  1651 00001579 56                  <1> 	push esi
  1652 0000157A BE[65150000]        <1> 	mov esi, backcursor2
  1653 0000157F E844FBFFFF          <1> 	call print
  1654 00001584 5E                  <1> 	pop esi
  1655 00001585 EBBD                <1> 	jmp passcheck
  1656                              <1> gotpass:
  1657 00001587 B000                <1> 	mov al,0
  1658 00001589 8806                <1> 	mov [esi], al
  1659 0000158B BE[13580000]        <1> 	mov esi, line
  1660 00001590 E833FBFFFF          <1> 	call print
  1661 00001595 BB[19580000]        <1> 	mov ebx, userlst
  1662                              <1> userfind:
  1663 0000159A BE[7A1B0000]        <1> 	mov esi, buftxt
  1664 0000159F 8A06                <1> 	mov al, [esi]
  1665 000015A1 3C00                <1> 	cmp al, 0
  1666 000015A3 0F8464FFFFFF        <1> 	je near os
  1667 000015A9 891D[F8150000]      <1> 	mov [usercache], ebx
  1668 000015AF E8D4010000          <1> 	call tester
  1669 000015B4 3C01                <1> 	cmp al, 1
  1670 000015B6 7415                <1> 	je pwdtest
  1671                              <1> nxtuser:
  1672 000015B8 43                  <1> 	inc ebx
  1673 000015B9 8A03                <1> 	mov al, [ebx]
  1674 000015BB 3C00                <1> 	cmp al, 0
  1675 000015BD 74DB                <1> 	je userfind
  1676 000015BF 81FB[3C580000]      <1> 	cmp ebx, userlstend
  1677 000015C5 0F8342FFFFFF        <1> 	jae near os
  1678 000015CB EBCD                <1> 	jmp userfind
  1679                              <1> pwdtest:
  1680 000015CD 46                  <1> 	inc esi
  1681 000015CE 43                  <1> 	inc ebx
  1682 000015CF E8B4010000          <1> 	call tester
  1683 000015D4 3C01                <1> 	cmp al, 1
  1684 000015D6 7402                <1> 	je pwdrgt
  1685 000015D8 EBDE                <1> 	jmp nxtuser
  1686 000015DA E8DAFDFFFF          <1> pwdrgt:	call clear
  1687 000015DF 66B90002            <1> 	mov cx, 200h
  1688 000015E3 BE[7A1B0000]        <1> 	mov esi, buftxt
  1689 000015E8 B000                <1> 	mov al, 0
  1690 000015EA 8806                <1> bufclr:	mov [esi], al
  1691 000015EC 46                  <1> 	inc esi
  1692 000015ED E2FB                <1> 	loop bufclr
  1693                              <1> ;;;;;;;;;;;;;;;;
  1694 000015EF E935000000          <1> 	jmp nwcmd
  1695                              <1> 
  1696 000015F4 00000000            <1> esipass dd 0
  1697 000015F8 [19580000]          <1> usercache dd userlst
  1698                              <1> 	
  1699                              <1> buftxtclear:
  1700 000015FC B000                <1> 	mov al, 0
  1701 000015FE BE[7A1B0000]        <1> 	mov esi, buftxt
  1702 00001603 81FE[7A1C0000]      <1> clearbuftxt: cmp esi, buf2
  1703 00001609 730E                <1> 	jae retbufclr
  1704 0000160B 8806                <1> 	mov [esi], al
  1705 0000160D 46                  <1> 	inc esi
  1706 0000160E EBF3                <1> 	jmp clearbuftxt
  1707                              <1> 
  1708 00001610 39DE                <1> clearitbuf: cmp esi, ebx
  1709 00001612 7305                <1> 	jae retbufclr
  1710 00001614 8806                <1> 	mov [esi], al
  1711 00001616 46                  <1> 	inc esi
  1712 00001617 EBF7                <1> 	jmp clearitbuf
  1713 00001619 C3                  <1> retbufclr: ret
  1714                              <1> 
  1715 0000161A E90A000000          <1> full:	jmp nwcmd
  1716                              <1> 
  1717                              <1> nwcmd2:
  1718 0000161F BE[13580000]        <1> 	mov esi, line
  1719 00001624 E89FFAFFFF          <1> 	call print
  1720                              <1> 
  1721 00001629 B001                <1> nwcmd:	mov al, 1
  1722 0000162B 3805[69150000]      <1> 	cmp [BATCHISON], al
  1723 00001631 0F83AC000000        <1> 	jae near batchran
  1724 00001637 B000                <1> cancel:	mov al, 0
  1725 00001639 A2[00150000]        <1> 	mov [IFON], al
  1726 0000163E A2[69150000]        <1> 	mov [BATCHISON], al
  1727 00001643 B05B                <1> 	mov al, '['
  1728 00001645 B406                <1> 	mov ah, 6
  1729 00001647 66BB0700            <1> 	mov bx, 7
  1730 0000164B E86EF8FFFF          <1> 	call int301prnt
  1731 00001650 8B35[F8150000]      <1> 	mov esi, [usercache]
  1732 00001656 E86DFAFFFF          <1> 	call print
  1733 0000165B BE[07580000]        <1> 	mov esi, location
  1734 00001660 E863FAFFFF          <1> 	call print
  1735                              <1> 	;call time
  1736                              <1> 	;mov esi, timeshow
  1737                              <1> 	;call print
  1738                              <1> 	;mov esi, cmd
  1739                              <1> 	;call print
  1740 00001665 E892FFFFFF          <1> 	call buftxtclear
  1741 0000166A BE[7A1B0000]        <1> 	mov esi, buftxt
  1742 0000166F C605[18110000]01    <1> 	mov byte [commandedit], 1
  1743 00001676 B00D                <1> 	mov al, 13
  1744 00001678 66BB0700            <1> 	mov bx, 7
  1745 0000167C E8A0FAFFFF          <1> 	call int305
  1746 00001681 C605[18110000]00    <1> 	mov byte [commandedit], 0
  1747 00001688 803D[7A1B0000]00    <1> 	cmp byte [buftxt], 0
  1748 0000168F 0F848AFFFFFF        <1> 	je near nwcmd2
  1749 00001695 8B35[1B300000]      <1> gotcmd:	mov esi, [currentcommandpos]
  1750 0000169B 8935[17300000]      <1> 	mov [lastcommandpos], esi
  1751 000016A1 BF[7A1B0000]        <1> 	mov edi, buftxt
  1752 000016A6 81C6[1F300000]      <1> 	add esi, commandbuf
  1753 000016AC 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1754 000016B2 7605                <1> 	jbe copycommand
  1755 000016B4 BE[1F300000]        <1> 	mov esi, commandbuf
  1756                              <1> copycommand:
  1757 000016B9 8A07                <1> 	mov al, [edi]
  1758 000016BB 8806                <1> 	mov [esi], al
  1759 000016BD 47                  <1> 	inc edi
  1760 000016BE 46                  <1> 	inc esi
  1761 000016BF 3C00                <1> 	cmp al, 0
  1762 000016C1 740F                <1> 	je donecopy
  1763 000016C3 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1764 000016C9 76EE                <1> 	jbe copycommand
  1765 000016CB BE[1F300000]        <1> 	mov esi, commandbuf
  1766 000016D0 EBE7                <1> 	jmp copycommand
  1767                              <1> donecopy:
  1768 000016D2 81EE[1F300000]      <1> 	sub esi, commandbuf
  1769 000016D8 8935[1B300000]      <1> 	mov [currentcommandpos], esi
  1770 000016DE E914000000          <1> 	jmp run
  1771                              <1> 	
  1772                              <1> batchran:
  1773 000016E3 C3                  <1> 	ret
  1774                              <1> 
  1775 000016E4 E813FFFFFF          <1> input:	call buftxtclear
  1776 000016E9 BE[7A1B0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1777 000016EE B00D                <1> stdin:	mov al, 13
  1778 000016F0 B307                <1> 	mov bl, 7
  1779 000016F2 B404                <1> 	mov ah, 4
  1780 000016F4 CD30                <1> 	int 30h
  1781 000016F6 C3                  <1> 	ret
  1782                              <1> 
  1783 000016F7 BE[13580000]        <1> run:	mov esi, line
  1784 000016FC E8C7F9FFFF          <1> 	call print
  1785 00001701 803D[F51C0000]00    <1> 	cmp byte [indexdone], 0
  1786 00001708 7505                <1> 	jne progtest
  1787 0000170A E851050000          <1> 	call indexfiles
  1788                              <1> progtest:
  1789 0000170F BE[7A1B0000]        <1> 	mov esi, buftxt
  1790 00001714 BB[00130000]        <1> 	mov ebx, fileindex
  1791 00001719 668B03              <1> prgnxt:	mov ax, [ebx]
  1792 0000171C B105                <1> 	mov cl, 5
  1793 0000171E B504                <1> 	mov ch, 4
  1794 00001720 6639C8              <1> 	cmp ax, cx
  1795 00001723 740B                <1> 	je fndprg
  1796 00001725 43                  <1> 	inc ebx
  1797 00001726 81FB[00150000]      <1> 	cmp ebx, fileindexend
  1798 0000172C 732E                <1> 	jae prgnf
  1799 0000172E EBE9                <1> 	jmp prgnxt
  1800 00001730 81C302000000        <1> fndprg: add ebx, 2
  1801 00001736 BE[7A1B0000]        <1> 	mov esi, buftxt
  1802 0000173B 66B90000            <1> 	mov cx, 0
  1803 0000173F E87E000000          <1> 	call cndtest
  1804 00001744 3C01                <1> 	cmp al, 1
  1805 00001746 7302                <1> 	jae prggood
  1806 00001748 EBCF                <1> 	jmp prgnxt
  1807 0000174A 81FB[00150000]      <1> prggood: cmp ebx, fileindexend
  1808 00001750 7331                <1> 	jae prgdn
  1809 00001752 81C303000000        <1> 	add ebx, 3
  1810 00001758 8B3B                <1> 	mov edi, [ebx]
  1811 0000175A FFE7                <1> 	jmp edi
  1812                              <1> prgnf:	
  1813 0000175C A0[7A1B0000]        <1> 	mov al, [buftxt]
  1814 00001761 3C00                <1> 	cmp al, 0
  1815 00001763 741E                <1> 	je prgdn
  1816 00001765 BE[DA570000]        <1> 	mov esi, notfound1
  1817 0000176A E859F9FFFF          <1> 	call print
  1818 0000176F BE[7A1B0000]        <1> 	mov esi, buftxt
  1819 00001774 E84FF9FFFF          <1> 	call print
  1820 00001779 BE[E4570000]        <1> 	mov esi, notfound2
  1821 0000177E E845F9FFFF          <1> 	call print
  1822 00001783 E9A1FEFFFF          <1> prgdn:	jmp nwcmd
  1823                              <1> 
  1824                              <1> 
  1825                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1826 00001788 B000                <1> 	mov al, 0
  1827 0000178A 8A06                <1> retest:	mov al, [esi]
  1828 0000178C 8A23                <1> 	mov ah, [ebx]
  1829 0000178E 3C00                <1> 	cmp al, 0
  1830 00001790 7408                <1> 	je testtrue
  1831 00001792 38E0                <1> 	cmp al, ah
  1832 00001794 750C                <1> 	jne testfalse
  1833 00001796 43                  <1> 	inc ebx
  1834 00001797 46                  <1> 	inc esi
  1835 00001798 EBF0                <1> 	jmp retest
  1836                              <1> testtrue:
  1837 0000179A 80FC00              <1> 	cmp ah, 0
  1838 0000179D 7503                <1> 	jne testfalse
  1839 0000179F B001                <1> 	mov al, 1
  1840 000017A1 C3                  <1> 	ret
  1841                              <1> testfalse:
  1842 000017A2 B000                <1> 	mov al, 0
  1843 000017A4 C3                  <1> 	ret
  1844                              <1> 
  1845                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1846 000017A5 B000                <1> 	mov al, 0
  1847                              <1> opretest:
  1848 000017A7 8A06                <1> 	mov al, [esi]
  1849 000017A9 8A23                <1> 	mov ah, [ebx]
  1850 000017AB 38E0                <1> 	cmp al, ah
  1851 000017AD 7510                <1> 	jne optestfalse
  1852 000017AF 80FC00              <1> 	cmp ah, 0
  1853 000017B2 7404                <1> 	je optesttrue
  1854 000017B4 43                  <1> 	inc ebx
  1855 000017B5 46                  <1> 	inc esi
  1856 000017B6 EBEF                <1> 	jmp opretest
  1857                              <1> optesttrue:
  1858 000017B8 3C00                <1> 	cmp al, 0
  1859 000017BA 7503                <1> 	jne optestfalse
  1860 000017BC B001                <1> 	mov al, 1
  1861 000017BE C3                  <1> 	ret
  1862                              <1> optestfalse:
  1863 000017BF B000                <1> 	mov al, 0
  1864 000017C1 C3                  <1> 	ret
  1865                              <1> 
  1866                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1867 000017C2 B000                <1> 	mov al, 0
  1868 000017C4 8A06                <1> cndretest:	mov al, [esi]
  1869 000017C6 8A23                <1> 	mov ah, [ebx]
  1870 000017C8 38CC                <1> 	cmp ah, cl
  1871 000017CA 7408                <1> 	je cndtesttrue
  1872 000017CC 38E0                <1> 	cmp al, ah
  1873 000017CE 750B                <1> 	jne cndtestfalse
  1874 000017D0 43                  <1> 	inc ebx
  1875 000017D1 46                  <1> 	inc esi
  1876 000017D2 EBF0                <1> 	jmp cndretest
  1877                              <1> cndtesttrue:
  1878 000017D4 38C8                <1> 	cmp al, cl
  1879 000017D6 7506                <1> 	jne cndtestalmost
  1880 000017D8 B001                <1> 	mov al, 1
  1881 000017DA C3                  <1> 	ret
  1882                              <1> cndtestfalse:
  1883 000017DB B000                <1> 	mov al, 0
  1884 000017DD C3                  <1> 	ret
  1885                              <1> cndtestalmost:
  1886 000017DE B002                <1> 	mov al, 2
  1887 000017E0 C3                  <1> 	ret
  1888 000017E1 00                  <1> currentdir db 0
  1889 000017E2 BE[00130000]        <1> dir:	mov esi, fileindex
  1890 000017E7 8A06                <1> 	dirnxt:	mov al, [esi]
  1891 000017E9 B400                <1> 		mov ah, 0
  1892 000017EB 3C05                <1> 		cmp al, 5
  1893 000017ED 744A                <1> 		je dirfnd
  1894 000017EF 3C07                <1> 		cmp al, 7
  1895 000017F1 743C                <1> 		je dirfnd3
  1896 000017F3 3C06                <1> 		cmp al, 6
  1897 000017F5 7438                <1> 		je dirfnd3
  1898 000017F7 46                  <1> 		inc esi
  1899 000017F8 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1900 000017FE 737B                <1> 		jae dirdn
  1901 00001800 EBE5                <1> 		jmp dirnxt
  1902 00001802 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1903 0000180B 070400646F63756D65- <1>
  1904 00001814 6E74000A0400666F6C- <1>
  1905 0000181D 646572000504006578- <1>
  1906 00001826 6563757461626C6500  <1>
  1907                              <1> 	dirfnd3:
  1908 0000182F 46                  <1> 		inc esi
  1909 00001830 81FE[00150000]      <1> 		cmp esi, fileindexend
  1910 00001836 76AF                <1> 		jbe dirnxt
  1911 00001838 4E                  <1> 		dec esi
  1912 00001839 46                  <1> 	dirfnd:	inc esi
  1913 0000183A 8A06                <1> 		mov al, [esi]
  1914 0000183C B400                <1> 		mov ah, 0
  1915 0000183E 3C04                <1> 		cmp al, 4
  1916 00001840 740B                <1> 		je dirfnd2
  1917 00001842 46                  <1> 		inc esi
  1918 00001843 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1919 00001849 7330                <1> 		jae dirdn
  1920 0000184B EB9A                <1> 		jmp dirnxt
  1921 0000184D 81C601000000        <1> 	dirfnd2: add esi, 1
  1922 00001853 E870F8FFFF          <1> 		call print
  1923 00001858 8935[8A180000]      <1> 		mov [esidir], esi
  1924 0000185E BE[16580000]        <1> 		mov esi, dirtab
  1925 00001863 E860F8FFFF          <1> 		call print
  1926 00001868 8B35[8A180000]      <1> 		mov esi, [esidir]
  1927 0000186E 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1928 00001874 7305                <1> 		jae dirdn
  1929 00001876 E96CFFFFFF          <1> 		jmp dirnxt
  1930 0000187B BE[13580000]        <1> 	dirdn:	mov esi, line
  1931 00001880 E843F8FFFF          <1> 			call print
  1932 00001885 E99FFDFFFF          <1> 			jmp nwcmd
  1933 0000188A 00000000            <1> esidir dd 0
  1934                              <1> 
  1935                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1936                              <1> 		                ;ends if array seperator is found backwards after 0
  1937                              <1> 	arnxt:	      
  1938 0000188E 88E8                <1> 		mov al, ch
  1939 00001890 88CC                <1> 		mov ah, cl        
  1940 00001892 663906              <1> 		cmp [esi], ax
  1941 00001895 744D                <1> 		je ardn
  1942 00001897 66390E              <1> 		cmp [esi], cx
  1943 0000189A 7407                <1> 		je arfnd
  1944 0000189C 46                  <1> 		inc esi
  1945 0000189D 39DE                <1> 		cmp esi, ebx
  1946 0000189F 7343                <1> 		jae ardn
  1947 000018A1 EBEB                <1> 		jmp arnxt
  1948 000018A3 81C602000000        <1> 	arfnd: add esi, 2
  1949 000018A9 891D[E5180000]      <1> 		mov [arbx], ebx
  1950 000018AF 890D[E9180000]      <1> 		mov [arcx], ecx
  1951 000018B5 E80EF8FFFF          <1> 		call print
  1952 000018BA 8935[EB180000]      <1> 		mov [arsi], esi
  1953 000018C0 BE[13580000]        <1> 		mov esi, line
  1954 000018C5 E8FEF7FFFF          <1> 		call print
  1955 000018CA 8B1D[E5180000]      <1> 		mov ebx, [arbx]
  1956 000018D0 668B0D[E9180000]    <1> 		mov cx, [arcx]
  1957 000018D7 8B35[EB180000]      <1> 		mov esi, [arsi]
  1958 000018DD 46                  <1> 		inc esi
  1959 000018DE 39DE                <1> 		cmp esi, ebx
  1960 000018E0 7302                <1> 		jae ardn
  1961 000018E2 EBAA                <1> 		jmp arnxt
  1962 000018E4 C3                  <1> 	ardn:	ret
  1963 000018E5 00000000            <1> arbx:	dw 0,0
  1964 000018E9 0000                <1> arcx:	db 0,0
  1965 000018EB 00000000            <1> arsi:	dw 0,0
  1966                              <1> 
  1967                              <1> clearbuffer:
  1968 000018EF BE[7A1C0000]        <1> 	mov esi, buf2
  1969 000018F4 B030                <1> 	mov al, '0'
  1970 000018F6 81FE[8E1C0000]      <1> clearbuf: cmp esi, numbuf
  1971 000018FC 7305                <1> 	jae doneclearbuff
  1972 000018FE 8806                <1> 	mov [esi], al
  1973 00001900 46                  <1> 	inc esi
  1974 00001901 EBF3                <1> 	jmp clearbuf
  1975                              <1> doneclearbuff: 
  1976 00001903 C3                  <1> 		ret
  1977                              <1> 
  1978                              <1> convert:
  1979 00001904 4E                  <1> 	dec esi
  1980 00001905 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  1981                              <1> cnvrt:
  1982 00001907 89DE                <1> 	mov esi, ebx
  1983 00001909 81EE09000000        <1> 	sub esi, 9
  1984 0000190F 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  1985 00001915 720A                <1> 	jb ten8
  1986 00001917 81E900CA9A3B        <1> 	sub ecx, 1000000000
  1987 0000191D FE06                <1> 	inc byte [esi]
  1988 0000191F EBE6                <1> 	jmp cnvrt
  1989 00001921 46                  <1> ten8:	inc esi
  1990 00001922 81F900E1F505        <1> 	cmp ecx, 100000000
  1991 00001928 720A                <1> 	jb ten7
  1992 0000192A 81E900E1F505        <1> 	sub ecx, 100000000
  1993 00001930 FE06                <1> 	inc byte [esi]
  1994 00001932 EBD3                <1> 	jmp cnvrt
  1995 00001934 46                  <1> ten7:	inc esi
  1996 00001935 81F980969800        <1> 	cmp ecx, 10000000
  1997 0000193B 720A                <1> 	jb ten6
  1998 0000193D 81E980969800        <1> 	sub ecx, 10000000
  1999 00001943 FE06                <1> 	inc byte [esi]
  2000 00001945 EBC0                <1> 	jmp cnvrt
  2001 00001947 46                  <1> ten6:	inc esi
  2002 00001948 81F940420F00        <1> 	cmp ecx, 1000000
  2003 0000194E 720A                <1> 	jb ten5
  2004 00001950 81E940420F00        <1> 	sub ecx, 1000000
  2005 00001956 FE06                <1> 	inc byte [esi]
  2006 00001958 EBAD                <1> 	jmp cnvrt
  2007 0000195A 46                  <1> ten5:	inc esi
  2008 0000195B 81F9A0860100        <1> 	cmp ecx, 100000
  2009 00001961 720A                <1> 	jb ten4
  2010 00001963 81E9A0860100        <1> 	sub ecx, 100000
  2011 00001969 FE06                <1> 	inc byte [esi]
  2012 0000196B EB9A                <1> 	jmp cnvrt
  2013 0000196D 46                  <1> ten4:	inc esi
  2014 0000196E 81F910270000        <1> 	cmp ecx, 10000
  2015 00001974 720A                <1> 	jb ten3
  2016 00001976 81E910270000        <1> 	sub ecx, 10000
  2017 0000197C FE06                <1> 	inc byte [esi]
  2018 0000197E EB87                <1> 	jmp cnvrt
  2019 00001980 46                  <1> ten3:	inc esi
  2020 00001981 81F9E8030000        <1> 	cmp ecx, 1000
  2021 00001987 720D                <1> 	jb ten2
  2022 00001989 81E9E8030000        <1> 	sub ecx, 1000
  2023 0000198F FE06                <1> 	inc byte [esi]
  2024 00001991 E971FFFFFF          <1> 	jmp cnvrt
  2025 00001996 46                  <1> ten2:	inc esi
  2026 00001997 81F964000000        <1> 	cmp ecx, 100
  2027 0000199D 720D                <1> 	jb ten1
  2028 0000199F 81E964000000        <1> 	sub ecx, 100
  2029 000019A5 FE06                <1> 	inc byte [esi]
  2030 000019A7 E95BFFFFFF          <1> 	jmp cnvrt
  2031 000019AC 46                  <1> ten1:	inc esi
  2032 000019AD 81F90A000000        <1> 	cmp ecx, 10
  2033 000019B3 720D                <1> 	jb ten0
  2034 000019B5 81E90A000000        <1> 	sub ecx, 10
  2035 000019BB FE06                <1> 	inc byte [esi]
  2036 000019BD E945FFFFFF          <1> 	jmp cnvrt
  2037 000019C2 46                  <1> ten0:	inc esi
  2038 000019C3 81F901000000        <1> 	cmp ecx, 1
  2039 000019C9 720D                <1> 	jb tendn
  2040 000019CB 81E901000000        <1> 	sub ecx, 1
  2041 000019D1 FE06                <1> 	inc byte [esi]
  2042 000019D3 E92FFFFFFF          <1> 	jmp cnvrt
  2043                              <1> tendn:
  2044 000019D8 C3                  <1> 	ret
  2045                              <1> 
  2046                              <1> 	
  2047                              <1> 
  2048 000019D9 00<rept>            <1> hexnumber times 8 db 0
  2049 000019E1 202000              <1> hexnumberend db "  ",0
  2050                              <1> 
  2051                              <1> 
  2052 000019E4 00000000            <1> sibuf dw 0,0
  2053 000019E8 00000000            <1> dibuf dw 0,0
  2054                              <1> 
  2055                              <1> converthex:
  2056                              <1> clearbufferhex:
  2057 000019EC B030                <1> 	mov al, '0'
  2058 000019EE 8935[E4190000]      <1> 	mov [sibuf], esi
  2059 000019F4 893D[E8190000]      <1> 	mov [dibuf], edi
  2060 000019FA 39FE                <1> clearbufhex: cmp esi, edi
  2061 000019FC 7305                <1> 	jae doneclearbuffhex
  2062 000019FE 8806                <1> 	mov [esi], al
  2063 00001A00 46                  <1> 	inc esi
  2064 00001A01 EBF7                <1> 	jmp clearbufhex
  2065                              <1> doneclearbuffhex:
  2066 00001A03 8B35[E8190000]      <1> 	mov esi, [dibuf]
  2067 00001A09 89CA                <1> 	mov edx, ecx
  2068 00001A0B 81FA00000000        <1> 	cmp edx, 0
  2069 00001A11 741F                <1> 	je donenxtephx
  2070                              <1> nxtexphx:	;0x10^x
  2071 00001A13 4E                  <1> 	dec esi
  2072 00001A14 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  2073 00001A16 89D1                <1> 	mov ecx, edx
  2074 00001A18 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  2075 00001A1E E81C000000          <1> 	call cnvrtexphx		;;get this digit
  2076 00001A23 89FE                <1> 	mov esi, edi
  2077 00001A25 C1EA04              <1> 	shr edx, 4		;;next digit
  2078 00001A28 81FA00000000        <1> 	cmp edx, 0
  2079 00001A2E 7402                <1> 	je donenxtephx
  2080 00001A30 EBE1                <1> 	jmp nxtexphx
  2081                              <1> donenxtephx:
  2082 00001A32 8B35[E4190000]      <1> 	mov esi, [sibuf]
  2083 00001A38 8B3D[E8190000]      <1> 	mov edi, [dibuf]
  2084 00001A3E C3                  <1> 	ret
  2085                              <1> cnvrtexphx:			;;convert this number
  2086 00001A3F 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  2087 00001A41 81F900000000        <1> 	cmp ecx, 0
  2088 00001A47 7429                <1> 	je zerohx
  2089 00001A49 8A06                <1> cnvrthx:  mov al, [esi]
  2090 00001A4B 3C39                <1> 	cmp al, '9'
  2091 00001A4D 741B                <1> 	je lettershx
  2092 00001A4F 3C46                <1> lttrhxdn: cmp al, 'F'
  2093 00001A51 741F                <1> 	je zerohx
  2094 00001A53 8A06                <1> 	mov al, [esi]
  2095 00001A55 FEC0                <1> 	inc al
  2096 00001A57 8806                <1> 	mov [esi], al
  2097 00001A59 89DE                <1> 	mov esi, ebx
  2098 00001A5B 81E901000000        <1> cnvrtlphx: sub ecx, 1
  2099 00001A61 81F900000000        <1> 	cmp ecx, 0
  2100 00001A67 75E0                <1> 	jne cnvrthx
  2101 00001A69 C3                  <1> 	ret
  2102                              <1> lettershx:
  2103 00001A6A B041                <1> 	mov al, 'A'
  2104 00001A6C 2C01                <1> 	sub al, 1
  2105 00001A6E 8806                <1> 	mov [esi], al
  2106 00001A70 EBDD                <1> 	jmp lttrhxdn
  2107 00001A72 B030                <1> zerohx:	mov al, '0'
  2108 00001A74 8806                <1> 	mov [esi], al
  2109 00001A76 4E                  <1> 	dec esi
  2110 00001A77 8A06                <1> 	mov al, [esi]
  2111 00001A79 3C46                <1> 	cmp al, 'F'
  2112 00001A7B 74F5                <1> 	je zerohx
  2113 00001A7D 41                  <1> 	inc ecx
  2114 00001A7E EBDB                <1> 	jmp cnvrtlphx
  2115 00001A80 00                  <1> smallhex db 0
  2116 00001A81 01                  <1> firsthexshown db 1
  2117                              <1> showhexsmall:
  2118 00001A82 C605[801A0000]01    <1> 	mov byte [smallhex], 1
  2119 00001A89 E808000000          <1> 	call showhex
  2120 00001A8E C605[801A0000]00    <1> 	mov byte [smallhex], 0
  2121 00001A95 C3                  <1> 	ret
  2122                              <1> showhex:
  2123 00001A96 60                  <1> 	pusha
  2124 00001A97 BE[D9190000]        <1> 	mov esi, hexnumber
  2125 00001A9C BF[E1190000]        <1> 	mov edi, hexnumberend
  2126 00001AA1 E846FFFFFF          <1> 	call converthex
  2127 00001AA6 803D[811A0000]01    <1> 	cmp byte [firsthexshown], 1
  2128 00001AAD 7504                <1> 	jne showthathex
  2129 00001AAF 66BA0000            <1> 	mov dx, 0
  2130                              <1> showthathex:
  2131 00001AB3 803D[811A0000]03    <1> 	cmp byte [firsthexshown], 3
  2132 00001ABA 750A                <1> 	jne nonewhexline
  2133 00001ABC BE[13580000]        <1> 	mov esi, line
  2134 00001AC1 E802F6FFFF          <1> 	call print
  2135                              <1> nonewhexline:
  2136 00001AC6 803D[811A0000]04    <1> 	cmp byte [firsthexshown], 4
  2137 00001ACD 7527                <1> 	jne notabfixhex
  2138 00001ACF B1A0                <1> 	mov cl, 160
  2139 00001AD1 28D1                <1> 	sub cl, dl
  2140 00001AD3 C0E905              <1> 	shr cl, 5
  2141 00001AD6 C0E105              <1> 	shl cl, 5
  2142 00001AD9 80F900              <1> 	cmp cl, 0
  2143 00001ADC 750F                <1> 	jne nonewlinetabfixhex
  2144 00001ADE BE[13580000]        <1> 	mov esi, line
  2145 00001AE3 E8E0F5FFFF          <1> 	call print
  2146 00001AE8 E909000000          <1> 	jmp notabfixhex
  2147                              <1> nonewlinetabfixhex:
  2148 00001AED 80C20F              <1> 	add dl, 15
  2149 00001AF0 C0EA04              <1> 	shr dl, 4
  2150 00001AF3 C0E204              <1> 	shl dl, 4
  2151                              <1> notabfixhex:
  2152 00001AF6 BE[D9190000]        <1> 	mov esi, hexnumber
  2153 00001AFB 803D[801A0000]01    <1> 	cmp byte [smallhex],1
  2154 00001B02 7506                <1> 	jne printnosmallhex
  2155 00001B04 81C606000000        <1> 	add esi, 6
  2156                              <1> printnosmallhex:
  2157 00001B0A E8B9F5FFFF          <1> 	call print
  2158 00001B0F 803D[811A0000]02    <1> 	cmp byte [firsthexshown], 2
  2159 00001B16 750A                <1> 	jne hexshown
  2160 00001B18 BE[13580000]        <1> 	mov esi, line
  2161 00001B1D E8A6F5FFFF          <1> 	call print
  2162                              <1> hexshown:
  2163 00001B22 C605[811A0000]00    <1> 	mov byte [firsthexshown], 0
  2164 00001B29 61                  <1> 	popa
  2165 00001B2A C3                  <1> 	ret
  2166                              <1> 
  2167                              <1> 
  2168 00001B2B 303030303030303030- <1> decnumber db "00000000000000"
  2169 00001B34 3030303030          <1>
  2170 00001B39 2000                <1> decnumberend: db " ",0
  2171                              <1> 
  2172                              <1> showdec: ;;same as showhex, just uses decimal conversion
  2173 00001B3B 60                  <1> 	pusha
  2174 00001B3C BF[2B1B0000]        <1> 	mov edi, decnumber
  2175 00001B41 BE[391B0000]        <1> 	mov esi, decnumberend
  2176                              <1> cleardecbuf:
  2177 00001B46 C60730              <1> 	mov byte [edi], '0'
  2178 00001B49 47                  <1> 	inc edi
  2179 00001B4A 39F7                <1> 	cmp edi, esi
  2180 00001B4C 72F8                <1> 	jb cleardecbuf
  2181 00001B4E BF[2B1B0000]        <1> 	mov edi, decnumber
  2182 00001B53 E8ACFDFFFF          <1> 	call convert
  2183 00001B58 803D[811A0000]01    <1> 	cmp byte [firsthexshown], 1
  2184 00001B5F 7504                <1> 	jne showthatdec
  2185 00001B61 66BA0000            <1> 	mov dx, 0
  2186                              <1> showthatdec:
  2187 00001B65 803D[811A0000]03    <1> 	cmp byte [firsthexshown], 3
  2188 00001B6C 750A                <1> 	jne nonewdecline
  2189 00001B6E BE[13580000]        <1> 	mov esi, line
  2190 00001B73 E850F5FFFF          <1> 	call print
  2191                              <1> nonewdecline:
  2192 00001B78 803D[811A0000]04    <1> 	cmp byte [firsthexshown], 4
  2193 00001B7F 7527                <1> 	jne notabfixdec
  2194 00001B81 B1A0                <1> 	mov cl, 160
  2195 00001B83 28D1                <1> 	sub cl, dl
  2196 00001B85 C0E905              <1> 	shr cl, 5
  2197 00001B88 C0E105              <1> 	shl cl, 5
  2198 00001B8B 80F900              <1> 	cmp cl, 0
  2199 00001B8E 750F                <1> 	jne nonewlinetabfixdec
  2200 00001B90 BE[13580000]        <1> 	mov esi, line
  2201 00001B95 E82EF5FFFF          <1> 	call print
  2202 00001B9A E909000000          <1> 	jmp notabfixdec
  2203                              <1> nonewlinetabfixdec:
  2204 00001B9F 80C20F              <1> 	add dl, 15
  2205 00001BA2 C0EA04              <1> 	shr dl, 4
  2206 00001BA5 C0E204              <1> 	shl dl, 4
  2207                              <1> notabfixdec:
  2208 00001BA8 BE[2B1B0000]        <1> 	mov esi, decnumber
  2209 00001BAD 4E                  <1> 	dec esi
  2210                              <1> sifind:
  2211 00001BAE 46                  <1> 	inc esi
  2212 00001BAF 803E30              <1> 	cmp byte [esi], '0'
  2213 00001BB2 74FA                <1> 	je sifind
  2214 00001BB4 E80FF5FFFF          <1> 	call print
  2215 00001BB9 803D[811A0000]02    <1> 	cmp byte [firsthexshown], 2
  2216 00001BC0 750A                <1> 	jne decshown
  2217 00001BC2 BE[13580000]        <1> 	mov esi, line
  2218 00001BC7 E8FCF4FFFF          <1> 	call print
  2219                              <1> decshown:
  2220 00001BCC C605[811A0000]00    <1> 	mov byte [firsthexshown], 0
  2221 00001BD3 61                  <1> 	popa
  2222 00001BD4 C3                  <1> 	ret
  2223                              <1> 	
  2224                              <1> cnvrttxt: 
  2225 00001BD5 B900000000          <1> 	mov ecx, 0
  2226 00001BDA B800000000          <1> 	mov eax, 0
  2227 00001BDF BA00000000          <1> 	mov edx, 0
  2228 00001BE4 BB00000000          <1> 	mov ebx, 0
  2229 00001BE9 4E                  <1> 	dec esi
  2230                              <1> cnvrtlptxt:
  2231 00001BEA 46                  <1> 	inc esi
  2232 00001BEB 8A06                <1> 	mov al, [esi]
  2233 00001BED 3C00                <1> 	cmp al, 0
  2234 00001BEF 75F9                <1> 	jne cnvrtlptxt
  2235 00001BF1 4E                  <1> 	dec esi
  2236 00001BF2 8A06                <1> 	mov al, [esi]
  2237 00001BF4 3C30                <1> 	cmp al, '0'
  2238 00001BF6 7504                <1> 	jne txtlp
  2239 00001BF8 39FE                <1> zerotest: cmp esi, edi
  2240 00001BFA 745B                <1> 	je donecnvrt
  2241                              <1> txtlp:	
  2242 00001BFC B800000000          <1> 	mov eax, 0
  2243 00001C01 8A06                <1> 	mov al, [esi]
  2244 00001C03 3C3D                <1> 	cmp al, '='
  2245 00001C05 7450                <1> 	je donecnvrt
  2246 00001C07 3C30                <1> 	cmp al, 48
  2247 00001C09 724C                <1> 	jb donecnvrt
  2248 00001C0B 3C23                <1> 	cmp al, '#'
  2249 00001C0D 7448                <1> 	je donecnvrt
  2250 00001C0F 39FE                <1> 	cmp esi, edi
  2251 00001C11 7244                <1> 	jb donecnvrt
  2252 00001C13 81F900000000        <1> 	cmp ecx, 0
  2253 00001C19 7708                <1> 	ja exp
  2254 00001C1B 2C30                <1> noexp:	sub al, 48
  2255 00001C1D 01C2                <1> 	add edx, eax
  2256 00001C1F 4E                  <1> 	dec esi
  2257 00001C20 41                  <1> 	inc ecx
  2258 00001C21 EBD9                <1> 	jmp txtlp
  2259 00001C23 81F900000000        <1> exp:	cmp ecx, 0
  2260 00001C29 74F0                <1> 	je noexp
  2261 00001C2B 2C30                <1> 	sub al, 48
  2262 00001C2D 51                  <1> 	push ecx
  2263 00001C2E 89C3                <1> expmul:	mov ebx, eax
  2264 00001C30 01D8                <1> 	add eax, ebx
  2265 00001C32 01D8                <1> 	add eax, ebx
  2266 00001C34 01D8                <1> 	add eax, ebx
  2267 00001C36 01D8                <1> 	add eax, ebx
  2268 00001C38 01D8                <1> 	add eax, ebx
  2269 00001C3A 01D8                <1> 	add eax, ebx
  2270 00001C3C 01D8                <1> 	add eax, ebx
  2271 00001C3E 01D8                <1> 	add eax, ebx
  2272 00001C40 01D8                <1> 	add eax, ebx
  2273 00001C42 81E901000000        <1> 	sub ecx, 1
  2274 00001C48 81F900000000        <1> 	cmp ecx, 0
  2275 00001C4E 77DE                <1> 	ja expmul
  2276 00001C50 01C2                <1> 	add edx, eax
  2277 00001C52 59                  <1> 	pop ecx
  2278 00001C53 4E                  <1> 	dec esi
  2279 00001C54 41                  <1> 	inc ecx
  2280 00001C55 EBA5                <1> 	jmp txtlp
  2281 00001C57 89D1                <1> donecnvrt: mov ecx, edx
  2282 00001C59 C3                  <1> 	ret
  2283                                      %include 'source/builtinprogs.asm'
  2284 00001C5A 050406040704        <1> filetypes db 5,4,6,4,7,4
  2285                              <1> progstart:		;programs start here
  2286                              <1> ;db 5,4,"index",0
  2287                              <1> ;	call indexfiles
  2288                              <1> ;	jmp nwcmd
  2289                              <1> 
  2290                              <1> 
  2291                              <1> indexfiles:
  2292 00001C60 BE[601C0000]        <1> 	mov esi, progstart
  2293 00001C65 BB[00130000]        <1> 	mov ebx, fileindex
  2294 00001C6A BF[601C0000]        <1> 	mov edi, progstart
  2295 00001C6F 81EF02000000        <1> 	sub edi, 2
  2296                              <1> indexloop:
  2297 00001C75 668B0E              <1> 	mov cx, [esi]
  2298                              <1> 	indexloop2:
  2299 00001C78 663B0F              <1> 		cmp cx, [edi]
  2300 00001C7B 7424                <1> 		je indexloop2done
  2301 00001C7D 81EF02000000        <1> 		sub edi, 2
  2302 00001C83 81FF[5A1C0000]      <1> 		cmp edi, filetypes
  2303 00001C89 73ED                <1> 		jae indexloop2
  2304 00001C8B BF[601C0000]        <1> 	mov edi, progstart
  2305 00001C90 81EF02000000        <1> 	sub edi, 2
  2306 00001C96 46                  <1> 	inc esi
  2307 00001C97 81FE[F62C0000]      <1> 	cmp esi, batchprogend
  2308 00001C9D 734E                <1> 	jae indexloopdone
  2309 00001C9F EBD4                <1> 	jmp indexloop
  2310                              <1> indexloop2done:
  2311 00001CA1 66890B              <1> 	mov [ebx], cx
  2312 00001CA4 81C302000000        <1> 	add ebx, 2
  2313 00001CAA 81C602000000        <1> 	add esi, 2
  2314                              <1> 	nameindex:
  2315 00001CB0 8A0E                <1> 		mov cl, [esi]
  2316 00001CB2 80F900              <1> 		cmp cl, 0
  2317 00001CB5 7406                <1> 		je nameindexdone
  2318 00001CB7 880B                <1> 		mov [ebx], cl
  2319 00001CB9 46                  <1> 		inc esi
  2320 00001CBA 43                  <1> 		inc ebx
  2321 00001CBB EBF3                <1> 		jmp nameindex
  2322                              <1> 	nameindexdone:
  2323 00001CBD 43                  <1> 		inc ebx
  2324 00001CBE 66C7030000          <1> 		mov word [ebx], 0
  2325 00001CC3 81C302000000        <1> 		add ebx, 2
  2326 00001CC9 46                  <1> 		inc esi
  2327 00001CCA 8933                <1> 		mov [ebx], esi
  2328 00001CCC 81C304000000        <1> 		add ebx, 4
  2329 00001CD2 66C7030000          <1> 		mov word [ebx], 0
  2330 00001CD7 81C302000000        <1> 		add ebx, 2
  2331 00001CDD 81FB[00150000]      <1> 		cmp ebx, fileindexend
  2332 00001CE3 7308                <1> 		jae indexloopdone
  2333 00001CE5 81C601000000        <1> 		add esi, 1
  2334 00001CEB EB88                <1> 		jmp indexloop
  2335 00001CED C605[F51C0000]01    <1> indexloopdone: 	mov byte [indexdone], 1
  2336 00001CF4 C3                  <1> 		ret
  2337                              <1> 
  2338 00001CF5 00                  <1> indexdone db 0
  2339                              <1> 
  2340                              <1> 
  2341                              <1> ;db 5,4,"showindex",0
  2342                              <1> ;	mov esi, fileindex
  2343                              <1> ;	mov ebx, fileindexend
  2344                              <1> ;	mov cl, 5
  2345                              <1> ;	mov ch, 4
  2346                              <1> ;	call array
  2347                              <1> ;	mov esi, fileindex
  2348                              <1> ;	mov ebx, fileindexend
  2349                              <1> ;	mov cl, 6
  2350                              <1> ;	mov ch, 4
  2351                              <1> ;	call array
  2352                              <1> ;	mov esi, fileindex
  2353                              <1> ;	mov ebx, fileindexend
  2354                              <1> ;	mov cl, 7
  2355                              <1> ;	mov ch, 4
  2356                              <1> ;	call array
  2357                              <1> ;	jmp nwcmd
  2358                              <1> 
  2359 00001CF6 05046C7300          <1> db 5,4,"ls",0
  2360 00001CFB BE[601C0000]        <1> 	lscmd:	mov esi, progstart
  2361 00001D00 BB[F62C0000]        <1> 		mov ebx, progend
  2362 00001D05 E9D8FAFFFF          <1> 		jmp dir
  2363                              <1> 		
  2364 00001D0A 05046469736B00      <1> db 5,4,"disk",0
  2365 00001D11 B900000000          <1> 		mov ecx, 0
  2366 00001D16 8A0D[87010000]      <1> 		mov cl, [DriveNumber]
  2367 00001D1C C605[811A0000]00    <1> 		mov byte [firsthexshown], 0
  2368 00001D23 E86EFDFFFF          <1> 		call showhex
  2369 00001D28 BE[13580000]        <1> 		mov esi, line
  2370 00001D2D E896F3FFFF          <1> 		call print
  2371 00001D32 BE[63570000]        <1> 		mov esi, diskfileindex
  2372                              <1> 	diskindexdir:
  2373 00001D37 E88CF3FFFF          <1> 		call print
  2374 00001D3C 8B4E05              <1> 		mov ecx, [esi + 5]
  2375 00001D3F C605[811A0000]03    <1> 		mov byte [firsthexshown], 3
  2376 00001D46 E8F0FDFFFF          <1> 		call showdec
  2377 00001D4B 56                  <1> 		push esi
  2378 00001D4C BE[13580000]        <1> 		mov esi, line
  2379 00001D51 E872F3FFFF          <1> 		call print
  2380 00001D56 5E                  <1> 		pop esi
  2381 00001D57 81C609000000        <1> 		add esi, 9
  2382 00001D5D 81FE[D5570000]      <1> 		cmp esi, enddiskfileindex
  2383 00001D63 72D2                <1> 		jb diskindexdir
  2384 00001D65 E9BFF8FFFF          <1> 		jmp nwcmd
  2385                              <1> 
  2386 00001D6A 0504636C65617200    <1> db 5,4,"clear",0
  2387 00001D72 E842F6FFFF          <1> 	cls:	call clear
  2388 00001D77 E9ADF8FFFF          <1> 		jmp nwcmd
  2389                              <1> 		
  2390 00001D7C 05047761697400      <1> db 5,4,"wait",0
  2391 00001D83 B000                <1> 		mov al, 0
  2392 00001D85 E8F8F2FFFF          <1> 		call int302
  2393 00001D8A E99AF8FFFF          <1> 		jmp nwcmd
  2394                              <1> 
  2395 00001D8F 05046563686F00      <1> db 5,4,"echo",0
  2396 00001D96 BE[7A1B0000]        <1> 	echo:	mov esi, buftxt
  2397 00001D9B 81C605000000        <1> 		add esi, 5
  2398 00001DA1 8A06                <1> 		mov al, [esi]
  2399 00001DA3 3C24                <1> 		cmp al, '$'
  2400 00001DA5 7414                <1> 		je echovr
  2401 00001DA7 E81CF3FFFF          <1> 		call print
  2402 00001DAC BE[13580000]        <1> 		mov esi, line
  2403 00001DB1 E812F3FFFF          <1> 		call print
  2404 00001DB6 E96EF8FFFF          <1> 		jmp nwcmd
  2405 00001DBB BB[6F150000]        <1> 	echovr:	mov ebx, variables
  2406 00001DC0 BF06000000          <1> 		mov edi, 6
  2407 00001DC5 E83A000000          <1> 		call nxtvrech
  2408 00001DCA E957000000          <1> 		jmp prntvr2
  2409 00001DCF B13D                <1> 	echvar:	mov cl, '='
  2410 00001DD1 43                  <1> 		inc ebx
  2411 00001DD2 8A03                <1> 		mov al, [ebx]
  2412 00001DD4 3C00                <1> 		cmp al, 0
  2413 00001DD6 742C                <1> 		je nxtvrech
  2414 00001DD8 3C3D                <1> 		cmp al, '='
  2415 00001DDA 7420                <1> 		je nxtvrechb1
  2416 00001DDC BE[7A1B0000]        <1> 		mov esi, buftxt
  2417 00001DE1 01FE                <1> 		add esi, edi
  2418 00001DE3 E8DAF9FFFF          <1> 		call cndtest
  2419 00001DE8 3C02                <1> 		cmp al, 2
  2420 00001DEA 7436                <1> 		je prntvr
  2421 00001DEC 3C01                <1> 		cmp al, 1
  2422 00001DEE 7432                <1> 		je prntvr
  2423 00001DF0 BE[7A1B0000]        <1> 		mov esi, buftxt
  2424 00001DF5 01FE                <1> 		add esi, edi
  2425 00001DF7 E908000000          <1> 		jmp nxtvrech
  2426                              <1> 	nxtvrechb1:
  2427 00001DFC 81EB02000000        <1> 		sub ebx, 2
  2428 00001E02 EBCB                <1> 		jmp echvar
  2429 00001E04 8A03                <1> 	nxtvrech: mov al, [ebx]
  2430 00001E06 3C05                <1> 		cmp al, 5
  2431 00001E08 740F                <1> 		je nxtvrec2
  2432 00001E0A 43                  <1> 		inc ebx
  2433 00001E0B 81FB[6F1A0000]      <1> 		cmp ebx, varend
  2434 00001E11 0F8312F8FFFF        <1> 		jae nwcmd
  2435 00001E17 EBEB                <1> 		jmp nxtvrech
  2436 00001E19 43                  <1> 	nxtvrec2: inc ebx
  2437 00001E1A 8A03                <1> 		mov al, [ebx]
  2438 00001E1C 3C04                <1> 		cmp al, 4
  2439 00001E1E 74AF                <1> 		je echvar
  2440 00001E20 EBE2                <1> 		jmp nxtvrech
  2441 00001E22 43                  <1> 	prntvr: inc ebx
  2442 00001E23 89DE                <1> 		mov esi, ebx
  2443 00001E25 C3                  <1> 		ret
  2444 00001E26 E89DF2FFFF          <1> 	prntvr2: call print
  2445 00001E2B BE[13580000]        <1> 		mov esi, line
  2446 00001E30 E893F2FFFF          <1> 		call print
  2447 00001E35 E9EFF7FFFF          <1> 		jmp nwcmd
  2448                              <1> 		
  2449                              <1> 
  2450 00001E3A 05042300            <1> db 5,4,"#",0
  2451                              <1> 	num:	
  2452 00001E3E E8ACFAFFFF          <1> 		call clearbuffer
  2453 00001E43 C605[FA200000]00    <1> 		mov byte [decimal], 0
  2454 00001E4A C605[FB200000]00    <1> 		mov byte [decimal2], 0
  2455 00001E51 BE[7A1B0000]        <1> 		mov esi, buftxt
  2456 00001E56 B800000000          <1> 		mov eax, 0
  2457 00001E5B B900000000          <1> 		mov ecx, 0
  2458 00001E60 BB00000000          <1> 		mov ebx, 0
  2459 00001E65 8A06                <1> 	num2:	mov al, [esi]
  2460 00001E67 3C2B                <1> 		cmp al, '+'
  2461 00001E69 741B                <1> 		je operatorfound
  2462 00001E6B 3C2D                <1> 		cmp al, '-'
  2463 00001E6D 7417                <1> 		je operatorfound
  2464 00001E6F 3C2A                <1> 		cmp al, '*'
  2465 00001E71 7413                <1> 		je operatorfound
  2466 00001E73 3C2F                <1> 		cmp al, '/'
  2467 00001E75 740F                <1> 		je operatorfound
  2468 00001E77 3C5E                <1> 		cmp al, '^'
  2469 00001E79 740B                <1> 		je operatorfound
  2470 00001E7B 46                  <1> 		inc esi
  2471 00001E7C 3C00                <1> 		cmp al, 0
  2472 00001E7E 0F84A5F7FFFF        <1> 		je near nwcmd
  2473 00001E84 EBDF                <1> 		jmp num2
  2474 00001E86 50                  <1> 	operatorfound: push eax
  2475 00001E87 B400                <1> 		mov ah, 0
  2476 00001E89 8826                <1> 		mov [esi], ah
  2477 00001E8B 89F7                <1> 		mov edi, esi
  2478 00001E8D 46                  <1> 		inc esi
  2479 00001E8E 8A06                <1> 		mov al, [esi]
  2480 00001E90 3C24                <1> 		cmp al, '$'
  2481 00001E92 0F8481000000        <1> 		je near varnum1
  2482 00001E98 3C25                <1> 		cmp al, '%'
  2483 00001E9A 0F8469000000        <1> 		je near resultnum1
  2484                              <1> 	varnum2: 
  2485 00001EA0 57                  <1> 		push edi
  2486 00001EA1 E8C9000000          <1> 		call checkdecimal
  2487 00001EA6 5F                  <1> 		pop edi
  2488 00001EA7 E829FDFFFF          <1> 		call cnvrttxt
  2489                              <1> 	vrnm2:
  2490 00001EAC 89CB                <1> 		mov ebx, ecx
  2491 00001EAE 53                  <1> 		push ebx
  2492 00001EAF E83BFAFFFF          <1> 		call clearbuffer
  2493 00001EB4 BE[7A1B0000]        <1> 		mov esi, buftxt
  2494 00001EB9 89F7                <1> 		mov edi, esi
  2495 00001EBB 46                  <1> 		inc esi
  2496 00001EBC 8A06                <1> 		mov al, [esi]
  2497 00001EBE 3C24                <1> 		cmp al, '$'
  2498 00001EC0 0F8474000000        <1> 		je near varnum3
  2499 00001EC6 3C25                <1> 		cmp al, '%'
  2500 00001EC8 0F8443000000        <1> 		je near resultnum2
  2501                              <1> 	varnum4: 
  2502 00001ECE 57                  <1> 		push edi
  2503 00001ECF E887000000          <1> 		call checkdecimal2
  2504 00001ED4 5F                  <1> 		pop edi
  2505 00001ED5 E8FBFCFFFF          <1> 		call cnvrttxt
  2506                              <1> 	vrnm4:
  2507 00001EDA 5B                  <1> 		pop ebx
  2508 00001EDB 58                  <1> 		pop eax
  2509 00001EDC 3C2B                <1> 		cmp al, '+'
  2510 00001EDE 0F84B9000000        <1> 		je near plusnum
  2511 00001EE4 3C2D                <1> 		cmp al, '-'
  2512 00001EE6 0F84BD000000        <1> 		je near subnum
  2513 00001EEC 3C2A                <1> 		cmp al, '*'
  2514 00001EEE 0F84C1000000        <1> 		je near mulnum
  2515 00001EF4 3C2F                <1> 		cmp al, '/'
  2516 00001EF6 0F84CF000000        <1> 		je near divnum
  2517 00001EFC 3C5E                <1> 		cmp al, '^'
  2518 00001EFE 0F84ED000000        <1> 		je near expnum
  2519 00001F04 E920F7FFFF          <1> 		jmp nwcmd
  2520                              <1> 	resultnum1:
  2521 00001F09 8B0D[FC200000]      <1> 		mov ecx, [result]
  2522 00001F0F EB9B                <1> 		jmp vrnm2
  2523                              <1> 	resultnum2:
  2524 00001F11 8B0D[FC200000]      <1> 		mov ecx, [result]
  2525 00001F17 EBC1                <1> 		jmp vrnm4
  2526 00001F19 81EE[7A1B0000]      <1> 	varnum1: sub esi, buftxt
  2527 00001F1F 89F7                <1> 		mov edi, esi
  2528 00001F21 81C6[7A1B0000]      <1> 		add esi, buftxt
  2529 00001F27 47                  <1> 		inc edi
  2530 00001F28 BB[6F150000]        <1> 		mov ebx, variables
  2531 00001F2D E8D2FEFFFF          <1> 		call nxtvrech
  2532 00001F32 89F7                <1> 		mov edi, esi
  2533 00001F34 4F                  <1> 		dec edi
  2534 00001F35 E966FFFFFF          <1> 		jmp varnum2
  2535 00001F3A 81EE[7A1B0000]      <1> 	varnum3: sub esi, buftxt
  2536 00001F40 89F7                <1> 		mov edi, esi
  2537 00001F42 81C6[7A1B0000]      <1> 		add esi, buftxt
  2538 00001F48 47                  <1> 		inc edi
  2539 00001F49 BB[6F150000]        <1> 		mov ebx, variables
  2540 00001F4E E8B1FEFFFF          <1> 		call nxtvrech
  2541 00001F53 89F7                <1> 		mov edi, esi
  2542 00001F55 4F                  <1> 		dec edi
  2543 00001F56 E973FFFFFF          <1> 		jmp varnum4
  2544                              <1> 	checkdecimal2:
  2545 00001F5B 8A25[FA200000]      <1> 		mov ah, [decimal]
  2546 00001F61 8825[FB200000]      <1> 		mov [decimal2], ah
  2547 00001F67 B400                <1> 		mov ah, 0
  2548 00001F69 8825[FA200000]      <1> 		mov [decimal], ah
  2549                              <1> 	checkdecimal:
  2550 00001F6F 89F7                <1> 		mov edi, esi
  2551                              <1> 	chkdec1:
  2552 00001F71 8A07                <1> 		mov al, [edi]
  2553 00001F73 3C2E                <1> 		cmp al, '.'
  2554 00001F75 0F840B000000        <1> 		je near fnddec
  2555 00001F7B 3C00                <1> 		cmp al, 0
  2556 00001F7D 0F8419000000        <1> 		je near nodecimal
  2557 00001F83 47                  <1> 		inc edi
  2558 00001F84 EBEB                <1> 		jmp chkdec1
  2559                              <1> 	fnddec:
  2560 00001F86 8A4701              <1> 		mov al, [edi + 1]
  2561 00001F89 8807                <1> 		mov [edi], al
  2562 00001F8B 3C00                <1> 		cmp al, 0
  2563 00001F8D 0F8409000000        <1> 		je near nodecimal
  2564 00001F93 FE05[FA200000]      <1> 		inc byte [decimal]
  2565 00001F99 47                  <1> 		inc edi
  2566 00001F9A EBEA                <1> 		jmp fnddec
  2567                              <1> 	nodecimal:
  2568 00001F9C C3                  <1> 		ret
  2569                              <1> 	plusnum:
  2570 00001F9D E816010000          <1> 		call decaddfix
  2571 00001FA2 01D9                <1> 		add ecx, ebx
  2572 00001FA4 E991000000          <1> 		jmp retnum
  2573                              <1> 	subnum:
  2574 00001FA9 E80A010000          <1> 		call decaddfix
  2575 00001FAE 29D9                <1> 		sub ecx, ebx
  2576 00001FB0 E985000000          <1> 		jmp retnum
  2577                              <1> 	mulnum:
  2578 00001FB5 A0[FB200000]        <1> 		mov al, [decimal2]
  2579 00001FBA 0005[FA200000]      <1> 		add [decimal], al
  2580 00001FC0 89C8                <1> 		mov eax, ecx
  2581 00001FC2 F7E3                <1> 		mul ebx
  2582 00001FC4 89C1                <1> 		mov ecx, eax
  2583 00001FC6 E96F000000          <1> 		jmp retnum
  2584                              <1> 	divnum:
  2585 00001FCB E8E8000000          <1> 		call decaddfix
  2586 00001FD0 B000                <1> 		mov al, 0
  2587 00001FD2 A2[FA200000]        <1> 		mov [decimal], al
  2588 00001FD7 6689C8              <1> 		mov ax, cx
  2589 00001FDA 80FB00              <1> 		cmp bl, 0
  2590 00001FDD 0F8457000000        <1> 		je near retnum
  2591 00001FE3 F6F3                <1> 		div bl
  2592 00001FE5 B900000000          <1> 		mov ecx, 0
  2593 00001FEA 88C1                <1> 		mov cl, al
  2594 00001FEC E949000000          <1> 		jmp retnum
  2595                              <1> 	expnum:
  2596 00001FF1 8A15[FA200000]      <1> 		mov dl, [decimal]
  2597 00001FF7 8815[FB200000]      <1> 		mov [decimal2], dl
  2598 00001FFD BA00000000          <1> 		mov edx, 0
  2599 00002002 89C8                <1> 		mov eax, ecx
  2600 00002004 89D9                <1> 		mov ecx, ebx
  2601 00002006 89C3                <1> 		mov ebx, eax
  2602 00002008 81F900000000        <1> 		cmp ecx, 0
  2603 0000200E 7425                <1> 		je noexpnum
  2604 00002010 49                  <1> 		dec ecx
  2605 00002011 81F900000000        <1> 		cmp ecx, 0
  2606 00002017 7415                <1> 		je noexpnumlp
  2607 00002019 F7E3                <1> 	expnumlp: mul ebx
  2608 0000201B 8A15[FB200000]      <1> 		mov dl, [decimal2]
  2609 00002021 0015[FA200000]      <1> 		add [decimal], dl
  2610 00002027 BA00000000          <1> 		mov edx, 0
  2611 0000202C E2EB                <1> 		loop expnumlp
  2612                              <1> 	noexpnumlp:
  2613 0000202E 89C1                <1> 		mov ecx, eax
  2614 00002030 E905000000          <1> 		jmp retnum
  2615                              <1> 	noexpnum:
  2616 00002035 B901000000          <1> 		mov ecx, 1
  2617                              <1> 	retnum: 
  2618 0000203A BE[8E1C0000]        <1> 		mov esi, numbuf
  2619 0000203F 890D[FC200000]      <1> 		mov [result], ecx
  2620 00002045 E8BAF8FFFF          <1> 		call convert
  2621 0000204A BE[8E1C0000]        <1> 		mov esi, numbuf
  2622 0000204F 8A25[FA200000]      <1> 		mov ah, [decimal]
  2623 00002055 80FC00              <1> 		cmp ah, 0
  2624 00002058 0F8425000000        <1> 		je near noputdecimal
  2625                              <1> 	putdecimal:
  2626 0000205E 4E                  <1> 		dec esi
  2627 0000205F FECC                <1> 		dec ah
  2628 00002061 80FC00              <1> 		cmp ah, 0
  2629 00002064 0F87F4FFFFFF        <1> 		ja near putdecimal
  2630 0000206A 4E                  <1> 		dec esi
  2631 0000206B 8A06                <1> 		mov al, [esi]
  2632 0000206D C6062E              <1> 		mov byte [esi], '.'
  2633                              <1> 	decputloop:
  2634 00002070 4E                  <1> 		dec esi
  2635 00002071 8A26                <1> 		mov ah, [esi]
  2636 00002073 8806                <1> 		mov [esi], al
  2637 00002075 88E0                <1> 		mov al, ah
  2638 00002077 81FE[7A1C0000]      <1> 		cmp esi, buf2
  2639 0000207D 0F87EDFFFFFF        <1> 		ja near decputloop
  2640                              <1> 	noputdecimal:
  2641 00002083 BE[7A1C0000]        <1> 		mov esi, buf2
  2642 00002088 E809000000          <1> 		call chkadd
  2643 0000208D E997F5FFFF          <1> 		jmp nwcmd
  2644 00002092 00000000            <1> edxnumbuf dw 0,0
  2645 00002096 8A06                <1> 	chkadd: mov al, [esi]
  2646 00002098 3C30                <1> 		cmp al, '0'
  2647 0000209A 750C                <1> 		jne dnadd
  2648 0000209C 46                  <1> 		inc esi
  2649 0000209D 81FE[8E1C0000]      <1> 		cmp esi, numbuf
  2650 000020A3 7402                <1> 		je dnaddm1
  2651 000020A5 EBEF                <1> 		jmp chkadd
  2652 000020A7 4E                  <1> 	dnaddm1: dec esi
  2653 000020A8 E81BF0FFFF          <1> 	dnadd:	call print
  2654 000020AD BE[13580000]        <1> 		mov esi, line
  2655 000020B2 E811F0FFFF          <1> 		call print
  2656 000020B7 C3                  <1> 		ret
  2657                              <1> 		
  2658                              <1> 	decaddfix:
  2659 000020B8 A0[FB200000]        <1> 		mov al, [decimal2]
  2660 000020BD 8A25[FA200000]      <1> 		mov ah, [decimal]
  2661 000020C3 38E0                <1> 		cmp al, ah
  2662 000020C5 7432                <1> 		je gooddecadd
  2663 000020C7 38E0                <1> 		cmp al, ah
  2664 000020C9 721A                <1> 		jb lowdecadd
  2665                              <1> 	highdecadd:
  2666 000020CB FEC4                <1> 		inc ah
  2667 000020CD 89CA                <1> 		mov edx, ecx
  2668 000020CF C1E103              <1> 		shl ecx, 3
  2669 000020D2 01D1                <1> 		add ecx, edx
  2670 000020D4 01D1                <1> 		add ecx, edx
  2671 000020D6 38E0                <1> 		cmp al, ah
  2672 000020D8 77F1                <1> 		ja highdecadd
  2673 000020DA 8825[FA200000]      <1> 		mov [decimal], ah
  2674 000020E0 E914000000          <1> 		jmp gooddecadd
  2675                              <1> 	lowdecadd:
  2676 000020E5 FEC0                <1> 		inc al
  2677 000020E7 89DA                <1> 		mov edx, ebx
  2678 000020E9 C1E303              <1> 		shl ebx, 3
  2679 000020EC 01D3                <1> 		add ebx, edx
  2680 000020EE 01D3                <1> 		add ebx, edx
  2681 000020F0 38E0                <1> 		cmp al, ah
  2682 000020F2 72F1                <1> 		jb lowdecadd
  2683 000020F4 A2[FA200000]        <1> 		mov [decimal], al
  2684                              <1> 	gooddecadd:
  2685 000020F9 C3                  <1> 		ret
  2686                              <1> 		
  2687 000020FA 00                  <1> decimal db 0
  2688 000020FB 00                  <1> decimal2 db 0
  2689 000020FC 00000000            <1> result db 0,0,0,0
  2690                              <1> 	
  2691 00002100 05042500            <1> db 5,4,"%",0
  2692 00002104 E8E6F7FFFF          <1> 	ans:	call clearbuffer
  2693 00002109 8B0D[FC200000]      <1> 		mov ecx, [result]
  2694 0000210F BE[7A1C0000]        <1> 		mov esi, buf2
  2695 00002114 E8EBF7FFFF          <1> 		call convert
  2696 00002119 BE[7A1C0000]        <1> 		mov esi, buf2
  2697 0000211E E873FFFFFF          <1> 		call chkadd
  2698 00002123 E901F5FFFF          <1> 		jmp nwcmd
  2699                              <1> 
  2700 00002128 05042400            <1> db 5,4,"$",0
  2701 0000212C BE[7A1B0000]        <1> var: mov esi, buftxt
  2702 00002131 BB[6F150000]        <1> 	mov ebx, variables
  2703 00002136 8A06                <1> lkeq:	mov al, [esi]
  2704 00002138 3C3D                <1> 	cmp al, '='
  2705 0000213A 741F                <1> 	je eqfnd	;is there an '=' sign?
  2706 0000213C 3C00                <1> 	cmp al, 0
  2707 0000213E 7403                <1> 	je echovars
  2708 00002140 46                  <1> 	inc esi
  2709 00002141 EBF3                <1> 	jmp lkeq
  2710 00002143 BE[6F150000]        <1> echovars: mov esi, variables
  2711 00002148 BB[6F1A0000]        <1> 	mov ebx, varend
  2712 0000214D B105                <1> 	mov cl, 5
  2713 0000214F B504                <1> 	mov ch, 4
  2714 00002151 E838F7FFFF          <1> 	call array
  2715 00002156 E9CEF4FFFF          <1> 	jmp nwcmd
  2716 0000215B 46                  <1> eqfnd:	inc esi
  2717 0000215C 8A06                <1> 	mov al, [esi]
  2718 0000215E 3C00                <1> 	cmp al, 0
  2719 00002160 740F                <1> 	je readvar
  2720 00002162 BE[7A1B0000]        <1> 	mov esi, buftxt
  2721 00002167 BB[6F150000]        <1> 	mov ebx, variables
  2722 0000216C E91E000000          <1> 	jmp seek
  2723                              <1> readvar:
  2724 00002171 B00D                <1> 	mov al, 13
  2725 00002173 66BB0700            <1> 	mov bx, 7
  2726 00002177 C605[18110000]00    <1> 	mov byte [commandedit], 0
  2727 0000217E E89EEFFFFF          <1> 	call int305
  2728 00002183 BE[13580000]        <1> 	mov esi, line
  2729 00002188 E83BEFFFFF          <1> 	call print
  2730 0000218D EB9D                <1> 	jmp var
  2731 0000218F 668B03              <1> seek:	mov ax, [ebx]
  2732 00002192 B105                <1> 	mov cl, 5
  2733 00002194 B504                <1> 	mov ch, 4
  2734 00002196 663D0000            <1> 	cmp ax, 0
  2735 0000219A 0F8459000000        <1> 	je near save
  2736 000021A0 6639C8              <1> 	cmp ax, cx
  2737 000021A3 7403                <1> 	je skfnd
  2738 000021A5 43                  <1> 	inc ebx
  2739 000021A6 EBE7                <1> 	jmp seek
  2740 000021A8 BE[7A1B0000]        <1> skfnd:	mov esi, buftxt
  2741 000021AD 46                  <1> 	inc esi
  2742 000021AE 81C302000000        <1> 	add ebx, 2
  2743 000021B4 89DF                <1> 	mov edi, ebx
  2744 000021B6 B13D                <1> 	mov cl, '='
  2745 000021B8 E805F6FFFF          <1> 	call cndtest
  2746 000021BD 3C01                <1> 	cmp al, 1	
  2747 000021BF 7417                <1> 	je varfnd
  2748 000021C1 89FB                <1> 	mov ebx, edi
  2749 000021C3 BE[7A1B0000]        <1> 	mov esi, buftxt
  2750 000021C8 668B03              <1> 	mov ax, [ebx]
  2751 000021CB 663D0000            <1> 	cmp ax, 0
  2752 000021CF 0F8424000000        <1> 	je near save
  2753 000021D5 43                  <1> 	inc ebx
  2754 000021D6 EBB7                <1> 	jmp seek
  2755 000021D8 8A03                <1> varfnd:	mov al, [ebx]
  2756 000021DA 3C04                <1> 	cmp al, 4
  2757 000021DC 7404                <1> 	je save2
  2758 000021DE 4B                  <1> 	dec ebx
  2759 000021DF 4E                  <1> 	dec esi
  2760 000021E0 EBF6                <1> 	jmp varfnd
  2761 000021E2 4B                  <1> save2:	dec ebx
  2762 000021E3 4E                  <1> 	dec esi
  2763 000021E4 8A03                <1> 	mov al, [ebx]
  2764 000021E6 3C05                <1> 	cmp al, 5
  2765 000021E8 7402                <1> 	je remove
  2766 000021EA EBEC                <1> 	jmp varfnd
  2767 000021EC 8A03                <1> remove: mov al, [ebx]
  2768 000021EE 3C00                <1> 	cmp al, 0
  2769 000021F0 749D                <1> 	je seek
  2770 000021F2 B000                <1> 	mov al, 0
  2771 000021F4 8803                <1> 	mov [ebx], al
  2772 000021F6 43                  <1> 	inc ebx
  2773 000021F7 EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2774 000021F9 BE[7A1B0000]        <1> save:	mov esi, buftxt
  2775 000021FE 43                  <1> 	inc ebx
  2776 000021FF B005                <1> 	mov al, 5
  2777 00002201 B404                <1> 	mov ah, 4
  2778 00002203 668903              <1> 	mov [ebx], ax
  2779 00002206 43                  <1> 	inc ebx
  2780 00002207 43                  <1> svhere:	inc ebx
  2781 00002208 46                  <1> 	inc esi
  2782 00002209 8A06                <1> 	mov al, [esi]
  2783 0000220B 3C00                <1> 	cmp al, 0
  2784 0000220D 0F8442000000        <1> 	je near svdone
  2785 00002213 3C25                <1> 	cmp al, '%'
  2786 00002215 7404                <1> 	je ans2
  2787 00002217 8803                <1> 	mov [ebx], al	
  2788 00002219 EBEC                <1> 	jmp svhere
  2789 0000221B 56                  <1> ans2:	push esi
  2790 0000221C BE[7A1C0000]        <1> 	mov esi, buf2
  2791 00002221 E823000000          <1> 	call ansfnd
  2792 00002226 E803000000          <1> 	call anscp
  2793 0000222B 5E                  <1> 	pop esi
  2794 0000222C EBD9                <1> 	jmp svhere
  2795 0000222E 8A06                <1> anscp:	mov al, [esi]
  2796 00002230 8803                <1> 	mov [ebx], al
  2797 00002232 81FE[8E1C0000]      <1> 	cmp esi, numbuf
  2798 00002238 74CD                <1> 	je svhere
  2799 0000223A 3C00                <1> 	cmp al, 0
  2800 0000223C 74C9                <1> 	je svhere
  2801 0000223E 43                  <1> 	inc ebx
  2802 0000223F 46                  <1> 	inc esi
  2803 00002240 EBEC                <1> 	jmp anscp
  2804 00002242 5E                  <1> ansnf:	pop esi
  2805 00002243 8A06                <1> 	mov al, [esi]
  2806 00002245 8803                <1> 	mov [ebx], al
  2807 00002247 EBBE                <1> 	jmp svhere
  2808 00002249 46                  <1> ansfnd:	inc esi
  2809 0000224A 8A06                <1> 	mov al, [esi]
  2810 0000224C 3C00                <1> 	cmp al, 0
  2811 0000224E 74F2                <1> 	je ansnf
  2812 00002250 3C30                <1> 	cmp al, '0'
  2813 00002252 74F5                <1> 	je ansfnd
  2814 00002254 C3                  <1> 	ret
  2815 00002255 B000                <1> svdone:	mov al, 0
  2816 00002257 8803                <1> 	mov [ebx], al
  2817 00002259 E9CBF3FFFF          <1> 	jmp nwcmd
  2818                              <1> 	
  2819 0000225E 05046C6F676F757400  <1> 	db 5,4,"logout",0
  2820                              <1> logout:
  2821 00002267 E9A1F2FFFF          <1> 	jmp os
  2822                              <1> 	
  2823 0000226C 05047265626F6F7400  <1> 	db 5,4,"reboot",0
  2824                              <1> rebootcomp:
  2825 00002275 E9DEDFFFFF          <1> 	jmp coldboot
  2826                              <1> 
  2827 0000227A 050473687574646F77- <1> 	db 5,4,"shutdown",0
  2828 00002283 6E00                <1>
  2829                              <1> shutdowncomp:
  2830 00002285 E9A4DFFFFF          <1> 	jmp shutdown
  2831                              <1> 	
  2832 0000228A 05042E2F00          <1> 	db 5,4,"./",0
  2833                              <1> rundiskprog:
  2834 0000228F BF[7A1B0000]        <1> 	mov edi, buftxt
  2835 00002294 81C702000000        <1> 	add edi, 2
  2836 0000229A BE00004000          <1> 	mov esi, 0x400000
  2837 0000229F E8572C0000          <1> 	call loadfile
  2838 000022A4 81FA94010000        <1> 	cmp edx, 404
  2839 000022AA 7414                <1> 	je noprogfound
  2840 000022AC BB00004000          <1> 	mov ebx, 0x400000
  2841 000022B1 66813B4558          <1> 	cmp word [ebx], "EX"
  2842 000022B6 7531                <1> 	jne progbatchfound
  2843 000022B8 81C302000000        <1> 	add ebx, 2
  2844 000022BE FFE3                <1> 	jmp ebx
  2845                              <1> noprogfound:
  2846 000022C0 BE[DA570000]        <1> 	mov esi, notfound1
  2847 000022C5 E8FEEDFFFF          <1> 	call print
  2848 000022CA BE[7A1B0000]        <1> 	mov esi, buftxt
  2849 000022CF 81C602000000        <1> 	add esi, 2
  2850 000022D5 E8EEEDFFFF          <1> 	call print
  2851 000022DA BE[E4570000]        <1> 	mov esi, notfound2
  2852 000022DF E8E4EDFFFF          <1> 	call print
  2853 000022E4 E940F3FFFF          <1> 	jmp nwcmd
  2854                              <1> progbatchfound:
  2855 000022E9 BF00004000          <1> 		mov edi, 0x400000
  2856 000022EE C605[69150000]01    <1> 		mov byte [BATCHISON], 1
  2857                              <1> 	batchrunloop:
  2858 000022F5 E802F3FFFF          <1> 		call buftxtclear
  2859 000022FA BE[7A1B0000]        <1> 		mov esi, buftxt
  2860                              <1> 	batchrunloop2:
  2861 000022FF B10D                <1> 		mov cl, 13
  2862 00002301 B50A                <1> 		mov ch, 10
  2863 00002303 66390F              <1> 		cmp [edi], cx
  2864 00002306 0F841E000000        <1> 		je near nxtbatchrunline
  2865 0000230C 66C1C108            <1> 		rol cx, 8
  2866 00002310 66390F              <1> 		cmp [edi], cx
  2867 00002313 0F8411000000        <1> 		je near nxtbatchrunline
  2868 00002319 803F00              <1> 		cmp byte [edi], 0
  2869 0000231C 0F8408000000        <1> 		je near nxtbatchrunline
  2870 00002322 8A07                <1> 		mov al, [edi]
  2871 00002324 8806                <1> 		mov [esi], al
  2872 00002326 46                  <1> 		inc esi
  2873 00002327 47                  <1> 		inc edi
  2874 00002328 EBD5                <1> 		jmp batchrunloop2
  2875                              <1> 	nxtbatchrunline:
  2876 0000232A 81C702000000        <1> 		add edi, 2
  2877 00002330 893D[8F230000]      <1> 		mov [batchedi], edi
  2878 00002336 C60600              <1> 		mov byte [esi], 0
  2879 00002339 BE[7A1B0000]        <1> 		mov esi, buftxt
  2880 0000233E 803E00              <1> 		cmp byte [esi], 0
  2881 00002341 0F843C000000        <1> 		je near nobatchfoundrun
  2882 00002347 BB00000000          <1> 		mov ebx, 0
  2883 0000234C 8A1D[00150000]      <1> 		mov bl, [IFON]
  2884 00002352 80FB01              <1> 		cmp bl, 1
  2885 00002355 0F8338000000        <1> 		jae near iftestbatch
  2886                              <1> 	doneiftest:
  2887 0000235B 803D[56240000]00    <1> 		cmp byte [runnextline], 0
  2888 00002362 0F8405000000        <1> 		je near noruniftest
  2889 00002368 E8A2F3FFFF          <1> 		call progtest
  2890                              <1> 	noruniftest:
  2891 0000236D C605[56240000]01    <1> 		mov byte [runnextline], 1
  2892 00002374 8B3D[8F230000]      <1> 		mov edi, [batchedi]
  2893 0000237A 803F00              <1> 		cmp byte [edi], 0
  2894 0000237D 0F8572FFFFFF        <1> 		jne near batchrunloop
  2895                              <1> 	nobatchfoundrun:
  2896 00002383 C605[69150000]00    <1> 		mov byte [BATCHISON], 0
  2897 0000238A E99AF2FFFF          <1> 		jmp nwcmd
  2898                              <1> 	
  2899 0000238F 00000000            <1> batchedi dd 0	
  2900                              <1> 	
  2901                              <1> 	iftestbatch:
  2902 00002393 BE[01150000]        <1> 		mov esi, IFTRUE
  2903 00002398 01DE                <1> 		add esi, ebx
  2904 0000239A 803E00              <1> 		cmp byte [esi], 0
  2905 0000239D 0F85B8FFFFFF        <1> 		jne near doneiftest
  2906 000023A3 881D[57240000]      <1> 		mov [iffalsebuf], bl
  2907 000023A9 803D[6A150000]01    <1> 		cmp byte [LOOPON], 1
  2908 000023B0 750B                <1> 		jne fifindbatch
  2909 000023B2 8B3D[6B150000]      <1> 		mov edi, [LOOPPOS]
  2910 000023B8 E938FFFFFF          <1> 		jmp batchrunloop
  2911                              <1> 	fifindbatch:
  2912 000023BD 66B96966            <1> 		mov cx, "if"
  2913 000023C1 66B86669            <1> 		mov ax, "fi"
  2914 000023C5 663907              <1> 		cmp [edi], ax
  2915 000023C8 0F841A000000        <1> 		je near fifoundbatch
  2916 000023CE 66390F              <1> 		cmp [edi], cx
  2917 000023D1 0F8462000000        <1> 		je near iffoundbatch
  2918 000023D7 803F00              <1> 		cmp byte [edi], 0
  2919 000023DA 0F8408000000        <1> 		je near fifoundbatch
  2920 000023E0 81C702000000        <1> 		add edi, 2
  2921 000023E6 EBD5                <1> 		jmp fifindbatch
  2922                              <1> 	fifoundbatch:
  2923 000023E8 81C702000000        <1> 		add edi, 2
  2924 000023EE B00D                <1> 		mov al, 13
  2925 000023F0 B40A                <1> 		mov ah, 10
  2926 000023F2 663907              <1> 		cmp [edi], ax
  2927 000023F5 7414                <1> 		je goodfibatch
  2928 000023F7 66C1C008            <1> 		rol ax, 8
  2929 000023FB 663907              <1> 		cmp [edi], ax
  2930 000023FE 740B                <1> 		je goodfibatch
  2931 00002400 803F00              <1> 		cmp byte [edi], 0
  2932 00002403 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  2933 00002409 EBB2                <1> 		jmp fifindbatch
  2934                              <1> 	goodfibatch:
  2935 0000240B B001                <1> 		mov al, 1
  2936 0000240D 2805[00150000]      <1> 		sub [IFON], al 
  2937 00002413 A0[00150000]        <1> 		mov al, [IFON]
  2938 00002418 8A1D[57240000]      <1> 		mov bl, [iffalsebuf]
  2939 0000241E 38D8                <1> 		cmp al, bl
  2940 00002420 779B                <1> 		ja fifindbatch
  2941 00002422 BE[7A1B0000]        <1> 		mov esi, buftxt
  2942 00002427 81EF02000000        <1> 		sub edi, 2
  2943 0000242D C605[56240000]00    <1> 		mov byte [runnextline], 0
  2944 00002434 E9BCFEFFFF          <1> 		jmp batchrunloop
  2945                              <1> 	iffoundbatch:
  2946 00002439 B020                <1> 		mov al, ' '
  2947 0000243B 81C702000000        <1> 		add edi, 2
  2948 00002441 3807                <1> 		cmp [edi], al
  2949 00002443 0F8574FFFFFF        <1> 		jne near fifindbatch
  2950 00002449 B001                <1> 		mov al, 1
  2951 0000244B 0005[00150000]      <1> 		add [IFON], al
  2952 00002451 E967FFFFFF          <1> 		jmp fifindbatch
  2953                              <1> 		
  2954                              <1> 		
  2955 00002456 01                  <1> runnextline db 1
  2956 00002457 00                  <1> iffalsebuf db 0
  2957                              <1> 
  2958 00002458 E9CCF1FFFF          <1> notbatch: jmp nwcmd
  2959                              <1> 
  2960 0000245D 05047768696C6500    <1> 	db 5,4,"while",0
  2961 00002465 B000                <1> whilecmd:  mov al, 0
  2962 00002467 3805[69150000]      <1> 	cmp [BATCHISON], al
  2963 0000246D 0F84E5FFFFFF        <1> 	je near notbatch
  2964 00002473 8B35[65150000]      <1> 	MOV esi, [BATCHPOS]
  2965 00002479 4E                  <1> whilefnd: dec esi
  2966 0000247A 8A06                <1> 	mov al, [esi]
  2967 0000247C 3C0A                <1> 	cmp al, 10
  2968 0000247E 0F8412000000        <1> 	je near whilefnd2
  2969 00002484 3C0D                <1> 	cmp al, 13
  2970 00002486 0F840A000000        <1> 	je near whilefnd2
  2971 0000248C 3C00                <1> 	cmp al, 0
  2972 0000248E 0F8402000000        <1> 	je near whilefnd2
  2973 00002494 EBE3                <1> 	jmp whilefnd
  2974                              <1> whilefnd2:
  2975 00002496 8935[6B150000]      <1> 	mov [LOOPPOS], esi
  2976 0000249C C605[6A150000]01    <1> 	mov BYTE [LOOPON], 1
  2977 000024A3 0005[00150000]      <1> 	add [IFON], al
  2978 000024A9 BE[7A1B0000]        <1> 	mov esi, buftxt
  2979 000024AE BB[7A1B0000]        <1> 	mov ebx, buftxt
  2980 000024B3 81C306000000        <1> 	add ebx, 6
  2981 000024B9 E923000000          <1> 	jmp chkeqsn
  2982                              <1> 
  2983                              <1> 
  2984 000024BE 0504696600          <1> 	db 5,4,"if",0
  2985 000024C3 B000                <1> ifcmd:	mov al, 0
  2986 000024C5 3805[69150000]      <1> 	cmp [BATCHISON], al
  2987 000024CB 0F8487FFFFFF        <1> 	je near notbatch
  2988 000024D1 BE[7A1B0000]        <1> 	mov esi, buftxt
  2989 000024D6 BB[7A1B0000]        <1> 	mov ebx, buftxt
  2990 000024DB 81C303000000        <1> 	add ebx, 3
  2991 000024E1 8A06                <1> chkeqsn: mov al, [esi]
  2992 000024E3 3C00                <1> 	cmp al, 0
  2993 000024E5 0F846DFFFFFF        <1> 	je near notbatch
  2994 000024EB 3C3D                <1> 	cmp al, '='
  2995 000024ED 0F8403000000        <1> 	je near chkeqdn
  2996 000024F3 46                  <1> 	inc esi
  2997 000024F4 EBEB                <1> 	jmp chkeqsn
  2998 000024F6 B000                <1> chkeqdn: mov al, 0 
  2999 000024F8 8806                <1> 	mov [esi], al
  3000 000024FA 46                  <1> 	inc esi
  3001 000024FB 8A06                <1> 	mov al, [esi]
  3002 000024FD 3C24                <1> 	cmp al, '$'
  3003 000024FF 0F8462000000        <1> 	je near ifvar1
  3004 00002505 8A03                <1> ifvar2: mov al, [ebx]
  3005 00002507 3C24                <1> 	cmp al, '$'
  3006 00002509 0F847B000000        <1> 	je near ifvar3
  3007 0000250F E874F2FFFF          <1> ifvar4:	call tester
  3008 00002514 3C01                <1> 	cmp al, 1
  3009 00002516 0F8405000000        <1> 	je near trueif
  3010 0000251C E923000000          <1> 	jmp falseif
  3011 00002521 B800000000          <1> trueif:	mov eax, 0
  3012 00002526 A0[00150000]        <1> 	mov al, [IFON]
  3013 0000252B FEC0                <1> 	inc al
  3014 0000252D A2[00150000]        <1> 	mov [IFON], al
  3015 00002532 B400                <1> 	mov ah, 0
  3016 00002534 BE[01150000]        <1> 	mov esi, IFTRUE
  3017 00002539 01C6                <1> 	add esi, eax
  3018 0000253B B401                <1> 	mov ah, 1
  3019 0000253D 8826                <1> 	mov [esi], ah
  3020 0000253F E9E5F0FFFF          <1> 	jmp nwcmd
  3021 00002544 B800000000          <1> falseif: mov eax, 0
  3022 00002549 A0[00150000]        <1> 	mov al, [IFON]
  3023 0000254E FEC0                <1> 	inc al
  3024 00002550 A2[00150000]        <1> 	mov [IFON], al
  3025 00002555 B400                <1> 	mov ah, 0
  3026 00002557 BE[01150000]        <1> 	mov esi, IFTRUE
  3027 0000255C 01C6                <1> 	add esi, eax
  3028 0000255E B400                <1> 	mov ah, 0
  3029 00002560 8826                <1> 	mov [esi], ah
  3030 00002562 E9C2F0FFFF          <1> 	jmp nwcmd
  3031 00002567 89F7                <1> ifvar1: mov edi, esi
  3032 00002569 81EF[7A1B0000]      <1> 	sub edi, buftxt
  3033 0000256F 47                  <1> 	inc edi
  3034 00002570 BB[6F150000]        <1> 	mov ebx, variables
  3035 00002575 E88AF8FFFF          <1> 	call nxtvrech
  3036 0000257A BB[7A1B0000]        <1> 	mov ebx, buftxt
  3037 0000257F 81C303000000        <1> 	add ebx, 3
  3038 00002585 E97BFFFFFF          <1> 	jmp ifvar2
  3039 0000258A 8935[AA250000]      <1> ifvar3: mov [esiif], esi
  3040 00002590 BF04000000          <1> 	mov edi, 4
  3041 00002595 BB[6F150000]        <1> 	mov ebx, variables
  3042 0000259A E865F8FFFF          <1> 	call nxtvrech
  3043 0000259F 8B35[AA250000]      <1> 	mov esi, [esiif]
  3044 000025A5 E965FFFFFF          <1> 	jmp ifvar4
  3045                              <1> 
  3046 000025AA 00000000            <1> esiif dd 0
  3047                              <1> 	
  3048 000025AE 0504656C736500      <1> 	db 5,4,"else",0
  3049 000025B5 B800000000          <1> elsecmd:	mov eax, 0
  3050 000025BA A0[00150000]        <1> 	mov al, [IFON]
  3051 000025BF BE[01150000]        <1> 	mov esi, IFTRUE
  3052 000025C4 01C6                <1> 	add esi, eax
  3053 000025C6 8A06                <1> 	mov al, [esi]
  3054 000025C8 3C00                <1> 	cmp al, 0		
  3055 000025CA 7409                <1> 	je else1
  3056 000025CC 3C01                <1> 	cmp al, 1
  3057 000025CE 740E                <1> 	je else2
  3058 000025D0 E954F0FFFF          <1> 	jmp nwcmd
  3059 000025D5 B001                <1> else1:  mov al, 1
  3060 000025D7 8806                <1> 	mov [esi], al
  3061 000025D9 E94BF0FFFF          <1> 	jmp nwcmd
  3062 000025DE B000                <1> else2:	mov al, 0
  3063 000025E0 8806                <1> 	mov [esi], al
  3064 000025E2 E942F0FFFF          <1> 	jmp nwcmd
  3065                              <1> 
  3066 000025E7 05046C6F6F7000      <1> 	db 5,4,"loop",0
  3067 000025EE 3805[6A150000]      <1> 	cmp [LOOPON], al
  3068 000025F4 0F8405000000        <1> 	je near filoop
  3069 000025FA E92AF0FFFF          <1> 	jmp nwcmd
  3070 000025FF 8B35[6B150000]      <1> filoop: mov esi, [LOOPPOS]
  3071 00002605 8935[65150000]      <1> 	mov [BATCHPOS], esi
  3072 0000260B E919F0FFFF          <1> 	jmp nwcmd
  3073                              <1> 	
  3074                              <1> 
  3075 00002610 0504666900          <1> 	db 5,4,"fi",0
  3076 00002615 B000                <1> 	mov al, 0
  3077 00002617 3805[69150000]      <1> 	cmp [BATCHISON], al
  3078 0000261D 0F8435FEFFFF        <1> 	je near notbatch
  3079 00002623 B001                <1> fi:	mov al, 1
  3080 00002625 2805[00150000]      <1> 	sub [IFON],al
  3081 0000262B E9F9EFFFFF          <1> 	jmp nwcmd
  3082                              <1> 
  3083 00002630 050473746F7000      <1> 	db 5,4,"stop",0
  3084 00002637 B000                <1> stop:	mov al, 0
  3085 00002639 A2[69150000]        <1> 	mov [BATCHISON], al
  3086 0000263E A2[00150000]        <1> 	mov [IFON], al
  3087 00002643 A2[01150000]        <1> 	mov [IFTRUE], al
  3088 00002648 A2[6A150000]        <1> 	mov [LOOPON], al
  3089 0000264D E9D7EFFFFF          <1> 	jmp nwcmd
  3090                                      %include 'source/programs.asm'
  3091                              <1> ;db 5,4,"internet",0
  3092                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  3093                              <1> 							;;^^used to^^, now tests int 30h functions		
  3094 00002652 B403                <1> 		mov ah, 3
  3095 00002654 CD30                <1> 		int 30h
  3096 00002656 B401                <1> 		mov ah, 1
  3097                              <1> 		;mov esi, datmsg
  3098 00002658 66BB0700            <1> 		mov bx, 7
  3099 0000265C B000                <1> 		mov al, 0
  3100 0000265E CD30                <1> 		int 30h
  3101                              <1> 	    ;jmp packettest
  3102 00002660 E9C4EFFFFF          <1> 		jmp nwcmd
  3103                              <1> ;datmsg: db "Internet has not been implemented yet.",10,13,0
  3104                              <1> 	
  3105 00002665 050474687265616473- <1> db 5,4,"threads",0
  3106 0000266E 00                  <1>
  3107 0000266F 90                  <1> 	nop
  3108 00002670 90                  <1> 	nop
  3109 00002671 E9762A0000          <1> 	jmp threadstarttest
  3110 00002676 E9AEEFFFFF          <1> 	jmp nwcmd
  3111                              <1> 	
  3112 0000267B 050472656700        <1> db 5,4,"reg",0
  3113 00002681 CD03                <1> 	int 3
  3114 00002683 E9A1EFFFFF          <1> 	jmp nwcmd
  3115                              <1> 	
  3116 00002688 0504636861726D6170- <1> db 5,4,"charmap",0
  3117 00002691 00                  <1>
  3118 00002692 B000                <1> 	mov al, 0
  3119 00002694 66BB0700            <1> 	mov bx, 7
  3120                              <1> charmapcopy:
  3121 00002698 FEC0                <1> 	inc al
  3122 0000269A 3C08                <1> 	cmp al, 8
  3123 0000269C 7426                <1> 	je charmapnocopy
  3124 0000269E 3C09                <1> 	cmp al, 9
  3125 000026A0 7422                <1> 	je charmapnocopy
  3126 000026A2 3C0A                <1> 	cmp al, 10
  3127 000026A4 741E                <1> 	je charmapnocopy
  3128 000026A6 3C0D                <1> 	cmp al, 13
  3129 000026A8 741A                <1> 	je charmapnocopy
  3130 000026AA 3C00                <1> 	cmp al, 0
  3131 000026AC 7407                <1> 	je nomorecharmap
  3132 000026AE E80BE8FFFF          <1> 	call int301prnt
  3133 000026B3 EBE3                <1> 	jmp charmapcopy
  3134                              <1> nomorecharmap:
  3135 000026B5 BE[13580000]        <1> 	mov esi, line
  3136 000026BA E809EAFFFF          <1> 	call print
  3137 000026BF E965EFFFFF          <1> 	jmp nwcmd
  3138                              <1> charmapnocopy:
  3139 000026C4 6650                <1> 	push ax
  3140 000026C6 B020                <1> 	mov al, " "
  3141 000026C8 E8F1E7FFFF          <1> 	call int301prnt
  3142 000026CD 6658                <1> 	pop ax
  3143 000026CF EBC7                <1> 	jmp charmapcopy
  3144                              <1> 	
  3145 000026D1 05046B6579636F6465- <1> db 5,4,"keycode",0
  3146 000026DA 00                  <1>
  3147                              <1> keycode:
  3148 000026DB E8BD060000          <1> 	call guistartin
  3149 000026E0 B800000000          <1> 	mov eax, 0
  3150 000026E5 B900000000          <1> 	mov ecx, 0
  3151 000026EA 8A0D[742D0000]      <1> 	mov cl, [specialkey]
  3152 000026F0 80F900              <1> 	cmp cl, 0
  3153 000026F3 0F8405000000        <1> 	je near nospecialkeycode
  3154 000026F9 E884F3FFFF          <1> 	call showhexsmall
  3155                              <1> nospecialkeycode:
  3156 000026FE 66A1[7F100000]      <1> 	mov ax, [lastkey]
  3157 00002704 80FC01              <1> 	cmp ah, 1
  3158 00002707 0F8409000000        <1> 	je near killkeycode
  3159 0000270D 88E1                <1> 	mov cl, ah
  3160 0000270F E86EF3FFFF          <1> 	call showhexsmall
  3161 00002714 EBC5                <1> 	jmp keycode
  3162                              <1> killkeycode:
  3163 00002716 BE[13580000]        <1> 	mov esi, line
  3164 0000271B E8A8E9FFFF          <1> 	call print
  3165 00002720 E904EFFFFF          <1> 	jmp nwcmd
  3166                              <1> 
  3167 00002725 050470636900        <1> db 5,4,"pci",0
  3168                              <1> 	pcishow:
  3169 0000272B E811260000          <1> 	call pcidump
  3170 00002730 E9F4EEFFFF          <1> 	jmp nwcmd
  3171                              <1> 	
  3172 00002735 050461727000        <1> db 5,4,"arp",0
  3173 0000273B E8FC240000          <1> 	call arptest
  3174 00002740 E9E4EEFFFF          <1> 	jmp nwcmd
  3175                              <1> 
  3176 00002745 0504626174636800    <1> db 5,4,"batch",0
  3177                              <1> 	batchst: 
  3178 0000274D BF[7A1B0000]        <1> 		mov edi, buftxt
  3179 00002752 81C706000000        <1> 		add edi, 6
  3180 00002758 803F00              <1> 		cmp byte [edi], 0
  3181 0000275B 0F8473000000        <1> 		je near nonamefound
  3182 00002761 BE00004000          <1> 		mov esi, 0x400000
  3183 00002766 E890270000          <1> 		call loadfile
  3184 0000276B 89D0                <1> 		mov eax, edx
  3185 0000276D 3D94010000          <1> 		cmp eax, 404
  3186 00002772 746F                <1> 		je goodbatchname
  3187 00002774 BE[83270000]        <1> 		mov esi, badbatchname
  3188 00002779 E84AE9FFFF          <1> 		call print
  3189 0000277E E9A6EEFFFF          <1> 		jmp nwcmd
  3190 00002783 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  3191 0000278C 20616C726561647920- <1>
  3192 00002795 657869737473210A0D- <1>
  3193 0000279E 00                  <1>
  3194 0000279F 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  3195 000027A8 746F20747970652061- <1>
  3196 000027B1 206E616D6520616674- <1>
  3197 000027BA 65722074686520636F- <1>
  3198 000027C3 6D6D616E642E0A0D00  <1>
  3199 000027CC 00000000            <1> 		esicache3 dd 0
  3200 000027D0 00000000            <1> 		esicache2 dd 0
  3201                              <1> 	nonamefound:
  3202 000027D4 BE[9F270000]        <1> 		mov esi, namenotfoundbatch
  3203 000027D9 E8EAE8FFFF          <1> 		call print
  3204 000027DE E946EEFFFF          <1> 		jmp nwcmd
  3205                              <1> 	goodbatchname:
  3206 000027E3 BE00004000          <1> 		mov esi, 0x400000
  3207                              <1> 	batchcreate:
  3208 000027E8 8935[CC270000]      <1> 		mov [esicache3], esi
  3209 000027EE B00D                <1> 		mov al, 13
  3210 000027F0 B307                <1> 		mov bl, 7
  3211 000027F2 B404                <1> 		mov ah, 4
  3212 000027F4 CD30                <1> 		int 30h
  3213 000027F6 8935[D0270000]      <1> 		mov [esicache2], esi
  3214 000027FC 8A0E                <1> 		mov cl, [esi]
  3215 000027FE 8B35[CC270000]      <1> 		mov esi, [esicache3]
  3216 00002804 BB[5B280000]        <1> 		mov ebx, exitword
  3217 00002809 E8B4EFFFFF          <1> 		call cndtest
  3218 0000280E 3C01                <1> 		cmp al, 1
  3219 00002810 7423                <1> 		je endbatchcreate
  3220 00002812 3C02                <1> 		cmp al, 2
  3221 00002814 741F                <1> 		je endbatchcreate
  3222 00002816 BE[13580000]        <1> 		mov esi, line
  3223 0000281B E8A8E8FFFF          <1> 		call print
  3224 00002820 8B35[D0270000]      <1> 		mov esi, [esicache2]
  3225 00002826 B00D                <1> 		mov al, 13
  3226 00002828 B40A                <1> 		mov ah, 10
  3227 0000282A 668906              <1> 		mov [esi], ax
  3228 0000282D 81C602000000        <1> 		add esi, 2
  3229 00002833 EBB3                <1> 		jmp batchcreate
  3230                              <1> 	endbatchcreate:
  3231 00002835 8B35[CC270000]      <1> 		mov esi, [esicache3]
  3232 0000283B B800000000          <1> 		mov eax, 0
  3233 00002840 8806                <1> 		mov [esi], al
  3234 00002842 BE[13580000]        <1> 		mov esi, line
  3235 00002847 E87CE8FFFF          <1> 		call print
  3236 0000284C BE00004000          <1> 		mov esi, 0x400000
  3237 00002851 E872E8FFFF          <1> 		call print
  3238 00002856 E9CEEDFFFF          <1> 		jmp nwcmd
  3239                              <1> 	
  3240 0000285B 5C7800              <1> 	exitword db "\x",0
  3241 0000285E 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  3242 00002867 6F20657869742E0A0D- <1>
  3243 00002870 00                  <1>
  3244                              <1> 		
  3245 00002871 050473686F7700      <1> db 5,4,"show",0
  3246 00002878 BF[7A1B0000]        <1> 		mov edi, buftxt
  3247 0000287D 81C705000000        <1> 		add edi, 5
  3248 00002883 BE00004000          <1> 		mov esi, 0x400000
  3249 00002888 E86E260000          <1> 		call loadfile
  3250 0000288D BE00004000          <1> 		mov esi, 0x400000
  3251 00002892 66813E424D          <1> 		cmp word [esi], "BM"
  3252 00002897 7414                <1> 		je bmpfound
  3253 00002899 E82AE8FFFF          <1> 		call print
  3254 0000289E BE[13580000]        <1> 		mov esi, line
  3255 000028A3 E820E8FFFF          <1> 		call print
  3256 000028A8 E97CEDFFFF          <1> 		jmp nwcmd
  3257                              <1> bmpfound:
  3258 000028AD 803D[E2340000]00    <1> 		cmp byte [guion], 0
  3259 000028B4 0F8452000000        <1> 		je near noguibmp
  3260 000028BA BE00004000          <1> 		mov esi, 0x400000
  3261 000028BF B900000000          <1> 		mov ecx, 0
  3262 000028C4 BA00000000          <1> 		mov edx, 0
  3263 000028C9 B800000000          <1> 		mov eax, 0
  3264 000028CE BB00000000          <1> 		mov ebx, 0
  3265 000028D3 E8C21C0000          <1> 		call showbmp
  3266 000028D8 B000                <1> 		mov al, 0
  3267 000028DA B405                <1> 		mov ah, 5
  3268 000028DC CD30                <1> 		int 30h
  3269 000028DE E8660A0000          <1> 		call guiclear
  3270 000028E3 E8FB0B0000          <1> 		call clearmousecursor
  3271 000028E8 E88D120000          <1> 		call reloadallgraphics
  3272 000028ED BE[7A1B0000]        <1> 		mov esi, buftxt
  3273 000028F2 81C605000000        <1> 		add esi, 5
  3274 000028F8 E8CBE7FFFF          <1> 		call print
  3275 000028FD BE[8F290000]        <1> 		mov esi, loadedbmpmsg
  3276 00002902 E8C1E7FFFF          <1> 		call print
  3277 00002907 E91DEDFFFF          <1> 		jmp nwcmd
  3278                              <1> noguibmp:
  3279 0000290C BE[1B290000]        <1> 		mov esi, warnguibmp
  3280 00002911 E8B2E7FFFF          <1> 		call print
  3281 00002916 E90EEDFFFF          <1> 		jmp nwcmd
  3282 0000291B 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  3283 00002924 6E6F7420626520646F- <1>
  3284 0000292D 6E6520776974686F75- <1>
  3285 00002936 742074686520677569- <1>
  3286 0000293F 2E0A0D00            <1>
  3287                              <1> 
  3288                              <1> 		
  3289                              <1> filenotfound:
  3290 00002943 BE[6C290000]        <1> 		mov esi, filenf
  3291 00002948 E87BE7FFFF          <1> 		call print
  3292 0000294D BE[7A1B0000]        <1> 		mov esi, buftxt
  3293 00002952 81C608000000        <1> 		add esi, 8
  3294 00002958 E86BE7FFFF          <1> 		call print
  3295 0000295D BE[77290000]        <1> 		mov esi, filenf2
  3296 00002962 E861E7FFFF          <1> 		call print
  3297 00002967 E9BDECFFFF          <1> 		jmp nwcmd
  3298 0000296C 5468652066696C6520- <1> filenf db "The file ",34,0
  3299 00002975 2200                <1>
  3300 00002977 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  3301 00002980 6F7420626520666F75- <1>
  3302 00002989 6E642E0D0A00        <1>
  3303                              <1> 		
  3304 0000298F 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  3305 00002998 0A00                <1>
  3306                              <1> 
  3307 0000299A 050464756D7000      <1> 	db 5,4,"dump",0
  3308 000029A1 BE[7A1B0000]        <1> 	mov esi, buftxt
  3309 000029A6 81C605000000        <1> 	add esi, 5
  3310 000029AC B900000000          <1> 	mov ecx, 0
  3311 000029B1 E81FF2FFFF          <1> 	call cnvrttxt
  3312 000029B6 89CF                <1> 	mov edi, ecx
  3313 000029B8 89FE                <1> 	mov esi, edi
  3314 000029BA 81C680030000        <1> 	add esi, 896
  3315 000029C0 C605[811A0000]00    <1> 	mov byte [firsthexshown],0
  3316                              <1> dumphexloop:
  3317 000029C7 8B0F                <1> 	mov ecx, [edi]
  3318 000029C9 E8C8F0FFFF          <1> 	call showhex
  3319 000029CE 81C704000000        <1> 	add edi, 4
  3320 000029D4 39F7                <1> 	cmp edi, esi
  3321 000029D6 72EF                <1> 	jb dumphexloop
  3322 000029D8 E94CECFFFF          <1> 	jmp nwcmd
  3323                              <1> 
  3324 000029DD 050474696D6500      <1> db 5,4,"time",0
  3325 000029E4 E823000000          <1> 	call time
  3326 000029E9 BE[F62B0000]        <1> 	mov esi, timeshow
  3327 000029EE E8D5E6FFFF          <1> 	call print
  3328 000029F3 BE[13580000]        <1> 	mov esi, line
  3329 000029F8 E8CBE6FFFF          <1> 	call print
  3330 000029FD BE[002C0000]        <1> 	mov esi, dateshow
  3331 00002A02 E8C1E6FFFF          <1> 	call print
  3332 00002A07 E91DECFFFF          <1> 	jmp nwcmd
  3333                              <1> 	time:
  3334 00002A0C E86D010000          <1> 	call tstackput1
  3335 00002A11 B00A                <1> 	mov al,10			;Get RTC register A
  3336 00002A13 E897010000          <1> 	call tget1
  3337 00002A18 A880                <1> 	test al,0x80			;Is update in progress?
  3338 00002A1A 75F0                <1> 	jne time				; yes, wait
  3339                              <1> 
  3340 00002A1C B000                <1> 	mov al,0			;Get seconds (00 to 59)
  3341 00002A1E E88C010000          <1> 	call tget1
  3342 00002A23 A2[ED2B0000]        <1> 	mov [RTCtimeSecond],al
  3343                              <1> 
  3344 00002A28 B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  3345 00002A2A E880010000          <1> 	call tget1
  3346 00002A2F A2[EE2B0000]        <1> 	mov [RTCtimeMinute],al
  3347                              <1> 
  3348 00002A34 B004                <1> 	mov al,0x04			;Get hours (see notes)
  3349 00002A36 E874010000          <1> 	call tget1
  3350 00002A3B A2[EF2B0000]        <1> 	mov [RTCtimeHour],al
  3351                              <1> 
  3352 00002A40 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  3353 00002A42 E868010000          <1> 	call tget1
  3354                              <1> ;	mov ah, 0			;;fix day
  3355                              <1> ;	mov ah, al
  3356                              <1> ;	shr ah, 4
  3357                              <1> ;	shl al, 4
  3358                              <1> ;	shr al, 4
  3359                              <1> ;	cmp al, 0
  3360                              <1> ;	jne nodecahday
  3361                              <1> ;	mov al, 10
  3362                              <1> ;	dec ah
  3363                              <1> ;nodecahday:
  3364                              <1> ;	dec al
  3365                              <1> ;	shl ah, 4
  3366                              <1> ;	or al, ah
  3367 00002A47 A2[F02B0000]        <1> 	mov [RTCtimeDay],al
  3368                              <1> 
  3369 00002A4C B008                <1> 	mov al,0x08			;Get month (01 to 12)
  3370 00002A4E E85C010000          <1> 	call tget1
  3371 00002A53 A2[F12B0000]        <1> 	mov [RTCtimeMonth],al
  3372                              <1> 
  3373 00002A58 B009                <1> 	mov al,0x09			;Get year (00 to 99)
  3374 00002A5A E850010000          <1> 	call tget1
  3375 00002A5F A2[F22B0000]        <1> 	mov [RTCtimeYear],al
  3376                              <1> 	
  3377 00002A64 BE[F62B0000]        <1> 	mov esi, timeshow
  3378 00002A69 8A2D[EF2B0000]      <1> 	mov ch, [RTCtimeHour]
  3379 00002A6F E846010000          <1> 	call tput1
  3380 00002A74 8A2D[EE2B0000]      <1> 	mov ch, [RTCtimeMinute]
  3381 00002A7A E83B010000          <1> 	call tput1
  3382 00002A7F 8A2D[ED2B0000]      <1> 	mov ch, [RTCtimeSecond]
  3383 00002A85 E830010000          <1> 	call tput1
  3384 00002A8A BE[002C0000]        <1> 	mov esi, dateshow
  3385 00002A8F 8A2D[F12B0000]      <1> 	mov ch, [RTCtimeMonth]
  3386 00002A95 E820010000          <1> 	call tput1
  3387 00002A9A 8A2D[F02B0000]      <1> 	mov ch, [RTCtimeDay]
  3388 00002AA0 E815010000          <1> 	call tput1
  3389 00002AA5 B520                <1> 	mov ch, 0x20
  3390 00002AA7 E80E010000          <1> 	call tput1
  3391 00002AAC 4E                  <1> 	dec esi
  3392 00002AAD 8A2D[F22B0000]      <1> 	mov ch, [RTCtimeYear]
  3393 00002AB3 E802010000          <1> 	call tput1
  3394 00002AB8 E8DB000000          <1> 	call tstackget1
  3395 00002ABD BE[F62B0000]        <1> 	mov esi, timeshow
  3396 00002AC2 66BB0700            <1> 	mov bx, 7
  3397 00002AC6 B401                <1> 	mov ah, 1
  3398 00002AC8 B000                <1> 	mov al, 0
  3399 00002ACA CD30                <1> 	int 30h
  3400                              <1> ;;get day of week
  3401                              <1> ;;add these:
  3402                              <1> ;;century value
  3403                              <1> ;;last 2 digits of year
  3404                              <1> ;;last 2 digits of year right shifted twice
  3405                              <1> ;;month table value
  3406                              <1> ;;day of the month
  3407                              <1> ;;divide these by 7
  3408                              <1> ;;the remainder is the day
  3409 00002ACC B800000000          <1> 	mov eax, 0
  3410                              <1> ;;first convert the values from BCD to hex
  3411 00002AD1 A0[F02B0000]        <1> 	mov al, [RTCtimeDay]
  3412 00002AD6 E88A000000          <1> 	call converttohex
  3413 00002ADB 8825[F32B0000]      <1> 	mov [dayhex], ah
  3414 00002AE1 A0[F12B0000]        <1> 	mov al, [RTCtimeMonth]
  3415 00002AE6 E87A000000          <1> 	call converttohex
  3416 00002AEB 8825[F42B0000]      <1> 	mov [monthhex], ah
  3417 00002AF1 A0[F22B0000]        <1> 	mov al, [RTCtimeYear]
  3418 00002AF6 E86A000000          <1> 	call converttohex
  3419 00002AFB 8825[F52B0000]      <1> 	mov [yearhex], ah
  3420 00002B01 B800000000          <1> 	mov eax, 0
  3421 00002B06 A0[F52B0000]        <1> 	mov al, [yearhex]
  3422 00002B0B C0E802              <1> 	shr al, 2
  3423 00002B0E 0205[F52B0000]      <1> 	add al, [yearhex]
  3424 00002B14 0506000000          <1> 	add eax, 6
  3425 00002B19 BB00000000          <1> 	mov ebx, 0
  3426 00002B1E 8A1D[F42B0000]      <1> 	mov bl, [monthhex]
  3427 00002B24 FECB                <1> 	dec bl
  3428 00002B26 81C3[162C0000]      <1> 	add ebx, month
  3429 00002B2C B900000000          <1> 	mov ecx, 0
  3430 00002B31 8A0B                <1> 	mov cl, [ebx]
  3431 00002B33 01C8                <1> 	add eax, ecx
  3432 00002B35 8A0D[F32B0000]      <1> 	mov cl, [dayhex]
  3433 00002B3B 01C8                <1> 	add eax, ecx
  3434 00002B3D 66BB0700            <1> 	mov bx, 7
  3435 00002B41 BA00000000          <1> 	mov edx, 0
  3436 00002B46 66F7F3              <1> 	div bx
  3437 00002B49 C1E202              <1> 	shl edx, 2
  3438 00002B4C 81C2[222C0000]      <1> 	add edx, day
  3439 00002B52 8B32                <1> 	mov esi, [edx]
  3440 00002B54 66BB0700            <1> 	mov bx, 7
  3441 00002B58 B401                <1> 	mov ah, 1
  3442 00002B5A B000                <1> 	mov al, 0
  3443 00002B5C CD30                <1> 	int 30h
  3444 00002B5E 66B80000            <1> 	mov ax, 0
  3445 00002B62 CD30                <1> 	int 30h
  3446 00002B64 F4                  <1> 	hlt
  3447                              <1> 	
  3448                              <1> converttohex:
  3449 00002B65 88C4                <1> 	mov ah, al
  3450 00002B67 C0E804              <1> 	shr al, 4
  3451 00002B6A C0E404              <1> 	shl ah, 4
  3452 00002B6D C0EC04              <1> 	shr ah, 4
  3453 00002B70 3C00                <1> 	cmp al, 0
  3454 00002B72 7409                <1> 	je noconverttohex
  3455                              <1> converttohexlp:
  3456 00002B74 80C40A              <1> 	add ah, 10
  3457 00002B77 FEC8                <1> 	dec al
  3458 00002B79 3C00                <1> 	cmp al, 0
  3459 00002B7B 75F7                <1> 	jne converttohexlp
  3460                              <1> noconverttohex:
  3461 00002B7D C3                  <1> 	ret
  3462                              <1> 	
  3463                              <1> tstackput1:
  3464 00002B7E 8935[E92B0000]      <1> 	mov [tstack + 20], esi
  3465 00002B84 BE[D52B0000]        <1> 	mov esi, tstack
  3466 00002B89 8906                <1> 	mov [esi], eax
  3467 00002B8B 895E04              <1> 	mov [esi + 4], ebx
  3468 00002B8E 894E08              <1> 	mov [esi + 8], ecx
  3469 00002B91 89560C              <1> 	mov [esi + 12], edx
  3470 00002B94 897E10              <1> 	mov [esi + 16], edi
  3471 00002B97 C3                  <1> 	ret
  3472                              <1> 	
  3473                              <1> tstackget1:
  3474 00002B98 BE[D52B0000]        <1> 	mov esi, tstack
  3475 00002B9D 8B06                <1> 	mov eax, [esi]
  3476 00002B9F 8B5E04              <1> 	mov ebx, [esi + 4]
  3477 00002BA2 8B4E08              <1> 	mov ecx, [esi + 8]
  3478 00002BA5 8B560C              <1> 	mov edx, [esi + 12]
  3479 00002BA8 8B7E10              <1> 	mov edi, [esi + 16]
  3480 00002BAB 8B7614              <1> 	mov esi, [esi + 20]
  3481 00002BAE C3                  <1> 	ret
  3482                              <1> 	
  3483                              <1> tget1:
  3484 00002BAF 66BA7000            <1> 	mov dx, 0x70
  3485 00002BB3 EE                  <1> 	out dx, al
  3486 00002BB4 6642                <1> 	inc dx
  3487 00002BB6 EC                  <1> 	in al, dx
  3488 00002BB7 664A                <1> 	dec dx
  3489 00002BB9 C3                  <1> 	ret
  3490                              <1> 	
  3491                              <1> tput1:
  3492 00002BBA 66C1E904            <1> 	shr cx, 4
  3493 00002BBE B030                <1> 	mov al, 48
  3494 00002BC0 00E8                <1> 	add al, ch
  3495 00002BC2 8806                <1> 	mov [esi], al
  3496 00002BC4 46                  <1> 	inc esi
  3497 00002BC5 B030                <1> 	mov al, 48
  3498 00002BC7 C0E904              <1> 	shr cl, 4
  3499 00002BCA 00C8                <1> 	add al, cl
  3500 00002BCC 8806                <1> 	mov [esi], al
  3501 00002BCE 81C602000000        <1> 	add esi, 2
  3502 00002BD4 C3                  <1> 	ret
  3503                              <1> 		
  3504 00002BD5 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  3505 00002BDE 000000000000000000- <1>
  3506 00002BE7 000000000000        <1>
  3507 00002BED 00                  <1> 	RTCtimeSecond db 0
  3508 00002BEE 00                  <1> 	RTCtimeMinute db 0
  3509 00002BEF 00                  <1> 	RTCtimeHour db 0
  3510 00002BF0 00                  <1> 	RTCtimeDay db 0
  3511 00002BF1 00                  <1> 	RTCtimeMonth db 0
  3512 00002BF2 00                  <1> 	RTCtimeYear db 0
  3513 00002BF3 00                  <1> 	dayhex db 0
  3514 00002BF4 00                  <1> 	monthhex db 0
  3515 00002BF5 00                  <1> 	yearhex db 0
  3516 00002BF6 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  3517 00002BFF 0A                  <1>
  3518 00002C00 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  3519 00002C09 300D0A00            <1>
  3520                              <1> 	oldcentury:	;;from 1700 to 1900
  3521 00002C0D 040200              <1> 	db 4,2,0
  3522                              <1> 	century:	;;from 2000 to 2500
  3523 00002C10 060402000604        <1> 	db 6,4,2,0,6,4
  3524                              <1> 	month:
  3525 00002C16 000303060104060205- <1> 	db 0,3,3,6,1,4,6,2,5,0,3,5
  3526 00002C1F 000305              <1>
  3527                              <1> 	day:
  3528 00002C22 [3E2C0000]          <1> 	dd sunday
  3529 00002C26 [472C0000]          <1> 	dd monday
  3530 00002C2A [502C0000]          <1> 	dd tuesday
  3531 00002C2E [5A2C0000]          <1> 	dd wednesday
  3532 00002C32 [662C0000]          <1> 	dd thursday
  3533 00002C36 [712C0000]          <1> 	dd friday
  3534 00002C3A [7A2C0000]          <1> 	dd saturday
  3535                              <1> sunday:
  3536 00002C3E 53756E6461790D0A00  <1> 	db "Sunday",13,10,0
  3537                              <1> monday:
  3538 00002C47 4D6F6E6461790D0A00  <1> 	db "Monday",13,10,0
  3539                              <1> tuesday:
  3540 00002C50 547565736461790D0A- <1> 	db "Tuesday",13,10,0
  3541 00002C59 00                  <1>
  3542                              <1> wednesday:
  3543 00002C5A 5765646E6573646179- <1> 	db "Wednesday",13,10,0
  3544 00002C63 0D0A00              <1>
  3545                              <1> thursday:
  3546 00002C66 54687572736461790D- <1> 	db "Thursday",13,10,0
  3547 00002C6F 0A00                <1>
  3548                              <1> friday:
  3549 00002C71 4672696461790D0A00  <1> 	db "Friday",13,10,0
  3550                              <1> saturday:
  3551 00002C7A 53617475726461790D- <1> 	db "Saturday",13,10,0
  3552 00002C83 0A00                <1>
  3553                              <1> 
  3554 00002C85 0504637075696400    <1> db 5,4,"cpuid",0
  3555 00002C8D B800000000          <1> 	mov eax, 0
  3556 00002C92 0FA2                <1> 	cpuid
  3557 00002C94 891D[E92C0000]      <1> 	mov [cpuidbuf], ebx
  3558 00002C9A 8915[ED2C0000]      <1> 	mov [cpuidbuf + 4], edx
  3559 00002CA0 890D[F12C0000]      <1> 	mov [cpuidbuf + 8], ecx
  3560 00002CA6 BE[E92C0000]        <1> 	mov esi, cpuidbuf
  3561 00002CAB E818E4FFFF          <1> 	call print
  3562 00002CB0 BE[13580000]        <1> 	mov esi, line
  3563 00002CB5 E80EE4FFFF          <1> 	call print
  3564 00002CBA B801000000          <1> 	mov eax, 1
  3565 00002CBF 0FA2                <1> 	cpuid
  3566 00002CC1 89C1                <1> 	mov ecx, eax
  3567 00002CC3 C605[811A0000]02    <1> 	mov byte [firsthexshown], 2
  3568 00002CCA E8C7EDFFFF          <1> 	call showhex
  3569 00002CCF B808000080          <1> 	mov eax, 0x80000008
  3570 00002CD4 0FA2                <1> 	cpuid
  3571 00002CD6 89C1                <1> 	mov ecx, eax
  3572 00002CD8 C605[811A0000]02    <1> 	mov byte [firsthexshown], 2
  3573 00002CDF E8B2EDFFFF          <1> 	call showhex
  3574 00002CE4 E940E9FFFF          <1> 	jmp nwcmd
  3575                              <1> 	
  3576 00002CE9 00<rept>            <1> cpuidbuf times 13 db 0
  3577                              <1> cpuidvendorend:
  3578                              <1> progend:		;programs end here	
  3579                              <1> batchprogend:
  3580                                      %include 'source/input.asm'
  3581                              <1> PS2SET:
  3582 00002CF6 B0A8                <1>   mov  al, 0xa8		; enable mouse port
  3583 00002CF8 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3584 00002CFA E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  3585 00002CFF C3                  <1> ret
  3586                              <1> 
  3587                              <1> CHKPRT:
  3588 00002D00 66B96400            <1>   mov  cx, 100
  3589                              <1>  .again:
  3590 00002D04 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3591 00002D06 A802                <1>   test al, 2		; Check if input buffer is empty
  3592 00002D08 7402                <1>   je .go
  3593 00002D0A E2F8                <1>   loop .again
  3594                              <1>  .go:
  3595 00002D0C C3                  <1> ret
  3596                              <1> 
  3597                              <1> WMOUS:
  3598 00002D0D B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  3599 00002D0F E664                <1>   out  0x64, al		; write to keyboardcontroller
  3600 00002D11 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3601 00002D16 C3                  <1> ret
  3602                              <1> 
  3603                              <1> MBUFFUL:
  3604 00002D17 66B96400            <1>   mov cx, 100
  3605                              <1>  .mn:
  3606 00002D1B E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3607 00002D1D A820                <1>   test al, 0x20		; check if mouse output buffer is full
  3608 00002D1F 7402                <1>   jz  .mnn
  3609 00002D21 E2F8                <1>   loop .mn
  3610                              <1>  .mnn:
  3611 00002D23 C3                  <1> ret
  3612                              <1> 
  3613                              <1> 
  3614                              <1> ACTMOUS:
  3615 00002D24 E8E4FFFFFF          <1>   call WMOUS
  3616 00002D29 B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  3617 00002D2B E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  3618 00002D2D E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3619 00002D32 E801000000          <1>   call CHKMOUS		; check if a byte is available
  3620 00002D37 C3                  <1> ret
  3621                              <1> 
  3622                              <1> CHKMOUS:
  3623 00002D38 B300                <1>   mov  bl, 0
  3624 00002D3A 66B96400            <1>   mov cx, 100
  3625                              <1>  .vrd:
  3626 00002D3E E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3627 00002D40 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  3628 00002D42 7504                <1>   jnz .yy
  3629 00002D44 E2F8                <1>   loop .vrd
  3630 00002D46 B301                <1>   mov  bl, 1
  3631                              <1>  .yy:
  3632 00002D48 C3                  <1> ret
  3633                              <1> 
  3634                              <1> GETB:
  3635                              <1>  .cagain:
  3636 00002D49 E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  3637 00002D4E 08DB                <1>   or bl, bl
  3638 00002D50 75F7                <1>   jnz .cagain
  3639 00002D52 B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  3640 00002D54 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3641 00002D56 E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3642 00002D5B 6631C0              <1>   xor  ax, ax
  3643 00002D5E E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3644 00002D60 88C2                <1>   mov  dl, al
  3645 00002D62 B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  3646 00002D64 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3647 00002D66 E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3648 00002D6B 88D0                <1>   mov  al, dl
  3649 00002D6D C3                  <1> ret
  3650                              <1> 
  3651 00002D6E 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  3652 00002D6F 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  3653 00002D70 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  3654 00002D71 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  3655 00002D72 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  3656 00002D73 00                  <1> mousedisabled db 0
  3657 00002D74 00                  <1> specialkey db 0
  3658                              <1> guistartin2:		;;this is basically the idle process
  3659                              <1> 					;;this halts the cpu for a small amount of time and then sees if there was a keypress
  3660                              <1> 					;;this lets the cpu stay at close to 0% instead of 100%
  3661 00002D75 66B80020            <1> 	mov ax, 0x2000	;;this is the divider for the PIT
  3662 00002D79 E640                <1> 	out 0x40, al
  3663 00002D7B 66C1C008            <1> 	rol ax, 8
  3664 00002D7F E640                <1> 	out 0x40, al
  3665 00002D81 B0FE                <1> 	mov al, 0xFE
  3666 00002D83 E621                <1> 	out 0x21, al
  3667 00002D85 B020                <1> 	mov al, 0x20
  3668 00002D87 E620                <1> 	out 0x20, al
  3669 00002D89 A0[3C510000]        <1> 	mov al, [threadson]
  3670 00002D8E C605[3C510000]00    <1> 	mov byte [threadson], 0
  3671 00002D95 FB                  <1> 	sti
  3672 00002D96 F4                  <1> 	hlt
  3673 00002D97 A2[3C510000]        <1> 	mov [threadson], al
  3674 00002D9C FA                  <1> 	cli
  3675                              <1> guistartin:
  3676 00002D9D B800000000          <1> 		mov eax, 0
  3677 00002DA2 A2[742D0000]        <1> 		mov [specialkey], al
  3678 00002DA7 66A3[7F100000]      <1> 		mov [lastkey], ax
  3679 00002DAD E464                <1> 		in al, 64h ; Status
  3680 00002DAF A820                <1> 		test al, 20h ; PS2-Mouse?
  3681 00002DB1 0F85EA010000        <1> 		jnz near maincall2
  3682 00002DB7 A801                <1> 		test al, 1 
  3683 00002DB9 74BA                <1> 		jz guistartin2 ; if output buffer full or no keypress, jump to idle process (only works when it is jz guistartin2, use jz guistartin to disable)
  3684                              <1> 	guigetkey:
  3685 00002DBB E460                <1> 		in al, 60h
  3686 00002DBD 88C4                <1> 		mov ah, al
  3687 00002DBF B000                <1> 		mov al, 0
  3688 00002DC1 8825[80100000]      <1> 		mov [lastkey + 1], ah
  3689 00002DC7 88E0                <1> 		mov al, ah
  3690 00002DC9 BF[ED310000]        <1> 		mov edi, scancode
  3691                              <1> 	guisearchscan: 
  3692 00002DCE 3C3A                <1> 		cmp al, 3Ah
  3693 00002DD0 731A                <1> 		jae guiscanother
  3694 00002DD2 B400                <1> 		mov ah, 0
  3695 00002DD4 C0E002              <1> 		shl al, 2
  3696 00002DD7 01C7                <1> 		add edi, eax
  3697 00002DD9 D0E8                <1> 		shr al, 1
  3698 00002DDB 01C7                <1> 		add edi, eax
  3699 00002DDD D0E8                <1> 		shr al, 1
  3700 00002DDF 8A27                <1> 		mov ah, [edi]
  3701 00002DE1 80FC00              <1> 		cmp ah, 0
  3702 00002DE4 7406                <1> 		je guiscanother
  3703 00002DE6 E9D7000000          <1> 		jmp guiscanfound
  3704 00002DEB 00                  <1> guiupper db 0
  3705                              <1> guiscanother:
  3706 00002DEC 88C4                <1> 		mov ah, al
  3707 00002DEE B000                <1> 		mov al, 0
  3708 00002DF0 66A3[7F100000]      <1> 		mov [lastkey], ax
  3709 00002DF6 80FCE0              <1> 		cmp ah, 0E0h
  3710 00002DF9 0F847D000000        <1> 		je near guigetkeyspecial
  3711 00002DFF 803D[742D0000]E0    <1> 		cmp byte [specialkey], 0xE0
  3712 00002E06 752B                <1> 		jne nospecialkey
  3713 00002E08 80FC38              <1> 		cmp ah, 38h
  3714 00002E0B 0F84A0000000        <1> 		je near guialton
  3715 00002E11 80FCB8              <1> 		cmp ah, 0B8h
  3716 00002E14 0F849F000000        <1> 		je near guialtoff
  3717 00002E1A 80FC1D              <1> 		cmp ah, 1Dh
  3718 00002E1D 0F847E000000        <1> 		je near guictron
  3719 00002E23 80FC9D              <1> 		cmp ah, 9Dh
  3720 00002E26 0F847D000000        <1> 		je near guictroff
  3721 00002E2C 66A3[7F100000]      <1> 		mov [lastkey], ax
  3722 00002E32 C3                  <1> 		ret
  3723                              <1> nospecialkey:
  3724                              <1> 		;cmp ah, 4Dh
  3725                              <1> 		;je near nextimage
  3726 00002E33 80FC2A              <1> 		cmp ah, 2Ah
  3727 00002E36 0F8455000000        <1> 		je near guishifton
  3728 00002E3C 80FC36              <1> 		cmp ah, 36h
  3729 00002E3F 0F844C000000        <1> 		je near guishifton
  3730 00002E45 80FC1C              <1> 		cmp ah, 1Ch
  3731 00002E48 0F8473000000        <1> 		je near guientdown
  3732 00002E4E 80FCAA              <1> 		cmp ah, 0AAh
  3733 00002E51 0F8442000000        <1> 		je near guishiftoff
  3734 00002E57 80FCB6              <1> 		cmp ah, 0B6h
  3735 00002E5A 0F8439000000        <1> 		je near guishiftoff
  3736 00002E60 80FC3A              <1> 		cmp ah, 3Ah
  3737 00002E63 0F84A5000000        <1> 		je near guicaps
  3738 00002E69 80FC45              <1> 		cmp ah, 0x45
  3739 00002E6C 0F84AD000000        <1> 		je near guinumlock
  3740 00002E72 80FC46              <1> 		cmp ah, 0x46
  3741 00002E75 0F84BC000000        <1> 		je near guiscrolllock
  3742 00002E7B C3                  <1> 		ret
  3743                              <1> 	guigetkeyspecial:
  3744 00002E7C C605[742D0000]E0    <1> 		mov byte [specialkey], 0xE0
  3745 00002E83 E933FFFFFF          <1> 		jmp guigetkey
  3746                              <1> 	guishift:
  3747 00002E88 A0[EB2D0000]        <1> 		mov al, [guiupper]
  3748 00002E8D 3C01                <1> 		cmp al, 1
  3749 00002E8F 7308                <1> 		jae guishiftoff
  3750                              <1> 	guishifton:
  3751 00002E91 C605[EB2D0000]01    <1> 		mov byte [guiupper], 1
  3752 00002E98 C3                  <1> 		ret
  3753                              <1> 		;jmp guistartin
  3754                              <1> 	guishiftoff:
  3755 00002E99 C605[EB2D0000]00    <1> 		mov byte [guiupper], 0
  3756 00002EA0 C3                  <1> 		ret
  3757                              <1> 		;jmp guistartin
  3758                              <1> 	guictron:
  3759 00002EA1 C605[0D2F0000]01    <1> 		mov byte [guictr], 1
  3760 00002EA8 C3                  <1> 		ret
  3761                              <1> 	guictroff:
  3762 00002EA9 C605[0D2F0000]00    <1> 		mov byte [guictr], 0
  3763 00002EB0 C3                  <1> 		ret
  3764                              <1> 	guialton:
  3765 00002EB1 C605[0C2F0000]01    <1> 		mov byte [guialt], 1
  3766 00002EB8 C3                  <1> 		ret
  3767                              <1> 		;jmp guistartin
  3768                              <1> 	guialtoff:
  3769 00002EB9 C605[0C2F0000]00    <1> 		mov byte [guialt], 0
  3770 00002EC0 C3                  <1> 		ret
  3771                              <1> 		;jmp guistartin
  3772                              <1> 	guientdown:
  3773 00002EC1 C3                  <1> 		ret
  3774                              <1> 	guiscanfound:
  3775 00002EC2 81C704000000        <1> 		add edi, 4
  3776 00002EC8 803D[0D2F0000]01    <1> 		cmp byte [guictr], 1
  3777 00002ECF 731B                <1> 		jae altguiin
  3778 00002ED1 81EF04000000        <1> 		sub edi, 4
  3779 00002ED7 81C702000000        <1> 		add edi, 2
  3780 00002EDD 803D[0C2F0000]01    <1> 		cmp byte [guialt], 1
  3781 00002EE4 7306                <1> 		jae altguiin
  3782 00002EE6 81EF02000000        <1> 		sub edi, 2
  3783                              <1> altguiin:
  3784 00002EEC 81C701000000        <1> 		add edi, 1
  3785 00002EF2 803D[EB2D0000]01    <1> 		cmp byte [guiupper], 1
  3786 00002EF9 7306                <1> 		jae uppercasegui
  3787 00002EFB 81EF01000000        <1> 		sub edi, 1
  3788                              <1> uppercasegui:
  3789 00002F01 8A07                <1> 		mov al,[edi]
  3790 00002F03 A2[7F100000]        <1> 		mov [lastkey], al
  3791 00002F08 C3                  <1> 		ret
  3792                              <1> 		
  3793 00002F09 00                  <1> keyboardstatus db 0
  3794 00002F0A 00                  <1> numlockstatus db 0
  3795 00002F0B 00                  <1> scrolllockstatus db 0
  3796 00002F0C 00                  <1> guialt db 0
  3797 00002F0D 00                  <1> guictr db 0
  3798                              <1> 	guicaps:
  3799 00002F0E 8035[092F0000]04    <1> 		xor byte [keyboardstatus], 00000100b
  3800 00002F15 E835000000          <1> 		call updatekblights
  3801 00002F1A E969FFFFFF          <1> 		jmp guishift
  3802                              <1> 		
  3803                              <1> 	guinumlock:
  3804 00002F1F 8035[092F0000]02    <1> 		xor byte [keyboardstatus], 00000010b
  3805 00002F26 8035[0A2F0000]01    <1> 		xor byte [numlockstatus], 1
  3806 00002F2D E81D000000          <1> 		call updatekblights
  3807 00002F32 E966FEFFFF          <1> 		jmp guistartin
  3808                              <1> 	
  3809                              <1> 	guiscrolllock:
  3810 00002F37 8035[092F0000]01    <1> 		xor byte [keyboardstatus], 00000001b
  3811 00002F3E 8035[0B2F0000]01    <1> 		xor byte [scrolllockstatus], 1
  3812 00002F45 E805000000          <1> 		call updatekblights
  3813 00002F4A E94EFEFFFF          <1> 		jmp guistartin
  3814                              <1> 		
  3815                              <1> 	updatekblights:
  3816 00002F4F B0ED                <1> 		mov al, 0xED
  3817 00002F51 66BA6000            <1> 		mov dx, 0x60
  3818 00002F55 EE                  <1> 		out dx, al
  3819                              <1> 	chkkbdack:
  3820 00002F56 EC                  <1> 		in al, dx
  3821 00002F57 3CFA                <1> 		cmp al, 0xFA
  3822 00002F59 75FB                <1> 		jne chkkbdack
  3823 00002F5B A0[092F0000]        <1> 		mov al, [keyboardstatus]
  3824 00002F60 EE                  <1> 		out dx, al
  3825 00002F61 C3                  <1> 		ret
  3826                              <1> 	
  3827                              <1> 	cursorgui:
  3828 00002F62 803D[43460000]01    <1> 		cmp byte [mouseon], 1
  3829 00002F69 0F8432000000        <1> 		je near maincall2
  3830 00002F6F 803D[E2340000]00    <1> 		cmp byte [guion], 0
  3831 00002F76 0F8445FFFFFF        <1> 		je guientdown
  3832                              <1> 	initmouse:
  3833 00002F7C 803D[E2340000]00    <1> 		cmp byte [guion], 0
  3834 00002F83 7405                <1> 		je noswmsposinit
  3835 00002F85 E825060000          <1> 		call switchmousepos2
  3836                              <1> 	noswmsposinit:
  3837 00002F8A E867FDFFFF          <1> 	  	call PS2SET
  3838 00002F8F E890FDFFFF          <1> 		call ACTMOUS
  3839 00002F94 C605[43460000]01    <1> 		mov byte [mouseon],1
  3840 00002F9B E8A9FDFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  3841                              <1> 				;;If the bytes are mixed up,
  3842                              <1> 				;;remove this line or add another of this line.
  3843                              <1> 		;call GETB
  3844                              <1> 	nomouse:
  3845 00002FA0 C3                  <1> 		ret
  3846                              <1> 	maincall2:
  3847 00002FA1 803D[732D0000]01    <1> 		cmp byte [mousedisabled], 1
  3848 00002FA8 74F6                <1> 		je nomouse
  3849 00002FAA 803D[43460000]01    <1> 		  cmp byte [mouseon], 1
  3850 00002FB1 75C9                <1> 		  jne initmouse
  3851 00002FB3 E891FDFFFF          <1> 		  call GETB
  3852 00002FB8 88C3                <1> 		  mov  bl, al
  3853 00002FBA 80E301              <1> 		  and  bl, 1
  3854 00002FBD 881D[6E2D0000]      <1> 		  mov  BYTE [LBUTTON], bl
  3855 00002FC3 88C3                <1> 		  mov  bl, al
  3856 00002FC5 80E302              <1> 		  and  bl, 2
  3857 00002FC8 D0EB                <1> 		  shr  bl, 1
  3858 00002FCA 881D[6F2D0000]      <1> 		  mov  BYTE [RBUTTON], bl
  3859 00002FD0 88C3                <1> 		  mov  bl, al
  3860 00002FD2 80E304              <1> 		  and  bl, 4
  3861 00002FD5 C0EB02              <1> 		  shr  bl, 2
  3862 00002FD8 881D[702D0000]      <1> 		  mov  BYTE [MBUTTON], bl
  3863 00002FDE E866FDFFFF          <1> 		  call GETB
  3864 00002FE3 A2[712D0000]        <1> 		  mov  BYTE [XCOORD], al
  3865 00002FE8 E85CFDFFFF          <1> 		  call GETB
  3866 00002FED A2[722D0000]        <1> 		  mov  BYTE [YCOORD], al
  3867                              <1> 
  3868                              <1> 	showpixelcursor:
  3869 00002FF2 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  3870 00002FF9 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  3871 00003000 668915[48310000]    <1> 		mov [lastmouseposition], dx
  3872 00003007 66890D[4A310000]    <1> 		mov [lastmouseposition + 2], cx
  3873 0000300E A0[712D0000]        <1> 		mov al, [XCOORD]
  3874 00003013 3C80                <1> 		cmp al, 128
  3875 00003015 730C                <1> 		jae subxcoord
  3876 00003017 00C0                <1> 		add al, al
  3877 00003019 B400                <1> 		mov ah, 0
  3878 0000301B 6601C2              <1> 		add dx, ax
  3879 0000301E E90B000000          <1> 		jmp subxcoorddn
  3880                              <1> 	subxcoord:
  3881 00003023 00C0                <1> 		add al, al
  3882 00003025 B300                <1> 		mov bl, 0
  3883 00003027 28C3                <1> 		sub bl, al
  3884 00003029 B700                <1> 		mov bh, 0
  3885 0000302B 6629DA              <1> 		sub dx, bx
  3886                              <1> 	subxcoorddn:
  3887 0000302E 8A1D[722D0000]      <1> 		mov bl, [YCOORD]
  3888 00003034 B000                <1> 		mov al, 0
  3889 00003036 28D8                <1> 		sub al, bl
  3890 00003038 3C80                <1> 		cmp al, 128
  3891 0000303A 730A                <1> 		jae subycoord
  3892 0000303C B400                <1> 		mov ah, 0
  3893 0000303E 6601C1              <1> 		add cx, ax
  3894 00003041 E909000000          <1> 		jmp subycoorddn
  3895                              <1> 	subycoord:
  3896 00003046 B300                <1> 		mov bl, 0
  3897 00003048 28C3                <1> 		sub bl, al
  3898 0000304A B700                <1> 		mov bh, 0
  3899 0000304C 6629D9              <1> 		sub cx, bx
  3900                              <1> 	subycoorddn:
  3901 0000304F 6681FA204E          <1> 		cmp dx, 20000
  3902 00003054 7604                <1> 		jbe nooriginx2
  3903 00003056 66BA0000            <1> 		mov dx, 0
  3904                              <1> 	nooriginx2:
  3905 0000305A 6681F9204E          <1> 		cmp cx, 20000
  3906 0000305F 7604                <1> 		jbe nooriginy2
  3907 00003061 66B90000            <1> 		mov cx, 0
  3908                              <1> 	nooriginy2:
  3909 00003065 6681FA0000          <1> 		cmp dx, 0
  3910 0000306A 7415                <1> 		je nofixxcolumn2
  3911 0000306C 663B15[66430000]    <1> 		cmp dx, [resolutionx2]
  3912 00003073 720C                <1> 		jb nofixxcolumn2
  3913 00003075 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  3914 0000307C 6681EA0200          <1> 		sub dx, 2
  3915                              <1> 	nofixxcolumn2:
  3916 00003081 6681F90000          <1> 		cmp cx, 0
  3917 00003086 7415                <1> 		je nofixyrow2
  3918 00003088 663B0D[62430000]    <1> 		cmp cx, [resolutiony]
  3919 0000308F 720C                <1> 		jb nofixyrow2
  3920 00003091 668B0D[62430000]    <1> 		mov cx, [resolutiony]
  3921 00003098 6681E90100          <1> 		sub cx, 1
  3922                              <1> 	nofixyrow2:
  3923 0000309D 668915[4C310000]    <1> 		mov [mousecursorposition], dx
  3924 000030A4 66890D[4E310000]    <1> 		mov [mousecursorposition + 2], cx
  3925 000030AB 803D[E2340000]00    <1> 		cmp byte [guion], 0
  3926 000030B2 0F8498000000        <1> 		je near termmouse
  3927 000030B8 E889040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3928 000030BD 803D[6E2D0000]01    <1> 		cmp byte [LBUTTON], 1
  3929 000030C4 0F8462050000        <1> 		je near clickicon
  3930 000030CA 803D[6F2D0000]01    <1> 		cmp byte [RBUTTON], 1
  3931 000030D1 0F8455050000        <1> 		je near clickicon
  3932 000030D7 A0[19360000]        <1> 		mov al, [pbutton]
  3933 000030DC C705[1C360000]0000- <1> 		mov dword [dragging], 0
  3934 000030E4 0000                <1>
  3935 000030E6 3C00                <1> 		cmp al, 0
  3936 000030E8 740F                <1> 		je nopreviousbutton
  3937 000030EA E8F4030000          <1> 		call clearmousecursor
  3938 000030EF E8860A0000          <1> 		call reloadallgraphics
  3939                              <1> 	windowtermcopyend:
  3940 000030F4 E8B6040000          <1> 		call switchmousepos2
  3941                              <1> 	nopreviousbutton:
  3942 000030F9 B000                <1> 		mov al, 0
  3943 000030FB A2[19360000]        <1> 		mov [pbutton], al
  3944 00003100 A0[6E2D0000]        <1> 		mov al, [LBUTTON]
  3945 00003105 A2[1A360000]        <1> 		mov [pLBUTTON], al
  3946 0000310A A0[6F2D0000]        <1> 		mov al, [RBUTTON]
  3947 0000310F A2[1B360000]        <1> 		mov [pRBUTTON], al
  3948 00003114 B900000000          <1> 		mov ecx, 0
  3949 00003119 BA00000000          <1> 		mov edx, 0
  3950 0000311E 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  3951 00003125 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  3952 0000312C 66BB18C7            <1> 		mov bx, 1100011100011000b
  3953 00003130 B400                <1> 		mov ah, 0
  3954 00003132 B0FE                <1> 		mov al, 254
  3955 00003134 C605[DF340000]01    <1> 		mov byte [showcursorfonton], 1
  3956 0000313B E836120000          <1> 		call showfontvesa
  3957 00003140 C605[DF340000]00    <1> 		mov byte [showcursorfonton], 0
  3958 00003147 C3                  <1> 		ret
  3959                              <1> 
  3960 00003148 84008400            <1> lastmouseposition dw 132,132
  3961 0000314C 84008400            <1> mousecursorposition dw 132,132	
  3962                              <1> 
  3963                              <1> termmouse:
  3964 00003150 BE[8F1C0000]        <1> 		mov esi, videobuf2
  3965 00003155 BA00000000          <1> 		mov edx, 0
  3966 0000315A 668B15[48310000]    <1> 		mov dx, [lastmouseposition]
  3967 00003161 668B0D[4A310000]    <1> 		mov cx, [lastmouseposition + 2]
  3968 00003168 66A1[EB310000]      <1> 		mov ax, [cursorcache]
  3969 0000316E 663D0000            <1> 		cmp ax, 0
  3970 00003172 7426                <1> 		je nocopycursorcache
  3971 00003174 66C1E104            <1> 		shl cx, 4
  3972 00003178 66C1E203            <1> 		shl dx, 3
  3973 0000317C 01D6                <1> 		add esi, edx
  3974 0000317E 66BA0000            <1> 		mov dx, 0
  3975 00003182 8A15[AD0E0000]      <1> 		mov dl, [charxy]
  3976 00003188 6641                <1> 		inc cx
  3977                              <1> termmousecplp1:
  3978 0000318A 01D6                <1> 		add esi, edx
  3979 0000318C 6649                <1> 		dec cx
  3980 0000318E 6681F90000          <1> 		cmp cx, 0
  3981 00003193 75F5                <1> 		jne termmousecplp1
  3982 00003195 29D6                <1> 		sub esi, edx
  3983 00003197 668906              <1> 		mov [esi], ax
  3984                              <1> nocopycursorcache:
  3985 0000319A BE[8F1C0000]        <1> 		mov esi, videobuf2
  3986 0000319F BA00000000          <1> 		mov edx, 0
  3987 000031A4 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  3988 000031AB 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  3989 000031B2 66C1E104            <1> 		shl cx, 4
  3990 000031B6 66C1E203            <1> 		shl dx, 3
  3991 000031BA 01D6                <1> 		add esi, edx
  3992 000031BC 66BA0000            <1> 		mov dx, 0
  3993 000031C0 8A15[AD0E0000]      <1> 		mov dl, [charxy]
  3994 000031C6 6641                <1> 		inc cx
  3995                              <1> termmousecplp2:
  3996 000031C8 01D6                <1> 		add esi, edx
  3997 000031CA 6649                <1> 		dec cx
  3998 000031CC 6681F90000          <1> 		cmp cx, 0
  3999 000031D1 75F5                <1> 		jne termmousecplp2
  4000 000031D3 29D6                <1> 		sub esi, edx
  4001 000031D5 668B06              <1> 		mov ax, [esi]
  4002 000031D8 66A3[EB310000]      <1> 		mov [cursorcache], ax
  4003 000031DE B080                <1> 		mov al, 128
  4004 000031E0 B407                <1> 		mov ah, 7
  4005 000031E2 668906              <1> 		mov [esi], ax
  4006 000031E5 E81FE2FFFF          <1> 		call termcopy
  4007 000031EA C3                  <1> 		ret
  4008 000031EB 0000                <1> cursorcache db 0,0
  4009                              <1> 	
  4010                              <1> scancode:
  4011 000031ED 000000000000        <1> 	db 0,0,0,0,0,0			;,0h
  4012 000031F3 000000000000        <1> 	db 0,0,0,0,0,0			;,1h
  4013 000031F9 3121AD000000        <1> 	db '1','!',173,0,0,0	;,2h
  4014 000031FF 3240FD000000        <1> 	db '2','@',253,0,0,0	;,3h
  4015 00003205 332300000000        <1> 	db '3','#',0,0,0,0		;,4h
  4016 0000320B 34249B9C0000        <1> 	db '4','$',155,156,0,0	;,5h
  4017 00003211 3525EE000000        <1> 	db '5','%',238,0,0,0	;,6h
  4018 00003217 365EAC000000        <1> 	db '6','^',172,0,0,0	;,7h
  4019 0000321D 3726AB000000        <1> 	db '7','&',171,0,0,0	;,8h
  4020 00003223 382A00000000        <1> 	db '8','*',0,0,0,0		;,9h
  4021 00003229 392800000000        <1> 	db '9','(',0,0,0,0		;,0Ah
  4022 0000322F 302900000000        <1> 	db '0',')',0,0,0,0		;,0Bh
  4023 00003235 2D5F9DF10000        <1> 	db '-','_',157,241,0,0	;,0Ch
  4024 0000323B 3D2BF7F60000        <1> 	db '=','+',247,246,0,0	;,0Dh
  4025 00003241 080800000000        <1> 	db 8,8,0,0,0,0			;,0Eh
  4026 00003247 000000000000        <1> 	db 0,0,0,0,0,0			;,0Fh
  4027 0000324D 7151848E0000        <1> 	db 'q','Q',132,142,0,0	;,10h
  4028 00003253 7757868F0000        <1> 	db 'w','W',134,143,0,0	;,11h
  4029 00003259 65458290EE45        <1> 	db 'e','E',130,144,238,'E'	;,12h
  4030 0000325F 725200007050        <1> 	db 'r','R',0,0,'p','P'		;,13h
  4031 00003265 745400007454        <1> 	db 't','T',0,0,'t','T'		;,14h
  4032 0000326B 7959819A7559        <1> 	db 'y','Y',129,154,'u','Y'	;,15h
  4033 00003271 7555A3970000        <1> 	db 'u','U',163,151,0,0	;,16h
  4034 00003277 6949A18D6949        <1> 	db 'i','I',161,141,'i','I'	;,17h
  4035 0000327D 6F4FA29577EA        <1> 	db 'o','O',162,149,'w',234	;,18h
  4036 00003283 70509499E3EF        <1> 	db 'p','P',148,153,227,239	;,19h
  4037 00003289 5B7B00000000        <1> 	db '[','{',0,0,0,0		;,1Ah
  4038 0000328F 5D7D00000000        <1> 	db ']','}',0,0,0,0		;,1Bh
  4039 00003295 000000000000        <1> 	db 0,0,0,0,0,0			;,1Ch
  4040 0000329B 000000000000        <1> 	db 0,0,0,0,0,0			;,1Dh
  4041 000032A1 6141A000E041        <1> 	db 'a','A',160,0,224,'A'	;,1Eh
  4042 000032A7 73531500E5E4        <1> 	db 's','S',21,0,229,228		;,1Fh
  4043 000032AD 64440000EB7F        <1> 	db 'd','D',0,0,235,127	;,20h
  4044 000032B3 66469F00EDE8        <1> 	db 'f','F',159,0,237,232	;,21h
  4045 000032B9 6747000079E2        <1> 	db 'g','G',0,0,'y',226		;,22h
  4046 000032BF 684800006E48        <1> 	db 'h','H',0,0,'n','H'		;,23h
  4047 000032C5 6A4A00000000        <1> 	db 'j','J',0,0,0,0		;,24h
  4048 000032CB 6B4B00006B4B        <1> 	db 'k','K',0,0,'k','K'		;,25h
  4049 000032D1 6C4C0000E9E9        <1> 	db 'l','L',0,0,233,233		;,26h
  4050 000032D7 3B3A14000000        <1> 	db ';',':',20,0,0,0		;,27h
  4051 000032DD 272200000000        <1> 	db 27h,22h,0,0,0,0		;,28h
  4052 000032E3 607E00000000        <1> 	db '`','~',0,0,0,0		;,29h
  4053 000032E9 000000000000        <1> 	db 0,0,0,0,0,0			;,2Ah
  4054 000032EF 5C7CAAB30000        <1> 	db '\','|',170,179,0,0	;,2Bh
  4055 000032F5 7A5A91927A5A        <1> 	db 'z','Z',145,146,'z','Z'	;,2Ch
  4056 000032FB 7858000000F0        <1> 	db 'x','X',0,0,0,240		;,2Dh
  4057 00003301 634387800000        <1> 	db 'c','C',135,128,0,0	;,2Eh
  4058 00003307 765600000000        <1> 	db 'v','V',0,0,0,0		;,2Fh
  4059 0000330D 62420000E142        <1> 	db 'b','B',0,0,225,'B'	;,30h
  4060 00003313 6E4EA4A5764E        <1> 	db 'n','N',164,165,'v','N'	;,31h
  4061 00003319 6D4D0000E64D        <1> 	db 'm','M',0,0,230,'M'		;,32h
  4062 0000331F 2C3CF3AE0000        <1> 	db ',','<',243,174,0,0	;,33h
  4063 00003325 2E3EF2AF0000        <1> 	db '.','>',242,175,0,0	;,34h
  4064 0000332B 2F3FA8000000        <1> 	db '/','?',168,0,0,0	;,35h
  4065 00003331 000000000000        <1> 	db 0,0,0,0,0,0			;,36h
  4066 00003337 000000000000        <1> 	db 0,0,0,0,0,0			;,37h
  4067 0000333D 000000000000        <1> 	db 0,0,0,0,0,0			;,38h
  4068 00003343 202000000000        <1> 	db ' ',' ',0,0,0,0		;,39h
  4069                              <1> noscan:
  4070                                      %include 'source/gui.asm'
  4071                              <1> guiclear:
  4072 00003349 8B3D[746A0000]      <1> 	mov edi, [physbaseptr]
  4073 0000334F 668B15[64430000]    <1> 	mov dx, [resolutionx]
  4074 00003356 668B0D[62430000]    <1> 	mov cx, [resolutiony]
  4075 0000335D 66A1[86330000]      <1> 	mov ax, [background]
  4076                              <1> guiclearloop:
  4077 00003363 668907              <1> 	mov [edi], ax
  4078 00003366 81C702000000        <1> 	add edi, 2
  4079 0000336C 664A                <1> 	dec dx
  4080 0000336E 6681FA0000          <1> 	cmp dx, 0
  4081 00003373 77EE                <1> 	ja guiclearloop
  4082 00003375 6649                <1> 	dec cx
  4083 00003377 668B15[64430000]    <1> 	mov dx, [resolutionx]
  4084 0000337E 6681F90000          <1> 	cmp cx, 0
  4085 00003383 77DE                <1> 	ja guiclearloop
  4086 00003385 C3                  <1> 	ret
  4087                              <1> 
  4088 00003386 CF7B                <1> background dw 0111101111001111b
  4089                              <1> 
  4090                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  4091 00003388 B800000000          <1> 	mov eax, 0
  4092 0000338D BB00000000          <1> 	mov ebx, 0
  4093 00003392 B900000000          <1> 	mov ecx, 0
  4094 00003397 BA00000000          <1> 	mov edx, 0
  4095 0000339C 8B3D[746A0000]      <1> 	mov edi, [physbaseptr]
  4096 000033A2 668B15[64430000]    <1> 	mov dx, [resolutionx]
  4097 000033A9 668B0D[62430000]    <1> 	mov cx, [resolutiony]
  4098 000033B0 668B1D[86330000]    <1> 	mov bx, [background]
  4099                              <1> guiclearloop2:
  4100 000033B7 66891F              <1> 	mov [edi], bx
  4101 000033BA 81C702000000        <1> 	add edi, 2
  4102 000033C0 664A                <1> 	dec dx
  4103 000033C2 6681FA0000          <1> 	cmp dx, 0
  4104 000033C7 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  4105 000033CD 6649                <1> 	dec cx
  4106 000033CF 668B15[64430000]    <1> 	mov dx, [resolutionx]
  4107 000033D6 6681F90000          <1> 	cmp cx, 0
  4108 000033DB 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  4109 000033E1 C605[E2340000]01    <1> 	mov byte [guion], 1
  4110 000033E8 C605[E1340000]00    <1> 	mov byte [mouseselecton], 0
  4111 000033EF B800000000          <1> 	mov eax, 0
  4112 000033F4 BB00000000          <1> 	mov ebx, 0
  4113 000033F9 B900000000          <1> 	mov ecx, 0
  4114 000033FE BA00000000          <1> 	mov edx, 0
  4115                              <1> 	
  4116 00003403 BE[58460000]        <1> 	mov esi, pacmsg
  4117 00003408 66B80000            <1> 	mov ax, 0
  4118 0000340C BB00000000          <1> 	mov ebx, 0
  4119 00003411 66B99000            <1> 	mov cx, 144
  4120 00003415 66BA0400            <1> 	mov dx, 4
  4121 00003419 E8A30A0000          <1> 	call showstring
  4122                              <1> 	
  4123 0000341E BE[6E470000]        <1> 	mov esi, interneticon
  4124 00003423 66B80000            <1> 	mov ax, 0
  4125 00003427 BB[CD460000]        <1> 	mov ebx, noie
  4126 0000342C 66B91800            <1> 	mov cx, 24
  4127 00003430 66BA0400            <1> 	mov dx, 4
  4128 00003434 E8500E0000          <1> 	call showicon
  4129                              <1> 	
  4130 00003439 BE[F0470000]        <1> 	mov esi, wordicon
  4131 0000343E 66B80000            <1> 	mov ax, 0
  4132 00003442 BB00000000          <1> 	mov ebx, 0
  4133 00003447 66B91800            <1> 	mov cx, 24
  4134 0000344B 66BA3000            <1> 	mov dx, 48
  4135 0000344F E8350E0000          <1> 	call showicon
  4136                              <1> 	
  4137 00003454 BE[72480000]        <1> 	mov esi, pacmanpellet
  4138 00003459 66B80000            <1> 	mov ax, 0
  4139 0000345D BB00000000          <1> 	mov ebx, 0
  4140 00003462 66B94000            <1> 	mov cx, 64
  4141 00003466 66BA0400            <1> 	mov dx, 4
  4142 0000346A E81A0E0000          <1> 	call showicon
  4143                              <1> 	
  4144 0000346F BE[76490000]        <1> 	mov esi, pacman
  4145 00003474 66B80000            <1> 	mov ax, 0
  4146 00003478 BB[B2460000]        <1> 	mov ebx, pacmannomnom
  4147 0000347D 66B94000            <1> 	mov cx, 64
  4148 00003481 66BA3000            <1> 	mov dx, 48
  4149 00003485 E8FF0D0000          <1> 	call showicon
  4150                              <1> 	
  4151 0000348A BE[F4480000]        <1> 	mov esi, ghostie
  4152 0000348F 66B80000            <1> 	mov ax, 0
  4153 00003493 BB[97460000]        <1> 	mov ebx, boo
  4154 00003498 66B96C00            <1> 	mov cx, 108
  4155 0000349C 66BA0400            <1> 	mov dx, 4
  4156 000034A0 E8E40D0000          <1> 	call showicon
  4157                              <1> 
  4158 000034A5 BE[44460000]        <1> 	mov esi, start
  4159 000034AA 668B0D[62430000]    <1> 	mov cx, [resolutiony]
  4160 000034B1 6681E91000          <1> 	sub cx, 16
  4161 000034B6 66BA0200            <1> 	mov dx, 2
  4162 000034BA B400                <1> 	mov ah, 0
  4163 000034BC B010                <1> 	mov al, 00010000b
  4164 000034BE BB[1B470000]        <1> 	mov ebx, winblows
  4165 000034C3 E8F9090000          <1> 	call showstring
  4166                              <1> 	
  4167 000034C8 E895FAFFFF          <1> 	call cursorgui
  4168                              <1> guistart:
  4169 000034CD E8CBF8FFFF          <1> 	call guistartin
  4170 000034D2 C605[DB340000]00    <1> 	mov byte [copygui], 0
  4171 000034D9 EBF2                <1> 	jmp guistart
  4172                              <1> 	
  4173                              <1> ;guicopy:	;;for double buffering
  4174                              <1> ;	mov byte [copygui], 1
  4175                              <1> ;	mov edi, [offscreenmemoffset]
  4176                              <1> ;	mov edx, 0
  4177                              <1> ;	mov ecx, 0
  4178                              <1> ;	mov dx, [mousecursorposition]
  4179                              <1> ;	mov cx, [mousecursorposition + 2]
  4180                              <1> ;	add edi, edx
  4181                              <1> ;	mov dx, [resolutionx2]
  4182                              <1> ;	inc cx
  4183                              <1> ;guicp2:
  4184                              <1> ;	add edi, edx
  4185                              <1> ;	dec cx
  4186                              <1> ;	cmp cx, 0
  4187                              <1> ;	jne guicp2
  4188                              <1> ;	sub edi, edx
  4189                              <1> ;	mov [cursorloc], edi
  4190                              <1> ;	mov ebx, cursorbmp
  4191                              <1> ;	mov cx, [resolutiony]
  4192                              <1> ;	rol ecx, 16
  4193                              <1> ;	mov cx, [resolutionx]
  4194                              <1> ;	mov esi, [physbaseptr]
  4195                              <1> ;	mov edi, [offscreenmemoffset]
  4196                              <1> ;guicp1:
  4197                              <1> ;	mov ax, [esi]
  4198                              <1> ;	mov [edi], ax
  4199                              <1> ;	add esi, 2
  4200                              <1> ;	add edi, 2
  4201                              <1> ;	cmp edi, [cursorloc]
  4202                              <1> ;	je copycursor
  4203                              <1> ;dncopycursor:
  4204                              <1> ;	dec cx
  4205                              <1> ;	cmp cx, 0
  4206                              <1> ;	jne guicp1
  4207                              <1> ;	mov cx, [resolutionx]
  4208                              <1> ;	rol ecx, 16
  4209                              <1> ;	dec cx
  4210                              <1> ;	cmp cx, 0
  4211                              <1> ;	rol ecx, 16
  4212                              <1> ;	jne guicp1
  4213                              <1> ;	mov byte [copygui], 0
  4214                              <1> ;	ret
  4215                              <1> ;copycursor:
  4216                              <1> ;	cmp ebx, cursorbmpend
  4217                              <1> ;	jae dncopycursor
  4218                              <1> ;	mov dx, [resolutionx2]
  4219                              <1> ;	add edi, edx
  4220                              <1> ;	mov [cursorloc], edi
  4221                              <1> ;	sub edi, edx
  4222                              <1> ;	dec ebx
  4223                              <1> ;	sub edi, 2
  4224                              <1> ;	sub esi, 2
  4225                              <1> ;	mov dx, 9
  4226                              <1> ;curscplp:
  4227                              <1> ;	inc ebx
  4228                              <1> ;	add esi, 2
  4229                              <1> ;	add edi, 2
  4230                              <1> ;	mov ax, [esi]
  4231                              <1> ;	mov [edi], ax
  4232                              <1> ;	mov al, [ebx]
  4233                              <1> ;	cmp al, 0
  4234                              <1> ;	je curscplp2
  4235                              <1> ;	mov word [edi], 1110011110011100b
  4236                              <1> ;curscplp2:
  4237                              <1> ;	dec cx
  4238                              <1> ;	cmp cx, 0
  4239                              <1> ;	je dncopycursor
  4240                              <1> ;	dec dx
  4241                              <1> ;	cmp dx, 0
  4242                              <1> ;	jne curscplp
  4243                              <1> ;	jmp dncopycursor
  4244                              <1> 	
  4245                              <1> 	
  4246                              <1> ;cursorloc: dd 0
  4247                              <1> 		
  4248                              <1> ;nextimage:	
  4249                              <1> ;	call guiclear
  4250                              <1> ;	mov esi, [bmpend]
  4251                              <1> ;	mov eax, 0
  4252                              <1> ;	mov ebx, 0
  4253                              <1> ;	mov ecx, 0
  4254                              <1> ;	mov edx, 0
  4255                              <1> ;	call showbmp
  4256                              <1> ;	jmp guistartin
  4257                              <1> 		
  4258 000034DB 00                  <1> copygui db 0
  4259 000034DC 00                  <1> graphicsset db 0
  4260 000034DD 0000                <1> graphicspos db 0,0
  4261 000034DF 00                  <1> showcursorfonton db 0
  4262 000034E0 00                  <1> savefonton db 0
  4263 000034E1 00                  <1> mouseselecton db 0
  4264 000034E2 00                  <1> guion db 0
  4265                              <1> 
  4266                              <1> 		
  4267                              <1> clearmousecursor:
  4268 000034E3 BE[86330000]        <1> 		mov esi, background
  4269 000034E8 8B3D[746A0000]      <1> 		mov edi, [physbaseptr]
  4270 000034EE BA00000000          <1> 		mov edx, 0
  4271 000034F3 B900000000          <1> 		mov ecx, 0
  4272 000034F8 668B15[48310000]    <1> 		mov dx, [lastmouseposition]
  4273 000034FF 668B0D[4A310000]    <1> 		mov cx, [lastmouseposition + 2]
  4274 00003506 01D7                <1> 		add edi, edx
  4275 00003508 BA00000000          <1> 		mov edx, 0
  4276 0000350D 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4277 00003514 6681F90000          <1> 		cmp cx, 0
  4278 00003519 740B                <1> 		je noyclr
  4279 0000351B 01D7                <1> yclr:	add edi, edx
  4280 0000351D 6649                <1> 		dec cx
  4281 0000351F 6681F90000          <1> 		cmp cx, 0
  4282 00003524 75F5                <1> 		jne yclr
  4283 00003526 668B06              <1> noyclr:	mov ax, [esi]
  4284 00003529 C1C010              <1> 		rol eax, 16
  4285 0000352C 668B06              <1> 		mov ax, [esi]
  4286 0000352F 8907                <1> 		mov [edi], eax
  4287 00003531 894704              <1> 		mov [edi + 4], eax
  4288 00003534 894708              <1> 		mov [edi + 8], eax
  4289 00003537 89470C              <1> 		mov [edi + 12], eax
  4290 0000353A 01D7                <1> 		add edi, edx
  4291 0000353C 6641                <1> 		inc cx
  4292 0000353E 6681F91000          <1> 		cmp cx, 16
  4293 00003543 72E1                <1> 		jb noyclr
  4294 00003545 C3                  <1> 		ret
  4295                              <1> 
  4296                              <1> switchmousepos:		;;switch were the mouse is located
  4297 00003546 BE[00120000]        <1> 		mov esi, mousecolorbuf
  4298 0000354B 8B3D[746A0000]      <1> 		mov edi, [physbaseptr]
  4299 00003551 BA00000000          <1> 		mov edx, 0
  4300 00003556 B900000000          <1> 		mov ecx, 0
  4301 0000355B 668B15[48310000]    <1> 		mov dx, [lastmouseposition]
  4302 00003562 668B0D[4A310000]    <1> 		mov cx, [lastmouseposition + 2]
  4303 00003569 01D7                <1> 		add edi, edx
  4304 0000356B BA00000000          <1> 		mov edx, 0
  4305 00003570 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4306 00003577 6681F90000          <1> 		cmp cx, 0
  4307 0000357C 740B                <1> 		je noswmsy
  4308 0000357E 01D7                <1> swmsy:		add edi, edx
  4309 00003580 6649                <1> 		dec cx
  4310 00003582 6681F90000          <1> 		cmp cx, 0
  4311 00003587 75F5                <1> 		jne swmsy
  4312 00003589 8B06                <1> noswmsy:	mov eax, [esi]
  4313 0000358B 8B5E04              <1> 		mov ebx, [esi + 4]
  4314 0000358E 8907                <1> 		mov [edi], eax
  4315 00003590 895F04              <1> 		mov [edi + 4], ebx
  4316 00003593 8B4608              <1> 		mov eax, [esi + 8]
  4317 00003596 8B5E0C              <1> 		mov ebx, [esi + 12]
  4318 00003599 894708              <1> 		mov [edi + 8], eax
  4319 0000359C 895F0C              <1> 		mov [edi + 12], ebx
  4320 0000359F 01D7                <1> 		add edi, edx
  4321 000035A1 81C610000000        <1> 		add esi, 16
  4322 000035A7 81FE[00130000]      <1> 		cmp esi, mcolorend
  4323 000035AD 72DA                <1> 		jb noswmsy
  4324                              <1> 		
  4325                              <1> switchmousepos2:
  4326 000035AF BE[00120000]        <1> 		mov esi, mousecolorbuf
  4327 000035B4 8B3D[746A0000]      <1> 		mov edi, [physbaseptr]
  4328 000035BA BA00000000          <1> 		mov edx, 0
  4329 000035BF B900000000          <1> 		mov ecx, 0
  4330 000035C4 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  4331 000035CB 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  4332 000035D2 01D7                <1> 		add edi, edx
  4333 000035D4 BA00000000          <1> 		mov edx, 0
  4334 000035D9 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4335 000035E0 6681F90000          <1> 		cmp cx, 0
  4336 000035E5 740B                <1> 		je noswmsy2
  4337 000035E7 01D7                <1> swmsy2:		add edi, edx
  4338 000035E9 6649                <1> 		dec cx
  4339 000035EB 6681F90000          <1> 		cmp cx, 0
  4340 000035F0 75F5                <1> 		jne swmsy2
  4341 000035F2 8B07                <1> noswmsy2:	mov eax, [edi]
  4342 000035F4 8B5F04              <1> 		mov ebx, [edi + 4]
  4343 000035F7 8906                <1> 		mov [esi], eax
  4344 000035F9 895E04              <1> 		mov [esi + 4], ebx
  4345 000035FC 8B4708              <1> 		mov eax, [edi + 8]
  4346 000035FF 8B5F0C              <1> 		mov ebx, [edi + 12]
  4347 00003602 894608              <1> 		mov [esi + 8], eax
  4348 00003605 895E0C              <1> 		mov [esi + 12], ebx
  4349 00003608 01D7                <1> 		add edi, edx
  4350 0000360A 81C610000000        <1> 		add esi, 16
  4351 00003610 81FE[00130000]      <1> 		cmp esi, mcolorend
  4352 00003616 72DA                <1> 		jb noswmsy2
  4353 00003618 C3                  <1> 		ret
  4354                              <1> 
  4355 00003619 00                  <1> pbutton db 0
  4356 0000361A 00                  <1> pLBUTTON db 0
  4357 0000361B 00                  <1> pRBUTTON db 0
  4358 0000361C 00000000            <1> dragging dw 0,0
  4359 00003620 0000000000000000    <1> lastpos dw 0,0,0,0
  4360 00003628 00000000            <1> colorbuf dw 0,0
  4361                              <1> 	
  4362                              <1> 	clickicon:
  4363 0000362C B001                <1> 		mov al, 1
  4364 0000362E A2[19360000]        <1> 		mov [pbutton], al
  4365 00003633 A0[1A360000]        <1> 		mov al, [pLBUTTON]
  4366 00003638 2205[6E2D0000]      <1> 		and al, [LBUTTON]
  4367 0000363E 8A25[1B360000]      <1> 		mov ah, [pRBUTTON]
  4368 00003644 2225[6F2D0000]      <1> 		and ah, [RBUTTON]
  4369 0000364A 08E0                <1> 		or al, ah
  4370 0000364C 3C00                <1> 		cmp al, 0
  4371 0000364E 741B                <1> 		je nodragclick
  4372 00003650 813D[1C360000]0100- <1> 		cmp dword [dragging], 1
  4373 00003658 0000                <1>
  4374 0000365A 732D                <1> 		jae dragclick
  4375 0000365C C705[1C360000]0100- <1> 		mov dword [dragging], 1
  4376 00003664 0000                <1>
  4377 00003666 E91E000000          <1> 		jmp dragclick
  4378                              <1> 	nodragclick:
  4379 0000366B C705[1C360000]0000- <1> 		mov dword [dragging], 0
  4380 00003673 0000                <1>
  4381 00003675 A0[6E2D0000]        <1> 		mov al, [LBUTTON]
  4382 0000367A A2[1A360000]        <1> 		mov [pLBUTTON], al
  4383 0000367F A0[6F2D0000]        <1> 		mov al, [RBUTTON]
  4384 00003684 A2[1B360000]        <1> 		mov [pRBUTTON], al
  4385                              <1> 	dragclick:
  4386 00003689 66B80000            <1> 		mov ax, 0
  4387 0000368D BE[00100000]        <1> 		mov esi, graphicstable
  4388 00003692 C705[92460000]0000- <1> 		mov dword [codepointer], 0
  4389 0000369A 0000                <1>
  4390                              <1> 	clicon2:
  4391 0000369C BA00000000          <1> 		mov edx, 0
  4392 000036A1 B900000000          <1> 		mov ecx, 0
  4393 000036A6 66813E0100          <1> 		cmp word [esi], 1
  4394 000036AB 0F841B000000        <1> 		je near iconselect
  4395 000036B1 66813E0200          <1> 		cmp word [esi], 2
  4396 000036B6 0F8472010000        <1> 		je near textselected
  4397 000036BC 66813E0300          <1> 		cmp word [esi], 3
  4398 000036C1 0F84C7020000        <1> 		je near windowselect
  4399 000036C7 E90B040000          <1> 		jmp nexticonsel
  4400                              <1> 	iconselect:
  4401 000036CC 668B5606            <1> 		mov dx, [esi + 6]
  4402 000036D0 6689D0              <1> 		mov ax, dx
  4403 000036D3 668B4E08            <1> 		mov cx, [esi + 8]
  4404 000036D7 6689CB              <1> 		mov bx, cx
  4405 000036DA 6681C32000          <1> 		add bx, 32
  4406 000036DF 6601D0              <1> 		add ax, dx
  4407 000036E2 813D[1C360000]0100- <1> 		cmp dword [dragging], 1
  4408 000036EA 0000                <1>
  4409 000036EC 746F                <1> 		je dragicon
  4410 000036EE 813D[1C360000]0000- <1> 		cmp dword [dragging], 0
  4411 000036F6 0000                <1>
  4412 000036F8 7411                <1> 		je nodragiconcheck
  4413 000036FA 3935[1C360000]      <1> 		cmp dword [dragging], esi
  4414 00003700 0F85D1030000        <1> 		jne near nexticonsel
  4415 00003706 E952000000          <1> 		jmp dragicon
  4416                              <1> 	nodragiconcheck:
  4417 0000370B 663905[4C310000]    <1> 		cmp [mousecursorposition], ax
  4418 00003712 0F82BF030000        <1> 		jb near nexticonsel
  4419 00003718 66054000            <1> 		add ax, 64
  4420 0000371C 663905[4C310000]    <1> 		cmp [mousecursorposition], ax
  4421 00003723 0F87AE030000        <1> 		ja near nexticonsel
  4422 00003729 6629D0              <1> 		sub ax, dx
  4423 0000372C 66390D[4E310000]    <1> 		cmp [mousecursorposition + 2], cx
  4424 00003733 0F829E030000        <1> 		jb near nexticonsel
  4425 00003739 66391D[4E310000]    <1> 		cmp [mousecursorposition + 2], bx
  4426 00003740 0F8791030000        <1> 		ja near nexticonsel
  4427 00003746 668B460A            <1> 		mov ax, [esi + 10]
  4428 0000374A 66250100            <1> 		and ax, 1
  4429 0000374E 663D0100            <1> 		cmp ax, 1
  4430 00003752 0F84B6000000        <1> 		je near unselecticon
  4431 00003758 E98D000000          <1> 		jmp nodragicon
  4432                              <1> 	dragicon:
  4433 0000375D 663905[48310000]    <1> 		cmp [lastmouseposition], ax
  4434 00003764 0F826D030000        <1> 		jb near nexticonsel
  4435 0000376A 66054000            <1> 		add ax, 64
  4436 0000376E 663905[48310000]    <1> 		cmp [lastmouseposition], ax
  4437 00003775 0F875C030000        <1> 		ja near nexticonsel
  4438 0000377B 6629D0              <1> 		sub ax, dx
  4439 0000377E 66390D[4A310000]    <1> 		cmp [lastmouseposition + 2], cx
  4440 00003785 0F824C030000        <1> 		jb near nexticonsel
  4441 0000378B 66391D[4A310000]    <1> 		cmp [lastmouseposition + 2], bx
  4442 00003792 0F873F030000        <1> 		ja near nexticonsel
  4443 00003798 668B460A            <1> 		mov ax, [esi + 10]
  4444 0000379C 2410                <1> 		and al, 00010000b
  4445 0000379E 3C10                <1> 		cmp al, 00010000b
  4446 000037A0 7448                <1> 		je nodragicon
  4447 000037A2 8935[1C360000]      <1> 		mov [dragging], esi
  4448 000037A8 66D1E2              <1> 		shl dx, 1
  4449 000037AB 662B15[48310000]    <1> 		sub dx, [lastmouseposition]
  4450 000037B2 660315[4C310000]    <1> 		add dx, [mousecursorposition]
  4451 000037B9 66D1EA              <1> 		shr dx, 1
  4452 000037BC 66030D[4E310000]    <1> 		add cx, [mousecursorposition + 2]
  4453 000037C3 662B0D[4A310000]    <1> 		sub cx, [lastmouseposition + 2]
  4454 000037CA 663B15[66430000]    <1> 		cmp dx, [resolutionx2]
  4455 000037D1 7607                <1> 		jbe chkyresdrgicn
  4456 000037D3 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  4457                              <1> 	chkyresdrgicn:
  4458 000037DA 663B0D[62430000]    <1> 		cmp cx, [resolutiony]
  4459 000037E1 7607                <1> 		jbe nodragicon
  4460 000037E3 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  4461                              <1> 	nodragicon:
  4462 000037EA 66814E0A0100        <1> 		or word [esi + 10], 1
  4463 000037F0 8B5E0C              <1> 		mov ebx, [esi + 12]
  4464 000037F3 668B460A            <1> 		mov ax, [esi + 10]
  4465 000037F7 8B7602              <1> 		mov esi, [esi + 2]
  4466 000037FA C705[92460000]0000- <1> 		mov dword [codepointer], 0
  4467 00003802 0000                <1>
  4468 00003804 E8800A0000          <1> 		call showicon
  4469 00003809 E9E2020000          <1> 		jmp doneiconsel
  4470                              <1> 	unselecticon:
  4471 0000380E 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4472 00003814 8B5E0C              <1> 		mov ebx, [esi + 12]
  4473 00003817 668B460A            <1> 		mov ax, [esi + 10]
  4474 0000381B 8B7602              <1> 		mov esi, [esi + 2]
  4475 0000381E 891D[92460000]      <1> 		mov [codepointer], ebx
  4476 00003824 E8600A0000          <1> 		call showicon
  4477 00003829 E9C2020000          <1> 		jmp doneiconsel
  4478                              <1> 	textselected:
  4479 0000382E 8B5E02              <1> 		mov ebx, [esi + 2]
  4480 00003831 668B5606            <1> 		mov dx, [esi + 6]
  4481 00003835 6689D0              <1> 		mov ax, dx
  4482 00003838 668B4E08            <1> 		mov cx, [esi + 8]
  4483                              <1> 	lengthtesttext:
  4484 0000383C 803B00              <1> 		cmp byte [ebx], 0
  4485 0000383F 7407                <1> 		je donetesttextlength
  4486 00003841 43                  <1> 		inc ebx
  4487 00003842 66051000            <1> 		add ax, 16
  4488 00003846 EBF4                <1> 		jmp lengthtesttext
  4489                              <1> 	donetesttextlength:
  4490 00003848 6689CB              <1> 		mov bx, cx
  4491 0000384B 6681C30F00          <1> 		add bx, 15
  4492 00003850 813D[1C360000]0100- <1> 		cmp dword [dragging], 1
  4493 00003858 0000                <1>
  4494 0000385A 7468                <1> 		je dragtext
  4495 0000385C 813D[1C360000]0000- <1> 		cmp dword [dragging], 0
  4496 00003864 0000                <1>
  4497 00003866 7411                <1> 		je nodragtextcheck
  4498 00003868 3935[1C360000]      <1> 		cmp dword [dragging], esi
  4499 0000386E 0F8563020000        <1> 		jne near nexticonsel
  4500 00003874 E94B000000          <1> 		jmp dragtext
  4501                              <1> 	nodragtextcheck:
  4502 00003879 663915[4C310000]    <1> 		cmp [mousecursorposition], dx
  4503 00003880 0F8251020000        <1> 		jb near nexticonsel
  4504 00003886 663905[4C310000]    <1> 		cmp [mousecursorposition], ax
  4505 0000388D 0F8744020000        <1> 		ja near nexticonsel
  4506 00003893 66390D[4E310000]    <1> 		cmp [mousecursorposition + 2], cx
  4507 0000389A 0F8237020000        <1> 		jb near nexticonsel
  4508 000038A0 66391D[4E310000]    <1> 		cmp [mousecursorposition + 2], bx
  4509 000038A7 0F872A020000        <1> 		ja near nexticonsel
  4510 000038AD 668B460A            <1> 		mov ax, [esi + 10]
  4511 000038B1 66250100            <1> 		and ax, 1
  4512 000038B5 663D0100            <1> 		cmp ax, 1
  4513 000038B9 0F84AB000000        <1> 		je near unselecttext
  4514 000038BF E986000000          <1> 		jmp nodragtext
  4515                              <1> 	dragtext:
  4516 000038C4 663915[48310000]    <1> 		cmp [lastmouseposition], dx
  4517 000038CB 0F8206020000        <1> 		jb near nexticonsel
  4518 000038D1 663905[48310000]    <1> 		cmp [lastmouseposition], ax
  4519 000038D8 0F87F9010000        <1> 		ja near nexticonsel
  4520 000038DE 66390D[4A310000]    <1> 		cmp [lastmouseposition + 2], cx
  4521 000038E5 0F82EC010000        <1> 		jb near nexticonsel
  4522 000038EB 66391D[4A310000]    <1> 		cmp [lastmouseposition + 2], bx
  4523 000038F2 0F87DF010000        <1> 		ja near nexticonsel
  4524 000038F8 668B460A            <1> 		mov ax, [esi + 10]
  4525 000038FC 2410                <1> 		and al, 00010000b
  4526 000038FE 663D1000            <1> 		cmp ax, 00010000b
  4527 00003902 0F8442000000        <1> 		je near nodragtext
  4528 00003908 8935[1C360000]      <1> 		mov [dragging], esi
  4529 0000390E 662B15[48310000]    <1> 		sub dx, [lastmouseposition]
  4530 00003915 660315[4C310000]    <1> 		add dx, [mousecursorposition]
  4531 0000391C 66030D[4E310000]    <1> 		add cx, [mousecursorposition + 2]
  4532 00003923 662B0D[4A310000]    <1> 		sub cx, [lastmouseposition + 2]
  4533 0000392A 663B15[66430000]    <1> 		cmp dx, [resolutionx2]
  4534 00003931 7607                <1> 		jbe chkyresdrgtxt
  4535 00003933 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  4536                              <1> 	chkyresdrgtxt:
  4537 0000393A 663B0D[62430000]    <1> 		cmp cx, [resolutiony]
  4538 00003941 7607                <1> 		jbe nodragtext
  4539 00003943 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  4540                              <1> 	nodragtext:
  4541 0000394A 66814E0A0100        <1> 		or word [esi + 10], 1
  4542 00003950 8B5E0C              <1> 		mov ebx, [esi + 12]
  4543 00003953 891D[92460000]      <1> 		mov [codepointer], ebx
  4544 00003959 668B460A            <1> 		mov ax, [esi + 10]
  4545 0000395D 8B7602              <1> 		mov esi, [esi + 2]
  4546 00003960 E85C050000          <1> 		call showstring
  4547 00003965 E986010000          <1> 		jmp doneiconsel
  4548                              <1> 	unselecttext:
  4549 0000396A 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4550 00003970 8B5E0C              <1> 		mov ebx, [esi + 12]
  4551 00003973 668B460A            <1> 		mov ax, [esi + 10]
  4552 00003977 8B7602              <1> 		mov esi, [esi + 2]
  4553 0000397A C705[92460000]0000- <1> 		mov dword [codepointer], 0
  4554 00003982 0000                <1>
  4555 00003984 E838050000          <1> 		call showstring
  4556 00003989 E962010000          <1> 		jmp doneiconsel
  4557                              <1> windowselect:
  4558 0000398E 8B7E02              <1> 		mov edi, [esi + 2]
  4559 00003991 668B5606            <1> 		mov dx, [esi + 6]
  4560 00003995 6689D0              <1> 		mov ax, dx
  4561 00003998 668B4E08            <1> 		mov cx, [esi + 8]
  4562 0000399C 6689CB              <1> 		mov bx, cx
  4563 0000399F 6681C31000          <1> 		add bx, 16
  4564 000039A4 813D[1C360000]0100- <1> 		cmp dword [dragging], 1
  4565 000039AC 0000                <1>
  4566 000039AE 746D                <1> 		je dragwin
  4567 000039B0 813D[1C360000]0000- <1> 		cmp dword [dragging], 0
  4568 000039B8 0000                <1>
  4569 000039BA 7411                <1> 		je nodragwincheck
  4570 000039BC 3935[1C360000]      <1> 		cmp dword [dragging], esi
  4571 000039C2 0F850F010000        <1> 		jne near nexticonsel
  4572 000039C8 E950000000          <1> 		jmp dragwin
  4573                              <1> 	nodragwincheck:
  4574 000039CD 663905[4C310000]    <1> 		cmp [mousecursorposition], ax
  4575 000039D4 0F82FD000000        <1> 		jb near nexticonsel
  4576 000039DA 660307              <1> 		add ax, [edi]
  4577 000039DD 660307              <1> 		add ax, [edi]
  4578 000039E0 663905[4C310000]    <1> 		cmp [mousecursorposition], ax
  4579 000039E7 0F87EA000000        <1> 		ja near nexticonsel
  4580 000039ED 66390D[4E310000]    <1> 		cmp [mousecursorposition + 2], cx
  4581 000039F4 0F82DD000000        <1> 		jb near nexticonsel
  4582 000039FA 66391D[4E310000]    <1> 		cmp [mousecursorposition + 2], bx
  4583 00003A01 0F87D0000000        <1> 		ja near nexticonsel
  4584 00003A07 662D1400            <1> 		sub ax, 20
  4585 00003A0B 663905[4C310000]    <1> 		cmp [mousecursorposition], ax
  4586 00003A12 0F8795000000        <1> 		ja near killwin
  4587 00003A18 E97C000000          <1> 		jmp nodragwin
  4588                              <1> 	dragwin:
  4589 00003A1D 663905[48310000]    <1> 		cmp [lastmouseposition], ax
  4590 00003A24 0F82AD000000        <1> 		jb near nexticonsel
  4591 00003A2A 660307              <1> 		add ax, [edi]
  4592 00003A2D 660307              <1> 		add ax, [edi]
  4593 00003A30 663905[48310000]    <1> 		cmp [lastmouseposition], ax
  4594 00003A37 0F879A000000        <1> 		ja near nexticonsel
  4595 00003A3D 66390D[4A310000]    <1> 		cmp [lastmouseposition + 2], cx
  4596 00003A44 0F828D000000        <1> 		jb near nexticonsel
  4597 00003A4A 66391D[4A310000]    <1> 		cmp [lastmouseposition + 2], bx
  4598 00003A51 0F8780000000        <1> 		ja near nexticonsel
  4599 00003A57 8935[1C360000]      <1> 		mov [dragging], esi
  4600 00003A5D 662B15[48310000]    <1> 		sub dx, [lastmouseposition]
  4601 00003A64 660315[4C310000]    <1> 		add dx, [mousecursorposition]
  4602 00003A6B 66030D[4E310000]    <1> 		add cx, [mousecursorposition + 2]
  4603 00003A72 662B0D[4A310000]    <1> 		sub cx, [lastmouseposition + 2]
  4604 00003A79 663B15[66430000]    <1> 		cmp dx, [resolutionx2]
  4605 00003A80 7607                <1> 		jbe chkyresdrgwin
  4606 00003A82 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  4607                              <1> 	chkyresdrgwin:
  4608 00003A89 663B0D[62430000]    <1> 		cmp cx, [resolutiony]
  4609 00003A90 7607                <1> 		jbe nodragwin
  4610 00003A92 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  4611                              <1> 	nodragwin:
  4612 00003A99 8B5E0C              <1> 		mov ebx, [esi + 12]
  4613 00003A9C 668B460A            <1> 		mov ax, [esi + 10]
  4614 00003AA0 8B7602              <1> 		mov esi, [esi + 2]
  4615 00003AA3 E87B040000          <1> 		call showwindow
  4616 00003AA8 E943000000          <1> 		jmp doneiconsel
  4617                              <1> 	killwin:
  4618 00003AAD 66C7060000          <1> 		mov word [esi], 0
  4619 00003AB2 C705[F9030000]0000- <1> 		mov dword [user2codepoint], 0
  4620 00003ABA 0000                <1>
  4621 00003ABC C605[BC0E0000]00    <1> 		mov byte [termguion], 0
  4622 00003AC3 E881F8FFFF          <1> 		call guiclear
  4623 00003AC8 E8AD000000          <1> 		call reloadallgraphics
  4624 00003ACD E9FBF9FFFF          <1> 		jmp guistart
  4625 00003AD2 E93A000000          <1> 		jmp doneiconsel2
  4626                              <1> 	nexticonsel:
  4627 00003AD7 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4628 00003ADD 81C610000000        <1> 		add esi, 16
  4629 00003AE3 81FE[00120000]      <1> 		cmp esi, graphicstableend
  4630 00003AE9 7305                <1> 		jae doneiconsel
  4631 00003AEB E9ACFBFFFF          <1> 		jmp clicon2
  4632                              <1> 	doneiconsel:
  4633 00003AF0 813D[1C360000]0100- <1> 		cmp dword [dragging], 1
  4634 00003AF8 0000                <1>
  4635 00003AFA 7315                <1> 		jae doneiconsel2
  4636 00003AFC 813D[92460000]0000- <1> 		cmp dword [codepointer], 0
  4637 00003B04 0000                <1>
  4638 00003B06 7409                <1> 		je doneiconsel2
  4639 00003B08 8B1D[92460000]      <1> 		mov ebx, [codepointer]
  4640 00003B0E FFD3                <1> 		call ebx 
  4641 00003B10 C3                  <1> 		ret
  4642                              <1> 	doneiconsel2:
  4643 00003B11 A0[6E2D0000]        <1> 		mov al, [LBUTTON]
  4644 00003B16 A2[1A360000]        <1> 		mov [pLBUTTON], al
  4645 00003B1B A0[6F2D0000]        <1> 		mov al, [RBUTTON]
  4646 00003B20 A2[1B360000]        <1> 		mov [pRBUTTON], al
  4647 00003B25 66813D[1C360000]01- <1> 		cmp word [dragging], 1
  4648 00003B2D 00                  <1>
  4649 00003B2E 0F860A000000        <1> 		jbe near noreloadgraphicsclick
  4650 00003B34 E8AAF9FFFF          <1> call clearmousecursor
  4651 00003B39 E83C000000          <1> call reloadallgraphics
  4652                              <1> noreloadgraphicsclick:
  4653 00003B3E B900000000          <1> 		mov ecx, 0
  4654 00003B43 BA00000000          <1> 		mov edx, 0
  4655 00003B48 B400                <1> 		mov ah, 0
  4656 00003B4A B0FE                <1> 		mov al, 254
  4657 00003B4C 668B15[4C310000]    <1> 		mov dx, [mousecursorposition]
  4658 00003B53 668B0D[4E310000]    <1> 		mov cx, [mousecursorposition + 2]
  4659 00003B5A 66BBE738            <1> 		mov bx, 0011100011100111b
  4660 00003B5E C605[DF340000]01    <1> 		mov byte [showcursorfonton], 1
  4661 00003B65 E80C080000          <1> 		call showfontvesa
  4662 00003B6A C605[DF340000]00    <1> 		mov byte [showcursorfonton], 0
  4663 00003B71 C3                  <1> 		ret
  4664 00003B72 00000000            <1> lastdrag dw 0,0
  4665 00003B76 00000000            <1> grpctblpos dw 0,0
  4666                              <1> 
  4667                              <1> reloadallgraphics:
  4668 00003B7A BF[00100000]        <1> 		mov edi, graphicstable
  4669                              <1> reloadgraphicsloop:
  4670 00003B7F 8B7702              <1> 		mov esi, [edi + 2]
  4671 00003B82 668B5706            <1> 		mov dx, [edi + 6]
  4672 00003B86 668B4F08            <1> 		mov cx, [edi + 8]
  4673 00003B8A 668B07              <1> 		mov ax, [edi]
  4674 00003B8D 668B5F0A            <1> 		mov bx, [edi + 10]
  4675 00003B91 893D[763B0000]      <1> 		mov [grpctblpos], edi
  4676 00003B97 3B3D[1C360000]      <1> 		cmp edi, [dragging]
  4677 00003B9D 741E                <1> 		je loadedgraphic
  4678 00003B9F 663D0100            <1> 		cmp ax, 1
  4679 00003BA3 0F8431000000        <1> 		je near icongraphic
  4680 00003BA9 663D0200            <1> 		cmp ax, 2
  4681 00003BAD 0F8437000000        <1> 		je near stringgraphic
  4682 00003BB3 663D0300            <1> 		cmp ax, 3
  4683 00003BB7 0F8416000000        <1> 		je near windowgraphic
  4684 00003BBD 8B3D[763B0000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  4685 00003BC3 81C710000000        <1> 		add edi, 16
  4686 00003BC9 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4687 00003BCF 7329                <1> 		jae donereloadgraphics
  4688 00003BD1 EBAC                <1> 		jmp reloadgraphicsloop
  4689 00003BD3 E89E030000          <1> windowgraphic:	call showwindow2
  4690 00003BD8 EBE3                <1> 		jmp loadedgraphic
  4691 00003BDA 80E301              <1> icongraphic:	and bl, 1
  4692 00003BDD 881D[96460000]      <1> 		mov [iconselected], bl
  4693 00003BE3 E8B4060000          <1> 		call showicon2
  4694 00003BE8 EBD3                <1> 		jmp loadedgraphic
  4695 00003BEA 80E301              <1> stringgraphic:  and bl, 1
  4696 00003BED 881D[E1340000]      <1> 		mov [mouseselecton], bl
  4697 00003BF3 E8DC020000          <1> 		call showstring2
  4698 00003BF8 EBC3                <1> 		jmp loadedgraphic
  4699                              <1> donereloadgraphics:
  4700 00003BFA 8B3D[1C360000]      <1> 		mov edi, [dragging]
  4701 00003C00 81FF[00100000]      <1> 		cmp edi, graphicstable
  4702 00003C06 7226                <1> 		jb notcorrectdrag
  4703 00003C08 668B07              <1> 		mov ax, [edi]
  4704 00003C0B 8B7702              <1> 		mov esi, [edi + 2]
  4705 00003C0E 668B5706            <1> 		mov dx, [edi + 6]
  4706 00003C12 668B4F08            <1> 		mov cx, [edi + 8]
  4707 00003C16 668B5F0A            <1> 		mov bx, [edi + 10]
  4708 00003C1A 663D0100            <1> 		cmp ax, 1
  4709 00003C1E 750F                <1> 		jne noticondragging
  4710 00003C20 80E301              <1> 		and bl, 1
  4711 00003C23 881D[96460000]      <1> 		mov [iconselected], bl
  4712 00003C29 E86E060000          <1> 		call showicon2
  4713                              <1> notcorrectdrag:
  4714 00003C2E C3                  <1> 		ret
  4715                              <1> 
  4716                              <1> 	noticondragging:
  4717 00003C2F 663D0200            <1> 		cmp ax, 2
  4718 00003C33 75F9                <1> 		jne notcorrectdrag
  4719 00003C35 80E301              <1> 		and bl, 1
  4720 00003C38 881D[E1340000]      <1> 		mov [mouseselecton], bl
  4721 00003C3E E891020000          <1> 		call showstring2
  4722 00003C43 EBE9                <1> 		jmp notcorrectdrag
  4723                              <1> 
  4724 00003C45 00<rept>            <1> grphbuf times 16 db 0
  4725                              <1> 	graphicsadd:
  4726 00003C55 BF[00100000]        <1> 		mov edi, graphicstable
  4727                              <1> 	shwgrph1:
  4728 00003C5A 397702              <1> 		cmp dword [edi + 2], esi
  4729 00003C5D 7414                <1> 		je showgraphicsreplace2
  4730 00003C5F 81C710000000        <1> 		add edi, 16
  4731 00003C65 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4732 00003C6B 0F8335020000        <1> 		jae near showgraphicsnew
  4733 00003C71 EBE7                <1> 		jmp shwgrph1
  4734                              <1> 	showgraphicsreplace2:
  4735 00003C73 8935[473C0000]      <1> 		mov [grphbuf + 2], esi
  4736 00003C79 668915[4B3C0000]    <1> 		mov [grphbuf + 6], dx
  4737 00003C80 66890D[4D3C0000]    <1> 		mov [grphbuf + 8], cx
  4738 00003C87 891D[513C0000]      <1> 		mov [grphbuf + 12], ebx
  4739 00003C8D B700                <1> 		mov bh, 0
  4740 00003C8F 88E3                <1> 		mov bl, ah
  4741 00003C91 B400                <1> 		mov ah, 0
  4742 00003C93 66A3[4F3C0000]      <1> 		mov [grphbuf + 10], ax	
  4743 00003C99 66891D[453C0000]    <1> 		mov [grphbuf], bx
  4744 00003CA0 66A1[453C0000]      <1> 		mov ax, [grphbuf]
  4745 00003CA6 663D0100            <1> 		cmp ax, 1
  4746 00003CAA 0F8419000000        <1> 		je near replaceicon
  4747 00003CB0 663D0200            <1> 		cmp ax, 2
  4748 00003CB4 0F8493000000        <1> 		je near replacestring
  4749 00003CBA 663D0300            <1> 		cmp ax, 3
  4750 00003CBE 0F840F010000        <1> 		je near replacewindow
  4751 00003CC4 E9BA010000          <1> 		jmp showgraphicsreplace
  4752                              <1> 	replaceicon:
  4753 00003CC9 893D[20360000]      <1> 		mov [lastpos], edi
  4754 00003CCF 8935[24360000]      <1> 		mov [lastpos + 4], esi
  4755 00003CD5 8B7702              <1> 		mov esi, [edi + 2]
  4756 00003CD8 668B5F0C            <1> 		mov bx, [edi + 12]
  4757 00003CDC 668B5706            <1> 		mov dx, [edi + 6]
  4758 00003CE0 668B4F08            <1> 		mov cx, [edi + 8]
  4759 00003CE4 668B06              <1> 		mov ax, [esi]
  4760 00003CE7 66A3[28360000]      <1> 		mov [colorbuf], ax
  4761 00003CED 66A1[86330000]      <1> 		mov ax, [background]
  4762 00003CF3 668906              <1> 		mov [esi], ax
  4763 00003CF6 8B5F0C              <1> 		mov ebx, [edi + 12]
  4764 00003CF9 668B470A            <1> 		mov ax, [edi + 10]
  4765 00003CFD 2401                <1> 		and al, 1
  4766 00003CFF A2[96460000]        <1> 		mov [iconselected], al
  4767 00003D04 668B470A            <1> 		mov ax, [edi + 10]
  4768 00003D08 E88F050000          <1> 		call showicon2
  4769 00003D0D 8B3D[20360000]      <1> 		mov edi, [lastpos]
  4770 00003D13 8B7702              <1> 		mov esi, [edi + 2]
  4771 00003D16 66A1[28360000]      <1> 		mov ax, [colorbuf]
  4772 00003D1C 668906              <1> 		mov [esi], ax
  4773 00003D1F 8B35[24360000]      <1> 		mov esi, [lastpos + 4]
  4774 00003D25 668B15[4B3C0000]    <1> 		mov dx, [grphbuf + 6]
  4775 00003D2C 668B0D[4D3C0000]    <1> 		mov cx, [grphbuf + 8]
  4776 00003D33 668B1D[453C0000]    <1> 		mov bx, [grphbuf]
  4777 00003D3A 66A1[4F3C0000]      <1> 		mov ax, [grphbuf + 10]
  4778 00003D40 88DC                <1> 		mov ah, bl
  4779 00003D42 8B1D[513C0000]      <1> 		mov ebx, [grphbuf + 12]
  4780 00003D48 E936010000          <1> 		jmp showgraphicsreplace
  4781                              <1> 	replacestring:
  4782 00003D4D 893D[20360000]      <1> 		mov [lastpos], edi
  4783 00003D53 8935[24360000]      <1> 		mov [lastpos + 4], esi
  4784 00003D59 8B5F0C              <1> 		mov ebx, [edi + 12]
  4785 00003D5C 8B7702              <1> 		mov esi, [edi + 2]
  4786 00003D5F 668B5706            <1> 		mov dx, [edi + 6]
  4787 00003D63 668B4F08            <1> 		mov cx, [edi + 8]
  4788 00003D67 66A1[103F0000]      <1> 		mov ax, [colorfont2]
  4789 00003D6D 66A3[28360000]      <1> 		mov [colorbuf], ax
  4790 00003D73 66A1[86330000]      <1> 		mov ax, [background]
  4791 00003D79 66A3[103F0000]      <1> 		mov [colorfont2], ax		
  4792 00003D7F 8B5F0C              <1> 		mov ebx, [edi + 12]
  4793 00003D82 668B470A            <1> 		mov ax, [edi + 10]
  4794 00003D86 2401                <1> 		and al, 1
  4795 00003D88 A2[E1340000]        <1> 		mov [mouseselecton], al
  4796 00003D8D 668B470A            <1> 		mov ax, [edi + 10]
  4797 00003D91 E83E010000          <1> 		call showstring2
  4798 00003D96 66A1[28360000]      <1> 		mov ax, [colorbuf]
  4799 00003D9C 66A3[103F0000]      <1> 		mov [colorfont2], ax
  4800 00003DA2 8B3D[20360000]      <1> 		mov edi, [lastpos]
  4801 00003DA8 8B7702              <1> 		mov esi, [edi + 2]
  4802 00003DAB 668B15[4B3C0000]    <1> 		mov dx, [grphbuf + 6]
  4803 00003DB2 668B0D[4D3C0000]    <1> 		mov cx, [grphbuf + 8]
  4804 00003DB9 668B1D[453C0000]    <1> 		mov bx, [grphbuf]
  4805 00003DC0 66A1[4F3C0000]      <1> 		mov ax, [grphbuf + 10]
  4806 00003DC6 88DC                <1> 		mov ah, bl
  4807 00003DC8 8B1D[513C0000]      <1> 		mov ebx, [grphbuf + 12]
  4808 00003DCE E9B0000000          <1> 		jmp showgraphicsreplace
  4809                              <1> 	replacewindow:
  4810 00003DD3 893D[20360000]      <1> 		mov [lastpos], edi
  4811 00003DD9 8935[24360000]      <1> 		mov [lastpos + 4], esi
  4812 00003DDF 8B7702              <1> 		mov esi, [edi + 2]
  4813 00003DE2 8B3D[1F3F0000]      <1> 		mov edi, [windowbufloc]
  4814 00003DE8 BA00000000          <1> 		mov edx, 0
  4815 00003DED 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4816 00003DF4 C1E204              <1> 		shl edx, 4
  4817 00003DF7 29D7                <1> 		sub edi, edx
  4818 00003DF9 BA00000000          <1> 		mov edx, 0
  4819 00003DFE 668B16              <1> 		mov dx, [esi]
  4820 00003E01 660316              <1> 		add dx, [esi]
  4821 00003E04 668B4E02            <1> 		mov cx, [esi + 2]
  4822 00003E08 6681C11000          <1> 		add cx, 16
  4823 00003E0D 66A1[86330000]      <1> 		mov ax, [background]
  4824                              <1> 	clearwindow:
  4825 00003E13 668907              <1> 		mov [edi], ax
  4826 00003E16 81C702000000        <1> 		add edi, 2
  4827 00003E1C 81EA02000000        <1> 		sub edx, 2
  4828 00003E22 81FA00000000        <1> 		cmp edx, 0
  4829 00003E28 75E9                <1> 		jne clearwindow
  4830 00003E2A 6649                <1> 		dec cx
  4831 00003E2C 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4832 00003E33 662B16              <1> 		sub dx, [esi]
  4833 00003E36 662B16              <1> 		sub dx, [esi]
  4834 00003E39 01D7                <1> 		add edi, edx
  4835 00003E3B 668B16              <1> 		mov dx, [esi]
  4836 00003E3E 660316              <1> 		add dx, [esi]
  4837 00003E41 6681F90000          <1> 		cmp cx, 0
  4838 00003E46 75CB                <1> 		jne clearwindow
  4839 00003E48 C605[BD0E0000]00    <1> 		mov byte [termcopyon], 0
  4840 00003E4F 8B3D[20360000]      <1> 		mov edi, [lastpos]
  4841 00003E55 8B35[473C0000]      <1> 		mov esi, [grphbuf + 2]
  4842 00003E5B 668B15[4B3C0000]    <1> 		mov dx, [grphbuf + 6]
  4843 00003E62 668B0D[4D3C0000]    <1> 		mov cx, [grphbuf + 8]
  4844 00003E69 668B1D[453C0000]    <1> 		mov bx, [grphbuf]
  4845 00003E70 66A1[4F3C0000]      <1> 		mov ax, [grphbuf + 10]
  4846 00003E76 88DC                <1> 		mov ah, bl
  4847 00003E78 8B1D[513C0000]      <1> 		mov ebx, [grphbuf + 12]
  4848 00003E7E E900000000          <1> 		jmp showgraphicsreplace
  4849                              <1> 	showgraphicsreplace:
  4850 00003E83 897702              <1> 		mov [edi + 2], esi
  4851 00003E86 66895706            <1> 		mov [edi + 6], dx
  4852 00003E8A 66894F08            <1> 		mov [edi + 8], cx
  4853 00003E8E 895F0C              <1> 		mov [edi + 12], ebx
  4854 00003E91 B700                <1> 		mov bh, 0
  4855 00003E93 88E3                <1> 		mov bl, ah
  4856 00003E95 B400                <1> 		mov ah, 0
  4857 00003E97 6689470A            <1> 		mov [edi + 10], ax
  4858 00003E9B 66891F              <1> 		mov [edi], bx
  4859 00003E9E 8B5F0C              <1> 		mov ebx, [edi + 12]
  4860 00003EA1 668B470A            <1> 		mov ax, [edi + 10]
  4861 00003EA5 C3                  <1> 		ret
  4862                              <1> 	showgraphicsnew:
  4863 00003EA6 BF[00100000]        <1> 		mov edi, graphicstable
  4864                              <1> 	shwgrph2:
  4865 00003EAB 66813F0000          <1> 		cmp word [edi], 0
  4866 00003EB0 74D1                <1> 		je showgraphicsreplace
  4867 00003EB2 81C710000000        <1> 		add edi, 16
  4868 00003EB8 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4869 00003EBE 72EB                <1> 		jb shwgrph2
  4870                              <1> 	showgraphicsdone:
  4871 00003EC0 C3                  <1> 		ret
  4872                              <1> 
  4873                              <1> 	showstring:
  4874 00003EC1 A2[E1340000]        <1> 		mov [mouseselecton], al
  4875 00003EC6 8025[E1340000]01    <1> 		and byte [mouseselecton], 1
  4876 00003ECD B402                <1> 		mov ah, 2
  4877 00003ECF E881FDFFFF          <1> 		call graphicsadd
  4878                              <1> 	showstring2:
  4879 00003ED4 B400                <1> 		mov ah, 0
  4880 00003ED6 8A06                <1> 		mov al, [esi]
  4881 00003ED8 3C00                <1> 		cmp al, 0
  4882 00003EDA 742C                <1> 		je doneshowstring
  4883 00003EDC 46                  <1> 		inc esi
  4884 00003EDD 3CFF                <1> 		cmp al, 255
  4885 00003EDF 74F3                <1> 		je showstring2
  4886 00003EE1 8935[3F460000]      <1> 		mov [showstringesi], esi
  4887 00003EE7 668B1D[103F0000]    <1> 		mov bx, [colorfont2]
  4888 00003EEE E883040000          <1> 		call showfontvesa
  4889 00003EF3 3C0D                <1> 		cmp al, 13
  4890 00003EF5 7409                <1> 		je noproceedshst
  4891 00003EF7 3C0A                <1> 		cmp al, 10
  4892 00003EF9 7405                <1> 		je noproceedshst
  4893 00003EFB 6681C20800          <1> 		add dx, 8
  4894                              <1> 		noproceedshst
  4895 00003F00 8B35[3F460000]      <1> 		mov esi, [showstringesi]
  4896 00003F06 EBCC                <1> 		jmp showstring2
  4897                              <1> 	doneshowstring:
  4898 00003F08 C605[E1340000]00    <1> 		mov byte [mouseselecton], 0
  4899 00003F0F C3                  <1> 		ret
  4900                              <1> 
  4901 00003F10 FFFF                <1> colorfont2 dw 0xFFFF
  4902 00003F12 00                  <1> colorcache db 0
  4903 00003F13 0000                <1> winvcopystx dw 0
  4904 00003F15 0000                <1> winvcopysty dw 0
  4905 00003F17 0000                <1> winvcopydx dw 0
  4906 00003F19 0000                <1> winvcopycx dw 0
  4907 00003F1B FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4908 00003F1F 00000000            <1> windowbufloc: dw 0,0
  4909                              <1> 
  4910                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4911 00003F23 C605[BC0E0000]01    <1> 		mov byte [termguion], 1
  4912 00003F2A 6681C11000          <1> 		add cx, 16
  4913 00003F2F 668915[133F0000]    <1> 		mov [winvcopystx], dx
  4914 00003F36 66890D[153F0000]    <1> 		mov [winvcopysty], cx
  4915 00003F3D 668B16              <1> 		mov dx, [esi]
  4916 00003F40 668B4E02            <1> 		mov cx, [esi + 2]
  4917 00003F44 6601D2              <1> 		add dx, dx
  4918 00003F47 668915[173F0000]    <1> 		mov [winvcopydx], dx
  4919 00003F4E 66890D[193F0000]    <1> 		mov [winvcopycx], cx
  4920 00003F55 668B0D[153F0000]    <1> 		mov cx, [winvcopysty]
  4921 00003F5C 6681E91000          <1> 		sub cx, 16
  4922 00003F61 668B15[133F0000]    <1> 		mov dx, [winvcopystx]
  4923 00003F68 C605[BD0E0000]00    <1> 		mov byte [termcopyon], 0
  4924 00003F6F B403                <1> 		mov ah, 3
  4925 00003F71 E8DFFCFFFF          <1> 		call graphicsadd
  4926                              <1> 	showwindow2:
  4927 00003F76 6681C11000          <1> 		add cx, 16
  4928 00003F7B 668915[133F0000]    <1> 		mov [winvcopystx], dx
  4929 00003F82 66890D[153F0000]    <1> 		mov [winvcopysty], cx
  4930 00003F89 668B16              <1> 		mov dx, [esi]
  4931 00003F8C 668B4E02            <1> 		mov cx, [esi + 2]
  4932 00003F90 6601D2              <1> 		add dx, dx
  4933 00003F93 668915[173F0000]    <1> 		mov [winvcopydx], dx
  4934 00003F9A 66890D[193F0000]    <1> 		mov [winvcopycx], cx
  4935 00003FA1 8B3D[1F3F0000]      <1> 		mov edi, [windowbufloc]
  4936 00003FA7 BA00000000          <1> 		mov edx, 0
  4937 00003FAC 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4938 00003FB3 C1E204              <1> 		shl edx, 4
  4939 00003FB6 29D7                <1> 		sub edi, edx
  4940 00003FB8 803D[BD0E0000]00    <1> 		cmp byte [termcopyon], 0
  4941 00003FBF 753E                <1> 		jne nocleartitlebarpos
  4942 00003FC1 8B3D[746A0000]      <1> 		mov edi, [physbaseptr]
  4943 00003FC7 BA00000000          <1> 		mov edx, 0
  4944 00003FCC 668B15[133F0000]    <1> 		mov dx, [winvcopystx]
  4945 00003FD3 01D7                <1> 		add edi, edx
  4946 00003FD5 668B0D[153F0000]    <1> 		mov cx, [winvcopysty]
  4947 00003FDC 6681E91000          <1> 		sub cx, 16
  4948 00003FE1 6681F90000          <1> 		cmp cx, 0
  4949 00003FE6 7417                <1> 		je nocleartitlebarpos
  4950                              <1> 	cleartitlebarpos:
  4951 00003FE8 BA00000000          <1> 		mov edx, 0
  4952 00003FED 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4953 00003FF4 01D7                <1> 		add edi, edx
  4954 00003FF6 6649                <1> 		dec cx
  4955 00003FF8 6681F90000          <1> 		cmp cx, 0
  4956 00003FFD 75E9                <1> 		jne cleartitlebarpos
  4957                              <1> 	nocleartitlebarpos:
  4958 00003FFF 66B91000            <1> 		mov cx, 16
  4959 00004003 668B15[173F0000]    <1> 		mov dx, [winvcopydx]
  4960 0000400A 6681F90000          <1> 		cmp cx, 0
  4961 0000400F 0F844B000000        <1> 		je near canceltitlebarput
  4962 00004015 6681FA0000          <1> 		cmp dx, 0
  4963 0000401A 0F8440000000        <1> 		je near canceltitlebarput
  4964                              <1> 	titlebarput:
  4965 00004020 66A1[1B3F0000]      <1> 		mov ax, [windowcolor]
  4966 00004026 668907              <1> 		mov [edi], ax
  4967 00004029 6681EA0200          <1> 		sub dx, 2
  4968 0000402E 81C702000000        <1> 		add edi, 2
  4969 00004034 6681FA0000          <1> 		cmp dx, 0
  4970 00004039 75E5                <1> 		jne titlebarput
  4971 0000403B BA00000000          <1> 		mov edx, 0
  4972 00004040 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  4973 00004047 6649                <1> 		dec cx
  4974 00004049 662B15[173F0000]    <1> 		sub dx, [winvcopydx]
  4975 00004050 01D7                <1> 		add edi, edx
  4976 00004052 668B15[173F0000]    <1> 		mov dx, [winvcopydx]
  4977 00004059 6681F90000          <1> 		cmp cx, 0
  4978 0000405E 75C0                <1> 		jne titlebarput
  4979                              <1> 	canceltitlebarput:
  4980 00004060 893D[1F3F0000]      <1> 		mov [windowbufloc], edi
  4981 00004066 803D[BD0E0000]02    <1> 		cmp byte [termcopyon], 2
  4982 0000406D 0F8463000000        <1> 		je near winvcpst
  4983 00004073 66B80000            <1> 		mov ax, 0
  4984 00004077 81C604000000        <1> 		add esi, 4
  4985 0000407D 668B15[133F0000]    <1> 		mov dx, [winvcopystx]
  4986 00004084 668B0D[153F0000]    <1> 		mov cx, [winvcopysty]
  4987 0000408B 6681E91000          <1> 		sub cx, 16
  4988 00004090 66BB0000            <1> 		mov bx, 0
  4989 00004094 C605[E1340000]01    <1> 		mov byte [mouseselecton], 1
  4990 0000409B E834FEFFFF          <1> 		call showstring2
  4991 000040A0 B058                <1> 		mov al, "X"
  4992 000040A2 B400                <1> 		mov ah, 0
  4993 000040A4 668B1D[103F0000]    <1> 		mov bx, [colorfont2]
  4994 000040AB 668B15[133F0000]    <1> 		mov dx, [winvcopystx]
  4995 000040B2 668B0D[153F0000]    <1> 		mov cx, [winvcopysty]
  4996 000040B9 6681E91000          <1> 		sub cx, 16
  4997 000040BE 6681EA1400          <1> 		sub dx, 20
  4998 000040C3 660315[173F0000]    <1> 		add dx, [winvcopydx]
  4999 000040CA C605[E1340000]01    <1> 		mov byte [mouseselecton], 1
  5000 000040D1 E8A0020000          <1> 		call showfontvesa
  5001                              <1> 	winvcpst:
  5002 000040D6 8B3D[1F3F0000]      <1> 		mov edi, [windowbufloc]
  5003 000040DC E957000000          <1> 		jmp windowvideocopyset
  5004                              <1> 
  5005                              <1> 	windowvideocopy:
  5006 000040E1 8B3D[1F3F0000]      <1> 		mov edi, [windowbufloc]
  5007 000040E7 3B3D[746A0000]      <1> 		cmp edi, [physbaseptr]
  5008 000040ED 0F8345000000        <1> 		jae near windowvideocopyset
  5009 000040F3 B900000000          <1> 		mov ecx, 0
  5010 000040F8 BA00000000          <1> 		mov edx, 0
  5011 000040FD 668B15[133F0000]    <1> 		mov dx, [winvcopystx]
  5012 00004104 668B0D[153F0000]    <1> 		mov cx, [winvcopysty]
  5013 0000410B 8B3D[746A0000]      <1> 		mov edi, [physbaseptr]
  5014 00004111 01D7                <1> 		add edi, edx
  5015 00004113 81F900000000        <1> 		cmp ecx, 0
  5016 00004119 741D                <1> 		je windowvideocopyset
  5017                              <1> 	yrescopylp:
  5018 0000411B BA00000000          <1> 		mov edx, 0
  5019 00004120 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  5020 00004127 01D7                <1> 		add edi, edx
  5021 00004129 6649                <1> 		dec cx
  5022 0000412B 6681F90000          <1> 		cmp cx, 0
  5023 00004130 75E9                <1> 		jne yrescopylp
  5024 00004132 893D[1F3F0000]      <1> 		mov [windowbufloc], edi
  5025                              <1> 	windowvideocopyset:
  5026 00004138 66B90000            <1> 		mov cx, 0
  5027 0000413C 66890D[81420000]    <1> 		mov [charposline], cx
  5028 00004143 BE[8F1C0000]        <1> 		mov esi, videobuf2
  5029 00004148 8935[83420000]      <1> 		mov [charposvbuf], esi
  5030 0000414E 8A5E01              <1> 		mov bl, [esi + 1]
  5031 00004151 881D[123F0000]      <1> 		mov [colorcache], bl
  5032 00004157 8A1E                <1> 		mov bl, [esi]
  5033 00004159 B700                <1> 		mov bh, 0
  5034 0000415B 66C1E304            <1> 		shl bx, 4
  5035 0000415F 678AB7[3C58]        <1> 		mov dh, [fonts + bx]
  5036 00004164 D0CE                <1> 		ror dh, 1
  5037 00004166 89FE                <1> 		mov esi, edi
  5038                              <1> 	copywindow:
  5039 00004168 B201                <1> 		mov dl, 1
  5040 0000416A D0C6                <1> 		rol dh, 1
  5041 0000416C 20F2                <1> 		and dl, dh
  5042 0000416E 803D[123F0000]10    <1> 		cmp byte [colorcache], 0x10
  5043 00004175 731C                <1> 		jae switchwincolors
  5044 00004177 66A1[1D3F0000]      <1> 		mov ax, [windowcolor + 2]
  5045 0000417D 668907              <1> 		mov [edi], ax
  5046 00004180 80FA00              <1> 		cmp dl, 0
  5047 00004183 7425                <1> 		je nowritewin
  5048 00004185 66A1[1B3F0000]      <1> 		mov ax, [windowcolor]
  5049 0000418B 668907              <1> 		mov [edi], ax
  5050 0000418E E917000000          <1> 		jmp nowritewin
  5051                              <1> 	switchwincolors:
  5052 00004193 66A1[1B3F0000]      <1> 		mov ax, [windowcolor]
  5053 00004199 668907              <1> 		mov [edi], ax
  5054 0000419C 80FA00              <1> 		cmp dl, 0
  5055 0000419F 7409                <1> 		je nowritewin
  5056 000041A1 66A1[1D3F0000]      <1> 		mov ax, [windowcolor + 2]
  5057 000041A7 668907              <1> 		mov [edi], ax
  5058                              <1> 	nowritewin:
  5059 000041AA 81C702000000        <1> 		add edi, 2
  5060 000041B0 FEC1                <1> 		inc cl
  5061 000041B2 80F908              <1> 		cmp cl, 8
  5062 000041B5 75B1                <1> 		jne copywindow
  5063 000041B7 6643                <1> 		inc bx
  5064 000041B9 B100                <1> 		mov cl, 0
  5065 000041BB BA00000000          <1> 		mov edx, 0
  5066 000041C0 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  5067 000041C7 01D6                <1> 		add esi, edx
  5068 000041C9 89F7                <1> 		mov edi, esi
  5069 000041CB 678AB7[3C58]        <1> 		mov dh, [fonts + bx]
  5070 000041D0 D0CE                <1> 		ror dh, 1
  5071 000041D2 FEC5                <1> 		inc ch
  5072 000041D4 80FD10              <1> 		cmp ch, 16
  5073 000041D7 758F                <1> 		jne copywindow
  5074 000041D9 66B90000            <1> 		mov cx, 0
  5075 000041DD 8B3D[83420000]      <1> 		mov edi, [charposvbuf]
  5076 000041E3 81C702000000        <1> 		add edi, 2
  5077 000041E9 81FF[4F2F0000]      <1> 		cmp edi, videobufend
  5078 000041EF 7379                <1> 		jae donewincopynow
  5079 000041F1 8A5F01              <1> 		mov bl, [edi + 1]
  5080 000041F4 881D[123F0000]      <1> 		mov [colorcache], bl
  5081 000041FA 8A1F                <1> 		mov bl, [edi]
  5082 000041FC B700                <1> 		mov bh, 0
  5083 000041FE 66C1E304            <1> 		shl bx, 4
  5084 00004202 893D[83420000]      <1> 		mov [charposvbuf], edi
  5085 00004208 BA00000000          <1> 		mov edx, 0
  5086 0000420D 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  5087 00004214 C1E204              <1> 		shl edx, 4
  5088 00004217 29D6                <1> 		sub esi, edx
  5089 00004219 81C610000000        <1> 		add esi, 16
  5090 0000421F 89F7                <1> 		mov edi, esi
  5091 00004221 668B0D[81420000]    <1> 		mov cx, [charposline]
  5092 00004228 6641                <1> 		inc cx
  5093 0000422A 6681F95000          <1> 		cmp cx, 80
  5094 0000422F 7317                <1> 		jae fixwindowcopy
  5095 00004231 66890D[81420000]    <1> 		mov [charposline], cx
  5096 00004238 66B90000            <1> 		mov cx, 0
  5097 0000423C 678AB7[3C58]        <1> 		mov dh, [fonts + bx]
  5098 00004241 D0CE                <1> 		ror dh, 1
  5099 00004243 E920FFFFFF          <1> 		jmp copywindow
  5100                              <1> fixwindowcopy:
  5101 00004248 66B90000            <1> 		mov cx, 0
  5102 0000424C 66890D[81420000]    <1> 		mov [charposline], cx
  5103 00004253 662B15[173F0000]    <1> 		sub dx, [winvcopydx]
  5104 0000425A 01D6                <1> 		add esi, edx
  5105 0000425C 89F7                <1> 		mov edi, esi
  5106 0000425E 678AB7[3C58]        <1> 		mov dh, [fonts + bx]
  5107 00004263 D0CE                <1> 		ror dh, 1
  5108 00004265 E9FEFEFFFF          <1> 		jmp copywindow
  5109                              <1> donewincopynow:
  5110 0000426A E879D2FFFF          <1> 		call switchtermcursor
  5111 0000426F 803D[BD0E0000]01    <1> 		cmp byte [termcopyon], 1
  5112 00004276 7501                <1> 		jne forgetresetstuff
  5113 00004278 61                  <1> 		popa
  5114                              <1> forgetresetstuff:
  5115 00004279 C605[BD0E0000]00    <1> 		mov byte [termcopyon], 0
  5116 00004280 C3                  <1> 		ret
  5117                              <1> 
  5118 00004281 0000                <1> charposline dw 0
  5119 00004283 00000000            <1> charposvbuf dw 0,0
  5120 00004287 0000                <1> iconcolor dw 0
  5121                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  5122 00004289 A2[96460000]        <1> 		mov [iconselected], al
  5123 0000428E 8025[96460000]01    <1> 		and byte [iconselected], 1
  5124 00004295 B401                <1> 		mov ah, 1
  5125 00004297 E8B9F9FFFF          <1> 		call graphicsadd
  5126                              <1> 	showicon2:
  5127 0000429C 8B3D[746A0000]      <1> 		mov edi, [physbaseptr]
  5128 000042A2 6601D2              <1> 		add dx, dx
  5129 000042A5 663B15[66430000]    <1> 		cmp dx, [resolutionx2]
  5130 000042AC 720C                <1> 		jb screenxgood
  5131 000042AE 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  5132 000042B5 6681EA4000          <1> 		sub dx, 64
  5133                              <1> 	screenxgood:
  5134 000042BA 6681F90000          <1> 		cmp cx, 0
  5135 000042BF 7425                <1> 		je noscreenygoodchk
  5136 000042C1 663B0D[62430000]    <1> 		cmp cx, [resolutiony]
  5137 000042C8 720C                <1> 		jb screenygood
  5138 000042CA 668B0D[62430000]    <1> 		mov cx, [resolutiony]
  5139 000042D1 6681E92000          <1> 		sub cx, 32
  5140                              <1> 	screenygood:
  5141 000042D6 BB00000000          <1> 		mov ebx, 0
  5142 000042DB 668B1D[66430000]    <1> 		mov bx, [resolutionx2]
  5143 000042E2 01DF                <1> 		add edi, ebx
  5144 000042E4 E2F0                <1> 		loop screenygood
  5145                              <1> 	noscreenygoodchk:
  5146 000042E6 BB00000000          <1> 		mov ebx, 0
  5147 000042EB 6689D3              <1> 		mov bx, dx
  5148 000042EE 01DF                <1> 		add edi, ebx
  5149 000042F0 66B90000            <1> 		mov cx, 0
  5150 000042F4 668B06              <1> 		mov ax, [esi]
  5151 000042F7 81C602000000        <1> 		add esi, 2
  5152 000042FD 66A3[87420000]      <1> 		mov [iconcolor], ax
  5153                              <1> 	writeicon:
  5154 00004303 8B06                <1> 		mov eax, [esi]
  5155 00004305 D1C0                <1> 		rol eax, 1
  5156 00004307 B100                <1> 		mov cl, 0
  5157                              <1> 	writeiconline:
  5158 00004309 B201                <1> 		mov dl, 1
  5159 0000430B 20C2                <1> 		and dl, al
  5160 0000430D 3215[96460000]      <1> 		xor dl, [iconselected]
  5161 00004313 668B1D[86330000]    <1> 		mov bx, [background]
  5162 0000431A 66891F              <1> 		mov [edi], bx
  5163 0000431D 80FA00              <1> 		cmp dl, 0
  5164 00004320 740A                <1> 		je noiconline
  5165 00004322 668B15[87420000]    <1> 		mov dx, [iconcolor]
  5166 00004329 668917              <1> 		mov [edi], dx
  5167                              <1> 	noiconline:
  5168 0000432C 81C702000000        <1> 		add edi, 2
  5169 00004332 D1C0                <1> 		rol eax, 1
  5170 00004334 FEC1                <1> 		inc cl
  5171 00004336 80F920              <1> 		cmp cl, 32
  5172 00004339 72CE                <1> 		jb writeiconline
  5173 0000433B 81C604000000        <1> 		add esi, 4
  5174 00004341 FEC5                <1> 		inc ch
  5175 00004343 BA00000000          <1> 		mov edx, 0
  5176 00004348 668B15[66430000]    <1> 		mov dx, [resolutionx2]
  5177 0000434F 01D7                <1> 		add edi, edx
  5178 00004351 81EF40000000        <1> 		sub edi, 64
  5179 00004357 80FD20              <1> 		cmp ch, 32
  5180 0000435A 72A7                <1> 		jb writeicon
  5181 0000435C B800000000          <1> 		mov eax, 0
  5182 00004361 C3                  <1> 		ret
  5183                              <1> 
  5184 00004362 0000                <1> resolutiony dw 0
  5185 00004364 0000                <1> resolutionx dw 0
  5186 00004366 0000                <1> resolutionx2 dw 0
  5187 00004368 02                  <1> resolutionbytes db 2
  5188 00004369 0000                <1> posxvesa dw 0
  5189 0000436B 0000                <1> posyvesa dw 0
  5190 0000436D FFFF                <1> colorfont dw 0xFFFF
  5191                              <1> savefontvesa:		;;same rules as showfontvesa
  5192 0000436F C605[E0340000]01    <1> 	mov byte [savefonton], 1
  5193                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  5194 00004376 3CFF                <1> 	cmp al, 255
  5195 00004378 7501                <1> 	jne nostopshowfont
  5196 0000437A C3                  <1> 	ret
  5197                              <1> nostopshowfont:
  5198 0000437B 66890D[6B430000]    <1> 	mov [posyvesa], cx
  5199 00004382 3C0A                <1> 	cmp al, 10
  5200 00004384 0F8435000000        <1> 	je near goodvesafontx
  5201 0000438A 3C0D                <1> 	cmp al, 13
  5202 0000438C 0F842D000000        <1> 	je near goodvesafontx
  5203 00004392 B900000000          <1> 	mov ecx, 0
  5204 00004397 668B0D[66430000]    <1> 	mov cx, [resolutionx2]
  5205 0000439E 6681E91000          <1> 	sub cx, 16
  5206 000043A3 6639CA              <1> 	cmp dx, cx
  5207 000043A6 7617                <1> 	jbe goodvesafontx
  5208 000043A8 66BA0000            <1> 	mov dx, 0
  5209 000043AC 668B0D[6B430000]    <1> 	mov cx, [posyvesa]
  5210 000043B3 6681C11000          <1> 	add cx, 16
  5211 000043B8 66890D[6B430000]    <1> 	mov [posyvesa], cx
  5212                              <1> goodvesafontx:
  5213 000043BF 668B0D[6B430000]    <1> 	mov cx, [posyvesa]
  5214 000043C6 668915[69430000]    <1> 	mov [posxvesa], dx
  5215 000043CD 8B3D[746A0000]      <1> 	mov edi, [physbaseptr]
  5216 000043D3 66891D[6D430000]    <1> 	mov [colorfont], bx
  5217 000043DA BB00000000          <1> 	mov ebx, 0
  5218 000043DF 88C3                <1> 	mov bl, al
  5219 000043E1 B800000000          <1> 	mov eax, 0
  5220 000043E6 88D8                <1> 	mov al, bl
  5221 000043E8 6689D3              <1> 	mov bx, dx
  5222 000043EB 89DA                <1> 	mov edx, ebx
  5223 000043ED BB00000000          <1> 	mov ebx, 0
  5224 000043F2 6681F90000          <1> 	cmp cx, 0
  5225 000043F7 7415                <1> 	je vesaposloopdn
  5226 000043F9 668B1D[66430000]    <1> 	mov bx, [resolutionx2]
  5227                              <1> vesaposloop:
  5228 00004400 01DA                <1> 	add edx, ebx
  5229 00004402 6681E90100          <1> 	sub cx, 1
  5230 00004407 6681F90000          <1> 	cmp cx, 0
  5231 0000440C 75F2                <1> 	jne vesaposloop
  5232                              <1> vesaposloopdn:
  5233 0000440E 01D7                <1> 	add edi, edx
  5234 00004410 BE[3C580000]        <1> 	mov esi, fonts
  5235                              <1> findfontvesa:
  5236 00004415 B400                <1> 	mov ah, 0
  5237 00004417 3C0A                <1> 	cmp al, 10
  5238 00004419 0F840C010000        <1> 	je near nwlinevesa
  5239 0000441F 3C0D                <1> 	cmp al, 13
  5240 00004421 0F8419010000        <1> 	je near cretvesa
  5241 00004427 C1E004              <1> 	shl eax, 4
  5242 0000442A 01C6                <1> 	add esi, eax
  5243 0000442C C1E804              <1> 	shr eax, 4
  5244 0000442F 81FE[3C680000]      <1> 	cmp esi, fontend
  5245 00004435 0F83BF000000        <1> 	jae near donefontvesa
  5246 0000443B 4E                  <1> 	dec esi
  5247                              <1> foundfontvesa:
  5248 0000443C 46                  <1> 	inc esi
  5249 0000443D 803D[E0340000]01    <1> 	cmp byte [savefonton], 1
  5250 00004444 0F840A010000        <1> 	je near vesafontsaver
  5251 0000444A B100                <1> 	mov cl, 0
  5252 0000444C 8A06                <1> 	mov al, [esi]
  5253 0000444E 668B15[66430000]    <1> 	mov dx, [resolutionx2]
  5254 00004455 662B15[69430000]    <1> 	sub dx, [posxvesa]
  5255 0000445C 6681FA1000          <1> 	cmp dx, 16
  5256 00004461 7708                <1> 	ja paintfontvesa
  5257 00004463 D0EA                <1> 	shr dl, 1
  5258 00004465 8815[2A450000]      <1> 	mov [charwidth], dl
  5259                              <1> paintfontvesa:
  5260 0000446B B201                <1> 	mov dl, 1
  5261 0000446D 20C2                <1> 	and dl, al
  5262 0000446F 803D[DF340000]01    <1> 	cmp byte [showcursorfonton], 1
  5263 00004476 0F8435000000        <1> 	je near nodelpaintedfont
  5264 0000447C 803D[DF340000]02    <1> 	cmp byte [showcursorfonton], 2
  5265 00004483 0F8518000000        <1> 	jne near noswitchcursorfonton
  5266 00004489 80FA00              <1> 	cmp dl, 0
  5267 0000448C 0F842E000000        <1> 	je near nopixelset
  5268 00004492 668B1D[6D430000]    <1> 	mov bx, [colorfont]
  5269 00004499 66891F              <1> 	mov [edi], bx
  5270 0000449C E91F000000          <1> 	jmp nopixelset
  5271                              <1> noswitchcursorfonton:
  5272 000044A1 3215[E1340000]      <1> 	xor dl, [mouseselecton]
  5273 000044A7 668B1D[86330000]    <1> 	mov bx, [background]
  5274 000044AE 66891F              <1> 	mov [edi], bx
  5275                              <1> nodelpaintedfont:
  5276 000044B1 80FA00              <1> 	cmp dl, 0
  5277 000044B4 740A                <1> 	je nopixelset
  5278 000044B6 668B15[6D430000]    <1> 	mov dx, [colorfont]
  5279 000044BD 668917              <1> 	mov [edi], dx
  5280                              <1> nopixelset:
  5281 000044C0 81C702000000        <1> 	add edi, 2
  5282 000044C6 D0C0                <1> 	rol al, 1
  5283 000044C8 FEC1                <1> 	inc cl
  5284 000044CA 3A0D[2A450000]      <1> 	cmp cl, [charwidth]
  5285 000044D0 7299                <1> 	jb paintfontvesa
  5286 000044D2 FEC5                <1> 	inc ch
  5287 000044D4 BA00000000          <1> 	mov edx, 0
  5288 000044D9 668B15[66430000]    <1> 	mov dx, [resolutionx2]
  5289 000044E0 01D7                <1> 	add edi, edx
  5290 000044E2 BA00000000          <1> 	mov edx, 0
  5291 000044E7 8A15[2A450000]      <1> 	mov dl, [charwidth]
  5292 000044ED 00D2                <1> 	add dl, dl
  5293 000044EF 29D7                <1> 	sub edi, edx
  5294 000044F1 80FD10              <1> 	cmp ch, 16
  5295 000044F4 0F8242FFFFFF        <1> 	jb foundfontvesa
  5296                              <1> donefontvesa:
  5297 000044FA B208                <1> 	mov dl, 8
  5298 000044FC 8815[2A450000]      <1> 	mov [charwidth], dl
  5299 00004502 668B15[69430000]    <1> 	mov dx, [posxvesa]
  5300 00004509 8A1D[2A450000]      <1> 	mov bl, [charwidth]
  5301 0000450F B700                <1> 	mov bh, 0
  5302 00004511 6601DA              <1> 	add dx, bx
  5303 00004514 668B1D[6D430000]    <1> 	mov bx, [colorfont]
  5304 0000451B 668B0D[6B430000]    <1> 	mov cx, [posyvesa]
  5305 00004522 C605[E0340000]00    <1> 	mov byte [savefonton], 0
  5306 00004529 C3                  <1> 	ret
  5307 0000452A 08                  <1> charwidth db 8
  5308                              <1> nwlinevesa:
  5309 0000452B 668B0D[6B430000]    <1> 	mov cx, [posyvesa]
  5310 00004532 6681C11000          <1> 	add cx, 16
  5311 00004537 66890D[6B430000]    <1> 	mov [posyvesa], cx
  5312 0000453E EBBA                <1> 	jmp donefontvesa
  5313                              <1> cretvesa:
  5314 00004540 668B15[69430000]    <1> 	mov dx, [posxvesa]
  5315 00004547 66BA0000            <1> 	mov dx, 0
  5316 0000454B 668915[69430000]    <1> 	mov [posxvesa], dx
  5317 00004552 EBA6                <1> 	jmp donefontvesa
  5318                              <1> vesafontsaver:
  5319 00004554 B000                <1> 	mov al, 0
  5320 00004556 B100                <1> 	mov cl, 0
  5321                              <1> vesafontsaver2:
  5322 00004558 668B17              <1> 	mov dx, [edi]
  5323 0000455B 663B15[6D430000]    <1> 	cmp dx, [colorfont]
  5324 00004562 7432                <1> 	je colorfontmatch
  5325                              <1> donecolormatch:
  5326 00004564 81C702000000        <1> 	add edi, 2
  5327 0000456A D0C0                <1> 	rol al, 1
  5328 0000456C FEC1                <1> 	inc cl
  5329 0000456E 80F908              <1> 	cmp cl, 8
  5330 00004571 72E5                <1> 	jb vesafontsaver2
  5331 00004573 8806                <1> 	mov [esi], al
  5332 00004575 46                  <1> 	inc esi
  5333 00004576 FEC5                <1> 	inc ch
  5334 00004578 BA00000000          <1> 	mov edx, 0
  5335 0000457D 668B15[66430000]    <1> 	mov dx, [resolutionx2]
  5336 00004584 01D7                <1> 	add edi, edx
  5337 00004586 81EF10000000        <1> 	sub edi, 16
  5338 0000458C 80FD10              <1> 	cmp ch, 16
  5339 0000458F 72C3                <1> 	jb vesafontsaver
  5340 00004591 E964FFFFFF          <1> 	jmp donefontvesa
  5341                              <1> colorfontmatch:
  5342 00004596 0401                <1> 	add al, 1
  5343 00004598 EBCA                <1> 	jmp donecolormatch
  5344                              <1> 	
  5345                              <1> showbmp:
  5346 0000459A 668B06              <1> 	mov ax, [esi]
  5347 0000459D 663D424D            <1> 	cmp ax, "BM"
  5348 000045A1 0F858E000000        <1> 	jne near endedbmp
  5349 000045A7 8B3D[746A0000]      <1> 	mov edi, [physbaseptr]
  5350 000045AD 6689D0              <1> 	mov ax, dx
  5351 000045B0 6689CB              <1> 	mov bx, cx
  5352 000045B3 B900000000          <1> 	mov ecx, 0
  5353 000045B8 BA00000000          <1> 	mov edx, 0
  5354 000045BD 6689D9              <1> 	mov cx, bx
  5355 000045C0 6689C2              <1> 	mov dx, ax
  5356 000045C3 01D7                <1> 	add edi, edx
  5357 000045C5 01D7                <1> 	add edi, edx
  5358 000045C7 BA00000000          <1> 	mov edx, 0
  5359 000045CC 668B15[66430000]    <1> 	mov dx, [resolutionx2]
  5360 000045D3 41                  <1> 	inc ecx
  5361 000045D4 034E16              <1> 	add ecx, [esi + 22]
  5362                              <1> bmplocloop:
  5363 000045D7 01D7                <1> 	add edi, edx
  5364 000045D9 E2FC                <1> 	loop bmplocloop
  5365 000045DB 29D7                <1> 	sub edi, edx
  5366 000045DD 8B5612              <1> 	mov edx, [esi + 18]
  5367 000045E0 8B4E16              <1> 	mov ecx, [esi + 22]
  5368 000045E3 8B460A              <1> 	mov eax, [esi + 10]
  5369 000045E6 8B5E02              <1> 	mov ebx, [esi + 2]
  5370 000045E9 01F3                <1> 	add ebx, esi
  5371 000045EB 891D[3B460000]      <1> 	mov [bmpend], ebx
  5372 000045F1 89D3                <1> 	mov ebx, edx
  5373 000045F3 01C6                <1> 	add esi, eax
  5374                              <1> ldxbmp:
  5375 000045F5 668B06              <1> 	mov ax, [esi]
  5376 000045F8 668907              <1> 	mov [edi], ax
  5377 000045FB 81C702000000        <1> 	add edi, 2
  5378 00004601 81C602000000        <1> 	add esi, 2
  5379 00004607 3B35[3B460000]      <1> 	cmp esi, [bmpend]
  5380 0000460D 7726                <1> 	ja endedbmp
  5381 0000460F 4A                  <1> 	dec edx
  5382 00004610 81FA00000000        <1> 	cmp edx, 0
  5383 00004616 77DD                <1> 	ja ldxbmp
  5384 00004618 BA00000000          <1> 	mov edx, 0
  5385 0000461D 668B15[66430000]    <1> 	mov dx, [resolutionx2]
  5386 00004624 29DF                <1> 	sub edi, ebx
  5387 00004626 29DF                <1> 	sub edi, ebx
  5388 00004628 29D7                <1> 	sub edi, edx
  5389 0000462A 49                  <1> 	dec ecx
  5390 0000462B 89DA                <1> 	mov edx, ebx
  5391 0000462D 81F900000000        <1> 	cmp ecx, 0
  5392 00004633 77C0                <1> 	ja ldxbmp
  5393                              <1> endedbmp:
  5394 00004635 E875EFFFFF          <1> 	call switchmousepos2
  5395 0000463A C3                  <1> 	ret
  5396                              <1> 	
  5397 0000463B 00000000            <1> 	bmpend dd 0
  5398                              <1> 
  5399                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5400 0000463F 00000000            <1> 	showstringesi dw 0,0
  5401 00004643 00                  <1> 	mouseon db 0
  5402 00004644 737461727400        <1> 	start	db "start",0
  5403 0000464A 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  5404 00004653 426F6F2100          <1> 	boomsg db "Boo!",0
  5405 00004658 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  5406 00004661 73206561737920746F- <1>
  5407 0000466A 20647261772E00      <1>
  5408 00004671 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  5409 0000467A 6D206E6F6D00        <1>
  5410 00004680 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  5411 00004689 75636B7300          <1>
  5412 0000468E 5800                <1> 	xmsg db "X",0
  5413 00004690 0000                <1> 	icon dw 0	;pointer to icon
  5414 00004692 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  5415 00004696 00                  <1> 	iconselected db 0
  5416                              <1> 	
  5417                              <1> 	boo:
  5418 00004697 BE[53460000]        <1> 		mov esi, boomsg
  5419 0000469C 66BA6400            <1> 		mov dx, 100
  5420 000046A0 66B94001            <1> 		mov cx, 320
  5421 000046A4 BB00000000          <1> 		mov ebx, 0
  5422 000046A9 66B80000            <1> 		mov ax, 0
  5423 000046AD E90FF8FFFF          <1> 		jmp showstring
  5424                              <1> 
  5425                              <1> 	pacmannomnom:
  5426 000046B2 BE[71460000]        <1> 		mov esi, pacnom
  5427 000046B7 66BA8200            <1> 		mov dx, 130
  5428 000046BB 66B93C00            <1> 		mov cx, 60
  5429 000046BF BB00000000          <1> 		mov ebx, 0
  5430 000046C4 66B80000            <1> 		mov ax, 0
  5431 000046C8 E9F4F7FFFF          <1> 		jmp showstring	
  5432                              <1> 	
  5433                              <1> 	noie:
  5434 000046CD BE[61470000]        <1> 		mov esi, termwindow
  5435 000046D2 66BA0000            <1> 		mov dx, 0
  5436 000046D6 66B90000            <1> 		mov cx, 0
  5437 000046DA BB[0D150000]        <1> 		mov ebx, os
  5438                              <1> ;;		mov ebx, internettest
  5439 000046DF 891D[F9030000]      <1> 		mov [user2codepoint], ebx
  5440 000046E5 66B80000            <1> 		mov ax, 0
  5441 000046E9 E835F8FFFF          <1> 		call showwindow
  5442                              <1> ;;		jmp internettest
  5443 000046EE E91ACEFFFF          <1> 		jmp os
  5444 000046F3 C3                  <1> 		ret
  5445                              <1> 
  5446                              <1> 	gotomenuboot:
  5447 000046F4 BE[61470000]        <1> 		mov esi, termwindow
  5448 000046F9 66BA0000            <1> 		mov dx, 0
  5449 000046FD 66B90000            <1> 		mov cx, 0
  5450 00004701 BB[0D150000]        <1> 		mov ebx, os
  5451 00004706 891D[F9030000]      <1> 		mov [user2codepoint], ebx
  5452 0000470C 66B80000            <1> 		mov ax, 0
  5453 00004710 E80EF8FFFF          <1> 		call showwindow
  5454 00004715 E9F3CDFFFF          <1> 		jmp os
  5455 0000471A C3                  <1> 		ret
  5456                              <1> 
  5457                              <1> 	winblows:
  5458 0000471B BE[80460000]        <1> 		mov esi, winmsg
  5459 00004720 66BA0000            <1> 		mov dx, 0
  5460 00004724 668B0D[62430000]    <1> 		mov cx, [resolutiony]
  5461 0000472B 6681E92000          <1> 		sub cx, 32
  5462 00004730 BB00000000          <1> 		mov ebx, 0
  5463 00004735 B400                <1> 		mov ah, 0
  5464 00004737 B011                <1> 		mov al, 00010001b
  5465 00004739 E883F7FFFF          <1> 		call showstring
  5466 0000473E BE[4A460000]        <1> 		mov esi, gotomenu
  5467 00004743 668B0D[62430000]    <1> 		mov cx, [resolutiony]
  5468 0000474A 6681E93000          <1> 		sub cx, 48
  5469 0000474F 66BA0000            <1> 		mov dx, 0
  5470 00004753 B400                <1> 		mov ah, 0
  5471 00004755 B010                <1> 		mov al, 00010000b
  5472 00004757 BB[F4460000]        <1> 		mov ebx, gotomenuboot
  5473 0000475C E960F7FFFF          <1> 		jmp showstring
  5474                              <1> 
  5475 00004761 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  5476 00004765 5465726D696E616C00  <1> 	termmsg:	db "Terminal",0	;;window title
  5477                              <1> 	
  5478 00004765 <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  5479 00004765 <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  5480 00004765 <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  5481 00004765 <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  5482 00004765 <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  5483                                      ;%include 'source/network.asm'
  5484                                  	%include 'source/rtl8139.asm'
  5485                              <1> ;;rtl8139.asm
  5486                              <1> initcard:	;;should find card, get mac, and initialize card
  5487 000049F8 B800000000          <1> 	mov eax, 0
  5488 000049FD A2[324D0000]        <1> 	mov [pcifunction], al
  5489 00004A02 A2[304D0000]        <1> 	mov [pcibus], al
  5490 00004A07 A2[314D0000]        <1> 	mov [pcidevice], al
  5491 00004A0C B002                <1> 	mov al, 0x02 ;;type code
  5492 00004A0E A2[B54D0000]        <1> 	mov [pcitype], al
  5493 00004A13 E81D030000          <1> 	call getpciport
  5494                              <1> initnic:		;;;;Here i tried the rtl8139 interface, fuck it
  5495 00004A18 8915[074C0000]      <1> 	mov [basenicaddr], edx
  5496 00004A1E 89D1                <1> 	mov ecx, edx
  5497 00004A20 C605[811A0000]03    <1> 	mov byte [firsthexshown], 3
  5498 00004A27 E86AD0FFFF          <1> 	call showhex	;;for debugging, please remove
  5499 00004A2C BE[1F340000]        <1> 	mov esi, rbuffstart
  5500 00004A31 B900200000          <1> 	mov ecx, 8192
  5501 00004A36 B800000000          <1> 	mov eax, 0
  5502                              <1> clearrbuff:		;;clear receive buffer which starts at rbuffstart
  5503 00004A3B 8806                <1> 	mov [esi], al
  5504 00004A3D 46                  <1> 	inc esi
  5505 00004A3E 6649                <1> 	dec cx
  5506 00004A40 6681F90000          <1> 	cmp cx, 0
  5507 00004A45 75F4                <1> 	jne clearrbuff
  5508                              <1> findmac:
  5509 00004A47 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5510 00004A4D BF[0F4C0000]        <1> 	mov edi, sysmac
  5511 00004A52 B906000000          <1> 	mov ecx, 6
  5512                              <1> macputloop:
  5513 00004A57 EC                  <1> 	in al, dx
  5514 00004A58 8807                <1> 	mov [edi], al
  5515 00004A5A 47                  <1> 	inc edi
  5516 00004A5B 42                  <1> 	inc edx
  5517 00004A5C 49                  <1> 	dec ecx
  5518 00004A5D 75F8                <1> 	jnz macputloop
  5519 00004A5F B9[0F4C0000]        <1> 	mov ecx, sysmac
  5520 00004A64 E837010000          <1> 	call showmac
  5521                              <1> resetnic:
  5522 00004A69 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5523 00004A6F 81C252000000        <1> 	add edx, 0x52
  5524 00004A75 B000                <1> 	mov al, 0
  5525 00004A77 EE                  <1> 	out dx, al	;;WAKE UP!!!!
  5526 00004A78 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5527 00004A7E 81C237000000        <1> 	add edx, 0x37
  5528 00004A84 B010                <1> 	mov al, 0x10
  5529 00004A86 EE                  <1> 	out dx, al	;;Reset
  5530                              <1> resetnicwait:
  5531 00004A87 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5532 00004A8D 81C237000000        <1> 	add edx, 0x37
  5533 00004A93 EC                  <1> 	in al, dx
  5534 00004A94 2410                <1> 	and al, 0x10
  5535 00004A96 3C10                <1> 	cmp al, 0x10
  5536 00004A98 0F84E9FFFFFF        <1> 	je near resetnicwait
  5537 00004A9E 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5538 00004AA4 81C230000000        <1> 	add edx, 0x30
  5539 00004AAA B8[1F340000]        <1> 	mov eax, rbuffstart
  5540 00004AAF EF                  <1> 	out dx, eax	;;give nic receive buffer location
  5541 00004AB0 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5542 00004AB6 81C23C000000        <1> 	add edx, 0x3C
  5543 00004ABC 66B80500            <1> 	mov ax, 0x0005
  5544 00004AC0 66EF                <1> 	out dx, ax	;;set TOK and ROK
  5545 00004AC2 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5546 00004AC8 81C244000000        <1> 	add edx, 0x44
  5547 00004ACE B80F000000          <1> 	mov eax, 0xf
  5548 00004AD3 EF                  <1> 	out dx, eax	;;recieve packets from all matches
  5549 00004AD4 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5550 00004ADA 81C237000000        <1> 	add edx, 0x37
  5551 00004AE0 B00C                <1> 	mov al, 0x0C
  5552 00004AE2 EE                  <1> 	out dx, al	;;use transmit and receive
  5553 00004AE3 C605[F04B0000]01    <1> 	mov byte [nicconfig], 1
  5554 00004AEA C3                  <1> 	ret
  5555                              <1> 	
  5556                              <1> sendframe:	;;padded frame with beginning in edi and end in esi
  5557 00004AEB 56                  <1> 	push esi
  5558 00004AEC 57                  <1> 	push edi
  5559                              <1> nic2:		;;here come the low level drivers :(
  5560                              <1> 			;;frame begins at esi, ends at edi 			;;0x0200 is the class code for ethernet cards
  5561 00004AED 803D[F04B0000]01    <1> 	cmp byte [nicconfig], 1
  5562 00004AF4 7405                <1> 	je sendcachedata
  5563 00004AF6 E8FDFEFFFF          <1> 	call initcard
  5564                              <1> sendcachedata:
  5565 00004AFB 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5566 00004B01 81C210000000        <1> 	add edx, 0x10
  5567 00004B07 ED                  <1> 	in eax, dx
  5568 00004B08 89C1                <1> 	mov ecx, eax
  5569 00004B0A E887CFFFFF          <1> 	call showhex
  5570 00004B0F 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5571 00004B15 81C213000000        <1> 	add edx, 0x13
  5572 00004B1B ED                  <1> 	in eax, dx
  5573 00004B1C 89C1                <1> 	mov ecx, eax
  5574 00004B1E E873CFFFFF          <1> 	call showhex
  5575 00004B23 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5576 00004B29 81C223000000        <1> 	add edx, 0x23	;;23 or 20?
  5577 00004B2F 5F                  <1> 	pop edi
  5578 00004B30 89F8                <1> 	mov eax, edi
  5579 00004B32 EF                  <1> 	out dx, eax	;;here's Johnny!
  5580 00004B33 5E                  <1> 	pop esi
  5581 00004B34 29FE                <1> 	sub esi, edi
  5582 00004B36 89F0                <1> 	mov eax, esi
  5583 00004B38 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5584 00004B3E 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5585 00004B44 EF                  <1> 	out dx, eax
  5586                              <1> checknicstatus1:
  5587 00004B45 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5588 00004B4B 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5589 00004B51 ED                  <1> 	in eax, dx
  5590 00004B52 2500200000          <1> 	and eax, 0x2000
  5591 00004B57 3D00200000          <1> 	cmp eax, 0x2000
  5592 00004B5C 75E7                <1> 	jne checknicstatus1
  5593                              <1> checknicstatus:
  5594 00004B5E 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5595 00004B64 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5596 00004B6A ED                  <1> 	in eax, dx
  5597 00004B6B 2500800000          <1> 	and eax, 0x8000
  5598 00004B70 3D00800000          <1> 	cmp eax, 0x8000
  5599 00004B75 75E7                <1> 	jne checknicstatus
  5600 00004B77 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5601 00004B7D 81C210000000        <1> 	add edx, 0x10
  5602 00004B83 ED                  <1> 	in eax, dx
  5603 00004B84 89C1                <1> 	mov ecx, eax
  5604 00004B86 E80BCFFFFF          <1> 	call showhex
  5605 00004B8B 8B15[074C0000]      <1> 	mov edx, [basenicaddr]
  5606 00004B91 81C213000000        <1> 	add edx, 0x13
  5607 00004B97 ED                  <1> 	in eax, dx
  5608 00004B98 89C1                <1> 	mov ecx, eax
  5609 00004B9A E8F7CEFFFF          <1> 	call showhex
  5610 00004B9F C3                  <1> 	ret
  5611                              <1> 	
  5612                              <1> showmac:	;;mac begins in [ecx]
  5613 00004BA0 BE[D84B0000]        <1> 	mov esi, macprint
  5614 00004BA5 89CF                <1> 	mov edi, ecx
  5615 00004BA7 81C106000000        <1> 	add ecx, 6
  5616                              <1> showmacloop:
  5617 00004BAD 8A07                <1> 	mov al, [edi]
  5618 00004BAF 8A27                <1> 	mov ah, [edi]
  5619 00004BB1 C0E804              <1> 	shr al, 4
  5620 00004BB4 C0E404              <1> 	shl ah, 4
  5621 00004BB7 C0EC04              <1> 	shr ah, 4
  5622 00004BBA 0430                <1> 	add al, 48
  5623 00004BBC 80C430              <1> 	add ah, 48
  5624 00004BBF 668906              <1> 	mov [esi], ax
  5625 00004BC2 81C603000000        <1> 	add esi, 3
  5626 00004BC8 47                  <1> 	inc edi
  5627 00004BC9 39CF                <1> 	cmp edi, ecx
  5628 00004BCB 72E0                <1> 	jb showmacloop
  5629 00004BCD BE[D84B0000]        <1> 	mov esi, macprint
  5630 00004BD2 E8F1C4FFFF          <1> 	call print
  5631 00004BD7 C3                  <1> 	ret
  5632                              <1> 	
  5633 00004BD8 30302D30302D30302D- <1> macprint db "00-00-00-00-00-00  ",0
  5634 00004BE1 30302D30302D303020- <1>
  5635 00004BEA 2000                <1>
  5636 00004BEC 00000000            <1> ethernetend dw 0,0
  5637 00004BF0 00                  <1> nicconfig db 0
  5638 00004BF1 4E4F204E494300      <1> nonicfoundmsg db "NO NIC",0
  5639 00004BF8 496E6974696174696E- <1> initnicmsg	db "Initiating NIC",0
  5640 00004C01 67204E494300        <1>
  5641 00004C07 00000000            <1> basenicaddr	db 0,0,0,0
  5642 00004C0B C0A80005            <1> sysip db 192,168,0,5
  5643 00004C0F 000000000000        <1> sysmac	db 0,0,0,0,0,0		;;my mac address
  5644                                  	%include 'source/arp.asm'
  5645                              <1> ;;let's try something else
  5646                              <1> ;;arp.asm
  5647                              <1> arpinit:
  5648 00004C15 BE[CC4C0000]        <1> 	mov esi, arptable
  5649 00004C1A BF[0F4C0000]        <1> 	mov edi, sysmac
  5650 00004C1F BB[0B4C0000]        <1> 	mov ebx, sysip
  5651 00004C24 8B0F                <1> 	mov ecx, [edi]
  5652 00004C26 890E                <1> 	mov [esi], ecx
  5653 00004C28 668B4F04            <1> 	mov cx, [edi + 4]
  5654 00004C2C 894E04              <1> 	mov [esi + 4], ecx
  5655 00004C2F 8B0B                <1> 	mov ecx, [ebx]
  5656 00004C31 894E06              <1> 	mov [esi + 6], ecx
  5657 00004C34 C605[CB4C0000]01    <1> 	mov byte [arpconfig], 1
  5658 00004C3B C3                  <1> 	ret
  5659                              <1> arptest:
  5660 00004C3C 803D[CB4C0000]01    <1> 	cmp byte [arpconfig], 1
  5661 00004C43 7405                <1> 	je arptest2
  5662 00004C45 E8CBFFFFFF          <1> 	call arpinit
  5663                              <1> arptest2:	;;try to reach 192.168.0.1
  5664 00004C4A 8B0D[0F4C0000]      <1> 	mov ecx, [sysmac]
  5665 00004C50 668B1D[134C0000]    <1> 	mov bx, [sysmac + 4]
  5666 00004C57 890D[914C0000]      <1> 	mov [sourcemac], ecx
  5667 00004C5D 66891D[954C0000]    <1> 	mov [sourcemac + 4],bx
  5668 00004C64 890D[A14C0000]      <1> 	mov [arpsenderinfo], ecx
  5669 00004C6A 66891D[A54C0000]    <1> 	mov [arpsenderinfo + 4], bx
  5670 00004C71 BF[8B4C0000]        <1> 	mov edi, frame
  5671 00004C76 BE[CB4C0000]        <1> 	mov esi, framend
  5672 00004C7B E86BFEFFFF          <1> 	call sendframe
  5673 00004C80 BE[13580000]        <1> 	mov esi, line
  5674 00004C85 E83EC4FFFF          <1> 	call print
  5675 00004C8A C3                  <1> 	ret
  5676                              <1> 	
  5677                              <1> ;;example frame
  5678                              <1> frame:
  5679 00004C8B FFFFFFFFFFFF        <1> destinationmac:	db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  5680 00004C91 000000000000        <1> sourcemac:		db 0,0,0,0,0,0
  5681 00004C97 0608                <1> ethertype:		dw 0x0806			;;arp
  5682                              <1> 	;;example packet
  5683 00004C99 0100                <1> 	arppacket: 		dw 1				;;ethernet is 1
  5684 00004C9B 0008                <1> 	arpprotocol: 	dw 0x0800			;;ip is 0x800
  5685 00004C9D 0604                <1> 					db 6,4				;;length of mac, length of ip
  5686 00004C9F 0100                <1> 	arpoperation: 	dw 1				;;one for arp request
  5687 00004CA1 000000000000        <1> 	arpsenderinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;mac
  5688 00004CA7 C0A80005            <1> 					db 192,168,0,5			;;ip
  5689 00004CAB 000000000000        <1> 	arptargetinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;ignored in requests
  5690 00004CB1 C0A80001            <1> 					db 192,168,0,1			;;ip
  5691 00004CB5 00<rept>            <1> padding:		times (64-($-frame)) db 0
  5692                              <1> framend:
  5693                              <1> 
  5694 00004CCB 00                  <1> arpconfig db 0
  5695                              <1> arptable:	;;mac,ip
  5696 00004CCC 000000000000000000- <1> 	times 10 db 0,0,0,0,0,0,0,0,0,0
  5697 00004CD5 00<rept>            <1>
  5698                              <1> arptableend:
  5699                                  	%include 'source/pci.asm'
  5700 00004D30 00                  <1> pcibus		db 0
  5701 00004D31 00                  <1> pcidevice	db 0
  5702 00004D32 00                  <1> pcifunction	db 0
  5703 00004D33 00                  <1> pciregister	db 0
  5704 00004D34 00                  <1> pcireqtype db 0
  5705                              <1> 
  5706                              <1> getpciport:
  5707 00004D35 B001                <1> 	mov al, 1
  5708 00004D37 A2[344D0000]        <1> 	mov [pcireqtype], al
  5709 00004D3C E91E000000          <1> 	jmp searchpci
  5710                              <1> pcidump:
  5711 00004D41 B800000000          <1> 	mov eax, 0
  5712 00004D46 A2[324D0000]        <1> 	mov [pcifunction], al
  5713 00004D4B A2[304D0000]        <1> 	mov [pcibus], al
  5714 00004D50 A2[314D0000]        <1> 	mov [pcidevice], al
  5715 00004D55 A2[344D0000]        <1> 	mov [pcireqtype], al
  5716 00004D5A E900000000          <1> 	jmp searchpci
  5717                              <1> searchpci:		;;return in ebx, start X in pciX
  5718 00004D5F B000                <1> 	mov al, 0
  5719 00004D61 A2[334D0000]        <1> 	mov [pciregister], al
  5720 00004D66 E84F010000          <1> 	call getpciaddr
  5721 00004D6B BAF80C0000          <1> 	mov edx, 0xCF8
  5722 00004D70 EF                  <1> 	out dx, eax	;;request pci config
  5723 00004D71 BAFC0C0000          <1> 	mov edx, 0xCFC
  5724 00004D76 ED                  <1> 	in eax, dx 	;;read in pci config
  5725 00004D77 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  5726 00004D7C 0F8237000000        <1> 	jb near checkpcidevice
  5727                              <1> searchpciret:
  5728                              <1> nextpcidevice:
  5729 00004D82 B000                <1> 	mov al, 0
  5730 00004D84 A2[324D0000]        <1> 	mov [pcifunction], al
  5731 00004D89 A0[314D0000]        <1> 	mov al, [pcidevice]
  5732 00004D8E 3C1F                <1> 	cmp al, 11111b
  5733 00004D90 0F83B8000000        <1> 	jae near nextpcibus
  5734 00004D96 FEC0                <1> 	inc al
  5735 00004D98 A2[314D0000]        <1> 	mov [pcidevice], al
  5736 00004D9D EBC0                <1> 	jmp searchpci
  5737 00004D9F A0[324D0000]        <1> 	mov al, [pcifunction]
  5738 00004DA4 3C07                <1> 	cmp al, 111b
  5739 00004DA6 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  5740 00004DAC FEC0                <1> 	inc al
  5741 00004DAE A2[324D0000]        <1> 	mov [pcifunction], al
  5742 00004DB3 EBAA                <1> 	jmp searchpci
  5743 00004DB5 00000000            <1> pcitype: db 0,0,0,0
  5744                              <1> checkpcidevice:
  5745 00004DB9 B000                <1> 	mov al, 0
  5746 00004DBB 3805[344D0000]      <1> 	cmp [pcireqtype], al
  5747 00004DC1 0F842B000000        <1> 	je near dumppcidevice
  5748 00004DC7 B008                <1> 	mov al, 0x08
  5749 00004DC9 A2[334D0000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  5750 00004DCE E8E7000000          <1> 	call getpciaddr
  5751 00004DD3 BAF80C0000          <1> 	mov edx, 0xCF8
  5752 00004DD8 EF                  <1> 	out dx, eax
  5753 00004DD9 BAFC0C0000          <1> 	mov edx, 0xCFC
  5754 00004DDE ED                  <1> 	in eax, dx
  5755 00004DDF C1C008              <1> 	rol eax, 8
  5756 00004DE2 8A1D[B54D0000]      <1> 	mov bl, [pcitype]
  5757 00004DE8 38D8                <1> 	cmp al, bl
  5758 00004DEA 0F8480000000        <1> 	je near foundpciaddr
  5759 00004DF0 EB90                <1> 	jmp searchpciret
  5760                              <1> dumppcidevice:
  5761 00004DF2 B000                <1> 	mov al, 0
  5762 00004DF4 A2[334D0000]        <1> 	mov [pciregister], al
  5763 00004DF9 E8BC000000          <1> 	call getpciaddr
  5764 00004DFE 89C1                <1> 	mov ecx, eax
  5765 00004E00 C605[811A0000]00    <1> 	mov byte [firsthexshown],0
  5766 00004E07 E88ACCFFFF          <1> 	call showhex
  5767                              <1> dumppcidevicelp:
  5768 00004E0C A2[334D0000]        <1> 	mov [pciregister], al
  5769 00004E11 E8A4000000          <1> 	call getpciaddr
  5770 00004E16 BAF80C0000          <1> 	mov edx, 0xCF8
  5771 00004E1B EF                  <1> 	out dx, eax
  5772 00004E1C BAFC0C0000          <1> 	mov edx, 0xCFC
  5773 00004E21 ED                  <1> 	in eax, dx
  5774 00004E22 89C1                <1> 	mov ecx, eax
  5775 00004E24 A0[334D0000]        <1> 	mov al, [pciregister]
  5776 00004E29 0404                <1> 	add al, 4
  5777 00004E2B 3C1A                <1> 	cmp al, 0x1A
  5778 00004E2D 730E                <1> 	jae dumppcidn
  5779 00004E2F C605[811A0000]00    <1> 	mov byte [firsthexshown],0
  5780 00004E36 E85BCCFFFF          <1> 	call showhex
  5781 00004E3B EBCF                <1> 	jmp dumppcidevicelp
  5782                              <1> dumppcidn:
  5783 00004E3D C605[811A0000]00    <1> 	mov byte [firsthexshown],0
  5784 00004E44 E84DCCFFFF          <1> 	call showhex
  5785 00004E49 E934FFFFFF          <1> 	jmp searchpciret
  5786                              <1> nextpcibus:
  5787 00004E4E B000                <1> 	mov al, 0
  5788 00004E50 A2[314D0000]        <1> 	mov [pcidevice], al
  5789 00004E55 A0[304D0000]        <1> 	mov al, [pcibus]
  5790 00004E5A 3C7F                <1> 	cmp al, 1111111b
  5791 00004E5C 730C                <1> 	jae donesearchpci
  5792 00004E5E FEC0                <1> 	inc al
  5793 00004E60 A2[304D0000]        <1> 	mov [pcibus], al
  5794 00004E65 E9F5FEFFFF          <1> 	jmp searchpci
  5795                              <1> donesearchpci:
  5796 00004E6A BA00000000          <1> 	mov edx, 0
  5797 00004E6F C3                  <1> 	ret
  5798                              <1> foundpciaddr:
  5799 00004E70 B010                <1> 	mov al, 0x10
  5800 00004E72 A2[334D0000]        <1> 	mov [pciregister], al
  5801                              <1> findpciioaddr:
  5802 00004E77 E83E000000          <1> 	call getpciaddr
  5803 00004E7C BAF80C0000          <1> 	mov edx, 0xCF8
  5804 00004E81 EF                  <1> 	out dx, eax
  5805 00004E82 BAFC0C0000          <1> 	mov edx, 0xCFC
  5806 00004E87 ED                  <1> 	in eax, dx
  5807 00004E88 89C3                <1> 	mov ebx, eax
  5808 00004E8A 81E301000000        <1> 	and ebx, 1
  5809 00004E90 81FB00000000        <1> 	cmp ebx, 0
  5810 00004E96 0F8408000000        <1> 	je near notpciioaddr
  5811 00004E9C 2D01000000          <1> 	sub eax, 1
  5812 00004EA1 89C2                <1> 	mov edx, eax
  5813 00004EA3 C3                  <1> 	ret
  5814                              <1> notpciioaddr:
  5815 00004EA4 A0[334D0000]        <1> 	mov al, [pciregister]
  5816 00004EA9 0404                <1> 	add al, 4
  5817 00004EAB 3C28                <1> 	cmp al, 0x28
  5818 00004EAD 0F87CFFEFFFF        <1> 	ja near searchpciret
  5819 00004EB3 A2[334D0000]        <1> 	mov [pciregister], al
  5820 00004EB8 EBBD                <1> 	jmp findpciioaddr
  5821                              <1> getpciaddr:		;;puts it in eax and ebx
  5822 00004EBA B800000000          <1> 			mov eax, 0
  5823 00004EBF BB00000080          <1> 			mov ebx, 0x80000000
  5824 00004EC4 A0[304D0000]        <1> 			mov al, [pcibus]
  5825 00004EC9 C1E010              <1> 			shl eax, 16
  5826 00004ECC 01C3                <1> 			add ebx, eax
  5827 00004ECE B800000000          <1> 			mov eax, 0
  5828 00004ED3 A0[314D0000]        <1> 			mov al, [pcidevice]
  5829 00004ED8 C1E00B              <1> 			shl eax, 11
  5830 00004EDB 01C3                <1> 			add ebx, eax
  5831 00004EDD B800000000          <1> 			mov eax, 0
  5832 00004EE2 A0[324D0000]        <1> 			mov al, [pcifunction]
  5833 00004EE7 C1E008              <1> 			shl eax, 8
  5834 00004EEA 01C3                <1> 			add ebx, eax
  5835 00004EEC B800000000          <1> 			mov eax, 0
  5836 00004EF1 A0[334D0000]        <1> 			mov al, [pciregister]
  5837 00004EF6 01C3                <1> 			add ebx, eax
  5838 00004EF8 89D8                <1> 			mov eax, ebx
  5839 00004EFA C3                  <1> 			ret
  5840                              <1> 			
  5841                                  	;%include 'source/process.asm'
  5842                                      %include 'source/disk.asm'
  5843                              <1> ;;disk.asm - new - using lba
  5844                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  5845 00004EFB 803F00              <1> 	cmp byte [edi], 0
  5846 00004EFE 0F8444000000        <1> 	je near nofileload
  5847 00004F04 89FA                <1> 	mov edx, edi
  5848 00004F06 BB[63570000]        <1> 	mov ebx, diskfileindex
  5849                              <1> nextnamechar:
  5850 00004F0B 8A07                <1> 	mov al, [edi]
  5851 00004F0D 8A23                <1> 	mov ah, [ebx]
  5852 00004F0F 47                  <1> 	inc edi
  5853 00004F10 43                  <1> 	inc ebx
  5854 00004F11 88C1                <1> 	mov cl, al
  5855 00004F13 08E1                <1> 	or cl, ah
  5856 00004F15 80F900              <1> 	cmp cl, 0
  5857 00004F18 744E                <1> 	je equalfilenames
  5858 00004F1A 80F920              <1> 	cmp cl, ' '
  5859 00004F1D 7449                <1> 	je equalfilenames
  5860 00004F1F 3C2A                <1> 	cmp al, '*'
  5861 00004F21 742B                <1> 	je equalfilenames2
  5862 00004F23 80FC00              <1> 	cmp ah, 0
  5863 00004F26 7410                <1> 	je nextfilename
  5864 00004F28 3C00                <1> 	cmp al, 0
  5865 00004F2A 740C                <1> 	je nextfilename
  5866 00004F2C 38E0                <1> 	cmp al, ah
  5867 00004F2E 74DB                <1> 	je nextnamechar
  5868                              <1> getebxzero:
  5869 00004F30 8A23                <1> 	mov ah, [ebx]
  5870 00004F32 43                  <1> 	inc ebx
  5871 00004F33 80FC00              <1> 	cmp ah, 0
  5872 00004F36 75F8                <1> 	jne getebxzero
  5873                              <1> nextfilename:
  5874 00004F38 81C308000000        <1> 	add ebx, 8		;;next descriptor
  5875 00004F3E 89D7                <1> 	mov edi, edx
  5876 00004F40 81FB[D5570000]      <1> 	cmp ebx, enddiskfileindex
  5877 00004F46 72C3                <1> 	jb nextnamechar
  5878                              <1> nofileload:
  5879 00004F48 BA94010000          <1> 	mov edx, 404	;;indicate not found error
  5880 00004F4D C3                  <1> 	ret
  5881                              <1> equalfilenames2:
  5882 00004F4E 81EB02000000        <1> 	sub ebx, 2
  5883                              <1> eqfilefind:
  5884 00004F54 43                  <1> 	inc ebx
  5885 00004F55 81FB[D5570000]      <1> 	cmp ebx, enddiskfileindex
  5886 00004F5B 0F83E7FFFFFF        <1> 	jae near nofileload
  5887 00004F61 8A03                <1> 	mov al, [ebx]
  5888 00004F63 3C00                <1> 	cmp al, 0
  5889 00004F65 75ED                <1> 	jne eqfilefind
  5890 00004F67 43                  <1> 	inc ebx
  5891                              <1> equalfilenames:
  5892 00004F68 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  5893 00004F6B 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  5894 00004F6D 031D[88010000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  5895 00004F73 B900000000          <1> 	mov ecx, 0
  5896 00004F78 88C1                <1> 	mov cl, al			;;get excess number of sectors
  5897 00004F7A D0E1                <1> 	shl cl, 1
  5898 00004F7C D0E9                <1> 	shr cl, 1			;;cut off at 128
  5899 00004F7E 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  5900 00004F80 B500                <1> 	mov ch, 0			;;drive 0
  5901 00004F82 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  5902                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  5903 00004F85 A3[C34F0000]        <1> 	mov [filetracks], eax
  5904 00004F8A 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  5905 00004F8C 89DA                <1> 	mov edx, ebx
  5906 00004F8E 80F900              <1> 	cmp cl, 0
  5907 00004F91 7405                <1> 	je copytracksforfile
  5908 00004F93 E837000000          <1> 	call diskr		;;take care of excess sectors
  5909                              <1> copytracksforfile:
  5910 00004F98 A1[C34F0000]        <1> 	mov eax, [filetracks]
  5911 00004F9D 3D00000000          <1> 	cmp eax, 0
  5912 00004FA2 7419                <1> 	je donecopyfile
  5913 00004FA4 48                  <1> 	dec eax
  5914 00004FA5 A3[C34F0000]        <1> 	mov [filetracks], eax
  5915 00004FAA 89D3                <1> 	mov ebx, edx	;;get end lba
  5916 00004FAC B180                <1> 	mov cl, 0x80
  5917 00004FAE 8A2D[87010000]      <1> 	mov ch, [DriveNumber]
  5918 00004FB4 89FE                <1> 	mov esi, edi	;;reset buffer
  5919 00004FB6 E814000000          <1> 	call diskr
  5920 00004FBB EBDB                <1> 	jmp copytracksforfile
  5921                              <1> donecopyfile:
  5922 00004FBD BA00000000          <1> 	mov edx, 0	;;no error
  5923 00004FC2 C3                  <1> 	ret
  5924                              <1> 	
  5925 00004FC3 00000000            <1> filetracks dd 0
  5926 00004FC7 00                  <1> lbad1 db 0
  5927 00004FC8 00                  <1> lbad2 db 0
  5928 00004FC9 00                  <1> lbad3 db 0
  5929 00004FCA 00                  <1> lbad4 db 0
  5930 00004FCB 00                  <1> lbad5 db 0
  5931 00004FCC 00                  <1> lbad6 db 0
  5932 00004FCD 6400                <1> segments dw 100
  5933                              <1> 
  5934                              <1> diskr:		;;sector count in cl, disk number in ch, 48 bit address with last 32 bits in ebx, buffer in esi, puts end buffer in edi and end lba in edx
  5935                              <1> 
  5936 00004FCF 8935[E8500000]      <1> 	mov [bufferstartesi], esi
  5937 00004FD5 891D[E4500000]      <1> 	mov [lbaadstartebx], ebx
  5938 00004FDB BA00000000          <1> 	mov edx, 0
  5939 00004FE0 88CA                <1> 	mov dl, cl
  5940 00004FE2 01DA                <1> 	add edx, ebx
  5941 00004FE4 8915[E0500000]      <1> 	mov [lbaadend], edx
  5942 00004FEA 881D[C74F0000]      <1> 	mov [lbad1], bl
  5943 00004FF0 883D[C84F0000]      <1> 	mov [lbad2], bh
  5944 00004FF6 C1C310              <1> 	rol ebx, 16
  5945 00004FF9 881D[C94F0000]      <1> 	mov [lbad3], bl
  5946 00004FFF 883D[CA4F0000]      <1> 	mov [lbad4], bh
  5947 00005005 C1CB10              <1> 	ror ebx, 16
  5948                              <1> 
  5949 00005008 B840000000          <1> 	mov eax, 0x40
  5950 0000500D 66BAF601            <1> 	mov dx, 0x1F6
  5951 00005011 EE                  <1> 	out dx, al	;;send magic bits-add drive indicator later
  5952                              <1> 	
  5953 00005012 B000                <1> 	mov al, 0
  5954 00005014 66BAF201            <1> 	mov dx, 0x1F2
  5955 00005018 EE                  <1> 	out dx, al	;;16 bit sector count-last byte now 0
  5956                              <1> 	
  5957 00005019 A0[CA4F0000]        <1> 	mov al, [lbad4]
  5958 0000501E 6642                <1> 	inc dx
  5959 00005020 EE                  <1> 	out dx, al
  5960                              <1> 	
  5961 00005021 A0[CB4F0000]        <1> 	mov al, [lbad5]
  5962 00005026 6642                <1> 	inc dx
  5963 00005028 EE                  <1> 	out dx, al
  5964                              <1> 	
  5965 00005029 A0[CC4F0000]        <1> 	mov al, [lbad6]
  5966 0000502E 6642                <1> 	inc dx
  5967 00005030 EE                  <1> 	out dx, al
  5968                              <1> 	
  5969 00005031 88C8                <1> 	mov al, cl
  5970 00005033 66BAF201            <1> 	mov dx, 0x1F2
  5971 00005037 EE                  <1> 	out dx, al	;;low byte of 16 bit sector count
  5972                              <1> 	
  5973 00005038 A0[C74F0000]        <1> 	mov al, [lbad1]
  5974 0000503D 6642                <1> 	inc dx
  5975 0000503F EE                  <1> 	out dx, al
  5976                              <1> 	
  5977 00005040 A0[C84F0000]        <1> 	mov al, [lbad2]
  5978 00005045 6642                <1> 	inc dx
  5979 00005047 EE                  <1> 	out dx, al
  5980                              <1> 	
  5981 00005048 A0[C94F0000]        <1> 	mov al, [lbad3]
  5982 0000504D 6642                <1> 	inc dx
  5983 0000504F EE                  <1> 	out dx, al
  5984                              <1> 	
  5985 00005050 B024                <1> 	mov al, 0x24
  5986 00005052 66BAF701            <1> 	mov dx, 0x1F7
  5987 00005056 EE                  <1> 	out dx, al	;;READ!!!
  5988 00005057 66BBFFFF            <1> 	mov bx, 0xFFFF		;;try 65536 times before forcing
  5989                              <1> diskrwait:
  5990 0000505B 66BAF701            <1> 	mov dx, 0x1F7
  5991 0000505F EC                  <1> 	in al, dx
  5992 00005060 2408                <1> 	and al, 0x08
  5993 00005062 664B                <1> 	dec bx
  5994 00005064 6681FB0000          <1> 	cmp bx, 0
  5995 00005069 7404                <1> 	je nomorediskwait
  5996 0000506B 3C08                <1> 	cmp al, 0x08
  5997 0000506D 75EC                <1> 	jne diskrwait
  5998                              <1> nomorediskwait:
  5999 0000506F 66BB0001            <1> 	mov bx, 256
  6000                              <1> diskdataread:
  6001 00005073 66BAF001            <1> 	mov dx, 0x1F0
  6002 00005077 66ED                <1> 	in ax, dx
  6003 00005079 668906              <1> 	mov [esi], ax
  6004 0000507C 81C602000000        <1> 	add esi, 2
  6005 00005082 664B                <1> 	dec bx
  6006 00005084 6681FB0000          <1> 	cmp bx, 0
  6007 00005089 75E8                <1> 	jne diskdataread		;;read a sector
  6008 0000508B FEC9                <1> 	dec cl
  6009 0000508D 80F900              <1> 	cmp cl, 0
  6010 00005090 75C9                <1> 	jne diskrwait
  6011 00005092 89F7                <1> 	mov edi, esi
  6012 00005094 8B15[E0500000]      <1> 	mov edx, [lbaadend]
  6013 0000509A 8B35[E8500000]      <1> 	mov esi, [bufferstartesi]
  6014 000050A0 8B1D[E4500000]      <1> 	mov ebx, [lbaadstartebx]
  6015 000050A6 C3                  <1> 	ret
  6016                              <1> 	
  6017                              <1> 	
  6018                              <1> diskold: ;;28 bits
  6019 000050A7 66B80000            <1> 	mov ax, 0
  6020 000050AB 66BAF101            <1> 	mov dx, 0x1F1
  6021 000050AF EE                  <1> 	out dx, al	;;send null byte to port
  6022 000050B0 6642                <1> 	inc dx	;;0x1F2
  6023 000050B2 88C8                <1> 	mov al, cl	;;get sector count
  6024 000050B4 EE                  <1> 	out dx, al	;;send sector count
  6025 000050B5 6642                <1> 	inc dx	;;0x1F3
  6026 000050B7 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  6027 000050B9 EE                  <1> 	out dx, al	;;send them
  6028 000050BA 6642                <1> 	inc dx	;;0x1F4
  6029 000050BC C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  6030 000050BF 88D8                <1> 	mov al, bl
  6031 000050C1 EE                  <1> 	out dx, al
  6032 000050C2 6642                <1> 	inc dx	;;0x1F5
  6033 000050C4 C1CB08              <1> 	ror ebx, 8	;;again
  6034 000050C7 88D8                <1> 	mov al, bl
  6035 000050C9 EE                  <1> 	out dx, al
  6036 000050CA 6642                <1> 	inc dx	;;0x1F6
  6037 000050CC C1CB08              <1> 	ror ebx, 8
  6038 000050CF 88D8                <1> 	mov al, bl
  6039 000050D1 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  6040 000050D3 0CE0                <1> 	or al, 0xE0			;;majic number
  6041 000050D5 C0E504              <1> 	shl ch, 4
  6042 000050D8 08E8                <1> 	or al, ch
  6043 000050DA EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  6044 000050DB 6642                <1> 	inc dx	;;0x1F7
  6045 000050DD B020                <1> 	mov al, 0x20
  6046 000050DF EE                  <1> 	out dx, al			;;execute read command
  6047                              <1> 	
  6048 000050E0 00000000            <1> lbaadend dd 0
  6049 000050E4 00000000            <1> lbaadstartebx dd 0
  6050 000050E8 00000000            <1> bufferstartesi dd 0
  6051                                  	%include 'source/threads.asm'
  6052                              <1> ;;THIS IS MY FIRST ATTEMPT AT IMPLEMENTING THREADS
  6053                              <1> threadstarttest:
  6054 000050EC E9ED040000          <1>     jmp startthreads
  6055                              <1> mainthread:
  6056 000050F1 F4                  <1> 	hlt		;;this does not work properly
  6057 000050F2 EBFD                <1> 	jmp mainthread
  6058                              <1> 	
  6059                              <1> nwcmdst:
  6060 000050F4 FA                  <1> 	cli			;;no more interrupts!!!
  6061 000050F5 BE[13580000]        <1> 	mov esi, line
  6062 000050FA E8C9BFFFFF          <1> 	call print
  6063 000050FF C605[3C510000]00    <1> 	mov byte [threadson], 0
  6064 00005106 E91EC5FFFF          <1> 	jmp nwcmd
  6065                              <1> 	
  6066                              <1> modelthread:
  6067 0000510B 668B1D[61570000]    <1> 	mov bx, [currentthread]
  6068 00005112 B001                <1> 	mov al, 1
  6069 00005114 B409                <1> 	mov ah, 9
  6070 00005116 B900000000          <1> 	mov ecx, 0
  6071 0000511B 6689D9              <1> 	mov cx, bx
  6072 0000511E CD30                <1> 	int 0x30
  6073                              <1> 	
  6074 00005120 B90000DEC0          <1> 	mov ecx, 0xC0DE0000
  6075 00005125 6689D9              <1> 	mov cx, bx
  6076 00005128 CD30                <1> 	int 0x30
  6077                              <1> 	
  6078 0000512A B90000ADDE          <1> 	mov ecx, 0xDEAD0000
  6079 0000512F 6689D9              <1> 	mov cx, bx
  6080 00005132 CD30                <1> 	int 0x30
  6081                              <1> 	
  6082 00005134 CD08                <1> 	int 8	;;skip this thread three times to ensure that all threads run
  6083 00005136 CD08                <1> 	int 8
  6084 00005138 CD08                <1> 	int 8
  6085                              <1> 	
  6086 0000513A EBB8                <1> 	jmp nwcmdst
  6087                              <1> 	
  6088                              <1> 	
  6089 0000513C 00                  <1> threadson db 0
  6090 0000513D 04000000            <1> lastthread dd 4
  6091                              <1> 
  6092                              <1> thrdtst:
  6093 00005141 [0B510000]<rept>    <1> times 256 dd modelthread	;;could go up to 2048, but that takes too long
  6094                              <1> thrdtstend:
  6095                              <1> 
  6096 00005541 00000000            <1> 	espold dd 0
  6097                              <1> 
  6098                              <1> threadfork:
  6099 00005545 C605[3C510000]01    <1> 	mov byte [threadson], 1
  6100 0000554C 60                  <1> 	pushad
  6101 0000554D 66B80040            <1> 	mov ax, 0x4000	;;this is the divider for the PIT
  6102 00005551 E640                <1> 	out 0x40, al
  6103 00005553 66C1C008            <1> 	rol ax, 8
  6104 00005557 E640                <1> 	out 0x40, al
  6105                              <1> 	
  6106 00005559 8CC8                <1> 	mov eax, cs
  6107 0000555B 89C2                <1> 	mov edx, eax
  6108 0000555D 8B4C2428            <1> 	mov ecx, [esp + 40]
  6109 00005561 81C900020000        <1> 	or ecx, 0x200
  6110 00005567 89E3                <1> 	mov ebx, esp
  6111 00005569 BC[27580000]        <1> 	mov esp, stackdummy
  6112 0000556E 90                  <1> 	nop
  6113                              <1> 	
  6114 0000556F 60                  <1> 	pushad
  6115 00005570 B8[F1500000]        <1> 	mov eax, mainthread
  6116 00005575 89442420            <1> 	mov [esp + 32], eax
  6117 00005579 89542424            <1> 	mov [esp + 36], edx
  6118 0000557D 894C2428            <1> 	mov [esp + 40], ecx
  6119 00005581 8925[1F340000]      <1> 	mov [threadlist], esp
  6120                              <1> 	
  6121 00005587 891D[41550000]      <1> 	mov [espold], ebx
  6122 0000558D 89F0                <1> 	mov eax, esi
  6123 0000558F BC[275C0000]        <1> 	mov esp, stack1
  6124 00005594 8B1D[3D510000]      <1> 	mov ebx, [lastthread]
  6125 0000559A C1E30A              <1> 	shl ebx, 10
  6126 0000559D 01DC                <1> 	add esp, ebx
  6127 0000559F C1EB0A              <1> 	shr ebx, 10
  6128 000055A2 90                  <1> 	nop
  6129 000055A3 60                  <1> 	pushad
  6130 000055A4 89442420            <1> 	mov [esp + 32], eax
  6131 000055A8 89542424            <1> 	mov [esp + 36], edx
  6132 000055AC 894C2428            <1> 	mov [esp + 40], ecx
  6133 000055B0 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  6134 000055B6 8B25[41550000]      <1> 	mov esp, [espold]
  6135 000055BC 81C304000000        <1> 	add ebx, 4
  6136 000055C2 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  6137 000055C8 81C304000000        <1> 	add ebx, 4
  6138 000055CE 891D[3D510000]      <1> 	mov [lastthread], ebx
  6139 000055D4 B0FE                <1> 	mov al, 0xFE
  6140 000055D6 E621                <1> 	out 0x21, al
  6141 000055D8 B020                <1> 	mov al, 0x20
  6142 000055DA E620                <1> 	out 0x20, al
  6143 000055DC 61                  <1> 	popad
  6144 000055DD C3                  <1> 	ret
  6145                              <1> 
  6146                              <1> startthreads:
  6147 000055DE C605[3C510000]01    <1> 	mov byte [threadson], 1
  6148 000055E5 60                  <1> 	pushad
  6149 000055E6 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  6150 000055EA E640                <1> 	out 0x40, al
  6151 000055EC 66C1C008            <1> 	rol ax, 8
  6152 000055F0 E640                <1> 	out 0x40, al
  6153                              <1> 	
  6154 000055F2 8CC8                <1> 	mov eax, cs
  6155 000055F4 89C2                <1> 	mov edx, eax
  6156 000055F6 8B4C2428            <1> 	mov ecx, [esp + 40]
  6157 000055FA 81C900020000        <1> 	or ecx, 0x200
  6158 00005600 89E3                <1> 	mov ebx, esp
  6159 00005602 BC[27580000]        <1> 	mov esp, stackdummy
  6160 00005607 90                  <1> 	nop
  6161                              <1> 	
  6162 00005608 60                  <1> 	pushad
  6163 00005609 B8[F1500000]        <1> 	mov eax, mainthread
  6164 0000560E 89442420            <1> 	mov [esp + 32], eax
  6165 00005612 89542424            <1> 	mov [esp + 36], edx
  6166 00005616 894C2428            <1> 	mov [esp + 40], ecx
  6167 0000561A 8925[1F340000]      <1> 	mov [threadlist], esp
  6168                              <1> 
  6169                              <1> 			;;that above setup the dummy thread which for some reason does not run
  6170                              <1> 			;;this below will setup the threads found in thrdtst
  6171                              <1> 
  6172                              <1> testthreads:
  6173 00005620 BE[41510000]        <1> 	mov esi, thrdtst
  6174 00005625 BC[275C0000]        <1> 	mov esp, stack1
  6175 0000562A BF[1F340000]        <1> 	mov edi, threadlist
  6176 0000562F 81C704000000        <1> 	add edi, 4
  6177                              <1> nxtthreadld:
  6178 00005635 60                  <1> 	pushad
  6179 00005636 8B06                <1> 	mov eax, [esi]
  6180 00005638 89442420            <1> 	mov [esp + 32], eax
  6181 0000563C 89542424            <1> 	mov [esp + 36], edx
  6182 00005640 894C2428            <1> 	mov [esp + 40], ecx
  6183 00005644 8927                <1> 	mov [edi], esp
  6184 00005646 81C400040000        <1> 	add esp, 1024
  6185 0000564C 81C604000000        <1> 	add esi, 4
  6186 00005652 81C704000000        <1> 	add edi, 4
  6187 00005658 81FF[27540000]      <1> 	cmp edi, threadlistend
  6188 0000565E 0F8322000000        <1> 	jae near nomorethreadspace
  6189 00005664 81FC[27642000]      <1> 	cmp esp, bssend
  6190 0000566A 0F8350000000        <1> 	jae near nomorestackspace
  6191 00005670 81FE[41550000]      <1> 	cmp esi, thrdtstend
  6192 00005676 72BD                <1> 	jb nxtthreadld
  6193 00005678 89DC                <1> 	mov esp, ebx	
  6194 0000567A B0FE                <1> 	mov al, 0xFE
  6195 0000567C E621                <1> 	out 0x21, al
  6196 0000567E B020                <1> 	mov al, 0x20
  6197 00005680 E620                <1> 	out 0x20, al
  6198 00005682 61                  <1> 	popad
  6199 00005683 FB                  <1> 	sti
  6200 00005684 EBFE                <1> 	jmp $	;;wait for the irq to hook
  6201                              <1> 	
  6202                              <1> nomorethreadspace:
  6203 00005686 BE[9C560000]        <1> 	mov esi, nmts
  6204 0000568B E838BAFFFF          <1> 	call print
  6205 00005690 C605[3C510000]00    <1> 	mov byte [threadson], 0
  6206 00005697 E98DBFFFFF          <1> 	jmp nwcmd
  6207 0000569C 74656820636F6C6F6E- <1> nmts	db "teh colonel no can haz moar treds",13,10,0
  6208 000056A5 656C206E6F2063616E- <1>
  6209 000056AE 2068617A206D6F6172- <1>
  6210 000056B7 2074726564730D0A00  <1>
  6211                              <1> 
  6212                              <1> nomorestackspace:
  6213 000056C0 BE[D6560000]        <1> 	mov esi, nmss
  6214 000056C5 E8FEB9FFFF          <1> 	call print
  6215 000056CA C605[3C510000]00    <1> 	mov byte [threadson], 0
  6216 000056D1 E953BFFFFF          <1> 	jmp nwcmd
  6217 000056D6 74656820636F6C6F6E- <1> nmss	db "teh colonel no can haz moar staqz",13,10,0
  6218 000056DF 656C206E6F2063616E- <1>
  6219 000056E8 2068617A206D6F6172- <1>
  6220 000056F1 20737461717A0D0A00  <1>
  6221                              <1> 	
  6222                              <1> threadswitch:
  6223 000056FA FA                  <1> 	cli
  6224 000056FB 60                  <1> 	pushad
  6225 000056FC BF[1F340000]        <1> 	mov edi, threadlist
  6226 00005701 B800000000          <1> 	mov eax, 0
  6227 00005706 66A1[61570000]      <1> 	mov ax, [currentthread]
  6228 0000570C 6640                <1> 	inc ax
  6229 0000570E 66A3[61570000]      <1> 	mov [currentthread], ax
  6230 00005714 6648                <1> 	dec ax
  6231 00005716 C1E002              <1> 	shl eax, 2
  6232 00005719 01C7                <1> 	add edi, eax
  6233 0000571B 8927                <1> 	mov [edi], esp
  6234 0000571D 81C704000000        <1> 	add edi, 4
  6235 00005723 81FF[27540000]      <1> 	cmp edi, threadlistend
  6236 00005729 0F830D000000        <1> 	jae near nookespthread
  6237 0000572F 8B07                <1> 	mov eax, [edi]
  6238 00005731 3D00000000          <1> 	cmp eax, 0
  6239 00005736 0F851C000000        <1> 	jne near okespthread
  6240                              <1> nookespthread:
  6241 0000573C BF[1F340000]        <1> 	mov edi, threadlist
  6242 00005741 66B80000            <1> 	mov ax, 0
  6243 00005745 66A3[61570000]      <1> 	mov [currentthread], ax
  6244 0000574B 8B07                <1> 	mov eax, [edi]
  6245 0000574D 3D00000000          <1> 	cmp eax, 0
  6246 00005752 0F849CF9FFFF        <1> 	je near nwcmdst
  6247                              <1> okespthread:
  6248 00005758 89C4                <1> 	mov esp, eax
  6249 0000575A B020                <1> 	mov al, 0x20
  6250 0000575C E620                <1> 	out 0x20, al
  6251 0000575E 61                  <1> 	popad
  6252 0000575F FB                  <1> 	sti
  6253 00005760 CF                  <1> 	iretd
  6254                              <1> 	
  6255 00005761 0000                <1> currentthread dw 0
  6256                                      %include 'fileindex.asm'
  6257                              <1> diskfileindex:
  6258 00005763 65787000            <1> db "exp",0
  6259 00005767 36000000            <1> dd (f0-$$)/512
  6260 0000576B 01000000            <1> dd (f1-f0)/512
  6261 0000576F 666F726B00          <1> db "fork",0
  6262 00005774 37000000            <1> dd (f1-$$)/512
  6263 00005778 01000000            <1> dd (f2-f1)/512
  6264 0000577C 736F6C6C65726F732E- <1> db "solleros.bmp",0
  6265 00005785 626D7000            <1>
  6266 00005789 38000000            <1> dd (f2-$$)/512
  6267 0000578D B0020000            <1> dd (f3-f2)/512
  6268 00005791 736F6C6C65726F732E- <1> db "solleros.txt",0
  6269 0000579A 74787400            <1>
  6270 0000579E E8020000            <1> dd (f3-$$)/512
  6271 000057A2 01000000            <1> dd (f4-f3)/512
  6272 000057A6 74656C7900          <1> db "tely",0
  6273 000057AB E9020000            <1> dd (f4-$$)/512
  6274 000057AF 01000000            <1> dd (f5-f4)/512
  6275 000057B3 74696D6500          <1> db "time",0
  6276 000057B8 EA020000            <1> dd (f5-$$)/512
  6277 000057BC 02000000            <1> dd (f6-f5)/512
  6278 000057C0 7475746F7269616C2E- <1> db "tutorial.bat",0
  6279 000057C9 62617400            <1>
  6280 000057CD EC020000            <1> dd (f6-$$)/512
  6281 000057D1 03000000            <1> dd (f7-f6)/512
  6282                              <1> enddiskfileindex:
  6283                              <1> 
  6284                                  	%include 'source/msg.asm'
  6285 000057D5 6578697400          <1> 	exitmsg db	"exit",0
  6286 000057DA 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  6287 000057E3 00                  <1>
  6288 000057E4 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  6289 000057ED 6E642E0D0A00        <1>
  6290 000057F3 757365726E616D653A- <1> 	userask db "username:",0
  6291 000057FC 00                  <1>
  6292 000057FD 70617373776F72643A- <1> 	pwdask	db	"password:",0
  6293 00005806 00                  <1>
  6294 00005807 40536F6C6C65724F53- <1> 	location	db	"@SollerOS]:",0
  6295 00005810 5D3A00              <1>
  6296 00005813 0D0A00              <1> 	line	db	13,10,0
  6297 00005816 200900              <1> 	dirtab 	db " ",9,0
  6298                              <1> 	userlst:
  6299 00005819 7573657200          <1> 			db "user",0
  6300 0000581E 70617373776F726400  <1> 			db "password",0
  6301 00005827 726F6F7400          <1> 			db "root",0
  6302 0000582C 617765736F6D65706F- <1> 			db "awesomepower",0
  6303 00005835 77657200            <1>
  6304 00005839 6E00                <1> 			db "n",0	;;use for quick entry-a quick double n followed by a double enter will get you in
  6305 0000583B 00                  <1> 			db 0
  6306                              <1> 	userlstend:
  6307                              <1> 	
  6308 0000583B <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  6309                              <1> fontend:
  6310                              <1> 
  6311                              <1> 
  6312                              <1> mcursor:
  6313 0000683C 01                  <1> 	db	00000001b
  6314 0000683D 81                  <1> 	db	10000001b
  6315 0000683E C1                  <1> 	db	11000001b
  6316 0000683F E1                  <1> 	db	11100001b
  6317 00006840 F1                  <1> 	db	11110001b
  6318 00006841 F9                  <1> 	db	11111001b
  6319 00006842 FD                  <1> 	db	11111101b
  6320 00006843 FF                  <1> 	db	11111111b
  6321 00006844 F9                  <1> 	db	11111001b
  6322 00006845 B9                  <1> 	db	10111001b
  6323 00006846 39                  <1> 	db	00111001b
  6324 00006847 1C                  <1> 	db	00011100b
  6325 00006848 1C                  <1> 	db	00011100b
  6326 00006849 0E                  <1> 	db	00001110b
  6327 0000684A 0E                  <1> 	db	00001110b
  6328 0000684B 0C                  <1> 	db	00001100b
  6329                              <1> 
  6330                              <1> ;cursorbmp:
  6331                              <1> ;	db	1,0,0,0,0,0,0,0
  6332                              <1> ;	db	1,1,0,0,0,0,0,0
  6333                              <1> ;	db	1,1,1,0,0,0,0,0
  6334                              <1> ;	db	1,1,1,1,0,0,0,0
  6335                              <1> ;	db	1,1,1,1,1,0,0,0
  6336                              <1> ;	db	1,1,1,1,1,1,0,0
  6337                              <1> ;	db	1,1,1,1,1,1,1,0
  6338                              <1> ;	db	1,1,1,1,1,1,1,1
  6339                              <1> ;	db	1,1,1,1,1,1,0,0
  6340                              <1> ;	db	1,1,0,1,1,1,0,0
  6341                              <1> ;	db	1,0,0,1,1,1,0,0
  6342                              <1> ;	db	0,0,0,0,1,1,1,0
  6343                              <1> ;	db	0,0,0,0,1,1,1,0
  6344                              <1> ;	db	0,0,0,0,0,1,1,1
  6345                              <1> ;	db	0,0,0,0,0,1,1,1
  6346                              <1> ;	db	0,0,0,0,0,1,1,0
  6347                              <1> ;cursorbmpend:
  6348                              <1> 
  6349                              <1> 
  6350                              <1> VBEMODEBLOCK:
  6351 0000684C 00<rept>            <1> vbesignature 		times 4 db 0	;VBE Signature
  6352 00006850 00<rept>            <1> vbeversion  		times 2 db 0	;VBE Version
  6353 00006852 00<rept>            <1> oemstringptr  		times 4 db 0	;Pointer to OEM String
  6354 00006856 00<rept>            <1> capabilities 		times 4 db 0	;Capabilities of graphics cont.
  6355 0000685A 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  6356 0000685E 00<rept>            <1> totalmemory   		times 2 db 0	;number of 64Kb memory blocks
  6357 00006860 00<rept>            <1> oemsoftwarerev  	times 2 db 0	;VBE implementation Software revision
  6358 00006862 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  6359 00006866 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  6360 0000686A 00<rept>            <1> oemproductrevptr 	times 4 db 0	;Pointer to Product Revision String
  6361 0000686E 00<rept>            <1> reserved			times 222 db 0	;Reserved for VBE implementation scratch area
  6362 0000694C 00<rept>            <1> oemdata 			times 256 db 0	;Data Area for OEM Strings
  6363                              <1> 
  6364                              <1> 
  6365                              <1> VBEMODEINFOBLOCK:
  6366                              <1> ;Mandatory information for all VBE revision
  6367 00006A4C 00<rept>            <1> modeattributes   	times 2 db 0	;Mode attributes
  6368 00006A4E 00                  <1> winaattributes   	times 1 db 0	;Window A attributes
  6369 00006A4F 00                  <1> winbattributes   	times 1 db 0	;Window B attributes
  6370 00006A50 00<rept>            <1> wingranularity   	times 2 db 0	;Window granularity
  6371 00006A52 00<rept>            <1> winsize          	times 2 db 0	;Window size
  6372 00006A54 00<rept>            <1> winasegment      	times 2 db 0	;Window A start segment
  6373 00006A56 00<rept>            <1> winbsegment      	times 2 db 0	;Window B start segment
  6374 00006A58 00<rept>            <1> winfuncptr       	times 4 db 0	;pointer to window function
  6375 00006A5C 00<rept>            <1> bytesperscanline 	times 2 db 0	;Bytes per scan line
  6376                              <1> 
  6377                              <1> ;Mandatory information for VBE 1.2 and above
  6378 00006A5E 00<rept>            <1> xresolution     	times 2 db 0	;Horizontal resolution in pixel or chars
  6379 00006A60 00<rept>            <1> yresolution	    	times 2 db 0	;Vertical resolution in pixel or chars
  6380 00006A62 00                  <1> xcharsize       	times 1 db 0	;Character cell width in pixel
  6381 00006A63 00                  <1> ycharsize       	times 1 db 0	;Character cell height in pixel
  6382 00006A64 00                  <1> numberofplanes  	times 1 db 0	;Number of memory planes
  6383 00006A65 00                  <1> bitsperpixel    	times 1 db 0	;Bits per pixel
  6384 00006A66 00                  <1> numberofbanks   	times 1 db 0	;Number of banks
  6385 00006A67 00                  <1> memorymodel     	times 1 db 0	;Memory model type
  6386 00006A68 00                  <1> banksize        	times 1 db 0	;Bank size in KB
  6387 00006A69 00                  <1> numberofimagepages	times 1 db 0	;Number of images
  6388 00006A6A 00                  <1> reserved1       	times 1 db 0	;Reserved for page function
  6389                              <1> 
  6390                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  6391 00006A6B 00                  <1> redmasksize			times 1 db 0	;Size of direct color red mask in bits
  6392 00006A6C 00                  <1> redfieldposition	times 1 db 0	;Bit position of lsb of red bask
  6393 00006A6D 00                  <1> greenmasksize   	times 1 db 0	;Size of direct color green mask in bits
  6394 00006A6E 00                  <1> greenfieldposition	times 1 db 0	;Bit position of lsb of green bask
  6395 00006A6F 00                  <1> bluemasksize		times 1 db 0	;Size of direct color blue mask in bits
  6396 00006A70 00                  <1> bluefieldposition	times 1 db 0	;Bit position of lsb of blue bask
  6397 00006A71 00                  <1> rsvdmasksize        times 1	db 0	;Size of direct color reserved mask in bits
  6398 00006A72 00                  <1> rsvdfieldposition	times 1	db 0	;Bit position of lsb of reserved bask
  6399 00006A73 00                  <1> directcolormodeinfo	times 1 db 0	;Direct color mode attributes
  6400                              <1> 
  6401                              <1> ;Mandatory information for VBE 2.0 and above
  6402 00006A74 00<rept>            <1> physbaseptr 		times 4 db 0	;Physical address for flat frame buffer
  6403 00006A78 00<rept>            <1> offscreenmemoffset 	times 4 db 0	;Pointer to start of off screen memory
  6404 00006A7C 00<rept>            <1> offscreenmemsize 	times 2 db 0    ;Amount of off screen memory in 1Kb units
  6405 00006A7E 00<rept>            <1> reserved2 			times 206 db 0  ;Remainder of ModeInfoBlock
  6406                                  	;%include 'source/memory.asm'
  6407                                  	%include 'source/buf.asm'
  6408 00006B4C 4255465354415254    <1> db "BUFSTART"
  6409                              <1> [section .bss]
  6410                              <1> bssstart:
  6411                              <1> stack:
  6412 00000000 <res 00001000>      <1> 	resb 4096
  6413                              <1> stackend:
  6414                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  6415 00001000 <res 00000200>      <1> 	resb 200h 
  6416                              <1> 	graphicstableend:
  6417                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  6418 00001200 <res 00000100>      <1> 	resb 256 
  6419                              <1> mcolorend:
  6420 00001300 <res 00000200>      <1> fileindex: resb 200h
  6421                              <1> fileindexend:
  6422 00001500 <res 00000001>      <1> IFON resb 1 
  6423 00001501 <res 00000064>      <1> IFTRUE resb 100 
  6424 00001565 <res 00000004>      <1> BATCHPOS resb 4 
  6425 00001569 <res 00000001>      <1> BATCHISON resb 1 
  6426 0000156A <res 00000001>      <1> LOOPON resb 1 
  6427 0000156B <res 00000004>      <1> LOOPPOS	resb 4 
  6428 0000156F <res 00000500>      <1> variables: 	resb 500h 
  6429 00001A6F <res 00000001>      <1> varend: resb 1
  6430 00001A70 <res 00000100>      <1> buftxt2: resb 100h
  6431 00001B70 <res 0000000A>      <1> resb 10
  6432 00001B7A <res 00000100>      <1> buftxt: resb 100h 
  6433 00001C7A <res 00000014>      <1> buf2:	resb 20 
  6434 00001C8E <res 00000001>      <1> numbuf: resb 1 
  6435 00001C8F <res 000012C0>      <1> videobuf2 		resb 0x12C0 
  6436 00002F4F <res 000000C8>      <1> videobufend		resb 200
  6437 00003017 <res 00000004>      <1> lastcommandpos: resb 4
  6438 0000301B <res 00000004>      <1> currentcommandpos: resb 4
  6439                              <1> commandbuf:
  6440 0000301F <res 00000400>      <1> resb 1024
  6441                              <1> commandbufend:
  6442                              <1> rbuffstart: ;for use with networking
  6443                              <1> ;resb 8212
  6444                              <1> threadlist:	;;this buffer will hold the stack locations of all of the threads, up to 2048
  6445 0000341F <res 00002008>      <1> 	resb 2050*4
  6446                              <1> threadlistend:
  6447                              <1> stacks:		;;the stacks will go on forever until end of memory
  6448 00005427 <res 00000400>      <1> 	resb 1024
  6449                              <1> stackdummy:
  6450 00005827 <res 00000400>      <1> 	resb 1024
  6451                              <1> stack1:
  6452 00005C27 <res 00200800>      <1> 	resb 1024*2050	;;woah, thats a lot of space for stacks
  6453                              <1> bssend:		;;from here on, it is not kernel space so apps can be loaded here.
  6454                              <1> [section .text]
  6455                                      %include 'files.asm'
  6456 00006B54 00<rept>            <1> align 512,db 0
  6457                              <1> f0:
  6458 00006B54 <incbin>            <1> incbin "included/exp"
  6459 00006C56 00<rept>            <1> align 512,db 0
  6460                              <1> f1:
  6461 00006C56 <incbin>            <1> incbin "included/fork"
  6462 00006E67 00<rept>            <1> align 512,db 0
  6463                              <1> f2:
  6464 00006E67 <incbin>            <1> incbin "included/solleros.bmp"
  6465 0005CFE6 00<rept>            <1> align 512,db 0
  6466                              <1> f3:
  6467 0005CFE6 <incbin>            <1> incbin "included/solleros.txt"
  6468 0005D176 00<rept>            <1> align 512,db 0
  6469                              <1> f4:
  6470 0005D176 <incbin>            <1> incbin "included/tely"
  6471 0005D3BD 00<rept>            <1> align 512,db 0
  6472                              <1> f5:
  6473 0005D3BD <incbin>            <1> incbin "included/time"
  6474 0005D67B 00<rept>            <1> align 512,db 0
  6475                              <1> f6:
  6476 0005D67B <incbin>            <1> incbin "included/tutorial.bat"
  6477 0005DCAA 00<rept>            <1> align 512,db 0
  6478                              <1> f7:
