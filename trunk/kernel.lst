     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> %include 'source/signature.asm'
     5                              <2> signature:	;used by bootloader to find SollerOS, is totally awesome
     6 00000000 EDA55ED1            <2> dd 0xD15EA5ED	;diseased
     7 00000004 15D000B1            <2> dd 0xB100D015	;blood is
     8 00000008 EDFED2BA            <2> dd 0xBAD2FEED	;bad to feed
     9 0000000C 95D0112A            <2> dd 0x2A11D095	;to all dogs
    10 00000010 52A71CA1            <2> dd 0xA11CA752	;all cats too.
    11 00000014 0F751015            <2> dd 0x1510750F   ;is lots of
    12 00000018 75CAADDE            <2> dd 0xDEADCA75   ;dead cats
    13 0000001C 95D0ADDE            <2> dd 0xDEADD095   ;dead dogs
    14 00000020 18000000            <2> dd 24			;version
    15 00000024 534F4C4C45524F53    <2> db "SOLLEROS"
    16                              <2> signatureend:
    17                              <1> menustart:	
    18 0000002C 8CC8                <1> 	mov ax, cs
    19 0000002E 8ED8                <1> 	mov ds, ax
    20 00000030 8EC0                <1> 	mov es, ax
    21 00000032 8ED0                <1> 	mov ss, ax
    22 00000034 880E[8701]          <1> 	mov [DriveNumber], cl
    23 00000038 668916[8801]        <1> 	mov [lbaad], edx
    24 0000003D B800A0              <1> 	mov ax, 0xA000
    25 00000040 8EE8                <1> 	mov gs, ax
    26 00000042 B81200              <1> 	mov ax, 12h
    27 00000045 BB0000              <1> 	mov bx, 0
    28 00000048 CD10                <1> 	int 10h
    29                              <1> guiload:
    30 0000004A BE[9802]            <1> 	mov si, bootmsg
    31 0000004D E85101              <1> 	call printrm
    32 00000050 B80000              <1> 	mov ax, 0
    33 00000053 CD16                <1> 	int 16h
    34 00000055 3C79                <1> 	cmp al, "y"
    35 00000057 0F85F900            <1> 	jne near guiload2
    36                              <1> guiloadagain:
    37 0000005B B8004F              <1> 	mov ax, 04F00h
    38 0000005E BF[936F]            <1> 	mov di, VBEMODEBLOCK
    39 00000061 CD10                <1> 	int 10h
    40 00000063 BE[B56F]            <1> 	mov si, reserved
    41 00000066 81EE0200            <1> 	sub si, 2
    42                              <1> findvideomodes:
    43 0000006A 81C60200            <1> 	add si, 2
    44 0000006E 8B0C                <1> 	mov cx, [si]
    45 00000070 81F9FFFF            <1> 	cmp cx, 0xFFFF
    46 00000074 0F840A00            <1> 	je near nextvmode
    47 00000078 81FE[9370]          <1> 	cmp si, oemdata
    48 0000007C 0F83D400            <1> 	jae near guiload2	;;kill if no valid list is found
    49 00000080 EBE8                <1> 	jmp findvideomodes 	
    50                              <1> ;;debug,shows vmodes available
    51                              <1> nextvmode:
    52 00000082 81EE0200            <1> 	sub si, 2
    53 00000086 81FE[B56F]          <1> 	cmp si, reserved
    54 0000008A 0F82CDFF            <1> 	jb near guiloadagain
    55 0000008E 8B0C                <1> 	mov cx, [si]
    56 00000090 81F9FFFF            <1> 	cmp cx, 0xFFFF
    57 00000094 0F84EAFF            <1> 	je near nextvmode
    58 00000098 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    59 0000009C B8014F              <1> 	mov ax, 04F01h
    60 0000009F BF[9371]            <1> 	mov di, VBEMODEINFOBLOCK
    61 000000A2 890E[8C01]          <1> 	mov [vesamode], cx
    62 000000A6 CD10                <1> 	int 10h
    63 000000A8 A0[AC71]            <1> 	mov al, [bitsperpixel]
    64 000000AB 3C10                <1> 	cmp al, 16
    65 000000AD 75D3                <1> 	jne nextvmode
    66 000000AF 8936[8E01]          <1> 	mov [videomodecache], si
    67 000000B3 80FC00              <1> 	cmp ah, 0
    68 000000B6 0F842200            <1> 	je near setvesamode
    69 000000BA EBC6                <1> 	jmp nextvmode
    70 000000BC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    71 000000C5 20766964656F206D6F- <1>
    72 000000CE 6465204F4B3F28792F- <1>
    73 000000D7 6E290D0A00          <1>
    74                              <1> setvesamode:
    75 000000DC 8B0E[A571]          <1> 	mov cx, [xresolution]
    76 000000E0 E8D600              <1> 	call decshow
    77 000000E3 B078                <1> 	mov al, "x"
    78 000000E5 E83E01              <1> 	call char
    79 000000E8 8B0E[A771]          <1> 	mov cx, [yresolution]
    80 000000EC E8CA00              <1> 	call decshow
    81 000000EF B040                <1> 	mov al, "@"
    82 000000F1 E83201              <1> 	call char
    83 000000F4 8A0E[AC71]          <1> 	mov cl, [bitsperpixel]
    84 000000F8 E8BE00              <1> 	call decshow
    85 000000FB BE[BC00]            <1> 	mov si, isthisvideook
    86 000000FE E8A000              <1> 	call printrm
    87 00000101 B80000              <1> 	mov ax, 0
    88 00000104 CD16                <1> 	int 16h
    89 00000106 8B36[8E01]          <1> 	mov si, [videomodecache]
    90 0000010A 3C79                <1> 	cmp al, "y"
    91 0000010C 0F8572FF            <1> 	jne near nextvmode
    92 00000110 8B16[A571]          <1> 	mov dx, [xresolution]
    93 00000114 8B0E[A771]          <1> 	mov cx, [yresolution]
    94 00000118 8916[AB4A]          <1> 	mov [resolutionx], dx
    95 0000011C 890E[A94A]          <1> 	mov [resolutiony], cx
    96 00000120 01D2                <1> 	add dx, dx
    97 00000122 8916[AD4A]          <1> 	mov [resolutionx2], dx
    98 00000126 BA0000              <1> 	mov dx, 0
    99 00000129 B90000              <1> 	mov cx, 0
   100 0000012C B8024F              <1> 	mov ax, 04F02h
   101 0000012F 8B1E[8C01]          <1> 	mov bx, [vesamode]
   102 00000133 CD10                <1> 	int 10h		;;enter VESA mode
   103 00000135 C606[9001]00        <1> 	mov byte [guinodo], 0
   104 0000013A C606[293C]01        <1> 	mov byte [guion], 1
   105 0000013F 6631C0              <1> 	xor eax, eax
   106 00000142 6631DB              <1> 	xor ebx, ebx
   107 00000145 6631C9              <1> 	xor ecx, ecx
   108 00000148 6631D2              <1> 	xor edx, edx
   109 0000014B 6631F6              <1> 	xor esi, esi
   110 0000014E 6631FF              <1> 	xor edi, edi	;;reset registers
   111 00000151 E95E01              <1> 	jmp pmode
   112                              <1> guiload2:
   113 00000154 B9E001              <1> 	mov cx, 480
   114 00000157 BA8002              <1> 	mov dx, 640
   115 0000015A 8916[AB4A]          <1> 	mov [resolutionx], dx
   116 0000015E 01D2                <1> 	add dx, dx
   117 00000160 8916[AD4A]          <1> 	mov [resolutionx2], dx
   118 00000164 890E[A94A]          <1> 	mov [resolutiony], cx
   119 00000168 B81200              <1> 	mov ax, 12h
   120 0000016B BB0000              <1> 	mov bx, 0
   121 0000016E CD10                <1> 	int 10h
   122 00000170 C606[9001]01        <1> 	mov byte [guinodo], 1
   123 00000175 6631DB              <1> 	xor ebx, ebx
   124 00000178 6631C9              <1> 	xor ecx, ecx
   125 0000017B 6631D2              <1> 	xor edx, edx
   126 0000017E 6631F6              <1> 	xor esi, esi
   127 00000181 6631FF              <1> 	xor edi, edi
   128 00000184 E92B01              <1> 	jmp pmode
   129                              <1> 
   130 00000187 00                  <1> DriveNumber db 0
   131 00000188 00000000            <1> lbaad dd 0
   132                              <1> 	
   133 0000018C 0000                <1> vesamode dw 0
   134 0000018E 0000                <1> videomodecache dw 0
   135                              <1> 
   136 00000190 00                  <1> guinodo db 0
   137                              <1> tests:
   138 00000191 BB0700              <1> 	mov bx, 7
   139 00000194 B40E                <1> 	mov ah, 0Eh
   140 00000196 FEC0                <1> 	inc al
   141 00000198 3C02                <1> 	cmp al, 2
   142 0000019A 7501                <1> 	jne cnttest
   143 0000019C C3                  <1> 	ret
   144                              <1> cnttest:
   145 0000019D CD10                <1> 	int 10h
   146 0000019F EBF0                <1> 	jmp tests
   147                              <1> 
   148                              <1>     printrm:			; 'si' comes in with string address
   149 000001A1 BB0700              <1> 	    mov bx,07		; write to display
   150 000001A4 B40E                <1> 	    mov ah,0Eh		; screen function
   151 000001A6 8A04                <1>     prs2:    mov al,[si]         ; get next character
   152 000001A8 3C00                <1> 	    cmp al,0		; look for terminator 
   153 000001AA 7405                <1>             je finpr2		; zero byte at end of string
   154 000001AC CD10                <1> 	    int 10h		; write character to screen.    
   155 000001AE 46                  <1>      	    inc si	     	; move to next character
   156 000001AF EBF5                <1> 	    jmp prs2		; loop
   157 000001B1 C3                  <1>     finpr2: ret
   158                              <1> 
   159 000001B2 0000000000          <1> dcnm db 0,0,0,0,0
   160 000001B7 0000                <1> dcnmend db 0,0
   161                              <1> 
   162                              <1> 
   163                              <1> decshow:
   164 000001B9 BE[B201]            <1> 	mov si, dcnm
   165                              <1> decclear:
   166 000001BC B030                <1> 	mov al, "0"
   167 000001BE 8804                <1> 	mov [si], al
   168 000001C0 46                  <1> 	inc si
   169 000001C1 81FE[B701]          <1> 	cmp si, dcnmend
   170 000001C5 76F5                <1> 	jbe decclear
   171 000001C7 4E                  <1> 	dec si
   172 000001C8 E81500              <1> 	call convertrm
   173 000001CB BE[B201]            <1> 	mov si, dcnm
   174                              <1> dectst:
   175 000001CE 8A04                <1> 	mov al, [si]
   176 000001D0 46                  <1> 	inc si
   177 000001D1 81FE[B701]          <1> 	cmp si, dcnmend
   178 000001D5 7704                <1> 	ja dectstend
   179 000001D7 3C30                <1> 	cmp al, "0"
   180 000001D9 76F3                <1> 	jbe dectst
   181                              <1> dectstend:
   182 000001DB 4E                  <1> 	dec si
   183 000001DC E8C2FF              <1> 	call printrm
   184 000001DF C3                  <1> 	ret
   185                              <1> 	
   186                              <1> 	
   187                              <1> convertrm:
   188 000001E0 4E                  <1> 	dec si
   189 000001E1 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   190                              <1> cnvrtrm:
   191 000001E3 89DE                <1> 	mov si, bx
   192 000001E5 81EE0300            <1> 	sub si, 3
   193 000001E9 46                  <1> ten3rm:	inc si
   194 000001EA 81F9E803            <1> 	cmp cx, 1000
   195 000001EE 7208                <1> 	jb ten2rm
   196 000001F0 81E9E803            <1> 	sub cx, 1000
   197 000001F4 FE04                <1> 	inc byte [si]
   198 000001F6 EBEB                <1> 	jmp cnvrtrm
   199 000001F8 46                  <1> ten2rm:	inc si
   200 000001F9 81F96400            <1> 	cmp cx, 100
   201 000001FD 7208                <1> 	jb ten1rm
   202 000001FF 81E96400            <1> 	sub cx, 100
   203 00000203 FE04                <1> 	inc byte [si]
   204 00000205 EBDC                <1> 	jmp cnvrtrm
   205 00000207 46                  <1> ten1rm:	inc si
   206 00000208 81F90A00            <1> 	cmp cx, 10
   207 0000020C 7208                <1> 	jb ten0rm
   208 0000020E 81E90A00            <1> 	sub cx, 10
   209 00000212 FE04                <1> 	inc byte [si]
   210 00000214 EBCD                <1> 	jmp cnvrtrm
   211 00000216 46                  <1> ten0rm:	inc si
   212 00000217 81F90100            <1> 	cmp cx, 1
   213 0000021B 7208                <1> 	jb tendnrm
   214 0000021D 81E90100            <1> 	sub cx, 1
   215 00000221 FE04                <1> 	inc byte [si]
   216 00000223 EBBE                <1> 	jmp cnvrtrm
   217                              <1> tendnrm:
   218 00000225 C3                  <1> 	ret
   219                              <1> 
   220                              <1> 
   221                              <1> 
   222                              <1> 
   223                              <1>     char: 		    ;char must be in al
   224 00000226 BB0700              <1>        mov bx, 07
   225 00000229 B40E                <1> 	   mov ah, 0Eh
   226 0000022B CD10                <1> 	   int 10h
   227 0000022D C3                  <1> 	   ret
   228                              <1> 
   229                              <1> 		shutdown:
   230 0000022E 0F20C0              <1> 				mov eax, cr0
   231 00000231 24FE                <1> 				and al,0xFE     ; back to realmode
   232 00000233 0F22C0              <1> 				mov  cr0, eax   ; by toggling bit again
   233 00000236 FB                  <1> 				sti
   234 00000237 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   235 0000023A 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   236 0000023C CD15                <1> 			INT 15h		; shut down
   237 0000023E B80453              <1> 			MOV AX, 5304h
   238 00000241 31DB                <1> 			XOR BX, BX
   239 00000243 CD15                <1> 			INT 15h		; Interrupt 15h originally was
   240 00000245 B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   241 00000248 31DB                <1> 			XOR BX, BX	; but is still in use for
   242 0000024A CD15                <1> 			INT 15h		; diverse things
   243 0000024C B80753              <1> 			MOV AX, 5307h
   244 0000024F BB0100              <1> 			MOV BX, 1
   245 00000252 B90300              <1> 			MOV CX, 3
   246 00000255 CD15                <1> 			INT 15h
   247 00000257 CF                  <1> 			IRET
   248                              <1> 
   249                              <1> 	coldboot:
   250 00000258 0F20C0              <1> 			   mov eax, cr0
   251 0000025B 24FE                <1> 			   and al,0xFE     ; back to realmode
   252 0000025D 0F22C0              <1> 			   mov  cr0, eax   ; by toggling bit again
   253 00000260 FB                  <1> 			   sti
   254 00000261 B84000              <1> 			MOV AX, 0040h
   255 00000264 8EC0                <1> 			MOV ES, AX
   256 00000266 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   257 0000026D EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   258 00000272 CF                  <1> 			IRET
   259                              <1> 
   260                              <1> 		warmboot:
   261 00000273 E81200              <1> 			call realmode
   262 00000276 B84000              <1> 			MOV AX, 0040h
   263 00000279 8EC0                <1> 			MOV ES, AX
   264 0000027B 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   265 00000282 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   266 00000287 CF                  <1> 			IRET
   267                              <1> 
   268                              <1> 
   269                              <1> realmode:
   270 00000288 0F20C0              <1>    mov eax, cr0
   271 0000028B 24FE                <1>    and al,0xFE     ; back to realmode
   272 0000028D 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   273 00000290 FB                  <1>    sti
   274 00000291 66B800000000        <1>    mov eax, 0
   275 00000297 C3                  <1>    ret
   276                              <1>    
   277 00000298 426F6F7420696E746F- <1> bootmsg:	db "Boot into the GUI?(y/n)",10,13,0
   278 000002A1 20746865204755493F- <1>
   279 000002AA 28792F6E290A0D00    <1>
   280                                      %include 'source/pmode.asm'
   281                              <1> [BITS 16]
   282                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   283                              <1> ;	16-bit real mode
   284                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   285                              <1> 
   286                              <1> pmode:
   287 000002B2 BA9200              <1> 	mov dx, 0x92
   288 000002B5 EC                  <1> 	in al, dx	;;A20
   289 000002B6 0C02                <1> 	or al, 2
   290 000002B8 EE                  <1> 	out dx, al
   291 000002B9 66BB00000000        <1> 	mov ebx, 0
   292 000002BF 8CCB                <1> 	mov bx,cs		; EBX=segment
   293 000002C1 66C1E304            <1> 	shl ebx,4		;	<< 4
   294 000002C5 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   295 000002C9 A3[3404]            <1> 	mov [gdt2 + 2],ax
   296 000002CC A3[3C04]            <1> 	mov [gdt3 + 2],ax
   297 000002CF 66C1E810            <1> 	shr eax,16
   298 000002D3 A2[3604]            <1> 	mov [gdt2 + 4],al
   299 000002D6 A2[3E04]            <1> 	mov [gdt3 + 4],al
   300 000002D9 8826[3904]          <1> 	mov [gdt2 + 7],ah
   301 000002DD 8826[4104]          <1> 	mov [gdt3 + 7],ah
   302                              <1> 	
   303 000002E1 66B8[00000000]      <1> 	mov eax, stack
   304 000002E7 A3[4404]            <1> 	mov [gdts + 2],ax
   305 000002EA 66C1E810            <1> 	shr eax,16
   306 000002EE A2[4604]            <1> 	mov [gdts + 4],al
   307 000002F1 8826[4904]          <1> 	mov [gdts + 7],ah
   308 000002F5 66A1[0104]          <1> 	mov eax, [newcodecache]
   309 000002F9 A3[4C04]            <1> 	mov [gdt4 + 2],ax
   310 000002FC A3[5404]            <1> 	mov [gdt5 + 2],ax
   311 000002FF 66C1E810            <1> 	shr eax,16
   312 00000303 A2[4E04]            <1> 	mov [gdt4 + 4],al
   313 00000306 A2[5604]            <1> 	mov [gdt5 + 4],al
   314 00000309 8826[5104]          <1> 	mov [gdt4 + 7],ah
   315 0000030D 8826[5904]          <1> 	mov [gdt5 + 7],ah
   316                              <1> 	
   317                              <1> ; fix up gdt and idt
   318 00000311 67668D83[22040000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   319 00000319 66A3[1804]          <1> 	mov [gdtr + 2],eax
   320 0000031D 67668D83[5A040000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   321 00000325 66A3[1E04]          <1> 	mov [idtr + 2],eax
   322 00000329 FA                  <1> 	cli
   323 0000032A 0F0116[1604]        <1> 	lgdt [gdtr]
   324 0000032F 0F011E[1C04]        <1> 	lidt [idtr]
   325 00000334 66BB00000000        <1> 	mov ebx, 0
   326 0000033A 8CDB                <1> 	mov bx, ds
   327 0000033C 66891E[FD03]        <1> 	mov [basecache], ebx
   328 00000341 0F20C0              <1> 	mov eax,cr0
   329 00000344 0C01                <1> 	or al,1
   330 00000346 0F22C0              <1> 	mov cr0,eax
   331 00000349 EA[5203]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   332                              <1> [BITS 32]
   333 0000034E 90                  <1> 	nop
   334 0000034F 90                  <1> 	nop
   335 00000350 90                  <1> 	nop
   336 00000351 90                  <1> 	nop
   337                              <1> do_pm:
   338 00000352 B800000000          <1> 	mov eax, 0
   339 00000357 66B81800            <1> 	mov ax, SYS_DATA_SEL
   340 0000035B 8ED8                <1> 	mov ds,ax
   341 0000035D 8ED0                <1> 	mov ss,ax	;;can switch back to STACK_SEL later
   342 0000035F BC[00100000]        <1> 	mov esp, stackend	;;can switch back to 4096 later
   343 00000364 90                  <1> 	nop
   344 00000365 90                  <1> 	nop
   345 00000366 8EC0                <1> 	mov es, ax
   346 00000368 8EE0                <1> 	mov fs, ax
   347 0000036A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   348 0000036E 8EE8                <1> 	mov gs, ax
   349                              <1> 	
   350                              <1> copykernel:
   351 00000370 648B06              <1> 	mov eax, [fs:esi]
   352 00000373 658906              <1> 	mov [gs:esi], eax
   353 00000376 81C604000000        <1> 	add esi, 4
   354 0000037C 81FE[00000000]      <1> 	cmp esi, bssstart
   355 00000382 72EC                <1> 	jb copykernel
   356 00000384 EA[8B030000]2800    <1> 	jmp NEW_CODE_SEL:done_copy
   357                              <1> 	
   358                              <1> done_copy:
   359 0000038B 66B83000            <1> 	mov ax, NEW_DATA_SEL	;;these MUST be setup AFTER the kernel switches places!!!
   360 0000038F 8ED8                <1> 	mov ds, ax
   361 00000391 8ED0                <1> 	mov ss, ax
   362 00000393 BC[00100000]        <1> 	mov esp, stackend
   363 00000398 90                  <1> 	nop
   364 00000399 90                  <1> 	nop
   365 0000039A 66B83000            <1> 	mov ax, NEW_DATA_SEL
   366 0000039E 8EC0                <1> 	mov es, ax
   367 000003A0 8EE0                <1> 	mov fs, ax
   368 000003A2 66B81800            <1> 	mov ax, SYS_DATA_SEL
   369 000003A6 8EE8                <1> 	mov gs, ax
   370                              <1> 	
   371 000003A8 A1[01040000]        <1> 	mov eax, [newcodecache]
   372 000003AD C1E804              <1> 	shr eax, 4
   373 000003B0 A3[FD030000]        <1> 	mov [basecache], eax
   374                              <1> 	
   375 000003B5 89C3                <1> 	mov ebx, eax
   376 000003B7 C1E304              <1> 	shl ebx, 4
   377 000003BA 8B3D[BB710000]      <1> 	mov edi, [physbaseptr]
   378 000003C0 29DF                <1> 	sub edi, ebx
   379 000003C2 893D[BB710000]      <1> 	mov [physbaseptr], edi
   380                              <1> 	
   381 000003C8 BE[00000000]        <1> 	mov esi, bssstart
   382 000003CD B800000000          <1> 	mov eax, 0
   383                              <1> clearkernelbuffers:
   384 000003D2 8906                <1> 	mov [esi], eax
   385 000003D4 81C604000000        <1> 	add esi, 4
   386 000003DA 81FE[27652000]      <1> 	cmp esi, bssend
   387 000003E0 72F0                <1> 	jb clearkernelbuffers
   388 000003E2 803D[90010000]01    <1> 	cmp byte [guinodo], 1
   389 000003E9 7407                <1> 	je guidonot
   390 000003EB 90                  <1> 	nop
   391 000003EC 90                  <1> 	nop
   392 000003ED E9DD360000          <1> 	jmp gui
   393                              <1> guidonot:
   394 000003F2 90                  <1> 	nop
   395 000003F3 90                  <1> 	nop
   396 000003F4 E9F7170000          <1> 	jmp os
   397                              <1> 	
   398 000003F9 00000000            <1> user2codepoint dw 0,0
   399 000003FD 00000000            <1> basecache dd 0
   400 00000401 00001000            <1> newcodecache dd 0x100000
   401                              <1> 
   402                              <1> timerinterrupt:
   403 00000405 803D[83580000]01    <1> 	cmp byte [threadson], 1
   404 0000040C 7505                <1> 	jne handled
   405 0000040E E92E5A0000          <1> 	jmp threadswitch
   406                              <1> 	
   407                              <1> handled:
   408 00000413 CF                  <1> 	iret
   409 00000414 EBFE                <1> 	jmp $
   410                              <1> [BITS 16]
   411                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   412                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   413                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   414 00000416 3700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   415 00000418 00000000            <1> 	dd 0    		; filled with linear, physical address of GDT
   416                              <1> 
   417 0000041C 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   418 0000041E 00000000            <1> 	dd 0			; filled with linear, physical address of IDT
   419                              <1> 
   420                              <1> 
   421 00000422 0000                <1> gdt:	dw 0			; limit 15:0
   422 00000424 0000                <1> 	dw 0			; base 15:0
   423 00000426 00                  <1> 	db 0			; base 23:16
   424 00000427 00                  <1> 	db 0			; type
   425 00000428 00                  <1> 	db 0			; limit 19:16, flags
   426 00000429 00                  <1> 	db 0			; base 31:24
   427                              <1> ; linear data segment descriptor
   428                              <1> LINEAR_SEL	equ	$-gdt
   429 0000042A FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   430 0000042C 0000                <1> 	dw 0			; base for this one is always 0
   431 0000042E 00                  <1> 	db 0
   432 0000042F 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   433 00000430 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   434 00000431 00                  <1> 	db 0
   435                              <1> ; code segment descriptor
   436                              <1> SYS_CODE_SEL	equ	$-gdt
   437 00000432 FFFF                <1> gdt2:	dw 0xFFFF
   438 00000434 0000                <1> 	dw 0			; (base gets set above)
   439 00000436 00                  <1> 	db 0
   440 00000437 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   441 00000438 CF                  <1> 	db 0xCF
   442 00000439 00                  <1> 	db 0
   443                              <1> ; data segment descriptor
   444                              <1> SYS_DATA_SEL	equ	$-gdt
   445 0000043A FFFF                <1> gdt3:	dw 0xFFFF
   446 0000043C 0000                <1> 	dw 0			; (base gets set above)
   447 0000043E 00                  <1> 	db 0
   448 0000043F 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   449 00000440 CF                  <1> 	db 0xCF
   450 00000441 00                  <1> 	db 0
   451                              <1> STACK_SEL	equ	$-gdt	;;this is no longer used for various reasons
   452 00000442 0100                <1> gdts:	dw 1
   453 00000444 0000                <1> 	dw 0			; (base gets set above)
   454 00000446 00                  <1> 	db 0
   455 00000447 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   456 00000448 C0                  <1> 	db 0xC0
   457 00000449 00                  <1> 	db 0
   458                              <1> NEW_CODE_SEL	equ	$-gdt
   459 0000044A FFFF                <1> gdt4:	dw 0xFFFF
   460 0000044C 0000                <1> 	dw 0			; (base gets set above)
   461 0000044E 00                  <1> 	db 0
   462 0000044F 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   463 00000450 CF                  <1> 	db 0xCF
   464 00000451 00                  <1> 	db 0
   465                              <1> ; data segment descriptor
   466                              <1> NEW_DATA_SEL	equ	$-gdt
   467 00000452 FFFF                <1> gdt5:	dw 0xFFFF
   468 00000454 0000                <1> 	dw 0			; (base gets set above)
   469 00000456 00                  <1> 	db 0
   470 00000457 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   471 00000458 CF                  <1> 	db 0xCF
   472 00000459 00                  <1> 	db 0
   473                              <1> gdt_end:
   474                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   475                              <1> ;	interrupt descriptor table (IDT)
   476                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   477                              <1> ; 32 reserved interrupts:
   478                              <1> idt:	
   479                              <1> %assign i 0
   480                              <1> %rep    8
   481                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   482                              <1> %assign i i+1 
   483                              <1> %endrep
   484 0000045A [E205]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   485                              <2> %assign i i+1
   486 00000462 [EF05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   487                              <2> %assign i i+1
   488 0000046A [FC05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   489                              <2> %assign i i+1
   490 00000472 [0906]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   491                              <2> %assign i i+1
   492 0000047A [1606]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   493                              <2> %assign i i+1
   494 00000482 [2306]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   495                              <2> %assign i i+1
   496 0000048A [3006]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   497                              <2> %assign i i+1
   498 00000492 [3D06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   499                              <2> %assign i i+1
   500 0000049A [0504]2800008E0000  <1> 		dw timerinterrupt,NEW_CODE_SEL,0x8E00,0
   501                              <1> %assign i 9
   502                              <1> %rep    6
   503                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   504                              <1> %assign i i+1 
   505                              <1> %endrep
   506 000004A2 [5706]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   507                              <2> %assign i i+1
   508 000004AA [6406]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   509                              <2> %assign i i+1
   510 000004B2 [7106]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   511                              <2> %assign i i+1
   512 000004BA [7E06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   513                              <2> %assign i i+1
   514 000004C2 [8B06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   515                              <2> %assign i i+1
   516 000004CA [9806]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   517                              <2> %assign i i+1
   518 000004D2 [1304]2800008E0000  <1> 		dw handled,NEW_CODE_SEL,0x8E00,0		;;irq 7 or int 0xF is random, unusable, and usually reserved
   519                              <1> %assign i 16
   520                              <1> %rep    32
   521                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   522                              <1> %assign i i+1
   523                              <1> %endrep
   524 000004DA [B206]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   525                              <2> %assign i i+1
   526 000004E2 [BF06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   527                              <2> %assign i i+1
   528 000004EA [CC06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   529                              <2> %assign i i+1
   530 000004F2 [D906]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   531                              <2> %assign i i+1
   532 000004FA [E606]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   533                              <2> %assign i i+1
   534 00000502 [F306]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   535                              <2> %assign i i+1
   536 0000050A [0007]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   537                              <2> %assign i i+1
   538 00000512 [0D07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   539                              <2> %assign i i+1
   540 0000051A [1A07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   541                              <2> %assign i i+1
   542 00000522 [2707]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   543                              <2> %assign i i+1
   544 0000052A [3407]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   545                              <2> %assign i i+1
   546 00000532 [4107]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   547                              <2> %assign i i+1
   548 0000053A [4E07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   549                              <2> %assign i i+1
   550 00000542 [5B07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   551                              <2> %assign i i+1
   552 0000054A [6807]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   553                              <2> %assign i i+1
   554 00000552 [7507]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   555                              <2> %assign i i+1
   556 0000055A [8207]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   557                              <2> %assign i i+1
   558 00000562 [8F07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   559                              <2> %assign i i+1
   560 0000056A [9C07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   561                              <2> %assign i i+1
   562 00000572 [A907]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   563                              <2> %assign i i+1
   564 0000057A [B607]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   565                              <2> %assign i i+1
   566 00000582 [C307]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   567                              <2> %assign i i+1
   568 0000058A [D007]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   569                              <2> %assign i i+1
   570 00000592 [DD07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   571                              <2> %assign i i+1
   572 0000059A [EA07]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   573                              <2> %assign i i+1
   574 000005A2 [F707]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   575                              <2> %assign i i+1
   576 000005AA [0408]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   577                              <2> %assign i i+1
   578 000005B2 [1108]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   579                              <2> %assign i i+1
   580 000005BA [1E08]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   581                              <2> %assign i i+1
   582 000005C2 [2B08]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   583                              <2> %assign i i+1
   584 000005CA [3808]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   585                              <2> %assign i i+1
   586 000005D2 [4508]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   587                              <2> %assign i i+1
   588                              <1> 		
   589                              <1> ;;INT 30h for os use and 3rd party use:
   590 000005DA [C514]1000008E0000  <1> 	dw newints,SYS_CODE_SEL,0x8E00,0
   591                              <1> idt_end:
   592                              <1> [BITS 32]
   593                                  [BITS 32]
   594                                  	%include 'source/exception.asm'
   595                              <1> 
   596                              <1> unhand:	
   597                              <1> 	%assign i 0
   598                              <1> 	%rep 40
   599                              <1> 	cli
   600                              <1> 	mov byte [intprob], i
   601                              <1> 	jmp unhand2
   602                              <1> 	%assign i i+1
   603                              <1> 	%endrep
   604 000005E2 FA                  <2>  cli
   605 000005E3 C605[EB0A0000]00    <2>  mov byte [intprob], i
   606 000005EA E9FB010000          <2>  jmp unhand2
   607                              <2>  %assign i i+1
   608 000005EF FA                  <2>  cli
   609 000005F0 C605[EB0A0000]01    <2>  mov byte [intprob], i
   610 000005F7 E9EE010000          <2>  jmp unhand2
   611                              <2>  %assign i i+1
   612 000005FC FA                  <2>  cli
   613 000005FD C605[EB0A0000]02    <2>  mov byte [intprob], i
   614 00000604 E9E1010000          <2>  jmp unhand2
   615                              <2>  %assign i i+1
   616 00000609 FA                  <2>  cli
   617 0000060A C605[EB0A0000]03    <2>  mov byte [intprob], i
   618 00000611 E9D4010000          <2>  jmp unhand2
   619                              <2>  %assign i i+1
   620 00000616 FA                  <2>  cli
   621 00000617 C605[EB0A0000]04    <2>  mov byte [intprob], i
   622 0000061E E9C7010000          <2>  jmp unhand2
   623                              <2>  %assign i i+1
   624 00000623 FA                  <2>  cli
   625 00000624 C605[EB0A0000]05    <2>  mov byte [intprob], i
   626 0000062B E9BA010000          <2>  jmp unhand2
   627                              <2>  %assign i i+1
   628 00000630 FA                  <2>  cli
   629 00000631 C605[EB0A0000]06    <2>  mov byte [intprob], i
   630 00000638 E9AD010000          <2>  jmp unhand2
   631                              <2>  %assign i i+1
   632 0000063D FA                  <2>  cli
   633 0000063E C605[EB0A0000]07    <2>  mov byte [intprob], i
   634 00000645 E9A0010000          <2>  jmp unhand2
   635                              <2>  %assign i i+1
   636 0000064A FA                  <2>  cli
   637 0000064B C605[EB0A0000]08    <2>  mov byte [intprob], i
   638 00000652 E993010000          <2>  jmp unhand2
   639                              <2>  %assign i i+1
   640 00000657 FA                  <2>  cli
   641 00000658 C605[EB0A0000]09    <2>  mov byte [intprob], i
   642 0000065F E986010000          <2>  jmp unhand2
   643                              <2>  %assign i i+1
   644 00000664 FA                  <2>  cli
   645 00000665 C605[EB0A0000]0A    <2>  mov byte [intprob], i
   646 0000066C E979010000          <2>  jmp unhand2
   647                              <2>  %assign i i+1
   648 00000671 FA                  <2>  cli
   649 00000672 C605[EB0A0000]0B    <2>  mov byte [intprob], i
   650 00000679 E96C010000          <2>  jmp unhand2
   651                              <2>  %assign i i+1
   652 0000067E FA                  <2>  cli
   653 0000067F C605[EB0A0000]0C    <2>  mov byte [intprob], i
   654 00000686 E95F010000          <2>  jmp unhand2
   655                              <2>  %assign i i+1
   656 0000068B FA                  <2>  cli
   657 0000068C C605[EB0A0000]0D    <2>  mov byte [intprob], i
   658 00000693 E952010000          <2>  jmp unhand2
   659                              <2>  %assign i i+1
   660 00000698 FA                  <2>  cli
   661 00000699 C605[EB0A0000]0E    <2>  mov byte [intprob], i
   662 000006A0 E945010000          <2>  jmp unhand2
   663                              <2>  %assign i i+1
   664 000006A5 FA                  <2>  cli
   665 000006A6 C605[EB0A0000]0F    <2>  mov byte [intprob], i
   666 000006AD E938010000          <2>  jmp unhand2
   667                              <2>  %assign i i+1
   668 000006B2 FA                  <2>  cli
   669 000006B3 C605[EB0A0000]10    <2>  mov byte [intprob], i
   670 000006BA E92B010000          <2>  jmp unhand2
   671                              <2>  %assign i i+1
   672 000006BF FA                  <2>  cli
   673 000006C0 C605[EB0A0000]11    <2>  mov byte [intprob], i
   674 000006C7 E91E010000          <2>  jmp unhand2
   675                              <2>  %assign i i+1
   676 000006CC FA                  <2>  cli
   677 000006CD C605[EB0A0000]12    <2>  mov byte [intprob], i
   678 000006D4 E911010000          <2>  jmp unhand2
   679                              <2>  %assign i i+1
   680 000006D9 FA                  <2>  cli
   681 000006DA C605[EB0A0000]13    <2>  mov byte [intprob], i
   682 000006E1 E904010000          <2>  jmp unhand2
   683                              <2>  %assign i i+1
   684 000006E6 FA                  <2>  cli
   685 000006E7 C605[EB0A0000]14    <2>  mov byte [intprob], i
   686 000006EE E9F7000000          <2>  jmp unhand2
   687                              <2>  %assign i i+1
   688 000006F3 FA                  <2>  cli
   689 000006F4 C605[EB0A0000]15    <2>  mov byte [intprob], i
   690 000006FB E9EA000000          <2>  jmp unhand2
   691                              <2>  %assign i i+1
   692 00000700 FA                  <2>  cli
   693 00000701 C605[EB0A0000]16    <2>  mov byte [intprob], i
   694 00000708 E9DD000000          <2>  jmp unhand2
   695                              <2>  %assign i i+1
   696 0000070D FA                  <2>  cli
   697 0000070E C605[EB0A0000]17    <2>  mov byte [intprob], i
   698 00000715 E9D0000000          <2>  jmp unhand2
   699                              <2>  %assign i i+1
   700 0000071A FA                  <2>  cli
   701 0000071B C605[EB0A0000]18    <2>  mov byte [intprob], i
   702 00000722 E9C3000000          <2>  jmp unhand2
   703                              <2>  %assign i i+1
   704 00000727 FA                  <2>  cli
   705 00000728 C605[EB0A0000]19    <2>  mov byte [intprob], i
   706 0000072F E9B6000000          <2>  jmp unhand2
   707                              <2>  %assign i i+1
   708 00000734 FA                  <2>  cli
   709 00000735 C605[EB0A0000]1A    <2>  mov byte [intprob], i
   710 0000073C E9A9000000          <2>  jmp unhand2
   711                              <2>  %assign i i+1
   712 00000741 FA                  <2>  cli
   713 00000742 C605[EB0A0000]1B    <2>  mov byte [intprob], i
   714 00000749 E99C000000          <2>  jmp unhand2
   715                              <2>  %assign i i+1
   716 0000074E FA                  <2>  cli
   717 0000074F C605[EB0A0000]1C    <2>  mov byte [intprob], i
   718 00000756 E98F000000          <2>  jmp unhand2
   719                              <2>  %assign i i+1
   720 0000075B FA                  <2>  cli
   721 0000075C C605[EB0A0000]1D    <2>  mov byte [intprob], i
   722 00000763 E982000000          <2>  jmp unhand2
   723                              <2>  %assign i i+1
   724 00000768 FA                  <2>  cli
   725 00000769 C605[EB0A0000]1E    <2>  mov byte [intprob], i
   726 00000770 E975000000          <2>  jmp unhand2
   727                              <2>  %assign i i+1
   728 00000775 FA                  <2>  cli
   729 00000776 C605[EB0A0000]1F    <2>  mov byte [intprob], i
   730 0000077D E968000000          <2>  jmp unhand2
   731                              <2>  %assign i i+1
   732 00000782 FA                  <2>  cli
   733 00000783 C605[EB0A0000]20    <2>  mov byte [intprob], i
   734 0000078A E95B000000          <2>  jmp unhand2
   735                              <2>  %assign i i+1
   736 0000078F FA                  <2>  cli
   737 00000790 C605[EB0A0000]21    <2>  mov byte [intprob], i
   738 00000797 E94E000000          <2>  jmp unhand2
   739                              <2>  %assign i i+1
   740 0000079C FA                  <2>  cli
   741 0000079D C605[EB0A0000]22    <2>  mov byte [intprob], i
   742 000007A4 E941000000          <2>  jmp unhand2
   743                              <2>  %assign i i+1
   744 000007A9 FA                  <2>  cli
   745 000007AA C605[EB0A0000]23    <2>  mov byte [intprob], i
   746 000007B1 E934000000          <2>  jmp unhand2
   747                              <2>  %assign i i+1
   748 000007B6 FA                  <2>  cli
   749 000007B7 C605[EB0A0000]24    <2>  mov byte [intprob], i
   750 000007BE E927000000          <2>  jmp unhand2
   751                              <2>  %assign i i+1
   752 000007C3 FA                  <2>  cli
   753 000007C4 C605[EB0A0000]25    <2>  mov byte [intprob], i
   754 000007CB E91A000000          <2>  jmp unhand2
   755                              <2>  %assign i i+1
   756 000007D0 FA                  <2>  cli
   757 000007D1 C605[EB0A0000]26    <2>  mov byte [intprob], i
   758 000007D8 E90D000000          <2>  jmp unhand2
   759                              <2>  %assign i i+1
   760 000007DD FA                  <2>  cli
   761 000007DE C605[EB0A0000]27    <2>  mov byte [intprob], i
   762 000007E5 E900000000          <2>  jmp unhand2
   763                              <2>  %assign i i+1
   764                              <1> unhand2:
   765 000007EA 1E                  <1> 	push ds
   766 000007EB 06                  <1> 	push es
   767 000007EC 0FA0                <1> 	push fs
   768 000007EE 0FA8                <1> 	push gs
   769 000007F0 16                  <1> 	push ss
   770 000007F1 60                  <1> 	pushad
   771 000007F2 803D[293C0000]00    <1> 	cmp byte [guion], 0
   772 000007F9 0F8432000000        <1> 	je near noguiunhandstuff
   773 000007FF 66C705[E50A0000]08- <1> 	mov word [locunhandy], 8
   774 00000807 00                  <1>
   775 00000808 66C705[E70A0000]08- <1> 	mov word [locunhandx], 8
   776 00000810 00                  <1>
   777 00000811 668B1D[CD3A0000]    <1> 	mov bx, [background]
   778 00000818 66891D[E90A0000]    <1> 	mov [backgroundcache], bx
   779 0000081F C605[BA340000]01    <1> 	mov byte [mousedisabled],1
   780 00000826 66BB00F8            <1> 	mov bx, 1111100000000000b
   781 0000082A 66891D[CD3A0000]    <1> 	mov [background], bx
   782                              <1> noguiunhandstuff:
   783 00000831 89E6                <1> 	mov esi, esp
   784 00000833 8935[DD0A0000]      <1> 	mov [espfirst], esi
   785 00000839 81C6BC000000        <1> 	add esi, ((unhndrgend - unhndrg)/15)*4
   786 0000083F 8935[D90A0000]      <1> 	mov [esploc], esi
   787 00000845 BE[F40A0000]        <1> 	mov esi, unhandmsg
   788 0000084A 8935[E10A0000]      <1> 	mov [esiloc], esi
   789 00000850 B900000000          <1> 	mov ecx, 0
   790 00000855 8A0D[EB0A0000]      <1> 	mov cl, [intprob]
   791 0000085B BB[870E0000]        <1> 	mov ebx, errortypes
   792 00000860 C1E102              <1> 	shl ecx, 2
   793 00000863 01CB                <1> 	add ebx, ecx
   794 00000865 81FB[C70E0000]      <1> 	cmp ebx, errortypesend
   795 0000086B 7205                <1> 	jb gooderrortype
   796 0000086D BB[C70E0000]        <1> 	mov ebx, errortypesend
   797                              <1> gooderrortype:
   798 00000872 8B33                <1> 	mov esi, [ebx]
   799 00000874 803D[293C0000]00    <1> 	cmp byte [guion], 0
   800 0000087B 0F842E000000        <1> 	je near errortext
   801 00000881 668B0D[E50A0000]    <1> 	mov cx, [locunhandy]
   802 00000888 668B15[E70A0000]    <1> 	mov dx, [locunhandx]
   803 0000088F 66B80100            <1> 	mov ax, 1
   804 00000893 66BB0000            <1> 	mov bx, 0
   805 00000897 E87F3D0000          <1> 	call showstring2
   806 0000089C 66890D[E50A0000]    <1> 	mov [locunhandy], cx
   807 000008A3 668915[E70A0000]    <1> 	mov [locunhandx], dx
   808 000008AA E905000000          <1> 	jmp errortextdone
   809                              <1> errortext:
   810 000008AF E8F70E0000          <1> 	call print		;;get the error message and print it
   811                              <1> errortextdone:
   812 000008B4 B900000000          <1> 	mov ecx, 0
   813 000008B9 8A0D[EB0A0000]      <1> 	mov cl, [intprob]
   814 000008BF E8AD010000          <1> 	call expdump
   815                              <1> dumpstack:
   816 000008C4 8B35[D90A0000]      <1> 	mov esi, [esploc]
   817 000008CA 39E6                <1> 	cmp esi, esp
   818 000008CC 7216                <1> 	jb donedump
   819 000008CE 368B0E              <1> 	mov ecx, [ss:esi]
   820 000008D1 81EE04000000        <1> 	sub esi, 4
   821 000008D7 8935[D90A0000]      <1> 	mov [esploc], esi
   822 000008DD E88F010000          <1> 	call expdump
   823 000008E2 EBE0                <1> 	jmp dumpstack
   824                              <1> donedump:
   825 000008E4 0F20C1              <1> 	mov ecx, cr0
   826 000008E7 E885010000          <1> 	call expdump
   827 000008EC 0F20D1              <1> 	mov ecx, cr2
   828 000008EF E87D010000          <1> 	call expdump
   829 000008F4 0F20D9              <1> 	mov ecx, cr3
   830 000008F7 E875010000          <1> 	call expdump
   831 000008FC 0F20E1              <1> 	mov ecx, cr4
   832 000008FF E86D010000          <1> 	call expdump
   833 00000904 8B35[D90A0000]      <1> 	mov esi, [esploc]
   834 0000090A 368B7C2434          <1> 	mov edi, [ss:esp + 52]
   835 0000090F 81C710000000        <1> 	add edi, 16
   836 00000915 893D[F00A0000]      <1> 	mov [codelocend], edi
   837 0000091B 81EF20000000        <1> 	sub edi, 32
   838                              <1> dumpcodeloop:
   839 00000921 893D[EC0A0000]      <1> 	mov [codeloc], edi
   840 00000927 8B0F                <1> 	mov ecx, [edi]
   841 00000929 E843010000          <1> 	call expdump
   842 0000092E 8B3D[EC0A0000]      <1> 	mov edi, [codeloc]
   843 00000934 81C704000000        <1> 	add edi, 4
   844 0000093A 3B3D[F00A0000]      <1> 	cmp edi, [codelocend]
   845 00000940 72DF                <1> 	jb dumpcodeloop
   846 00000942 BE[000A0000]        <1> 	mov esi, backtoosmsg
   847 00000947 803D[293C0000]00    <1> 	cmp byte [guion], 0
   848 0000094E 750A                <1> 	jne guibacktomsg
   849 00000950 E8560E0000          <1> 	call print
   850 00000955 E91B000000          <1> 	jmp backtomsgdone
   851                              <1> guibacktomsg:
   852 0000095A 668B15[E70A0000]    <1> 	mov dx, [locunhandx]
   853 00000961 668B0D[E50A0000]    <1> 	mov cx, [locunhandy]
   854 00000968 66B80100            <1> 	mov ax, 1
   855 0000096C 66BB0000            <1> 	mov bx, 0
   856 00000970 E8A63C0000          <1> 	call showstring2
   857                              <1> backtomsgdone:
   858 00000975 B000                <1> 	mov al, 0
   859 00000977 E8E90D0000          <1> 	call int302
   860 0000097C 803D[EB0A0000]03    <1> 	cmp byte [intprob], 3
   861 00000983 753D                <1> 	jne nodebugint
   862 00000985 803D[293C0000]00    <1> 	cmp byte [guion], 0
   863 0000098C 7423                <1> 	je nodebuggui
   864 0000098E 668B1D[E90A0000]    <1> 	mov bx, [backgroundcache]
   865 00000995 66891D[CD3A0000]    <1> 	mov [background], bx
   866 0000099C 66BB0000            <1> 	mov bx, 0
   867 000009A0 C605[BA340000]00    <1> 	mov byte [mousedisabled], 0
   868 000009A7 E8E4300000          <1> 	call guiclear
   869 000009AC E810390000          <1> 	call reloadallgraphics
   870                              <1> nodebuggui:
   871 000009B1 8B35[DD0A0000]      <1> 	mov esi, [espfirst]
   872 000009B7 89F4                <1> 	mov esp, esi
   873 000009B9 61                  <1> 	popad
   874 000009BA 17                  <1> 	pop ss
   875 000009BB 0FA9                <1> 	pop gs
   876 000009BD 0FA1                <1> 	pop fs
   877 000009BF 07                  <1> 	pop es
   878 000009C0 1F                  <1> 	pop ds
   879 000009C1 CF                  <1> 	iret
   880                              <1> nodebugint:
   881 000009C2 61                  <1> 	popad
   882 000009C3 17                  <1> 	pop ss
   883 000009C4 0FA9                <1> 	pop gs
   884 000009C6 0FA1                <1> 	pop fs
   885 000009C8 07                  <1> 	pop es
   886 000009C9 1F                  <1> 	pop ds
   887 000009CA 803D[293C0000]00    <1> 	cmp byte [guion], 0
   888 000009D1 7428                <1> 	je returnunhandgui
   889 000009D3 668B1D[E90A0000]    <1> 	mov bx, [backgroundcache]
   890 000009DA 66891D[CD3A0000]    <1> 	mov [background], bx
   891 000009E1 66BB0000            <1> 	mov bx, 0
   892 000009E5 C605[BA340000]00    <1> 	mov byte [mousedisabled], 0
   893 000009EC E89F300000          <1> 	call guiclear
   894 000009F1 E8CB380000          <1> 	call reloadallgraphics
   895 000009F6 E9D4300000          <1> 	jmp gui
   896                              <1> returnunhandgui:
   897 000009FB E90C130000          <1> 	jmp nwcmd
   898 00000A00 506C6561736520706F- <1> backtoosmsg db "Please post any problems in the Issues section at solleros.googlecode.com",10,13
   899 00000A09 737420616E79207072- <1>
   900 00000A12 6F626C656D7320696E- <1>
   901 00000A1B 207468652049737375- <1>
   902 00000A24 65732073656374696F- <1>
   903 00000A2D 6E20617420736F6C6C- <1>
   904 00000A36 65726F732E676F6F67- <1>
   905 00000A3F 6C65636F64652E636F- <1>
   906 00000A48 6D0A0D              <1>
   907 00000A4B 507265737320616E79- <1> 			db "Press any key to return to SollerOS",10,13,0
   908 00000A54 206B657920746F2072- <1>
   909 00000A5D 657475726E20746F20- <1>
   910 00000A66 536F6C6C65724F530A- <1>
   911 00000A6F 0D00                <1>
   912                              <1> expdump:
   913 00000A71 8B35[E10A0000]      <1> 	mov esi, [esiloc]
   914 00000A77 89F7                <1> 	mov edi, esi
   915 00000A79 81C70F000000        <1> 	add edi, 15
   916 00000A7F 81C604000000        <1> 	add esi, 4
   917 00000A85 893D[E10A0000]      <1> 	mov [esiloc], edi
   918 00000A8B 81EF03000000        <1> 	sub edi, 3
   919 00000A91 E8B9160000          <1> 	call converthex
   920 00000A96 81EE04000000        <1> 	sub esi, 4
   921 00000A9C 803D[293C0000]00    <1> 	cmp byte [guion], 0
   922 00000AA3 0F842A000000        <1> 	je near expdumptext
   923 00000AA9 668B0D[E50A0000]    <1> 	mov cx, [locunhandy]
   924 00000AB0 668B15[E70A0000]    <1> 	mov dx, [locunhandx]
   925 00000AB7 66B80100            <1> 	mov ax, 1
   926 00000ABB 66BB0000            <1> 	mov bx, 0
   927 00000ABF E8573B0000          <1> 	call showstring2
   928 00000AC4 66890D[E50A0000]    <1> 	mov [locunhandy], cx
   929 00000ACB 668915[E70A0000]    <1> 	mov [locunhandx], dx
   930 00000AD2 C3                  <1> 	ret
   931                              <1> expdumptext:
   932 00000AD3 E8D30C0000          <1> 	call print
   933 00000AD8 C3                  <1> 	ret
   934 00000AD9 00000000            <1> esploc dd 0
   935 00000ADD 00000000            <1> espfirst dd 0
   936 00000AE1 00000000            <1> esiloc dd 0
   937 00000AE5 0100                <1> locunhandy dw 1
   938 00000AE7 0100                <1> locunhandx dw 1
   939 00000AE9 0000                <1> backgroundcache dw 0
   940 00000AEB 00                  <1> intprob db 0
   941 00000AEC 00000000            <1> codeloc dd 0
   942 00000AF0 00000000            <1> codelocend dd 0
   943                              <1> 	unhandmsg:	
   944 00000AF4 494E543D3030303030- <1> 			db "INT=00000000",10,13,0
   945 00000AFD 3030300A0D00        <1>
   946                              <1> unhndrg:
   947 00000B03 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   948 00000B0C 303030202000<rept>  <1>
   949 00000B6C FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   950 00000B75 3030300A0D00        <1>
   951 00000B7B FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   952 00000B84 303030202000<rept>  <1>
   953 00000BE4 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   954 00000BED 3030300A0D00        <1>
   955 00000BF3 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   956 00000BFC 303030202000<rept>  <1>
   957 00000C5C FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   958 00000C65 3030300A0D00        <1>
   959 00000C6B FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   960 00000C74 303030202000<rept>  <1>
   961 00000CD4 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   962 00000CDD 3030300A0D00        <1>
   963                              <1> unhandregs:
   964 00000CE3 45464C3D3030303030- <1> 			db "EFL=00000000  ",0
   965 00000CEC 303030202000        <1>
   966 00000CF2 43533A3D3030303030- <1> 			db "CS:=00000000  ",0
   967 00000CFB 303030202000        <1>
   968 00000D01 4549503D3030303030- <1> 			db "EIP=00000000",10,13,0
   969 00000D0A 3030300A0D00        <1>
   970 00000D10 44533A3D3030303030- <1> 			db "DS:=00000000  ",0
   971 00000D19 303030202000        <1>
   972 00000D1F 45533A3D3030303030- <1> 			db "ES:=00000000  ",0
   973 00000D28 303030202000        <1>
   974 00000D2E 46533A3D3030303030- <1> 			db "FS:=00000000  ",0
   975 00000D37 303030202000        <1>
   976 00000D3D 47533A3D3030303030- <1> 			db "GS:=00000000  ",0
   977 00000D46 303030202000        <1>
   978 00000D4C 53533A3D3030303030- <1> 			db "SS:=00000000",10,13,0
   979 00000D55 3030300A0D00        <1>
   980 00000D5B 4541583D3030303030- <1> 			db "EAX=00000000  ",0
   981 00000D64 303030202000        <1>
   982 00000D6A 4543583D3030303030- <1> 			db "ECX=00000000  ",0
   983 00000D73 303030202000        <1>
   984 00000D79 4544583D3030303030- <1> 			db "EDX=00000000  ",0
   985 00000D82 303030202000        <1>
   986 00000D88 4542583D3030303030- <1> 			db "EBX=00000000",10,13,0
   987 00000D91 3030300A0D00        <1>
   988 00000D97 4553503D3030303030- <1> 			db "ESP=00000000  ",0
   989 00000DA0 303030202000        <1>
   990 00000DA6 4542503D3030303030- <1> 			db "EBP=00000000  ",0
   991 00000DAF 303030202000        <1>
   992 00000DB5 4553493D3030303030- <1> 			db "ESI=00000000  ",0
   993 00000DBE 303030202000        <1>
   994 00000DC4 4544493D3030303030- <1> unhndrgend:	db "EDI=00000000",10,13,0
   995 00000DCD 3030300A0D00        <1>
   996 00000DD3 4352303D3030303030- <1> 			db "CR0=00000000  ",0
   997 00000DDC 303030202000        <1>
   998 00000DE2 4352323D3030303030- <1> 			db "CR2=00000000  ",0
   999 00000DEB 303030202000        <1>
  1000 00000DF1 4352333D3030303030- <1> 			db "CR3=00000000  ",0
  1001 00000DFA 303030202000        <1>
  1002 00000E00 4352343D3030303030- <1> 			db "CR4=00000000",10,13,0
  1003 00000E09 3030300A0D00        <1>
  1004 00000E0F FFFFFFFF3030303030- <1> unhandcode: times 2 db 255,255,255,255,"00000000  ",0	;;this dumps the code before and after the interrupt in question
  1005 00000E18 303030202000<rept>  <1>
  1006 00000E2D FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000 ",255,0
  1007 00000E36 30303020FF00        <1>
  1008 00000E3C FFFFFF5B3030303030- <1> 			db 255,255,255,"[00000000] ",0
  1009 00000E45 3030305D2000        <1>
  1010 00000E4B FFFFFFFF3030303030- <1> 			times 3 db 255,255,255,255,"00000000  ",0
  1011 00000E54 303030202000<rept>  <1>
  1012 00000E78 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
  1013 00000E81 3030300A0D00        <1>
  1014                              <1> unhandmsgend:
  1015                              <1> 
  1016                              <1> errortypes:
  1017 00000E87 [CB0E0000]          <1> 			dd err0
  1018 00000E8B [1B0F0000]          <1> 			dd err1
  1019 00000E8F [7E0F0000]          <1> 			dd err2
  1020 00000E93 [D50F0000]          <1> 			dd err3
  1021 00000E97 [3C100000]          <1> 			dd err4
  1022 00000E9B [90100000]          <1> 			dd err5
  1023 00000E9F [FD100000]          <1> 			dd err6
  1024 00000EA3 [68110000]          <1> 			dd err7
  1025 00000EA7 [B4110000]          <1> 			dd err8
  1026 00000EAB [13120000]          <1> 			dd err9
  1027 00000EAF [6E120000]          <1> 			dd err10
  1028 00000EB3 [BB120000]          <1> 			dd err11
  1029 00000EB7 [0D130000]          <1> 			dd err12
  1030 00000EBB [68130000]          <1> 			dd err13
  1031 00000EBF [CD130000]          <1> 			dd err14
  1032 00000EC3 [0B140000]          <1> 			dd err15
  1033                              <1> errortypesend:
  1034 00000EC7 [64140000]          <1> 			dd unknownerror
  1035                              <1> 			
  1036 00000ECB 4469766973696F6E20- <1> err0	db "Division by zero:",10,13
  1037 00000ED4 6279207A65726F3A0A- <1>
  1038 00000EDD 0D                  <1>
  1039 00000EDE 546563686E6963616C- <1> 		db "Technically x",246,"0=",236," when x is any real number. Happy Easter!",10,13,0
  1040 00000EE7 6C792078F6303DEC20- <1>
  1041 00000EF0 7768656E2078206973- <1>
  1042 00000EF9 20616E79207265616C- <1>
  1043 00000F02 206E756D6265722E20- <1>
  1044 00000F0B 486170707920456173- <1>
  1045 00000F14 746572210A0D00      <1>
  1046                              <1> 		
  1047 00000F1B 53696E676C652D7374- <1> err1	db "Single-step/Breakpoint:",10,13
  1048 00000F24 65702F427265616B70- <1>
  1049 00000F2D 6F696E743A0A0D      <1>
  1050 00000F34 4120627265616B706F- <1> 		db "A breakpoint fault, breakpoint trap, or single-step trap was triggered.",10,13,0
  1051 00000F3D 696E74206661756C74- <1>
  1052 00000F46 2C20627265616B706F- <1>
  1053 00000F4F 696E7420747261702C- <1>
  1054 00000F58 206F722073696E676C- <1>
  1055 00000F61 652D73746570207472- <1>
  1056 00000F6A 617020776173207472- <1>
  1057 00000F73 696767657265642E0A- <1>
  1058 00000F7C 0D00                <1>
  1059                              <1> 		
  1060 00000F7E 4E6F6E6D61736B6162- <1> err2	db "Nonmaskable interrupt:",10,13
  1061 00000F87 6C6520696E74657272- <1>
  1062 00000F90 7570743A0A0D        <1>
  1063 00000F96 412068617264776172- <1> 		db "A hardware interrupt was triggered that could not be masked.",10,13,0
  1064 00000F9F 6520696E7465727275- <1>
  1065 00000FA8 707420776173207472- <1>
  1066 00000FB1 696767657265642074- <1>
  1067 00000FBA 68617420636F756C64- <1>
  1068 00000FC3 206E6F74206265206D- <1>
  1069 00000FCC 61736B65642E0A0D00  <1>
  1070                              <1> 		
  1071 00000FD5 427265616B706F696E- <1> err3	db "Breakpoint:",10,13
  1072 00000FDE 743A0A0D            <1>
  1073 00000FE2 5468697320696E7465- <1> 		db "This interrupt is used in programs to show the stack and registers and can be",10,13
  1074 00000FEB 727275707420697320- <1>
  1075 00000FF4 7573656420696E2070- <1>
  1076 00000FFD 726F6772616D732074- <1>
  1077 00001006 6F2073686F77207468- <1>
  1078 0000100F 6520737461636B2061- <1>
  1079 00001018 6E6420726567697374- <1>
  1080 00001021 65727320616E642063- <1>
  1081 0000102A 616E2062650A0D      <1>
  1082 00001031 69676E6F7265642E0A- <1> 		db "ignored.",10,13,0
  1083 0000103A 0D00                <1>
  1084                              <1> 		
  1085 0000103C 4F766572666C6F773A- <1> err4	db "Overflow:",10,13
  1086 00001045 0A0D                <1>
  1087 00001047 5468652070726F6365- <1> 		db "The processor ran into an INTO instruction with the overflow flag set.",10,13,0
  1088 00001050 73736F722072616E20- <1>
  1089 00001059 696E746F20616E2049- <1>
  1090 00001062 4E544F20696E737472- <1>
  1091 0000106B 756374696F6E207769- <1>
  1092 00001074 746820746865206F76- <1>
  1093 0000107D 6572666C6F7720666C- <1>
  1094 00001086 6167207365742E0A0D- <1>
  1095 0000108F 00                  <1>
  1096                              <1> 		
  1097 00001090 426F756E6473206368- <1> err5	db "Bounds check:",10,13
  1098 00001099 65636B3A0A0D        <1>
  1099 0000109F 5468652070726F6365- <1> 		db "The processor rebounded from a BOUND instruction run on an operand that was out",10,13
  1100 000010A8 73736F72207265626F- <1>
  1101 000010B1 756E6465642066726F- <1>
  1102 000010BA 6D206120424F554E44- <1>
  1103 000010C3 20696E737472756374- <1>
  1104 000010CC 696F6E2072756E206F- <1>
  1105 000010D5 6E20616E206F706572- <1>
  1106 000010DE 616E64207468617420- <1>
  1107 000010E7 776173206F75740A0D  <1>
  1108 000010F0 6F6620626F756E6473- <1> 		db "of bounds.",10,13,0
  1109 000010F9 2E0A0D00            <1>
  1110                              <1> 		
  1111 000010FD 496E76616C6964206F- <1> err6	db "Invalid opcode:",10,13
  1112 00001106 70636F64653A0A0D    <1>
  1113 0000110E 5468652070726F6365- <1> 		db "The processor has no idea what it was trying to execute. Don't run SSE4 code",10,13
  1114 00001117 73736F722068617320- <1>
  1115 00001120 6E6F20696465612077- <1>
  1116 00001129 686174206974207761- <1>
  1117 00001132 7320747279696E6720- <1>
  1118 0000113B 746F20657865637574- <1>
  1119 00001144 652E20446F6E277420- <1>
  1120 0000114D 72756E205353453420- <1>
  1121 00001156 636F64650A0D        <1>
  1122 0000115C 6F6E20343836277321- <1> 		db "on 486's!",10,13,0
  1123 00001165 0A0D00              <1>
  1124                              <1> 		
  1125 00001168 436F70726F63657373- <1> err7	db "Coprocessor not available:",10,13
  1126 00001171 6F72206E6F74206176- <1>
  1127 0000117A 61696C61626C653A0A- <1>
  1128 00001183 0D                  <1>
  1129 00001184 446F6E277420796F75- <1> 		db "Don't you know they don't make those anymore!",10,13,0
  1130 0000118D 206B6E6F7720746865- <1>
  1131 00001196 7920646F6E2774206D- <1>
  1132 0000119F 616B652074686F7365- <1>
  1133 000011A8 20616E796D6F726521- <1>
  1134 000011B1 0A0D00              <1>
  1135                              <1> 		
  1136 000011B4 446F75626C65206661- <1> err8	db "Double fault:",10,13
  1137 000011BD 756C743A0A0D        <1>
  1138 000011C3 546865206578636570- <1> 		db "The exception handler could not accept that it could not handle an exception.",10,13,0
  1139 000011CC 74696F6E2068616E64- <1>
  1140 000011D5 6C657220636F756C64- <1>
  1141 000011DE 206E6F742061636365- <1>
  1142 000011E7 707420746861742069- <1>
  1143 000011F0 7420636F756C64206E- <1>
  1144 000011F9 6F742068616E646C65- <1>
  1145 00001202 20616E206578636570- <1>
  1146 0000120B 74696F6E2E0A0D00    <1>
  1147                              <1> 		
  1148 00001213 436F70726F63657373- <1> err9	db "Coprocessor segment overrun:",10,13,0
  1149 0000121C 6F72207365676D656E- <1>
  1150 00001225 74206F76657272756E- <1>
  1151 0000122E 3A0A0D00            <1>
  1152 00001232 54686973206E657665- <1> 		db "This never happens in modern computers, and never should.",10,13,0
  1153 0000123B 722068617070656E73- <1>
  1154 00001244 20696E206D6F646572- <1>
  1155 0000124D 6E20636F6D70757465- <1>
  1156 00001256 72732C20616E64206E- <1>
  1157 0000125F 657665722073686F75- <1>
  1158 00001268 6C642E0A0D00        <1>
  1159                              <1> 
  1160 0000126E 496E76616C69642054- <1> err10	db "Invalid TSS:",10,13
  1161 00001277 53533A0A0D          <1>
  1162 0000127C 546865205453532074- <1> 		db "The TSS that was switched to is invalid. Nothing funny here.",10,13,0
  1163 00001285 686174207761732073- <1>
  1164 0000128E 776974636865642074- <1>
  1165 00001297 6F20697320696E7661- <1>
  1166 000012A0 6C69642E204E6F7468- <1>
  1167 000012A9 696E672066756E6E79- <1>
  1168 000012B2 20686572652E0A0D00  <1>
  1169                              <1> 		
  1170 000012BB 5365676D656E74206E- <1> err11	db "Segment not present:",10,13
  1171 000012C4 6F742070726573656E- <1>
  1172 000012CD 743A0A0D            <1>
  1173 000012D1 546865207072657365- <1> 		db "The present bit of the segment descriptor is set to zero.",10,13,0
  1174 000012DA 6E7420626974206F66- <1>
  1175 000012E3 20746865207365676D- <1>
  1176 000012EC 656E74206465736372- <1>
  1177 000012F5 6970746F7220697320- <1>
  1178 000012FE 73657420746F207A65- <1>
  1179 00001307 726F2E0A0D00        <1>
  1180                              <1> 		
  1181 0000130D 537461636B20657863- <1> err12	db "Stack exception:",10,13
  1182 00001316 657074696F6E3A0A0D  <1>
  1183 0000131F 546865205353206465- <1> 		db "The SS descriptor is invalid or not present or its limit is too small.",10,13,0
  1184 00001328 7363726970746F7220- <1>
  1185 00001331 697320696E76616C69- <1>
  1186 0000133A 64206F72206E6F7420- <1>
  1187 00001343 70726573656E74206F- <1>
  1188 0000134C 7220697473206C696D- <1>
  1189 00001355 697420697320746F6F- <1>
  1190 0000135E 20736D616C6C2E0A0D- <1>
  1191 00001367 00                  <1>
  1192                              <1> 		
  1193 00001368 47656E6572616C2070- <1> err13	db "General protection violation:",10,13
  1194 00001371 726F74656374696F6E- <1>
  1195 0000137A 2076696F6C6174696F- <1>
  1196 00001383 6E3A0A0D            <1>
  1197 00001387 596F752076696F6C61- <1> 		db "You violated the computer. Step away slowly. The FBI is on its way.",10,13,0
  1198 00001390 746564207468652063- <1>
  1199 00001399 6F6D70757465722E20- <1>
  1200 000013A2 537465702061776179- <1>
  1201 000013AB 20736C6F776C792E20- <1>
  1202 000013B4 546865204642492069- <1>
  1203 000013BD 73206F6E2069747320- <1>
  1204 000013C6 7761792E0A0D00      <1>
  1205                              <1> 		
  1206 000013CD 50616765206661756C- <1> err14	db "Page fault:",10,13
  1207 000013D6 743A0A0D            <1>
  1208 000013DA 546865207061676520- <1> 		db "The page that was requested was not available.",10,13,0
  1209 000013E3 746861742077617320- <1>
  1210 000013EC 726571756573746564- <1>
  1211 000013F5 20776173206E6F7420- <1>
  1212 000013FE 617661696C61626C65- <1>
  1213 00001407 2E0A0D00            <1>
  1214                              <1> 		
  1215 0000140B 52657365727665643A- <1> err15	db "Reserved:",10,13
  1216 00001414 0A0D                <1>
  1217 00001416 5468697320696E7465- <1> 		db "This interrupt is not an exception but should also should not be triggered.",10,13,0
  1218 0000141F 727275707420697320- <1>
  1219 00001428 6E6F7420616E206578- <1>
  1220 00001431 63657074696F6E2062- <1>
  1221 0000143A 75742073686F756C64- <1>
  1222 00001443 20616C736F2073686F- <1>
  1223 0000144C 756C64206E6F742062- <1>
  1224 00001455 652074726967676572- <1>
  1225 0000145E 65642E0A0D00        <1>
  1226                              <1> 		
  1227 00001464 576861742074686520- <1> unknownerror db "What the hell just happened? Is everyone okay? Hard drive? Video card?",10,13
  1228 0000146D 68656C6C206A757374- <1>
  1229 00001476 2068617070656E6564- <1>
  1230 0000147F 3F2049732065766572- <1>
  1231 00001488 796F6E65206F6B6179- <1>
  1232 00001491 3F2048617264206472- <1>
  1233 0000149A 6976653F2056696465- <1>
  1234 000014A3 6F20636172643F0A0D  <1>
  1235 000014AC 4D656D6F72793F2041- <1> 			db	"Memory? Are you there?",10,13,0
  1236 000014B5 726520796F75207468- <1>
  1237 000014BE 6572653F0A0D00      <1>
  1238                                      %include 'source/ints.asm'
  1239                              <1> newints:	;;for great justice
  1240 000014C5 FA                  <1> 	cli				;;stop other interrupts
  1241 000014C6 80FC00              <1> 	cmp ah, 0		;;originally 0
  1242 000014C9 0F8452000000        <1> 	je near intx0   ;;0=kills app
  1243 000014CF 80FC01              <1> 	cmp ah, 1		;;originally 1
  1244 000014D2 0F844E000000        <1> 	je near intx1   ;;3=print string
  1245 000014D8 80FC02              <1> 	cmp ah, 2		;;originally 2
  1246 000014DB 0F844F000000        <1> 	je near intx2	;;4=read string
  1247 000014E1 80FC03              <1> 	cmp ah, 3		;;originally 3
  1248 000014E4 0F8450000000        <1> 	je near intx3	;;6=clear screen
  1249 000014EA 80FC04              <1> 	cmp ah, 4		;;originally 4
  1250 000014ED 0F8451000000        <1> 	je near intx4	;;5=read and print string
  1251 000014F3 80FC05              <1> 	cmp ah, 5		;;originally 5		
  1252 000014F6 0F8452000000        <1> 	je near intx5	;;2=get char
  1253 000014FC 80FC06              <1> 	cmp ah, 6		;;originally 6
  1254 000014FF 0F8453000000        <1> 	je near intx6	;;1=print char
  1255 00001505 80FC07              <1> 	cmp ah, 7
  1256 00001508 0F8454000000        <1> 	je near intx7	;;read file
  1257 0000150E 80FC09              <1> 	cmp ah, 9
  1258 00001511 0F8455000000        <1> 	je near intx9	;;convert number
  1259 00001517 80FC0A              <1> 	cmp ah, 10
  1260 0000151A 0F8464000000        <1> 	je near intx10	;;create thread
  1261 00001520 C3                  <1> 	ret
  1262                              <1> 	
  1263                              <1> ;;the jmp timerinterrupt's ensure that task switches occur
  1264                              <1> 	
  1265                              <1> intx0:
  1266 00001521 E9E6070000          <1> 	jmp nwcmd
  1267                              <1> intx1:
  1268 00001526 E888020000          <1> 	call int303
  1269 0000152B E9D5EEFFFF          <1> 	jmp timerinterrupt
  1270                              <1> intx2:
  1271 00001530 E8A2020000          <1> 	call int304
  1272 00001535 E9CBEEFFFF          <1> 	jmp timerinterrupt
  1273                              <1> intx3:
  1274 0000153A E85D050000          <1> 	call int306
  1275 0000153F E9C1EEFFFF          <1> 	jmp timerinterrupt
  1276                              <1> intx4:
  1277 00001544 E8BB020000          <1> 	call int305
  1278 00001549 E9B7EEFFFF          <1> 	jmp timerinterrupt
  1279                              <1> intx5:
  1280 0000154E E812020000          <1> 	call int302
  1281 00001553 E9ADEEFFFF          <1> 	jmp timerinterrupt
  1282                              <1> intx6:
  1283 00001558 E837000000          <1> 	call int301
  1284 0000155D E9A3EEFFFF          <1> 	jmp timerinterrupt
  1285                              <1> intx7:
  1286 00001562 E8DB400000          <1> 	call loadfile
  1287 00001567 E999EEFFFF          <1> 	jmp timerinterrupt
  1288                              <1> intx9:
  1289 0000156C 3C00                <1> 	cmp al, 0
  1290 0000156E 750A                <1> 	jne intx9B
  1291 00001570 E8290D0000          <1> 	call showdec
  1292 00001575 E98BEEFFFF          <1> 	jmp timerinterrupt
  1293                              <1> intx9B:
  1294 0000157A E87A0C0000          <1> 	call showhex
  1295 0000157F E981EEFFFF          <1> 	jmp timerinterrupt
  1296                              <1> intx10:
  1297 00001584 E803470000          <1> 	call threadfork
  1298 00001589 CF                  <1> 	iret
  1299                              <1> 	
  1300 0000158A 0000                <1> linebeginpos dw 0
  1301 0000158C 0000                <1> videobufpos: dw 0
  1302 0000158E 0000                <1> charpos db 0,0
  1303 00001590 A01E                <1> charxy db 160,30
  1304 00001592 0000                <1> charbuf dw 0
  1305                              <1> 	
  1306                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
  1307 00001594 E808000000          <1> 	call int301prnt
  1308 00001599 E84E050000          <1> 	call termcopy
  1309 0000159E C3                  <1> 	ret
  1310 0000159F 00                  <1> termguion db 0
  1311 000015A0 00                  <1> termcopyon db 0
  1312                              <1> int301prnt:
  1313 000015A1 88DC                <1> 	mov ah, bl
  1314 000015A3 66A3[92150000]      <1> 	mov [charbuf], ax
  1315 000015A9 BB00000000          <1> 	mov ebx, 0
  1316 000015AE 668B1D[8C150000]    <1> 	mov bx, [videobufpos]
  1317 000015B5 BF[8F1D0000]        <1> 	mov edi, videobuf2
  1318 000015BA 01DF                <1> 	add edi, ebx
  1319 000015BC 66A1[EA1A0000]      <1> 	mov ax, [removedvideo]
  1320 000015C2 668907              <1> 	mov [edi], ax
  1321 000015C5 66A1[92150000]      <1> 	mov ax, [charbuf]
  1322 000015CB BA00000000          <1> 	mov edx, 0
  1323 000015D0 668B15[8E150000]    <1> 	mov dx, [charpos]
  1324 000015D7 B900000000          <1> 	mov ecx, 0
  1325 000015DC 668B0D[90150000]    <1> 	mov cx, [charxy]
  1326 000015E3 3C09                <1> 	cmp al, 9
  1327 000015E5 0F8464000000        <1> 	je near int301tab
  1328 000015EB 3C0D                <1> 	cmp al, 13
  1329 000015ED 0F8476000000        <1> 	je near int301cr
  1330 000015F3 3C0A                <1> 	cmp al, 10
  1331 000015F5 0F84A4000000        <1> 	je near int301nl
  1332 000015FB 3C08                <1> 	cmp al, 8
  1333 000015FD 0F847D000000        <1> 	je near int301bs
  1334 00001603 3CFF                <1> 	cmp al, 255		;;null character
  1335 00001605 0F841C000000        <1> 	je near donescr
  1336 0000160B 668907              <1> 	mov [edi], ax
  1337 0000160E 81C702000000        <1> 	add edi, 2
  1338 00001614 80C202              <1> 	add dl, 2
  1339                              <1> donecrnl:
  1340 00001617 38CA                <1> 	cmp dl, cl
  1341 00001619 0F83B1000000        <1> 	jae near int301eol
  1342                              <1> doneeol:
  1343 0000161F 38EE                <1> 	cmp dh, ch
  1344 00001621 0F83C7000000        <1> 	jae near int301scr	
  1345                              <1> donescr:
  1346 00001627 89FB                <1> 	mov ebx, edi
  1347 00001629 668B07              <1> 	mov ax, [edi]
  1348 0000162C 66A3[EA1A0000]      <1> 	mov [removedvideo], ax
  1349 00001632 81EB[8F1D0000]      <1> 	sub ebx, videobuf2
  1350 00001638 66891D[8C150000]    <1> 	mov [videobufpos], bx
  1351 0000163F 668915[8E150000]    <1> 	mov [charpos], dx
  1352 00001646 66A1[92150000]      <1> 	mov ax, [charbuf]
  1353 0000164C 88E3                <1> 	mov bl, ah
  1354 0000164E C3                  <1> 	ret
  1355                              <1> 	
  1356                              <1> 	int301tab:
  1357 0000164F C1EF04              <1> 		shr edi, 4
  1358 00001652 C1E704              <1> 		shl edi, 4
  1359 00001655 81C710000000        <1> 		add edi, 16
  1360 0000165B C0EA04              <1> 		shr dl, 4
  1361 0000165E C0E204              <1> 		shl dl, 4
  1362 00001661 80C210              <1> 		add dl, 16
  1363 00001664 4F                  <1> 		dec edi
  1364 00001665 FECA                <1> 		dec dl
  1365 00001667 EBAE                <1> 		jmp donecrnl
  1366                              <1> 	
  1367                              <1> 	int301cr:
  1368 00001669 B200                <1> 		mov dl, 0
  1369 0000166B BB00000000          <1> 		mov ebx, 0
  1370 00001670 BF[8F1D0000]        <1> 		mov edi, videobuf2
  1371 00001675 668B1D[8A150000]    <1> 		mov bx, [linebeginpos]
  1372 0000167C 01DF                <1> 		add edi, ebx
  1373 0000167E EB97                <1> 		jmp donecrnl
  1374                              <1> 			
  1375                              <1> 	int301bs:
  1376 00001680 80FA00              <1> 		cmp dl, 0
  1377 00001683 740F                <1> 		je int301backline
  1378                              <1> 	int301nobmr:
  1379 00001685 80EA02              <1> 		sub dl, 2
  1380 00001688 66B80000            <1> 		mov ax, 0
  1381 0000168C 81EF02000000        <1> 		sub edi, 2
  1382 00001692 EB83                <1> 		jmp donecrnl
  1383                              <1> 	int301backline:
  1384 00001694 88CA                <1> 		mov dl, cl
  1385 00001696 80FE00              <1> 		cmp dh, 0
  1386 00001699 74EA                <1> 		je int301nobmr
  1387 0000169B FECE                <1> 		dec dh
  1388 0000169D EBE6                <1> 		jmp int301nobmr
  1389                              <1> 		
  1390                              <1> 	int301nl:
  1391 0000169F FEC6                <1> 		inc dh
  1392 000016A1 BB00000000          <1> 		mov ebx, 0
  1393 000016A6 88CB                <1> 		mov bl, cl
  1394 000016A8 BF[8F1D0000]        <1> 		mov edi, videobuf2
  1395 000016AD 66031D[8C150000]    <1> 		add bx, [videobufpos]
  1396 000016B4 01DF                <1> 		add edi, ebx
  1397 000016B6 BB00000000          <1> 		mov ebx, 0
  1398 000016BB 88CB                <1> 		mov bl, cl
  1399 000016BD 66031D[8A150000]    <1> 		add bx, [linebeginpos]
  1400 000016C4 66891D[8A150000]    <1> 		mov [linebeginpos], bx
  1401 000016CB E947FFFFFF          <1> 		jmp donecrnl
  1402                              <1> 		
  1403                              <1> 	int301eol:
  1404 000016D0 B200                <1> 		mov dl, 0
  1405 000016D2 FEC6                <1> 		inc dh
  1406 000016D4 BB00000000          <1> 		mov ebx, 0
  1407 000016D9 88CB                <1> 		mov bl, cl
  1408 000016DB 66031D[8A150000]    <1> 		add bx, [linebeginpos]
  1409 000016E2 66891D[8A150000]    <1> 		mov [linebeginpos], bx
  1410 000016E9 E931FFFFFF          <1> 		jmp doneeol
  1411                              <1> 	int301scr:
  1412 000016EE FECE                <1> 		dec dh
  1413 000016F0 BF[8F1D0000]        <1> 		mov edi, videobuf2
  1414 000016F5 BB00000000          <1> 		mov ebx, 0
  1415 000016FA 88CB                <1> 		mov bl, cl
  1416 000016FC 01FB                <1> 		add ebx, edi
  1417                              <1> 	intscrollloop:
  1418 000016FE 668B03              <1> 		mov ax, [ebx]
  1419 00001701 668907              <1> 		mov [edi], ax
  1420 00001704 81C702000000        <1> 		add edi, 2
  1421 0000170A 81C302000000        <1> 		add ebx, 2
  1422 00001710 80E902              <1> 		sub cl, 2
  1423 00001713 80F900              <1> 		cmp cl, 0
  1424 00001716 75E6                <1> 		jne intscrollloop
  1425 00001718 8A0D[90150000]      <1> 		mov cl, [charxy]
  1426 0000171E FECD                <1> 		dec ch
  1427 00001720 80FD01              <1> 		cmp ch, 1
  1428 00001723 77D9                <1> 		ja intscrollloop
  1429 00001725 66B80000            <1> 		mov ax, 0
  1430 00001729 81EF[8F1D0000]      <1> 		sub edi, videobuf2
  1431 0000172F 66893D[8A150000]    <1> 		mov [linebeginpos], di
  1432 00001736 81C7[8F1D0000]      <1> 		add edi, videobuf2
  1433 0000173C 89FB                <1> 		mov ebx, edi
  1434                              <1> 	intloopclear:
  1435 0000173E 668903              <1> 		mov [ebx], ax
  1436 00001741 81C302000000        <1> 		add ebx, 2
  1437 00001747 80E902              <1> 		sub cl, 2
  1438 0000174A 80F900              <1> 		cmp cl, 0
  1439 0000174D 75EF                <1> 		jne intloopclear
  1440 0000174F FECD                <1> 		dec ch
  1441 00001751 80FD00              <1> 		cmp ch, 0
  1442 00001754 75E8                <1> 		jne intloopclear
  1443 00001756 668B0D[90150000]    <1> 		mov cx, [charxy]
  1444 0000175D E9C5FEFFFF          <1> 		jmp donescr
  1445                              <1> 		
  1446                              <1> 		
  1447 00001762 0000                <1> lastkey db 0,0
  1448 00001764 00                  <1> trans db 0
  1449                              <1> 
  1450                              <1> 	int302:		;;get char, if al is 0, wait for key
  1451 00001765 A2[64170000]        <1> 		mov [trans], al
  1452                              <1> 	transcheck:
  1453 0000176A E8751D0000          <1> 		call guistartin
  1454 0000176F 8A3D[64170000]      <1> 		mov bh, [trans]
  1455 00001775 66A1[62170000]      <1> 		mov ax, [lastkey]
  1456 0000177B 80FC1C              <1> 		cmp ah, 1Ch
  1457 0000177E 7419                <1> 		je int302enter
  1458 00001780 803D[BB340000]E0    <1> 		cmp byte [specialkey], 0xE0
  1459 00001787 7504                <1> 		jne nospecialtrans
  1460 00001789 88C3                <1> 		mov bl, al
  1461 0000178B B000                <1> 		mov al, 0
  1462                              <1> 	nospecialtrans:
  1463 0000178D 08C7                <1> 		or bh, al
  1464 0000178F 80FF00              <1> 		cmp bh, 0
  1465 00001792 74D6                <1> 		je transcheck
  1466 00001794 E902000000          <1> 		jmp int302end
  1467                              <1> 	int302enter:
  1468 00001799 B00D                <1> 		mov al, 13
  1469                              <1> 	int302end:
  1470 0000179B C3                  <1> 		ret
  1471                              <1> 	
  1472 0000179C 00                  <1> endkey303 db 0
  1473                              <1> 	printquiet:
  1474 0000179D 66B80000            <1> 		mov ax, 0
  1475 000017A1 66BB0700            <1> 		mov bx, 7
  1476 000017A5 E819000000          <1> 		call int303b
  1477 000017AA C3                  <1> 		ret
  1478                              <1>     print:
  1479 000017AB 66B80000            <1> 		mov ax, 0
  1480 000017AF 66BB0700            <1> 		mov bx, 7
  1481                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  1482 000017B3 A2[9C170000]        <1> 		mov [endkey303], al
  1483 000017B8 E806000000          <1> 		call int303b
  1484 000017BD E82A030000          <1> 		call termcopy
  1485 000017C2 C3                  <1> 		ret
  1486                              <1> 	int303b:
  1487 000017C3 8A06                <1> 		mov al, [esi]
  1488 000017C5 3A05[9C170000]      <1> 		cmp al, [endkey303]
  1489 000017CB 7408                <1> 		je doneint303
  1490 000017CD E8CFFDFFFF          <1> 		call int301prnt
  1491 000017D2 46                  <1> 		inc esi
  1492 000017D3 EBEE                <1> 		jmp int303b
  1493                              <1> 	doneint303:
  1494 000017D5 C3                  <1> 		ret
  1495                              <1> 		
  1496 000017D6 00                  <1> endkey304 db 0
  1497                              <1> 	int304:	;;get line, al=last key, esi = buffer
  1498 000017D7 A2[D6170000]        <1> 		mov [endkey304], al
  1499                              <1> 	int304b:
  1500 000017DC 56                  <1> 		push esi
  1501 000017DD B000                <1> 		mov al, 0
  1502 000017DF E881FFFFFF          <1> 		call int302
  1503 000017E4 5E                  <1> 		pop esi
  1504 000017E5 8806                <1> 		mov [esi], al
  1505 000017E7 46                  <1> 		inc esi
  1506 000017E8 3A05[D6170000]      <1> 		cmp al, [endkey304]
  1507 000017EE 75EC                <1> 		jne int304b
  1508 000017F0 4E                  <1> 		dec esi
  1509 000017F1 C60600              <1> 		mov byte [esi], 0
  1510 000017F4 C3                  <1> 	ret
  1511                              <1> 	
  1512 000017F5 00                  <1> endkey305 db 0
  1513 000017F6 00                  <1> modkey305 db 0
  1514 000017F7 00000000            <1> firstesi305 dd 0
  1515 000017FB 00                  <1> commandedit db 0
  1516 000017FC 00                  <1> txtmask db 0
  1517 000017FD 00000000            <1> buftxtloc dd 0
  1518 00001801 082000              <1> backcursor db 8," ",0
  1519                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
  1520 00001804 8935[FD170000]      <1> 		mov [buftxtloc], esi
  1521 0000180A A2[F5170000]        <1> 		mov [endkey305], al
  1522 0000180F 881D[F6170000]      <1> 		mov [modkey305], bl
  1523 00001815 8935[F7170000]      <1> 		mov [firstesi305], esi
  1524                              <1> 	int305b:
  1525 0000181B 56                  <1> 		push esi
  1526 0000181C B001                <1> 		mov al, 1
  1527 0000181E E842FFFFFF          <1> 		call int302
  1528 00001823 5E                  <1> 		pop esi
  1529 00001824 80FC48              <1> 		cmp ah, 0x48
  1530 00001827 0F845E010000        <1> 		je near int305up
  1531 0000182D 80FC50              <1> 		cmp ah, 0x50
  1532 00001830 0F8438010000        <1> 		je near int305down
  1533 00001836 80FC4D              <1> 		cmp ah, 0x4D
  1534 00001839 0F84ED000000        <1> 		je near int305right
  1535 0000183F 80FC4B              <1> 		cmp ah, 0x4B
  1536 00001842 0F84AB000000        <1> 		je near int305left
  1537 00001848 3C08                <1> 		cmp al, 8
  1538 0000184A 0F842E020000        <1> 		je near int305bscheck
  1539 00001850 3C00                <1> 		cmp al, 0
  1540 00001852 74C7                <1> 		je int305b
  1541 00001854 8806                <1> 		mov [esi], al
  1542 00001856 46                  <1> 		inc esi
  1543                              <1> 	bscheckequal:
  1544 00001857 8A1D[F6170000]      <1> 		mov bl, [modkey305]
  1545 0000185D 8A3D[FC170000]      <1> 		mov bh, [txtmask]
  1546 00001863 80FF00              <1> 		cmp bh, 0
  1547 00001866 7402                <1> 		je nomasktxt
  1548 00001868 88F8                <1> 		mov al, bh
  1549                              <1> 	nomasktxt:
  1550 0000186A E825FDFFFF          <1> 		call int301
  1551 0000186F 56                  <1> 		push esi
  1552 00001870 66A3[F1180000]      <1> 		mov [int305axcache], ax
  1553 00001876 8A25[F5170000]      <1> 		mov ah, [endkey305]
  1554 0000187C 38E0                <1> 		cmp al, ah
  1555 0000187E 7429                <1> 		je nobackprintbuftxt2
  1556 00001880 BE[701A0000]        <1> 		mov esi, buftxt2
  1557 00001885 E813FFFFFF          <1> 		call printquiet
  1558 0000188A B020                <1> 		mov al, " "
  1559 0000188C E810FDFFFF          <1> 		call int301prnt
  1560 00001891 B008                <1> 		mov al, 8
  1561 00001893 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1562 00001899 740E                <1> 		je nobackprintbuftxt2
  1563                              <1> 	backprintbuftxt2:
  1564 0000189B E801FDFFFF          <1> 		call int301prnt
  1565 000018A0 4E                  <1> 		dec esi
  1566 000018A1 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1567 000018A7 77F2                <1> 		ja backprintbuftxt2
  1568                              <1> 	nobackprintbuftxt2:
  1569 000018A9 E8E6FCFFFF          <1> 		call int301
  1570 000018AE 5E                  <1> 		pop esi
  1571 000018AF 66A1[F1180000]      <1> 		mov ax, [int305axcache]
  1572 000018B5 8A25[F5170000]      <1> 		mov ah, [endkey305]
  1573 000018BB 38E0                <1> 		cmp al, ah
  1574 000018BD 0F8558FFFFFF        <1> 		jne int305b
  1575 000018C3 4E                  <1> 		dec esi
  1576 000018C4 BF[701A0000]        <1> 		mov edi, buftxt2
  1577                              <1> 	copylaterstuff:
  1578 000018C9 8A07                <1> 		mov al, [edi]
  1579 000018CB 3C00                <1> 		cmp al, 0
  1580 000018CD 7406                <1> 		je nocopylaterstuff
  1581 000018CF 8806                <1> 		mov [esi], al
  1582 000018D1 47                  <1> 		inc edi
  1583 000018D2 46                  <1> 		inc esi
  1584 000018D3 EBF4                <1> 		jmp copylaterstuff
  1585                              <1> 	nocopylaterstuff:
  1586 000018D5 C60600              <1> 		mov byte [esi], 0
  1587 000018D8 E801000000          <1> 		call clearbuftxt2
  1588 000018DD C3                  <1> 		ret
  1589                              <1> 	
  1590                              <1> 	clearbuftxt2:
  1591 000018DE B000                <1> 		mov al, 0
  1592 000018E0 BF[701A0000]        <1> 		mov edi, buftxt2
  1593                              <1> 	clearbuftxt2lp:
  1594 000018E5 8807                <1> 		mov [edi], al
  1595 000018E7 47                  <1> 		inc edi
  1596 000018E8 81FF[7A1B0000]      <1> 		cmp edi, buftxt
  1597 000018EE 75F5                <1> 		jne clearbuftxt2lp
  1598 000018F0 C3                  <1> 		ret
  1599                              <1> 		
  1600 000018F1 0000                <1> 	int305axcache dw 0
  1601                              <1> 		
  1602                              <1> 	int305left:
  1603 000018F3 3B35[FD170000]      <1> 		cmp esi, [buftxtloc]
  1604 000018F9 0F841CFFFFFF        <1> 		je near int305b
  1605 000018FF BF[701A0000]        <1> 		mov edi, buftxt2
  1606 00001904 8A07                <1> 		mov al, [edi]
  1607                              <1> 	shiftbuftxt2:
  1608 00001906 3C00                <1> 		cmp al, 0
  1609 00001908 7409                <1> 		je noshiftbuftxt2
  1610 0000190A 47                  <1> 		inc edi
  1611 0000190B 8A27                <1> 		mov ah, [edi]
  1612 0000190D 8807                <1> 		mov [edi], al
  1613 0000190F 88E0                <1> 		mov al, ah
  1614 00001911 EBF3                <1> 		jmp shiftbuftxt2
  1615                              <1> 	noshiftbuftxt2:
  1616 00001913 BF[701A0000]        <1> 		mov edi, buftxt2
  1617 00001918 4E                  <1> 		dec esi
  1618 00001919 8A06                <1> 		mov al, [esi]
  1619 0000191B 8807                <1> 		mov [edi], al
  1620 0000191D C60600              <1> 		mov byte [esi], 0
  1621 00001920 B008                <1> 		mov al, 8
  1622 00001922 E86DFCFFFF          <1> 		call int301
  1623 00001927 E9EFFEFFFF          <1> 		jmp int305b
  1624                              <1> 		
  1625                              <1> 	int305right:
  1626 0000192C BF[701A0000]        <1> 		mov edi, buftxt2
  1627 00001931 8A07                <1> 		mov al, [edi]
  1628 00001933 3C00                <1> 		cmp al, 0
  1629 00001935 0F84E0FEFFFF        <1> 		je near int305b
  1630 0000193B 8806                <1> 		mov [esi], al
  1631                              <1> 	shiftbuftxt2lft:
  1632 0000193D 3C00                <1> 		cmp al, 0
  1633 0000193F 7408                <1> 		je noshiftbuftxt2lft
  1634 00001941 47                  <1> 		inc edi
  1635 00001942 8A07                <1> 		mov al, [edi]
  1636 00001944 8847FF              <1> 		mov [edi - 1], al
  1637 00001947 EBF4                <1> 		jmp shiftbuftxt2lft
  1638                              <1> 	noshiftbuftxt2lft:
  1639 00001949 8A06                <1> 		mov al, [esi]
  1640 0000194B 46                  <1> 		inc esi
  1641 0000194C 8A1D[F6170000]      <1> 		mov bl, [modkey305]
  1642 00001952 E83DFCFFFF          <1> 		call int301
  1643 00001957 E9BFFEFFFF          <1> 		jmp int305b
  1644                              <1> 		
  1645                              <1> 	int305downbck:
  1646 0000195C FECC                <1> 		dec ah
  1647 0000195E 8825[FB170000]      <1> 		mov [commandedit], ah
  1648 00001964 E83A000000          <1> 		call int305bckspc
  1649 00001969 E9ADFEFFFF          <1> 		jmp int305b
  1650                              <1> 	
  1651                              <1> 	int305down:
  1652 0000196E 8A25[FB170000]      <1> 		mov ah, [commandedit]
  1653 00001974 80FC01              <1> 		cmp ah, 1
  1654 00001977 0F869EFEFFFF        <1> 		jbe near int305b
  1655 0000197D 80FC02              <1> 		cmp ah, 2
  1656 00001980 74DA                <1> 		je int305downbck
  1657 00001982 80EC02              <1> 		sub ah, 2
  1658 00001985 8825[FB170000]      <1> 		mov [commandedit], ah
  1659                              <1> 		
  1660                              <1> 	int305up:
  1661                              <1> 		;cmp bl, 0xE0
  1662                              <1> 		;jne int305b
  1663 0000198B B000                <1> 		mov al, 0
  1664 0000198D 3805[FB170000]      <1> 		cmp [commandedit], al
  1665 00001993 0F8482FEFFFF        <1> 		je near int305b
  1666 00001999 E805000000          <1> 		call int305bckspc
  1667 0000199E E93C000000          <1> 		jmp getcurrentcommandstr
  1668                              <1> 	int305bckspc:
  1669 000019A3 3B35[FD170000]      <1> 		cmp esi, [buftxtloc]
  1670 000019A9 7426                <1> 		je noint305upbck
  1671                              <1> 	int305upbckspclp:
  1672 000019AB B008                <1> 		mov al, 8
  1673 000019AD 8A1D[F6170000]      <1> 		mov bl, [modkey305]
  1674 000019B3 E8E9FBFFFF          <1> 		call int301prnt
  1675 000019B8 B020                <1> 		mov al, " "
  1676 000019BA E8E2FBFFFF          <1> 		call int301prnt
  1677 000019BF B008                <1> 		mov al, 8
  1678 000019C1 E8CEFBFFFF          <1> 		call int301
  1679 000019C6 4E                  <1> 		dec esi
  1680 000019C7 3B35[FD170000]      <1> 		cmp esi, [buftxtloc]
  1681 000019CD 7402                <1> 		je noint305upbck
  1682 000019CF EBDA                <1> 		jmp int305upbckspclp
  1683                              <1> 	noint305upbck:
  1684 000019D1 8B3D[1B310000]      <1> 		mov edi, [currentcommandpos]
  1685 000019D7 81C7[1F310000]      <1> 		add edi, commandbuf
  1686 000019DD 4F                  <1> 		dec edi
  1687 000019DE C3                  <1> 		ret
  1688                              <1> 	getcurrentcommandstr:
  1689 000019DF 8A25[FB170000]      <1> 		mov ah, [commandedit]
  1690 000019E5 FE05[FB170000]      <1> 		inc byte [commandedit]
  1691                              <1> 	getccmdlp:
  1692 000019EB 4F                  <1> 		dec edi
  1693 000019EC 8A07                <1> 		mov al, [edi]
  1694 000019EE 81FF[1F310000]      <1> 		cmp edi, commandbuf
  1695 000019F4 7231                <1> 		jb getcmdresetcommandbuf
  1696 000019F6 81EF[1F310000]      <1> 		sub edi, commandbuf
  1697 000019FC 3B3D[1B310000]      <1> 		cmp edi, [currentcommandpos]
  1698 00001A02 0F8413FEFFFF        <1> 		je near int305b
  1699 00001A08 81C7[1F310000]      <1> 		add edi, commandbuf
  1700 00001A0E 3C00                <1> 		cmp al, 0
  1701 00001A10 75D9                <1> 		jne getccmdlp
  1702 00001A12 FECC                <1> 		dec ah
  1703 00001A14 80FC00              <1> 		cmp ah, 0
  1704 00001A17 77D2                <1> 		ja getccmdlp
  1705 00001A19 47                  <1> 		inc edi
  1706 00001A1A 81FF[1F350000]      <1> 		cmp edi, commandbufend
  1707 00001A20 770D                <1> 		ja fixcmdbufb4moreint305
  1708 00001A22 E915000000          <1> 		jmp moreint305up
  1709                              <1> 	getcmdresetcommandbuf:
  1710 00001A27 BF[1F350000]        <1> 		mov edi, commandbufend
  1711 00001A2C 47                  <1> 		inc edi
  1712 00001A2D EBBC                <1> 		jmp getccmdlp
  1713                              <1> 	fixcmdbufb4moreint305:
  1714 00001A2F 4F                  <1> 		dec edi
  1715 00001A30 81EF[1F350000]      <1> 		sub edi, commandbufend
  1716 00001A36 81C7[1F310000]      <1> 		add edi, commandbuf
  1717                              <1> 	moreint305up:
  1718 00001A3C 8A07                <1> 		mov al, [edi]
  1719 00001A3E 47                  <1> 		inc edi
  1720 00001A3F 81EF[1F310000]      <1> 		sub edi, commandbuf
  1721 00001A45 3C00                <1> 		cmp al, 0
  1722 00001A47 0F84CEFDFFFF        <1> 		je near int305b
  1723 00001A4D 3B3D[1B310000]      <1> 		cmp edi, [currentcommandpos]
  1724 00001A53 0F83C2FDFFFF        <1> 		jae near int305b
  1725 00001A59 81C7[1F310000]      <1> 		add edi, commandbuf
  1726 00001A5F 8806                <1> 		mov [esi], al
  1727 00001A61 46                  <1> 		inc esi
  1728 00001A62 57                  <1> 		push edi
  1729 00001A63 8A1D[F6170000]      <1> 		mov bl, [modkey305]
  1730 00001A69 E826FBFFFF          <1> 		call int301
  1731 00001A6E 5F                  <1> 		pop edi
  1732 00001A6F 81FF[1F350000]      <1> 		cmp edi, commandbufend
  1733 00001A75 76C5                <1> 		jbe moreint305up
  1734 00001A77 BF[1F310000]        <1> 		mov edi, commandbuf
  1735 00001A7C EBBE                <1> 		jmp moreint305up
  1736                              <1> 	int305bscheck:
  1737 00001A7E 3B35[F7170000]      <1> 		cmp esi, [firstesi305]
  1738 00001A84 7705                <1> 		ja goodbscheck
  1739 00001A86 E990FDFFFF          <1> 		jmp int305b
  1740                              <1> 	goodbscheck:
  1741 00001A8B 4E                  <1> 		dec esi
  1742 00001A8C C60600              <1> 		mov byte [esi], 0
  1743 00001A8F 8A1D[F6170000]      <1> 		mov bl, [modkey305]
  1744 00001A95 B008                <1> 		mov al, 8
  1745 00001A97 E9BBFDFFFF          <1> 		jmp bscheckequal
  1746                              <1> 	
  1747                              <1> 		
  1748                              <1> 	clear:		
  1749                              <1> 	
  1750                              <1> 	int306:	;;clear screen
  1751 00001A9C 668B0D[90150000]    <1> 		mov cx, [charxy]
  1752 00001AA3 BF[8F1D0000]        <1> 		mov edi, videobuf2
  1753 00001AA8 66B80000            <1> 		mov ax, 0
  1754 00001AAC 66A3[8A150000]      <1> 		mov [linebeginpos], ax
  1755 00001AB2 66A3[8C150000]      <1> 		mov [videobufpos], ax
  1756 00001AB8 66BA0000            <1> 		mov dx, 0
  1757 00001ABC 66A3[8E150000]      <1> 		mov [charpos], ax
  1758                              <1> 	int306b:
  1759 00001AC2 668907              <1> 		mov [edi], ax
  1760 00001AC5 81C702000000        <1> 		add edi, 2
  1761 00001ACB 80E902              <1> 		sub cl, 2
  1762 00001ACE 80F900              <1> 		cmp cl, 0
  1763 00001AD1 75EF                <1> 		jne int306b
  1764 00001AD3 8A0D[90150000]      <1> 		mov cl, [charxy]
  1765 00001AD9 FECD                <1> 		dec ch
  1766 00001ADB 80FD00              <1> 		cmp ch, 0
  1767 00001ADE 75E2                <1> 		jne int306b
  1768 00001AE0 E807000000          <1> 		call termcopy
  1769 00001AE5 C3                  <1> 		ret
  1770                              <1> 		
  1771 00001AE6 00000000            <1> 	termcursorpos dd 0
  1772 00001AEA 0000                <1> 	removedvideo dw 0
  1773                              <1> termcopy:	
  1774 00001AEC 60                  <1> 	pusha
  1775 00001AED BF[8F1D0000]        <1> 	mov edi, videobuf2
  1776 00001AF2 BB00000000          <1> 	mov ebx, 0
  1777 00001AF7 668B1D[8C150000]    <1> 	mov bx, [videobufpos]
  1778 00001AFE 01DF                <1> 	add edi, ebx
  1779 00001B00 893D[E61A0000]      <1> 	mov [termcursorpos], edi
  1780 00001B06 E8C0000000          <1> 	call switchtermcursor
  1781 00001B0B C605[283C0000]00    <1> 	mov byte [mouseselecton], 0
  1782 00001B12 C605[A0150000]01    <1> 	mov byte [termcopyon], 1
  1783 00001B19 803D[293C0000]00    <1> 	cmp byte [guion], 0
  1784 00001B20 0F8412000000        <1> 	je near nowincopy
  1785 00001B26 803D[9F150000]01    <1> 	cmp byte [termguion], 1
  1786 00001B2D 0F84F52C0000        <1> 	je near windowvideocopy
  1787 00001B33 E98C000000          <1> 	jmp nocopytermatall
  1788                              <1> nowincopy:
  1789 00001B38 BE00000A00          <1> 	mov esi, 0xA0000
  1790 00001B3D A1[FD030000]        <1> 	mov eax, [basecache]
  1791 00001B42 C1E004              <1> 	shl eax, 4
  1792 00001B45 29C6                <1> 	sub esi, eax
  1793 00001B47 BF[8F1D0000]        <1> 	mov edi, videobuf2
  1794 00001B4C B900000000          <1> 	mov ecx, 0
  1795 00001B51 668B0D[90150000]    <1> 	mov cx, [charxy]
  1796                              <1> nowincopy2:
  1797 00001B58 BB[835F0000]        <1> 	mov ebx, fonts
  1798 00001B5D B800000000          <1> 	mov eax, 0
  1799 00001B62 8A07                <1> 	mov al, [edi]
  1800 00001B64 C1E004              <1> 	shl eax, 4
  1801 00001B67 01C3                <1> 	add ebx, eax
  1802 00001B69 47                  <1> 	inc edi
  1803 00001B6A 8A27                <1> 	mov ah, [edi]
  1804 00001B6C BA00000000          <1> 	mov edx, 0
  1805 00001B71 8A15[90150000]      <1> 	mov dl, [charxy]
  1806 00001B77 D1EA                <1> 	shr edx, 1
  1807 00001B79 C1C110              <1> 	rol ecx, 16
  1808 00001B7C B110                <1> 	mov cl, 16
  1809                              <1> nowinfont:
  1810 00001B7E 8A03                <1> 	mov al, [ebx]
  1811 00001B80 D0C8                <1> 	ror al, 1
  1812 00001B82 80FC07              <1> 	cmp ah, 7
  1813 00001B85 7602                <1> 	jbe notnotfont
  1814 00001B87 F6D0                <1> 	not al
  1815                              <1> notnotfont:
  1816 00001B89 8806                <1> 	mov [esi], al
  1817 00001B8B 01D6                <1> 	add esi, edx
  1818 00001B8D 43                  <1> 	inc ebx
  1819 00001B8E FEC9                <1> 	dec cl
  1820 00001B90 80F900              <1> 	cmp cl, 0
  1821 00001B93 75E9                <1> 	jne nowinfont
  1822 00001B95 C1E204              <1> 	shl edx, 4
  1823 00001B98 29D6                <1> 	sub esi, edx
  1824 00001B9A C1C110              <1> 	rol ecx, 16
  1825                              <1> nopresentwinfont:
  1826 00001B9D 47                  <1> 	inc edi
  1827 00001B9E 46                  <1> 	inc esi
  1828 00001B9F 80E902              <1> 	sub cl, 2
  1829 00001BA2 80F900              <1> 	cmp cl, 0
  1830 00001BA5 75B1                <1> 	jne nowincopy2
  1831 00001BA7 8A0D[90150000]      <1> 	mov cl, [charxy]
  1832 00001BAD BA00000000          <1> 	mov edx, 0
  1833 00001BB2 88CA                <1> 	mov dl, cl
  1834 00001BB4 D1EA                <1> 	shr edx, 1
  1835 00001BB6 29D6                <1> 	sub esi, edx
  1836 00001BB8 C1E204              <1> 	shl edx, 4
  1837 00001BBB 01D6                <1> 	add esi, edx
  1838 00001BBD FECD                <1> 	dec ch
  1839 00001BBF 80FD00              <1> 	cmp ch, 0
  1840 00001BC2 7594                <1> 	jne nowincopy2
  1841                              <1> nocopytermatall:
  1842 00001BC4 E802000000          <1> 	call switchtermcursor
  1843 00001BC9 61                  <1> 	popa
  1844 00001BCA C3                  <1> 	ret
  1845                              <1> 	
  1846                              <1> switchtermcursor:
  1847 00001BCB 8B3D[E61A0000]      <1> 	mov edi, [termcursorpos]
  1848 00001BD1 8A4701              <1> 	mov al, [edi + 1]
  1849 00001BD4 8A27                <1> 	mov ah, [edi]
  1850 00001BD6 3C07                <1> 	cmp al, 7
  1851 00001BD8 7607                <1> 	jbe movlargecursorterm
  1852 00001BDA B007                <1> 	mov al, 7
  1853 00001BDC E902000000          <1> 	jmp movedcursorterm
  1854                              <1> movlargecursorterm:
  1855 00001BE1 B0F0                <1> 	mov al, 0xF0
  1856                              <1> movedcursorterm:
  1857 00001BE3 884701              <1> 	mov [edi + 1], al
  1858 00001BE6 80FC00              <1> 	cmp ah, 0
  1859 00001BE9 7504                <1> 	jne fixednocursorterm
  1860 00001BEB B420                <1> 	mov ah, " "
  1861 00001BED 8827                <1> 	mov [edi], ah
  1862                              <1> fixednocursorterm:
  1863 00001BEF C3                  <1> 	ret
  1864                              <1> 	
  1865                                      %include 'source/solleros.asm'
  1866                              <1> 	;SOLLEROS.ASM
  1867                              <1> os:
  1868 00001BF0 E8A7FEFFFF          <1> 	call clear
  1869 00001BF5 BE[3A5F0000]        <1> 	mov esi, userask
  1870 00001BFA E8ACFBFFFF          <1> 	call print
  1871                              <1> usercheck:
  1872 00001BFF BE[7A1B0000]        <1> 	mov esi, buftxt
  1873 00001C04 B00D                <1> 	mov al, 13
  1874 00001C06 B404                <1> 	mov ah, 4
  1875 00001C08 CD30                <1> 	int 30h
  1876 00001C0A 56                  <1> 	push esi
  1877 00001C0B BE[5A5F0000]        <1> 	mov esi, line
  1878 00001C10 E896FBFFFF          <1> 	call print
  1879 00001C15 BE[445F0000]        <1> 	mov esi, pwdask
  1880 00001C1A E88CFBFFFF          <1> 	call print
  1881 00001C1F 5E                  <1> 	pop esi
  1882 00001C20 46                  <1> 	inc esi
  1883 00001C21 8935[D71C0000]      <1> 	mov [esipass], esi
  1884                              <1> passcheck:
  1885 00001C27 B000                <1> 	mov al, 0
  1886 00001C29 B405                <1> 	mov ah, 5
  1887 00001C2B CD30                <1> 	int 30h
  1888 00001C2D 3C0D                <1> 	cmp al, 13
  1889 00001C2F 0F8435000000        <1> 	je near gotpass
  1890 00001C35 3C08                <1> 	cmp al, 8
  1891 00001C37 0F840F000000        <1> 	je near backpass
  1892 00001C3D 8806                <1> 	mov [esi], al
  1893 00001C3F 46                  <1> 	inc esi
  1894 00001C40 B02A                <1> 	mov al, '*'
  1895 00001C42 B406                <1> 	mov ah, 6
  1896 00001C44 CD30                <1> 	int 30h
  1897 00001C46 EBDF                <1> 	jmp passcheck
  1898 00001C48 08200800            <1> backcursor2 db 8," ",8,0
  1899                              <1> backpass:
  1900 00001C4C 3B35[D71C0000]      <1> 	cmp esi, [esipass]
  1901 00001C52 0F84CFFFFFFF        <1> 	je near passcheck
  1902 00001C58 4E                  <1> 	dec esi
  1903 00001C59 C60600              <1> 	mov byte [esi], 0
  1904 00001C5C 56                  <1> 	push esi
  1905 00001C5D BE[481C0000]        <1> 	mov esi, backcursor2
  1906 00001C62 E844FBFFFF          <1> 	call print
  1907 00001C67 5E                  <1> 	pop esi
  1908 00001C68 EBBD                <1> 	jmp passcheck
  1909                              <1> gotpass:
  1910 00001C6A B000                <1> 	mov al,0
  1911 00001C6C 8806                <1> 	mov [esi], al
  1912 00001C6E BE[5A5F0000]        <1> 	mov esi, line
  1913 00001C73 E833FBFFFF          <1> 	call print
  1914 00001C78 BB[605F0000]        <1> 	mov ebx, userlst
  1915                              <1> userfind:
  1916 00001C7D BE[7A1B0000]        <1> 	mov esi, buftxt
  1917 00001C82 8A06                <1> 	mov al, [esi]
  1918 00001C84 3C00                <1> 	cmp al, 0
  1919 00001C86 0F8464FFFFFF        <1> 	je near os
  1920 00001C8C 891D[DB1C0000]      <1> 	mov [usercache], ebx
  1921 00001C92 E854020000          <1> 	call tester
  1922 00001C97 3C01                <1> 	cmp al, 1
  1923 00001C99 7415                <1> 	je pwdtest
  1924                              <1> nxtuser:
  1925 00001C9B 43                  <1> 	inc ebx
  1926 00001C9C 8A03                <1> 	mov al, [ebx]
  1927 00001C9E 3C00                <1> 	cmp al, 0
  1928 00001CA0 74DB                <1> 	je userfind
  1929 00001CA2 81FB[835F0000]      <1> 	cmp ebx, userlstend
  1930 00001CA8 0F8342FFFFFF        <1> 	jae near os
  1931 00001CAE EBCD                <1> 	jmp userfind
  1932                              <1> pwdtest:
  1933 00001CB0 46                  <1> 	inc esi
  1934 00001CB1 43                  <1> 	inc ebx
  1935 00001CB2 E834020000          <1> 	call tester
  1936 00001CB7 3C01                <1> 	cmp al, 1
  1937 00001CB9 7402                <1> 	je pwdrgt
  1938 00001CBB EBDE                <1> 	jmp nxtuser
  1939 00001CBD E8DAFDFFFF          <1> pwdrgt:	call clear
  1940 00001CC2 66B90002            <1> 	mov cx, 200h
  1941 00001CC6 BE[7A1B0000]        <1> 	mov esi, buftxt
  1942 00001CCB B000                <1> 	mov al, 0
  1943 00001CCD 8806                <1> bufclr:	mov [esi], al
  1944 00001CCF 46                  <1> 	inc esi
  1945 00001CD0 E2FB                <1> 	loop bufclr
  1946                              <1> ;;;;;;;;;;;;;;;;
  1947 00001CD2 E935000000          <1> 	jmp nwcmd
  1948                              <1> 
  1949 00001CD7 00000000            <1> esipass dd 0
  1950 00001CDB [605F0000]          <1> usercache dd userlst
  1951                              <1> 	
  1952                              <1> buftxtclear:
  1953 00001CDF B000                <1> 	mov al, 0
  1954 00001CE1 BE[7A1B0000]        <1> 	mov esi, buftxt
  1955 00001CE6 81FE[7A1D0000]      <1> clearbuftxt: cmp esi, buf2
  1956 00001CEC 730E                <1> 	jae retbufclr
  1957 00001CEE 8806                <1> 	mov [esi], al
  1958 00001CF0 46                  <1> 	inc esi
  1959 00001CF1 EBF3                <1> 	jmp clearbuftxt
  1960                              <1> 
  1961 00001CF3 39DE                <1> clearitbuf: cmp esi, ebx
  1962 00001CF5 7305                <1> 	jae retbufclr
  1963 00001CF7 8806                <1> 	mov [esi], al
  1964 00001CF9 46                  <1> 	inc esi
  1965 00001CFA EBF7                <1> 	jmp clearitbuf
  1966 00001CFC C3                  <1> retbufclr: ret
  1967                              <1> 
  1968 00001CFD E90A000000          <1> full:	jmp nwcmd
  1969                              <1> 
  1970                              <1> nwcmd2:
  1971 00001D02 BE[5A5F0000]        <1> 	mov esi, line
  1972 00001D07 E89FFAFFFF          <1> 	call print
  1973                              <1> 
  1974 00001D0C B001                <1> nwcmd:	mov al, 1
  1975 00001D0E 3805[69150000]      <1> 	cmp [BATCHISON], al
  1976 00001D14 0F83AC000000        <1> 	jae near batchran
  1977 00001D1A B000                <1> cancel:	mov al, 0
  1978 00001D1C A2[00150000]        <1> 	mov [IFON], al
  1979 00001D21 A2[69150000]        <1> 	mov [BATCHISON], al
  1980 00001D26 B05B                <1> 	mov al, '['
  1981 00001D28 B406                <1> 	mov ah, 6
  1982 00001D2A 66BB0700            <1> 	mov bx, 7
  1983 00001D2E E86EF8FFFF          <1> 	call int301prnt
  1984 00001D33 8B35[DB1C0000]      <1> 	mov esi, [usercache]
  1985 00001D39 E86DFAFFFF          <1> 	call print
  1986 00001D3E BE[4E5F0000]        <1> 	mov esi, location
  1987 00001D43 E863FAFFFF          <1> 	call print
  1988 00001D48 E892FFFFFF          <1> 	call buftxtclear
  1989 00001D4D BE[7A1B0000]        <1> 	mov esi, buftxt
  1990 00001D52 C605[FB170000]01    <1> 	mov byte [commandedit], 1
  1991 00001D59 B00D                <1> 	mov al, 13
  1992 00001D5B 66BB0700            <1> 	mov bx, 7
  1993 00001D5F E8A0FAFFFF          <1> 	call int305
  1994 00001D64 C605[FB170000]00    <1> 	mov byte [commandedit], 0
  1995 00001D6B 803D[7A1B0000]00    <1> 	cmp byte [buftxt], 0
  1996 00001D72 0F848AFFFFFF        <1> 	je near nwcmd2
  1997 00001D78 8B35[1B310000]      <1> gotcmd:	mov esi, [currentcommandpos]
  1998 00001D7E 8935[17310000]      <1> 	mov [lastcommandpos], esi
  1999 00001D84 BF[7A1B0000]        <1> 	mov edi, buftxt
  2000 00001D89 81C6[1F310000]      <1> 	add esi, commandbuf
  2001 00001D8F 81FE[1F350000]      <1> 	cmp esi, commandbufend
  2002 00001D95 7605                <1> 	jbe copycommand
  2003 00001D97 BE[1F310000]        <1> 	mov esi, commandbuf
  2004                              <1> copycommand:
  2005 00001D9C 8A07                <1> 	mov al, [edi]
  2006 00001D9E 8806                <1> 	mov [esi], al
  2007 00001DA0 47                  <1> 	inc edi
  2008 00001DA1 46                  <1> 	inc esi
  2009 00001DA2 3C00                <1> 	cmp al, 0
  2010 00001DA4 740F                <1> 	je donecopy
  2011 00001DA6 81FE[1F350000]      <1> 	cmp esi, commandbufend
  2012 00001DAC 76EE                <1> 	jbe copycommand
  2013 00001DAE BE[1F310000]        <1> 	mov esi, commandbuf
  2014 00001DB3 EBE7                <1> 	jmp copycommand
  2015                              <1> donecopy:
  2016 00001DB5 81EE[1F310000]      <1> 	sub esi, commandbuf
  2017 00001DBB 8935[1B310000]      <1> 	mov [currentcommandpos], esi
  2018 00001DC1 E980000000          <1> 	jmp run
  2019                              <1> 	
  2020                              <1> batchran:
  2021 00001DC6 C3                  <1> 	ret
  2022                              <1> 
  2023 00001DC7 E813FFFFFF          <1> input:	call buftxtclear
  2024 00001DCC BE[7A1B0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  2025 00001DD1 B00D                <1> stdin:	mov al, 13
  2026 00001DD3 B307                <1> 	mov bl, 7
  2027 00001DD5 B404                <1> 	mov ah, 4
  2028 00001DD7 CD30                <1> 	int 30h
  2029 00001DD9 C3                  <1> 	ret
  2030                              <1> 
  2031                              <1> replacevariable:
  2032 00001DDA 56                  <1> 	push esi
  2033 00001DDB 81EE[7A1B0000]      <1> 	sub esi, buftxt
  2034 00001DE1 89F7                <1> 	mov edi, esi
  2035 00001DE3 81C6[7A1B0000]      <1> 	add esi, buftxt
  2036 00001DE9 47                  <1> 	inc edi
  2037 00001DEA BB[6F150000]        <1> 	mov ebx, variables
  2038 00001DEF E876070000          <1> 	call nxtvrech
  2039 00001DF4 89F7                <1> 	mov edi, esi
  2040 00001DF6 BB00000000          <1> 	mov ebx, 0
  2041 00001DFB 4E                  <1> 	dec esi
  2042                              <1> findvarname:
  2043 00001DFC 4E                  <1> 	dec esi
  2044 00001DFD 8A06                <1> 	mov al, [esi]
  2045 00001DFF 43                  <1> 	inc ebx
  2046 00001E00 3C04                <1> 	cmp al, 4
  2047 00001E02 75F8                <1> 	jne findvarname
  2048 00001E04 5E                  <1> 	pop esi
  2049                              <1> replacevarloop:
  2050 00001E05 8A07                <1> 	mov al, [edi]
  2051 00001E07 3C00                <1> 	cmp al, 0
  2052 00001E09 0F8446000000        <1> 	je near fixvariables
  2053 00001E0F 81FB00000000        <1> 	cmp ebx, 0
  2054 00001E15 0F8407000000        <1> 	je near expandbuftxt
  2055 00001E1B 8806                <1> 	mov [esi], al
  2056 00001E1D 4B                  <1> 	dec ebx
  2057 00001E1E 46                  <1> 	inc esi
  2058 00001E1F 47                  <1> 	inc edi
  2059 00001E20 EBE3                <1> 	jmp replacevarloop
  2060                              <1> expandbuftxt:
  2061 00001E22 89F1                <1> 	mov ecx, esi
  2062 00001E24 8A26                <1> 	mov ah, [esi]
  2063                              <1> expandbuftxtlp:
  2064 00001E26 8A1E                <1> 	mov bl, [esi]
  2065 00001E28 46                  <1> 	inc esi
  2066 00001E29 8A3E                <1> 	mov bh, [esi]
  2067 00001E2B 8826                <1> 	mov [esi], ah
  2068 00001E2D 88FC                <1> 	mov ah, bh
  2069 00001E2F 80FB00              <1> 	cmp bl, 0
  2070 00001E32 75F2                <1> 	jne expandbuftxtlp
  2071 00001E34 89CE                <1> 	mov esi, ecx
  2072 00001E36 8806                <1> 	mov [esi], al
  2073 00001E38 47                  <1> 	inc edi
  2074 00001E39 8A07                <1> 	mov al, [edi]
  2075 00001E3B 3C00                <1> 	cmp al, 0
  2076 00001E3D 0F8412000000        <1> 	je near fixvariables
  2077 00001E43 46                  <1> 	inc esi
  2078 00001E44 EBDC                <1> 	jmp expandbuftxt
  2079                              <1> 	
  2080                              <1> 	
  2081                              <1> run:	
  2082 00001E46 BE[5A5F0000]        <1> 	mov esi, line		;;I should add some sort of command line parsing before it is processed to replace variables with stuff
  2083 00001E4B E85BF9FFFF          <1> 	call print
  2084 00001E50 BE[7A1B0000]        <1> 	mov esi, buftxt
  2085                              <1> fixvariables:
  2086 00001E55 46                  <1> 	inc esi
  2087 00001E56 8A06                <1> 	mov al, [esi]
  2088 00001E58 3C24                <1> 	cmp al, '$'
  2089 00001E5A 0F847AFFFFFF        <1> 	je near replacevariable
  2090 00001E60 3C00                <1> 	cmp al, 0
  2091 00001E62 75F1                <1> 	jne fixvariables
  2092                              <1> 
  2093 00001E64 803D[5F240000]00    <1> 	cmp byte [indexdone], 0
  2094 00001E6B 7505                <1> 	jne progtest
  2095 00001E6D E858050000          <1> 	call indexfiles
  2096                              <1> progtest:
  2097 00001E72 BE[7A1B0000]        <1> 	mov esi, buftxt
  2098 00001E77 BB[00130000]        <1> 	mov ebx, fileindex
  2099 00001E7C 668B03              <1> prgnxt:	mov ax, [ebx]
  2100 00001E7F B105                <1> 	mov cl, 5
  2101 00001E81 B504                <1> 	mov ch, 4
  2102 00001E83 6639C8              <1> 	cmp ax, cx
  2103 00001E86 740B                <1> 	je fndprg
  2104 00001E88 43                  <1> 	inc ebx
  2105 00001E89 81FB[00150000]      <1> 	cmp ebx, fileindexend
  2106 00001E8F 732E                <1> 	jae prgnf
  2107 00001E91 EBE9                <1> 	jmp prgnxt
  2108 00001E93 81C302000000        <1> fndprg: add ebx, 2
  2109 00001E99 BE[7A1B0000]        <1> 	mov esi, buftxt
  2110 00001E9E 66B90000            <1> 	mov cx, 0
  2111 00001EA2 E87E000000          <1> 	call cndtest
  2112 00001EA7 3C01                <1> 	cmp al, 1
  2113 00001EA9 7302                <1> 	jae prggood
  2114 00001EAB EBCF                <1> 	jmp prgnxt
  2115 00001EAD 81FB[00150000]      <1> prggood: cmp ebx, fileindexend
  2116 00001EB3 7331                <1> 	jae prgdn
  2117 00001EB5 81C303000000        <1> 	add ebx, 3
  2118 00001EBB 8B3B                <1> 	mov edi, [ebx]
  2119 00001EBD FFE7                <1> 	jmp edi
  2120                              <1> prgnf:	
  2121 00001EBF A0[7A1B0000]        <1> 	mov al, [buftxt]
  2122 00001EC4 3C00                <1> 	cmp al, 0
  2123 00001EC6 741E                <1> 	je prgdn
  2124 00001EC8 BE[215F0000]        <1> 	mov esi, notfound1
  2125 00001ECD E8D9F8FFFF          <1> 	call print
  2126 00001ED2 BE[7A1B0000]        <1> 	mov esi, buftxt
  2127 00001ED7 E8CFF8FFFF          <1> 	call print
  2128 00001EDC BE[2B5F0000]        <1> 	mov esi, notfound2
  2129 00001EE1 E8C5F8FFFF          <1> 	call print
  2130 00001EE6 E921FEFFFF          <1> prgdn:	jmp nwcmd
  2131                              <1> 
  2132                              <1> 
  2133                              <1> tester:			;si=user bx=prog returns 1 in al if true
  2134 00001EEB B000                <1> 	mov al, 0
  2135 00001EED 8A06                <1> retest:	mov al, [esi]
  2136 00001EEF 8A23                <1> 	mov ah, [ebx]
  2137 00001EF1 3C00                <1> 	cmp al, 0
  2138 00001EF3 7408                <1> 	je testtrue
  2139 00001EF5 38E0                <1> 	cmp al, ah
  2140 00001EF7 750C                <1> 	jne testfalse
  2141 00001EF9 43                  <1> 	inc ebx
  2142 00001EFA 46                  <1> 	inc esi
  2143 00001EFB EBF0                <1> 	jmp retest
  2144                              <1> testtrue:
  2145 00001EFD 80FC00              <1> 	cmp ah, 0
  2146 00001F00 7503                <1> 	jne testfalse
  2147 00001F02 B001                <1> 	mov al, 1
  2148 00001F04 C3                  <1> 	ret
  2149                              <1> testfalse:
  2150 00001F05 B000                <1> 	mov al, 0
  2151 00001F07 C3                  <1> 	ret
  2152                              <1> 
  2153                              <1> optest:			;si=user bx=prog returns 1 in al if true
  2154 00001F08 B000                <1> 	mov al, 0
  2155                              <1> opretest:
  2156 00001F0A 8A06                <1> 	mov al, [esi]
  2157 00001F0C 8A23                <1> 	mov ah, [ebx]
  2158 00001F0E 38E0                <1> 	cmp al, ah
  2159 00001F10 7510                <1> 	jne optestfalse
  2160 00001F12 80FC00              <1> 	cmp ah, 0
  2161 00001F15 7404                <1> 	je optesttrue
  2162 00001F17 43                  <1> 	inc ebx
  2163 00001F18 46                  <1> 	inc esi
  2164 00001F19 EBEF                <1> 	jmp opretest
  2165                              <1> optesttrue:
  2166 00001F1B 3C00                <1> 	cmp al, 0
  2167 00001F1D 7503                <1> 	jne optestfalse
  2168 00001F1F B001                <1> 	mov al, 1
  2169 00001F21 C3                  <1> 	ret
  2170                              <1> optestfalse:
  2171 00001F22 B000                <1> 	mov al, 0
  2172 00001F24 C3                  <1> 	ret
  2173                              <1> 
  2174                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  2175 00001F25 B000                <1> 	mov al, 0
  2176 00001F27 8A06                <1> cndretest:	mov al, [esi]
  2177 00001F29 8A23                <1> 	mov ah, [ebx]
  2178 00001F2B 38CC                <1> 	cmp ah, cl
  2179 00001F2D 7408                <1> 	je cndtesttrue
  2180 00001F2F 38E0                <1> 	cmp al, ah
  2181 00001F31 750B                <1> 	jne cndtestfalse
  2182 00001F33 43                  <1> 	inc ebx
  2183 00001F34 46                  <1> 	inc esi
  2184 00001F35 EBF0                <1> 	jmp cndretest
  2185                              <1> cndtesttrue:
  2186 00001F37 38C8                <1> 	cmp al, cl
  2187 00001F39 7506                <1> 	jne cndtestalmost
  2188 00001F3B B001                <1> 	mov al, 1
  2189 00001F3D C3                  <1> 	ret
  2190                              <1> cndtestfalse:
  2191 00001F3E B000                <1> 	mov al, 0
  2192 00001F40 C3                  <1> 	ret
  2193                              <1> cndtestalmost:
  2194 00001F41 B002                <1> 	mov al, 2
  2195 00001F43 C3                  <1> 	ret
  2196 00001F44 00                  <1> currentdir db 0
  2197 00001F45 BE[00130000]        <1> dir:	mov esi, fileindex
  2198 00001F4A 8A06                <1> 	dirnxt:	mov al, [esi]
  2199 00001F4C B400                <1> 		mov ah, 0
  2200 00001F4E 3C05                <1> 		cmp al, 5
  2201 00001F50 744A                <1> 		je dirfnd
  2202 00001F52 3C07                <1> 		cmp al, 7
  2203 00001F54 743C                <1> 		je dirfnd3
  2204 00001F56 3C06                <1> 		cmp al, 6
  2205 00001F58 7438                <1> 		je dirfnd3
  2206 00001F5A 46                  <1> 		inc esi
  2207 00001F5B 81FE[00150000]      <1> 		cmp esi,  fileindexend
  2208 00001F61 737B                <1> 		jae dirdn
  2209 00001F63 EBE5                <1> 		jmp dirnxt
  2210 00001F65 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  2211 00001F6E 070400646F63756D65- <1>
  2212 00001F77 6E74000A0400666F6C- <1>
  2213 00001F80 646572000504006578- <1>
  2214 00001F89 6563757461626C6500  <1>
  2215                              <1> 	dirfnd3:
  2216 00001F92 46                  <1> 		inc esi
  2217 00001F93 81FE[00150000]      <1> 		cmp esi, fileindexend
  2218 00001F99 76AF                <1> 		jbe dirnxt
  2219 00001F9B 4E                  <1> 		dec esi
  2220 00001F9C 46                  <1> 	dirfnd:	inc esi
  2221 00001F9D 8A06                <1> 		mov al, [esi]
  2222 00001F9F B400                <1> 		mov ah, 0
  2223 00001FA1 3C04                <1> 		cmp al, 4
  2224 00001FA3 740B                <1> 		je dirfnd2
  2225 00001FA5 46                  <1> 		inc esi
  2226 00001FA6 81FE[00150000]      <1> 		cmp esi,  fileindexend
  2227 00001FAC 7330                <1> 		jae dirdn
  2228 00001FAE EB9A                <1> 		jmp dirnxt
  2229 00001FB0 81C601000000        <1> 	dirfnd2: add esi, 1
  2230 00001FB6 E8F0F7FFFF          <1> 		call print
  2231 00001FBB 8935[ED1F0000]      <1> 		mov [esidir], esi
  2232 00001FC1 BE[5D5F0000]        <1> 		mov esi, dirtab
  2233 00001FC6 E8E0F7FFFF          <1> 		call print
  2234 00001FCB 8B35[ED1F0000]      <1> 		mov esi, [esidir]
  2235 00001FD1 81FE[00150000]      <1> 		cmp esi,  fileindexend
  2236 00001FD7 7305                <1> 		jae dirdn
  2237 00001FD9 E96CFFFFFF          <1> 		jmp dirnxt
  2238 00001FDE BE[5A5F0000]        <1> 	dirdn:	mov esi, line
  2239 00001FE3 E8C3F7FFFF          <1> 			call print
  2240 00001FE8 E91FFDFFFF          <1> 			jmp nwcmd
  2241 00001FED 00000000            <1> esidir dd 0
  2242                              <1> 
  2243                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  2244                              <1> 		                ;ends if array seperator is found backwards after 0
  2245                              <1> 	arnxt:	      
  2246 00001FF1 88E8                <1> 		mov al, ch
  2247 00001FF3 88CC                <1> 		mov ah, cl        
  2248 00001FF5 663906              <1> 		cmp [esi], ax
  2249 00001FF8 744D                <1> 		je ardn
  2250 00001FFA 66390E              <1> 		cmp [esi], cx
  2251 00001FFD 7407                <1> 		je arfnd
  2252 00001FFF 46                  <1> 		inc esi
  2253 00002000 39DE                <1> 		cmp esi, ebx
  2254 00002002 7343                <1> 		jae ardn
  2255 00002004 EBEB                <1> 		jmp arnxt
  2256 00002006 81C602000000        <1> 	arfnd: add esi, 2
  2257 0000200C 891D[48200000]      <1> 		mov [arbx], ebx
  2258 00002012 890D[4C200000]      <1> 		mov [arcx], ecx
  2259 00002018 E88EF7FFFF          <1> 		call print
  2260 0000201D 8935[4E200000]      <1> 		mov [arsi], esi
  2261 00002023 BE[5A5F0000]        <1> 		mov esi, line
  2262 00002028 E87EF7FFFF          <1> 		call print
  2263 0000202D 8B1D[48200000]      <1> 		mov ebx, [arbx]
  2264 00002033 668B0D[4C200000]    <1> 		mov cx, [arcx]
  2265 0000203A 8B35[4E200000]      <1> 		mov esi, [arsi]
  2266 00002040 46                  <1> 		inc esi
  2267 00002041 39DE                <1> 		cmp esi, ebx
  2268 00002043 7302                <1> 		jae ardn
  2269 00002045 EBAA                <1> 		jmp arnxt
  2270 00002047 C3                  <1> 	ardn:	ret
  2271 00002048 00000000            <1> arbx:	dw 0,0
  2272 0000204C 0000                <1> arcx:	db 0,0
  2273 0000204E 00000000            <1> arsi:	dw 0,0
  2274                              <1> 
  2275                              <1> clearbuffer:
  2276 00002052 BE[7A1D0000]        <1> 	mov esi, buf2
  2277 00002057 B030                <1> 	mov al, '0'
  2278 00002059 81FE[8E1D0000]      <1> clearbuf: cmp esi, numbuf
  2279 0000205F 7305                <1> 	jae doneclearbuff
  2280 00002061 8806                <1> 	mov [esi], al
  2281 00002063 46                  <1> 	inc esi
  2282 00002064 EBF3                <1> 	jmp clearbuf
  2283                              <1> doneclearbuff: 
  2284 00002066 C3                  <1> 		ret
  2285                              <1> 
  2286                              <1> convert:
  2287 00002067 4E                  <1> 	dec esi
  2288 00002068 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  2289                              <1> cnvrt:
  2290 0000206A 89DE                <1> 	mov esi, ebx
  2291 0000206C 81EE09000000        <1> 	sub esi, 9
  2292 00002072 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  2293 00002078 720A                <1> 	jb ten8
  2294 0000207A 81E900CA9A3B        <1> 	sub ecx, 1000000000
  2295 00002080 FE06                <1> 	inc byte [esi]
  2296 00002082 EBE6                <1> 	jmp cnvrt
  2297 00002084 46                  <1> ten8:	inc esi
  2298 00002085 81F900E1F505        <1> 	cmp ecx, 100000000
  2299 0000208B 720A                <1> 	jb ten7
  2300 0000208D 81E900E1F505        <1> 	sub ecx, 100000000
  2301 00002093 FE06                <1> 	inc byte [esi]
  2302 00002095 EBD3                <1> 	jmp cnvrt
  2303 00002097 46                  <1> ten7:	inc esi
  2304 00002098 81F980969800        <1> 	cmp ecx, 10000000
  2305 0000209E 720A                <1> 	jb ten6
  2306 000020A0 81E980969800        <1> 	sub ecx, 10000000
  2307 000020A6 FE06                <1> 	inc byte [esi]
  2308 000020A8 EBC0                <1> 	jmp cnvrt
  2309 000020AA 46                  <1> ten6:	inc esi
  2310 000020AB 81F940420F00        <1> 	cmp ecx, 1000000
  2311 000020B1 720A                <1> 	jb ten5
  2312 000020B3 81E940420F00        <1> 	sub ecx, 1000000
  2313 000020B9 FE06                <1> 	inc byte [esi]
  2314 000020BB EBAD                <1> 	jmp cnvrt
  2315 000020BD 46                  <1> ten5:	inc esi
  2316 000020BE 81F9A0860100        <1> 	cmp ecx, 100000
  2317 000020C4 720A                <1> 	jb ten4
  2318 000020C6 81E9A0860100        <1> 	sub ecx, 100000
  2319 000020CC FE06                <1> 	inc byte [esi]
  2320 000020CE EB9A                <1> 	jmp cnvrt
  2321 000020D0 46                  <1> ten4:	inc esi
  2322 000020D1 81F910270000        <1> 	cmp ecx, 10000
  2323 000020D7 720A                <1> 	jb ten3
  2324 000020D9 81E910270000        <1> 	sub ecx, 10000
  2325 000020DF FE06                <1> 	inc byte [esi]
  2326 000020E1 EB87                <1> 	jmp cnvrt
  2327 000020E3 46                  <1> ten3:	inc esi
  2328 000020E4 81F9E8030000        <1> 	cmp ecx, 1000
  2329 000020EA 720D                <1> 	jb ten2
  2330 000020EC 81E9E8030000        <1> 	sub ecx, 1000
  2331 000020F2 FE06                <1> 	inc byte [esi]
  2332 000020F4 E971FFFFFF          <1> 	jmp cnvrt
  2333 000020F9 46                  <1> ten2:	inc esi
  2334 000020FA 81F964000000        <1> 	cmp ecx, 100
  2335 00002100 720D                <1> 	jb ten1
  2336 00002102 81E964000000        <1> 	sub ecx, 100
  2337 00002108 FE06                <1> 	inc byte [esi]
  2338 0000210A E95BFFFFFF          <1> 	jmp cnvrt
  2339 0000210F 46                  <1> ten1:	inc esi
  2340 00002110 81F90A000000        <1> 	cmp ecx, 10
  2341 00002116 720D                <1> 	jb ten0
  2342 00002118 81E90A000000        <1> 	sub ecx, 10
  2343 0000211E FE06                <1> 	inc byte [esi]
  2344 00002120 E945FFFFFF          <1> 	jmp cnvrt
  2345 00002125 46                  <1> ten0:	inc esi
  2346 00002126 81F901000000        <1> 	cmp ecx, 1
  2347 0000212C 720D                <1> 	jb tendn
  2348 0000212E 81E901000000        <1> 	sub ecx, 1
  2349 00002134 FE06                <1> 	inc byte [esi]
  2350 00002136 E92FFFFFFF          <1> 	jmp cnvrt
  2351                              <1> tendn:
  2352 0000213B C3                  <1> 	ret
  2353                              <1> 
  2354                              <1> 	
  2355                              <1> 
  2356 0000213C 00<rept>            <1> hexnumber times 8 db 0
  2357 00002144 202000              <1> hexnumberend db "  ",0
  2358                              <1> 
  2359                              <1> 
  2360 00002147 00000000            <1> sibuf dw 0,0
  2361 0000214B 00000000            <1> dibuf dw 0,0
  2362                              <1> 
  2363                              <1> converthex:
  2364                              <1> clearbufferhex:
  2365 0000214F B030                <1> 	mov al, '0'
  2366 00002151 8935[47210000]      <1> 	mov [sibuf], esi
  2367 00002157 893D[4B210000]      <1> 	mov [dibuf], edi
  2368 0000215D 39FE                <1> clearbufhex: cmp esi, edi
  2369 0000215F 7305                <1> 	jae doneclearbuffhex
  2370 00002161 8806                <1> 	mov [esi], al
  2371 00002163 46                  <1> 	inc esi
  2372 00002164 EBF7                <1> 	jmp clearbufhex
  2373                              <1> doneclearbuffhex:
  2374 00002166 8B35[4B210000]      <1> 	mov esi, [dibuf]
  2375 0000216C 89CA                <1> 	mov edx, ecx
  2376 0000216E 81FA00000000        <1> 	cmp edx, 0
  2377 00002174 741F                <1> 	je donenxtephx
  2378                              <1> nxtexphx:	;0x10^x
  2379 00002176 4E                  <1> 	dec esi
  2380 00002177 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  2381 00002179 89D1                <1> 	mov ecx, edx
  2382 0000217B 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  2383 00002181 E81C000000          <1> 	call cnvrtexphx		;;get this digit
  2384 00002186 89FE                <1> 	mov esi, edi
  2385 00002188 C1EA04              <1> 	shr edx, 4		;;next digit
  2386 0000218B 81FA00000000        <1> 	cmp edx, 0
  2387 00002191 7402                <1> 	je donenxtephx
  2388 00002193 EBE1                <1> 	jmp nxtexphx
  2389                              <1> donenxtephx:
  2390 00002195 8B35[47210000]      <1> 	mov esi, [sibuf]
  2391 0000219B 8B3D[4B210000]      <1> 	mov edi, [dibuf]
  2392 000021A1 C3                  <1> 	ret
  2393                              <1> cnvrtexphx:			;;convert this number
  2394 000021A2 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  2395 000021A4 81F900000000        <1> 	cmp ecx, 0
  2396 000021AA 7429                <1> 	je zerohx
  2397 000021AC 8A06                <1> cnvrthx:  mov al, [esi]
  2398 000021AE 3C39                <1> 	cmp al, '9'
  2399 000021B0 741B                <1> 	je lettershx
  2400 000021B2 3C46                <1> lttrhxdn: cmp al, 'F'
  2401 000021B4 741F                <1> 	je zerohx
  2402 000021B6 8A06                <1> 	mov al, [esi]
  2403 000021B8 FEC0                <1> 	inc al
  2404 000021BA 8806                <1> 	mov [esi], al
  2405 000021BC 89DE                <1> 	mov esi, ebx
  2406 000021BE 81E901000000        <1> cnvrtlphx: sub ecx, 1
  2407 000021C4 81F900000000        <1> 	cmp ecx, 0
  2408 000021CA 75E0                <1> 	jne cnvrthx
  2409 000021CC C3                  <1> 	ret
  2410                              <1> lettershx:
  2411 000021CD B041                <1> 	mov al, 'A'
  2412 000021CF 2C01                <1> 	sub al, 1
  2413 000021D1 8806                <1> 	mov [esi], al
  2414 000021D3 EBDD                <1> 	jmp lttrhxdn
  2415 000021D5 B030                <1> zerohx:	mov al, '0'
  2416 000021D7 8806                <1> 	mov [esi], al
  2417 000021D9 4E                  <1> 	dec esi
  2418 000021DA 8A06                <1> 	mov al, [esi]
  2419 000021DC 3C46                <1> 	cmp al, 'F'
  2420 000021DE 74F5                <1> 	je zerohx
  2421 000021E0 41                  <1> 	inc ecx
  2422 000021E1 EBDB                <1> 	jmp cnvrtlphx
  2423 000021E3 00                  <1> smallhex db 0
  2424 000021E4 01                  <1> firsthexshown db 1
  2425                              <1> showhexsmall:
  2426 000021E5 C605[E3210000]01    <1> 	mov byte [smallhex], 1
  2427 000021EC E808000000          <1> 	call showhex
  2428 000021F1 C605[E3210000]00    <1> 	mov byte [smallhex], 0
  2429 000021F8 C3                  <1> 	ret
  2430                              <1> showhex:
  2431 000021F9 60                  <1> 	pusha
  2432 000021FA BE[3C210000]        <1> 	mov esi, hexnumber
  2433 000021FF BF[44210000]        <1> 	mov edi, hexnumberend
  2434 00002204 E846FFFFFF          <1> 	call converthex
  2435 00002209 803D[E4210000]01    <1> 	cmp byte [firsthexshown], 1
  2436 00002210 7504                <1> 	jne showthathex
  2437 00002212 66BA0000            <1> 	mov dx, 0
  2438                              <1> showthathex:
  2439 00002216 803D[E4210000]03    <1> 	cmp byte [firsthexshown], 3
  2440 0000221D 750A                <1> 	jne nonewhexline
  2441 0000221F BE[5A5F0000]        <1> 	mov esi, line
  2442 00002224 E882F5FFFF          <1> 	call print
  2443                              <1> nonewhexline:
  2444 00002229 803D[E4210000]04    <1> 	cmp byte [firsthexshown], 4
  2445 00002230 7527                <1> 	jne notabfixhex
  2446 00002232 B1A0                <1> 	mov cl, 160
  2447 00002234 28D1                <1> 	sub cl, dl
  2448 00002236 C0E905              <1> 	shr cl, 5
  2449 00002239 C0E105              <1> 	shl cl, 5
  2450 0000223C 80F900              <1> 	cmp cl, 0
  2451 0000223F 750F                <1> 	jne nonewlinetabfixhex
  2452 00002241 BE[5A5F0000]        <1> 	mov esi, line
  2453 00002246 E860F5FFFF          <1> 	call print
  2454 0000224B E909000000          <1> 	jmp notabfixhex
  2455                              <1> nonewlinetabfixhex:
  2456 00002250 80C20F              <1> 	add dl, 15
  2457 00002253 C0EA04              <1> 	shr dl, 4
  2458 00002256 C0E204              <1> 	shl dl, 4
  2459                              <1> notabfixhex:
  2460 00002259 BE[3C210000]        <1> 	mov esi, hexnumber
  2461 0000225E 803D[E3210000]01    <1> 	cmp byte [smallhex],1
  2462 00002265 7506                <1> 	jne printnosmallhex
  2463 00002267 81C606000000        <1> 	add esi, 6
  2464                              <1> printnosmallhex:
  2465 0000226D E839F5FFFF          <1> 	call print
  2466 00002272 803D[E4210000]02    <1> 	cmp byte [firsthexshown], 2
  2467 00002279 750A                <1> 	jne hexshown
  2468 0000227B BE[5A5F0000]        <1> 	mov esi, line
  2469 00002280 E826F5FFFF          <1> 	call print
  2470                              <1> hexshown:
  2471 00002285 C605[E4210000]00    <1> 	mov byte [firsthexshown], 0
  2472 0000228C 61                  <1> 	popa
  2473 0000228D C3                  <1> 	ret
  2474                              <1> 
  2475                              <1> 
  2476 0000228E 303030303030303030- <1> decnumber db "00000000000000"
  2477 00002297 3030303030          <1>
  2478 0000229C 2000                <1> decnumberend: db " ",0
  2479                              <1> 
  2480                              <1> showdec: ;;same as showhex, just uses decimal conversion
  2481 0000229E 60                  <1> 	pusha
  2482 0000229F BF[8E220000]        <1> 	mov edi, decnumber
  2483 000022A4 BE[9C220000]        <1> 	mov esi, decnumberend
  2484                              <1> cleardecbuf:
  2485 000022A9 C60730              <1> 	mov byte [edi], '0'
  2486 000022AC 47                  <1> 	inc edi
  2487 000022AD 39F7                <1> 	cmp edi, esi
  2488 000022AF 72F8                <1> 	jb cleardecbuf
  2489 000022B1 BF[8E220000]        <1> 	mov edi, decnumber
  2490 000022B6 E8ACFDFFFF          <1> 	call convert
  2491 000022BB 803D[E4210000]01    <1> 	cmp byte [firsthexshown], 1
  2492 000022C2 7504                <1> 	jne showthatdec
  2493 000022C4 66BA0000            <1> 	mov dx, 0
  2494                              <1> showthatdec:
  2495 000022C8 803D[E4210000]03    <1> 	cmp byte [firsthexshown], 3
  2496 000022CF 750A                <1> 	jne nonewdecline
  2497 000022D1 BE[5A5F0000]        <1> 	mov esi, line
  2498 000022D6 E8D0F4FFFF          <1> 	call print
  2499                              <1> nonewdecline:
  2500 000022DB 803D[E4210000]04    <1> 	cmp byte [firsthexshown], 4
  2501 000022E2 7527                <1> 	jne notabfixdec
  2502 000022E4 B1A0                <1> 	mov cl, 160
  2503 000022E6 28D1                <1> 	sub cl, dl
  2504 000022E8 C0E905              <1> 	shr cl, 5
  2505 000022EB C0E105              <1> 	shl cl, 5
  2506 000022EE 80F900              <1> 	cmp cl, 0
  2507 000022F1 750F                <1> 	jne nonewlinetabfixdec
  2508 000022F3 BE[5A5F0000]        <1> 	mov esi, line
  2509 000022F8 E8AEF4FFFF          <1> 	call print
  2510 000022FD E909000000          <1> 	jmp notabfixdec
  2511                              <1> nonewlinetabfixdec:
  2512 00002302 80C20F              <1> 	add dl, 15
  2513 00002305 C0EA04              <1> 	shr dl, 4
  2514 00002308 C0E204              <1> 	shl dl, 4
  2515                              <1> notabfixdec:
  2516 0000230B BE[8E220000]        <1> 	mov esi, decnumber
  2517 00002310 4E                  <1> 	dec esi
  2518                              <1> sifind:
  2519 00002311 46                  <1> 	inc esi
  2520 00002312 803E30              <1> 	cmp byte [esi], '0'
  2521 00002315 74FA                <1> 	je sifind
  2522 00002317 E88FF4FFFF          <1> 	call print
  2523 0000231C 803D[E4210000]02    <1> 	cmp byte [firsthexshown], 2
  2524 00002323 750A                <1> 	jne decshown
  2525 00002325 BE[5A5F0000]        <1> 	mov esi, line
  2526 0000232A E87CF4FFFF          <1> 	call print
  2527                              <1> decshown:
  2528 0000232F C605[E4210000]00    <1> 	mov byte [firsthexshown], 0
  2529 00002336 61                  <1> 	popa
  2530 00002337 C3                  <1> 	ret
  2531                              <1> 	
  2532                              <1> cnvrttxt: 
  2533 00002338 B900000000          <1> 	mov ecx, 0
  2534 0000233D B800000000          <1> 	mov eax, 0
  2535 00002342 BA00000000          <1> 	mov edx, 0
  2536 00002347 BB00000000          <1> 	mov ebx, 0
  2537 0000234C 4E                  <1> 	dec esi
  2538                              <1> cnvrtlptxt:
  2539 0000234D 46                  <1> 	inc esi
  2540 0000234E 8A06                <1> 	mov al, [esi]
  2541 00002350 3C00                <1> 	cmp al, 0
  2542 00002352 75F9                <1> 	jne cnvrtlptxt
  2543 00002354 4E                  <1> 	dec esi
  2544 00002355 8A06                <1> 	mov al, [esi]
  2545 00002357 3C2E                <1> 	cmp al, '.'
  2546 00002359 7503                <1> 	jne nocnvrtdot
  2547 0000235B 46                  <1> 	inc esi
  2548 0000235C EBEF                <1> 	jmp cnvrtlptxt
  2549                              <1> nocnvrtdot:
  2550 0000235E 3C30                <1> 	cmp al, '0'
  2551 00002360 7504                <1> 	jne txtlp
  2552 00002362 39FE                <1> zerotest: cmp esi, edi
  2553 00002364 745B                <1> 	je donecnvrt
  2554                              <1> txtlp:	
  2555 00002366 B800000000          <1> 	mov eax, 0
  2556 0000236B 8A06                <1> 	mov al, [esi]
  2557 0000236D 3C3D                <1> 	cmp al, '='
  2558 0000236F 7450                <1> 	je donecnvrt
  2559 00002371 3C30                <1> 	cmp al, 48
  2560 00002373 724C                <1> 	jb donecnvrt
  2561 00002375 3C23                <1> 	cmp al, '#'
  2562 00002377 7448                <1> 	je donecnvrt
  2563 00002379 39FE                <1> 	cmp esi, edi
  2564 0000237B 7244                <1> 	jb donecnvrt
  2565 0000237D 81F900000000        <1> 	cmp ecx, 0
  2566 00002383 7708                <1> 	ja exp
  2567 00002385 2C30                <1> noexp:	sub al, 48
  2568 00002387 01C2                <1> 	add edx, eax
  2569 00002389 4E                  <1> 	dec esi
  2570 0000238A 41                  <1> 	inc ecx
  2571 0000238B EBD9                <1> 	jmp txtlp
  2572 0000238D 81F900000000        <1> exp:	cmp ecx, 0
  2573 00002393 74F0                <1> 	je noexp
  2574 00002395 2C30                <1> 	sub al, 48
  2575 00002397 51                  <1> 	push ecx
  2576 00002398 89C3                <1> expmul:	mov ebx, eax
  2577 0000239A 01D8                <1> 	add eax, ebx
  2578 0000239C 01D8                <1> 	add eax, ebx
  2579 0000239E 01D8                <1> 	add eax, ebx
  2580 000023A0 01D8                <1> 	add eax, ebx
  2581 000023A2 01D8                <1> 	add eax, ebx
  2582 000023A4 01D8                <1> 	add eax, ebx
  2583 000023A6 01D8                <1> 	add eax, ebx
  2584 000023A8 01D8                <1> 	add eax, ebx
  2585 000023AA 01D8                <1> 	add eax, ebx
  2586 000023AC 81E901000000        <1> 	sub ecx, 1
  2587 000023B2 81F900000000        <1> 	cmp ecx, 0
  2588 000023B8 77DE                <1> 	ja expmul
  2589 000023BA 01C2                <1> 	add edx, eax
  2590 000023BC 59                  <1> 	pop ecx
  2591 000023BD 4E                  <1> 	dec esi
  2592 000023BE 41                  <1> 	inc ecx
  2593 000023BF EBA5                <1> 	jmp txtlp
  2594 000023C1 89D1                <1> donecnvrt: mov ecx, edx
  2595 000023C3 C3                  <1> 	ret
  2596                                      %include 'source/builtinprogs.asm'
  2597 000023C4 050406040704        <1> filetypes db 5,4,6,4,7,4
  2598                              <1> progstart:		;programs start here
  2599                              <1> ;db 5,4,"index",0
  2600                              <1> ;	call indexfiles
  2601                              <1> ;	jmp nwcmd
  2602                              <1> 
  2603                              <1> 
  2604                              <1> indexfiles:
  2605 000023CA BE[CA230000]        <1> 	mov esi, progstart
  2606 000023CF BB[00130000]        <1> 	mov ebx, fileindex
  2607 000023D4 BF[CA230000]        <1> 	mov edi, progstart
  2608 000023D9 81EF02000000        <1> 	sub edi, 2
  2609                              <1> indexloop:
  2610 000023DF 668B0E              <1> 	mov cx, [esi]
  2611                              <1> 	indexloop2:
  2612 000023E2 663B0F              <1> 		cmp cx, [edi]
  2613 000023E5 7424                <1> 		je indexloop2done
  2614 000023E7 81EF02000000        <1> 		sub edi, 2
  2615 000023ED 81FF[C4230000]      <1> 		cmp edi, filetypes
  2616 000023F3 73ED                <1> 		jae indexloop2
  2617 000023F5 BF[CA230000]        <1> 	mov edi, progstart
  2618 000023FA 81EF02000000        <1> 	sub edi, 2
  2619 00002400 46                  <1> 	inc esi
  2620 00002401 81FE[3D340000]      <1> 	cmp esi, batchprogend
  2621 00002407 734E                <1> 	jae indexloopdone
  2622 00002409 EBD4                <1> 	jmp indexloop
  2623                              <1> indexloop2done:
  2624 0000240B 66890B              <1> 	mov [ebx], cx
  2625 0000240E 81C302000000        <1> 	add ebx, 2
  2626 00002414 81C602000000        <1> 	add esi, 2
  2627                              <1> 	nameindex:
  2628 0000241A 8A0E                <1> 		mov cl, [esi]
  2629 0000241C 80F900              <1> 		cmp cl, 0
  2630 0000241F 7406                <1> 		je nameindexdone
  2631 00002421 880B                <1> 		mov [ebx], cl
  2632 00002423 46                  <1> 		inc esi
  2633 00002424 43                  <1> 		inc ebx
  2634 00002425 EBF3                <1> 		jmp nameindex
  2635                              <1> 	nameindexdone:
  2636 00002427 43                  <1> 		inc ebx
  2637 00002428 66C7030000          <1> 		mov word [ebx], 0
  2638 0000242D 81C302000000        <1> 		add ebx, 2
  2639 00002433 46                  <1> 		inc esi
  2640 00002434 8933                <1> 		mov [ebx], esi
  2641 00002436 81C304000000        <1> 		add ebx, 4
  2642 0000243C 66C7030000          <1> 		mov word [ebx], 0
  2643 00002441 81C302000000        <1> 		add ebx, 2
  2644 00002447 81FB[00150000]      <1> 		cmp ebx, fileindexend
  2645 0000244D 7308                <1> 		jae indexloopdone
  2646 0000244F 81C601000000        <1> 		add esi, 1
  2647 00002455 EB88                <1> 		jmp indexloop
  2648 00002457 C605[5F240000]01    <1> indexloopdone: 	mov byte [indexdone], 1
  2649 0000245E C3                  <1> 		ret
  2650                              <1> 
  2651 0000245F 00                  <1> indexdone db 0
  2652                              <1> 
  2653                              <1> 
  2654                              <1> ;db 5,4,"showindex",0
  2655                              <1> ;	mov esi, fileindex
  2656                              <1> ;	mov ebx, fileindexend
  2657                              <1> ;	mov cl, 5
  2658                              <1> ;	mov ch, 4
  2659                              <1> ;	call array
  2660                              <1> ;	mov esi, fileindex
  2661                              <1> ;	mov ebx, fileindexend
  2662                              <1> ;	mov cl, 6
  2663                              <1> ;	mov ch, 4
  2664                              <1> ;	call array
  2665                              <1> ;	mov esi, fileindex
  2666                              <1> ;	mov ebx, fileindexend
  2667                              <1> ;	mov cl, 7
  2668                              <1> ;	mov ch, 4
  2669                              <1> ;	call array
  2670                              <1> ;	jmp nwcmd
  2671                              <1> 
  2672 00002460 05046C7300          <1> db 5,4,"ls",0
  2673 00002465 BE[CA230000]        <1> 	lscmd:	mov esi, progstart
  2674 0000246A BB[3D340000]        <1> 		mov ebx, progend
  2675 0000246F E9D1FAFFFF          <1> 		jmp dir
  2676                              <1> 		
  2677 00002474 05046469736B00      <1> db 5,4,"disk",0
  2678 0000247B B900000000          <1> 		mov ecx, 0
  2679 00002480 8A0D[87010000]      <1> 		mov cl, [DriveNumber]
  2680 00002486 C605[E4210000]00    <1> 		mov byte [firsthexshown], 0
  2681 0000248D E867FDFFFF          <1> 		call showhex
  2682 00002492 BE[5A5F0000]        <1> 		mov esi, line
  2683 00002497 E80FF3FFFF          <1> 		call print
  2684 0000249C BE[AA5E0000]        <1> 		mov esi, diskfileindex
  2685                              <1> 	diskindexdir:
  2686 000024A1 E805F3FFFF          <1> 		call print
  2687 000024A6 8B4E05              <1> 		mov ecx, [esi + 5]
  2688 000024A9 C605[E4210000]03    <1> 		mov byte [firsthexshown], 3
  2689 000024B0 E8E9FDFFFF          <1> 		call showdec
  2690 000024B5 56                  <1> 		push esi
  2691 000024B6 BE[5A5F0000]        <1> 		mov esi, line
  2692 000024BB E8EBF2FFFF          <1> 		call print
  2693 000024C0 5E                  <1> 		pop esi
  2694 000024C1 81C609000000        <1> 		add esi, 9
  2695 000024C7 81FE[1C5F0000]      <1> 		cmp esi, enddiskfileindex
  2696 000024CD 72D2                <1> 		jb diskindexdir
  2697 000024CF E938F8FFFF          <1> 		jmp nwcmd
  2698                              <1> 
  2699 000024D4 0504636C65617200    <1> db 5,4,"clear",0
  2700 000024DC E8BBF5FFFF          <1> 	cls:	call clear
  2701 000024E1 E926F8FFFF          <1> 		jmp nwcmd
  2702                              <1> 		
  2703 000024E6 05047761697400      <1> db 5,4,"wait",0
  2704 000024ED B000                <1> 		mov al, 0
  2705 000024EF E871F2FFFF          <1> 		call int302
  2706 000024F4 E913F8FFFF          <1> 		jmp nwcmd
  2707                              <1> 
  2708 000024F9 05046563686F00      <1> db 5,4,"echo",0
  2709 00002500 BE[7A1B0000]        <1> 	echo:	mov esi, buftxt
  2710 00002505 81C605000000        <1> 		add esi, 5
  2711 0000250B 8A06                <1> 		mov al, [esi]
  2712                              <1> 		;cmp al, '$'
  2713                              <1> 		;je echovr		;;now unnecessary
  2714 0000250D E899F2FFFF          <1> 		call print
  2715 00002512 BE[5A5F0000]        <1> 		mov esi, line
  2716 00002517 E88FF2FFFF          <1> 		call print
  2717 0000251C E9EBF7FFFF          <1> 		jmp nwcmd
  2718 00002521 BB[6F150000]        <1> 	echovr:	mov ebx, variables
  2719 00002526 BF06000000          <1> 		mov edi, 6
  2720 0000252B E83A000000          <1> 		call nxtvrech
  2721 00002530 E952000000          <1> 		jmp prntvr2
  2722 00002535 B13D                <1> 	echvar:	mov cl, '='
  2723 00002537 43                  <1> 		inc ebx
  2724 00002538 8A03                <1> 		mov al, [ebx]
  2725 0000253A 3C00                <1> 		cmp al, 0
  2726 0000253C 742C                <1> 		je nxtvrech
  2727 0000253E 3C3D                <1> 		cmp al, '='
  2728 00002540 7420                <1> 		je nxtvrechb1
  2729 00002542 BE[7A1B0000]        <1> 		mov esi, buftxt
  2730 00002547 01FE                <1> 		add esi, edi
  2731 00002549 E8D7F9FFFF          <1> 		call cndtest
  2732 0000254E 3C02                <1> 		cmp al, 2
  2733 00002550 7431                <1> 		je prntvr
  2734 00002552 3C01                <1> 		cmp al, 1
  2735 00002554 742D                <1> 		je prntvr
  2736 00002556 BE[7A1B0000]        <1> 		mov esi, buftxt
  2737 0000255B 01FE                <1> 		add esi, edi
  2738 0000255D E908000000          <1> 		jmp nxtvrech
  2739                              <1> 	nxtvrechb1:
  2740 00002562 81EB02000000        <1> 		sub ebx, 2
  2741 00002568 EBCB                <1> 		jmp echvar
  2742 0000256A 8A03                <1> 	nxtvrech: mov al, [ebx]
  2743 0000256C 3C05                <1> 		cmp al, 5
  2744 0000256E 740A                <1> 		je nxtvrec2
  2745 00002570 43                  <1> 		inc ebx
  2746 00002571 81FB[6F1A0000]      <1> 		cmp ebx, varend
  2747 00002577 72F1                <1> 		jb nxtvrech
  2748 00002579 C3                  <1> 		ret
  2749 0000257A 43                  <1> 	nxtvrec2: inc ebx
  2750 0000257B 8A03                <1> 		mov al, [ebx]
  2751 0000257D 3C04                <1> 		cmp al, 4
  2752 0000257F 74B4                <1> 		je echvar
  2753 00002581 EBE7                <1> 		jmp nxtvrech
  2754 00002583 43                  <1> 	prntvr: inc ebx
  2755 00002584 89DE                <1> 		mov esi, ebx
  2756 00002586 C3                  <1> 		ret
  2757 00002587 E81FF2FFFF          <1> 	prntvr2: call print
  2758 0000258C BE[5A5F0000]        <1> 		mov esi, line
  2759 00002591 E815F2FFFF          <1> 		call print
  2760 00002596 E971F7FFFF          <1> 		jmp nwcmd
  2761                              <1> 		
  2762                              <1> 
  2763 0000259B 05042300            <1> db 5,4,"#",0
  2764                              <1> 	num:	
  2765 0000259F E8AEFAFFFF          <1> 		call clearbuffer
  2766 000025A4 C605[33280000]00    <1> 		mov byte [decimal], 0
  2767 000025AB C605[34280000]00    <1> 		mov byte [decimal2], 0
  2768 000025B2 BE[7A1B0000]        <1> 		mov esi, buftxt
  2769 000025B7 B800000000          <1> 		mov eax, 0
  2770 000025BC B900000000          <1> 		mov ecx, 0
  2771 000025C1 BB00000000          <1> 		mov ebx, 0
  2772 000025C6 8A06                <1> 	num2:	mov al, [esi]
  2773 000025C8 3C2B                <1> 		cmp al, '+'
  2774 000025CA 741B                <1> 		je operatorfound
  2775 000025CC 3C2D                <1> 		cmp al, '-'
  2776 000025CE 7417                <1> 		je operatorfound
  2777 000025D0 3C2A                <1> 		cmp al, '*'
  2778 000025D2 7413                <1> 		je operatorfound
  2779 000025D4 3C2F                <1> 		cmp al, '/'
  2780 000025D6 740F                <1> 		je operatorfound
  2781 000025D8 3C5E                <1> 		cmp al, '^'
  2782 000025DA 740B                <1> 		je operatorfound
  2783 000025DC 46                  <1> 		inc esi
  2784 000025DD 3C00                <1> 		cmp al, 0
  2785 000025DF 0F8427F7FFFF        <1> 		je near nwcmd
  2786 000025E5 EBDF                <1> 		jmp num2
  2787 000025E7 50                  <1> 	operatorfound: push eax
  2788 000025E8 B400                <1> 		mov ah, 0
  2789 000025EA 8826                <1> 		mov [esi], ah
  2790 000025EC 89F7                <1> 		mov edi, esi
  2791 000025EE 46                  <1> 		inc esi
  2792 000025EF 8A06                <1> 		mov al, [esi]
  2793                              <1> 		;cmp al, '$'
  2794                              <1> 		;je near varnum1	;;unnecessary
  2795 000025F1 3C25                <1> 		cmp al, '%'
  2796 000025F3 0F8461000000        <1> 		je near resultnum1
  2797                              <1> 	varnum2: 
  2798 000025F9 57                  <1> 		push edi
  2799 000025FA E8A3000000          <1> 		call checkdecimal
  2800 000025FF 5F                  <1> 		pop edi
  2801 00002600 E833FDFFFF          <1> 		call cnvrttxt
  2802                              <1> 	vrnm2:
  2803 00002605 89CB                <1> 		mov ebx, ecx
  2804 00002607 53                  <1> 		push ebx
  2805 00002608 E845FAFFFF          <1> 		call clearbuffer
  2806 0000260D BE[7A1B0000]        <1> 		mov esi, buftxt
  2807 00002612 89F7                <1> 		mov edi, esi
  2808 00002614 46                  <1> 		inc esi
  2809 00002615 8A06                <1> 		mov al, [esi]
  2810                              <1> 		;cmp al, '$'
  2811                              <1> 		;je near varnum3	;;unnecessary
  2812 00002617 3C25                <1> 		cmp al, '%'
  2813 00002619 0F844F000000        <1> 		je near resultnum2
  2814                              <1> 	varnum4: 
  2815 0000261F 57                  <1> 		push edi
  2816 00002620 E869000000          <1> 		call checkdecimal2
  2817 00002625 5F                  <1> 		pop edi
  2818 00002626 E80DFDFFFF          <1> 		call cnvrttxt
  2819                              <1> 	vrnm4:
  2820 0000262B 5B                  <1> 		pop ebx
  2821 0000262C 58                  <1> 		pop eax
  2822 0000262D 3C2B                <1> 		cmp al, '+'
  2823 0000262F 0F849B000000        <1> 		je near plusnum
  2824 00002635 3C2D                <1> 		cmp al, '-'
  2825 00002637 0F849F000000        <1> 		je near subnum
  2826 0000263D 3C2A                <1> 		cmp al, '*'
  2827 0000263F 0F84A3000000        <1> 		je near mulnum
  2828 00002645 3C2F                <1> 		cmp al, '/'
  2829 00002647 0F84B1000000        <1> 		je near divnum
  2830 0000264D 3C5E                <1> 		cmp al, '^'
  2831 0000264F 0F84CF000000        <1> 		je near expnum
  2832 00002655 E9B2F6FFFF          <1> 		jmp nwcmd
  2833                              <1> 	resultnum1:
  2834 0000265A 8A0D[35280000]      <1> 		mov cl, [decimalresult]
  2835 00002660 880D[33280000]      <1> 		mov [decimal], cl
  2836 00002666 8B0D[36280000]      <1> 		mov ecx, [result]
  2837 0000266C EB97                <1> 		jmp vrnm2
  2838                              <1> 	resultnum2:
  2839 0000266E 8A0D[33280000]      <1> 		mov cl, [decimal]
  2840 00002674 880D[34280000]      <1> 		mov [decimal2], cl
  2841 0000267A 8A0D[35280000]      <1> 		mov cl, [decimalresult]
  2842 00002680 880D[33280000]      <1> 		mov [decimal], cl
  2843 00002686 8B0D[36280000]      <1> 		mov ecx, [result]
  2844 0000268C EB9D                <1> 		jmp vrnm4
  2845                              <1> ;	varnum1: sub esi, buftxt
  2846                              <1> ;		mov edi, esi
  2847                              <1> ;		add esi, buftxt
  2848                              <1> ;		inc edi
  2849                              <1> ;		mov ebx, variables
  2850                              <1> ;		call nxtvrech
  2851                              <1> ;		mov edi, esi
  2852                              <1> ;		dec edi
  2853                              <1> ;		jmp varnum2
  2854                              <1> ;	varnum3: sub esi, buftxt
  2855                              <1> ;		mov edi, esi
  2856                              <1> ;		add esi, buftxt
  2857                              <1> ;		inc edi
  2858                              <1> ;		mov ebx, variables
  2859                              <1> ;		call nxtvrech
  2860                              <1> ;		mov edi, esi
  2861                              <1> ;		dec edi
  2862                              <1> ;		jmp varnum4
  2863                              <1> 	checkdecimal2:
  2864 0000268E 8A25[33280000]      <1> 		mov ah, [decimal]
  2865 00002694 8825[34280000]      <1> 		mov [decimal2], ah
  2866 0000269A B400                <1> 		mov ah, 0
  2867 0000269C 8825[33280000]      <1> 		mov [decimal], ah
  2868                              <1> 	checkdecimal:
  2869 000026A2 89F7                <1> 		mov edi, esi
  2870                              <1> 	chkdec1:
  2871 000026A4 8A07                <1> 		mov al, [edi]
  2872 000026A6 3C2E                <1> 		cmp al, '.'
  2873 000026A8 0F840B000000        <1> 		je near fnddec
  2874 000026AE 3C00                <1> 		cmp al, 0
  2875 000026B0 0F8419000000        <1> 		je near nodecimal
  2876 000026B6 47                  <1> 		inc edi
  2877 000026B7 EBEB                <1> 		jmp chkdec1
  2878                              <1> 	fnddec:
  2879 000026B9 8A4701              <1> 		mov al, [edi + 1]
  2880 000026BC 8807                <1> 		mov [edi], al
  2881 000026BE 3C00                <1> 		cmp al, 0
  2882 000026C0 0F8409000000        <1> 		je near nodecimal
  2883 000026C6 FE05[33280000]      <1> 		inc byte [decimal]
  2884 000026CC 47                  <1> 		inc edi
  2885 000026CD EBEA                <1> 		jmp fnddec
  2886                              <1> 	nodecimal:
  2887 000026CF C3                  <1> 		ret
  2888                              <1> 	plusnum:
  2889 000026D0 E81C010000          <1> 		call decaddfix
  2890 000026D5 01D9                <1> 		add ecx, ebx
  2891 000026D7 E991000000          <1> 		jmp retnum
  2892                              <1> 	subnum:
  2893 000026DC E810010000          <1> 		call decaddfix
  2894 000026E1 29D9                <1> 		sub ecx, ebx
  2895 000026E3 E985000000          <1> 		jmp retnum
  2896                              <1> 	mulnum:
  2897 000026E8 A0[34280000]        <1> 		mov al, [decimal2]
  2898 000026ED 0005[33280000]      <1> 		add [decimal], al
  2899 000026F3 89C8                <1> 		mov eax, ecx
  2900 000026F5 F7E3                <1> 		mul ebx
  2901 000026F7 89C1                <1> 		mov ecx, eax
  2902 000026F9 E96F000000          <1> 		jmp retnum
  2903                              <1> 	divnum:
  2904 000026FE E8EE000000          <1> 		call decaddfix
  2905 00002703 B000                <1> 		mov al, 0
  2906 00002705 A2[33280000]        <1> 		mov [decimal], al
  2907 0000270A 6689C8              <1> 		mov ax, cx
  2908 0000270D 80FB00              <1> 		cmp bl, 0
  2909 00002710 0F8457000000        <1> 		je near retnum
  2910 00002716 F6F3                <1> 		div bl
  2911 00002718 B900000000          <1> 		mov ecx, 0
  2912 0000271D 88C1                <1> 		mov cl, al
  2913 0000271F E949000000          <1> 		jmp retnum
  2914                              <1> 	expnum:
  2915 00002724 8A15[33280000]      <1> 		mov dl, [decimal]
  2916 0000272A 8815[34280000]      <1> 		mov [decimal2], dl
  2917 00002730 BA00000000          <1> 		mov edx, 0
  2918 00002735 89C8                <1> 		mov eax, ecx
  2919 00002737 89D9                <1> 		mov ecx, ebx
  2920 00002739 89C3                <1> 		mov ebx, eax
  2921 0000273B 81F900000000        <1> 		cmp ecx, 0
  2922 00002741 7425                <1> 		je noexpnum
  2923 00002743 49                  <1> 		dec ecx
  2924 00002744 81F900000000        <1> 		cmp ecx, 0
  2925 0000274A 7415                <1> 		je noexpnumlp
  2926 0000274C F7E3                <1> 	expnumlp: mul ebx
  2927 0000274E 8A15[34280000]      <1> 		mov dl, [decimal2]
  2928 00002754 0015[33280000]      <1> 		add [decimal], dl
  2929 0000275A BA00000000          <1> 		mov edx, 0
  2930 0000275F E2EB                <1> 		loop expnumlp
  2931                              <1> 	noexpnumlp:
  2932 00002761 89C1                <1> 		mov ecx, eax
  2933 00002763 E905000000          <1> 		jmp retnum
  2934                              <1> 	noexpnum:
  2935 00002768 B901000000          <1> 		mov ecx, 1
  2936                              <1> 	retnum: 
  2937 0000276D BE[8E1D0000]        <1> 		mov esi, numbuf
  2938 00002772 890D[36280000]      <1> 		mov [result], ecx
  2939 00002778 E8EAF8FFFF          <1> 		call convert
  2940 0000277D BE[8E1D0000]        <1> 		mov esi, numbuf
  2941 00002782 8A25[33280000]      <1> 		mov ah, [decimal]
  2942 00002788 8825[35280000]      <1> 		mov [decimalresult], ah
  2943 0000278E 80FC00              <1> 		cmp ah, 0
  2944 00002791 0F8425000000        <1> 		je near noputdecimal
  2945                              <1> 	putdecimal:
  2946 00002797 4E                  <1> 		dec esi
  2947 00002798 FECC                <1> 		dec ah
  2948 0000279A 80FC00              <1> 		cmp ah, 0
  2949 0000279D 0F87F4FFFFFF        <1> 		ja near putdecimal
  2950 000027A3 4E                  <1> 		dec esi
  2951 000027A4 8A06                <1> 		mov al, [esi]
  2952 000027A6 C6062E              <1> 		mov byte [esi], '.'
  2953                              <1> 	decputloop:
  2954 000027A9 4E                  <1> 		dec esi
  2955 000027AA 8A26                <1> 		mov ah, [esi]
  2956 000027AC 8806                <1> 		mov [esi], al
  2957 000027AE 88E0                <1> 		mov al, ah
  2958 000027B0 81FE[7A1D0000]      <1> 		cmp esi, buf2
  2959 000027B6 0F87EDFFFFFF        <1> 		ja near decputloop
  2960                              <1> 	noputdecimal:
  2961 000027BC BE[7A1D0000]        <1> 		mov esi, buf2
  2962 000027C1 E809000000          <1> 		call chkadd
  2963 000027C6 E941F5FFFF          <1> 		jmp nwcmd
  2964 000027CB 00000000            <1> edxnumbuf dw 0,0
  2965 000027CF 8A06                <1> 	chkadd: mov al, [esi]
  2966 000027D1 3C30                <1> 		cmp al, '0'
  2967 000027D3 750C                <1> 		jne dnadd
  2968 000027D5 46                  <1> 		inc esi
  2969 000027D6 81FE[8E1D0000]      <1> 		cmp esi, numbuf
  2970 000027DC 7402                <1> 		je dnaddm1
  2971 000027DE EBEF                <1> 		jmp chkadd
  2972 000027E0 4E                  <1> 	dnaddm1: dec esi
  2973 000027E1 E8C5EFFFFF          <1> 	dnadd:	call print
  2974 000027E6 BE[5A5F0000]        <1> 		mov esi, line
  2975 000027EB E8BBEFFFFF          <1> 		call print
  2976 000027F0 C3                  <1> 		ret
  2977                              <1> 		
  2978                              <1> 	decaddfix:
  2979 000027F1 A0[34280000]        <1> 		mov al, [decimal2]
  2980 000027F6 8A25[33280000]      <1> 		mov ah, [decimal]
  2981 000027FC 38E0                <1> 		cmp al, ah
  2982 000027FE 7432                <1> 		je gooddecadd
  2983 00002800 38E0                <1> 		cmp al, ah
  2984 00002802 721A                <1> 		jb lowdecadd
  2985                              <1> 	highdecadd:
  2986 00002804 FEC4                <1> 		inc ah
  2987 00002806 89CA                <1> 		mov edx, ecx
  2988 00002808 C1E103              <1> 		shl ecx, 3
  2989 0000280B 01D1                <1> 		add ecx, edx
  2990 0000280D 01D1                <1> 		add ecx, edx
  2991 0000280F 38E0                <1> 		cmp al, ah
  2992 00002811 77F1                <1> 		ja highdecadd
  2993 00002813 8825[33280000]      <1> 		mov [decimal], ah
  2994 00002819 E914000000          <1> 		jmp gooddecadd
  2995                              <1> 	lowdecadd:
  2996 0000281E FEC0                <1> 		inc al
  2997 00002820 89DA                <1> 		mov edx, ebx
  2998 00002822 C1E303              <1> 		shl ebx, 3
  2999 00002825 01D3                <1> 		add ebx, edx
  3000 00002827 01D3                <1> 		add ebx, edx
  3001 00002829 38E0                <1> 		cmp al, ah
  3002 0000282B 72F1                <1> 		jb lowdecadd
  3003 0000282D A2[33280000]        <1> 		mov [decimal], al
  3004                              <1> 	gooddecadd:
  3005 00002832 C3                  <1> 		ret
  3006                              <1> 		
  3007 00002833 00                  <1> decimal db 0
  3008 00002834 00                  <1> decimal2 db 0
  3009 00002835 00                  <1> decimalresult db 0
  3010 00002836 00000000            <1> result db 0,0,0,0
  3011                              <1> 	
  3012 0000283A 05042500            <1> db 5,4,"%",0
  3013 0000283E E80FF8FFFF          <1> 	ans:	call clearbuffer
  3014 00002843 8B0D[36280000]      <1> 		mov ecx, [result]
  3015 00002849 BE[7A1D0000]        <1> 		mov esi, buf2
  3016 0000284E E814F8FFFF          <1> 		call convert
  3017 00002853 BE[7A1D0000]        <1> 		mov esi, buf2
  3018 00002858 E872FFFFFF          <1> 		call chkadd
  3019 0000285D E9AAF4FFFF          <1> 		jmp nwcmd
  3020                              <1> 
  3021 00002862 05042400            <1> db 5,4,"$",0
  3022 00002866 BE[7A1B0000]        <1> var: mov esi, buftxt
  3023 0000286B BB[6F150000]        <1> 	mov ebx, variables
  3024 00002870 8A06                <1> lkeq:	mov al, [esi]
  3025 00002872 3C3D                <1> 	cmp al, '='
  3026 00002874 741F                <1> 	je eqfnd	;is there an '=' sign?
  3027 00002876 3C00                <1> 	cmp al, 0
  3028 00002878 7403                <1> 	je echovars
  3029 0000287A 46                  <1> 	inc esi
  3030 0000287B EBF3                <1> 	jmp lkeq
  3031 0000287D BE[6F150000]        <1> echovars: mov esi, variables
  3032 00002882 BB[6F1A0000]        <1> 	mov ebx, varend
  3033 00002887 B105                <1> 	mov cl, 5
  3034 00002889 B504                <1> 	mov ch, 4
  3035 0000288B E861F7FFFF          <1> 	call array
  3036 00002890 E977F4FFFF          <1> 	jmp nwcmd
  3037 00002895 46                  <1> eqfnd:	inc esi
  3038 00002896 8A06                <1> 	mov al, [esi]
  3039 00002898 3C00                <1> 	cmp al, 0
  3040 0000289A 740F                <1> 	je readvar
  3041 0000289C BE[7A1B0000]        <1> 	mov esi, buftxt
  3042 000028A1 BB[6F150000]        <1> 	mov ebx, variables
  3043 000028A6 E91E000000          <1> 	jmp seek
  3044                              <1> readvar:
  3045 000028AB B00D                <1> 	mov al, 13
  3046 000028AD 66BB0700            <1> 	mov bx, 7
  3047 000028B1 C605[FB170000]00    <1> 	mov byte [commandedit], 0
  3048 000028B8 E847EFFFFF          <1> 	call int305
  3049 000028BD BE[5A5F0000]        <1> 	mov esi, line
  3050 000028C2 E8E4EEFFFF          <1> 	call print
  3051 000028C7 EB9D                <1> 	jmp var
  3052 000028C9 668B03              <1> seek:	mov ax, [ebx]
  3053 000028CC B105                <1> 	mov cl, 5
  3054 000028CE B504                <1> 	mov ch, 4
  3055 000028D0 663D0000            <1> 	cmp ax, 0
  3056 000028D4 0F8459000000        <1> 	je near save
  3057 000028DA 6639C8              <1> 	cmp ax, cx
  3058 000028DD 7403                <1> 	je skfnd
  3059 000028DF 43                  <1> 	inc ebx
  3060 000028E0 EBE7                <1> 	jmp seek
  3061 000028E2 BE[7A1B0000]        <1> skfnd:	mov esi, buftxt
  3062 000028E7 46                  <1> 	inc esi
  3063 000028E8 81C302000000        <1> 	add ebx, 2
  3064 000028EE 89DF                <1> 	mov edi, ebx
  3065 000028F0 B13D                <1> 	mov cl, '='
  3066 000028F2 E82EF6FFFF          <1> 	call cndtest
  3067 000028F7 3C01                <1> 	cmp al, 1	
  3068 000028F9 7417                <1> 	je varfnd
  3069 000028FB 89FB                <1> 	mov ebx, edi
  3070 000028FD BE[7A1B0000]        <1> 	mov esi, buftxt
  3071 00002902 668B03              <1> 	mov ax, [ebx]
  3072 00002905 663D0000            <1> 	cmp ax, 0
  3073 00002909 0F8424000000        <1> 	je near save
  3074 0000290F 43                  <1> 	inc ebx
  3075 00002910 EBB7                <1> 	jmp seek
  3076 00002912 8A03                <1> varfnd:	mov al, [ebx]
  3077 00002914 3C04                <1> 	cmp al, 4
  3078 00002916 7404                <1> 	je save2
  3079 00002918 4B                  <1> 	dec ebx
  3080 00002919 4E                  <1> 	dec esi
  3081 0000291A EBF6                <1> 	jmp varfnd
  3082 0000291C 4B                  <1> save2:	dec ebx
  3083 0000291D 4E                  <1> 	dec esi
  3084 0000291E 8A03                <1> 	mov al, [ebx]
  3085 00002920 3C05                <1> 	cmp al, 5
  3086 00002922 7402                <1> 	je remove
  3087 00002924 EBEC                <1> 	jmp varfnd
  3088 00002926 8A03                <1> remove: mov al, [ebx]
  3089 00002928 3C00                <1> 	cmp al, 0
  3090 0000292A 749D                <1> 	je seek
  3091 0000292C B000                <1> 	mov al, 0
  3092 0000292E 8803                <1> 	mov [ebx], al
  3093 00002930 43                  <1> 	inc ebx
  3094 00002931 EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  3095 00002933 BE[7A1B0000]        <1> save:	mov esi, buftxt
  3096 00002938 43                  <1> 	inc ebx
  3097 00002939 B005                <1> 	mov al, 5
  3098 0000293B B404                <1> 	mov ah, 4
  3099 0000293D 668903              <1> 	mov [ebx], ax
  3100 00002940 43                  <1> 	inc ebx
  3101 00002941 43                  <1> svhere:	inc ebx
  3102 00002942 46                  <1> 	inc esi
  3103 00002943 8A06                <1> 	mov al, [esi]
  3104 00002945 3C00                <1> 	cmp al, 0
  3105 00002947 0F8442000000        <1> 	je near svdone
  3106 0000294D 3C25                <1> 	cmp al, '%'
  3107 0000294F 7404                <1> 	je ans2
  3108 00002951 8803                <1> 	mov [ebx], al	
  3109 00002953 EBEC                <1> 	jmp svhere
  3110 00002955 56                  <1> ans2:	push esi
  3111 00002956 BE[7A1D0000]        <1> 	mov esi, buf2
  3112 0000295B E823000000          <1> 	call ansfnd
  3113 00002960 E803000000          <1> 	call anscp
  3114 00002965 5E                  <1> 	pop esi
  3115 00002966 EBD9                <1> 	jmp svhere
  3116 00002968 8A06                <1> anscp:	mov al, [esi]
  3117 0000296A 8803                <1> 	mov [ebx], al
  3118 0000296C 81FE[8E1D0000]      <1> 	cmp esi, numbuf
  3119 00002972 74CD                <1> 	je svhere
  3120 00002974 3C00                <1> 	cmp al, 0
  3121 00002976 74C9                <1> 	je svhere
  3122 00002978 43                  <1> 	inc ebx
  3123 00002979 46                  <1> 	inc esi
  3124 0000297A EBEC                <1> 	jmp anscp
  3125 0000297C 5E                  <1> ansnf:	pop esi
  3126 0000297D 8A06                <1> 	mov al, [esi]
  3127 0000297F 8803                <1> 	mov [ebx], al
  3128 00002981 EBBE                <1> 	jmp svhere
  3129 00002983 46                  <1> ansfnd:	inc esi
  3130 00002984 8A06                <1> 	mov al, [esi]
  3131 00002986 3C00                <1> 	cmp al, 0
  3132 00002988 74F2                <1> 	je ansnf
  3133 0000298A 3C30                <1> 	cmp al, '0'
  3134 0000298C 74F5                <1> 	je ansfnd
  3135 0000298E C3                  <1> 	ret
  3136 0000298F B000                <1> svdone:	mov al, 0
  3137 00002991 8803                <1> 	mov [ebx], al
  3138 00002993 E974F3FFFF          <1> 	jmp nwcmd
  3139                              <1> 	
  3140 00002998 05046C6F676F757400  <1> 	db 5,4,"logout",0
  3141                              <1> logout:
  3142 000029A1 E94AF2FFFF          <1> 	jmp os
  3143                              <1> 	
  3144 000029A6 05047265626F6F7400  <1> 	db 5,4,"reboot",0
  3145                              <1> rebootcomp:
  3146 000029AF E9A4D8FFFF          <1> 	jmp coldboot
  3147                              <1> 
  3148 000029B4 050473687574646F77- <1> 	db 5,4,"shutdown",0
  3149 000029BD 6E00                <1>
  3150                              <1> shutdowncomp:
  3151 000029BF E96AD8FFFF          <1> 	jmp shutdown
  3152                              <1> 	
  3153 000029C4 05042E2F00          <1> 	db 5,4,"./",0
  3154                              <1> rundiskprog:
  3155 000029C9 BF[7A1B0000]        <1> 	mov edi, buftxt
  3156 000029CE 81C702000000        <1> 	add edi, 2
  3157 000029D4 BE00004000          <1> 	mov esi, 0x400000
  3158 000029D9 E8642C0000          <1> 	call loadfile
  3159 000029DE 81FA94010000        <1> 	cmp edx, 404
  3160 000029E4 7421                <1> 	je noprogfound
  3161 000029E6 BB00004000          <1> 	mov ebx, 0x400000
  3162 000029EB 66813B4558          <1> 	cmp word [ebx], "EX"
  3163 000029F0 753E                <1> 	jne progbatchfound
  3164 000029F2 81C302000000        <1> 	add ebx, 2
  3165 000029F8 BF[7A1B0000]        <1> 	mov edi, buftxt
  3166 000029FD 81C702000000        <1> 	add edi, 2
  3167 00002A03 57                  <1> 	push edi	;;give the program the commands it receives
  3168 00002A04 90                  <1> 	nop
  3169 00002A05 FFE3                <1> 	jmp ebx
  3170                              <1> noprogfound:
  3171 00002A07 BE[215F0000]        <1> 	mov esi, notfound1
  3172 00002A0C E89AEDFFFF          <1> 	call print
  3173 00002A11 BE[7A1B0000]        <1> 	mov esi, buftxt
  3174 00002A16 81C602000000        <1> 	add esi, 2
  3175 00002A1C E88AEDFFFF          <1> 	call print
  3176 00002A21 BE[2B5F0000]        <1> 	mov esi, notfound2
  3177 00002A26 E880EDFFFF          <1> 	call print
  3178 00002A2B E9DCF2FFFF          <1> 	jmp nwcmd
  3179                              <1> progbatchfound:
  3180 00002A30 BF00004000          <1> 		mov edi, 0x400000
  3181 00002A35 C605[69150000]01    <1> 		mov byte [BATCHISON], 1
  3182                              <1> 	batchrunloop:
  3183 00002A3C E89EF2FFFF          <1> 		call buftxtclear
  3184 00002A41 BE[7A1B0000]        <1> 		mov esi, buftxt
  3185                              <1> 	batchrunloop2:
  3186 00002A46 B10D                <1> 		mov cl, 13
  3187 00002A48 B50A                <1> 		mov ch, 10
  3188 00002A4A 66390F              <1> 		cmp [edi], cx
  3189 00002A4D 0F841E000000        <1> 		je near nxtbatchrunline
  3190 00002A53 66C1C108            <1> 		rol cx, 8
  3191 00002A57 66390F              <1> 		cmp [edi], cx
  3192 00002A5A 0F8411000000        <1> 		je near nxtbatchrunline
  3193 00002A60 803F00              <1> 		cmp byte [edi], 0
  3194 00002A63 0F8408000000        <1> 		je near nxtbatchrunline
  3195 00002A69 8A07                <1> 		mov al, [edi]
  3196 00002A6B 8806                <1> 		mov [esi], al
  3197 00002A6D 46                  <1> 		inc esi
  3198 00002A6E 47                  <1> 		inc edi
  3199 00002A6F EBD5                <1> 		jmp batchrunloop2
  3200                              <1> 	nxtbatchrunline:
  3201 00002A71 81C702000000        <1> 		add edi, 2
  3202 00002A77 893D[D62A0000]      <1> 		mov [batchedi], edi
  3203 00002A7D C60600              <1> 		mov byte [esi], 0
  3204 00002A80 BE[7A1B0000]        <1> 		mov esi, buftxt
  3205 00002A85 803E00              <1> 		cmp byte [esi], 0
  3206 00002A88 0F843C000000        <1> 		je near nobatchfoundrun
  3207 00002A8E BB00000000          <1> 		mov ebx, 0
  3208 00002A93 8A1D[00150000]      <1> 		mov bl, [IFON]
  3209 00002A99 80FB01              <1> 		cmp bl, 1
  3210 00002A9C 0F8338000000        <1> 		jae near iftestbatch
  3211                              <1> 	doneiftest:
  3212 00002AA2 803D[9D2B0000]00    <1> 		cmp byte [runnextline], 0
  3213 00002AA9 0F8405000000        <1> 		je near noruniftest
  3214 00002AAF E8BEF3FFFF          <1> 		call progtest
  3215                              <1> 	noruniftest:
  3216 00002AB4 C605[9D2B0000]01    <1> 		mov byte [runnextline], 1
  3217 00002ABB 8B3D[D62A0000]      <1> 		mov edi, [batchedi]
  3218 00002AC1 803F00              <1> 		cmp byte [edi], 0
  3219 00002AC4 0F8572FFFFFF        <1> 		jne near batchrunloop
  3220                              <1> 	nobatchfoundrun:
  3221 00002ACA C605[69150000]00    <1> 		mov byte [BATCHISON], 0
  3222 00002AD1 E936F2FFFF          <1> 		jmp nwcmd
  3223                              <1> 	
  3224 00002AD6 00000000            <1> batchedi dd 0	
  3225                              <1> 	
  3226                              <1> 	iftestbatch:
  3227 00002ADA BE[01150000]        <1> 		mov esi, IFTRUE
  3228 00002ADF 01DE                <1> 		add esi, ebx
  3229 00002AE1 803E00              <1> 		cmp byte [esi], 0
  3230 00002AE4 0F85B8FFFFFF        <1> 		jne near doneiftest
  3231 00002AEA 881D[9E2B0000]      <1> 		mov [iffalsebuf], bl
  3232 00002AF0 803D[6A150000]01    <1> 		cmp byte [LOOPON], 1
  3233 00002AF7 750B                <1> 		jne fifindbatch
  3234 00002AF9 8B3D[6B150000]      <1> 		mov edi, [LOOPPOS]
  3235 00002AFF E938FFFFFF          <1> 		jmp batchrunloop
  3236                              <1> 	fifindbatch:
  3237 00002B04 66B96966            <1> 		mov cx, "if"
  3238 00002B08 66B86669            <1> 		mov ax, "fi"
  3239 00002B0C 663907              <1> 		cmp [edi], ax
  3240 00002B0F 0F841A000000        <1> 		je near fifoundbatch
  3241 00002B15 66390F              <1> 		cmp [edi], cx
  3242 00002B18 0F8462000000        <1> 		je near iffoundbatch
  3243 00002B1E 803F00              <1> 		cmp byte [edi], 0
  3244 00002B21 0F8408000000        <1> 		je near fifoundbatch
  3245 00002B27 81C702000000        <1> 		add edi, 2
  3246 00002B2D EBD5                <1> 		jmp fifindbatch
  3247                              <1> 	fifoundbatch:
  3248 00002B2F 81C702000000        <1> 		add edi, 2
  3249 00002B35 B00D                <1> 		mov al, 13
  3250 00002B37 B40A                <1> 		mov ah, 10
  3251 00002B39 663907              <1> 		cmp [edi], ax
  3252 00002B3C 7414                <1> 		je goodfibatch
  3253 00002B3E 66C1C008            <1> 		rol ax, 8
  3254 00002B42 663907              <1> 		cmp [edi], ax
  3255 00002B45 740B                <1> 		je goodfibatch
  3256 00002B47 803F00              <1> 		cmp byte [edi], 0
  3257 00002B4A 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  3258 00002B50 EBB2                <1> 		jmp fifindbatch
  3259                              <1> 	goodfibatch:
  3260 00002B52 B001                <1> 		mov al, 1
  3261 00002B54 2805[00150000]      <1> 		sub [IFON], al 
  3262 00002B5A A0[00150000]        <1> 		mov al, [IFON]
  3263 00002B5F 8A1D[9E2B0000]      <1> 		mov bl, [iffalsebuf]
  3264 00002B65 38D8                <1> 		cmp al, bl
  3265 00002B67 779B                <1> 		ja fifindbatch
  3266 00002B69 BE[7A1B0000]        <1> 		mov esi, buftxt
  3267 00002B6E 81EF02000000        <1> 		sub edi, 2
  3268 00002B74 C605[9D2B0000]00    <1> 		mov byte [runnextline], 0
  3269 00002B7B E9BCFEFFFF          <1> 		jmp batchrunloop
  3270                              <1> 	iffoundbatch:
  3271 00002B80 B020                <1> 		mov al, ' '
  3272 00002B82 81C702000000        <1> 		add edi, 2
  3273 00002B88 3807                <1> 		cmp [edi], al
  3274 00002B8A 0F8574FFFFFF        <1> 		jne near fifindbatch
  3275 00002B90 B001                <1> 		mov al, 1
  3276 00002B92 0005[00150000]      <1> 		add [IFON], al
  3277 00002B98 E967FFFFFF          <1> 		jmp fifindbatch
  3278                              <1> 		
  3279                              <1> 		
  3280 00002B9D 01                  <1> runnextline db 1
  3281 00002B9E 00                  <1> iffalsebuf db 0
  3282                              <1> 
  3283 00002B9F E968F1FFFF          <1> notbatch: jmp nwcmd
  3284                              <1> 
  3285 00002BA4 05047768696C6500    <1> 	db 5,4,"while",0
  3286 00002BAC B000                <1> whilecmd:  mov al, 0
  3287 00002BAE 3805[69150000]      <1> 	cmp [BATCHISON], al
  3288 00002BB4 0F84E5FFFFFF        <1> 	je near notbatch
  3289 00002BBA 8B35[65150000]      <1> 	MOV esi, [BATCHPOS]
  3290 00002BC0 4E                  <1> whilefnd: dec esi
  3291 00002BC1 8A06                <1> 	mov al, [esi]
  3292 00002BC3 3C0A                <1> 	cmp al, 10
  3293 00002BC5 0F8412000000        <1> 	je near whilefnd2
  3294 00002BCB 3C0D                <1> 	cmp al, 13
  3295 00002BCD 0F840A000000        <1> 	je near whilefnd2
  3296 00002BD3 3C00                <1> 	cmp al, 0
  3297 00002BD5 0F8402000000        <1> 	je near whilefnd2
  3298 00002BDB EBE3                <1> 	jmp whilefnd
  3299                              <1> whilefnd2:
  3300 00002BDD 8935[6B150000]      <1> 	mov [LOOPPOS], esi
  3301 00002BE3 C605[6A150000]01    <1> 	mov BYTE [LOOPON], 1
  3302 00002BEA 0005[00150000]      <1> 	add [IFON], al
  3303 00002BF0 BE[7A1B0000]        <1> 	mov esi, buftxt
  3304 00002BF5 BB[7A1B0000]        <1> 	mov ebx, buftxt
  3305 00002BFA 81C306000000        <1> 	add ebx, 6
  3306 00002C00 E923000000          <1> 	jmp chkeqsn
  3307                              <1> 
  3308                              <1> 
  3309 00002C05 0504696600          <1> 	db 5,4,"if",0
  3310 00002C0A B000                <1> ifcmd:	mov al, 0
  3311 00002C0C 3805[69150000]      <1> 	cmp [BATCHISON], al
  3312 00002C12 0F8487FFFFFF        <1> 	je near notbatch
  3313 00002C18 BE[7A1B0000]        <1> 	mov esi, buftxt
  3314 00002C1D BB[7A1B0000]        <1> 	mov ebx, buftxt
  3315 00002C22 81C303000000        <1> 	add ebx, 3
  3316 00002C28 8A06                <1> chkeqsn: mov al, [esi]
  3317 00002C2A 3C00                <1> 	cmp al, 0
  3318 00002C2C 0F846DFFFFFF        <1> 	je near notbatch
  3319 00002C32 3C3D                <1> 	cmp al, '='
  3320 00002C34 0F8403000000        <1> 	je near chkeqdn
  3321 00002C3A 46                  <1> 	inc esi
  3322 00002C3B EBEB                <1> 	jmp chkeqsn
  3323 00002C3D B000                <1> chkeqdn: mov al, 0 
  3324 00002C3F 8806                <1> 	mov [esi], al
  3325 00002C41 46                  <1> 	inc esi
  3326 00002C42 8A06                <1> 	mov al, [esi]
  3327 00002C44 3C24                <1> 	cmp al, '$'
  3328 00002C46 0F8462000000        <1> 	je near ifvar1
  3329 00002C4C 8A03                <1> ifvar2: mov al, [ebx]
  3330 00002C4E 3C24                <1> 	cmp al, '$'
  3331 00002C50 0F847B000000        <1> 	je near ifvar3
  3332 00002C56 E890F2FFFF          <1> ifvar4:	call tester
  3333 00002C5B 3C01                <1> 	cmp al, 1
  3334 00002C5D 0F8405000000        <1> 	je near trueif
  3335 00002C63 E923000000          <1> 	jmp falseif
  3336 00002C68 B800000000          <1> trueif:	mov eax, 0
  3337 00002C6D A0[00150000]        <1> 	mov al, [IFON]
  3338 00002C72 FEC0                <1> 	inc al
  3339 00002C74 A2[00150000]        <1> 	mov [IFON], al
  3340 00002C79 B400                <1> 	mov ah, 0
  3341 00002C7B BE[01150000]        <1> 	mov esi, IFTRUE
  3342 00002C80 01C6                <1> 	add esi, eax
  3343 00002C82 B401                <1> 	mov ah, 1
  3344 00002C84 8826                <1> 	mov [esi], ah
  3345 00002C86 E981F0FFFF          <1> 	jmp nwcmd
  3346 00002C8B B800000000          <1> falseif: mov eax, 0
  3347 00002C90 A0[00150000]        <1> 	mov al, [IFON]
  3348 00002C95 FEC0                <1> 	inc al
  3349 00002C97 A2[00150000]        <1> 	mov [IFON], al
  3350 00002C9C B400                <1> 	mov ah, 0
  3351 00002C9E BE[01150000]        <1> 	mov esi, IFTRUE
  3352 00002CA3 01C6                <1> 	add esi, eax
  3353 00002CA5 B400                <1> 	mov ah, 0
  3354 00002CA7 8826                <1> 	mov [esi], ah
  3355 00002CA9 E95EF0FFFF          <1> 	jmp nwcmd
  3356 00002CAE 89F7                <1> ifvar1: mov edi, esi
  3357 00002CB0 81EF[7A1B0000]      <1> 	sub edi, buftxt
  3358 00002CB6 47                  <1> 	inc edi
  3359 00002CB7 BB[6F150000]        <1> 	mov ebx, variables
  3360 00002CBC E8A9F8FFFF          <1> 	call nxtvrech
  3361 00002CC1 BB[7A1B0000]        <1> 	mov ebx, buftxt
  3362 00002CC6 81C303000000        <1> 	add ebx, 3
  3363 00002CCC E97BFFFFFF          <1> 	jmp ifvar2
  3364 00002CD1 8935[F12C0000]      <1> ifvar3: mov [esiif], esi
  3365 00002CD7 BF04000000          <1> 	mov edi, 4
  3366 00002CDC BB[6F150000]        <1> 	mov ebx, variables
  3367 00002CE1 E884F8FFFF          <1> 	call nxtvrech
  3368 00002CE6 8B35[F12C0000]      <1> 	mov esi, [esiif]
  3369 00002CEC E965FFFFFF          <1> 	jmp ifvar4
  3370                              <1> 
  3371 00002CF1 00000000            <1> esiif dd 0
  3372                              <1> 	
  3373 00002CF5 0504656C736500      <1> 	db 5,4,"else",0
  3374 00002CFC B800000000          <1> elsecmd:	mov eax, 0
  3375 00002D01 A0[00150000]        <1> 	mov al, [IFON]
  3376 00002D06 BE[01150000]        <1> 	mov esi, IFTRUE
  3377 00002D0B 01C6                <1> 	add esi, eax
  3378 00002D0D 8A06                <1> 	mov al, [esi]
  3379 00002D0F 3C00                <1> 	cmp al, 0		
  3380 00002D11 7409                <1> 	je else1
  3381 00002D13 3C01                <1> 	cmp al, 1
  3382 00002D15 740E                <1> 	je else2
  3383 00002D17 E9F0EFFFFF          <1> 	jmp nwcmd
  3384 00002D1C B001                <1> else1:  mov al, 1
  3385 00002D1E 8806                <1> 	mov [esi], al
  3386 00002D20 E9E7EFFFFF          <1> 	jmp nwcmd
  3387 00002D25 B000                <1> else2:	mov al, 0
  3388 00002D27 8806                <1> 	mov [esi], al
  3389 00002D29 E9DEEFFFFF          <1> 	jmp nwcmd
  3390                              <1> 
  3391 00002D2E 05046C6F6F7000      <1> 	db 5,4,"loop",0
  3392 00002D35 3805[6A150000]      <1> 	cmp [LOOPON], al
  3393 00002D3B 0F8405000000        <1> 	je near filoop
  3394 00002D41 E9C6EFFFFF          <1> 	jmp nwcmd
  3395 00002D46 8B35[6B150000]      <1> filoop: mov esi, [LOOPPOS]
  3396 00002D4C 8935[65150000]      <1> 	mov [BATCHPOS], esi
  3397 00002D52 E9B5EFFFFF          <1> 	jmp nwcmd
  3398                              <1> 	
  3399                              <1> 
  3400 00002D57 0504666900          <1> 	db 5,4,"fi",0
  3401 00002D5C B000                <1> 	mov al, 0
  3402 00002D5E 3805[69150000]      <1> 	cmp [BATCHISON], al
  3403 00002D64 0F8435FEFFFF        <1> 	je near notbatch
  3404 00002D6A B001                <1> fi:	mov al, 1
  3405 00002D6C 2805[00150000]      <1> 	sub [IFON],al
  3406 00002D72 E995EFFFFF          <1> 	jmp nwcmd
  3407                              <1> 
  3408 00002D77 050473746F7000      <1> 	db 5,4,"stop",0
  3409 00002D7E B000                <1> stop:	mov al, 0
  3410 00002D80 A2[69150000]        <1> 	mov [BATCHISON], al
  3411 00002D85 A2[00150000]        <1> 	mov [IFON], al
  3412 00002D8A A2[01150000]        <1> 	mov [IFTRUE], al
  3413 00002D8F A2[6A150000]        <1> 	mov [LOOPON], al
  3414 00002D94 E973EFFFFF          <1> 	jmp nwcmd
  3415                                      %include 'source/programs.asm'
  3416                              <1> ;db 5,4,"internet",0
  3417                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  3418                              <1> 							;;^^used to^^, now tests int 30h functions		
  3419 00002D99 B403                <1> 		mov ah, 3
  3420 00002D9B CD30                <1> 		int 30h
  3421 00002D9D B401                <1> 		mov ah, 1
  3422                              <1> 		;mov esi, datmsg
  3423 00002D9F 66BB0700            <1> 		mov bx, 7
  3424 00002DA3 B000                <1> 		mov al, 0
  3425 00002DA5 CD30                <1> 		int 30h
  3426                              <1> 	    ;jmp packettest
  3427 00002DA7 E960EFFFFF          <1> 		jmp nwcmd
  3428                              <1> ;datmsg: db "Internet has not been implemented yet.",10,13,0
  3429                              <1> 	
  3430 00002DAC 050474687265616473- <1> db 5,4,"threads",0
  3431 00002DB5 00                  <1>
  3432 00002DB6 90                  <1> 	nop
  3433 00002DB7 90                  <1> 	nop
  3434 00002DB8 E9762A0000          <1> 	jmp threadstarttest
  3435 00002DBD E94AEFFFFF          <1> 	jmp nwcmd
  3436                              <1> 	
  3437 00002DC2 050472656700        <1> db 5,4,"reg",0
  3438 00002DC8 CD03                <1> 	int 3
  3439 00002DCA E93DEFFFFF          <1> 	jmp nwcmd
  3440                              <1> 	
  3441 00002DCF 0504636861726D6170- <1> db 5,4,"charmap",0
  3442 00002DD8 00                  <1>
  3443 00002DD9 B000                <1> 	mov al, 0
  3444 00002DDB 66BB0700            <1> 	mov bx, 7
  3445                              <1> charmapcopy:
  3446 00002DDF FEC0                <1> 	inc al
  3447 00002DE1 3C08                <1> 	cmp al, 8
  3448 00002DE3 7426                <1> 	je charmapnocopy
  3449 00002DE5 3C09                <1> 	cmp al, 9
  3450 00002DE7 7422                <1> 	je charmapnocopy
  3451 00002DE9 3C0A                <1> 	cmp al, 10
  3452 00002DEB 741E                <1> 	je charmapnocopy
  3453 00002DED 3C0D                <1> 	cmp al, 13
  3454 00002DEF 741A                <1> 	je charmapnocopy
  3455 00002DF1 3C00                <1> 	cmp al, 0
  3456 00002DF3 7407                <1> 	je nomorecharmap
  3457 00002DF5 E8A7E7FFFF          <1> 	call int301prnt
  3458 00002DFA EBE3                <1> 	jmp charmapcopy
  3459                              <1> nomorecharmap:
  3460 00002DFC BE[5A5F0000]        <1> 	mov esi, line
  3461 00002E01 E8A5E9FFFF          <1> 	call print
  3462 00002E06 E901EFFFFF          <1> 	jmp nwcmd
  3463                              <1> charmapnocopy:
  3464 00002E0B 6650                <1> 	push ax
  3465 00002E0D B020                <1> 	mov al, " "
  3466 00002E0F E88DE7FFFF          <1> 	call int301prnt
  3467 00002E14 6658                <1> 	pop ax
  3468 00002E16 EBC7                <1> 	jmp charmapcopy
  3469                              <1> 	
  3470 00002E18 05046B6579636F6465- <1> db 5,4,"keycode",0
  3471 00002E21 00                  <1>
  3472                              <1> keycode:
  3473 00002E22 E8BD060000          <1> 	call guistartin
  3474 00002E27 B800000000          <1> 	mov eax, 0
  3475 00002E2C B900000000          <1> 	mov ecx, 0
  3476 00002E31 8A0D[BB340000]      <1> 	mov cl, [specialkey]
  3477 00002E37 80F900              <1> 	cmp cl, 0
  3478 00002E3A 0F8405000000        <1> 	je near nospecialkeycode
  3479 00002E40 E8A0F3FFFF          <1> 	call showhexsmall
  3480                              <1> nospecialkeycode:
  3481 00002E45 66A1[62170000]      <1> 	mov ax, [lastkey]
  3482 00002E4B 80FC01              <1> 	cmp ah, 1
  3483 00002E4E 0F8409000000        <1> 	je near killkeycode
  3484 00002E54 88E1                <1> 	mov cl, ah
  3485 00002E56 E88AF3FFFF          <1> 	call showhexsmall
  3486 00002E5B EBC5                <1> 	jmp keycode
  3487                              <1> killkeycode:
  3488 00002E5D BE[5A5F0000]        <1> 	mov esi, line
  3489 00002E62 E844E9FFFF          <1> 	call print
  3490 00002E67 E9A0EEFFFF          <1> 	jmp nwcmd
  3491                              <1> 
  3492 00002E6C 050470636900        <1> db 5,4,"pci",0
  3493                              <1> 	pcishow:
  3494 00002E72 E811260000          <1> 	call pcidump
  3495 00002E77 E990EEFFFF          <1> 	jmp nwcmd
  3496                              <1> 	
  3497 00002E7C 050461727000        <1> db 5,4,"arp",0
  3498 00002E82 E8FC240000          <1> 	call arptest
  3499 00002E87 E980EEFFFF          <1> 	jmp nwcmd
  3500                              <1> 
  3501 00002E8C 0504626174636800    <1> db 5,4,"batch",0
  3502                              <1> 	batchst: 
  3503 00002E94 BF[7A1B0000]        <1> 		mov edi, buftxt
  3504 00002E99 81C706000000        <1> 		add edi, 6
  3505 00002E9F 803F00              <1> 		cmp byte [edi], 0
  3506 00002EA2 0F8473000000        <1> 		je near nonamefound
  3507 00002EA8 BE00004000          <1> 		mov esi, 0x400000
  3508 00002EAD E890270000          <1> 		call loadfile
  3509 00002EB2 89D0                <1> 		mov eax, edx
  3510 00002EB4 3D94010000          <1> 		cmp eax, 404
  3511 00002EB9 746F                <1> 		je goodbatchname
  3512 00002EBB BE[CA2E0000]        <1> 		mov esi, badbatchname
  3513 00002EC0 E8E6E8FFFF          <1> 		call print
  3514 00002EC5 E942EEFFFF          <1> 		jmp nwcmd
  3515 00002ECA 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  3516 00002ED3 20616C726561647920- <1>
  3517 00002EDC 657869737473210A0D- <1>
  3518 00002EE5 00                  <1>
  3519 00002EE6 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  3520 00002EEF 746F20747970652061- <1>
  3521 00002EF8 206E616D6520616674- <1>
  3522 00002F01 65722074686520636F- <1>
  3523 00002F0A 6D6D616E642E0A0D00  <1>
  3524 00002F13 00000000            <1> 		esicache3 dd 0
  3525 00002F17 00000000            <1> 		esicache2 dd 0
  3526                              <1> 	nonamefound:
  3527 00002F1B BE[E62E0000]        <1> 		mov esi, namenotfoundbatch
  3528 00002F20 E886E8FFFF          <1> 		call print
  3529 00002F25 E9E2EDFFFF          <1> 		jmp nwcmd
  3530                              <1> 	goodbatchname:
  3531 00002F2A BE00004000          <1> 		mov esi, 0x400000
  3532                              <1> 	batchcreate:
  3533 00002F2F 8935[132F0000]      <1> 		mov [esicache3], esi
  3534 00002F35 B00D                <1> 		mov al, 13
  3535 00002F37 B307                <1> 		mov bl, 7
  3536 00002F39 B404                <1> 		mov ah, 4
  3537 00002F3B CD30                <1> 		int 30h
  3538 00002F3D 8935[172F0000]      <1> 		mov [esicache2], esi
  3539 00002F43 8A0E                <1> 		mov cl, [esi]
  3540 00002F45 8B35[132F0000]      <1> 		mov esi, [esicache3]
  3541 00002F4B BB[A22F0000]        <1> 		mov ebx, exitword
  3542 00002F50 E8D0EFFFFF          <1> 		call cndtest
  3543 00002F55 3C01                <1> 		cmp al, 1
  3544 00002F57 7423                <1> 		je endbatchcreate
  3545 00002F59 3C02                <1> 		cmp al, 2
  3546 00002F5B 741F                <1> 		je endbatchcreate
  3547 00002F5D BE[5A5F0000]        <1> 		mov esi, line
  3548 00002F62 E844E8FFFF          <1> 		call print
  3549 00002F67 8B35[172F0000]      <1> 		mov esi, [esicache2]
  3550 00002F6D B00D                <1> 		mov al, 13
  3551 00002F6F B40A                <1> 		mov ah, 10
  3552 00002F71 668906              <1> 		mov [esi], ax
  3553 00002F74 81C602000000        <1> 		add esi, 2
  3554 00002F7A EBB3                <1> 		jmp batchcreate
  3555                              <1> 	endbatchcreate:
  3556 00002F7C 8B35[132F0000]      <1> 		mov esi, [esicache3]
  3557 00002F82 B800000000          <1> 		mov eax, 0
  3558 00002F87 8806                <1> 		mov [esi], al
  3559 00002F89 BE[5A5F0000]        <1> 		mov esi, line
  3560 00002F8E E818E8FFFF          <1> 		call print
  3561 00002F93 BE00004000          <1> 		mov esi, 0x400000
  3562 00002F98 E80EE8FFFF          <1> 		call print
  3563 00002F9D E96AEDFFFF          <1> 		jmp nwcmd
  3564                              <1> 	
  3565 00002FA2 5C7800              <1> 	exitword db "\x",0
  3566 00002FA5 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  3567 00002FAE 6F20657869742E0A0D- <1>
  3568 00002FB7 00                  <1>
  3569                              <1> 		
  3570 00002FB8 050473686F7700      <1> db 5,4,"show",0
  3571 00002FBF BF[7A1B0000]        <1> 		mov edi, buftxt
  3572 00002FC4 81C705000000        <1> 		add edi, 5
  3573 00002FCA BE00004000          <1> 		mov esi, 0x400000
  3574 00002FCF E86E260000          <1> 		call loadfile
  3575 00002FD4 BE00004000          <1> 		mov esi, 0x400000
  3576 00002FD9 66813E424D          <1> 		cmp word [esi], "BM"
  3577 00002FDE 7414                <1> 		je bmpfound
  3578 00002FE0 E8C6E7FFFF          <1> 		call print
  3579 00002FE5 BE[5A5F0000]        <1> 		mov esi, line
  3580 00002FEA E8BCE7FFFF          <1> 		call print
  3581 00002FEF E918EDFFFF          <1> 		jmp nwcmd
  3582                              <1> bmpfound:
  3583 00002FF4 803D[293C0000]00    <1> 		cmp byte [guion], 0
  3584 00002FFB 0F8452000000        <1> 		je near noguibmp
  3585 00003001 BE00004000          <1> 		mov esi, 0x400000
  3586 00003006 B900000000          <1> 		mov ecx, 0
  3587 0000300B BA00000000          <1> 		mov edx, 0
  3588 00003010 B800000000          <1> 		mov eax, 0
  3589 00003015 BB00000000          <1> 		mov ebx, 0
  3590 0000301A E8C21C0000          <1> 		call showbmp
  3591 0000301F B000                <1> 		mov al, 0
  3592 00003021 B405                <1> 		mov ah, 5
  3593 00003023 CD30                <1> 		int 30h
  3594 00003025 E8660A0000          <1> 		call guiclear
  3595 0000302A E8FB0B0000          <1> 		call clearmousecursor
  3596 0000302F E88D120000          <1> 		call reloadallgraphics
  3597 00003034 BE[7A1B0000]        <1> 		mov esi, buftxt
  3598 00003039 81C605000000        <1> 		add esi, 5
  3599 0000303F E867E7FFFF          <1> 		call print
  3600 00003044 BE[D6300000]        <1> 		mov esi, loadedbmpmsg
  3601 00003049 E85DE7FFFF          <1> 		call print
  3602 0000304E E9B9ECFFFF          <1> 		jmp nwcmd
  3603                              <1> noguibmp:
  3604 00003053 BE[62300000]        <1> 		mov esi, warnguibmp
  3605 00003058 E84EE7FFFF          <1> 		call print
  3606 0000305D E9AAECFFFF          <1> 		jmp nwcmd
  3607 00003062 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  3608 0000306B 6E6F7420626520646F- <1>
  3609 00003074 6E6520776974686F75- <1>
  3610 0000307D 742074686520677569- <1>
  3611 00003086 2E0A0D00            <1>
  3612                              <1> 
  3613                              <1> 		
  3614                              <1> filenotfound:
  3615 0000308A BE[B3300000]        <1> 		mov esi, filenf
  3616 0000308F E817E7FFFF          <1> 		call print
  3617 00003094 BE[7A1B0000]        <1> 		mov esi, buftxt
  3618 00003099 81C608000000        <1> 		add esi, 8
  3619 0000309F E807E7FFFF          <1> 		call print
  3620 000030A4 BE[BE300000]        <1> 		mov esi, filenf2
  3621 000030A9 E8FDE6FFFF          <1> 		call print
  3622 000030AE E959ECFFFF          <1> 		jmp nwcmd
  3623 000030B3 5468652066696C6520- <1> filenf db "The file ",34,0
  3624 000030BC 2200                <1>
  3625 000030BE 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  3626 000030C7 6F7420626520666F75- <1>
  3627 000030D0 6E642E0D0A00        <1>
  3628                              <1> 		
  3629 000030D6 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  3630 000030DF 0A00                <1>
  3631                              <1> 
  3632 000030E1 050464756D7000      <1> 	db 5,4,"dump",0
  3633 000030E8 BE[7A1B0000]        <1> 	mov esi, buftxt
  3634 000030ED 81C605000000        <1> 	add esi, 5
  3635 000030F3 B900000000          <1> 	mov ecx, 0
  3636 000030F8 E83BF2FFFF          <1> 	call cnvrttxt
  3637 000030FD 89CF                <1> 	mov edi, ecx
  3638 000030FF 89FE                <1> 	mov esi, edi
  3639 00003101 81C680030000        <1> 	add esi, 896
  3640 00003107 C605[E4210000]00    <1> 	mov byte [firsthexshown],0
  3641                              <1> dumphexloop:
  3642 0000310E 8B0F                <1> 	mov ecx, [edi]
  3643 00003110 E8E4F0FFFF          <1> 	call showhex
  3644 00003115 81C704000000        <1> 	add edi, 4
  3645 0000311B 39F7                <1> 	cmp edi, esi
  3646 0000311D 72EF                <1> 	jb dumphexloop
  3647 0000311F E9E8EBFFFF          <1> 	jmp nwcmd
  3648                              <1> 
  3649 00003124 050474696D6500      <1> db 5,4,"time",0
  3650 0000312B E823000000          <1> 	call time
  3651 00003130 BE[3D330000]        <1> 	mov esi, timeshow
  3652 00003135 E871E6FFFF          <1> 	call print
  3653 0000313A BE[5A5F0000]        <1> 	mov esi, line
  3654 0000313F E867E6FFFF          <1> 	call print
  3655 00003144 BE[47330000]        <1> 	mov esi, dateshow
  3656 00003149 E85DE6FFFF          <1> 	call print
  3657 0000314E E9B9EBFFFF          <1> 	jmp nwcmd
  3658                              <1> 	time:
  3659 00003153 E86D010000          <1> 	call tstackput1
  3660 00003158 B00A                <1> 	mov al,10			;Get RTC register A
  3661 0000315A E897010000          <1> 	call tget1
  3662 0000315F A880                <1> 	test al,0x80			;Is update in progress?
  3663 00003161 75F0                <1> 	jne time				; yes, wait
  3664                              <1> 
  3665 00003163 B000                <1> 	mov al,0			;Get seconds (00 to 59)
  3666 00003165 E88C010000          <1> 	call tget1
  3667 0000316A A2[34330000]        <1> 	mov [RTCtimeSecond],al
  3668                              <1> 
  3669 0000316F B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  3670 00003171 E880010000          <1> 	call tget1
  3671 00003176 A2[35330000]        <1> 	mov [RTCtimeMinute],al
  3672                              <1> 
  3673 0000317B B004                <1> 	mov al,0x04			;Get hours (see notes)
  3674 0000317D E874010000          <1> 	call tget1
  3675 00003182 A2[36330000]        <1> 	mov [RTCtimeHour],al
  3676                              <1> 
  3677 00003187 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  3678 00003189 E868010000          <1> 	call tget1
  3679                              <1> ;	mov ah, 0			;;fix day
  3680                              <1> ;	mov ah, al
  3681                              <1> ;	shr ah, 4
  3682                              <1> ;	shl al, 4
  3683                              <1> ;	shr al, 4
  3684                              <1> ;	cmp al, 0
  3685                              <1> ;	jne nodecahday
  3686                              <1> ;	mov al, 10
  3687                              <1> ;	dec ah
  3688                              <1> ;nodecahday:
  3689                              <1> ;	dec al
  3690                              <1> ;	shl ah, 4
  3691                              <1> ;	or al, ah
  3692 0000318E A2[37330000]        <1> 	mov [RTCtimeDay],al
  3693                              <1> 
  3694 00003193 B008                <1> 	mov al,0x08			;Get month (01 to 12)
  3695 00003195 E85C010000          <1> 	call tget1
  3696 0000319A A2[38330000]        <1> 	mov [RTCtimeMonth],al
  3697                              <1> 
  3698 0000319F B009                <1> 	mov al,0x09			;Get year (00 to 99)
  3699 000031A1 E850010000          <1> 	call tget1
  3700 000031A6 A2[39330000]        <1> 	mov [RTCtimeYear],al
  3701                              <1> 	
  3702 000031AB BE[3D330000]        <1> 	mov esi, timeshow
  3703 000031B0 8A2D[36330000]      <1> 	mov ch, [RTCtimeHour]
  3704 000031B6 E846010000          <1> 	call tput1
  3705 000031BB 8A2D[35330000]      <1> 	mov ch, [RTCtimeMinute]
  3706 000031C1 E83B010000          <1> 	call tput1
  3707 000031C6 8A2D[34330000]      <1> 	mov ch, [RTCtimeSecond]
  3708 000031CC E830010000          <1> 	call tput1
  3709 000031D1 BE[47330000]        <1> 	mov esi, dateshow
  3710 000031D6 8A2D[38330000]      <1> 	mov ch, [RTCtimeMonth]
  3711 000031DC E820010000          <1> 	call tput1
  3712 000031E1 8A2D[37330000]      <1> 	mov ch, [RTCtimeDay]
  3713 000031E7 E815010000          <1> 	call tput1
  3714 000031EC B520                <1> 	mov ch, 0x20
  3715 000031EE E80E010000          <1> 	call tput1
  3716 000031F3 4E                  <1> 	dec esi
  3717 000031F4 8A2D[39330000]      <1> 	mov ch, [RTCtimeYear]
  3718 000031FA E802010000          <1> 	call tput1
  3719 000031FF E8DB000000          <1> 	call tstackget1
  3720 00003204 BE[3D330000]        <1> 	mov esi, timeshow
  3721 00003209 66BB0700            <1> 	mov bx, 7
  3722 0000320D B401                <1> 	mov ah, 1
  3723 0000320F B000                <1> 	mov al, 0
  3724 00003211 CD30                <1> 	int 30h
  3725                              <1> ;;get day of week
  3726                              <1> ;;add these:
  3727                              <1> ;;century value
  3728                              <1> ;;last 2 digits of year
  3729                              <1> ;;last 2 digits of year right shifted twice
  3730                              <1> ;;month table value
  3731                              <1> ;;day of the month
  3732                              <1> ;;divide these by 7
  3733                              <1> ;;the remainder is the day
  3734 00003213 B800000000          <1> 	mov eax, 0
  3735                              <1> ;;first convert the values from BCD to hex
  3736 00003218 A0[37330000]        <1> 	mov al, [RTCtimeDay]
  3737 0000321D E88A000000          <1> 	call converttohex
  3738 00003222 8825[3A330000]      <1> 	mov [dayhex], ah
  3739 00003228 A0[38330000]        <1> 	mov al, [RTCtimeMonth]
  3740 0000322D E87A000000          <1> 	call converttohex
  3741 00003232 8825[3B330000]      <1> 	mov [monthhex], ah
  3742 00003238 A0[39330000]        <1> 	mov al, [RTCtimeYear]
  3743 0000323D E86A000000          <1> 	call converttohex
  3744 00003242 8825[3C330000]      <1> 	mov [yearhex], ah
  3745 00003248 B800000000          <1> 	mov eax, 0
  3746 0000324D A0[3C330000]        <1> 	mov al, [yearhex]
  3747 00003252 C0E802              <1> 	shr al, 2
  3748 00003255 0205[3C330000]      <1> 	add al, [yearhex]
  3749 0000325B 0506000000          <1> 	add eax, 6
  3750 00003260 BB00000000          <1> 	mov ebx, 0
  3751 00003265 8A1D[3B330000]      <1> 	mov bl, [monthhex]
  3752 0000326B FECB                <1> 	dec bl
  3753 0000326D 81C3[5D330000]      <1> 	add ebx, month
  3754 00003273 B900000000          <1> 	mov ecx, 0
  3755 00003278 8A0B                <1> 	mov cl, [ebx]
  3756 0000327A 01C8                <1> 	add eax, ecx
  3757 0000327C 8A0D[3A330000]      <1> 	mov cl, [dayhex]
  3758 00003282 01C8                <1> 	add eax, ecx
  3759 00003284 66BB0700            <1> 	mov bx, 7
  3760 00003288 BA00000000          <1> 	mov edx, 0
  3761 0000328D 66F7F3              <1> 	div bx
  3762 00003290 C1E202              <1> 	shl edx, 2
  3763 00003293 81C2[69330000]      <1> 	add edx, day
  3764 00003299 8B32                <1> 	mov esi, [edx]
  3765 0000329B 66BB0700            <1> 	mov bx, 7
  3766 0000329F B401                <1> 	mov ah, 1
  3767 000032A1 B000                <1> 	mov al, 0
  3768 000032A3 CD30                <1> 	int 30h
  3769 000032A5 66B80000            <1> 	mov ax, 0
  3770 000032A9 CD30                <1> 	int 30h
  3771 000032AB F4                  <1> 	hlt
  3772                              <1> 	
  3773                              <1> converttohex:
  3774 000032AC 88C4                <1> 	mov ah, al
  3775 000032AE C0E804              <1> 	shr al, 4
  3776 000032B1 C0E404              <1> 	shl ah, 4
  3777 000032B4 C0EC04              <1> 	shr ah, 4
  3778 000032B7 3C00                <1> 	cmp al, 0
  3779 000032B9 7409                <1> 	je noconverttohex
  3780                              <1> converttohexlp:
  3781 000032BB 80C40A              <1> 	add ah, 10
  3782 000032BE FEC8                <1> 	dec al
  3783 000032C0 3C00                <1> 	cmp al, 0
  3784 000032C2 75F7                <1> 	jne converttohexlp
  3785                              <1> noconverttohex:
  3786 000032C4 C3                  <1> 	ret
  3787                              <1> 	
  3788                              <1> tstackput1:
  3789 000032C5 8935[30330000]      <1> 	mov [tstack + 20], esi
  3790 000032CB BE[1C330000]        <1> 	mov esi, tstack
  3791 000032D0 8906                <1> 	mov [esi], eax
  3792 000032D2 895E04              <1> 	mov [esi + 4], ebx
  3793 000032D5 894E08              <1> 	mov [esi + 8], ecx
  3794 000032D8 89560C              <1> 	mov [esi + 12], edx
  3795 000032DB 897E10              <1> 	mov [esi + 16], edi
  3796 000032DE C3                  <1> 	ret
  3797                              <1> 	
  3798                              <1> tstackget1:
  3799 000032DF BE[1C330000]        <1> 	mov esi, tstack
  3800 000032E4 8B06                <1> 	mov eax, [esi]
  3801 000032E6 8B5E04              <1> 	mov ebx, [esi + 4]
  3802 000032E9 8B4E08              <1> 	mov ecx, [esi + 8]
  3803 000032EC 8B560C              <1> 	mov edx, [esi + 12]
  3804 000032EF 8B7E10              <1> 	mov edi, [esi + 16]
  3805 000032F2 8B7614              <1> 	mov esi, [esi + 20]
  3806 000032F5 C3                  <1> 	ret
  3807                              <1> 	
  3808                              <1> tget1:
  3809 000032F6 66BA7000            <1> 	mov dx, 0x70
  3810 000032FA EE                  <1> 	out dx, al
  3811 000032FB 6642                <1> 	inc dx
  3812 000032FD EC                  <1> 	in al, dx
  3813 000032FE 664A                <1> 	dec dx
  3814 00003300 C3                  <1> 	ret
  3815                              <1> 	
  3816                              <1> tput1:
  3817 00003301 66C1E904            <1> 	shr cx, 4
  3818 00003305 B030                <1> 	mov al, 48
  3819 00003307 00E8                <1> 	add al, ch
  3820 00003309 8806                <1> 	mov [esi], al
  3821 0000330B 46                  <1> 	inc esi
  3822 0000330C B030                <1> 	mov al, 48
  3823 0000330E C0E904              <1> 	shr cl, 4
  3824 00003311 00C8                <1> 	add al, cl
  3825 00003313 8806                <1> 	mov [esi], al
  3826 00003315 81C602000000        <1> 	add esi, 2
  3827 0000331B C3                  <1> 	ret
  3828                              <1> 		
  3829 0000331C 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  3830 00003325 000000000000000000- <1>
  3831 0000332E 000000000000        <1>
  3832 00003334 00                  <1> 	RTCtimeSecond db 0
  3833 00003335 00                  <1> 	RTCtimeMinute db 0
  3834 00003336 00                  <1> 	RTCtimeHour db 0
  3835 00003337 00                  <1> 	RTCtimeDay db 0
  3836 00003338 00                  <1> 	RTCtimeMonth db 0
  3837 00003339 00                  <1> 	RTCtimeYear db 0
  3838 0000333A 00                  <1> 	dayhex db 0
  3839 0000333B 00                  <1> 	monthhex db 0
  3840 0000333C 00                  <1> 	yearhex db 0
  3841 0000333D 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  3842 00003346 0A                  <1>
  3843 00003347 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  3844 00003350 300D0A00            <1>
  3845                              <1> 	oldcentury:	;;from 1700 to 1900
  3846 00003354 040200              <1> 	db 4,2,0
  3847                              <1> 	century:	;;from 2000 to 2500
  3848 00003357 060402000604        <1> 	db 6,4,2,0,6,4
  3849                              <1> 	month:
  3850 0000335D 000303060104060205- <1> 	db 0,3,3,6,1,4,6,2,5,0,3,5
  3851 00003366 000305              <1>
  3852                              <1> 	day:
  3853 00003369 [85330000]          <1> 	dd sunday
  3854 0000336D [8E330000]          <1> 	dd monday
  3855 00003371 [97330000]          <1> 	dd tuesday
  3856 00003375 [A1330000]          <1> 	dd wednesday
  3857 00003379 [AD330000]          <1> 	dd thursday
  3858 0000337D [B8330000]          <1> 	dd friday
  3859 00003381 [C1330000]          <1> 	dd saturday
  3860                              <1> sunday:
  3861 00003385 53756E6461790D0A00  <1> 	db "Sunday",13,10,0
  3862                              <1> monday:
  3863 0000338E 4D6F6E6461790D0A00  <1> 	db "Monday",13,10,0
  3864                              <1> tuesday:
  3865 00003397 547565736461790D0A- <1> 	db "Tuesday",13,10,0
  3866 000033A0 00                  <1>
  3867                              <1> wednesday:
  3868 000033A1 5765646E6573646179- <1> 	db "Wednesday",13,10,0
  3869 000033AA 0D0A00              <1>
  3870                              <1> thursday:
  3871 000033AD 54687572736461790D- <1> 	db "Thursday",13,10,0
  3872 000033B6 0A00                <1>
  3873                              <1> friday:
  3874 000033B8 4672696461790D0A00  <1> 	db "Friday",13,10,0
  3875                              <1> saturday:
  3876 000033C1 53617475726461790D- <1> 	db "Saturday",13,10,0
  3877 000033CA 0A00                <1>
  3878                              <1> 
  3879 000033CC 0504637075696400    <1> db 5,4,"cpuid",0
  3880 000033D4 B800000000          <1> 	mov eax, 0
  3881 000033D9 0FA2                <1> 	cpuid
  3882 000033DB 891D[30340000]      <1> 	mov [cpuidbuf], ebx
  3883 000033E1 8915[34340000]      <1> 	mov [cpuidbuf + 4], edx
  3884 000033E7 890D[38340000]      <1> 	mov [cpuidbuf + 8], ecx
  3885 000033ED BE[30340000]        <1> 	mov esi, cpuidbuf
  3886 000033F2 E8B4E3FFFF          <1> 	call print
  3887 000033F7 BE[5A5F0000]        <1> 	mov esi, line
  3888 000033FC E8AAE3FFFF          <1> 	call print
  3889 00003401 B801000000          <1> 	mov eax, 1
  3890 00003406 0FA2                <1> 	cpuid
  3891 00003408 89C1                <1> 	mov ecx, eax
  3892 0000340A C605[E4210000]02    <1> 	mov byte [firsthexshown], 2
  3893 00003411 E8E3EDFFFF          <1> 	call showhex
  3894 00003416 B808000080          <1> 	mov eax, 0x80000008
  3895 0000341B 0FA2                <1> 	cpuid
  3896 0000341D 89C1                <1> 	mov ecx, eax
  3897 0000341F C605[E4210000]02    <1> 	mov byte [firsthexshown], 2
  3898 00003426 E8CEEDFFFF          <1> 	call showhex
  3899 0000342B E9DCE8FFFF          <1> 	jmp nwcmd
  3900                              <1> 	
  3901 00003430 00<rept>            <1> cpuidbuf times 13 db 0
  3902                              <1> cpuidvendorend:
  3903                              <1> progend:		;programs end here	
  3904                              <1> batchprogend:
  3905                                      %include 'source/input.asm'
  3906                              <1> PS2SET:
  3907 0000343D B0A8                <1>   mov  al, 0xa8		; enable mouse port
  3908 0000343F E664                <1>   out  0x64, al		; write to keyboardcontroller
  3909 00003441 E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  3910 00003446 C3                  <1> ret
  3911                              <1> 
  3912                              <1> CHKPRT:
  3913 00003447 66B96400            <1>   mov  cx, 100
  3914                              <1>  .again:
  3915 0000344B E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3916 0000344D A802                <1>   test al, 2		; Check if input buffer is empty
  3917 0000344F 7402                <1>   je .go
  3918 00003451 E2F8                <1>   loop .again
  3919                              <1>  .go:
  3920 00003453 C3                  <1> ret
  3921                              <1> 
  3922                              <1> WMOUS:
  3923 00003454 B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  3924 00003456 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3925 00003458 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3926 0000345D C3                  <1> ret
  3927                              <1> 
  3928                              <1> MBUFFUL:
  3929 0000345E 66B96400            <1>   mov cx, 100
  3930                              <1>  .mn:
  3931 00003462 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3932 00003464 A820                <1>   test al, 0x20		; check if mouse output buffer is full
  3933 00003466 7402                <1>   jz  .mnn
  3934 00003468 E2F8                <1>   loop .mn
  3935                              <1>  .mnn:
  3936 0000346A C3                  <1> ret
  3937                              <1> 
  3938                              <1> 
  3939                              <1> ACTMOUS:
  3940 0000346B E8E4FFFFFF          <1>   call WMOUS
  3941 00003470 B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  3942 00003472 E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  3943 00003474 E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3944 00003479 E801000000          <1>   call CHKMOUS		; check if a byte is available
  3945 0000347E C3                  <1> ret
  3946                              <1> 
  3947                              <1> CHKMOUS:
  3948 0000347F B300                <1>   mov  bl, 0
  3949 00003481 66B96400            <1>   mov cx, 100
  3950                              <1>  .vrd:
  3951 00003485 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3952 00003487 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  3953 00003489 7504                <1>   jnz .yy
  3954 0000348B E2F8                <1>   loop .vrd
  3955 0000348D B301                <1>   mov  bl, 1
  3956                              <1>  .yy:
  3957 0000348F C3                  <1> ret
  3958                              <1> 
  3959                              <1> GETB:
  3960                              <1>  .cagain:
  3961 00003490 E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  3962 00003495 08DB                <1>   or bl, bl
  3963 00003497 75F7                <1>   jnz .cagain
  3964 00003499 B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  3965 0000349B E664                <1>   out  0x64, al		; write to keyboardcontroller
  3966 0000349D E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3967 000034A2 6631C0              <1>   xor  ax, ax
  3968 000034A5 E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3969 000034A7 88C2                <1>   mov  dl, al
  3970 000034A9 B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  3971 000034AB E664                <1>   out  0x64, al		; write to keyboardcontroller
  3972 000034AD E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3973 000034B2 88D0                <1>   mov  al, dl
  3974 000034B4 C3                  <1> ret
  3975                              <1> 
  3976 000034B5 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  3977 000034B6 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  3978 000034B7 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  3979 000034B8 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  3980 000034B9 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  3981 000034BA 00                  <1> mousedisabled db 0
  3982 000034BB 00                  <1> specialkey db 0
  3983                              <1> guistartin2:		;;this is basically the idle process
  3984                              <1> 					;;this halts the cpu for a small amount of time and then sees if there was a keypress
  3985                              <1> 					;;this lets the cpu stay at close to 0% instead of 100%
  3986 000034BC 66B80020            <1> 	mov ax, 0x2000	;;this is the divider for the PIT
  3987 000034C0 E640                <1> 	out 0x40, al
  3988 000034C2 66C1C008            <1> 	rol ax, 8
  3989 000034C6 E640                <1> 	out 0x40, al
  3990 000034C8 B0FE                <1> 	mov al, 0xFE
  3991 000034CA E621                <1> 	out 0x21, al
  3992 000034CC B020                <1> 	mov al, 0x20
  3993 000034CE E620                <1> 	out 0x20, al
  3994 000034D0 A0[83580000]        <1> 	mov al, [threadson]
  3995 000034D5 C605[83580000]00    <1> 	mov byte [threadson], 0
  3996 000034DC FB                  <1> 	sti
  3997 000034DD F4                  <1> 	hlt
  3998 000034DE A2[83580000]        <1> 	mov [threadson], al
  3999 000034E3 FA                  <1> 	cli
  4000                              <1> guistartin:
  4001 000034E4 B800000000          <1> 		mov eax, 0
  4002 000034E9 A2[BB340000]        <1> 		mov [specialkey], al
  4003 000034EE 66A3[62170000]      <1> 		mov [lastkey], ax
  4004 000034F4 E464                <1> 		in al, 64h ; Status
  4005 000034F6 A820                <1> 		test al, 20h ; PS2-Mouse?
  4006 000034F8 0F85EA010000        <1> 		jnz near maincall2
  4007 000034FE A801                <1> 		test al, 1 
  4008 00003500 74BA                <1> 		jz guistartin2 ; if output buffer full or no keypress, jump to idle process (only works when it is jz guistartin2, use jz guistartin to disable)
  4009                              <1> 	guigetkey:
  4010 00003502 E460                <1> 		in al, 60h
  4011 00003504 88C4                <1> 		mov ah, al
  4012 00003506 B000                <1> 		mov al, 0
  4013 00003508 8825[63170000]      <1> 		mov [lastkey + 1], ah
  4014 0000350E 88E0                <1> 		mov al, ah
  4015 00003510 BF[34390000]        <1> 		mov edi, scancode
  4016                              <1> 	guisearchscan: 
  4017 00003515 3C3A                <1> 		cmp al, 3Ah
  4018 00003517 731A                <1> 		jae guiscanother
  4019 00003519 B400                <1> 		mov ah, 0
  4020 0000351B C0E002              <1> 		shl al, 2
  4021 0000351E 01C7                <1> 		add edi, eax
  4022 00003520 D0E8                <1> 		shr al, 1
  4023 00003522 01C7                <1> 		add edi, eax
  4024 00003524 D0E8                <1> 		shr al, 1
  4025 00003526 8A27                <1> 		mov ah, [edi]
  4026 00003528 80FC00              <1> 		cmp ah, 0
  4027 0000352B 7406                <1> 		je guiscanother
  4028 0000352D E9D7000000          <1> 		jmp guiscanfound
  4029 00003532 00                  <1> guiupper db 0
  4030                              <1> guiscanother:
  4031 00003533 88C4                <1> 		mov ah, al
  4032 00003535 B000                <1> 		mov al, 0
  4033 00003537 66A3[62170000]      <1> 		mov [lastkey], ax
  4034 0000353D 80FCE0              <1> 		cmp ah, 0E0h
  4035 00003540 0F847D000000        <1> 		je near guigetkeyspecial
  4036 00003546 803D[BB340000]E0    <1> 		cmp byte [specialkey], 0xE0
  4037 0000354D 752B                <1> 		jne nospecialkey
  4038 0000354F 80FC38              <1> 		cmp ah, 38h
  4039 00003552 0F84A0000000        <1> 		je near guialton
  4040 00003558 80FCB8              <1> 		cmp ah, 0B8h
  4041 0000355B 0F849F000000        <1> 		je near guialtoff
  4042 00003561 80FC1D              <1> 		cmp ah, 1Dh
  4043 00003564 0F847E000000        <1> 		je near guictron
  4044 0000356A 80FC9D              <1> 		cmp ah, 9Dh
  4045 0000356D 0F847D000000        <1> 		je near guictroff
  4046 00003573 66A3[62170000]      <1> 		mov [lastkey], ax
  4047 00003579 C3                  <1> 		ret
  4048                              <1> nospecialkey:
  4049                              <1> 		;cmp ah, 4Dh
  4050                              <1> 		;je near nextimage
  4051 0000357A 80FC2A              <1> 		cmp ah, 2Ah
  4052 0000357D 0F8455000000        <1> 		je near guishifton
  4053 00003583 80FC36              <1> 		cmp ah, 36h
  4054 00003586 0F844C000000        <1> 		je near guishifton
  4055 0000358C 80FC1C              <1> 		cmp ah, 1Ch
  4056 0000358F 0F8473000000        <1> 		je near guientdown
  4057 00003595 80FCAA              <1> 		cmp ah, 0AAh
  4058 00003598 0F8442000000        <1> 		je near guishiftoff
  4059 0000359E 80FCB6              <1> 		cmp ah, 0B6h
  4060 000035A1 0F8439000000        <1> 		je near guishiftoff
  4061 000035A7 80FC3A              <1> 		cmp ah, 3Ah
  4062 000035AA 0F84A5000000        <1> 		je near guicaps
  4063 000035B0 80FC45              <1> 		cmp ah, 0x45
  4064 000035B3 0F84AD000000        <1> 		je near guinumlock
  4065 000035B9 80FC46              <1> 		cmp ah, 0x46
  4066 000035BC 0F84BC000000        <1> 		je near guiscrolllock
  4067 000035C2 C3                  <1> 		ret
  4068                              <1> 	guigetkeyspecial:
  4069 000035C3 C605[BB340000]E0    <1> 		mov byte [specialkey], 0xE0
  4070 000035CA E933FFFFFF          <1> 		jmp guigetkey
  4071                              <1> 	guishift:
  4072 000035CF A0[32350000]        <1> 		mov al, [guiupper]
  4073 000035D4 3C01                <1> 		cmp al, 1
  4074 000035D6 7308                <1> 		jae guishiftoff
  4075                              <1> 	guishifton:
  4076 000035D8 C605[32350000]01    <1> 		mov byte [guiupper], 1
  4077 000035DF C3                  <1> 		ret
  4078                              <1> 		;jmp guistartin
  4079                              <1> 	guishiftoff:
  4080 000035E0 C605[32350000]00    <1> 		mov byte [guiupper], 0
  4081 000035E7 C3                  <1> 		ret
  4082                              <1> 		;jmp guistartin
  4083                              <1> 	guictron:
  4084 000035E8 C605[54360000]01    <1> 		mov byte [guictr], 1
  4085 000035EF C3                  <1> 		ret
  4086                              <1> 	guictroff:
  4087 000035F0 C605[54360000]00    <1> 		mov byte [guictr], 0
  4088 000035F7 C3                  <1> 		ret
  4089                              <1> 	guialton:
  4090 000035F8 C605[53360000]01    <1> 		mov byte [guialt], 1
  4091 000035FF C3                  <1> 		ret
  4092                              <1> 		;jmp guistartin
  4093                              <1> 	guialtoff:
  4094 00003600 C605[53360000]00    <1> 		mov byte [guialt], 0
  4095 00003607 C3                  <1> 		ret
  4096                              <1> 		;jmp guistartin
  4097                              <1> 	guientdown:
  4098 00003608 C3                  <1> 		ret
  4099                              <1> 	guiscanfound:
  4100 00003609 81C704000000        <1> 		add edi, 4
  4101 0000360F 803D[54360000]01    <1> 		cmp byte [guictr], 1
  4102 00003616 731B                <1> 		jae altguiin
  4103 00003618 81EF04000000        <1> 		sub edi, 4
  4104 0000361E 81C702000000        <1> 		add edi, 2
  4105 00003624 803D[53360000]01    <1> 		cmp byte [guialt], 1
  4106 0000362B 7306                <1> 		jae altguiin
  4107 0000362D 81EF02000000        <1> 		sub edi, 2
  4108                              <1> altguiin:
  4109 00003633 81C701000000        <1> 		add edi, 1
  4110 00003639 803D[32350000]01    <1> 		cmp byte [guiupper], 1
  4111 00003640 7306                <1> 		jae uppercasegui
  4112 00003642 81EF01000000        <1> 		sub edi, 1
  4113                              <1> uppercasegui:
  4114 00003648 8A07                <1> 		mov al,[edi]
  4115 0000364A A2[62170000]        <1> 		mov [lastkey], al
  4116 0000364F C3                  <1> 		ret
  4117                              <1> 		
  4118 00003650 00                  <1> keyboardstatus db 0
  4119 00003651 00                  <1> numlockstatus db 0
  4120 00003652 00                  <1> scrolllockstatus db 0
  4121 00003653 00                  <1> guialt db 0
  4122 00003654 00                  <1> guictr db 0
  4123                              <1> 	guicaps:
  4124 00003655 8035[50360000]04    <1> 		xor byte [keyboardstatus], 00000100b
  4125 0000365C E835000000          <1> 		call updatekblights
  4126 00003661 E969FFFFFF          <1> 		jmp guishift
  4127                              <1> 		
  4128                              <1> 	guinumlock:
  4129 00003666 8035[50360000]02    <1> 		xor byte [keyboardstatus], 00000010b
  4130 0000366D 8035[51360000]01    <1> 		xor byte [numlockstatus], 1
  4131 00003674 E81D000000          <1> 		call updatekblights
  4132 00003679 E966FEFFFF          <1> 		jmp guistartin
  4133                              <1> 	
  4134                              <1> 	guiscrolllock:
  4135 0000367E 8035[50360000]01    <1> 		xor byte [keyboardstatus], 00000001b
  4136 00003685 8035[52360000]01    <1> 		xor byte [scrolllockstatus], 1
  4137 0000368C E805000000          <1> 		call updatekblights
  4138 00003691 E94EFEFFFF          <1> 		jmp guistartin
  4139                              <1> 		
  4140                              <1> 	updatekblights:
  4141 00003696 B0ED                <1> 		mov al, 0xED
  4142 00003698 66BA6000            <1> 		mov dx, 0x60
  4143 0000369C EE                  <1> 		out dx, al
  4144                              <1> 	chkkbdack:
  4145 0000369D EC                  <1> 		in al, dx
  4146 0000369E 3CFA                <1> 		cmp al, 0xFA
  4147 000036A0 75FB                <1> 		jne chkkbdack
  4148 000036A2 A0[50360000]        <1> 		mov al, [keyboardstatus]
  4149 000036A7 EE                  <1> 		out dx, al
  4150 000036A8 C3                  <1> 		ret
  4151                              <1> 	
  4152                              <1> 	cursorgui:
  4153 000036A9 803D[8A4D0000]01    <1> 		cmp byte [mouseon], 1
  4154 000036B0 0F8432000000        <1> 		je near maincall2
  4155 000036B6 803D[293C0000]00    <1> 		cmp byte [guion], 0
  4156 000036BD 0F8445FFFFFF        <1> 		je guientdown
  4157                              <1> 	initmouse:
  4158 000036C3 803D[293C0000]00    <1> 		cmp byte [guion], 0
  4159 000036CA 7405                <1> 		je noswmsposinit
  4160 000036CC E825060000          <1> 		call switchmousepos2
  4161                              <1> 	noswmsposinit:
  4162 000036D1 E867FDFFFF          <1> 	  	call PS2SET
  4163 000036D6 E890FDFFFF          <1> 		call ACTMOUS
  4164 000036DB C605[8A4D0000]01    <1> 		mov byte [mouseon],1
  4165 000036E2 E8A9FDFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  4166                              <1> 				;;If the bytes are mixed up,
  4167                              <1> 				;;remove this line or add another of this line.
  4168                              <1> 		;call GETB
  4169                              <1> 	nomouse:
  4170 000036E7 C3                  <1> 		ret
  4171                              <1> 	maincall2:
  4172 000036E8 803D[BA340000]01    <1> 		cmp byte [mousedisabled], 1
  4173 000036EF 74F6                <1> 		je nomouse
  4174 000036F1 803D[8A4D0000]01    <1> 		  cmp byte [mouseon], 1
  4175 000036F8 75C9                <1> 		  jne initmouse
  4176 000036FA E891FDFFFF          <1> 		  call GETB
  4177 000036FF 88C3                <1> 		  mov  bl, al
  4178 00003701 80E301              <1> 		  and  bl, 1
  4179 00003704 881D[B5340000]      <1> 		  mov  BYTE [LBUTTON], bl
  4180 0000370A 88C3                <1> 		  mov  bl, al
  4181 0000370C 80E302              <1> 		  and  bl, 2
  4182 0000370F D0EB                <1> 		  shr  bl, 1
  4183 00003711 881D[B6340000]      <1> 		  mov  BYTE [RBUTTON], bl
  4184 00003717 88C3                <1> 		  mov  bl, al
  4185 00003719 80E304              <1> 		  and  bl, 4
  4186 0000371C C0EB02              <1> 		  shr  bl, 2
  4187 0000371F 881D[B7340000]      <1> 		  mov  BYTE [MBUTTON], bl
  4188 00003725 E866FDFFFF          <1> 		  call GETB
  4189 0000372A A2[B8340000]        <1> 		  mov  BYTE [XCOORD], al
  4190 0000372F E85CFDFFFF          <1> 		  call GETB
  4191 00003734 A2[B9340000]        <1> 		  mov  BYTE [YCOORD], al
  4192                              <1> 
  4193                              <1> 	showpixelcursor:
  4194 00003739 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4195 00003740 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4196 00003747 668915[8F380000]    <1> 		mov [lastmouseposition], dx
  4197 0000374E 66890D[91380000]    <1> 		mov [lastmouseposition + 2], cx
  4198 00003755 A0[B8340000]        <1> 		mov al, [XCOORD]
  4199 0000375A 3C80                <1> 		cmp al, 128
  4200 0000375C 730C                <1> 		jae subxcoord
  4201 0000375E 00C0                <1> 		add al, al
  4202 00003760 B400                <1> 		mov ah, 0
  4203 00003762 6601C2              <1> 		add dx, ax
  4204 00003765 E90B000000          <1> 		jmp subxcoorddn
  4205                              <1> 	subxcoord:
  4206 0000376A 00C0                <1> 		add al, al
  4207 0000376C B300                <1> 		mov bl, 0
  4208 0000376E 28C3                <1> 		sub bl, al
  4209 00003770 B700                <1> 		mov bh, 0
  4210 00003772 6629DA              <1> 		sub dx, bx
  4211                              <1> 	subxcoorddn:
  4212 00003775 8A1D[B9340000]      <1> 		mov bl, [YCOORD]
  4213 0000377B B000                <1> 		mov al, 0
  4214 0000377D 28D8                <1> 		sub al, bl
  4215 0000377F 3C80                <1> 		cmp al, 128
  4216 00003781 730A                <1> 		jae subycoord
  4217 00003783 B400                <1> 		mov ah, 0
  4218 00003785 6601C1              <1> 		add cx, ax
  4219 00003788 E909000000          <1> 		jmp subycoorddn
  4220                              <1> 	subycoord:
  4221 0000378D B300                <1> 		mov bl, 0
  4222 0000378F 28C3                <1> 		sub bl, al
  4223 00003791 B700                <1> 		mov bh, 0
  4224 00003793 6629D9              <1> 		sub cx, bx
  4225                              <1> 	subycoorddn:
  4226 00003796 6681FA204E          <1> 		cmp dx, 20000
  4227 0000379B 7604                <1> 		jbe nooriginx2
  4228 0000379D 66BA0000            <1> 		mov dx, 0
  4229                              <1> 	nooriginx2:
  4230 000037A1 6681F9204E          <1> 		cmp cx, 20000
  4231 000037A6 7604                <1> 		jbe nooriginy2
  4232 000037A8 66B90000            <1> 		mov cx, 0
  4233                              <1> 	nooriginy2:
  4234 000037AC 6681FA0000          <1> 		cmp dx, 0
  4235 000037B1 7415                <1> 		je nofixxcolumn2
  4236 000037B3 663B15[AD4A0000]    <1> 		cmp dx, [resolutionx2]
  4237 000037BA 720C                <1> 		jb nofixxcolumn2
  4238 000037BC 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  4239 000037C3 6681EA0200          <1> 		sub dx, 2
  4240                              <1> 	nofixxcolumn2:
  4241 000037C8 6681F90000          <1> 		cmp cx, 0
  4242 000037CD 7415                <1> 		je nofixyrow2
  4243 000037CF 663B0D[A94A0000]    <1> 		cmp cx, [resolutiony]
  4244 000037D6 720C                <1> 		jb nofixyrow2
  4245 000037D8 668B0D[A94A0000]    <1> 		mov cx, [resolutiony]
  4246 000037DF 6681E90100          <1> 		sub cx, 1
  4247                              <1> 	nofixyrow2:
  4248 000037E4 668915[93380000]    <1> 		mov [mousecursorposition], dx
  4249 000037EB 66890D[95380000]    <1> 		mov [mousecursorposition + 2], cx
  4250 000037F2 803D[293C0000]00    <1> 		cmp byte [guion], 0
  4251 000037F9 0F8498000000        <1> 		je near termmouse
  4252 000037FF E889040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  4253 00003804 803D[B5340000]01    <1> 		cmp byte [LBUTTON], 1
  4254 0000380B 0F8462050000        <1> 		je near clickicon
  4255 00003811 803D[B6340000]01    <1> 		cmp byte [RBUTTON], 1
  4256 00003818 0F8455050000        <1> 		je near clickicon
  4257 0000381E A0[603D0000]        <1> 		mov al, [pbutton]
  4258 00003823 C705[633D0000]0000- <1> 		mov dword [dragging], 0
  4259 0000382B 0000                <1>
  4260 0000382D 3C00                <1> 		cmp al, 0
  4261 0000382F 740F                <1> 		je nopreviousbutton
  4262 00003831 E8F4030000          <1> 		call clearmousecursor
  4263 00003836 E8860A0000          <1> 		call reloadallgraphics
  4264                              <1> 	windowtermcopyend:
  4265 0000383B E8B6040000          <1> 		call switchmousepos2
  4266                              <1> 	nopreviousbutton:
  4267 00003840 B000                <1> 		mov al, 0
  4268 00003842 A2[603D0000]        <1> 		mov [pbutton], al
  4269 00003847 A0[B5340000]        <1> 		mov al, [LBUTTON]
  4270 0000384C A2[613D0000]        <1> 		mov [pLBUTTON], al
  4271 00003851 A0[B6340000]        <1> 		mov al, [RBUTTON]
  4272 00003856 A2[623D0000]        <1> 		mov [pRBUTTON], al
  4273 0000385B B900000000          <1> 		mov ecx, 0
  4274 00003860 BA00000000          <1> 		mov edx, 0
  4275 00003865 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4276 0000386C 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4277 00003873 66BB18C7            <1> 		mov bx, 1100011100011000b
  4278 00003877 B400                <1> 		mov ah, 0
  4279 00003879 B0FE                <1> 		mov al, 254
  4280 0000387B C605[263C0000]01    <1> 		mov byte [showcursorfonton], 1
  4281 00003882 E836120000          <1> 		call showfontvesa
  4282 00003887 C605[263C0000]00    <1> 		mov byte [showcursorfonton], 0
  4283 0000388E C3                  <1> 		ret
  4284                              <1> 
  4285 0000388F 84008400            <1> lastmouseposition dw 132,132
  4286 00003893 84008400            <1> mousecursorposition dw 132,132	
  4287                              <1> 
  4288                              <1> termmouse:
  4289 00003897 BE[8F1D0000]        <1> 		mov esi, videobuf2
  4290 0000389C BA00000000          <1> 		mov edx, 0
  4291 000038A1 668B15[8F380000]    <1> 		mov dx, [lastmouseposition]
  4292 000038A8 668B0D[91380000]    <1> 		mov cx, [lastmouseposition + 2]
  4293 000038AF 66A1[32390000]      <1> 		mov ax, [cursorcache]
  4294 000038B5 663D0000            <1> 		cmp ax, 0
  4295 000038B9 7426                <1> 		je nocopycursorcache
  4296 000038BB 66C1E104            <1> 		shl cx, 4
  4297 000038BF 66C1E203            <1> 		shl dx, 3
  4298 000038C3 01D6                <1> 		add esi, edx
  4299 000038C5 66BA0000            <1> 		mov dx, 0
  4300 000038C9 8A15[90150000]      <1> 		mov dl, [charxy]
  4301 000038CF 6641                <1> 		inc cx
  4302                              <1> termmousecplp1:
  4303 000038D1 01D6                <1> 		add esi, edx
  4304 000038D3 6649                <1> 		dec cx
  4305 000038D5 6681F90000          <1> 		cmp cx, 0
  4306 000038DA 75F5                <1> 		jne termmousecplp1
  4307 000038DC 29D6                <1> 		sub esi, edx
  4308 000038DE 668906              <1> 		mov [esi], ax
  4309                              <1> nocopycursorcache:
  4310 000038E1 BE[8F1D0000]        <1> 		mov esi, videobuf2
  4311 000038E6 BA00000000          <1> 		mov edx, 0
  4312 000038EB 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4313 000038F2 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4314 000038F9 66C1E104            <1> 		shl cx, 4
  4315 000038FD 66C1E203            <1> 		shl dx, 3
  4316 00003901 01D6                <1> 		add esi, edx
  4317 00003903 66BA0000            <1> 		mov dx, 0
  4318 00003907 8A15[90150000]      <1> 		mov dl, [charxy]
  4319 0000390D 6641                <1> 		inc cx
  4320                              <1> termmousecplp2:
  4321 0000390F 01D6                <1> 		add esi, edx
  4322 00003911 6649                <1> 		dec cx
  4323 00003913 6681F90000          <1> 		cmp cx, 0
  4324 00003918 75F5                <1> 		jne termmousecplp2
  4325 0000391A 29D6                <1> 		sub esi, edx
  4326 0000391C 668B06              <1> 		mov ax, [esi]
  4327 0000391F 66A3[32390000]      <1> 		mov [cursorcache], ax
  4328 00003925 B080                <1> 		mov al, 128
  4329 00003927 B407                <1> 		mov ah, 7
  4330 00003929 668906              <1> 		mov [esi], ax
  4331 0000392C E8BBE1FFFF          <1> 		call termcopy
  4332 00003931 C3                  <1> 		ret
  4333 00003932 0000                <1> cursorcache db 0,0
  4334                              <1> 	
  4335                              <1> scancode:
  4336 00003934 000000000000        <1> 	db 0,0,0,0,0,0			;,0h
  4337 0000393A 000000000000        <1> 	db 0,0,0,0,0,0			;,1h
  4338 00003940 3121AD000000        <1> 	db '1','!',173,0,0,0	;,2h
  4339 00003946 3240FDFB0000        <1> 	db '2','@',253,251,0,0	;,3h
  4340 0000394C 332300000000        <1> 	db '3','#',0,0,0,0		;,4h
  4341 00003952 34249B9C0000        <1> 	db '4','$',155,156,0,0	;,5h
  4342 00003958 3525EE000000        <1> 	db '5','%',238,0,0,0	;,6h
  4343 0000395E 365EAC000000        <1> 	db '6','^',172,0,0,0	;,7h
  4344 00003964 3726AB000000        <1> 	db '7','&',171,0,0,0	;,8h
  4345 0000396A 382AEC000000        <1> 	db '8','*',236,0,0,0	;,9h
  4346 00003970 392800000000        <1> 	db '9','(',0,0,0,0		;,0Ah
  4347 00003976 302900000000        <1> 	db '0',')',0,0,0,0		;,0Bh
  4348 0000397C 2D5F9DF10000        <1> 	db '-','_',157,241,0,0	;,0Ch
  4349 00003982 3D2BF7F60000        <1> 	db '=','+',247,246,0,0	;,0Dh
  4350 00003988 080800000000        <1> 	db 8,8,0,0,0,0			;,0Eh
  4351 0000398E 000000000000        <1> 	db 0,0,0,0,0,0			;,0Fh
  4352 00003994 7151848E0000        <1> 	db 'q','Q',132,142,0,0	;,10h
  4353 0000399A 7757868F0000        <1> 	db 'w','W',134,143,0,0	;,11h
  4354 000039A0 65458290EE45        <1> 	db 'e','E',130,144,238,'E'	;,12h
  4355 000039A6 7252898A7050        <1> 	db 'r','R',137,138,'p','P'		;,13h
  4356 000039AC 7454819AE754        <1> 	db 't','T',129,154,231,'T'		;,14h
  4357 000039B2 795998007559        <1> 	db 'y','Y',152,0,'u','Y'	;,15h
  4358 000039B8 7555A3970000        <1> 	db 'u','U',163,151,0,0	;,16h
  4359 000039BE 6949A18D6949        <1> 	db 'i','I',161,141,'i','I'	;,17h
  4360 000039C4 6F4FA29577EA        <1> 	db 'o','O',162,149,'w',234	;,18h
  4361 000039CA 70509499E3EF        <1> 	db 'p','P',148,153,227,239	;,19h
  4362 000039D0 5B7BF4000000        <1> 	db '[','{',244,0,0,0		;,1Ah
  4363 000039D6 5D7DF5000000        <1> 	db ']','}',245,0,0,0		;,1Bh
  4364 000039DC 000000000000        <1> 	db 0,0,0,0,0,0			;,1Ch
  4365 000039E2 000000000000        <1> 	db 0,0,0,0,0,0			;,1Dh
  4366 000039E8 6141A085E041        <1> 	db 'a','A',160,133,224,'A'	;,1Eh
  4367 000039EE 73531500E5E4        <1> 	db 's','S',21,0,229,228		;,1Fh
  4368 000039F4 6444F800EB7F        <1> 	db 'd','D',248,0,235,127	;,20h
  4369 000039FA 66469F00EDE8        <1> 	db 'f','F',159,0,237,232	;,21h
  4370 00003A00 6747000079E2        <1> 	db 'g','G',0,0,'y',226		;,22h
  4371 00003A06 684800006E48        <1> 	db 'h','H',0,0,'n','H'		;,23h
  4372 00003A0C 6A4A00000000        <1> 	db 'j','J',0,0,0,0		;,24h
  4373 00003A12 6B4B00006B4B        <1> 	db 'k','K',0,0,'k','K'		;,25h
  4374 00003A18 6C4C0000E9E9        <1> 	db 'l','L',0,0,233,233		;,26h
  4375 00003A1E 3B3A14000000        <1> 	db ';',':',20,0,0,0		;,27h
  4376 00003A24 272200000000        <1> 	db 27h,22h,0,0,0,0		;,28h
  4377 00003A2A 607E00000000        <1> 	db '`','~',0,0,0,0		;,29h
  4378 00003A30 000000000000        <1> 	db 0,0,0,0,0,0			;,2Ah
  4379 00003A36 5C7CAAB30000        <1> 	db '\','|',170,179,0,0	;,2Bh
  4380 00003A3C 7A5A91927A5A        <1> 	db 'z','Z',145,146,'z','Z'	;,2Ch
  4381 00003A42 7858000000F0        <1> 	db 'x','X',0,0,0,240		;,2Dh
  4382 00003A48 634387800000        <1> 	db 'c','C',135,128,0,0	;,2Eh
  4383 00003A4E 765600000000        <1> 	db 'v','V',0,0,0,0		;,2Fh
  4384 00003A54 62420000E142        <1> 	db 'b','B',0,0,225,'B'	;,30h
  4385 00003A5A 6E4EA4A5764E        <1> 	db 'n','N',164,165,'v','N'	;,31h
  4386 00003A60 6D4D0000E64D        <1> 	db 'm','M',0,0,230,'M'		;,32h
  4387 00003A66 2C3CF3AE0000        <1> 	db ',','<',243,174,0,0	;,33h
  4388 00003A6C 2E3EF2AF0000        <1> 	db '.','>',242,175,0,0	;,34h
  4389 00003A72 2F3FA8000000        <1> 	db '/','?',168,0,0,0	;,35h
  4390 00003A78 000000000000        <1> 	db 0,0,0,0,0,0			;,36h
  4391 00003A7E 000000000000        <1> 	db 0,0,0,0,0,0			;,37h
  4392 00003A84 000000000000        <1> 	db 0,0,0,0,0,0			;,38h
  4393 00003A8A 202000000000        <1> 	db ' ',' ',0,0,0,0		;,39h
  4394                              <1> noscan:
  4395                                      %include 'source/gui.asm'
  4396                              <1> guiclear:
  4397 00003A90 8B3D[BB710000]      <1> 	mov edi, [physbaseptr]
  4398 00003A96 668B15[AB4A0000]    <1> 	mov dx, [resolutionx]
  4399 00003A9D 668B0D[A94A0000]    <1> 	mov cx, [resolutiony]
  4400 00003AA4 66A1[CD3A0000]      <1> 	mov ax, [background]
  4401                              <1> guiclearloop:
  4402 00003AAA 668907              <1> 	mov [edi], ax
  4403 00003AAD 81C702000000        <1> 	add edi, 2
  4404 00003AB3 664A                <1> 	dec dx
  4405 00003AB5 6681FA0000          <1> 	cmp dx, 0
  4406 00003ABA 77EE                <1> 	ja guiclearloop
  4407 00003ABC 6649                <1> 	dec cx
  4408 00003ABE 668B15[AB4A0000]    <1> 	mov dx, [resolutionx]
  4409 00003AC5 6681F90000          <1> 	cmp cx, 0
  4410 00003ACA 77DE                <1> 	ja guiclearloop
  4411 00003ACC C3                  <1> 	ret
  4412                              <1> 
  4413 00003ACD CF7B                <1> background dw 0111101111001111b
  4414                              <1> 
  4415                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  4416 00003ACF B800000000          <1> 	mov eax, 0
  4417 00003AD4 BB00000000          <1> 	mov ebx, 0
  4418 00003AD9 B900000000          <1> 	mov ecx, 0
  4419 00003ADE BA00000000          <1> 	mov edx, 0
  4420 00003AE3 8B3D[BB710000]      <1> 	mov edi, [physbaseptr]
  4421 00003AE9 668B15[AB4A0000]    <1> 	mov dx, [resolutionx]
  4422 00003AF0 668B0D[A94A0000]    <1> 	mov cx, [resolutiony]
  4423 00003AF7 668B1D[CD3A0000]    <1> 	mov bx, [background]
  4424                              <1> guiclearloop2:
  4425 00003AFE 66891F              <1> 	mov [edi], bx
  4426 00003B01 81C702000000        <1> 	add edi, 2
  4427 00003B07 664A                <1> 	dec dx
  4428 00003B09 6681FA0000          <1> 	cmp dx, 0
  4429 00003B0E 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  4430 00003B14 6649                <1> 	dec cx
  4431 00003B16 668B15[AB4A0000]    <1> 	mov dx, [resolutionx]
  4432 00003B1D 6681F90000          <1> 	cmp cx, 0
  4433 00003B22 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  4434 00003B28 C605[293C0000]01    <1> 	mov byte [guion], 1
  4435 00003B2F C605[283C0000]00    <1> 	mov byte [mouseselecton], 0
  4436 00003B36 B800000000          <1> 	mov eax, 0
  4437 00003B3B BB00000000          <1> 	mov ebx, 0
  4438 00003B40 B900000000          <1> 	mov ecx, 0
  4439 00003B45 BA00000000          <1> 	mov edx, 0
  4440                              <1> 	
  4441 00003B4A BE[9F4D0000]        <1> 	mov esi, pacmsg
  4442 00003B4F 66B80000            <1> 	mov ax, 0
  4443 00003B53 BB00000000          <1> 	mov ebx, 0
  4444 00003B58 66B99000            <1> 	mov cx, 144
  4445 00003B5C 66BA0400            <1> 	mov dx, 4
  4446 00003B60 E8A30A0000          <1> 	call showstring
  4447                              <1> 	
  4448 00003B65 BE[B54E0000]        <1> 	mov esi, interneticon
  4449 00003B6A 66B80000            <1> 	mov ax, 0
  4450 00003B6E BB[144E0000]        <1> 	mov ebx, noie
  4451 00003B73 66B91800            <1> 	mov cx, 24
  4452 00003B77 66BA0400            <1> 	mov dx, 4
  4453 00003B7B E8500E0000          <1> 	call showicon
  4454                              <1> 	
  4455 00003B80 BE[374F0000]        <1> 	mov esi, wordicon
  4456 00003B85 66B80000            <1> 	mov ax, 0
  4457 00003B89 BB00000000          <1> 	mov ebx, 0
  4458 00003B8E 66B91800            <1> 	mov cx, 24
  4459 00003B92 66BA3000            <1> 	mov dx, 48
  4460 00003B96 E8350E0000          <1> 	call showicon
  4461                              <1> 	
  4462 00003B9B BE[B94F0000]        <1> 	mov esi, pacmanpellet
  4463 00003BA0 66B80000            <1> 	mov ax, 0
  4464 00003BA4 BB00000000          <1> 	mov ebx, 0
  4465 00003BA9 66B94000            <1> 	mov cx, 64
  4466 00003BAD 66BA0400            <1> 	mov dx, 4
  4467 00003BB1 E81A0E0000          <1> 	call showicon
  4468                              <1> 	
  4469 00003BB6 BE[BD500000]        <1> 	mov esi, pacman
  4470 00003BBB 66B80000            <1> 	mov ax, 0
  4471 00003BBF BB[F94D0000]        <1> 	mov ebx, pacmannomnom
  4472 00003BC4 66B94000            <1> 	mov cx, 64
  4473 00003BC8 66BA3000            <1> 	mov dx, 48
  4474 00003BCC E8FF0D0000          <1> 	call showicon
  4475                              <1> 	
  4476 00003BD1 BE[3B500000]        <1> 	mov esi, ghostie
  4477 00003BD6 66B80000            <1> 	mov ax, 0
  4478 00003BDA BB[DE4D0000]        <1> 	mov ebx, boo
  4479 00003BDF 66B96C00            <1> 	mov cx, 108
  4480 00003BE3 66BA0400            <1> 	mov dx, 4
  4481 00003BE7 E8E40D0000          <1> 	call showicon
  4482                              <1> 
  4483 00003BEC BE[8B4D0000]        <1> 	mov esi, start
  4484 00003BF1 668B0D[A94A0000]    <1> 	mov cx, [resolutiony]
  4485 00003BF8 6681E91000          <1> 	sub cx, 16
  4486 00003BFD 66BA0200            <1> 	mov dx, 2
  4487 00003C01 B400                <1> 	mov ah, 0
  4488 00003C03 B010                <1> 	mov al, 00010000b
  4489 00003C05 BB[624E0000]        <1> 	mov ebx, winblows
  4490 00003C0A E8F9090000          <1> 	call showstring
  4491                              <1> 	
  4492 00003C0F E895FAFFFF          <1> 	call cursorgui
  4493                              <1> guistart:
  4494 00003C14 E8CBF8FFFF          <1> 	call guistartin
  4495 00003C19 C605[223C0000]00    <1> 	mov byte [copygui], 0
  4496 00003C20 EBF2                <1> 	jmp guistart
  4497                              <1> 	
  4498                              <1> ;guicopy:	;;for double buffering
  4499                              <1> ;	mov byte [copygui], 1
  4500                              <1> ;	mov edi, [offscreenmemoffset]
  4501                              <1> ;	mov edx, 0
  4502                              <1> ;	mov ecx, 0
  4503                              <1> ;	mov dx, [mousecursorposition]
  4504                              <1> ;	mov cx, [mousecursorposition + 2]
  4505                              <1> ;	add edi, edx
  4506                              <1> ;	mov dx, [resolutionx2]
  4507                              <1> ;	inc cx
  4508                              <1> ;guicp2:
  4509                              <1> ;	add edi, edx
  4510                              <1> ;	dec cx
  4511                              <1> ;	cmp cx, 0
  4512                              <1> ;	jne guicp2
  4513                              <1> ;	sub edi, edx
  4514                              <1> ;	mov [cursorloc], edi
  4515                              <1> ;	mov ebx, cursorbmp
  4516                              <1> ;	mov cx, [resolutiony]
  4517                              <1> ;	rol ecx, 16
  4518                              <1> ;	mov cx, [resolutionx]
  4519                              <1> ;	mov esi, [physbaseptr]
  4520                              <1> ;	mov edi, [offscreenmemoffset]
  4521                              <1> ;guicp1:
  4522                              <1> ;	mov ax, [esi]
  4523                              <1> ;	mov [edi], ax
  4524                              <1> ;	add esi, 2
  4525                              <1> ;	add edi, 2
  4526                              <1> ;	cmp edi, [cursorloc]
  4527                              <1> ;	je copycursor
  4528                              <1> ;dncopycursor:
  4529                              <1> ;	dec cx
  4530                              <1> ;	cmp cx, 0
  4531                              <1> ;	jne guicp1
  4532                              <1> ;	mov cx, [resolutionx]
  4533                              <1> ;	rol ecx, 16
  4534                              <1> ;	dec cx
  4535                              <1> ;	cmp cx, 0
  4536                              <1> ;	rol ecx, 16
  4537                              <1> ;	jne guicp1
  4538                              <1> ;	mov byte [copygui], 0
  4539                              <1> ;	ret
  4540                              <1> ;copycursor:
  4541                              <1> ;	cmp ebx, cursorbmpend
  4542                              <1> ;	jae dncopycursor
  4543                              <1> ;	mov dx, [resolutionx2]
  4544                              <1> ;	add edi, edx
  4545                              <1> ;	mov [cursorloc], edi
  4546                              <1> ;	sub edi, edx
  4547                              <1> ;	dec ebx
  4548                              <1> ;	sub edi, 2
  4549                              <1> ;	sub esi, 2
  4550                              <1> ;	mov dx, 9
  4551                              <1> ;curscplp:
  4552                              <1> ;	inc ebx
  4553                              <1> ;	add esi, 2
  4554                              <1> ;	add edi, 2
  4555                              <1> ;	mov ax, [esi]
  4556                              <1> ;	mov [edi], ax
  4557                              <1> ;	mov al, [ebx]
  4558                              <1> ;	cmp al, 0
  4559                              <1> ;	je curscplp2
  4560                              <1> ;	mov word [edi], 1110011110011100b
  4561                              <1> ;curscplp2:
  4562                              <1> ;	dec cx
  4563                              <1> ;	cmp cx, 0
  4564                              <1> ;	je dncopycursor
  4565                              <1> ;	dec dx
  4566                              <1> ;	cmp dx, 0
  4567                              <1> ;	jne curscplp
  4568                              <1> ;	jmp dncopycursor
  4569                              <1> 	
  4570                              <1> 	
  4571                              <1> ;cursorloc: dd 0
  4572                              <1> 		
  4573                              <1> ;nextimage:	
  4574                              <1> ;	call guiclear
  4575                              <1> ;	mov esi, [bmpend]
  4576                              <1> ;	mov eax, 0
  4577                              <1> ;	mov ebx, 0
  4578                              <1> ;	mov ecx, 0
  4579                              <1> ;	mov edx, 0
  4580                              <1> ;	call showbmp
  4581                              <1> ;	jmp guistartin
  4582                              <1> 		
  4583 00003C22 00                  <1> copygui db 0
  4584 00003C23 00                  <1> graphicsset db 0
  4585 00003C24 0000                <1> graphicspos db 0,0
  4586 00003C26 00                  <1> showcursorfonton db 0
  4587 00003C27 00                  <1> savefonton db 0
  4588 00003C28 00                  <1> mouseselecton db 0
  4589 00003C29 00                  <1> guion db 0
  4590                              <1> 
  4591                              <1> 		
  4592                              <1> clearmousecursor:
  4593 00003C2A BE[CD3A0000]        <1> 		mov esi, background
  4594 00003C2F 8B3D[BB710000]      <1> 		mov edi, [physbaseptr]
  4595 00003C35 BA00000000          <1> 		mov edx, 0
  4596 00003C3A B900000000          <1> 		mov ecx, 0
  4597 00003C3F 668B15[8F380000]    <1> 		mov dx, [lastmouseposition]
  4598 00003C46 668B0D[91380000]    <1> 		mov cx, [lastmouseposition + 2]
  4599 00003C4D 01D7                <1> 		add edi, edx
  4600 00003C4F BA00000000          <1> 		mov edx, 0
  4601 00003C54 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  4602 00003C5B 6681F90000          <1> 		cmp cx, 0
  4603 00003C60 740B                <1> 		je noyclr
  4604 00003C62 01D7                <1> yclr:	add edi, edx
  4605 00003C64 6649                <1> 		dec cx
  4606 00003C66 6681F90000          <1> 		cmp cx, 0
  4607 00003C6B 75F5                <1> 		jne yclr
  4608 00003C6D 668B06              <1> noyclr:	mov ax, [esi]
  4609 00003C70 C1C010              <1> 		rol eax, 16
  4610 00003C73 668B06              <1> 		mov ax, [esi]
  4611 00003C76 8907                <1> 		mov [edi], eax
  4612 00003C78 894704              <1> 		mov [edi + 4], eax
  4613 00003C7B 894708              <1> 		mov [edi + 8], eax
  4614 00003C7E 89470C              <1> 		mov [edi + 12], eax
  4615 00003C81 01D7                <1> 		add edi, edx
  4616 00003C83 6641                <1> 		inc cx
  4617 00003C85 6681F91000          <1> 		cmp cx, 16
  4618 00003C8A 72E1                <1> 		jb noyclr
  4619 00003C8C C3                  <1> 		ret
  4620                              <1> 
  4621                              <1> switchmousepos:		;;switch were the mouse is located
  4622 00003C8D BE[00120000]        <1> 		mov esi, mousecolorbuf
  4623 00003C92 8B3D[BB710000]      <1> 		mov edi, [physbaseptr]
  4624 00003C98 BA00000000          <1> 		mov edx, 0
  4625 00003C9D B900000000          <1> 		mov ecx, 0
  4626 00003CA2 668B15[8F380000]    <1> 		mov dx, [lastmouseposition]
  4627 00003CA9 668B0D[91380000]    <1> 		mov cx, [lastmouseposition + 2]
  4628 00003CB0 01D7                <1> 		add edi, edx
  4629 00003CB2 BA00000000          <1> 		mov edx, 0
  4630 00003CB7 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  4631 00003CBE 6681F90000          <1> 		cmp cx, 0
  4632 00003CC3 740B                <1> 		je noswmsy
  4633 00003CC5 01D7                <1> swmsy:		add edi, edx
  4634 00003CC7 6649                <1> 		dec cx
  4635 00003CC9 6681F90000          <1> 		cmp cx, 0
  4636 00003CCE 75F5                <1> 		jne swmsy
  4637 00003CD0 8B06                <1> noswmsy:	mov eax, [esi]
  4638 00003CD2 8B5E04              <1> 		mov ebx, [esi + 4]
  4639 00003CD5 8907                <1> 		mov [edi], eax
  4640 00003CD7 895F04              <1> 		mov [edi + 4], ebx
  4641 00003CDA 8B4608              <1> 		mov eax, [esi + 8]
  4642 00003CDD 8B5E0C              <1> 		mov ebx, [esi + 12]
  4643 00003CE0 894708              <1> 		mov [edi + 8], eax
  4644 00003CE3 895F0C              <1> 		mov [edi + 12], ebx
  4645 00003CE6 01D7                <1> 		add edi, edx
  4646 00003CE8 81C610000000        <1> 		add esi, 16
  4647 00003CEE 81FE[00130000]      <1> 		cmp esi, mcolorend
  4648 00003CF4 72DA                <1> 		jb noswmsy
  4649                              <1> 		
  4650                              <1> switchmousepos2:
  4651 00003CF6 BE[00120000]        <1> 		mov esi, mousecolorbuf
  4652 00003CFB 8B3D[BB710000]      <1> 		mov edi, [physbaseptr]
  4653 00003D01 BA00000000          <1> 		mov edx, 0
  4654 00003D06 B900000000          <1> 		mov ecx, 0
  4655 00003D0B 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4656 00003D12 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4657 00003D19 01D7                <1> 		add edi, edx
  4658 00003D1B BA00000000          <1> 		mov edx, 0
  4659 00003D20 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  4660 00003D27 6681F90000          <1> 		cmp cx, 0
  4661 00003D2C 740B                <1> 		je noswmsy2
  4662 00003D2E 01D7                <1> swmsy2:		add edi, edx
  4663 00003D30 6649                <1> 		dec cx
  4664 00003D32 6681F90000          <1> 		cmp cx, 0
  4665 00003D37 75F5                <1> 		jne swmsy2
  4666 00003D39 8B07                <1> noswmsy2:	mov eax, [edi]
  4667 00003D3B 8B5F04              <1> 		mov ebx, [edi + 4]
  4668 00003D3E 8906                <1> 		mov [esi], eax
  4669 00003D40 895E04              <1> 		mov [esi + 4], ebx
  4670 00003D43 8B4708              <1> 		mov eax, [edi + 8]
  4671 00003D46 8B5F0C              <1> 		mov ebx, [edi + 12]
  4672 00003D49 894608              <1> 		mov [esi + 8], eax
  4673 00003D4C 895E0C              <1> 		mov [esi + 12], ebx
  4674 00003D4F 01D7                <1> 		add edi, edx
  4675 00003D51 81C610000000        <1> 		add esi, 16
  4676 00003D57 81FE[00130000]      <1> 		cmp esi, mcolorend
  4677 00003D5D 72DA                <1> 		jb noswmsy2
  4678 00003D5F C3                  <1> 		ret
  4679                              <1> 
  4680 00003D60 00                  <1> pbutton db 0
  4681 00003D61 00                  <1> pLBUTTON db 0
  4682 00003D62 00                  <1> pRBUTTON db 0
  4683 00003D63 00000000            <1> dragging dw 0,0
  4684 00003D67 0000000000000000    <1> lastpos dw 0,0,0,0
  4685 00003D6F 00000000            <1> colorbuf dw 0,0
  4686                              <1> 	
  4687                              <1> 	clickicon:
  4688 00003D73 B001                <1> 		mov al, 1
  4689 00003D75 A2[603D0000]        <1> 		mov [pbutton], al
  4690 00003D7A A0[613D0000]        <1> 		mov al, [pLBUTTON]
  4691 00003D7F 2205[B5340000]      <1> 		and al, [LBUTTON]
  4692 00003D85 8A25[623D0000]      <1> 		mov ah, [pRBUTTON]
  4693 00003D8B 2225[B6340000]      <1> 		and ah, [RBUTTON]
  4694 00003D91 08E0                <1> 		or al, ah
  4695 00003D93 3C00                <1> 		cmp al, 0
  4696 00003D95 741B                <1> 		je nodragclick
  4697 00003D97 813D[633D0000]0100- <1> 		cmp dword [dragging], 1
  4698 00003D9F 0000                <1>
  4699 00003DA1 732D                <1> 		jae dragclick
  4700 00003DA3 C705[633D0000]0100- <1> 		mov dword [dragging], 1
  4701 00003DAB 0000                <1>
  4702 00003DAD E91E000000          <1> 		jmp dragclick
  4703                              <1> 	nodragclick:
  4704 00003DB2 C705[633D0000]0000- <1> 		mov dword [dragging], 0
  4705 00003DBA 0000                <1>
  4706 00003DBC A0[B5340000]        <1> 		mov al, [LBUTTON]
  4707 00003DC1 A2[613D0000]        <1> 		mov [pLBUTTON], al
  4708 00003DC6 A0[B6340000]        <1> 		mov al, [RBUTTON]
  4709 00003DCB A2[623D0000]        <1> 		mov [pRBUTTON], al
  4710                              <1> 	dragclick:
  4711 00003DD0 66B80000            <1> 		mov ax, 0
  4712 00003DD4 BE[00100000]        <1> 		mov esi, graphicstable
  4713 00003DD9 C705[D94D0000]0000- <1> 		mov dword [codepointer], 0
  4714 00003DE1 0000                <1>
  4715                              <1> 	clicon2:
  4716 00003DE3 BA00000000          <1> 		mov edx, 0
  4717 00003DE8 B900000000          <1> 		mov ecx, 0
  4718 00003DED 66813E0100          <1> 		cmp word [esi], 1
  4719 00003DF2 0F841B000000        <1> 		je near iconselect
  4720 00003DF8 66813E0200          <1> 		cmp word [esi], 2
  4721 00003DFD 0F8472010000        <1> 		je near textselected
  4722 00003E03 66813E0300          <1> 		cmp word [esi], 3
  4723 00003E08 0F84C7020000        <1> 		je near windowselect
  4724 00003E0E E90B040000          <1> 		jmp nexticonsel
  4725                              <1> 	iconselect:
  4726 00003E13 668B5606            <1> 		mov dx, [esi + 6]
  4727 00003E17 6689D0              <1> 		mov ax, dx
  4728 00003E1A 668B4E08            <1> 		mov cx, [esi + 8]
  4729 00003E1E 6689CB              <1> 		mov bx, cx
  4730 00003E21 6681C32000          <1> 		add bx, 32
  4731 00003E26 6601D0              <1> 		add ax, dx
  4732 00003E29 813D[633D0000]0100- <1> 		cmp dword [dragging], 1
  4733 00003E31 0000                <1>
  4734 00003E33 746F                <1> 		je dragicon
  4735 00003E35 813D[633D0000]0000- <1> 		cmp dword [dragging], 0
  4736 00003E3D 0000                <1>
  4737 00003E3F 7411                <1> 		je nodragiconcheck
  4738 00003E41 3935[633D0000]      <1> 		cmp dword [dragging], esi
  4739 00003E47 0F85D1030000        <1> 		jne near nexticonsel
  4740 00003E4D E952000000          <1> 		jmp dragicon
  4741                              <1> 	nodragiconcheck:
  4742 00003E52 663905[93380000]    <1> 		cmp [mousecursorposition], ax
  4743 00003E59 0F82BF030000        <1> 		jb near nexticonsel
  4744 00003E5F 66054000            <1> 		add ax, 64
  4745 00003E63 663905[93380000]    <1> 		cmp [mousecursorposition], ax
  4746 00003E6A 0F87AE030000        <1> 		ja near nexticonsel
  4747 00003E70 6629D0              <1> 		sub ax, dx
  4748 00003E73 66390D[95380000]    <1> 		cmp [mousecursorposition + 2], cx
  4749 00003E7A 0F829E030000        <1> 		jb near nexticonsel
  4750 00003E80 66391D[95380000]    <1> 		cmp [mousecursorposition + 2], bx
  4751 00003E87 0F8791030000        <1> 		ja near nexticonsel
  4752 00003E8D 668B460A            <1> 		mov ax, [esi + 10]
  4753 00003E91 66250100            <1> 		and ax, 1
  4754 00003E95 663D0100            <1> 		cmp ax, 1
  4755 00003E99 0F84B6000000        <1> 		je near unselecticon
  4756 00003E9F E98D000000          <1> 		jmp nodragicon
  4757                              <1> 	dragicon:
  4758 00003EA4 663905[8F380000]    <1> 		cmp [lastmouseposition], ax
  4759 00003EAB 0F826D030000        <1> 		jb near nexticonsel
  4760 00003EB1 66054000            <1> 		add ax, 64
  4761 00003EB5 663905[8F380000]    <1> 		cmp [lastmouseposition], ax
  4762 00003EBC 0F875C030000        <1> 		ja near nexticonsel
  4763 00003EC2 6629D0              <1> 		sub ax, dx
  4764 00003EC5 66390D[91380000]    <1> 		cmp [lastmouseposition + 2], cx
  4765 00003ECC 0F824C030000        <1> 		jb near nexticonsel
  4766 00003ED2 66391D[91380000]    <1> 		cmp [lastmouseposition + 2], bx
  4767 00003ED9 0F873F030000        <1> 		ja near nexticonsel
  4768 00003EDF 668B460A            <1> 		mov ax, [esi + 10]
  4769 00003EE3 2410                <1> 		and al, 00010000b
  4770 00003EE5 3C10                <1> 		cmp al, 00010000b
  4771 00003EE7 7448                <1> 		je nodragicon
  4772 00003EE9 8935[633D0000]      <1> 		mov [dragging], esi
  4773 00003EEF 66D1E2              <1> 		shl dx, 1
  4774 00003EF2 662B15[8F380000]    <1> 		sub dx, [lastmouseposition]
  4775 00003EF9 660315[93380000]    <1> 		add dx, [mousecursorposition]
  4776 00003F00 66D1EA              <1> 		shr dx, 1
  4777 00003F03 66030D[95380000]    <1> 		add cx, [mousecursorposition + 2]
  4778 00003F0A 662B0D[91380000]    <1> 		sub cx, [lastmouseposition + 2]
  4779 00003F11 663B15[AD4A0000]    <1> 		cmp dx, [resolutionx2]
  4780 00003F18 7607                <1> 		jbe chkyresdrgicn
  4781 00003F1A 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4782                              <1> 	chkyresdrgicn:
  4783 00003F21 663B0D[A94A0000]    <1> 		cmp cx, [resolutiony]
  4784 00003F28 7607                <1> 		jbe nodragicon
  4785 00003F2A 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4786                              <1> 	nodragicon:
  4787 00003F31 66814E0A0100        <1> 		or word [esi + 10], 1
  4788 00003F37 8B5E0C              <1> 		mov ebx, [esi + 12]
  4789 00003F3A 668B460A            <1> 		mov ax, [esi + 10]
  4790 00003F3E 8B7602              <1> 		mov esi, [esi + 2]
  4791 00003F41 C705[D94D0000]0000- <1> 		mov dword [codepointer], 0
  4792 00003F49 0000                <1>
  4793 00003F4B E8800A0000          <1> 		call showicon
  4794 00003F50 E9E2020000          <1> 		jmp doneiconsel
  4795                              <1> 	unselecticon:
  4796 00003F55 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4797 00003F5B 8B5E0C              <1> 		mov ebx, [esi + 12]
  4798 00003F5E 668B460A            <1> 		mov ax, [esi + 10]
  4799 00003F62 8B7602              <1> 		mov esi, [esi + 2]
  4800 00003F65 891D[D94D0000]      <1> 		mov [codepointer], ebx
  4801 00003F6B E8600A0000          <1> 		call showicon
  4802 00003F70 E9C2020000          <1> 		jmp doneiconsel
  4803                              <1> 	textselected:
  4804 00003F75 8B5E02              <1> 		mov ebx, [esi + 2]
  4805 00003F78 668B5606            <1> 		mov dx, [esi + 6]
  4806 00003F7C 6689D0              <1> 		mov ax, dx
  4807 00003F7F 668B4E08            <1> 		mov cx, [esi + 8]
  4808                              <1> 	lengthtesttext:
  4809 00003F83 803B00              <1> 		cmp byte [ebx], 0
  4810 00003F86 7407                <1> 		je donetesttextlength
  4811 00003F88 43                  <1> 		inc ebx
  4812 00003F89 66051000            <1> 		add ax, 16
  4813 00003F8D EBF4                <1> 		jmp lengthtesttext
  4814                              <1> 	donetesttextlength:
  4815 00003F8F 6689CB              <1> 		mov bx, cx
  4816 00003F92 6681C30F00          <1> 		add bx, 15
  4817 00003F97 813D[633D0000]0100- <1> 		cmp dword [dragging], 1
  4818 00003F9F 0000                <1>
  4819 00003FA1 7468                <1> 		je dragtext
  4820 00003FA3 813D[633D0000]0000- <1> 		cmp dword [dragging], 0
  4821 00003FAB 0000                <1>
  4822 00003FAD 7411                <1> 		je nodragtextcheck
  4823 00003FAF 3935[633D0000]      <1> 		cmp dword [dragging], esi
  4824 00003FB5 0F8563020000        <1> 		jne near nexticonsel
  4825 00003FBB E94B000000          <1> 		jmp dragtext
  4826                              <1> 	nodragtextcheck:
  4827 00003FC0 663915[93380000]    <1> 		cmp [mousecursorposition], dx
  4828 00003FC7 0F8251020000        <1> 		jb near nexticonsel
  4829 00003FCD 663905[93380000]    <1> 		cmp [mousecursorposition], ax
  4830 00003FD4 0F8744020000        <1> 		ja near nexticonsel
  4831 00003FDA 66390D[95380000]    <1> 		cmp [mousecursorposition + 2], cx
  4832 00003FE1 0F8237020000        <1> 		jb near nexticonsel
  4833 00003FE7 66391D[95380000]    <1> 		cmp [mousecursorposition + 2], bx
  4834 00003FEE 0F872A020000        <1> 		ja near nexticonsel
  4835 00003FF4 668B460A            <1> 		mov ax, [esi + 10]
  4836 00003FF8 66250100            <1> 		and ax, 1
  4837 00003FFC 663D0100            <1> 		cmp ax, 1
  4838 00004000 0F84AB000000        <1> 		je near unselecttext
  4839 00004006 E986000000          <1> 		jmp nodragtext
  4840                              <1> 	dragtext:
  4841 0000400B 663915[8F380000]    <1> 		cmp [lastmouseposition], dx
  4842 00004012 0F8206020000        <1> 		jb near nexticonsel
  4843 00004018 663905[8F380000]    <1> 		cmp [lastmouseposition], ax
  4844 0000401F 0F87F9010000        <1> 		ja near nexticonsel
  4845 00004025 66390D[91380000]    <1> 		cmp [lastmouseposition + 2], cx
  4846 0000402C 0F82EC010000        <1> 		jb near nexticonsel
  4847 00004032 66391D[91380000]    <1> 		cmp [lastmouseposition + 2], bx
  4848 00004039 0F87DF010000        <1> 		ja near nexticonsel
  4849 0000403F 668B460A            <1> 		mov ax, [esi + 10]
  4850 00004043 2410                <1> 		and al, 00010000b
  4851 00004045 663D1000            <1> 		cmp ax, 00010000b
  4852 00004049 0F8442000000        <1> 		je near nodragtext
  4853 0000404F 8935[633D0000]      <1> 		mov [dragging], esi
  4854 00004055 662B15[8F380000]    <1> 		sub dx, [lastmouseposition]
  4855 0000405C 660315[93380000]    <1> 		add dx, [mousecursorposition]
  4856 00004063 66030D[95380000]    <1> 		add cx, [mousecursorposition + 2]
  4857 0000406A 662B0D[91380000]    <1> 		sub cx, [lastmouseposition + 2]
  4858 00004071 663B15[AD4A0000]    <1> 		cmp dx, [resolutionx2]
  4859 00004078 7607                <1> 		jbe chkyresdrgtxt
  4860 0000407A 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4861                              <1> 	chkyresdrgtxt:
  4862 00004081 663B0D[A94A0000]    <1> 		cmp cx, [resolutiony]
  4863 00004088 7607                <1> 		jbe nodragtext
  4864 0000408A 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4865                              <1> 	nodragtext:
  4866 00004091 66814E0A0100        <1> 		or word [esi + 10], 1
  4867 00004097 8B5E0C              <1> 		mov ebx, [esi + 12]
  4868 0000409A 891D[D94D0000]      <1> 		mov [codepointer], ebx
  4869 000040A0 668B460A            <1> 		mov ax, [esi + 10]
  4870 000040A4 8B7602              <1> 		mov esi, [esi + 2]
  4871 000040A7 E85C050000          <1> 		call showstring
  4872 000040AC E986010000          <1> 		jmp doneiconsel
  4873                              <1> 	unselecttext:
  4874 000040B1 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4875 000040B7 8B5E0C              <1> 		mov ebx, [esi + 12]
  4876 000040BA 668B460A            <1> 		mov ax, [esi + 10]
  4877 000040BE 8B7602              <1> 		mov esi, [esi + 2]
  4878 000040C1 C705[D94D0000]0000- <1> 		mov dword [codepointer], 0
  4879 000040C9 0000                <1>
  4880 000040CB E838050000          <1> 		call showstring
  4881 000040D0 E962010000          <1> 		jmp doneiconsel
  4882                              <1> windowselect:
  4883 000040D5 8B7E02              <1> 		mov edi, [esi + 2]
  4884 000040D8 668B5606            <1> 		mov dx, [esi + 6]
  4885 000040DC 6689D0              <1> 		mov ax, dx
  4886 000040DF 668B4E08            <1> 		mov cx, [esi + 8]
  4887 000040E3 6689CB              <1> 		mov bx, cx
  4888 000040E6 6681C31000          <1> 		add bx, 16
  4889 000040EB 813D[633D0000]0100- <1> 		cmp dword [dragging], 1
  4890 000040F3 0000                <1>
  4891 000040F5 746D                <1> 		je dragwin
  4892 000040F7 813D[633D0000]0000- <1> 		cmp dword [dragging], 0
  4893 000040FF 0000                <1>
  4894 00004101 7411                <1> 		je nodragwincheck
  4895 00004103 3935[633D0000]      <1> 		cmp dword [dragging], esi
  4896 00004109 0F850F010000        <1> 		jne near nexticonsel
  4897 0000410F E950000000          <1> 		jmp dragwin
  4898                              <1> 	nodragwincheck:
  4899 00004114 663905[93380000]    <1> 		cmp [mousecursorposition], ax
  4900 0000411B 0F82FD000000        <1> 		jb near nexticonsel
  4901 00004121 660307              <1> 		add ax, [edi]
  4902 00004124 660307              <1> 		add ax, [edi]
  4903 00004127 663905[93380000]    <1> 		cmp [mousecursorposition], ax
  4904 0000412E 0F87EA000000        <1> 		ja near nexticonsel
  4905 00004134 66390D[95380000]    <1> 		cmp [mousecursorposition + 2], cx
  4906 0000413B 0F82DD000000        <1> 		jb near nexticonsel
  4907 00004141 66391D[95380000]    <1> 		cmp [mousecursorposition + 2], bx
  4908 00004148 0F87D0000000        <1> 		ja near nexticonsel
  4909 0000414E 662D1400            <1> 		sub ax, 20
  4910 00004152 663905[93380000]    <1> 		cmp [mousecursorposition], ax
  4911 00004159 0F8795000000        <1> 		ja near killwin
  4912 0000415F E97C000000          <1> 		jmp nodragwin
  4913                              <1> 	dragwin:
  4914 00004164 663905[8F380000]    <1> 		cmp [lastmouseposition], ax
  4915 0000416B 0F82AD000000        <1> 		jb near nexticonsel
  4916 00004171 660307              <1> 		add ax, [edi]
  4917 00004174 660307              <1> 		add ax, [edi]
  4918 00004177 663905[8F380000]    <1> 		cmp [lastmouseposition], ax
  4919 0000417E 0F879A000000        <1> 		ja near nexticonsel
  4920 00004184 66390D[91380000]    <1> 		cmp [lastmouseposition + 2], cx
  4921 0000418B 0F828D000000        <1> 		jb near nexticonsel
  4922 00004191 66391D[91380000]    <1> 		cmp [lastmouseposition + 2], bx
  4923 00004198 0F8780000000        <1> 		ja near nexticonsel
  4924 0000419E 8935[633D0000]      <1> 		mov [dragging], esi
  4925 000041A4 662B15[8F380000]    <1> 		sub dx, [lastmouseposition]
  4926 000041AB 660315[93380000]    <1> 		add dx, [mousecursorposition]
  4927 000041B2 66030D[95380000]    <1> 		add cx, [mousecursorposition + 2]
  4928 000041B9 662B0D[91380000]    <1> 		sub cx, [lastmouseposition + 2]
  4929 000041C0 663B15[AD4A0000]    <1> 		cmp dx, [resolutionx2]
  4930 000041C7 7607                <1> 		jbe chkyresdrgwin
  4931 000041C9 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4932                              <1> 	chkyresdrgwin:
  4933 000041D0 663B0D[A94A0000]    <1> 		cmp cx, [resolutiony]
  4934 000041D7 7607                <1> 		jbe nodragwin
  4935 000041D9 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4936                              <1> 	nodragwin:
  4937 000041E0 8B5E0C              <1> 		mov ebx, [esi + 12]
  4938 000041E3 668B460A            <1> 		mov ax, [esi + 10]
  4939 000041E7 8B7602              <1> 		mov esi, [esi + 2]
  4940 000041EA E87B040000          <1> 		call showwindow
  4941 000041EF E943000000          <1> 		jmp doneiconsel
  4942                              <1> 	killwin:
  4943 000041F4 66C7060000          <1> 		mov word [esi], 0
  4944 000041F9 C705[F9030000]0000- <1> 		mov dword [user2codepoint], 0
  4945 00004201 0000                <1>
  4946 00004203 C605[9F150000]00    <1> 		mov byte [termguion], 0
  4947 0000420A E881F8FFFF          <1> 		call guiclear
  4948 0000420F E8AD000000          <1> 		call reloadallgraphics
  4949 00004214 E9FBF9FFFF          <1> 		jmp guistart
  4950 00004219 E93A000000          <1> 		jmp doneiconsel2
  4951                              <1> 	nexticonsel:
  4952 0000421E 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4953 00004224 81C610000000        <1> 		add esi, 16
  4954 0000422A 81FE[00120000]      <1> 		cmp esi, graphicstableend
  4955 00004230 7305                <1> 		jae doneiconsel
  4956 00004232 E9ACFBFFFF          <1> 		jmp clicon2
  4957                              <1> 	doneiconsel:
  4958 00004237 813D[633D0000]0100- <1> 		cmp dword [dragging], 1
  4959 0000423F 0000                <1>
  4960 00004241 7315                <1> 		jae doneiconsel2
  4961 00004243 813D[D94D0000]0000- <1> 		cmp dword [codepointer], 0
  4962 0000424B 0000                <1>
  4963 0000424D 7409                <1> 		je doneiconsel2
  4964 0000424F 8B1D[D94D0000]      <1> 		mov ebx, [codepointer]
  4965 00004255 FFD3                <1> 		call ebx 
  4966 00004257 C3                  <1> 		ret
  4967                              <1> 	doneiconsel2:
  4968 00004258 A0[B5340000]        <1> 		mov al, [LBUTTON]
  4969 0000425D A2[613D0000]        <1> 		mov [pLBUTTON], al
  4970 00004262 A0[B6340000]        <1> 		mov al, [RBUTTON]
  4971 00004267 A2[623D0000]        <1> 		mov [pRBUTTON], al
  4972 0000426C 66813D[633D0000]01- <1> 		cmp word [dragging], 1
  4973 00004274 00                  <1>
  4974 00004275 0F860A000000        <1> 		jbe near noreloadgraphicsclick
  4975 0000427B E8AAF9FFFF          <1> call clearmousecursor
  4976 00004280 E83C000000          <1> call reloadallgraphics
  4977                              <1> noreloadgraphicsclick:
  4978 00004285 B900000000          <1> 		mov ecx, 0
  4979 0000428A BA00000000          <1> 		mov edx, 0
  4980 0000428F B400                <1> 		mov ah, 0
  4981 00004291 B0FE                <1> 		mov al, 254
  4982 00004293 668B15[93380000]    <1> 		mov dx, [mousecursorposition]
  4983 0000429A 668B0D[95380000]    <1> 		mov cx, [mousecursorposition + 2]
  4984 000042A1 66BBE738            <1> 		mov bx, 0011100011100111b
  4985 000042A5 C605[263C0000]01    <1> 		mov byte [showcursorfonton], 1
  4986 000042AC E80C080000          <1> 		call showfontvesa
  4987 000042B1 C605[263C0000]00    <1> 		mov byte [showcursorfonton], 0
  4988 000042B8 C3                  <1> 		ret
  4989 000042B9 00000000            <1> lastdrag dw 0,0
  4990 000042BD 00000000            <1> grpctblpos dw 0,0
  4991                              <1> 
  4992                              <1> reloadallgraphics:
  4993 000042C1 BF[00100000]        <1> 		mov edi, graphicstable
  4994                              <1> reloadgraphicsloop:
  4995 000042C6 8B7702              <1> 		mov esi, [edi + 2]
  4996 000042C9 668B5706            <1> 		mov dx, [edi + 6]
  4997 000042CD 668B4F08            <1> 		mov cx, [edi + 8]
  4998 000042D1 668B07              <1> 		mov ax, [edi]
  4999 000042D4 668B5F0A            <1> 		mov bx, [edi + 10]
  5000 000042D8 893D[BD420000]      <1> 		mov [grpctblpos], edi
  5001 000042DE 3B3D[633D0000]      <1> 		cmp edi, [dragging]
  5002 000042E4 741E                <1> 		je loadedgraphic
  5003 000042E6 663D0100            <1> 		cmp ax, 1
  5004 000042EA 0F8431000000        <1> 		je near icongraphic
  5005 000042F0 663D0200            <1> 		cmp ax, 2
  5006 000042F4 0F8437000000        <1> 		je near stringgraphic
  5007 000042FA 663D0300            <1> 		cmp ax, 3
  5008 000042FE 0F8416000000        <1> 		je near windowgraphic
  5009 00004304 8B3D[BD420000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  5010 0000430A 81C710000000        <1> 		add edi, 16
  5011 00004310 81FF[00120000]      <1> 		cmp edi, graphicstableend
  5012 00004316 7329                <1> 		jae donereloadgraphics
  5013 00004318 EBAC                <1> 		jmp reloadgraphicsloop
  5014 0000431A E89E030000          <1> windowgraphic:	call showwindow2
  5015 0000431F EBE3                <1> 		jmp loadedgraphic
  5016 00004321 80E301              <1> icongraphic:	and bl, 1
  5017 00004324 881D[DD4D0000]      <1> 		mov [iconselected], bl
  5018 0000432A E8B4060000          <1> 		call showicon2
  5019 0000432F EBD3                <1> 		jmp loadedgraphic
  5020 00004331 80E301              <1> stringgraphic:  and bl, 1
  5021 00004334 881D[283C0000]      <1> 		mov [mouseselecton], bl
  5022 0000433A E8DC020000          <1> 		call showstring2
  5023 0000433F EBC3                <1> 		jmp loadedgraphic
  5024                              <1> donereloadgraphics:
  5025 00004341 8B3D[633D0000]      <1> 		mov edi, [dragging]
  5026 00004347 81FF[00100000]      <1> 		cmp edi, graphicstable
  5027 0000434D 7226                <1> 		jb notcorrectdrag
  5028 0000434F 668B07              <1> 		mov ax, [edi]
  5029 00004352 8B7702              <1> 		mov esi, [edi + 2]
  5030 00004355 668B5706            <1> 		mov dx, [edi + 6]
  5031 00004359 668B4F08            <1> 		mov cx, [edi + 8]
  5032 0000435D 668B5F0A            <1> 		mov bx, [edi + 10]
  5033 00004361 663D0100            <1> 		cmp ax, 1
  5034 00004365 750F                <1> 		jne noticondragging
  5035 00004367 80E301              <1> 		and bl, 1
  5036 0000436A 881D[DD4D0000]      <1> 		mov [iconselected], bl
  5037 00004370 E86E060000          <1> 		call showicon2
  5038                              <1> notcorrectdrag:
  5039 00004375 C3                  <1> 		ret
  5040                              <1> 
  5041                              <1> 	noticondragging:
  5042 00004376 663D0200            <1> 		cmp ax, 2
  5043 0000437A 75F9                <1> 		jne notcorrectdrag
  5044 0000437C 80E301              <1> 		and bl, 1
  5045 0000437F 881D[283C0000]      <1> 		mov [mouseselecton], bl
  5046 00004385 E891020000          <1> 		call showstring2
  5047 0000438A EBE9                <1> 		jmp notcorrectdrag
  5048                              <1> 
  5049 0000438C 00<rept>            <1> grphbuf times 16 db 0
  5050                              <1> 	graphicsadd:
  5051 0000439C BF[00100000]        <1> 		mov edi, graphicstable
  5052                              <1> 	shwgrph1:
  5053 000043A1 397702              <1> 		cmp dword [edi + 2], esi
  5054 000043A4 7414                <1> 		je showgraphicsreplace2
  5055 000043A6 81C710000000        <1> 		add edi, 16
  5056 000043AC 81FF[00120000]      <1> 		cmp edi, graphicstableend
  5057 000043B2 0F8335020000        <1> 		jae near showgraphicsnew
  5058 000043B8 EBE7                <1> 		jmp shwgrph1
  5059                              <1> 	showgraphicsreplace2:
  5060 000043BA 8935[8E430000]      <1> 		mov [grphbuf + 2], esi
  5061 000043C0 668915[92430000]    <1> 		mov [grphbuf + 6], dx
  5062 000043C7 66890D[94430000]    <1> 		mov [grphbuf + 8], cx
  5063 000043CE 891D[98430000]      <1> 		mov [grphbuf + 12], ebx
  5064 000043D4 B700                <1> 		mov bh, 0
  5065 000043D6 88E3                <1> 		mov bl, ah
  5066 000043D8 B400                <1> 		mov ah, 0
  5067 000043DA 66A3[96430000]      <1> 		mov [grphbuf + 10], ax	
  5068 000043E0 66891D[8C430000]    <1> 		mov [grphbuf], bx
  5069 000043E7 66A1[8C430000]      <1> 		mov ax, [grphbuf]
  5070 000043ED 663D0100            <1> 		cmp ax, 1
  5071 000043F1 0F8419000000        <1> 		je near replaceicon
  5072 000043F7 663D0200            <1> 		cmp ax, 2
  5073 000043FB 0F8493000000        <1> 		je near replacestring
  5074 00004401 663D0300            <1> 		cmp ax, 3
  5075 00004405 0F840F010000        <1> 		je near replacewindow
  5076 0000440B E9BA010000          <1> 		jmp showgraphicsreplace
  5077                              <1> 	replaceicon:
  5078 00004410 893D[673D0000]      <1> 		mov [lastpos], edi
  5079 00004416 8935[6B3D0000]      <1> 		mov [lastpos + 4], esi
  5080 0000441C 8B7702              <1> 		mov esi, [edi + 2]
  5081 0000441F 668B5F0C            <1> 		mov bx, [edi + 12]
  5082 00004423 668B5706            <1> 		mov dx, [edi + 6]
  5083 00004427 668B4F08            <1> 		mov cx, [edi + 8]
  5084 0000442B 668B06              <1> 		mov ax, [esi]
  5085 0000442E 66A3[6F3D0000]      <1> 		mov [colorbuf], ax
  5086 00004434 66A1[CD3A0000]      <1> 		mov ax, [background]
  5087 0000443A 668906              <1> 		mov [esi], ax
  5088 0000443D 8B5F0C              <1> 		mov ebx, [edi + 12]
  5089 00004440 668B470A            <1> 		mov ax, [edi + 10]
  5090 00004444 2401                <1> 		and al, 1
  5091 00004446 A2[DD4D0000]        <1> 		mov [iconselected], al
  5092 0000444B 668B470A            <1> 		mov ax, [edi + 10]
  5093 0000444F E88F050000          <1> 		call showicon2
  5094 00004454 8B3D[673D0000]      <1> 		mov edi, [lastpos]
  5095 0000445A 8B7702              <1> 		mov esi, [edi + 2]
  5096 0000445D 66A1[6F3D0000]      <1> 		mov ax, [colorbuf]
  5097 00004463 668906              <1> 		mov [esi], ax
  5098 00004466 8B35[6B3D0000]      <1> 		mov esi, [lastpos + 4]
  5099 0000446C 668B15[92430000]    <1> 		mov dx, [grphbuf + 6]
  5100 00004473 668B0D[94430000]    <1> 		mov cx, [grphbuf + 8]
  5101 0000447A 668B1D[8C430000]    <1> 		mov bx, [grphbuf]
  5102 00004481 66A1[96430000]      <1> 		mov ax, [grphbuf + 10]
  5103 00004487 88DC                <1> 		mov ah, bl
  5104 00004489 8B1D[98430000]      <1> 		mov ebx, [grphbuf + 12]
  5105 0000448F E936010000          <1> 		jmp showgraphicsreplace
  5106                              <1> 	replacestring:
  5107 00004494 893D[673D0000]      <1> 		mov [lastpos], edi
  5108 0000449A 8935[6B3D0000]      <1> 		mov [lastpos + 4], esi
  5109 000044A0 8B5F0C              <1> 		mov ebx, [edi + 12]
  5110 000044A3 8B7702              <1> 		mov esi, [edi + 2]
  5111 000044A6 668B5706            <1> 		mov dx, [edi + 6]
  5112 000044AA 668B4F08            <1> 		mov cx, [edi + 8]
  5113 000044AE 66A1[57460000]      <1> 		mov ax, [colorfont2]
  5114 000044B4 66A3[6F3D0000]      <1> 		mov [colorbuf], ax
  5115 000044BA 66A1[CD3A0000]      <1> 		mov ax, [background]
  5116 000044C0 66A3[57460000]      <1> 		mov [colorfont2], ax		
  5117 000044C6 8B5F0C              <1> 		mov ebx, [edi + 12]
  5118 000044C9 668B470A            <1> 		mov ax, [edi + 10]
  5119 000044CD 2401                <1> 		and al, 1
  5120 000044CF A2[283C0000]        <1> 		mov [mouseselecton], al
  5121 000044D4 668B470A            <1> 		mov ax, [edi + 10]
  5122 000044D8 E83E010000          <1> 		call showstring2
  5123 000044DD 66A1[6F3D0000]      <1> 		mov ax, [colorbuf]
  5124 000044E3 66A3[57460000]      <1> 		mov [colorfont2], ax
  5125 000044E9 8B3D[673D0000]      <1> 		mov edi, [lastpos]
  5126 000044EF 8B7702              <1> 		mov esi, [edi + 2]
  5127 000044F2 668B15[92430000]    <1> 		mov dx, [grphbuf + 6]
  5128 000044F9 668B0D[94430000]    <1> 		mov cx, [grphbuf + 8]
  5129 00004500 668B1D[8C430000]    <1> 		mov bx, [grphbuf]
  5130 00004507 66A1[96430000]      <1> 		mov ax, [grphbuf + 10]
  5131 0000450D 88DC                <1> 		mov ah, bl
  5132 0000450F 8B1D[98430000]      <1> 		mov ebx, [grphbuf + 12]
  5133 00004515 E9B0000000          <1> 		jmp showgraphicsreplace
  5134                              <1> 	replacewindow:
  5135 0000451A 893D[673D0000]      <1> 		mov [lastpos], edi
  5136 00004520 8935[6B3D0000]      <1> 		mov [lastpos + 4], esi
  5137 00004526 8B7702              <1> 		mov esi, [edi + 2]
  5138 00004529 8B3D[66460000]      <1> 		mov edi, [windowbufloc]
  5139 0000452F BA00000000          <1> 		mov edx, 0
  5140 00004534 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5141 0000453B C1E204              <1> 		shl edx, 4
  5142 0000453E 29D7                <1> 		sub edi, edx
  5143 00004540 BA00000000          <1> 		mov edx, 0
  5144 00004545 668B16              <1> 		mov dx, [esi]
  5145 00004548 660316              <1> 		add dx, [esi]
  5146 0000454B 668B4E02            <1> 		mov cx, [esi + 2]
  5147 0000454F 6681C11000          <1> 		add cx, 16
  5148 00004554 66A1[CD3A0000]      <1> 		mov ax, [background]
  5149                              <1> 	clearwindow:
  5150 0000455A 668907              <1> 		mov [edi], ax
  5151 0000455D 81C702000000        <1> 		add edi, 2
  5152 00004563 81EA02000000        <1> 		sub edx, 2
  5153 00004569 81FA00000000        <1> 		cmp edx, 0
  5154 0000456F 75E9                <1> 		jne clearwindow
  5155 00004571 6649                <1> 		dec cx
  5156 00004573 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5157 0000457A 662B16              <1> 		sub dx, [esi]
  5158 0000457D 662B16              <1> 		sub dx, [esi]
  5159 00004580 01D7                <1> 		add edi, edx
  5160 00004582 668B16              <1> 		mov dx, [esi]
  5161 00004585 660316              <1> 		add dx, [esi]
  5162 00004588 6681F90000          <1> 		cmp cx, 0
  5163 0000458D 75CB                <1> 		jne clearwindow
  5164 0000458F C605[A0150000]00    <1> 		mov byte [termcopyon], 0
  5165 00004596 8B3D[673D0000]      <1> 		mov edi, [lastpos]
  5166 0000459C 8B35[8E430000]      <1> 		mov esi, [grphbuf + 2]
  5167 000045A2 668B15[92430000]    <1> 		mov dx, [grphbuf + 6]
  5168 000045A9 668B0D[94430000]    <1> 		mov cx, [grphbuf + 8]
  5169 000045B0 668B1D[8C430000]    <1> 		mov bx, [grphbuf]
  5170 000045B7 66A1[96430000]      <1> 		mov ax, [grphbuf + 10]
  5171 000045BD 88DC                <1> 		mov ah, bl
  5172 000045BF 8B1D[98430000]      <1> 		mov ebx, [grphbuf + 12]
  5173 000045C5 E900000000          <1> 		jmp showgraphicsreplace
  5174                              <1> 	showgraphicsreplace:
  5175 000045CA 897702              <1> 		mov [edi + 2], esi
  5176 000045CD 66895706            <1> 		mov [edi + 6], dx
  5177 000045D1 66894F08            <1> 		mov [edi + 8], cx
  5178 000045D5 895F0C              <1> 		mov [edi + 12], ebx
  5179 000045D8 B700                <1> 		mov bh, 0
  5180 000045DA 88E3                <1> 		mov bl, ah
  5181 000045DC B400                <1> 		mov ah, 0
  5182 000045DE 6689470A            <1> 		mov [edi + 10], ax
  5183 000045E2 66891F              <1> 		mov [edi], bx
  5184 000045E5 8B5F0C              <1> 		mov ebx, [edi + 12]
  5185 000045E8 668B470A            <1> 		mov ax, [edi + 10]
  5186 000045EC C3                  <1> 		ret
  5187                              <1> 	showgraphicsnew:
  5188 000045ED BF[00100000]        <1> 		mov edi, graphicstable
  5189                              <1> 	shwgrph2:
  5190 000045F2 66813F0000          <1> 		cmp word [edi], 0
  5191 000045F7 74D1                <1> 		je showgraphicsreplace
  5192 000045F9 81C710000000        <1> 		add edi, 16
  5193 000045FF 81FF[00120000]      <1> 		cmp edi, graphicstableend
  5194 00004605 72EB                <1> 		jb shwgrph2
  5195                              <1> 	showgraphicsdone:
  5196 00004607 C3                  <1> 		ret
  5197                              <1> 
  5198                              <1> 	showstring:
  5199 00004608 A2[283C0000]        <1> 		mov [mouseselecton], al
  5200 0000460D 8025[283C0000]01    <1> 		and byte [mouseselecton], 1
  5201 00004614 B402                <1> 		mov ah, 2
  5202 00004616 E881FDFFFF          <1> 		call graphicsadd
  5203                              <1> 	showstring2:
  5204 0000461B B400                <1> 		mov ah, 0
  5205 0000461D 8A06                <1> 		mov al, [esi]
  5206 0000461F 3C00                <1> 		cmp al, 0
  5207 00004621 742C                <1> 		je doneshowstring
  5208 00004623 46                  <1> 		inc esi
  5209 00004624 3CFF                <1> 		cmp al, 255
  5210 00004626 74F3                <1> 		je showstring2
  5211 00004628 8935[864D0000]      <1> 		mov [showstringesi], esi
  5212 0000462E 668B1D[57460000]    <1> 		mov bx, [colorfont2]
  5213 00004635 E883040000          <1> 		call showfontvesa
  5214 0000463A 3C0D                <1> 		cmp al, 13
  5215 0000463C 7409                <1> 		je noproceedshst
  5216 0000463E 3C0A                <1> 		cmp al, 10
  5217 00004640 7405                <1> 		je noproceedshst
  5218 00004642 6681C20800          <1> 		add dx, 8
  5219                              <1> 		noproceedshst
  5220 00004647 8B35[864D0000]      <1> 		mov esi, [showstringesi]
  5221 0000464D EBCC                <1> 		jmp showstring2
  5222                              <1> 	doneshowstring:
  5223 0000464F C605[283C0000]00    <1> 		mov byte [mouseselecton], 0
  5224 00004656 C3                  <1> 		ret
  5225                              <1> 
  5226 00004657 FFFF                <1> colorfont2 dw 0xFFFF
  5227 00004659 00                  <1> colorcache db 0
  5228 0000465A 0000                <1> winvcopystx dw 0
  5229 0000465C 0000                <1> winvcopysty dw 0
  5230 0000465E 0000                <1> winvcopydx dw 0
  5231 00004660 0000                <1> winvcopycx dw 0
  5232 00004662 FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  5233 00004666 00000000            <1> windowbufloc: dw 0,0
  5234                              <1> 
  5235                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  5236 0000466A C605[9F150000]01    <1> 		mov byte [termguion], 1
  5237 00004671 6681C11000          <1> 		add cx, 16
  5238 00004676 668915[5A460000]    <1> 		mov [winvcopystx], dx
  5239 0000467D 66890D[5C460000]    <1> 		mov [winvcopysty], cx
  5240 00004684 668B16              <1> 		mov dx, [esi]
  5241 00004687 668B4E02            <1> 		mov cx, [esi + 2]
  5242 0000468B 6601D2              <1> 		add dx, dx
  5243 0000468E 668915[5E460000]    <1> 		mov [winvcopydx], dx
  5244 00004695 66890D[60460000]    <1> 		mov [winvcopycx], cx
  5245 0000469C 668B0D[5C460000]    <1> 		mov cx, [winvcopysty]
  5246 000046A3 6681E91000          <1> 		sub cx, 16
  5247 000046A8 668B15[5A460000]    <1> 		mov dx, [winvcopystx]
  5248 000046AF C605[A0150000]00    <1> 		mov byte [termcopyon], 0
  5249 000046B6 B403                <1> 		mov ah, 3
  5250 000046B8 E8DFFCFFFF          <1> 		call graphicsadd
  5251                              <1> 	showwindow2:
  5252 000046BD 6681C11000          <1> 		add cx, 16
  5253 000046C2 668915[5A460000]    <1> 		mov [winvcopystx], dx
  5254 000046C9 66890D[5C460000]    <1> 		mov [winvcopysty], cx
  5255 000046D0 668B16              <1> 		mov dx, [esi]
  5256 000046D3 668B4E02            <1> 		mov cx, [esi + 2]
  5257 000046D7 6601D2              <1> 		add dx, dx
  5258 000046DA 668915[5E460000]    <1> 		mov [winvcopydx], dx
  5259 000046E1 66890D[60460000]    <1> 		mov [winvcopycx], cx
  5260 000046E8 8B3D[66460000]      <1> 		mov edi, [windowbufloc]
  5261 000046EE BA00000000          <1> 		mov edx, 0
  5262 000046F3 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5263 000046FA C1E204              <1> 		shl edx, 4
  5264 000046FD 29D7                <1> 		sub edi, edx
  5265 000046FF 803D[A0150000]00    <1> 		cmp byte [termcopyon], 0
  5266 00004706 753E                <1> 		jne nocleartitlebarpos
  5267 00004708 8B3D[BB710000]      <1> 		mov edi, [physbaseptr]
  5268 0000470E BA00000000          <1> 		mov edx, 0
  5269 00004713 668B15[5A460000]    <1> 		mov dx, [winvcopystx]
  5270 0000471A 01D7                <1> 		add edi, edx
  5271 0000471C 668B0D[5C460000]    <1> 		mov cx, [winvcopysty]
  5272 00004723 6681E91000          <1> 		sub cx, 16
  5273 00004728 6681F90000          <1> 		cmp cx, 0
  5274 0000472D 7417                <1> 		je nocleartitlebarpos
  5275                              <1> 	cleartitlebarpos:
  5276 0000472F BA00000000          <1> 		mov edx, 0
  5277 00004734 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5278 0000473B 01D7                <1> 		add edi, edx
  5279 0000473D 6649                <1> 		dec cx
  5280 0000473F 6681F90000          <1> 		cmp cx, 0
  5281 00004744 75E9                <1> 		jne cleartitlebarpos
  5282                              <1> 	nocleartitlebarpos:
  5283 00004746 66B91000            <1> 		mov cx, 16
  5284 0000474A 668B15[5E460000]    <1> 		mov dx, [winvcopydx]
  5285 00004751 6681F90000          <1> 		cmp cx, 0
  5286 00004756 0F844B000000        <1> 		je near canceltitlebarput
  5287 0000475C 6681FA0000          <1> 		cmp dx, 0
  5288 00004761 0F8440000000        <1> 		je near canceltitlebarput
  5289                              <1> 	titlebarput:
  5290 00004767 66A1[62460000]      <1> 		mov ax, [windowcolor]
  5291 0000476D 668907              <1> 		mov [edi], ax
  5292 00004770 6681EA0200          <1> 		sub dx, 2
  5293 00004775 81C702000000        <1> 		add edi, 2
  5294 0000477B 6681FA0000          <1> 		cmp dx, 0
  5295 00004780 75E5                <1> 		jne titlebarput
  5296 00004782 BA00000000          <1> 		mov edx, 0
  5297 00004787 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5298 0000478E 6649                <1> 		dec cx
  5299 00004790 662B15[5E460000]    <1> 		sub dx, [winvcopydx]
  5300 00004797 01D7                <1> 		add edi, edx
  5301 00004799 668B15[5E460000]    <1> 		mov dx, [winvcopydx]
  5302 000047A0 6681F90000          <1> 		cmp cx, 0
  5303 000047A5 75C0                <1> 		jne titlebarput
  5304                              <1> 	canceltitlebarput:
  5305 000047A7 893D[66460000]      <1> 		mov [windowbufloc], edi
  5306 000047AD 803D[A0150000]02    <1> 		cmp byte [termcopyon], 2
  5307 000047B4 0F8463000000        <1> 		je near winvcpst
  5308 000047BA 66B80000            <1> 		mov ax, 0
  5309 000047BE 81C604000000        <1> 		add esi, 4
  5310 000047C4 668B15[5A460000]    <1> 		mov dx, [winvcopystx]
  5311 000047CB 668B0D[5C460000]    <1> 		mov cx, [winvcopysty]
  5312 000047D2 6681E91000          <1> 		sub cx, 16
  5313 000047D7 66BB0000            <1> 		mov bx, 0
  5314 000047DB C605[283C0000]01    <1> 		mov byte [mouseselecton], 1
  5315 000047E2 E834FEFFFF          <1> 		call showstring2
  5316 000047E7 B058                <1> 		mov al, "X"
  5317 000047E9 B400                <1> 		mov ah, 0
  5318 000047EB 668B1D[57460000]    <1> 		mov bx, [colorfont2]
  5319 000047F2 668B15[5A460000]    <1> 		mov dx, [winvcopystx]
  5320 000047F9 668B0D[5C460000]    <1> 		mov cx, [winvcopysty]
  5321 00004800 6681E91000          <1> 		sub cx, 16
  5322 00004805 6681EA1400          <1> 		sub dx, 20
  5323 0000480A 660315[5E460000]    <1> 		add dx, [winvcopydx]
  5324 00004811 C605[283C0000]01    <1> 		mov byte [mouseselecton], 1
  5325 00004818 E8A0020000          <1> 		call showfontvesa
  5326                              <1> 	winvcpst:
  5327 0000481D 8B3D[66460000]      <1> 		mov edi, [windowbufloc]
  5328 00004823 E957000000          <1> 		jmp windowvideocopyset
  5329                              <1> 
  5330                              <1> 	windowvideocopy:
  5331 00004828 8B3D[66460000]      <1> 		mov edi, [windowbufloc]
  5332 0000482E 3B3D[BB710000]      <1> 		cmp edi, [physbaseptr]
  5333 00004834 0F8345000000        <1> 		jae near windowvideocopyset
  5334 0000483A B900000000          <1> 		mov ecx, 0
  5335 0000483F BA00000000          <1> 		mov edx, 0
  5336 00004844 668B15[5A460000]    <1> 		mov dx, [winvcopystx]
  5337 0000484B 668B0D[5C460000]    <1> 		mov cx, [winvcopysty]
  5338 00004852 8B3D[BB710000]      <1> 		mov edi, [physbaseptr]
  5339 00004858 01D7                <1> 		add edi, edx
  5340 0000485A 81F900000000        <1> 		cmp ecx, 0
  5341 00004860 741D                <1> 		je windowvideocopyset
  5342                              <1> 	yrescopylp:
  5343 00004862 BA00000000          <1> 		mov edx, 0
  5344 00004867 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5345 0000486E 01D7                <1> 		add edi, edx
  5346 00004870 6649                <1> 		dec cx
  5347 00004872 6681F90000          <1> 		cmp cx, 0
  5348 00004877 75E9                <1> 		jne yrescopylp
  5349 00004879 893D[66460000]      <1> 		mov [windowbufloc], edi
  5350                              <1> 	windowvideocopyset:
  5351 0000487F 66B90000            <1> 		mov cx, 0
  5352 00004883 66890D[C8490000]    <1> 		mov [charposline], cx
  5353 0000488A BE[8F1D0000]        <1> 		mov esi, videobuf2
  5354 0000488F 8935[CA490000]      <1> 		mov [charposvbuf], esi
  5355 00004895 8A5E01              <1> 		mov bl, [esi + 1]
  5356 00004898 881D[59460000]      <1> 		mov [colorcache], bl
  5357 0000489E 8A1E                <1> 		mov bl, [esi]
  5358 000048A0 B700                <1> 		mov bh, 0
  5359 000048A2 66C1E304            <1> 		shl bx, 4
  5360 000048A6 678AB7[835F]        <1> 		mov dh, [fonts + bx]
  5361 000048AB D0CE                <1> 		ror dh, 1
  5362 000048AD 89FE                <1> 		mov esi, edi
  5363                              <1> 	copywindow:
  5364 000048AF B201                <1> 		mov dl, 1
  5365 000048B1 D0C6                <1> 		rol dh, 1
  5366 000048B3 20F2                <1> 		and dl, dh
  5367 000048B5 803D[59460000]10    <1> 		cmp byte [colorcache], 0x10
  5368 000048BC 731C                <1> 		jae switchwincolors
  5369 000048BE 66A1[64460000]      <1> 		mov ax, [windowcolor + 2]
  5370 000048C4 668907              <1> 		mov [edi], ax
  5371 000048C7 80FA00              <1> 		cmp dl, 0
  5372 000048CA 7425                <1> 		je nowritewin
  5373 000048CC 66A1[62460000]      <1> 		mov ax, [windowcolor]
  5374 000048D2 668907              <1> 		mov [edi], ax
  5375 000048D5 E917000000          <1> 		jmp nowritewin
  5376                              <1> 	switchwincolors:
  5377 000048DA 66A1[62460000]      <1> 		mov ax, [windowcolor]
  5378 000048E0 668907              <1> 		mov [edi], ax
  5379 000048E3 80FA00              <1> 		cmp dl, 0
  5380 000048E6 7409                <1> 		je nowritewin
  5381 000048E8 66A1[64460000]      <1> 		mov ax, [windowcolor + 2]
  5382 000048EE 668907              <1> 		mov [edi], ax
  5383                              <1> 	nowritewin:
  5384 000048F1 81C702000000        <1> 		add edi, 2
  5385 000048F7 FEC1                <1> 		inc cl
  5386 000048F9 80F908              <1> 		cmp cl, 8
  5387 000048FC 75B1                <1> 		jne copywindow
  5388 000048FE 6643                <1> 		inc bx
  5389 00004900 B100                <1> 		mov cl, 0
  5390 00004902 BA00000000          <1> 		mov edx, 0
  5391 00004907 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5392 0000490E 01D6                <1> 		add esi, edx
  5393 00004910 89F7                <1> 		mov edi, esi
  5394 00004912 678AB7[835F]        <1> 		mov dh, [fonts + bx]
  5395 00004917 D0CE                <1> 		ror dh, 1
  5396 00004919 FEC5                <1> 		inc ch
  5397 0000491B 80FD10              <1> 		cmp ch, 16
  5398 0000491E 758F                <1> 		jne copywindow
  5399 00004920 66B90000            <1> 		mov cx, 0
  5400 00004924 8B3D[CA490000]      <1> 		mov edi, [charposvbuf]
  5401 0000492A 81C702000000        <1> 		add edi, 2
  5402 00004930 81FF[4F300000]      <1> 		cmp edi, videobufend
  5403 00004936 7379                <1> 		jae donewincopynow
  5404 00004938 8A5F01              <1> 		mov bl, [edi + 1]
  5405 0000493B 881D[59460000]      <1> 		mov [colorcache], bl
  5406 00004941 8A1F                <1> 		mov bl, [edi]
  5407 00004943 B700                <1> 		mov bh, 0
  5408 00004945 66C1E304            <1> 		shl bx, 4
  5409 00004949 893D[CA490000]      <1> 		mov [charposvbuf], edi
  5410 0000494F BA00000000          <1> 		mov edx, 0
  5411 00004954 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5412 0000495B C1E204              <1> 		shl edx, 4
  5413 0000495E 29D6                <1> 		sub esi, edx
  5414 00004960 81C610000000        <1> 		add esi, 16
  5415 00004966 89F7                <1> 		mov edi, esi
  5416 00004968 668B0D[C8490000]    <1> 		mov cx, [charposline]
  5417 0000496F 6641                <1> 		inc cx
  5418 00004971 6681F95000          <1> 		cmp cx, 80
  5419 00004976 7317                <1> 		jae fixwindowcopy
  5420 00004978 66890D[C8490000]    <1> 		mov [charposline], cx
  5421 0000497F 66B90000            <1> 		mov cx, 0
  5422 00004983 678AB7[835F]        <1> 		mov dh, [fonts + bx]
  5423 00004988 D0CE                <1> 		ror dh, 1
  5424 0000498A E920FFFFFF          <1> 		jmp copywindow
  5425                              <1> fixwindowcopy:
  5426 0000498F 66B90000            <1> 		mov cx, 0
  5427 00004993 66890D[C8490000]    <1> 		mov [charposline], cx
  5428 0000499A 662B15[5E460000]    <1> 		sub dx, [winvcopydx]
  5429 000049A1 01D6                <1> 		add esi, edx
  5430 000049A3 89F7                <1> 		mov edi, esi
  5431 000049A5 678AB7[835F]        <1> 		mov dh, [fonts + bx]
  5432 000049AA D0CE                <1> 		ror dh, 1
  5433 000049AC E9FEFEFFFF          <1> 		jmp copywindow
  5434                              <1> donewincopynow:
  5435 000049B1 E815D2FFFF          <1> 		call switchtermcursor
  5436 000049B6 803D[A0150000]01    <1> 		cmp byte [termcopyon], 1
  5437 000049BD 7501                <1> 		jne forgetresetstuff
  5438 000049BF 61                  <1> 		popa
  5439                              <1> forgetresetstuff:
  5440 000049C0 C605[A0150000]00    <1> 		mov byte [termcopyon], 0
  5441 000049C7 C3                  <1> 		ret
  5442                              <1> 
  5443 000049C8 0000                <1> charposline dw 0
  5444 000049CA 00000000            <1> charposvbuf dw 0,0
  5445 000049CE 0000                <1> iconcolor dw 0
  5446                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  5447 000049D0 A2[DD4D0000]        <1> 		mov [iconselected], al
  5448 000049D5 8025[DD4D0000]01    <1> 		and byte [iconselected], 1
  5449 000049DC B401                <1> 		mov ah, 1
  5450 000049DE E8B9F9FFFF          <1> 		call graphicsadd
  5451                              <1> 	showicon2:
  5452 000049E3 8B3D[BB710000]      <1> 		mov edi, [physbaseptr]
  5453 000049E9 6601D2              <1> 		add dx, dx
  5454 000049EC 663B15[AD4A0000]    <1> 		cmp dx, [resolutionx2]
  5455 000049F3 720C                <1> 		jb screenxgood
  5456 000049F5 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5457 000049FC 6681EA4000          <1> 		sub dx, 64
  5458                              <1> 	screenxgood:
  5459 00004A01 6681F90000          <1> 		cmp cx, 0
  5460 00004A06 7425                <1> 		je noscreenygoodchk
  5461 00004A08 663B0D[A94A0000]    <1> 		cmp cx, [resolutiony]
  5462 00004A0F 720C                <1> 		jb screenygood
  5463 00004A11 668B0D[A94A0000]    <1> 		mov cx, [resolutiony]
  5464 00004A18 6681E92000          <1> 		sub cx, 32
  5465                              <1> 	screenygood:
  5466 00004A1D BB00000000          <1> 		mov ebx, 0
  5467 00004A22 668B1D[AD4A0000]    <1> 		mov bx, [resolutionx2]
  5468 00004A29 01DF                <1> 		add edi, ebx
  5469 00004A2B E2F0                <1> 		loop screenygood
  5470                              <1> 	noscreenygoodchk:
  5471 00004A2D BB00000000          <1> 		mov ebx, 0
  5472 00004A32 6689D3              <1> 		mov bx, dx
  5473 00004A35 01DF                <1> 		add edi, ebx
  5474 00004A37 66B90000            <1> 		mov cx, 0
  5475 00004A3B 668B06              <1> 		mov ax, [esi]
  5476 00004A3E 81C602000000        <1> 		add esi, 2
  5477 00004A44 66A3[CE490000]      <1> 		mov [iconcolor], ax
  5478                              <1> 	writeicon:
  5479 00004A4A 8B06                <1> 		mov eax, [esi]
  5480 00004A4C D1C0                <1> 		rol eax, 1
  5481 00004A4E B100                <1> 		mov cl, 0
  5482                              <1> 	writeiconline:
  5483 00004A50 B201                <1> 		mov dl, 1
  5484 00004A52 20C2                <1> 		and dl, al
  5485 00004A54 3215[DD4D0000]      <1> 		xor dl, [iconselected]
  5486 00004A5A 668B1D[CD3A0000]    <1> 		mov bx, [background]
  5487 00004A61 66891F              <1> 		mov [edi], bx
  5488 00004A64 80FA00              <1> 		cmp dl, 0
  5489 00004A67 740A                <1> 		je noiconline
  5490 00004A69 668B15[CE490000]    <1> 		mov dx, [iconcolor]
  5491 00004A70 668917              <1> 		mov [edi], dx
  5492                              <1> 	noiconline:
  5493 00004A73 81C702000000        <1> 		add edi, 2
  5494 00004A79 D1C0                <1> 		rol eax, 1
  5495 00004A7B FEC1                <1> 		inc cl
  5496 00004A7D 80F920              <1> 		cmp cl, 32
  5497 00004A80 72CE                <1> 		jb writeiconline
  5498 00004A82 81C604000000        <1> 		add esi, 4
  5499 00004A88 FEC5                <1> 		inc ch
  5500 00004A8A BA00000000          <1> 		mov edx, 0
  5501 00004A8F 668B15[AD4A0000]    <1> 		mov dx, [resolutionx2]
  5502 00004A96 01D7                <1> 		add edi, edx
  5503 00004A98 81EF40000000        <1> 		sub edi, 64
  5504 00004A9E 80FD20              <1> 		cmp ch, 32
  5505 00004AA1 72A7                <1> 		jb writeicon
  5506 00004AA3 B800000000          <1> 		mov eax, 0
  5507 00004AA8 C3                  <1> 		ret
  5508                              <1> 
  5509 00004AA9 0000                <1> resolutiony dw 0
  5510 00004AAB 0000                <1> resolutionx dw 0
  5511 00004AAD 0000                <1> resolutionx2 dw 0
  5512 00004AAF 02                  <1> resolutionbytes db 2
  5513 00004AB0 0000                <1> posxvesa dw 0
  5514 00004AB2 0000                <1> posyvesa dw 0
  5515 00004AB4 FFFF                <1> colorfont dw 0xFFFF
  5516                              <1> savefontvesa:		;;same rules as showfontvesa
  5517 00004AB6 C605[273C0000]01    <1> 	mov byte [savefonton], 1
  5518                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  5519 00004ABD 3CFF                <1> 	cmp al, 255
  5520 00004ABF 7501                <1> 	jne nostopshowfont
  5521 00004AC1 C3                  <1> 	ret
  5522                              <1> nostopshowfont:
  5523 00004AC2 66890D[B24A0000]    <1> 	mov [posyvesa], cx
  5524 00004AC9 3C0A                <1> 	cmp al, 10
  5525 00004ACB 0F8435000000        <1> 	je near goodvesafontx
  5526 00004AD1 3C0D                <1> 	cmp al, 13
  5527 00004AD3 0F842D000000        <1> 	je near goodvesafontx
  5528 00004AD9 B900000000          <1> 	mov ecx, 0
  5529 00004ADE 668B0D[AD4A0000]    <1> 	mov cx, [resolutionx2]
  5530 00004AE5 6681E91000          <1> 	sub cx, 16
  5531 00004AEA 6639CA              <1> 	cmp dx, cx
  5532 00004AED 7617                <1> 	jbe goodvesafontx
  5533 00004AEF 66BA0000            <1> 	mov dx, 0
  5534 00004AF3 668B0D[B24A0000]    <1> 	mov cx, [posyvesa]
  5535 00004AFA 6681C11000          <1> 	add cx, 16
  5536 00004AFF 66890D[B24A0000]    <1> 	mov [posyvesa], cx
  5537                              <1> goodvesafontx:
  5538 00004B06 668B0D[B24A0000]    <1> 	mov cx, [posyvesa]
  5539 00004B0D 668915[B04A0000]    <1> 	mov [posxvesa], dx
  5540 00004B14 8B3D[BB710000]      <1> 	mov edi, [physbaseptr]
  5541 00004B1A 66891D[B44A0000]    <1> 	mov [colorfont], bx
  5542 00004B21 BB00000000          <1> 	mov ebx, 0
  5543 00004B26 88C3                <1> 	mov bl, al
  5544 00004B28 B800000000          <1> 	mov eax, 0
  5545 00004B2D 88D8                <1> 	mov al, bl
  5546 00004B2F 6689D3              <1> 	mov bx, dx
  5547 00004B32 89DA                <1> 	mov edx, ebx
  5548 00004B34 BB00000000          <1> 	mov ebx, 0
  5549 00004B39 6681F90000          <1> 	cmp cx, 0
  5550 00004B3E 7415                <1> 	je vesaposloopdn
  5551 00004B40 668B1D[AD4A0000]    <1> 	mov bx, [resolutionx2]
  5552                              <1> vesaposloop:
  5553 00004B47 01DA                <1> 	add edx, ebx
  5554 00004B49 6681E90100          <1> 	sub cx, 1
  5555 00004B4E 6681F90000          <1> 	cmp cx, 0
  5556 00004B53 75F2                <1> 	jne vesaposloop
  5557                              <1> vesaposloopdn:
  5558 00004B55 01D7                <1> 	add edi, edx
  5559 00004B57 BE[835F0000]        <1> 	mov esi, fonts
  5560                              <1> findfontvesa:
  5561 00004B5C B400                <1> 	mov ah, 0
  5562 00004B5E 3C0A                <1> 	cmp al, 10
  5563 00004B60 0F840C010000        <1> 	je near nwlinevesa
  5564 00004B66 3C0D                <1> 	cmp al, 13
  5565 00004B68 0F8419010000        <1> 	je near cretvesa
  5566 00004B6E C1E004              <1> 	shl eax, 4
  5567 00004B71 01C6                <1> 	add esi, eax
  5568 00004B73 C1E804              <1> 	shr eax, 4
  5569 00004B76 81FE[836F0000]      <1> 	cmp esi, fontend
  5570 00004B7C 0F83BF000000        <1> 	jae near donefontvesa
  5571 00004B82 4E                  <1> 	dec esi
  5572                              <1> foundfontvesa:
  5573 00004B83 46                  <1> 	inc esi
  5574 00004B84 803D[273C0000]01    <1> 	cmp byte [savefonton], 1
  5575 00004B8B 0F840A010000        <1> 	je near vesafontsaver
  5576 00004B91 B100                <1> 	mov cl, 0
  5577 00004B93 8A06                <1> 	mov al, [esi]
  5578 00004B95 668B15[AD4A0000]    <1> 	mov dx, [resolutionx2]
  5579 00004B9C 662B15[B04A0000]    <1> 	sub dx, [posxvesa]
  5580 00004BA3 6681FA1000          <1> 	cmp dx, 16
  5581 00004BA8 7708                <1> 	ja paintfontvesa
  5582 00004BAA D0EA                <1> 	shr dl, 1
  5583 00004BAC 8815[714C0000]      <1> 	mov [charwidth], dl
  5584                              <1> paintfontvesa:
  5585 00004BB2 B201                <1> 	mov dl, 1
  5586 00004BB4 20C2                <1> 	and dl, al
  5587 00004BB6 803D[263C0000]01    <1> 	cmp byte [showcursorfonton], 1
  5588 00004BBD 0F8435000000        <1> 	je near nodelpaintedfont
  5589 00004BC3 803D[263C0000]02    <1> 	cmp byte [showcursorfonton], 2
  5590 00004BCA 0F8518000000        <1> 	jne near noswitchcursorfonton
  5591 00004BD0 80FA00              <1> 	cmp dl, 0
  5592 00004BD3 0F842E000000        <1> 	je near nopixelset
  5593 00004BD9 668B1D[B44A0000]    <1> 	mov bx, [colorfont]
  5594 00004BE0 66891F              <1> 	mov [edi], bx
  5595 00004BE3 E91F000000          <1> 	jmp nopixelset
  5596                              <1> noswitchcursorfonton:
  5597 00004BE8 3215[283C0000]      <1> 	xor dl, [mouseselecton]
  5598 00004BEE 668B1D[CD3A0000]    <1> 	mov bx, [background]
  5599 00004BF5 66891F              <1> 	mov [edi], bx
  5600                              <1> nodelpaintedfont:
  5601 00004BF8 80FA00              <1> 	cmp dl, 0
  5602 00004BFB 740A                <1> 	je nopixelset
  5603 00004BFD 668B15[B44A0000]    <1> 	mov dx, [colorfont]
  5604 00004C04 668917              <1> 	mov [edi], dx
  5605                              <1> nopixelset:
  5606 00004C07 81C702000000        <1> 	add edi, 2
  5607 00004C0D D0C0                <1> 	rol al, 1
  5608 00004C0F FEC1                <1> 	inc cl
  5609 00004C11 3A0D[714C0000]      <1> 	cmp cl, [charwidth]
  5610 00004C17 7299                <1> 	jb paintfontvesa
  5611 00004C19 FEC5                <1> 	inc ch
  5612 00004C1B BA00000000          <1> 	mov edx, 0
  5613 00004C20 668B15[AD4A0000]    <1> 	mov dx, [resolutionx2]
  5614 00004C27 01D7                <1> 	add edi, edx
  5615 00004C29 BA00000000          <1> 	mov edx, 0
  5616 00004C2E 8A15[714C0000]      <1> 	mov dl, [charwidth]
  5617 00004C34 00D2                <1> 	add dl, dl
  5618 00004C36 29D7                <1> 	sub edi, edx
  5619 00004C38 80FD10              <1> 	cmp ch, 16
  5620 00004C3B 0F8242FFFFFF        <1> 	jb foundfontvesa
  5621                              <1> donefontvesa:
  5622 00004C41 B208                <1> 	mov dl, 8
  5623 00004C43 8815[714C0000]      <1> 	mov [charwidth], dl
  5624 00004C49 668B15[B04A0000]    <1> 	mov dx, [posxvesa]
  5625 00004C50 8A1D[714C0000]      <1> 	mov bl, [charwidth]
  5626 00004C56 B700                <1> 	mov bh, 0
  5627 00004C58 6601DA              <1> 	add dx, bx
  5628 00004C5B 668B1D[B44A0000]    <1> 	mov bx, [colorfont]
  5629 00004C62 668B0D[B24A0000]    <1> 	mov cx, [posyvesa]
  5630 00004C69 C605[273C0000]00    <1> 	mov byte [savefonton], 0
  5631 00004C70 C3                  <1> 	ret
  5632 00004C71 08                  <1> charwidth db 8
  5633                              <1> nwlinevesa:
  5634 00004C72 668B0D[B24A0000]    <1> 	mov cx, [posyvesa]
  5635 00004C79 6681C11000          <1> 	add cx, 16
  5636 00004C7E 66890D[B24A0000]    <1> 	mov [posyvesa], cx
  5637 00004C85 EBBA                <1> 	jmp donefontvesa
  5638                              <1> cretvesa:
  5639 00004C87 668B15[B04A0000]    <1> 	mov dx, [posxvesa]
  5640 00004C8E 66BA0000            <1> 	mov dx, 0
  5641 00004C92 668915[B04A0000]    <1> 	mov [posxvesa], dx
  5642 00004C99 EBA6                <1> 	jmp donefontvesa
  5643                              <1> vesafontsaver:
  5644 00004C9B B000                <1> 	mov al, 0
  5645 00004C9D B100                <1> 	mov cl, 0
  5646                              <1> vesafontsaver2:
  5647 00004C9F 668B17              <1> 	mov dx, [edi]
  5648 00004CA2 663B15[B44A0000]    <1> 	cmp dx, [colorfont]
  5649 00004CA9 7432                <1> 	je colorfontmatch
  5650                              <1> donecolormatch:
  5651 00004CAB 81C702000000        <1> 	add edi, 2
  5652 00004CB1 D0C0                <1> 	rol al, 1
  5653 00004CB3 FEC1                <1> 	inc cl
  5654 00004CB5 80F908              <1> 	cmp cl, 8
  5655 00004CB8 72E5                <1> 	jb vesafontsaver2
  5656 00004CBA 8806                <1> 	mov [esi], al
  5657 00004CBC 46                  <1> 	inc esi
  5658 00004CBD FEC5                <1> 	inc ch
  5659 00004CBF BA00000000          <1> 	mov edx, 0
  5660 00004CC4 668B15[AD4A0000]    <1> 	mov dx, [resolutionx2]
  5661 00004CCB 01D7                <1> 	add edi, edx
  5662 00004CCD 81EF10000000        <1> 	sub edi, 16
  5663 00004CD3 80FD10              <1> 	cmp ch, 16
  5664 00004CD6 72C3                <1> 	jb vesafontsaver
  5665 00004CD8 E964FFFFFF          <1> 	jmp donefontvesa
  5666                              <1> colorfontmatch:
  5667 00004CDD 0401                <1> 	add al, 1
  5668 00004CDF EBCA                <1> 	jmp donecolormatch
  5669                              <1> 	
  5670                              <1> showbmp:
  5671 00004CE1 668B06              <1> 	mov ax, [esi]
  5672 00004CE4 663D424D            <1> 	cmp ax, "BM"
  5673 00004CE8 0F858E000000        <1> 	jne near endedbmp
  5674 00004CEE 8B3D[BB710000]      <1> 	mov edi, [physbaseptr]
  5675 00004CF4 6689D0              <1> 	mov ax, dx
  5676 00004CF7 6689CB              <1> 	mov bx, cx
  5677 00004CFA B900000000          <1> 	mov ecx, 0
  5678 00004CFF BA00000000          <1> 	mov edx, 0
  5679 00004D04 6689D9              <1> 	mov cx, bx
  5680 00004D07 6689C2              <1> 	mov dx, ax
  5681 00004D0A 01D7                <1> 	add edi, edx
  5682 00004D0C 01D7                <1> 	add edi, edx
  5683 00004D0E BA00000000          <1> 	mov edx, 0
  5684 00004D13 668B15[AD4A0000]    <1> 	mov dx, [resolutionx2]
  5685 00004D1A 41                  <1> 	inc ecx
  5686 00004D1B 034E16              <1> 	add ecx, [esi + 22]
  5687                              <1> bmplocloop:
  5688 00004D1E 01D7                <1> 	add edi, edx
  5689 00004D20 E2FC                <1> 	loop bmplocloop
  5690 00004D22 29D7                <1> 	sub edi, edx
  5691 00004D24 8B5612              <1> 	mov edx, [esi + 18]
  5692 00004D27 8B4E16              <1> 	mov ecx, [esi + 22]
  5693 00004D2A 8B460A              <1> 	mov eax, [esi + 10]
  5694 00004D2D 8B5E02              <1> 	mov ebx, [esi + 2]
  5695 00004D30 01F3                <1> 	add ebx, esi
  5696 00004D32 891D[824D0000]      <1> 	mov [bmpend], ebx
  5697 00004D38 89D3                <1> 	mov ebx, edx
  5698 00004D3A 01C6                <1> 	add esi, eax
  5699                              <1> ldxbmp:
  5700 00004D3C 668B06              <1> 	mov ax, [esi]
  5701 00004D3F 668907              <1> 	mov [edi], ax
  5702 00004D42 81C702000000        <1> 	add edi, 2
  5703 00004D48 81C602000000        <1> 	add esi, 2
  5704 00004D4E 3B35[824D0000]      <1> 	cmp esi, [bmpend]
  5705 00004D54 7726                <1> 	ja endedbmp
  5706 00004D56 4A                  <1> 	dec edx
  5707 00004D57 81FA00000000        <1> 	cmp edx, 0
  5708 00004D5D 77DD                <1> 	ja ldxbmp
  5709 00004D5F BA00000000          <1> 	mov edx, 0
  5710 00004D64 668B15[AD4A0000]    <1> 	mov dx, [resolutionx2]
  5711 00004D6B 29DF                <1> 	sub edi, ebx
  5712 00004D6D 29DF                <1> 	sub edi, ebx
  5713 00004D6F 29D7                <1> 	sub edi, edx
  5714 00004D71 49                  <1> 	dec ecx
  5715 00004D72 89DA                <1> 	mov edx, ebx
  5716 00004D74 81F900000000        <1> 	cmp ecx, 0
  5717 00004D7A 77C0                <1> 	ja ldxbmp
  5718                              <1> endedbmp:
  5719 00004D7C E875EFFFFF          <1> 	call switchmousepos2
  5720 00004D81 C3                  <1> 	ret
  5721                              <1> 	
  5722 00004D82 00000000            <1> 	bmpend dd 0
  5723                              <1> 
  5724                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5725 00004D86 00000000            <1> 	showstringesi dw 0,0
  5726 00004D8A 00                  <1> 	mouseon db 0
  5727 00004D8B 737461727400        <1> 	start	db "start",0
  5728 00004D91 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  5729 00004D9A 426F6F2100          <1> 	boomsg db "Boo!",0
  5730 00004D9F 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  5731 00004DA8 73206561737920746F- <1>
  5732 00004DB1 20647261772E00      <1>
  5733 00004DB8 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  5734 00004DC1 6D206E6F6D00        <1>
  5735 00004DC7 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  5736 00004DD0 75636B7300          <1>
  5737 00004DD5 5800                <1> 	xmsg db "X",0
  5738 00004DD7 0000                <1> 	icon dw 0	;pointer to icon
  5739 00004DD9 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  5740 00004DDD 00                  <1> 	iconselected db 0
  5741                              <1> 	
  5742                              <1> 	boo:
  5743 00004DDE BE[9A4D0000]        <1> 		mov esi, boomsg
  5744 00004DE3 66BA6400            <1> 		mov dx, 100
  5745 00004DE7 66B94001            <1> 		mov cx, 320
  5746 00004DEB BB00000000          <1> 		mov ebx, 0
  5747 00004DF0 66B80000            <1> 		mov ax, 0
  5748 00004DF4 E90FF8FFFF          <1> 		jmp showstring
  5749                              <1> 
  5750                              <1> 	pacmannomnom:
  5751 00004DF9 BE[B84D0000]        <1> 		mov esi, pacnom
  5752 00004DFE 66BA8200            <1> 		mov dx, 130
  5753 00004E02 66B93C00            <1> 		mov cx, 60
  5754 00004E06 BB00000000          <1> 		mov ebx, 0
  5755 00004E0B 66B80000            <1> 		mov ax, 0
  5756 00004E0F E9F4F7FFFF          <1> 		jmp showstring	
  5757                              <1> 	
  5758                              <1> 	noie:
  5759 00004E14 BE[A84E0000]        <1> 		mov esi, termwindow
  5760 00004E19 66BA0000            <1> 		mov dx, 0
  5761 00004E1D 66B90000            <1> 		mov cx, 0
  5762 00004E21 BB[F01B0000]        <1> 		mov ebx, os
  5763                              <1> ;;		mov ebx, internettest
  5764 00004E26 891D[F9030000]      <1> 		mov [user2codepoint], ebx
  5765 00004E2C 66B80000            <1> 		mov ax, 0
  5766 00004E30 E835F8FFFF          <1> 		call showwindow
  5767                              <1> ;;		jmp internettest
  5768 00004E35 E9B6CDFFFF          <1> 		jmp os
  5769 00004E3A C3                  <1> 		ret
  5770                              <1> 
  5771                              <1> 	gotomenuboot:
  5772 00004E3B BE[A84E0000]        <1> 		mov esi, termwindow
  5773 00004E40 66BA0000            <1> 		mov dx, 0
  5774 00004E44 66B90000            <1> 		mov cx, 0
  5775 00004E48 BB[F01B0000]        <1> 		mov ebx, os
  5776 00004E4D 891D[F9030000]      <1> 		mov [user2codepoint], ebx
  5777 00004E53 66B80000            <1> 		mov ax, 0
  5778 00004E57 E80EF8FFFF          <1> 		call showwindow
  5779 00004E5C E98FCDFFFF          <1> 		jmp os
  5780 00004E61 C3                  <1> 		ret
  5781                              <1> 
  5782                              <1> 	winblows:
  5783 00004E62 BE[C74D0000]        <1> 		mov esi, winmsg
  5784 00004E67 66BA0000            <1> 		mov dx, 0
  5785 00004E6B 668B0D[A94A0000]    <1> 		mov cx, [resolutiony]
  5786 00004E72 6681E92000          <1> 		sub cx, 32
  5787 00004E77 BB00000000          <1> 		mov ebx, 0
  5788 00004E7C B400                <1> 		mov ah, 0
  5789 00004E7E B011                <1> 		mov al, 00010001b
  5790 00004E80 E883F7FFFF          <1> 		call showstring
  5791 00004E85 BE[914D0000]        <1> 		mov esi, gotomenu
  5792 00004E8A 668B0D[A94A0000]    <1> 		mov cx, [resolutiony]
  5793 00004E91 6681E93000          <1> 		sub cx, 48
  5794 00004E96 66BA0000            <1> 		mov dx, 0
  5795 00004E9A B400                <1> 		mov ah, 0
  5796 00004E9C B010                <1> 		mov al, 00010000b
  5797 00004E9E BB[3B4E0000]        <1> 		mov ebx, gotomenuboot
  5798 00004EA3 E960F7FFFF          <1> 		jmp showstring
  5799                              <1> 
  5800 00004EA8 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  5801 00004EAC 5465726D696E616C00  <1> 	termmsg:	db "Terminal",0	;;window title
  5802                              <1> 	
  5803 00004EAC <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  5804 00004EAC <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  5805 00004EAC <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  5806 00004EAC <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  5807 00004EAC <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  5808                                      ;%include 'source/network.asm'
  5809                                  	%include 'source/rtl8139.asm'
  5810                              <1> ;;rtl8139.asm
  5811                              <1> initcard:	;;should find card, get mac, and initialize card
  5812 0000513F B800000000          <1> 	mov eax, 0
  5813 00005144 A2[79540000]        <1> 	mov [pcifunction], al
  5814 00005149 A2[77540000]        <1> 	mov [pcibus], al
  5815 0000514E A2[78540000]        <1> 	mov [pcidevice], al
  5816 00005153 B002                <1> 	mov al, 0x02 ;;type code
  5817 00005155 A2[FC540000]        <1> 	mov [pcitype], al
  5818 0000515A E81D030000          <1> 	call getpciport
  5819                              <1> initnic:		;;;;Here i tried the rtl8139 interface, fuck it
  5820 0000515F 8915[4E530000]      <1> 	mov [basenicaddr], edx
  5821 00005165 89D1                <1> 	mov ecx, edx
  5822 00005167 C605[E4210000]03    <1> 	mov byte [firsthexshown], 3
  5823 0000516E E886D0FFFF          <1> 	call showhex	;;for debugging, please remove
  5824 00005173 BE[1F350000]        <1> 	mov esi, rbuffstart
  5825 00005178 B900200000          <1> 	mov ecx, 8192
  5826 0000517D B800000000          <1> 	mov eax, 0
  5827                              <1> clearrbuff:		;;clear receive buffer which starts at rbuffstart
  5828 00005182 8806                <1> 	mov [esi], al
  5829 00005184 46                  <1> 	inc esi
  5830 00005185 6649                <1> 	dec cx
  5831 00005187 6681F90000          <1> 	cmp cx, 0
  5832 0000518C 75F4                <1> 	jne clearrbuff
  5833                              <1> findmac:
  5834 0000518E 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5835 00005194 BF[56530000]        <1> 	mov edi, sysmac
  5836 00005199 B906000000          <1> 	mov ecx, 6
  5837                              <1> macputloop:
  5838 0000519E EC                  <1> 	in al, dx
  5839 0000519F 8807                <1> 	mov [edi], al
  5840 000051A1 47                  <1> 	inc edi
  5841 000051A2 42                  <1> 	inc edx
  5842 000051A3 49                  <1> 	dec ecx
  5843 000051A4 75F8                <1> 	jnz macputloop
  5844 000051A6 B9[56530000]        <1> 	mov ecx, sysmac
  5845 000051AB E837010000          <1> 	call showmac
  5846                              <1> resetnic:
  5847 000051B0 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5848 000051B6 81C252000000        <1> 	add edx, 0x52
  5849 000051BC B000                <1> 	mov al, 0
  5850 000051BE EE                  <1> 	out dx, al	;;WAKE UP!!!!
  5851 000051BF 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5852 000051C5 81C237000000        <1> 	add edx, 0x37
  5853 000051CB B010                <1> 	mov al, 0x10
  5854 000051CD EE                  <1> 	out dx, al	;;Reset
  5855                              <1> resetnicwait:
  5856 000051CE 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5857 000051D4 81C237000000        <1> 	add edx, 0x37
  5858 000051DA EC                  <1> 	in al, dx
  5859 000051DB 2410                <1> 	and al, 0x10
  5860 000051DD 3C10                <1> 	cmp al, 0x10
  5861 000051DF 0F84E9FFFFFF        <1> 	je near resetnicwait
  5862 000051E5 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5863 000051EB 81C230000000        <1> 	add edx, 0x30
  5864 000051F1 B8[1F350000]        <1> 	mov eax, rbuffstart
  5865 000051F6 EF                  <1> 	out dx, eax	;;give nic receive buffer location
  5866 000051F7 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5867 000051FD 81C23C000000        <1> 	add edx, 0x3C
  5868 00005203 66B80500            <1> 	mov ax, 0x0005
  5869 00005207 66EF                <1> 	out dx, ax	;;set TOK and ROK
  5870 00005209 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5871 0000520F 81C244000000        <1> 	add edx, 0x44
  5872 00005215 B80F000000          <1> 	mov eax, 0xf
  5873 0000521A EF                  <1> 	out dx, eax	;;recieve packets from all matches
  5874 0000521B 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5875 00005221 81C237000000        <1> 	add edx, 0x37
  5876 00005227 B00C                <1> 	mov al, 0x0C
  5877 00005229 EE                  <1> 	out dx, al	;;use transmit and receive
  5878 0000522A C605[37530000]01    <1> 	mov byte [nicconfig], 1
  5879 00005231 C3                  <1> 	ret
  5880                              <1> 	
  5881                              <1> sendframe:	;;padded frame with beginning in edi and end in esi
  5882 00005232 56                  <1> 	push esi
  5883 00005233 57                  <1> 	push edi
  5884                              <1> nic2:		;;here come the low level drivers :(
  5885                              <1> 			;;frame begins at esi, ends at edi 			;;0x0200 is the class code for ethernet cards
  5886 00005234 803D[37530000]01    <1> 	cmp byte [nicconfig], 1
  5887 0000523B 7405                <1> 	je sendcachedata
  5888 0000523D E8FDFEFFFF          <1> 	call initcard
  5889                              <1> sendcachedata:
  5890 00005242 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5891 00005248 81C210000000        <1> 	add edx, 0x10
  5892 0000524E ED                  <1> 	in eax, dx
  5893 0000524F 89C1                <1> 	mov ecx, eax
  5894 00005251 E8A3CFFFFF          <1> 	call showhex
  5895 00005256 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5896 0000525C 81C213000000        <1> 	add edx, 0x13
  5897 00005262 ED                  <1> 	in eax, dx
  5898 00005263 89C1                <1> 	mov ecx, eax
  5899 00005265 E88FCFFFFF          <1> 	call showhex
  5900 0000526A 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5901 00005270 81C223000000        <1> 	add edx, 0x23	;;23 or 20?
  5902 00005276 5F                  <1> 	pop edi
  5903 00005277 89F8                <1> 	mov eax, edi
  5904 00005279 EF                  <1> 	out dx, eax	;;here's Johnny!
  5905 0000527A 5E                  <1> 	pop esi
  5906 0000527B 29FE                <1> 	sub esi, edi
  5907 0000527D 89F0                <1> 	mov eax, esi
  5908 0000527F 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5909 00005285 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5910 0000528B EF                  <1> 	out dx, eax
  5911                              <1> checknicstatus1:
  5912 0000528C 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5913 00005292 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5914 00005298 ED                  <1> 	in eax, dx
  5915 00005299 2500200000          <1> 	and eax, 0x2000
  5916 0000529E 3D00200000          <1> 	cmp eax, 0x2000
  5917 000052A3 75E7                <1> 	jne checknicstatus1
  5918                              <1> checknicstatus:
  5919 000052A5 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5920 000052AB 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5921 000052B1 ED                  <1> 	in eax, dx
  5922 000052B2 2500800000          <1> 	and eax, 0x8000
  5923 000052B7 3D00800000          <1> 	cmp eax, 0x8000
  5924 000052BC 75E7                <1> 	jne checknicstatus
  5925 000052BE 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5926 000052C4 81C210000000        <1> 	add edx, 0x10
  5927 000052CA ED                  <1> 	in eax, dx
  5928 000052CB 89C1                <1> 	mov ecx, eax
  5929 000052CD E827CFFFFF          <1> 	call showhex
  5930 000052D2 8B15[4E530000]      <1> 	mov edx, [basenicaddr]
  5931 000052D8 81C213000000        <1> 	add edx, 0x13
  5932 000052DE ED                  <1> 	in eax, dx
  5933 000052DF 89C1                <1> 	mov ecx, eax
  5934 000052E1 E813CFFFFF          <1> 	call showhex
  5935 000052E6 C3                  <1> 	ret
  5936                              <1> 	
  5937                              <1> showmac:	;;mac begins in [ecx]
  5938 000052E7 BE[1F530000]        <1> 	mov esi, macprint
  5939 000052EC 89CF                <1> 	mov edi, ecx
  5940 000052EE 81C106000000        <1> 	add ecx, 6
  5941                              <1> showmacloop:
  5942 000052F4 8A07                <1> 	mov al, [edi]
  5943 000052F6 8A27                <1> 	mov ah, [edi]
  5944 000052F8 C0E804              <1> 	shr al, 4
  5945 000052FB C0E404              <1> 	shl ah, 4
  5946 000052FE C0EC04              <1> 	shr ah, 4
  5947 00005301 0430                <1> 	add al, 48
  5948 00005303 80C430              <1> 	add ah, 48
  5949 00005306 668906              <1> 	mov [esi], ax
  5950 00005309 81C603000000        <1> 	add esi, 3
  5951 0000530F 47                  <1> 	inc edi
  5952 00005310 39CF                <1> 	cmp edi, ecx
  5953 00005312 72E0                <1> 	jb showmacloop
  5954 00005314 BE[1F530000]        <1> 	mov esi, macprint
  5955 00005319 E88DC4FFFF          <1> 	call print
  5956 0000531E C3                  <1> 	ret
  5957                              <1> 	
  5958 0000531F 30302D30302D30302D- <1> macprint db "00-00-00-00-00-00  ",0
  5959 00005328 30302D30302D303020- <1>
  5960 00005331 2000                <1>
  5961 00005333 00000000            <1> ethernetend dw 0,0
  5962 00005337 00                  <1> nicconfig db 0
  5963 00005338 4E4F204E494300      <1> nonicfoundmsg db "NO NIC",0
  5964 0000533F 496E6974696174696E- <1> initnicmsg	db "Initiating NIC",0
  5965 00005348 67204E494300        <1>
  5966 0000534E 00000000            <1> basenicaddr	db 0,0,0,0
  5967 00005352 C0A80005            <1> sysip db 192,168,0,5
  5968 00005356 000000000000        <1> sysmac	db 0,0,0,0,0,0		;;my mac address
  5969                                  	%include 'source/arp.asm'
  5970                              <1> ;;let's try something else
  5971                              <1> ;;arp.asm
  5972                              <1> arpinit:
  5973 0000535C BE[13540000]        <1> 	mov esi, arptable
  5974 00005361 BF[56530000]        <1> 	mov edi, sysmac
  5975 00005366 BB[52530000]        <1> 	mov ebx, sysip
  5976 0000536B 8B0F                <1> 	mov ecx, [edi]
  5977 0000536D 890E                <1> 	mov [esi], ecx
  5978 0000536F 668B4F04            <1> 	mov cx, [edi + 4]
  5979 00005373 894E04              <1> 	mov [esi + 4], ecx
  5980 00005376 8B0B                <1> 	mov ecx, [ebx]
  5981 00005378 894E06              <1> 	mov [esi + 6], ecx
  5982 0000537B C605[12540000]01    <1> 	mov byte [arpconfig], 1
  5983 00005382 C3                  <1> 	ret
  5984                              <1> arptest:
  5985 00005383 803D[12540000]01    <1> 	cmp byte [arpconfig], 1
  5986 0000538A 7405                <1> 	je arptest2
  5987 0000538C E8CBFFFFFF          <1> 	call arpinit
  5988                              <1> arptest2:	;;try to reach 192.168.0.1
  5989 00005391 8B0D[56530000]      <1> 	mov ecx, [sysmac]
  5990 00005397 668B1D[5A530000]    <1> 	mov bx, [sysmac + 4]
  5991 0000539E 890D[D8530000]      <1> 	mov [sourcemac], ecx
  5992 000053A4 66891D[DC530000]    <1> 	mov [sourcemac + 4],bx
  5993 000053AB 890D[E8530000]      <1> 	mov [arpsenderinfo], ecx
  5994 000053B1 66891D[EC530000]    <1> 	mov [arpsenderinfo + 4], bx
  5995 000053B8 BF[D2530000]        <1> 	mov edi, frame
  5996 000053BD BE[12540000]        <1> 	mov esi, framend
  5997 000053C2 E86BFEFFFF          <1> 	call sendframe
  5998 000053C7 BE[5A5F0000]        <1> 	mov esi, line
  5999 000053CC E8DAC3FFFF          <1> 	call print
  6000 000053D1 C3                  <1> 	ret
  6001                              <1> 	
  6002                              <1> ;;example frame
  6003                              <1> frame:
  6004 000053D2 FFFFFFFFFFFF        <1> destinationmac:	db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  6005 000053D8 000000000000        <1> sourcemac:		db 0,0,0,0,0,0
  6006 000053DE 0608                <1> ethertype:		dw 0x0806			;;arp
  6007                              <1> 	;;example packet
  6008 000053E0 0100                <1> 	arppacket: 		dw 1				;;ethernet is 1
  6009 000053E2 0008                <1> 	arpprotocol: 	dw 0x0800			;;ip is 0x800
  6010 000053E4 0604                <1> 					db 6,4				;;length of mac, length of ip
  6011 000053E6 0100                <1> 	arpoperation: 	dw 1				;;one for arp request
  6012 000053E8 000000000000        <1> 	arpsenderinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;mac
  6013 000053EE C0A80005            <1> 					db 192,168,0,5			;;ip
  6014 000053F2 000000000000        <1> 	arptargetinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;ignored in requests
  6015 000053F8 C0A80001            <1> 					db 192,168,0,1			;;ip
  6016 000053FC 00<rept>            <1> padding:		times (64-($-frame)) db 0
  6017                              <1> framend:
  6018                              <1> 
  6019 00005412 00                  <1> arpconfig db 0
  6020                              <1> arptable:	;;mac,ip
  6021 00005413 000000000000000000- <1> 	times 10 db 0,0,0,0,0,0,0,0,0,0
  6022 0000541C 00<rept>            <1>
  6023                              <1> arptableend:
  6024                                  	%include 'source/pci.asm'
  6025 00005477 00                  <1> pcibus		db 0
  6026 00005478 00                  <1> pcidevice	db 0
  6027 00005479 00                  <1> pcifunction	db 0
  6028 0000547A 00                  <1> pciregister	db 0
  6029 0000547B 00                  <1> pcireqtype db 0
  6030                              <1> 
  6031                              <1> getpciport:
  6032 0000547C B001                <1> 	mov al, 1
  6033 0000547E A2[7B540000]        <1> 	mov [pcireqtype], al
  6034 00005483 E91E000000          <1> 	jmp searchpci
  6035                              <1> pcidump:
  6036 00005488 B800000000          <1> 	mov eax, 0
  6037 0000548D A2[79540000]        <1> 	mov [pcifunction], al
  6038 00005492 A2[77540000]        <1> 	mov [pcibus], al
  6039 00005497 A2[78540000]        <1> 	mov [pcidevice], al
  6040 0000549C A2[7B540000]        <1> 	mov [pcireqtype], al
  6041 000054A1 E900000000          <1> 	jmp searchpci
  6042                              <1> searchpci:		;;return in ebx, start X in pciX
  6043 000054A6 B000                <1> 	mov al, 0
  6044 000054A8 A2[7A540000]        <1> 	mov [pciregister], al
  6045 000054AD E84F010000          <1> 	call getpciaddr
  6046 000054B2 BAF80C0000          <1> 	mov edx, 0xCF8
  6047 000054B7 EF                  <1> 	out dx, eax	;;request pci config
  6048 000054B8 BAFC0C0000          <1> 	mov edx, 0xCFC
  6049 000054BD ED                  <1> 	in eax, dx 	;;read in pci config
  6050 000054BE 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  6051 000054C3 0F8237000000        <1> 	jb near checkpcidevice
  6052                              <1> searchpciret:
  6053                              <1> nextpcidevice:
  6054 000054C9 B000                <1> 	mov al, 0
  6055 000054CB A2[79540000]        <1> 	mov [pcifunction], al
  6056 000054D0 A0[78540000]        <1> 	mov al, [pcidevice]
  6057 000054D5 3C1F                <1> 	cmp al, 11111b
  6058 000054D7 0F83B8000000        <1> 	jae near nextpcibus
  6059 000054DD FEC0                <1> 	inc al
  6060 000054DF A2[78540000]        <1> 	mov [pcidevice], al
  6061 000054E4 EBC0                <1> 	jmp searchpci
  6062 000054E6 A0[79540000]        <1> 	mov al, [pcifunction]
  6063 000054EB 3C07                <1> 	cmp al, 111b
  6064 000054ED 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  6065 000054F3 FEC0                <1> 	inc al
  6066 000054F5 A2[79540000]        <1> 	mov [pcifunction], al
  6067 000054FA EBAA                <1> 	jmp searchpci
  6068 000054FC 00000000            <1> pcitype: db 0,0,0,0
  6069                              <1> checkpcidevice:
  6070 00005500 B000                <1> 	mov al, 0
  6071 00005502 3805[7B540000]      <1> 	cmp [pcireqtype], al
  6072 00005508 0F842B000000        <1> 	je near dumppcidevice
  6073 0000550E B008                <1> 	mov al, 0x08
  6074 00005510 A2[7A540000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  6075 00005515 E8E7000000          <1> 	call getpciaddr
  6076 0000551A BAF80C0000          <1> 	mov edx, 0xCF8
  6077 0000551F EF                  <1> 	out dx, eax
  6078 00005520 BAFC0C0000          <1> 	mov edx, 0xCFC
  6079 00005525 ED                  <1> 	in eax, dx
  6080 00005526 C1C008              <1> 	rol eax, 8
  6081 00005529 8A1D[FC540000]      <1> 	mov bl, [pcitype]
  6082 0000552F 38D8                <1> 	cmp al, bl
  6083 00005531 0F8480000000        <1> 	je near foundpciaddr
  6084 00005537 EB90                <1> 	jmp searchpciret
  6085                              <1> dumppcidevice:
  6086 00005539 B000                <1> 	mov al, 0
  6087 0000553B A2[7A540000]        <1> 	mov [pciregister], al
  6088 00005540 E8BC000000          <1> 	call getpciaddr
  6089 00005545 89C1                <1> 	mov ecx, eax
  6090 00005547 C605[E4210000]00    <1> 	mov byte [firsthexshown],0
  6091 0000554E E8A6CCFFFF          <1> 	call showhex
  6092                              <1> dumppcidevicelp:
  6093 00005553 A2[7A540000]        <1> 	mov [pciregister], al
  6094 00005558 E8A4000000          <1> 	call getpciaddr
  6095 0000555D BAF80C0000          <1> 	mov edx, 0xCF8
  6096 00005562 EF                  <1> 	out dx, eax
  6097 00005563 BAFC0C0000          <1> 	mov edx, 0xCFC
  6098 00005568 ED                  <1> 	in eax, dx
  6099 00005569 89C1                <1> 	mov ecx, eax
  6100 0000556B A0[7A540000]        <1> 	mov al, [pciregister]
  6101 00005570 0404                <1> 	add al, 4
  6102 00005572 3C1A                <1> 	cmp al, 0x1A
  6103 00005574 730E                <1> 	jae dumppcidn
  6104 00005576 C605[E4210000]00    <1> 	mov byte [firsthexshown],0
  6105 0000557D E877CCFFFF          <1> 	call showhex
  6106 00005582 EBCF                <1> 	jmp dumppcidevicelp
  6107                              <1> dumppcidn:
  6108 00005584 C605[E4210000]00    <1> 	mov byte [firsthexshown],0
  6109 0000558B E869CCFFFF          <1> 	call showhex
  6110 00005590 E934FFFFFF          <1> 	jmp searchpciret
  6111                              <1> nextpcibus:
  6112 00005595 B000                <1> 	mov al, 0
  6113 00005597 A2[78540000]        <1> 	mov [pcidevice], al
  6114 0000559C A0[77540000]        <1> 	mov al, [pcibus]
  6115 000055A1 3C7F                <1> 	cmp al, 1111111b
  6116 000055A3 730C                <1> 	jae donesearchpci
  6117 000055A5 FEC0                <1> 	inc al
  6118 000055A7 A2[77540000]        <1> 	mov [pcibus], al
  6119 000055AC E9F5FEFFFF          <1> 	jmp searchpci
  6120                              <1> donesearchpci:
  6121 000055B1 BA00000000          <1> 	mov edx, 0
  6122 000055B6 C3                  <1> 	ret
  6123                              <1> foundpciaddr:
  6124 000055B7 B010                <1> 	mov al, 0x10
  6125 000055B9 A2[7A540000]        <1> 	mov [pciregister], al
  6126                              <1> findpciioaddr:
  6127 000055BE E83E000000          <1> 	call getpciaddr
  6128 000055C3 BAF80C0000          <1> 	mov edx, 0xCF8
  6129 000055C8 EF                  <1> 	out dx, eax
  6130 000055C9 BAFC0C0000          <1> 	mov edx, 0xCFC
  6131 000055CE ED                  <1> 	in eax, dx
  6132 000055CF 89C3                <1> 	mov ebx, eax
  6133 000055D1 81E301000000        <1> 	and ebx, 1
  6134 000055D7 81FB00000000        <1> 	cmp ebx, 0
  6135 000055DD 0F8408000000        <1> 	je near notpciioaddr
  6136 000055E3 2D01000000          <1> 	sub eax, 1
  6137 000055E8 89C2                <1> 	mov edx, eax
  6138 000055EA C3                  <1> 	ret
  6139                              <1> notpciioaddr:
  6140 000055EB A0[7A540000]        <1> 	mov al, [pciregister]
  6141 000055F0 0404                <1> 	add al, 4
  6142 000055F2 3C28                <1> 	cmp al, 0x28
  6143 000055F4 0F87CFFEFFFF        <1> 	ja near searchpciret
  6144 000055FA A2[7A540000]        <1> 	mov [pciregister], al
  6145 000055FF EBBD                <1> 	jmp findpciioaddr
  6146                              <1> getpciaddr:		;;puts it in eax and ebx
  6147 00005601 B800000000          <1> 			mov eax, 0
  6148 00005606 BB00000080          <1> 			mov ebx, 0x80000000
  6149 0000560B A0[77540000]        <1> 			mov al, [pcibus]
  6150 00005610 C1E010              <1> 			shl eax, 16
  6151 00005613 01C3                <1> 			add ebx, eax
  6152 00005615 B800000000          <1> 			mov eax, 0
  6153 0000561A A0[78540000]        <1> 			mov al, [pcidevice]
  6154 0000561F C1E00B              <1> 			shl eax, 11
  6155 00005622 01C3                <1> 			add ebx, eax
  6156 00005624 B800000000          <1> 			mov eax, 0
  6157 00005629 A0[79540000]        <1> 			mov al, [pcifunction]
  6158 0000562E C1E008              <1> 			shl eax, 8
  6159 00005631 01C3                <1> 			add ebx, eax
  6160 00005633 B800000000          <1> 			mov eax, 0
  6161 00005638 A0[7A540000]        <1> 			mov al, [pciregister]
  6162 0000563D 01C3                <1> 			add ebx, eax
  6163 0000563F 89D8                <1> 			mov eax, ebx
  6164 00005641 C3                  <1> 			ret
  6165                              <1> 			
  6166                                  	;%include 'source/process.asm'
  6167                                      %include 'source/disk.asm'
  6168                              <1> ;;disk.asm - new - using lba
  6169                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  6170 00005642 803F00              <1> 	cmp byte [edi], 0
  6171 00005645 0F8444000000        <1> 	je near nofileload
  6172 0000564B 89FA                <1> 	mov edx, edi
  6173 0000564D BB[AA5E0000]        <1> 	mov ebx, diskfileindex
  6174                              <1> nextnamechar:
  6175 00005652 8A07                <1> 	mov al, [edi]
  6176 00005654 8A23                <1> 	mov ah, [ebx]
  6177 00005656 47                  <1> 	inc edi
  6178 00005657 43                  <1> 	inc ebx
  6179 00005658 88C1                <1> 	mov cl, al
  6180 0000565A 08E1                <1> 	or cl, ah
  6181 0000565C 80F900              <1> 	cmp cl, 0
  6182 0000565F 744E                <1> 	je equalfilenames
  6183 00005661 80F920              <1> 	cmp cl, ' '
  6184 00005664 7449                <1> 	je equalfilenames
  6185 00005666 3C2A                <1> 	cmp al, '*'
  6186 00005668 742B                <1> 	je equalfilenames2
  6187 0000566A 80FC00              <1> 	cmp ah, 0
  6188 0000566D 7410                <1> 	je nextfilename
  6189 0000566F 3C00                <1> 	cmp al, 0
  6190 00005671 740C                <1> 	je nextfilename
  6191 00005673 38E0                <1> 	cmp al, ah
  6192 00005675 74DB                <1> 	je nextnamechar
  6193                              <1> getebxzero:
  6194 00005677 8A23                <1> 	mov ah, [ebx]
  6195 00005679 43                  <1> 	inc ebx
  6196 0000567A 80FC00              <1> 	cmp ah, 0
  6197 0000567D 75F8                <1> 	jne getebxzero
  6198                              <1> nextfilename:
  6199 0000567F 81C308000000        <1> 	add ebx, 8		;;next descriptor
  6200 00005685 89D7                <1> 	mov edi, edx
  6201 00005687 81FB[1C5F0000]      <1> 	cmp ebx, enddiskfileindex
  6202 0000568D 72C3                <1> 	jb nextnamechar
  6203                              <1> nofileload:
  6204 0000568F BA94010000          <1> 	mov edx, 404	;;indicate not found error
  6205 00005694 C3                  <1> 	ret
  6206                              <1> equalfilenames2:
  6207 00005695 81EB02000000        <1> 	sub ebx, 2
  6208                              <1> eqfilefind:
  6209 0000569B 43                  <1> 	inc ebx
  6210 0000569C 81FB[1C5F0000]      <1> 	cmp ebx, enddiskfileindex
  6211 000056A2 0F83E7FFFFFF        <1> 	jae near nofileload
  6212 000056A8 8A03                <1> 	mov al, [ebx]
  6213 000056AA 3C00                <1> 	cmp al, 0
  6214 000056AC 75ED                <1> 	jne eqfilefind
  6215 000056AE 43                  <1> 	inc ebx
  6216                              <1> equalfilenames:
  6217 000056AF 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  6218 000056B2 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  6219 000056B4 031D[88010000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  6220 000056BA B900000000          <1> 	mov ecx, 0
  6221 000056BF 88C1                <1> 	mov cl, al			;;get excess number of sectors
  6222 000056C1 D0E1                <1> 	shl cl, 1
  6223 000056C3 D0E9                <1> 	shr cl, 1			;;cut off at 128
  6224 000056C5 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  6225 000056C7 B500                <1> 	mov ch, 0			;;drive 0
  6226 000056C9 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  6227                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  6228 000056CC A3[0A570000]        <1> 	mov [filetracks], eax
  6229 000056D1 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  6230 000056D3 89DA                <1> 	mov edx, ebx
  6231 000056D5 80F900              <1> 	cmp cl, 0
  6232 000056D8 7405                <1> 	je copytracksforfile
  6233 000056DA E837000000          <1> 	call diskr		;;take care of excess sectors
  6234                              <1> copytracksforfile:
  6235 000056DF A1[0A570000]        <1> 	mov eax, [filetracks]
  6236 000056E4 3D00000000          <1> 	cmp eax, 0
  6237 000056E9 7419                <1> 	je donecopyfile
  6238 000056EB 48                  <1> 	dec eax
  6239 000056EC A3[0A570000]        <1> 	mov [filetracks], eax
  6240 000056F1 89D3                <1> 	mov ebx, edx	;;get end lba
  6241 000056F3 B180                <1> 	mov cl, 0x80
  6242 000056F5 8A2D[87010000]      <1> 	mov ch, [DriveNumber]
  6243 000056FB 89FE                <1> 	mov esi, edi	;;reset buffer
  6244 000056FD E814000000          <1> 	call diskr
  6245 00005702 EBDB                <1> 	jmp copytracksforfile
  6246                              <1> donecopyfile:
  6247 00005704 BA00000000          <1> 	mov edx, 0	;;no error
  6248 00005709 C3                  <1> 	ret
  6249                              <1> 	
  6250 0000570A 00000000            <1> filetracks dd 0
  6251 0000570E 00                  <1> lbad1 db 0
  6252 0000570F 00                  <1> lbad2 db 0
  6253 00005710 00                  <1> lbad3 db 0
  6254 00005711 00                  <1> lbad4 db 0
  6255 00005712 00                  <1> lbad5 db 0
  6256 00005713 00                  <1> lbad6 db 0
  6257 00005714 6400                <1> segments dw 100
  6258                              <1> 
  6259                              <1> diskr:		;;sector count in cl, disk number in ch, 48 bit address with last 32 bits in ebx, buffer in esi, puts end buffer in edi and end lba in edx
  6260                              <1> 
  6261 00005716 8935[2F580000]      <1> 	mov [bufferstartesi], esi
  6262 0000571C 891D[2B580000]      <1> 	mov [lbaadstartebx], ebx
  6263 00005722 BA00000000          <1> 	mov edx, 0
  6264 00005727 88CA                <1> 	mov dl, cl
  6265 00005729 01DA                <1> 	add edx, ebx
  6266 0000572B 8915[27580000]      <1> 	mov [lbaadend], edx
  6267 00005731 881D[0E570000]      <1> 	mov [lbad1], bl
  6268 00005737 883D[0F570000]      <1> 	mov [lbad2], bh
  6269 0000573D C1C310              <1> 	rol ebx, 16
  6270 00005740 881D[10570000]      <1> 	mov [lbad3], bl
  6271 00005746 883D[11570000]      <1> 	mov [lbad4], bh
  6272 0000574C C1CB10              <1> 	ror ebx, 16
  6273                              <1> 
  6274 0000574F B840000000          <1> 	mov eax, 0x40
  6275 00005754 66BAF601            <1> 	mov dx, 0x1F6
  6276 00005758 EE                  <1> 	out dx, al	;;send magic bits-add drive indicator later
  6277                              <1> 	
  6278 00005759 B000                <1> 	mov al, 0
  6279 0000575B 66BAF201            <1> 	mov dx, 0x1F2
  6280 0000575F EE                  <1> 	out dx, al	;;16 bit sector count-last byte now 0
  6281                              <1> 	
  6282 00005760 A0[11570000]        <1> 	mov al, [lbad4]
  6283 00005765 6642                <1> 	inc dx
  6284 00005767 EE                  <1> 	out dx, al
  6285                              <1> 	
  6286 00005768 A0[12570000]        <1> 	mov al, [lbad5]
  6287 0000576D 6642                <1> 	inc dx
  6288 0000576F EE                  <1> 	out dx, al
  6289                              <1> 	
  6290 00005770 A0[13570000]        <1> 	mov al, [lbad6]
  6291 00005775 6642                <1> 	inc dx
  6292 00005777 EE                  <1> 	out dx, al
  6293                              <1> 	
  6294 00005778 88C8                <1> 	mov al, cl
  6295 0000577A 66BAF201            <1> 	mov dx, 0x1F2
  6296 0000577E EE                  <1> 	out dx, al	;;low byte of 16 bit sector count
  6297                              <1> 	
  6298 0000577F A0[0E570000]        <1> 	mov al, [lbad1]
  6299 00005784 6642                <1> 	inc dx
  6300 00005786 EE                  <1> 	out dx, al
  6301                              <1> 	
  6302 00005787 A0[0F570000]        <1> 	mov al, [lbad2]
  6303 0000578C 6642                <1> 	inc dx
  6304 0000578E EE                  <1> 	out dx, al
  6305                              <1> 	
  6306 0000578F A0[10570000]        <1> 	mov al, [lbad3]
  6307 00005794 6642                <1> 	inc dx
  6308 00005796 EE                  <1> 	out dx, al
  6309                              <1> 	
  6310 00005797 B024                <1> 	mov al, 0x24
  6311 00005799 66BAF701            <1> 	mov dx, 0x1F7
  6312 0000579D EE                  <1> 	out dx, al	;;READ!!!
  6313 0000579E 66BBFFFF            <1> 	mov bx, 0xFFFF		;;try 65536 times before forcing
  6314                              <1> diskrwait:
  6315 000057A2 66BAF701            <1> 	mov dx, 0x1F7
  6316 000057A6 EC                  <1> 	in al, dx
  6317 000057A7 2408                <1> 	and al, 0x08
  6318 000057A9 664B                <1> 	dec bx
  6319 000057AB 6681FB0000          <1> 	cmp bx, 0
  6320 000057B0 7404                <1> 	je nomorediskwait
  6321 000057B2 3C08                <1> 	cmp al, 0x08
  6322 000057B4 75EC                <1> 	jne diskrwait
  6323                              <1> nomorediskwait:
  6324 000057B6 66BB0001            <1> 	mov bx, 256
  6325                              <1> diskdataread:
  6326 000057BA 66BAF001            <1> 	mov dx, 0x1F0
  6327 000057BE 66ED                <1> 	in ax, dx
  6328 000057C0 668906              <1> 	mov [esi], ax
  6329 000057C3 81C602000000        <1> 	add esi, 2
  6330 000057C9 664B                <1> 	dec bx
  6331 000057CB 6681FB0000          <1> 	cmp bx, 0
  6332 000057D0 75E8                <1> 	jne diskdataread		;;read a sector
  6333 000057D2 FEC9                <1> 	dec cl
  6334 000057D4 80F900              <1> 	cmp cl, 0
  6335 000057D7 75C9                <1> 	jne diskrwait
  6336 000057D9 89F7                <1> 	mov edi, esi
  6337 000057DB 8B15[27580000]      <1> 	mov edx, [lbaadend]
  6338 000057E1 8B35[2F580000]      <1> 	mov esi, [bufferstartesi]
  6339 000057E7 8B1D[2B580000]      <1> 	mov ebx, [lbaadstartebx]
  6340 000057ED C3                  <1> 	ret
  6341                              <1> 	
  6342                              <1> 	
  6343                              <1> diskold: ;;28 bits
  6344 000057EE 66B80000            <1> 	mov ax, 0
  6345 000057F2 66BAF101            <1> 	mov dx, 0x1F1
  6346 000057F6 EE                  <1> 	out dx, al	;;send null byte to port
  6347 000057F7 6642                <1> 	inc dx	;;0x1F2
  6348 000057F9 88C8                <1> 	mov al, cl	;;get sector count
  6349 000057FB EE                  <1> 	out dx, al	;;send sector count
  6350 000057FC 6642                <1> 	inc dx	;;0x1F3
  6351 000057FE 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  6352 00005800 EE                  <1> 	out dx, al	;;send them
  6353 00005801 6642                <1> 	inc dx	;;0x1F4
  6354 00005803 C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  6355 00005806 88D8                <1> 	mov al, bl
  6356 00005808 EE                  <1> 	out dx, al
  6357 00005809 6642                <1> 	inc dx	;;0x1F5
  6358 0000580B C1CB08              <1> 	ror ebx, 8	;;again
  6359 0000580E 88D8                <1> 	mov al, bl
  6360 00005810 EE                  <1> 	out dx, al
  6361 00005811 6642                <1> 	inc dx	;;0x1F6
  6362 00005813 C1CB08              <1> 	ror ebx, 8
  6363 00005816 88D8                <1> 	mov al, bl
  6364 00005818 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  6365 0000581A 0CE0                <1> 	or al, 0xE0			;;majic number
  6366 0000581C C0E504              <1> 	shl ch, 4
  6367 0000581F 08E8                <1> 	or al, ch
  6368 00005821 EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  6369 00005822 6642                <1> 	inc dx	;;0x1F7
  6370 00005824 B020                <1> 	mov al, 0x20
  6371 00005826 EE                  <1> 	out dx, al			;;execute read command
  6372                              <1> 	
  6373 00005827 00000000            <1> lbaadend dd 0
  6374 0000582B 00000000            <1> lbaadstartebx dd 0
  6375 0000582F 00000000            <1> bufferstartesi dd 0
  6376                                  	%include 'source/threads.asm'
  6377                              <1> ;;THIS IS MY FIRST ATTEMPT AT IMPLEMENTING THREADS
  6378                              <1> threadstarttest:
  6379 00005833 E9ED040000          <1>     jmp startthreads
  6380                              <1> mainthread:
  6381 00005838 F4                  <1> 	hlt		;;this does not work properly
  6382 00005839 EBFD                <1> 	jmp mainthread
  6383                              <1> 	
  6384                              <1> nwcmdst:
  6385 0000583B FA                  <1> 	cli			;;no more interrupts!!!
  6386 0000583C BE[5A5F0000]        <1> 	mov esi, line
  6387 00005841 E865BFFFFF          <1> 	call print
  6388 00005846 C605[83580000]00    <1> 	mov byte [threadson], 0
  6389 0000584D E9BAC4FFFF          <1> 	jmp nwcmd
  6390                              <1> 	
  6391                              <1> modelthread:
  6392 00005852 668B1D[A85E0000]    <1> 	mov bx, [currentthread]
  6393 00005859 B001                <1> 	mov al, 1
  6394 0000585B B409                <1> 	mov ah, 9
  6395 0000585D B900000000          <1> 	mov ecx, 0
  6396 00005862 6689D9              <1> 	mov cx, bx
  6397 00005865 CD30                <1> 	int 0x30
  6398                              <1> 	
  6399 00005867 B90000DEC0          <1> 	mov ecx, 0xC0DE0000
  6400 0000586C 6689D9              <1> 	mov cx, bx
  6401 0000586F CD30                <1> 	int 0x30
  6402                              <1> 	
  6403 00005871 B90000ADDE          <1> 	mov ecx, 0xDEAD0000
  6404 00005876 6689D9              <1> 	mov cx, bx
  6405 00005879 CD30                <1> 	int 0x30
  6406                              <1> 	
  6407 0000587B CD08                <1> 	int 8	;;skip this thread three times to ensure that all threads run
  6408 0000587D CD08                <1> 	int 8
  6409 0000587F CD08                <1> 	int 8
  6410                              <1> 	
  6411 00005881 EBB8                <1> 	jmp nwcmdst
  6412                              <1> 	
  6413                              <1> 	
  6414 00005883 00                  <1> threadson db 0
  6415 00005884 04000000            <1> lastthread dd 4
  6416                              <1> 
  6417                              <1> thrdtst:
  6418 00005888 [52580000]<rept>    <1> times 256 dd modelthread	;;could go up to 2048, but that takes too long
  6419                              <1> thrdtstend:
  6420                              <1> 
  6421 00005C88 00000000            <1> 	espold dd 0
  6422                              <1> 
  6423                              <1> threadfork:
  6424 00005C8C C605[83580000]01    <1> 	mov byte [threadson], 1
  6425 00005C93 60                  <1> 	pushad
  6426 00005C94 66B80040            <1> 	mov ax, 0x4000	;;this is the divider for the PIT
  6427 00005C98 E640                <1> 	out 0x40, al
  6428 00005C9A 66C1C008            <1> 	rol ax, 8
  6429 00005C9E E640                <1> 	out 0x40, al
  6430                              <1> 	
  6431 00005CA0 8CC8                <1> 	mov eax, cs
  6432 00005CA2 89C2                <1> 	mov edx, eax
  6433 00005CA4 8B4C2428            <1> 	mov ecx, [esp + 40]
  6434 00005CA8 81C900020000        <1> 	or ecx, 0x200
  6435 00005CAE 89E3                <1> 	mov ebx, esp
  6436 00005CB0 BC[27590000]        <1> 	mov esp, stackdummy
  6437 00005CB5 90                  <1> 	nop
  6438                              <1> 	
  6439 00005CB6 60                  <1> 	pushad
  6440 00005CB7 B8[38580000]        <1> 	mov eax, mainthread
  6441 00005CBC 89442420            <1> 	mov [esp + 32], eax
  6442 00005CC0 89542424            <1> 	mov [esp + 36], edx
  6443 00005CC4 894C2428            <1> 	mov [esp + 40], ecx
  6444 00005CC8 8925[1F350000]      <1> 	mov [threadlist], esp
  6445                              <1> 	
  6446 00005CCE 891D[885C0000]      <1> 	mov [espold], ebx
  6447 00005CD4 89F0                <1> 	mov eax, esi
  6448 00005CD6 BC[275D0000]        <1> 	mov esp, stack1
  6449 00005CDB 8B1D[84580000]      <1> 	mov ebx, [lastthread]
  6450 00005CE1 C1E30A              <1> 	shl ebx, 10
  6451 00005CE4 01DC                <1> 	add esp, ebx
  6452 00005CE6 C1EB0A              <1> 	shr ebx, 10
  6453 00005CE9 90                  <1> 	nop
  6454 00005CEA 60                  <1> 	pushad
  6455 00005CEB 89442420            <1> 	mov [esp + 32], eax
  6456 00005CEF 89542424            <1> 	mov [esp + 36], edx
  6457 00005CF3 894C2428            <1> 	mov [esp + 40], ecx
  6458 00005CF7 89A3[1F350000]      <1> 	mov [threadlist + ebx], esp
  6459 00005CFD 8B25[885C0000]      <1> 	mov esp, [espold]
  6460 00005D03 81C304000000        <1> 	add ebx, 4
  6461 00005D09 89A3[1F350000]      <1> 	mov [threadlist + ebx], esp
  6462 00005D0F 81C304000000        <1> 	add ebx, 4
  6463 00005D15 891D[84580000]      <1> 	mov [lastthread], ebx
  6464 00005D1B B0FE                <1> 	mov al, 0xFE
  6465 00005D1D E621                <1> 	out 0x21, al
  6466 00005D1F B020                <1> 	mov al, 0x20
  6467 00005D21 E620                <1> 	out 0x20, al
  6468 00005D23 61                  <1> 	popad
  6469 00005D24 C3                  <1> 	ret
  6470                              <1> 
  6471                              <1> startthreads:
  6472 00005D25 C605[83580000]01    <1> 	mov byte [threadson], 1
  6473 00005D2C 60                  <1> 	pushad
  6474 00005D2D 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  6475 00005D31 E640                <1> 	out 0x40, al
  6476 00005D33 66C1C008            <1> 	rol ax, 8
  6477 00005D37 E640                <1> 	out 0x40, al
  6478                              <1> 	
  6479 00005D39 8CC8                <1> 	mov eax, cs
  6480 00005D3B 89C2                <1> 	mov edx, eax
  6481 00005D3D 8B4C2428            <1> 	mov ecx, [esp + 40]
  6482 00005D41 81C900020000        <1> 	or ecx, 0x200
  6483 00005D47 89E3                <1> 	mov ebx, esp
  6484 00005D49 BC[27590000]        <1> 	mov esp, stackdummy
  6485 00005D4E 90                  <1> 	nop
  6486                              <1> 	
  6487 00005D4F 60                  <1> 	pushad
  6488 00005D50 B8[38580000]        <1> 	mov eax, mainthread
  6489 00005D55 89442420            <1> 	mov [esp + 32], eax
  6490 00005D59 89542424            <1> 	mov [esp + 36], edx
  6491 00005D5D 894C2428            <1> 	mov [esp + 40], ecx
  6492 00005D61 8925[1F350000]      <1> 	mov [threadlist], esp
  6493                              <1> 
  6494                              <1> 			;;that above setup the dummy thread which for some reason does not run
  6495                              <1> 			;;this below will setup the threads found in thrdtst
  6496                              <1> 
  6497                              <1> testthreads:
  6498 00005D67 BE[88580000]        <1> 	mov esi, thrdtst
  6499 00005D6C BC[275D0000]        <1> 	mov esp, stack1
  6500 00005D71 BF[1F350000]        <1> 	mov edi, threadlist
  6501 00005D76 81C704000000        <1> 	add edi, 4
  6502                              <1> nxtthreadld:
  6503 00005D7C 60                  <1> 	pushad
  6504 00005D7D 8B06                <1> 	mov eax, [esi]
  6505 00005D7F 89442420            <1> 	mov [esp + 32], eax
  6506 00005D83 89542424            <1> 	mov [esp + 36], edx
  6507 00005D87 894C2428            <1> 	mov [esp + 40], ecx
  6508 00005D8B 8927                <1> 	mov [edi], esp
  6509 00005D8D 81C400040000        <1> 	add esp, 1024
  6510 00005D93 81C604000000        <1> 	add esi, 4
  6511 00005D99 81C704000000        <1> 	add edi, 4
  6512 00005D9F 81FF[27550000]      <1> 	cmp edi, threadlistend
  6513 00005DA5 0F8322000000        <1> 	jae near nomorethreadspace
  6514 00005DAB 81FC[27652000]      <1> 	cmp esp, bssend
  6515 00005DB1 0F8350000000        <1> 	jae near nomorestackspace
  6516 00005DB7 81FE[885C0000]      <1> 	cmp esi, thrdtstend
  6517 00005DBD 72BD                <1> 	jb nxtthreadld
  6518 00005DBF 89DC                <1> 	mov esp, ebx	
  6519 00005DC1 B0FE                <1> 	mov al, 0xFE
  6520 00005DC3 E621                <1> 	out 0x21, al
  6521 00005DC5 B020                <1> 	mov al, 0x20
  6522 00005DC7 E620                <1> 	out 0x20, al
  6523 00005DC9 61                  <1> 	popad
  6524 00005DCA FB                  <1> 	sti
  6525 00005DCB EBFE                <1> 	jmp $	;;wait for the irq to hook
  6526                              <1> 	
  6527                              <1> nomorethreadspace:
  6528 00005DCD BE[E35D0000]        <1> 	mov esi, nmts
  6529 00005DD2 E8D4B9FFFF          <1> 	call print
  6530 00005DD7 C605[83580000]00    <1> 	mov byte [threadson], 0
  6531 00005DDE E929BFFFFF          <1> 	jmp nwcmd
  6532 00005DE3 74656820636F6C6F6E- <1> nmts	db "teh colonel no can haz moar treds",13,10,0
  6533 00005DEC 656C206E6F2063616E- <1>
  6534 00005DF5 2068617A206D6F6172- <1>
  6535 00005DFE 2074726564730D0A00  <1>
  6536                              <1> 
  6537                              <1> nomorestackspace:
  6538 00005E07 BE[1D5E0000]        <1> 	mov esi, nmss
  6539 00005E0C E89AB9FFFF          <1> 	call print
  6540 00005E11 C605[83580000]00    <1> 	mov byte [threadson], 0
  6541 00005E18 E9EFBEFFFF          <1> 	jmp nwcmd
  6542 00005E1D 74656820636F6C6F6E- <1> nmss	db "teh colonel no can haz moar staqz",13,10,0
  6543 00005E26 656C206E6F2063616E- <1>
  6544 00005E2F 2068617A206D6F6172- <1>
  6545 00005E38 20737461717A0D0A00  <1>
  6546                              <1> 	
  6547                              <1> threadswitch:
  6548 00005E41 FA                  <1> 	cli
  6549 00005E42 60                  <1> 	pushad
  6550 00005E43 BF[1F350000]        <1> 	mov edi, threadlist
  6551 00005E48 B800000000          <1> 	mov eax, 0
  6552 00005E4D 66A1[A85E0000]      <1> 	mov ax, [currentthread]
  6553 00005E53 6640                <1> 	inc ax
  6554 00005E55 66A3[A85E0000]      <1> 	mov [currentthread], ax
  6555 00005E5B 6648                <1> 	dec ax
  6556 00005E5D C1E002              <1> 	shl eax, 2
  6557 00005E60 01C7                <1> 	add edi, eax
  6558 00005E62 8927                <1> 	mov [edi], esp
  6559 00005E64 81C704000000        <1> 	add edi, 4
  6560 00005E6A 81FF[27550000]      <1> 	cmp edi, threadlistend
  6561 00005E70 0F830D000000        <1> 	jae near nookespthread
  6562 00005E76 8B07                <1> 	mov eax, [edi]
  6563 00005E78 3D00000000          <1> 	cmp eax, 0
  6564 00005E7D 0F851C000000        <1> 	jne near okespthread
  6565                              <1> nookespthread:
  6566 00005E83 BF[1F350000]        <1> 	mov edi, threadlist
  6567 00005E88 66B80000            <1> 	mov ax, 0
  6568 00005E8C 66A3[A85E0000]      <1> 	mov [currentthread], ax
  6569 00005E92 8B07                <1> 	mov eax, [edi]
  6570 00005E94 3D00000000          <1> 	cmp eax, 0
  6571 00005E99 0F849CF9FFFF        <1> 	je near nwcmdst
  6572                              <1> okespthread:
  6573 00005E9F 89C4                <1> 	mov esp, eax
  6574 00005EA1 B020                <1> 	mov al, 0x20
  6575 00005EA3 E620                <1> 	out 0x20, al
  6576 00005EA5 61                  <1> 	popad
  6577 00005EA6 FB                  <1> 	sti
  6578 00005EA7 CF                  <1> 	iretd
  6579                              <1> 	
  6580 00005EA8 0000                <1> currentthread dw 0
  6581                                      %include 'fileindex.asm'
  6582                              <1> diskfileindex:
  6583 00005EAA 65787000            <1> db "exp",0
  6584 00005EAE 3A000000            <1> dd (f0-$$)/512
  6585 00005EB2 01000000            <1> dd (f1-f0)/512
  6586 00005EB6 666F726B00          <1> db "fork",0
  6587 00005EBB 3B000000            <1> dd (f1-$$)/512
  6588 00005EBF 01000000            <1> dd (f2-f1)/512
  6589 00005EC3 736F6C6C65726F732E- <1> db "solleros.bmp",0
  6590 00005ECC 626D7000            <1>
  6591 00005ED0 3C000000            <1> dd (f2-$$)/512
  6592 00005ED4 B0020000            <1> dd (f3-f2)/512
  6593 00005ED8 736F6C6C65726F732E- <1> db "solleros.txt",0
  6594 00005EE1 74787400            <1>
  6595 00005EE5 EC020000            <1> dd (f3-$$)/512
  6596 00005EE9 01000000            <1> dd (f4-f3)/512
  6597 00005EED 74656C7900          <1> db "tely",0
  6598 00005EF2 ED020000            <1> dd (f4-$$)/512
  6599 00005EF6 01000000            <1> dd (f5-f4)/512
  6600 00005EFA 74696D6500          <1> db "time",0
  6601 00005EFF EE020000            <1> dd (f5-$$)/512
  6602 00005F03 02000000            <1> dd (f6-f5)/512
  6603 00005F07 7475746F7269616C2E- <1> db "tutorial.bat",0
  6604 00005F10 62617400            <1>
  6605 00005F14 F0020000            <1> dd (f6-$$)/512
  6606 00005F18 03000000            <1> dd (f7-f6)/512
  6607                              <1> enddiskfileindex:
  6608                              <1> 
  6609                                  	%include 'source/msg.asm'
  6610 00005F1C 6578697400          <1> 	exitmsg db	"exit",0
  6611 00005F21 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  6612 00005F2A 00                  <1>
  6613 00005F2B 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  6614 00005F34 6E642E0D0A00        <1>
  6615 00005F3A 757365726E616D653A- <1> 	userask db "username:",0
  6616 00005F43 00                  <1>
  6617 00005F44 70617373776F72643A- <1> 	pwdask	db	"password:",0
  6618 00005F4D 00                  <1>
  6619 00005F4E 40536F6C6C65724F53- <1> 	location	db	"@SollerOS]:",0
  6620 00005F57 5D3A00              <1>
  6621 00005F5A 0D0A00              <1> 	line	db	13,10,0
  6622 00005F5D 200900              <1> 	dirtab 	db " ",9,0
  6623                              <1> 	userlst:
  6624 00005F60 7573657200          <1> 			db "user",0
  6625 00005F65 70617373776F726400  <1> 			db "password",0
  6626 00005F6E 726F6F7400          <1> 			db "root",0
  6627 00005F73 617765736F6D65706F- <1> 			db "awesomepower",0
  6628 00005F7C 77657200            <1>
  6629 00005F80 6E00                <1> 			db "n",0	;;use for quick entry-a quick double n followed by a double enter will get you in
  6630 00005F82 00                  <1> 			db 0
  6631                              <1> 	userlstend:
  6632                              <1> 	
  6633 00005F82 <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  6634                              <1> fontend:
  6635                              <1> 
  6636                              <1> 
  6637                              <1> mcursor:
  6638 00006F83 01                  <1> 	db	00000001b
  6639 00006F84 81                  <1> 	db	10000001b
  6640 00006F85 C1                  <1> 	db	11000001b
  6641 00006F86 E1                  <1> 	db	11100001b
  6642 00006F87 F1                  <1> 	db	11110001b
  6643 00006F88 F9                  <1> 	db	11111001b
  6644 00006F89 FD                  <1> 	db	11111101b
  6645 00006F8A FF                  <1> 	db	11111111b
  6646 00006F8B F9                  <1> 	db	11111001b
  6647 00006F8C B9                  <1> 	db	10111001b
  6648 00006F8D 39                  <1> 	db	00111001b
  6649 00006F8E 1C                  <1> 	db	00011100b
  6650 00006F8F 1C                  <1> 	db	00011100b
  6651 00006F90 0E                  <1> 	db	00001110b
  6652 00006F91 0E                  <1> 	db	00001110b
  6653 00006F92 0C                  <1> 	db	00001100b
  6654                              <1> 
  6655                              <1> ;cursorbmp:
  6656                              <1> ;	db	1,0,0,0,0,0,0,0
  6657                              <1> ;	db	1,1,0,0,0,0,0,0
  6658                              <1> ;	db	1,1,1,0,0,0,0,0
  6659                              <1> ;	db	1,1,1,1,0,0,0,0
  6660                              <1> ;	db	1,1,1,1,1,0,0,0
  6661                              <1> ;	db	1,1,1,1,1,1,0,0
  6662                              <1> ;	db	1,1,1,1,1,1,1,0
  6663                              <1> ;	db	1,1,1,1,1,1,1,1
  6664                              <1> ;	db	1,1,1,1,1,1,0,0
  6665                              <1> ;	db	1,1,0,1,1,1,0,0
  6666                              <1> ;	db	1,0,0,1,1,1,0,0
  6667                              <1> ;	db	0,0,0,0,1,1,1,0
  6668                              <1> ;	db	0,0,0,0,1,1,1,0
  6669                              <1> ;	db	0,0,0,0,0,1,1,1
  6670                              <1> ;	db	0,0,0,0,0,1,1,1
  6671                              <1> ;	db	0,0,0,0,0,1,1,0
  6672                              <1> ;cursorbmpend:
  6673                              <1> 
  6674                              <1> 
  6675                              <1> VBEMODEBLOCK:
  6676 00006F93 00<rept>            <1> vbesignature 		times 4 db 0	;VBE Signature
  6677 00006F97 00<rept>            <1> vbeversion  		times 2 db 0	;VBE Version
  6678 00006F99 00<rept>            <1> oemstringptr  		times 4 db 0	;Pointer to OEM String
  6679 00006F9D 00<rept>            <1> capabilities 		times 4 db 0	;Capabilities of graphics cont.
  6680 00006FA1 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  6681 00006FA5 00<rept>            <1> totalmemory   		times 2 db 0	;number of 64Kb memory blocks
  6682 00006FA7 00<rept>            <1> oemsoftwarerev  	times 2 db 0	;VBE implementation Software revision
  6683 00006FA9 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  6684 00006FAD 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  6685 00006FB1 00<rept>            <1> oemproductrevptr 	times 4 db 0	;Pointer to Product Revision String
  6686 00006FB5 00<rept>            <1> reserved			times 222 db 0	;Reserved for VBE implementation scratch area
  6687 00007093 00<rept>            <1> oemdata 			times 256 db 0	;Data Area for OEM Strings
  6688                              <1> 
  6689                              <1> 
  6690                              <1> VBEMODEINFOBLOCK:
  6691                              <1> ;Mandatory information for all VBE revision
  6692 00007193 00<rept>            <1> modeattributes   	times 2 db 0	;Mode attributes
  6693 00007195 00                  <1> winaattributes   	times 1 db 0	;Window A attributes
  6694 00007196 00                  <1> winbattributes   	times 1 db 0	;Window B attributes
  6695 00007197 00<rept>            <1> wingranularity   	times 2 db 0	;Window granularity
  6696 00007199 00<rept>            <1> winsize          	times 2 db 0	;Window size
  6697 0000719B 00<rept>            <1> winasegment      	times 2 db 0	;Window A start segment
  6698 0000719D 00<rept>            <1> winbsegment      	times 2 db 0	;Window B start segment
  6699 0000719F 00<rept>            <1> winfuncptr       	times 4 db 0	;pointer to window function
  6700 000071A3 00<rept>            <1> bytesperscanline 	times 2 db 0	;Bytes per scan line
  6701                              <1> 
  6702                              <1> ;Mandatory information for VBE 1.2 and above
  6703 000071A5 00<rept>            <1> xresolution     	times 2 db 0	;Horizontal resolution in pixel or chars
  6704 000071A7 00<rept>            <1> yresolution	    	times 2 db 0	;Vertical resolution in pixel or chars
  6705 000071A9 00                  <1> xcharsize       	times 1 db 0	;Character cell width in pixel
  6706 000071AA 00                  <1> ycharsize       	times 1 db 0	;Character cell height in pixel
  6707 000071AB 00                  <1> numberofplanes  	times 1 db 0	;Number of memory planes
  6708 000071AC 00                  <1> bitsperpixel    	times 1 db 0	;Bits per pixel
  6709 000071AD 00                  <1> numberofbanks   	times 1 db 0	;Number of banks
  6710 000071AE 00                  <1> memorymodel     	times 1 db 0	;Memory model type
  6711 000071AF 00                  <1> banksize        	times 1 db 0	;Bank size in KB
  6712 000071B0 00                  <1> numberofimagepages	times 1 db 0	;Number of images
  6713 000071B1 00                  <1> reserved1       	times 1 db 0	;Reserved for page function
  6714                              <1> 
  6715                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  6716 000071B2 00                  <1> redmasksize			times 1 db 0	;Size of direct color red mask in bits
  6717 000071B3 00                  <1> redfieldposition	times 1 db 0	;Bit position of lsb of red bask
  6718 000071B4 00                  <1> greenmasksize   	times 1 db 0	;Size of direct color green mask in bits
  6719 000071B5 00                  <1> greenfieldposition	times 1 db 0	;Bit position of lsb of green bask
  6720 000071B6 00                  <1> bluemasksize		times 1 db 0	;Size of direct color blue mask in bits
  6721 000071B7 00                  <1> bluefieldposition	times 1 db 0	;Bit position of lsb of blue bask
  6722 000071B8 00                  <1> rsvdmasksize        times 1	db 0	;Size of direct color reserved mask in bits
  6723 000071B9 00                  <1> rsvdfieldposition	times 1	db 0	;Bit position of lsb of reserved bask
  6724 000071BA 00                  <1> directcolormodeinfo	times 1 db 0	;Direct color mode attributes
  6725                              <1> 
  6726                              <1> ;Mandatory information for VBE 2.0 and above
  6727 000071BB 00<rept>            <1> physbaseptr 		times 4 db 0	;Physical address for flat frame buffer
  6728 000071BF 00<rept>            <1> offscreenmemoffset 	times 4 db 0	;Pointer to start of off screen memory
  6729 000071C3 00<rept>            <1> offscreenmemsize 	times 2 db 0    ;Amount of off screen memory in 1Kb units
  6730 000071C5 00<rept>            <1> reserved2 			times 206 db 0  ;Remainder of ModeInfoBlock
  6731                                  	;%include 'source/memory.asm'
  6732                                  	%include 'source/buf.asm'
  6733 00007293 4255465354415254    <1> db "BUFSTART"
  6734                              <1> [section .bss]
  6735                              <1> bssstart:
  6736                              <1> stack:
  6737 00000000 <res 00001000>      <1> 	resb 4096
  6738                              <1> stackend:
  6739                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  6740 00001000 <res 00000200>      <1> 	resb 200h 
  6741                              <1> 	graphicstableend:
  6742                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  6743 00001200 <res 00000100>      <1> 	resb 256 
  6744                              <1> mcolorend:
  6745 00001300 <res 00000200>      <1> fileindex: resb 200h
  6746                              <1> fileindexend:
  6747 00001500 <res 00000001>      <1> IFON resb 1 
  6748 00001501 <res 00000064>      <1> IFTRUE resb 100 
  6749 00001565 <res 00000004>      <1> BATCHPOS resb 4 
  6750 00001569 <res 00000001>      <1> BATCHISON resb 1 
  6751 0000156A <res 00000001>      <1> LOOPON resb 1 
  6752 0000156B <res 00000004>      <1> LOOPPOS	resb 4 
  6753 0000156F <res 00000500>      <1> variables: 	resb 500h 
  6754 00001A6F <res 00000001>      <1> varend: resb 1
  6755 00001A70 <res 00000100>      <1> buftxt2: resb 100h
  6756 00001B70 <res 0000000A>      <1> resb 10
  6757 00001B7A <res 00000200>      <1> buftxt: resb 200h 
  6758 00001D7A <res 00000014>      <1> buf2:	resb 20 
  6759 00001D8E <res 00000001>      <1> numbuf: resb 1 
  6760 00001D8F <res 000012C0>      <1> videobuf2 		resb 0x12C0 
  6761 0000304F <res 000000C8>      <1> videobufend		resb 200
  6762 00003117 <res 00000004>      <1> lastcommandpos: resb 4
  6763 0000311B <res 00000004>      <1> currentcommandpos: resb 4
  6764                              <1> commandbuf:
  6765 0000311F <res 00000400>      <1> resb 1024
  6766                              <1> commandbufend:
  6767                              <1> rbuffstart: ;for use with networking
  6768                              <1> ;resb 8212
  6769                              <1> threadlist:	;;this buffer will hold the stack locations of all of the threads, up to 2048
  6770 0000351F <res 00002008>      <1> 	resb 2050*4
  6771                              <1> threadlistend:
  6772                              <1> stacks:		;;the stacks will go on forever until end of memory
  6773 00005527 <res 00000400>      <1> 	resb 1024
  6774                              <1> stackdummy:
  6775 00005927 <res 00000400>      <1> 	resb 1024
  6776                              <1> stack1:
  6777 00005D27 <res 00200800>      <1> 	resb 1024*2050	;;woah, thats a lot of space for stacks
  6778                              <1> bssend:		;;from here on, it is not kernel space so apps can be loaded here.
  6779                              <1> [section .text]
  6780                                      %include 'files.asm'
  6781 0000729B 00<rept>            <1> align 512,db 0
  6782                              <1> f0:
  6783 0000729B <incbin>            <1> incbin "included/exp"
  6784 00007514 00<rept>            <1> align 512,db 0
  6785                              <1> f1:
  6786 00007514 <incbin>            <1> incbin "included/fork"
  6787 00007667 00<rept>            <1> align 512,db 0
  6788                              <1> f2:
  6789 00007667 <incbin>            <1> incbin "included/solleros.bmp"
  6790 0005D7E6 00<rept>            <1> align 512,db 0
  6791                              <1> f3:
  6792 0005D7E6 <incbin>            <1> incbin "included/solleros.txt"
  6793 0005D976 00<rept>            <1> align 512,db 0
  6794                              <1> f4:
  6795 0005D976 <incbin>            <1> incbin "included/tely"
  6796 0005DBA1 00<rept>            <1> align 512,db 0
  6797                              <1> f5:
  6798 0005DBA1 <incbin>            <1> incbin "included/time"
  6799 0005DE7B 00<rept>            <1> align 512,db 0
  6800                              <1> f6:
  6801 0005DE7B <incbin>            <1> incbin "included/tutorial.bat"
  6802 0005E4AA 00<rept>            <1> align 512,db 0
  6803                              <1> f7:
