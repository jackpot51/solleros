     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> %include 'source/signature.asm'
     5                              <2> signature:	;used by bootloader to find SollerOS, is totally awesome
     6 00000000 EDA55ED1            <2> dd 0xD15EA5ED	;diseased
     7 00000004 15D000B1            <2> dd 0xB100D015	;blood is
     8 00000008 EDFED2BA            <2> dd 0xBAD2FEED	;bad to feed
     9 0000000C 95D0112A            <2> dd 0x2A11D095	;to all dogs
    10 00000010 52A71CA1            <2> dd 0xA11CA752	;all cats too.
    11 00000014 0F751015            <2> dd 0x1510750F   ;is lots of
    12 00000018 75CAADDE            <2> dd 0xDEADCA75   ;dead cats
    13 0000001C 95D0ADDE            <2> dd 0xDEADD095   ;dead dogs
    14 00000020 06000000            <2> dd 6
    15 00000024 534F4C4C45524F53    <2> db "SOLLEROS"
    16                              <2> signatureend:
    17                              <1> menustart:	
    18 0000002C 8CC8                <1> 	mov ax, cs
    19 0000002E 8ED8                <1> 	mov ds, ax
    20 00000030 8EC0                <1> 	mov es, ax
    21 00000032 8ED0                <1> 	mov ss, ax
    22 00000034 880E[8201]          <1> 	mov [DriveNumber], cl
    23 00000038 668916[8301]        <1> 	mov [lbaad], edx
    24 0000003D B800A0              <1> 	mov ax, 0xA000
    25 00000040 8EE8                <1> 	mov gs, ax
    26 00000042 B81200              <1> 	mov ax, 12h
    27 00000045 BB0000              <1> 	mov bx, 0
    28 00000048 CD10                <1> 	int 10h
    29                              <1> 	
    30                              <1> guiload:
    31 0000004A BE[8302]            <1> 	mov si, bootmsg
    32 0000004D E83C01              <1> 	call printrm
    33 00000050 B80000              <1> 	mov ax, 0
    34 00000053 CD16                <1> 	int 16h
    35 00000055 3C79                <1> 	cmp al, "y"
    36 00000057 0F85F400            <1> 	jne near guiload2
    37                              <1> guiloadagain:
    38 0000005B B8004F              <1> 	mov ax, 04F00h
    39 0000005E BF[BC5A]            <1> 	mov di, VBEMODEBLOCK
    40 00000061 CD10                <1> 	int 10h
    41 00000063 BE[DE5A]            <1> 	mov si, reserved
    42 00000066 81EE0200            <1> 	sub si, 2
    43                              <1> findvideomodes:
    44 0000006A 81C60200            <1> 	add si, 2
    45 0000006E 8B0C                <1> 	mov cx, [si]
    46 00000070 81F9FFFF            <1> 	cmp cx, 0xFFFF
    47 00000074 0F840A00            <1> 	je near nextvmode
    48 00000078 81FE[BC5B]          <1> 	cmp si, oemdata
    49 0000007C 0F83CF00            <1> 	jae near guiload2	;;kill if no valid list is found
    50 00000080 EBE8                <1> 	jmp findvideomodes 	
    51                              <1> ;;debug,shows vmodes available
    52                              <1> nextvmode:
    53 00000082 81EE0200            <1> 	sub si, 2
    54 00000086 81FE[DE5A]          <1> 	cmp si, reserved
    55 0000008A 0F82CDFF            <1> 	jb near guiloadagain
    56 0000008E 8B0C                <1> 	mov cx, [si]
    57 00000090 81F9FFFF            <1> 	cmp cx, 0xFFFF
    58 00000094 0F84EAFF            <1> 	je near nextvmode
    59 00000098 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    60 0000009C B8014F              <1> 	mov ax, 04F01h
    61 0000009F BF[BC5C]            <1> 	mov di, VBEMODEINFOBLOCK
    62 000000A2 890E[8701]          <1> 	mov [vesamode], cx
    63 000000A6 CD10                <1> 	int 10h
    64 000000A8 A0[D55C]            <1> 	mov al, [bitsperpixel]
    65 000000AB 3C10                <1> 	cmp al, 16
    66 000000AD 75D3                <1> 	jne nextvmode
    67 000000AF 8936[8901]          <1> 	mov [videomodecache], si
    68 000000B3 80FC00              <1> 	cmp ah, 0
    69 000000B6 0F842200            <1> 	je near setvesamode
    70 000000BA EBC6                <1> 	jmp nextvmode
    71 000000BC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    72 000000C5 20766964656F206D6F- <1>
    73 000000CE 6465204F4B3F28792F- <1>
    74 000000D7 6E290D0A00          <1>
    75                              <1> setvesamode:
    76 000000DC 8B0E[CE5C]          <1> 	mov cx, [xresolution]
    77 000000E0 E8C100              <1> 	call decshow
    78 000000E3 B078                <1> 	mov al, "x"
    79 000000E5 E82901              <1> 	call char
    80 000000E8 8B0E[D05C]          <1> 	mov cx, [yresolution]
    81 000000EC E8B500              <1> 	call decshow
    82 000000EF B040                <1> 	mov al, "@"
    83 000000F1 E81D01              <1> 	call char
    84 000000F4 8A0E[D55C]          <1> 	mov cl, [bitsperpixel]
    85 000000F8 E8A900              <1> 	call decshow
    86 000000FB BE[BC00]            <1> 	mov si, isthisvideook
    87 000000FE E88B00              <1> 	call printrm
    88 00000101 B80000              <1> 	mov ax, 0
    89 00000104 CD16                <1> 	int 16h
    90 00000106 8B36[8901]          <1> 	mov si, [videomodecache]
    91 0000010A 3C79                <1> 	cmp al, "y"
    92 0000010C 0F8572FF            <1> 	jne near nextvmode
    93 00000110 8B16[CE5C]          <1> 	mov dx, [xresolution]
    94 00000114 8B0E[D05C]          <1> 	mov cx, [yresolution]
    95 00000118 8916[663F]          <1> 	mov [resolutionx], dx
    96 0000011C 890E[643F]          <1> 	mov [resolutiony], cx
    97 00000120 01D2                <1> 	add dx, dx
    98 00000122 8916[683F]          <1> 	mov [resolutionx2], dx
    99 00000126 BA0000              <1> 	mov dx, 0
   100 00000129 B90000              <1> 	mov cx, 0
   101 0000012C B8024F              <1> 	mov ax, 04F02h
   102 0000012F 8B1E[8701]          <1> 	mov bx, [vesamode]
   103 00000133 CD10                <1> 	int 10h		;;enter VESA mode
   104 00000135 C606[8B01]00        <1> 	mov byte [guinodo], 0
   105 0000013A 6631C0              <1> 	xor eax, eax
   106 0000013D 6631DB              <1> 	xor ebx, ebx
   107 00000140 6631C9              <1> 	xor ecx, ecx
   108 00000143 6631D2              <1> 	xor edx, edx
   109 00000146 6631F6              <1> 	xor esi, esi
   110 00000149 6631FF              <1> 	xor edi, edi	;;reset registers
   111 0000014C E94E01              <1> 	jmp pmode
   112                              <1> guiload2:
   113 0000014F B9E001              <1> 	mov cx, 480
   114 00000152 BA8002              <1> 	mov dx, 640
   115 00000155 8916[663F]          <1> 	mov [resolutionx], dx
   116 00000159 01D2                <1> 	add dx, dx
   117 0000015B 8916[683F]          <1> 	mov [resolutionx2], dx
   118 0000015F 890E[643F]          <1> 	mov [resolutiony], cx
   119 00000163 B81200              <1> 	mov ax, 12h
   120 00000166 BB0000              <1> 	mov bx, 0
   121 00000169 CD10                <1> 	int 10h
   122 0000016B C606[8B01]01        <1> 	mov byte [guinodo], 1
   123 00000170 6631DB              <1> 	xor ebx, ebx
   124 00000173 6631C9              <1> 	xor ecx, ecx
   125 00000176 6631D2              <1> 	xor edx, edx
   126 00000179 6631F6              <1> 	xor esi, esi
   127 0000017C 6631FF              <1> 	xor edi, edi
   128 0000017F E91B01              <1> 	jmp pmode
   129                              <1> 
   130 00000182 00                  <1> DriveNumber db 0
   131 00000183 00000000            <1> lbaad dd 0
   132                              <1> 	
   133 00000187 0000                <1> vesamode dw 0
   134 00000189 0000                <1> videomodecache dw 0
   135                              <1> 
   136 0000018B 00                  <1> guinodo db 0
   137                              <1> 
   138                              <1>     printrm:			; 'si' comes in with string address
   139 0000018C BB0700              <1> 	    mov bx,07		; write to display
   140 0000018F B40E                <1> 	    mov ah,0Eh		; screen function
   141 00000191 8A04                <1>     prs2:    mov al,[si]         ; get next character
   142 00000193 3C00                <1> 	    cmp al,0		; look for terminator 
   143 00000195 7405                <1>             je finpr2		; zero byte at end of string
   144 00000197 CD10                <1> 	    int 10h		; write character to screen.    
   145 00000199 46                  <1>      	    inc si	     	; move to next character
   146 0000019A EBF5                <1> 	    jmp prs2		; loop
   147 0000019C C3                  <1>     finpr2: ret
   148                              <1> 
   149 0000019D 0000000000          <1> dcnm db 0,0,0,0,0
   150 000001A2 0000                <1> dcnmend db 0,0
   151                              <1> 
   152                              <1> 
   153                              <1> decshow:
   154 000001A4 BE[9D01]            <1> 	mov si, dcnm
   155                              <1> decclear:
   156 000001A7 B030                <1> 	mov al, "0"
   157 000001A9 8804                <1> 	mov [si], al
   158 000001AB 46                  <1> 	inc si
   159 000001AC 81FE[A201]          <1> 	cmp si, dcnmend
   160 000001B0 76F5                <1> 	jbe decclear
   161 000001B2 4E                  <1> 	dec si
   162 000001B3 E81500              <1> 	call convertrm
   163 000001B6 BE[9D01]            <1> 	mov si, dcnm
   164                              <1> dectst:
   165 000001B9 8A04                <1> 	mov al, [si]
   166 000001BB 46                  <1> 	inc si
   167 000001BC 81FE[A201]          <1> 	cmp si, dcnmend
   168 000001C0 7704                <1> 	ja dectstend
   169 000001C2 3C30                <1> 	cmp al, "0"
   170 000001C4 76F3                <1> 	jbe dectst
   171                              <1> dectstend:
   172 000001C6 4E                  <1> 	dec si
   173 000001C7 E8C2FF              <1> 	call printrm
   174 000001CA C3                  <1> 	ret
   175                              <1> 	
   176                              <1> 	
   177                              <1> convertrm:
   178 000001CB 4E                  <1> 	dec si
   179 000001CC 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   180                              <1> cnvrtrm:
   181 000001CE 89DE                <1> 	mov si, bx
   182 000001D0 81EE0300            <1> 	sub si, 3
   183 000001D4 46                  <1> ten3rm:	inc si
   184 000001D5 81F9E803            <1> 	cmp cx, 1000
   185 000001D9 7208                <1> 	jb ten2rm
   186 000001DB 81E9E803            <1> 	sub cx, 1000
   187 000001DF FE04                <1> 	inc byte [si]
   188 000001E1 EBEB                <1> 	jmp cnvrtrm
   189 000001E3 46                  <1> ten2rm:	inc si
   190 000001E4 81F96400            <1> 	cmp cx, 100
   191 000001E8 7208                <1> 	jb ten1rm
   192 000001EA 81E96400            <1> 	sub cx, 100
   193 000001EE FE04                <1> 	inc byte [si]
   194 000001F0 EBDC                <1> 	jmp cnvrtrm
   195 000001F2 46                  <1> ten1rm:	inc si
   196 000001F3 81F90A00            <1> 	cmp cx, 10
   197 000001F7 7208                <1> 	jb ten0rm
   198 000001F9 81E90A00            <1> 	sub cx, 10
   199 000001FD FE04                <1> 	inc byte [si]
   200 000001FF EBCD                <1> 	jmp cnvrtrm
   201 00000201 46                  <1> ten0rm:	inc si
   202 00000202 81F90100            <1> 	cmp cx, 1
   203 00000206 7208                <1> 	jb tendnrm
   204 00000208 81E90100            <1> 	sub cx, 1
   205 0000020C FE04                <1> 	inc byte [si]
   206 0000020E EBBE                <1> 	jmp cnvrtrm
   207                              <1> tendnrm:
   208 00000210 C3                  <1> 	ret
   209                              <1> 
   210                              <1> 
   211                              <1> 
   212                              <1> 
   213                              <1>     char: 		    ;char must be in al
   214 00000211 BB0700              <1>        mov bx, 07
   215 00000214 B40E                <1> 	   mov ah, 0Eh
   216 00000216 CD10                <1> 	   int 10h
   217 00000218 C3                  <1> 	   ret
   218                              <1> 
   219                              <1> 		shutdown:
   220 00000219 0F20C0              <1> 				mov eax, cr0
   221 0000021C 24FE                <1> 				and al,0xFE     ; back to realmode
   222 0000021E 0F22C0              <1> 				mov  cr0, eax   ; by toggling bit again
   223 00000221 FB                  <1> 				sti
   224 00000222 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   225 00000225 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   226 00000227 CD15                <1> 			INT 15h		; shut down
   227 00000229 B80453              <1> 			MOV AX, 5304h
   228 0000022C 31DB                <1> 			XOR BX, BX
   229 0000022E CD15                <1> 			INT 15h		; Interrupt 15h originally was
   230 00000230 B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   231 00000233 31DB                <1> 			XOR BX, BX	; but is still in use for
   232 00000235 CD15                <1> 			INT 15h		; diverse things
   233 00000237 B80753              <1> 			MOV AX, 5307h
   234 0000023A BB0100              <1> 			MOV BX, 1
   235 0000023D B90300              <1> 			MOV CX, 3
   236 00000240 CD15                <1> 			INT 15h
   237 00000242 CF                  <1> 			IRET
   238                              <1> 
   239                              <1> 	coldboot:
   240 00000243 0F20C0              <1> 			   mov eax, cr0
   241 00000246 24FE                <1> 			   and al,0xFE     ; back to realmode
   242 00000248 0F22C0              <1> 			   mov  cr0, eax   ; by toggling bit again
   243 0000024B FB                  <1> 			   sti
   244 0000024C B84000              <1> 			MOV AX, 0040h
   245 0000024F 8EC0                <1> 			MOV ES, AX
   246 00000251 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   247 00000258 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   248 0000025D CF                  <1> 			IRET
   249                              <1> 
   250                              <1> 		warmboot:
   251 0000025E E81200              <1> 			call realmode
   252 00000261 B84000              <1> 			MOV AX, 0040h
   253 00000264 8EC0                <1> 			MOV ES, AX
   254 00000266 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   255 0000026D EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   256 00000272 CF                  <1> 			IRET
   257                              <1> 
   258                              <1> 
   259                              <1> realmode:
   260 00000273 0F20C0              <1>    mov eax, cr0
   261 00000276 24FE                <1>    and al,0xFE     ; back to realmode
   262 00000278 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   263 0000027B FB                  <1>    sti
   264 0000027C 66B800000000        <1>    mov eax, 0
   265 00000282 C3                  <1>    ret
   266                              <1>    
   267 00000283 426F6F7420696E746F- <1> bootmsg:	db "Boot into the GUI?(y/n)",10,13,0
   268 0000028C 20746865204755493F- <1>
   269 00000295 28792F6E290A0D00    <1>
   270                                      %include 'source/pmode.asm'
   271                              <1> [BITS 16]
   272                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   273                              <1> ;	16-bit real mode
   274                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   275                              <1> 
   276                              <1> pmode:
   277 0000029D BA9200              <1> 	mov dx, 0x92
   278 000002A0 EC                  <1> 	in al, dx	;;A20
   279 000002A1 0C02                <1> 	or al, 2
   280 000002A3 EE                  <1> 	out dx, al
   281 000002A4 6631DB              <1> 	xor ebx,ebx
   282 000002A7 8CCB                <1> 	mov bx,cs		; EBX=segment
   283 000002A9 66C1E304            <1> 	shl ebx,4		;	<< 4
   284 000002AD 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   285 000002B1 A3[A40A]            <1> 	mov [gdt2 + 2],ax
   286 000002B4 A3[AC0A]            <1> 	mov [gdt3 + 2],ax
   287 000002B7 66C1E810            <1> 	shr eax,16
   288 000002BB A2[A60A]            <1> 	mov [gdt2 + 4],al
   289 000002BE A2[AE0A]            <1> 	mov [gdt3 + 4],al
   290 000002C1 8826[A90A]          <1> 	mov [gdt2 + 7],ah
   291 000002C5 8826[B10A]          <1> 	mov [gdt3 + 7],ah
   292 000002C9 66B8[00000000]      <1> 	mov eax, stack
   293 000002CF A3[B40A]            <1> 	mov [gdts + 2],ax
   294 000002D2 66C1E810            <1> 	shr eax,16
   295 000002D6 A2[B60A]            <1> 	mov [gdts + 4],al
   296 000002D9 8826[B90A]          <1> 	mov [gdts + 7],ah
   297 000002DD 66B800001000        <1> 	mov eax, 0x100000
   298 000002E3 A3[BC0A]            <1> 	mov [gdt4 + 2],ax
   299 000002E6 A3[C40A]            <1> 	mov [gdt5 + 2],ax
   300 000002E9 66C1E810            <1> 	shr eax,16
   301 000002ED A2[BE0A]            <1> 	mov [gdt4 + 4],al
   302 000002F0 A2[C60A]            <1> 	mov [gdt5 + 4],al
   303 000002F3 8826[C10A]          <1> 	mov [gdt4 + 7],ah
   304 000002F7 8826[C90A]          <1> 	mov [gdt5 + 7],ah
   305                              <1> ; fix up gdt and idt
   306 000002FB 67668D83[920A0000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   307 00000303 66A3[880A]          <1> 	mov [gdtr + 2],eax
   308 00000307 67668D83[CA0A0000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   309 0000030F 66A3[8E0A]          <1> 	mov [idtr + 2],eax
   310 00000313 FA                  <1> 	cli
   311 00000314 0F0116[860A]        <1> 	lgdt [gdtr]
   312 00000319 0F011E[8C0A]        <1> 	lidt [idtr]
   313 0000031E 66BB00000000        <1> 	mov ebx, 0
   314 00000324 8CDB                <1> 	mov bx, ds
   315 00000326 66891E[F003]        <1> 	mov [basecache], ebx
   316 0000032B 0F20C0              <1> 	mov eax,cr0
   317 0000032E 0C01                <1> 	or al,1
   318 00000330 0F22C0              <1> 	mov cr0,eax
   319 00000333 EA[3803]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   320                              <1> [BITS 32]
   321                              <1> do_pm:
   322 00000338 66B81800            <1> 	mov ax, SYS_DATA_SEL
   323 0000033C 8ED8                <1> 	mov ds,ax
   324 0000033E 8ED0                <1> 	mov ss, ax	;;can switch back to STACK_SEL later
   325 00000340 BC[00100000]        <1> 	mov esp, stackend	;;can switch back to 4096 later
   326 00000345 90                  <1> 	nop
   327 00000346 90                  <1> 	nop
   328 00000347 66B81800            <1> 	mov ax, SYS_DATA_SEL
   329 0000034B 8EC0                <1> 	mov es,ax
   330 0000034D 8EE0                <1> 	mov fs,ax
   331 0000034F 66B83000            <1> 	mov ax, NEW_DATA_SEL
   332 00000353 8EE8                <1> 	mov gs,ax
   333 00000355 BE00000000          <1> 	mov esi, 0
   334                              <1> 	
   335                              <1> copykernel:
   336 0000035A 648B06              <1> 	mov eax, [fs:esi]
   337 0000035D 658906              <1> 	mov [gs:esi], eax
   338 00000360 81C604000000        <1> 	add esi, 4
   339 00000366 81FE[00000000]      <1> 	cmp esi, bssstart
   340 0000036C 72EC                <1> 	jb copykernel
   341                              <1> 	
   342 0000036E BE[00000000]        <1> 	mov esi, bssstart
   343 00000373 B800000000          <1> 	mov eax, 0
   344                              <1> clearkernelbuffers:
   345 00000378 658906              <1> 	mov [gs:esi], eax
   346 0000037B 81C604000000        <1> 	add esi, 4
   347 00000381 81FE[3B842000]      <1> 	cmp esi, bssend
   348 00000387 72EF                <1> 	jb clearkernelbuffers
   349                              <1> 	
   350 00000389 EA[90030000]2800    <1> 	jmp NEW_CODE_SEL:done_copy
   351                              <1> 	
   352                              <1> done_copy:
   353 00000390 66B83000            <1> 	mov ax, NEW_DATA_SEL
   354 00000394 8ED8                <1> 	mov ds, ax
   355 00000396 8ED0                <1> 	mov ss, ax
   356 00000398 BC[00100000]        <1> 	mov esp, stackend
   357 0000039D 90                  <1> 	nop
   358 0000039E 90                  <1> 	nop
   359 0000039F 66B83000            <1> 	mov ax, NEW_DATA_SEL
   360 000003A3 8EC0                <1> 	mov es, ax
   361 000003A5 8EE0                <1> 	mov fs, ax
   362 000003A7 66B81800            <1> 	mov ax, SYS_DATA_SEL
   363 000003AB 8EE8                <1> 	mov gs, ax
   364                              <1> 	
   365 000003AD B800001000          <1> 	mov eax, 0x100000
   366 000003B2 C1E804              <1> 	shr eax, 4
   367 000003B5 A3[F0030000]        <1> 	mov [basecache], eax
   368                              <1> 	
   369 000003BA 8B3D[E45C0000]      <1> 	mov edi, [physbaseptr]
   370 000003C0 A1[F0030000]        <1> 	mov eax, [basecache]
   371 000003C5 C1E004              <1> 	shl eax, 4
   372 000003C8 29C7                <1> 	sub edi, eax
   373 000003CA 893D[E45C0000]      <1> 	mov [physbaseptr], edi
   374 000003D0 E870160000          <1> 	call indexfiles
   375 000003D5 803D[8B010000]00    <1> 	cmp byte [guinodo], 0
   376 000003DC 0F8405000000        <1> 	je near guido
   377 000003E2 E93A0F0000          <1> 	jmp os
   378                              <1> 	
   379                              <1> guido:
   380 000003E7 E9BE2B0000          <1> 	jmp gui
   381                              <1> 	
   382 000003EC 00000000            <1> user2codepoint dw 0,0
   383 000003F0 00000000            <1> basecache dd 0
   384                              <1> 	
   385                              <1> 
   386                              <1> unhand:	
   387                              <1> 	%assign i 0
   388                              <1> 	%rep 40
   389                              <1> 	cli
   390                              <1> 	mov byte [intprob], i
   391                              <1> 	jmp unhand2
   392                              <1> 	%assign i i+1
   393                              <1> 	%endrep
   394 000003F4 FA                  <2>  cli
   395 000003F5 C605[46070000]00    <2>  mov byte [intprob], i
   396 000003FC E9FB010000          <2>  jmp unhand2
   397                              <2>  %assign i i+1
   398 00000401 FA                  <2>  cli
   399 00000402 C605[46070000]01    <2>  mov byte [intprob], i
   400 00000409 E9EE010000          <2>  jmp unhand2
   401                              <2>  %assign i i+1
   402 0000040E FA                  <2>  cli
   403 0000040F C605[46070000]02    <2>  mov byte [intprob], i
   404 00000416 E9E1010000          <2>  jmp unhand2
   405                              <2>  %assign i i+1
   406 0000041B FA                  <2>  cli
   407 0000041C C605[46070000]03    <2>  mov byte [intprob], i
   408 00000423 E9D4010000          <2>  jmp unhand2
   409                              <2>  %assign i i+1
   410 00000428 FA                  <2>  cli
   411 00000429 C605[46070000]04    <2>  mov byte [intprob], i
   412 00000430 E9C7010000          <2>  jmp unhand2
   413                              <2>  %assign i i+1
   414 00000435 FA                  <2>  cli
   415 00000436 C605[46070000]05    <2>  mov byte [intprob], i
   416 0000043D E9BA010000          <2>  jmp unhand2
   417                              <2>  %assign i i+1
   418 00000442 FA                  <2>  cli
   419 00000443 C605[46070000]06    <2>  mov byte [intprob], i
   420 0000044A E9AD010000          <2>  jmp unhand2
   421                              <2>  %assign i i+1
   422 0000044F FA                  <2>  cli
   423 00000450 C605[46070000]07    <2>  mov byte [intprob], i
   424 00000457 E9A0010000          <2>  jmp unhand2
   425                              <2>  %assign i i+1
   426 0000045C FA                  <2>  cli
   427 0000045D C605[46070000]08    <2>  mov byte [intprob], i
   428 00000464 E993010000          <2>  jmp unhand2
   429                              <2>  %assign i i+1
   430 00000469 FA                  <2>  cli
   431 0000046A C605[46070000]09    <2>  mov byte [intprob], i
   432 00000471 E986010000          <2>  jmp unhand2
   433                              <2>  %assign i i+1
   434 00000476 FA                  <2>  cli
   435 00000477 C605[46070000]0A    <2>  mov byte [intprob], i
   436 0000047E E979010000          <2>  jmp unhand2
   437                              <2>  %assign i i+1
   438 00000483 FA                  <2>  cli
   439 00000484 C605[46070000]0B    <2>  mov byte [intprob], i
   440 0000048B E96C010000          <2>  jmp unhand2
   441                              <2>  %assign i i+1
   442 00000490 FA                  <2>  cli
   443 00000491 C605[46070000]0C    <2>  mov byte [intprob], i
   444 00000498 E95F010000          <2>  jmp unhand2
   445                              <2>  %assign i i+1
   446 0000049D FA                  <2>  cli
   447 0000049E C605[46070000]0D    <2>  mov byte [intprob], i
   448 000004A5 E952010000          <2>  jmp unhand2
   449                              <2>  %assign i i+1
   450 000004AA FA                  <2>  cli
   451 000004AB C605[46070000]0E    <2>  mov byte [intprob], i
   452 000004B2 E945010000          <2>  jmp unhand2
   453                              <2>  %assign i i+1
   454 000004B7 FA                  <2>  cli
   455 000004B8 C605[46070000]0F    <2>  mov byte [intprob], i
   456 000004BF E938010000          <2>  jmp unhand2
   457                              <2>  %assign i i+1
   458 000004C4 FA                  <2>  cli
   459 000004C5 C605[46070000]10    <2>  mov byte [intprob], i
   460 000004CC E92B010000          <2>  jmp unhand2
   461                              <2>  %assign i i+1
   462 000004D1 FA                  <2>  cli
   463 000004D2 C605[46070000]11    <2>  mov byte [intprob], i
   464 000004D9 E91E010000          <2>  jmp unhand2
   465                              <2>  %assign i i+1
   466 000004DE FA                  <2>  cli
   467 000004DF C605[46070000]12    <2>  mov byte [intprob], i
   468 000004E6 E911010000          <2>  jmp unhand2
   469                              <2>  %assign i i+1
   470 000004EB FA                  <2>  cli
   471 000004EC C605[46070000]13    <2>  mov byte [intprob], i
   472 000004F3 E904010000          <2>  jmp unhand2
   473                              <2>  %assign i i+1
   474 000004F8 FA                  <2>  cli
   475 000004F9 C605[46070000]14    <2>  mov byte [intprob], i
   476 00000500 E9F7000000          <2>  jmp unhand2
   477                              <2>  %assign i i+1
   478 00000505 FA                  <2>  cli
   479 00000506 C605[46070000]15    <2>  mov byte [intprob], i
   480 0000050D E9EA000000          <2>  jmp unhand2
   481                              <2>  %assign i i+1
   482 00000512 FA                  <2>  cli
   483 00000513 C605[46070000]16    <2>  mov byte [intprob], i
   484 0000051A E9DD000000          <2>  jmp unhand2
   485                              <2>  %assign i i+1
   486 0000051F FA                  <2>  cli
   487 00000520 C605[46070000]17    <2>  mov byte [intprob], i
   488 00000527 E9D0000000          <2>  jmp unhand2
   489                              <2>  %assign i i+1
   490 0000052C FA                  <2>  cli
   491 0000052D C605[46070000]18    <2>  mov byte [intprob], i
   492 00000534 E9C3000000          <2>  jmp unhand2
   493                              <2>  %assign i i+1
   494 00000539 FA                  <2>  cli
   495 0000053A C605[46070000]19    <2>  mov byte [intprob], i
   496 00000541 E9B6000000          <2>  jmp unhand2
   497                              <2>  %assign i i+1
   498 00000546 FA                  <2>  cli
   499 00000547 C605[46070000]1A    <2>  mov byte [intprob], i
   500 0000054E E9A9000000          <2>  jmp unhand2
   501                              <2>  %assign i i+1
   502 00000553 FA                  <2>  cli
   503 00000554 C605[46070000]1B    <2>  mov byte [intprob], i
   504 0000055B E99C000000          <2>  jmp unhand2
   505                              <2>  %assign i i+1
   506 00000560 FA                  <2>  cli
   507 00000561 C605[46070000]1C    <2>  mov byte [intprob], i
   508 00000568 E98F000000          <2>  jmp unhand2
   509                              <2>  %assign i i+1
   510 0000056D FA                  <2>  cli
   511 0000056E C605[46070000]1D    <2>  mov byte [intprob], i
   512 00000575 E982000000          <2>  jmp unhand2
   513                              <2>  %assign i i+1
   514 0000057A FA                  <2>  cli
   515 0000057B C605[46070000]1E    <2>  mov byte [intprob], i
   516 00000582 E975000000          <2>  jmp unhand2
   517                              <2>  %assign i i+1
   518 00000587 FA                  <2>  cli
   519 00000588 C605[46070000]1F    <2>  mov byte [intprob], i
   520 0000058F E968000000          <2>  jmp unhand2
   521                              <2>  %assign i i+1
   522 00000594 FA                  <2>  cli
   523 00000595 C605[46070000]20    <2>  mov byte [intprob], i
   524 0000059C E95B000000          <2>  jmp unhand2
   525                              <2>  %assign i i+1
   526 000005A1 FA                  <2>  cli
   527 000005A2 C605[46070000]21    <2>  mov byte [intprob], i
   528 000005A9 E94E000000          <2>  jmp unhand2
   529                              <2>  %assign i i+1
   530 000005AE FA                  <2>  cli
   531 000005AF C605[46070000]22    <2>  mov byte [intprob], i
   532 000005B6 E941000000          <2>  jmp unhand2
   533                              <2>  %assign i i+1
   534 000005BB FA                  <2>  cli
   535 000005BC C605[46070000]23    <2>  mov byte [intprob], i
   536 000005C3 E934000000          <2>  jmp unhand2
   537                              <2>  %assign i i+1
   538 000005C8 FA                  <2>  cli
   539 000005C9 C605[46070000]24    <2>  mov byte [intprob], i
   540 000005D0 E927000000          <2>  jmp unhand2
   541                              <2>  %assign i i+1
   542 000005D5 FA                  <2>  cli
   543 000005D6 C605[46070000]25    <2>  mov byte [intprob], i
   544 000005DD E91A000000          <2>  jmp unhand2
   545                              <2>  %assign i i+1
   546 000005E2 FA                  <2>  cli
   547 000005E3 C605[46070000]26    <2>  mov byte [intprob], i
   548 000005EA E90D000000          <2>  jmp unhand2
   549                              <2>  %assign i i+1
   550 000005EF FA                  <2>  cli
   551 000005F0 C605[46070000]27    <2>  mov byte [intprob], i
   552 000005F7 E900000000          <2>  jmp unhand2
   553                              <2>  %assign i i+1
   554                              <1> unhand2:
   555 000005FC 60                  <1> 	pushad
   556 000005FD 89E6                <1> 	mov esi, esp
   557 000005FF 81C6C8000000        <1> 	add esi, ((unhndrgend - unhndrg)/15)*4
   558 00000605 8935[3C070000]      <1> 	mov [esploc], esi
   559 0000060B BE[47070000]        <1> 	mov esi, unhandmsg
   560 00000610 8935[40070000]      <1> 	mov [esiloc], esi
   561 00000616 BE[76520000]        <1> 	mov esi, line
   562 0000061B E8BE080000          <1> 	call print
   563 00000620 B900000000          <1> 	mov ecx, 0
   564 00000625 8A0D[46070000]      <1> 	mov cl, [intprob]
   565 0000062B E8AC000000          <1> 	call expdump
   566                              <1> dumpstack:
   567 00000630 8B35[3C070000]      <1> 	mov esi, [esploc]
   568 00000636 39E6                <1> 	cmp esi, esp
   569 00000638 7216                <1> 	jb donedump
   570 0000063A 368B0E              <1> 	mov ecx, [ss:esi]
   571 0000063D 81EE04000000        <1> 	sub esi, 4
   572 00000643 8935[3C070000]      <1> 	mov [esploc], esi
   573 00000649 E88E000000          <1> 	call expdump
   574 0000064E EBE0                <1> 	jmp dumpstack
   575                              <1> donedump:
   576 00000650 8B35[3C070000]      <1> 	mov esi, [esploc]
   577 00000656 368B7C2420          <1> 	mov edi, [ss:esp + 32]
   578 0000065B 8B4FFC              <1> 	mov ecx, [edi - 4]
   579 0000065E E879000000          <1> 	call expdump
   580 00000663 8B35[3C070000]      <1> 	mov esi, [esploc]
   581 00000669 368B7C2420          <1> 	mov edi, [ss:esp + 32]
   582 0000066E 8B0F                <1> 	mov ecx, [edi]
   583 00000670 E867000000          <1> 	call expdump
   584 00000675 8B35[3C070000]      <1> 	mov esi, [esploc]
   585 0000067B 368B7C2420          <1> 	mov edi, [ss:esp + 32]
   586 00000680 8B4F04              <1> 	mov ecx, [edi + 4]
   587 00000683 E854000000          <1> 	call expdump
   588 00000688 BE[B6060000]        <1> 	mov esi, backtoosmsg
   589 0000068D E84C080000          <1> 	call print
   590 00000692 B000                <1> 	mov al, 0
   591 00000694 E804080000          <1> 	call int302
   592 00000699 803D[04310000]00    <1> 	cmp byte [guion], 0
   593 000006A0 7505                <1> 	jne returnunhandgui
   594 000006A2 E98C0D0000          <1> 	jmp nwcmd
   595                              <1> returnunhandgui:
   596 000006A7 E8BF280000          <1> 	call guiclear
   597 000006AC E8D7300000          <1> 	call reloadallgraphics
   598 000006B1 E9392A0000          <1> 	jmp guistart
   599 000006B6 507265737320616E79- <1> backtoosmsg db "Press any key to return to SollerOS",10,13,0
   600 000006BF 206B657920746F2072- <1>
   601 000006C8 657475726E20746F20- <1>
   602 000006D1 536F6C6C65724F530A- <1>
   603 000006DA 0D00                <1>
   604                              <1> expdump:
   605 000006DC 8B35[40070000]      <1> 	mov esi, [esiloc]
   606 000006E2 89F7                <1> 	mov edi, esi
   607 000006E4 81C70F000000        <1> 	add edi, 15
   608 000006EA 81C604000000        <1> 	add esi, 4
   609 000006F0 893D[40070000]      <1> 	mov [esiloc], edi
   610 000006F6 81EF03000000        <1> 	sub edi, 3
   611 000006FC E8D0100000          <1> 	call converthex
   612 00000701 81EE04000000        <1> 	sub esi, 4
   613 00000707 803D[04310000]00    <1> 	cmp byte [guion], 0
   614 0000070E 0F8422000000        <1> 	je near expdumptext
   615 00000714 668B0D[44070000]    <1> 	mov cx, [locunhand]
   616 0000071B 668105[44070000]10- <1> 	add word [locunhand], 16
   617 00000723 00                  <1>
   618 00000724 66BA0200            <1> 	mov dx, 2
   619 00000728 66B80100            <1> 	mov ax, 1
   620 0000072C 66BB0000            <1> 	mov bx, 0
   621 00000730 E8AD330000          <1> 	call showstring2
   622 00000735 C3                  <1> 	ret
   623                              <1> expdumptext:
   624 00000736 E8A3070000          <1> 	call print
   625 0000073B C3                  <1> 	ret
   626 0000073C 00000000            <1> esploc dd 0
   627 00000740 00000000            <1> esiloc dd 0
   628 00000744 0100                <1> locunhand dw 1
   629 00000746 00                  <1> intprob db 0
   630                              <1> 	unhandmsg:	
   631 00000747 494E543D3030303030- <1> 			db "INT=00000000",10,13,0
   632 00000750 3030300A0D00        <1>
   633                              <1> unhndrg:
   634 00000756 202008083030303030- <1>    times 40 db "  ",8,8,"00000000  ",0	;;this dumps the stack before the stack frame in question
   635 0000075F 303030202000<rept>  <1>
   636 000009AE 45464C3D3030303030- <1> 			db "EFL=00000000",10,13,0
   637 000009B7 3030300A0D00        <1>
   638 000009BD 43533A3D3030303030- <1> 			db "CS:=00000000",10,13,0
   639 000009C6 3030300A0D00        <1>
   640 000009CC 4549503D3030303030- <1> 			db "EIP=00000000",10,13,0
   641 000009D5 3030300A0D00        <1>
   642 000009DB 4541583D3030303030- <1> 			db "EAX=00000000",10,13,0
   643 000009E4 3030300A0D00        <1>
   644 000009EA 4543583D3030303030- <1> 			db "ECX=00000000",10,13,0
   645 000009F3 3030300A0D00        <1>
   646 000009F9 4544583D3030303030- <1> 			db "EDX=00000000",10,13,0
   647 00000A02 3030300A0D00        <1>
   648 00000A08 4542583D3030303030- <1> 			db "EBX=00000000",10,13,0
   649 00000A11 3030300A0D00        <1>
   650 00000A17 4553503D3030303030- <1> 			db "ESP=00000000",10,13,0
   651 00000A20 3030300A0D00        <1>
   652 00000A26 4542503D3030303030- <1> 			db "EBP=00000000",10,13,0
   653 00000A2F 3030300A0D00        <1>
   654 00000A35 4553493D3030303030- <1> 			db "ESI=00000000",10,13,0
   655 00000A3E 3030300A0D00        <1>
   656 00000A44 4544493D3030303030- <1> unhndrgend:	db "EDI=00000000",10,13,0
   657 00000A4D 3030300A0D00        <1>
   658 00000A53 434D443D3030303030- <1> 			db "CMD=00000000",10,13,0
   659 00000A5C 3030300A0D00        <1>
   660 00000A62 434D443D3030303030- <1> 			db "CMD=00000000",10,13,0
   661 00000A6B 3030300A0D00        <1>
   662 00000A71 434D443D3030303030- <1> 			db "CMD=00000000",10,13,0
   663 00000A7A 3030300A0D00        <1>
   664                              <1> unhandmsgend:
   665                              <1> 
   666                              <1> timerinterrupt:
   667 00000A80 E9F0460000          <1> 	jmp threadswitch
   668                              <1> 	
   669                              <1> handled:
   670 00000A85 CF                  <1> 	iret
   671                              <1> 
   672                              <1> [BITS 16]
   673                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   674                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   675                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   676 00000A86 3700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   677 00000A88 [920A0000]          <1> 	dd gdt			; linear, physical address of GDT
   678                              <1> 
   679 00000A8C 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   680 00000A8E [CA0A0000]          <1> 	dd idt			; linear, physical address of IDT
   681                              <1> 
   682                              <1> 
   683 00000A92 0000                <1> gdt:	dw 0			; limit 15:0
   684 00000A94 0000                <1> 	dw 0			; base 15:0
   685 00000A96 00                  <1> 	db 0			; base 23:16
   686 00000A97 00                  <1> 	db 0			; type
   687 00000A98 00                  <1> 	db 0			; limit 19:16, flags
   688 00000A99 00                  <1> 	db 0			; base 31:24
   689                              <1> ; linear data segment descriptor
   690                              <1> LINEAR_SEL	equ	$-gdt
   691 00000A9A FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   692 00000A9C 0000                <1> 	dw 0			; base for this one is always 0
   693 00000A9E 00                  <1> 	db 0
   694 00000A9F 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   695 00000AA0 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   696 00000AA1 00                  <1> 	db 0
   697                              <1> ; code segment descriptor
   698                              <1> SYS_CODE_SEL	equ	$-gdt
   699 00000AA2 FFFF                <1> gdt2:	dw 0xFFFF
   700 00000AA4 0000                <1> 	dw 0			; (base gets set above)
   701 00000AA6 00                  <1> 	db 0
   702 00000AA7 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   703 00000AA8 CF                  <1> 	db 0xCF
   704 00000AA9 00                  <1> 	db 0
   705                              <1> ; data segment descriptor
   706                              <1> SYS_DATA_SEL	equ	$-gdt
   707 00000AAA FFFF                <1> gdt3:	dw 0xFFFF
   708 00000AAC 0000                <1> 	dw 0			; (base gets set above)
   709 00000AAE 00                  <1> 	db 0
   710 00000AAF 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   711 00000AB0 CF                  <1> 	db 0xCF
   712 00000AB1 00                  <1> 	db 0
   713                              <1> STACK_SEL	equ	$-gdt	;;this is no longer used for various reasons
   714 00000AB2 0100                <1> gdts:	dw 1
   715 00000AB4 0000                <1> 	dw 0			; (base gets set above)
   716 00000AB6 00                  <1> 	db 0
   717 00000AB7 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   718 00000AB8 C0                  <1> 	db 0xC0
   719 00000AB9 00                  <1> 	db 0
   720                              <1> NEW_CODE_SEL	equ	$-gdt
   721 00000ABA FFFF                <1> gdt4:	dw 0xFFFF
   722 00000ABC 0000                <1> 	dw 0			; (base gets set above)
   723 00000ABE 00                  <1> 	db 0
   724 00000ABF 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   725 00000AC0 CF                  <1> 	db 0xCF
   726 00000AC1 00                  <1> 	db 0
   727                              <1> ; data segment descriptor
   728                              <1> NEW_DATA_SEL	equ	$-gdt
   729 00000AC2 FFFF                <1> gdt5:	dw 0xFFFF
   730 00000AC4 0000                <1> 	dw 0			; (base gets set above)
   731 00000AC6 00                  <1> 	db 0
   732 00000AC7 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   733 00000AC8 CF                  <1> 	db 0xCF
   734 00000AC9 00                  <1> 	db 0
   735                              <1> gdt_end:
   736                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   737                              <1> ;	interrupt descriptor table (IDT)
   738                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   739                              <1> ; 32 reserved interrupts:
   740                              <1> idt:	
   741                              <1> %assign i 0
   742                              <1> %rep    3
   743                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   744                              <1> %assign i i+1 
   745                              <1> %endrep
   746 00000ACA [F403]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   747                              <2> %assign i i+1
   748 00000AD2 [0104]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   749                              <2> %assign i i+1
   750 00000ADA [0E04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   751                              <2> %assign i i+1
   752 00000AE2 [850A]2800008E0000  <1> 		dw handled,NEW_CODE_SEL,0x8E00,0	;;for int3 debug
   753                              <1> %assign i 4
   754                              <1> %rep    4
   755                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   756                              <1> %assign i i+1 
   757                              <1> %endrep
   758 00000AEA [2804]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   759                              <2> %assign i i+1
   760 00000AF2 [3504]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   761                              <2> %assign i i+1
   762 00000AFA [4204]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   763                              <2> %assign i i+1
   764 00000B02 [4F04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   765                              <2> %assign i i+1
   766 00000B0A [800A]2800008E0000  <1> 		dw timerinterrupt,NEW_CODE_SEL,0x8E00,0
   767                              <1> %assign i 9
   768                              <1> %rep    6
   769                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   770                              <1> %assign i i+1 
   771                              <1> %endrep
   772 00000B12 [6904]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   773                              <2> %assign i i+1
   774 00000B1A [7604]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   775                              <2> %assign i i+1
   776 00000B22 [8304]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   777                              <2> %assign i i+1
   778 00000B2A [9004]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   779                              <2> %assign i i+1
   780 00000B32 [9D04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   781                              <2> %assign i i+1
   782 00000B3A [AA04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   783                              <2> %assign i i+1
   784 00000B42 [850A]2800008E0000  <1> 		dw handled,NEW_CODE_SEL,0x8E00,0		;;irq 7 or int 0xF is random, unusable, and usually reserved
   785                              <1> %assign i 16
   786                              <1> %rep    32
   787                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   788                              <1> %assign i i+1
   789                              <1> %endrep
   790 00000B4A [C404]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   791                              <2> %assign i i+1
   792 00000B52 [D104]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   793                              <2> %assign i i+1
   794 00000B5A [DE04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   795                              <2> %assign i i+1
   796 00000B62 [EB04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   797                              <2> %assign i i+1
   798 00000B6A [F804]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   799                              <2> %assign i i+1
   800 00000B72 [0505]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   801                              <2> %assign i i+1
   802 00000B7A [1205]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   803                              <2> %assign i i+1
   804 00000B82 [1F05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   805                              <2> %assign i i+1
   806 00000B8A [2C05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   807                              <2> %assign i i+1
   808 00000B92 [3905]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   809                              <2> %assign i i+1
   810 00000B9A [4605]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   811                              <2> %assign i i+1
   812 00000BA2 [5305]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   813                              <2> %assign i i+1
   814 00000BAA [6005]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   815                              <2> %assign i i+1
   816 00000BB2 [6D05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   817                              <2> %assign i i+1
   818 00000BBA [7A05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   819                              <2> %assign i i+1
   820 00000BC2 [8705]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   821                              <2> %assign i i+1
   822 00000BCA [9405]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   823                              <2> %assign i i+1
   824 00000BD2 [A105]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   825                              <2> %assign i i+1
   826 00000BDA [AE05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   827                              <2> %assign i i+1
   828 00000BE2 [BB05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   829                              <2> %assign i i+1
   830 00000BEA [C805]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   831                              <2> %assign i i+1
   832 00000BF2 [D505]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   833                              <2> %assign i i+1
   834 00000BFA [E205]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   835                              <2> %assign i i+1
   836 00000C02 [EF05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   837                              <2> %assign i i+1
   838 00000C0A [FC05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   839                              <2> %assign i i+1
   840 00000C12 [0906]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   841                              <2> %assign i i+1
   842 00000C1A [1606]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   843                              <2> %assign i i+1
   844 00000C22 [2306]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   845                              <2> %assign i i+1
   846 00000C2A [3006]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   847                              <2> %assign i i+1
   848 00000C32 [3D06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   849                              <2> %assign i i+1
   850 00000C3A [4A06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   851                              <2> %assign i i+1
   852 00000C42 [5706]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   853                              <2> %assign i i+1
   854                              <1> 		
   855                              <1> ;;INT 30h for os use and 3rd party use:
   856 00000C4A [520C]2800008E0000  <1> 	dw newints,NEW_CODE_SEL,0x8E00,0
   857                              <1> idt_end:
   858                              <1> [BITS 32]
   859                                  [BITS 32]
   860                                      %include 'source/ints.asm'
   861                              <1> newints:	;;for great justice
   862 00000C52 80FC00              <1> 	cmp ah, 0		;;originally 0
   863 00000C55 0F8452000000        <1> 	je near intx0   ;;0=kills app
   864 00000C5B 80FC01              <1> 	cmp ah, 1		;;originally 1
   865 00000C5E 0F844E000000        <1> 	je near intx1   ;;3=print string
   866 00000C64 80FC02              <1> 	cmp ah, 2		;;originally 2
   867 00000C67 0F844B000000        <1> 	je near intx2	;;4=read string
   868 00000C6D 80FC03              <1> 	cmp ah, 3		;;originally 3
   869 00000C70 0F8448000000        <1> 	je near intx3	;;6=clear screen
   870 00000C76 80FC04              <1> 	cmp ah, 4		;;originally 4
   871 00000C79 0F8445000000        <1> 	je near intx4	;;5=read and print string
   872 00000C7F 80FC05              <1> 	cmp ah, 5		;;originally 5		
   873 00000C82 0F8442000000        <1> 	je near intx5	;;2=get char
   874 00000C88 80FC06              <1> 	cmp ah, 6		;;originally 6
   875 00000C8B 0F843F000000        <1> 	je near intx6	;;1=print char
   876 00000C91 80FC07              <1> 	cmp ah, 7
   877 00000C94 0F843C000000        <1> 	je near intx7	;;read file
   878 00000C9A 80FC09              <1> 	cmp ah, 9
   879 00000C9D 0F8439000000        <1> 	je near intx9	;;convert number
   880 00000CA3 80FC0A              <1> 	cmp ah, 10
   881 00000CA6 0F8440000000        <1> 	je near intx10	;;create thread
   882 00000CAC C3                  <1> 	ret
   883                              <1> 	
   884                              <1> intx0:
   885 00000CAD E981070000          <1> 	jmp nwcmd
   886                              <1> intx1:
   887 00000CB2 E82F020000          <1> 	call int303
   888 00000CB7 C3                  <1> 	ret
   889                              <1> intx2:
   890 00000CB8 E84C020000          <1> 	call int304
   891 00000CBD C3                  <1> 	ret
   892                              <1> intx3:
   893 00000CBE E80B050000          <1> 	call int306
   894 00000CC3 C3                  <1> 	ret
   895                              <1> intx4:
   896 00000CC4 E86D020000          <1> 	call int305
   897 00000CC9 C3                  <1> 	ret
   898                              <1> intx5:
   899 00000CCA E8CE010000          <1> 	call int302
   900 00000CCF C3                  <1> 	ret
   901                              <1> intx6:
   902 00000CD0 E822000000          <1> 	call int301
   903 00000CD5 C3                  <1> 	ret
   904                              <1> intx7:
   905 00000CD6 E89D3D0000          <1> 	call loadfile
   906 00000CDB C3                  <1> 	ret
   907                              <1> intx9:
   908 00000CDC 3C00                <1> 	cmp al, 0
   909 00000CDE 7506                <1> 	jne intx9B
   910 00000CE0 E83B0C0000          <1> 	call showdec
   911 00000CE5 C3                  <1> 	ret
   912                              <1> intx9B:
   913 00000CE6 E8900B0000          <1> 	call showhex
   914 00000CEB C3                  <1> 	ret
   915                              <1> intx10:
   916                              <1> ;	call thread
   917 00000CEC C3                  <1> 	ret
   918                              <1> 	
   919 00000CED 0000                <1> linebeginpos dw 0
   920 00000CEF 0000                <1> videobufpos: dw 0
   921 00000CF1 0000                <1> charpos db 0,0
   922 00000CF3 A01E                <1> charxy db 160,30
   923 00000CF5 0000                <1> charbuf dw 0
   924                              <1> 
   925                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
   926 00000CF7 E807000000          <1> 	call int301prnt
   927 00000CFC E91C050000          <1> 	jmp termcopy
   928 00000D01 00                  <1> termguion db 0
   929 00000D02 00                  <1> termcopyon db 0
   930                              <1> int301prnt:
   931 00000D03 88DC                <1> 	mov ah, bl
   932 00000D05 66A3[F50C0000]      <1> 	mov [charbuf], ax
   933 00000D0B BB00000000          <1> 	mov ebx, 0
   934 00000D10 668B1D[EF0C0000]    <1> 	mov bx, [videobufpos]
   935 00000D17 BF[8F1C0000]        <1> 	mov edi, videobuf2
   936 00000D1C 01DF                <1> 	add edi, ebx
   937 00000D1E 66A1[1B120000]      <1> 	mov ax, [removedvideo]
   938 00000D24 668907              <1> 	mov [edi], ax
   939 00000D27 66A1[F50C0000]      <1> 	mov ax, [charbuf]
   940 00000D2D BA00000000          <1> 	mov edx, 0
   941 00000D32 668B15[F10C0000]    <1> 	mov dx, [charpos]
   942 00000D39 B900000000          <1> 	mov ecx, 0
   943 00000D3E 668B0D[F30C0000]    <1> 	mov cx, [charxy]
   944 00000D45 3C0D                <1> 	cmp al, 13
   945 00000D47 0F8454000000        <1> 	je near int301cr
   946 00000D4D 3C0A                <1> 	cmp al, 10
   947 00000D4F 0F8482000000        <1> 	je near int301nl
   948 00000D55 3C08                <1> 	cmp al, 8
   949 00000D57 0F845B000000        <1> 	je near int301bs
   950 00000D5D 668907              <1> 	mov [edi], ax
   951 00000D60 81C702000000        <1> 	add edi, 2
   952 00000D66 80C202              <1> 	add dl, 2
   953                              <1> donecrnl:
   954 00000D69 38CA                <1> 	cmp dl, cl
   955 00000D6B 0F8397000000        <1> 	jae near int301eol
   956                              <1> doneeol:
   957 00000D71 38EE                <1> 	cmp dh, ch
   958 00000D73 0F83AD000000        <1> 	jae near int301scr	
   959                              <1> donescr:
   960 00000D79 89FB                <1> 	mov ebx, edi
   961 00000D7B 668B07              <1> 	mov ax, [edi]
   962 00000D7E 66A3[1B120000]      <1> 	mov [removedvideo], ax
   963 00000D84 81EB[8F1C0000]      <1> 	sub ebx, videobuf2
   964 00000D8A 66891D[EF0C0000]    <1> 	mov [videobufpos], bx
   965 00000D91 668915[F10C0000]    <1> 	mov [charpos], dx
   966 00000D98 66A1[F50C0000]      <1> 	mov ax, [charbuf]
   967 00000D9E 88E3                <1> 	mov bl, ah
   968 00000DA0 C3                  <1> 	ret
   969                              <1> 	
   970                              <1> 	int301cr:
   971 00000DA1 B200                <1> 		mov dl, 0
   972 00000DA3 BB00000000          <1> 		mov ebx, 0
   973 00000DA8 BF[8F1C0000]        <1> 		mov edi, videobuf2
   974 00000DAD 668B1D[ED0C0000]    <1> 		mov bx, [linebeginpos]
   975 00000DB4 01DF                <1> 		add edi, ebx
   976 00000DB6 EBB1                <1> 		jmp donecrnl
   977                              <1> 			
   978                              <1> 	int301bs:
   979 00000DB8 80FA00              <1> 		cmp dl, 0
   980 00000DBB 740F                <1> 		je int301backline
   981                              <1> 	int301nobmr:
   982 00000DBD 80EA02              <1> 		sub dl, 2
   983 00000DC0 66B80000            <1> 		mov ax, 0
   984 00000DC4 81EF02000000        <1> 		sub edi, 2
   985 00000DCA EB9D                <1> 		jmp donecrnl
   986                              <1> 	int301backline:
   987 00000DCC 88CA                <1> 		mov dl, cl
   988 00000DCE 80FE00              <1> 		cmp dh, 0
   989 00000DD1 74EA                <1> 		je int301nobmr
   990 00000DD3 FECE                <1> 		dec dh
   991 00000DD5 EBE6                <1> 		jmp int301nobmr
   992                              <1> 		
   993                              <1> 	int301nl:
   994 00000DD7 FEC6                <1> 		inc dh
   995 00000DD9 BB00000000          <1> 		mov ebx, 0
   996 00000DDE 88CB                <1> 		mov bl, cl
   997 00000DE0 BF[8F1C0000]        <1> 		mov edi, videobuf2
   998 00000DE5 66031D[EF0C0000]    <1> 		add bx, [videobufpos]
   999 00000DEC 01DF                <1> 		add edi, ebx
  1000 00000DEE BB00000000          <1> 		mov ebx, 0
  1001 00000DF3 88CB                <1> 		mov bl, cl
  1002 00000DF5 66031D[ED0C0000]    <1> 		add bx, [linebeginpos]
  1003 00000DFC 66891D[ED0C0000]    <1> 		mov [linebeginpos], bx
  1004 00000E03 E961FFFFFF          <1> 		jmp donecrnl
  1005                              <1> 		
  1006                              <1> 	int301eol:
  1007 00000E08 B200                <1> 		mov dl, 0
  1008 00000E0A FEC6                <1> 		inc dh
  1009 00000E0C BB00000000          <1> 		mov ebx, 0
  1010 00000E11 88CB                <1> 		mov bl, cl
  1011 00000E13 66031D[ED0C0000]    <1> 		add bx, [linebeginpos]
  1012 00000E1A 66891D[ED0C0000]    <1> 		mov [linebeginpos], bx
  1013 00000E21 E94BFFFFFF          <1> 		jmp doneeol
  1014                              <1> 	int301scr:
  1015 00000E26 FECE                <1> 		dec dh
  1016 00000E28 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1017 00000E2D BB00000000          <1> 		mov ebx, 0
  1018 00000E32 88CB                <1> 		mov bl, cl
  1019 00000E34 01FB                <1> 		add ebx, edi
  1020                              <1> 	intscrollloop:
  1021 00000E36 668B03              <1> 		mov ax, [ebx]
  1022 00000E39 668907              <1> 		mov [edi], ax
  1023 00000E3C 81C702000000        <1> 		add edi, 2
  1024 00000E42 81C302000000        <1> 		add ebx, 2
  1025 00000E48 80E902              <1> 		sub cl, 2
  1026 00000E4B 80F900              <1> 		cmp cl, 0
  1027 00000E4E 75E6                <1> 		jne intscrollloop
  1028 00000E50 8A0D[F30C0000]      <1> 		mov cl, [charxy]
  1029 00000E56 FECD                <1> 		dec ch
  1030 00000E58 80FD01              <1> 		cmp ch, 1
  1031 00000E5B 77D9                <1> 		ja intscrollloop
  1032 00000E5D 66B80000            <1> 		mov ax, 0
  1033 00000E61 81EF[8F1C0000]      <1> 		sub edi, videobuf2
  1034 00000E67 66893D[ED0C0000]    <1> 		mov [linebeginpos], di
  1035 00000E6E 81C7[8F1C0000]      <1> 		add edi, videobuf2
  1036 00000E74 89FB                <1> 		mov ebx, edi
  1037                              <1> 	intloopclear:
  1038 00000E76 668903              <1> 		mov [ebx], ax
  1039 00000E79 81C302000000        <1> 		add ebx, 2
  1040 00000E7F 80E902              <1> 		sub cl, 2
  1041 00000E82 80F900              <1> 		cmp cl, 0
  1042 00000E85 75EF                <1> 		jne intloopclear
  1043 00000E87 FECD                <1> 		dec ch
  1044 00000E89 80FD00              <1> 		cmp ch, 0
  1045 00000E8C 75E8                <1> 		jne intloopclear
  1046 00000E8E 668B0D[F30C0000]    <1> 		mov cx, [charxy]
  1047 00000E95 E9DFFEFFFF          <1> 		jmp donescr
  1048                              <1> 		
  1049                              <1> 		
  1050 00000E9A 0000                <1> lastkey db 0,0
  1051 00000E9C 00                  <1> trans db 0
  1052                              <1> 
  1053                              <1> 	int302:		;;get char, if al is 0, wait for key
  1054 00000E9D A2[9C0E0000]        <1> 		mov [trans], al
  1055                              <1> 	transcheck:
  1056 00000EA2 E8781C0000          <1> 		call guistartin
  1057 00000EA7 8A3D[9C0E0000]      <1> 		mov bh, [trans]
  1058 00000EAD 66A1[9A0E0000]      <1> 		mov ax, [lastkey]
  1059 00000EB3 80FC1C              <1> 		cmp ah, 1Ch
  1060 00000EB6 7414                <1> 		je int302enter
  1061 00000EB8 3CE0                <1> 		cmp al, 0xE0
  1062 00000EBA 7504                <1> 		jne nospecialtrans
  1063 00000EBC 88C3                <1> 		mov bl, al
  1064 00000EBE B000                <1> 		mov al, 0
  1065                              <1> 	nospecialtrans:
  1066 00000EC0 08C7                <1> 		or bh, al
  1067 00000EC2 80FF00              <1> 		cmp bh, 0
  1068 00000EC5 74DB                <1> 		je transcheck
  1069 00000EC7 E902000000          <1> 		jmp int302end
  1070                              <1> 	int302enter:
  1071 00000ECC B00D                <1> 		mov al, 13
  1072                              <1> 	int302end:
  1073 00000ECE C3                  <1> 		ret
  1074                              <1> 	
  1075 00000ECF 00                  <1> endkey303 db 0
  1076                              <1> 	printquiet:
  1077 00000ED0 66B80000            <1> 		mov ax, 0
  1078 00000ED4 66BB0700            <1> 		mov bx, 7
  1079 00000ED8 E818000000          <1> 		call int303b
  1080 00000EDD C3                  <1> 		ret
  1081                              <1>     print:
  1082 00000EDE 66B80000            <1> 		mov ax, 0
  1083 00000EE2 66BB0700            <1> 		mov bx, 7
  1084                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  1085 00000EE6 A2[CF0E0000]        <1> 		mov [endkey303], al
  1086 00000EEB E805000000          <1> 		call int303b
  1087 00000EF0 E928030000          <1> 		jmp termcopy
  1088                              <1> 	int303b:
  1089 00000EF5 8A06                <1> 		mov al, [esi]
  1090 00000EF7 3A05[CF0E0000]      <1> 		cmp al, [endkey303]
  1091 00000EFD 7408                <1> 		je doneint303
  1092 00000EFF E8FFFDFFFF          <1> 		call int301prnt
  1093 00000F04 46                  <1> 		inc esi
  1094 00000F05 EBEE                <1> 		jmp int303b
  1095                              <1> 	doneint303:
  1096 00000F07 C3                  <1> 		ret
  1097                              <1> 		
  1098 00000F08 00                  <1> endkey304 db 0
  1099                              <1> 	int304:	;;get line, al=last key, esi = buffer
  1100 00000F09 A2[080F0000]        <1> 		mov [endkey304], al
  1101                              <1> 	int304b:
  1102 00000F0E 56                  <1> 		push esi
  1103 00000F0F B000                <1> 		mov al, 0
  1104 00000F11 E887FFFFFF          <1> 		call int302
  1105 00000F16 5E                  <1> 		pop esi
  1106 00000F17 8806                <1> 		mov [esi], al
  1107 00000F19 46                  <1> 		inc esi
  1108 00000F1A 3A05[080F0000]      <1> 		cmp al, [endkey304]
  1109 00000F20 75EC                <1> 		jne int304b
  1110 00000F22 4E                  <1> 		dec esi
  1111 00000F23 C60600              <1> 		mov byte [esi], 0
  1112 00000F26 C3                  <1> 	ret
  1113                              <1> 	
  1114 00000F27 00                  <1> endkey305 db 0
  1115 00000F28 00                  <1> modkey305 db 0
  1116 00000F29 00000000            <1> firstesi305 dd 0
  1117 00000F2D 00                  <1> commandedit db 0
  1118 00000F2E 00                  <1> txtmask db 0
  1119 00000F2F 00000000            <1> buftxtloc dd 0
  1120 00000F33 082000              <1> backcursor db 8," ",0
  1121                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
  1122 00000F36 8935[2F0F0000]      <1> 		mov [buftxtloc], esi
  1123 00000F3C A2[270F0000]        <1> 		mov [endkey305], al
  1124 00000F41 881D[280F0000]      <1> 		mov [modkey305], bl
  1125 00000F47 8935[290F0000]      <1> 		mov [firstesi305], esi
  1126                              <1> 	int305b:
  1127 00000F4D 56                  <1> 		push esi
  1128 00000F4E B001                <1> 		mov al, 1
  1129 00000F50 E848FFFFFF          <1> 		call int302
  1130 00000F55 5E                  <1> 		pop esi
  1131 00000F56 80FC48              <1> 		cmp ah, 0x48
  1132 00000F59 0F845E010000        <1> 		je near int305up
  1133 00000F5F 80FC50              <1> 		cmp ah, 0x50
  1134 00000F62 0F8438010000        <1> 		je near int305down
  1135 00000F68 80FC4D              <1> 		cmp ah, 0x4D
  1136 00000F6B 0F84ED000000        <1> 		je near int305right
  1137 00000F71 80FC4B              <1> 		cmp ah, 0x4B
  1138 00000F74 0F84AB000000        <1> 		je near int305left
  1139 00000F7A 3C08                <1> 		cmp al, 8
  1140 00000F7C 0F842E020000        <1> 		je near int305bscheck
  1141 00000F82 3C00                <1> 		cmp al, 0
  1142 00000F84 74C7                <1> 		je int305b
  1143 00000F86 8806                <1> 		mov [esi], al
  1144 00000F88 46                  <1> 		inc esi
  1145                              <1> 	bscheckequal:
  1146 00000F89 8A1D[280F0000]      <1> 		mov bl, [modkey305]
  1147 00000F8F 8A3D[2E0F0000]      <1> 		mov bh, [txtmask]
  1148 00000F95 80FF00              <1> 		cmp bh, 0
  1149 00000F98 7402                <1> 		je nomasktxt
  1150 00000F9A 88F8                <1> 		mov al, bh
  1151                              <1> 	nomasktxt:
  1152 00000F9C E856FDFFFF          <1> 		call int301
  1153 00000FA1 56                  <1> 		push esi
  1154 00000FA2 66A3[23100000]      <1> 		mov [int305axcache], ax
  1155 00000FA8 8A25[270F0000]      <1> 		mov ah, [endkey305]
  1156 00000FAE 38E0                <1> 		cmp al, ah
  1157 00000FB0 7429                <1> 		je nobackprintbuftxt2
  1158 00000FB2 BE[701A0000]        <1> 		mov esi, buftxt2
  1159 00000FB7 E814FFFFFF          <1> 		call printquiet
  1160 00000FBC B020                <1> 		mov al, " "
  1161 00000FBE E840FDFFFF          <1> 		call int301prnt
  1162 00000FC3 B008                <1> 		mov al, 8
  1163 00000FC5 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1164 00000FCB 740E                <1> 		je nobackprintbuftxt2
  1165                              <1> 	backprintbuftxt2:
  1166 00000FCD E831FDFFFF          <1> 		call int301prnt
  1167 00000FD2 4E                  <1> 		dec esi
  1168 00000FD3 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1169 00000FD9 77F2                <1> 		ja backprintbuftxt2
  1170                              <1> 	nobackprintbuftxt2:
  1171 00000FDB E817FDFFFF          <1> 		call int301
  1172 00000FE0 5E                  <1> 		pop esi
  1173 00000FE1 66A1[23100000]      <1> 		mov ax, [int305axcache]
  1174 00000FE7 8A25[270F0000]      <1> 		mov ah, [endkey305]
  1175 00000FED 38E0                <1> 		cmp al, ah
  1176 00000FEF 0F8558FFFFFF        <1> 		jne int305b
  1177 00000FF5 4E                  <1> 		dec esi
  1178 00000FF6 BF[701A0000]        <1> 		mov edi, buftxt2
  1179                              <1> 	copylaterstuff:
  1180 00000FFB 8A07                <1> 		mov al, [edi]
  1181 00000FFD 3C00                <1> 		cmp al, 0
  1182 00000FFF 7406                <1> 		je nocopylaterstuff
  1183 00001001 8806                <1> 		mov [esi], al
  1184 00001003 47                  <1> 		inc edi
  1185 00001004 46                  <1> 		inc esi
  1186 00001005 EBF4                <1> 		jmp copylaterstuff
  1187                              <1> 	nocopylaterstuff:
  1188 00001007 C60600              <1> 		mov byte [esi], 0
  1189 0000100A E801000000          <1> 		call clearbuftxt2
  1190 0000100F C3                  <1> 		ret
  1191                              <1> 	
  1192                              <1> 	clearbuftxt2:
  1193 00001010 B000                <1> 		mov al, 0
  1194 00001012 BF[701A0000]        <1> 		mov edi, buftxt2
  1195                              <1> 	clearbuftxt2lp:
  1196 00001017 8807                <1> 		mov [edi], al
  1197 00001019 47                  <1> 		inc edi
  1198 0000101A 81FF[7A1B0000]      <1> 		cmp edi, buftxt
  1199 00001020 75F5                <1> 		jne clearbuftxt2lp
  1200 00001022 C3                  <1> 		ret
  1201                              <1> 		
  1202 00001023 0000                <1> 	int305axcache dw 0
  1203                              <1> 		
  1204                              <1> 	int305left:
  1205 00001025 3B35[2F0F0000]      <1> 		cmp esi, [buftxtloc]
  1206 0000102B 0F841CFFFFFF        <1> 		je near int305b
  1207 00001031 BF[701A0000]        <1> 		mov edi, buftxt2
  1208 00001036 8A07                <1> 		mov al, [edi]
  1209                              <1> 	shiftbuftxt2:
  1210 00001038 3C00                <1> 		cmp al, 0
  1211 0000103A 7409                <1> 		je noshiftbuftxt2
  1212 0000103C 47                  <1> 		inc edi
  1213 0000103D 8A27                <1> 		mov ah, [edi]
  1214 0000103F 8807                <1> 		mov [edi], al
  1215 00001041 88E0                <1> 		mov al, ah
  1216 00001043 EBF3                <1> 		jmp shiftbuftxt2
  1217                              <1> 	noshiftbuftxt2:
  1218 00001045 BF[701A0000]        <1> 		mov edi, buftxt2
  1219 0000104A 4E                  <1> 		dec esi
  1220 0000104B 8A06                <1> 		mov al, [esi]
  1221 0000104D 8807                <1> 		mov [edi], al
  1222 0000104F C60600              <1> 		mov byte [esi], 0
  1223 00001052 B008                <1> 		mov al, 8
  1224 00001054 E89EFCFFFF          <1> 		call int301
  1225 00001059 E9EFFEFFFF          <1> 		jmp int305b
  1226                              <1> 		
  1227                              <1> 	int305right:
  1228 0000105E BF[701A0000]        <1> 		mov edi, buftxt2
  1229 00001063 8A07                <1> 		mov al, [edi]
  1230 00001065 3C00                <1> 		cmp al, 0
  1231 00001067 0F84E0FEFFFF        <1> 		je near int305b
  1232 0000106D 8806                <1> 		mov [esi], al
  1233                              <1> 	shiftbuftxt2lft:
  1234 0000106F 3C00                <1> 		cmp al, 0
  1235 00001071 7408                <1> 		je noshiftbuftxt2lft
  1236 00001073 47                  <1> 		inc edi
  1237 00001074 8A07                <1> 		mov al, [edi]
  1238 00001076 8847FF              <1> 		mov [edi - 1], al
  1239 00001079 EBF4                <1> 		jmp shiftbuftxt2lft
  1240                              <1> 	noshiftbuftxt2lft:
  1241 0000107B 8A06                <1> 		mov al, [esi]
  1242 0000107D 46                  <1> 		inc esi
  1243 0000107E 8A1D[280F0000]      <1> 		mov bl, [modkey305]
  1244 00001084 E86EFCFFFF          <1> 		call int301
  1245 00001089 E9BFFEFFFF          <1> 		jmp int305b
  1246                              <1> 		
  1247                              <1> 	int305downbck:
  1248 0000108E FECC                <1> 		dec ah
  1249 00001090 8825[2D0F0000]      <1> 		mov [commandedit], ah
  1250 00001096 E83A000000          <1> 		call int305bckspc
  1251 0000109B E9ADFEFFFF          <1> 		jmp int305b
  1252                              <1> 	
  1253                              <1> 	int305down:
  1254 000010A0 8A25[2D0F0000]      <1> 		mov ah, [commandedit]
  1255 000010A6 80FC01              <1> 		cmp ah, 1
  1256 000010A9 0F869EFEFFFF        <1> 		jbe near int305b
  1257 000010AF 80FC02              <1> 		cmp ah, 2
  1258 000010B2 74DA                <1> 		je int305downbck
  1259 000010B4 80EC02              <1> 		sub ah, 2
  1260 000010B7 8825[2D0F0000]      <1> 		mov [commandedit], ah
  1261                              <1> 		
  1262                              <1> 	int305up:
  1263                              <1> 		;cmp bl, 0xE0
  1264                              <1> 		;jne int305b
  1265 000010BD B000                <1> 		mov al, 0
  1266 000010BF 3805[2D0F0000]      <1> 		cmp [commandedit], al
  1267 000010C5 0F8482FEFFFF        <1> 		je near int305b
  1268 000010CB E805000000          <1> 		call int305bckspc
  1269 000010D0 E93C000000          <1> 		jmp getcurrentcommandstr
  1270                              <1> 	int305bckspc:
  1271 000010D5 3B35[2F0F0000]      <1> 		cmp esi, [buftxtloc]
  1272 000010DB 7426                <1> 		je noint305upbck
  1273                              <1> 	int305upbckspclp:
  1274 000010DD B008                <1> 		mov al, 8
  1275 000010DF 8A1D[280F0000]      <1> 		mov bl, [modkey305]
  1276 000010E5 E819FCFFFF          <1> 		call int301prnt
  1277 000010EA B020                <1> 		mov al, " "
  1278 000010EC E812FCFFFF          <1> 		call int301prnt
  1279 000010F1 B008                <1> 		mov al, 8
  1280 000010F3 E8FFFBFFFF          <1> 		call int301
  1281 000010F8 4E                  <1> 		dec esi
  1282 000010F9 3B35[2F0F0000]      <1> 		cmp esi, [buftxtloc]
  1283 000010FF 7402                <1> 		je noint305upbck
  1284 00001101 EBDA                <1> 		jmp int305upbckspclp
  1285                              <1> 	noint305upbck:
  1286 00001103 8B3D[1B300000]      <1> 		mov edi, [currentcommandpos]
  1287 00001109 81C7[1F300000]      <1> 		add edi, commandbuf
  1288 0000110F 4F                  <1> 		dec edi
  1289 00001110 C3                  <1> 		ret
  1290                              <1> 	getcurrentcommandstr:
  1291 00001111 8A25[2D0F0000]      <1> 		mov ah, [commandedit]
  1292 00001117 FE05[2D0F0000]      <1> 		inc byte [commandedit]
  1293                              <1> 	getccmdlp:
  1294 0000111D 4F                  <1> 		dec edi
  1295 0000111E 8A07                <1> 		mov al, [edi]
  1296 00001120 81FF[1F300000]      <1> 		cmp edi, commandbuf
  1297 00001126 7231                <1> 		jb getcmdresetcommandbuf
  1298 00001128 81EF[1F300000]      <1> 		sub edi, commandbuf
  1299 0000112E 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1300 00001134 0F8413FEFFFF        <1> 		je near int305b
  1301 0000113A 81C7[1F300000]      <1> 		add edi, commandbuf
  1302 00001140 3C00                <1> 		cmp al, 0
  1303 00001142 75D9                <1> 		jne getccmdlp
  1304 00001144 FECC                <1> 		dec ah
  1305 00001146 80FC00              <1> 		cmp ah, 0
  1306 00001149 77D2                <1> 		ja getccmdlp
  1307 0000114B 47                  <1> 		inc edi
  1308 0000114C 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1309 00001152 770D                <1> 		ja fixcmdbufb4moreint305
  1310 00001154 E915000000          <1> 		jmp moreint305up
  1311                              <1> 	getcmdresetcommandbuf:
  1312 00001159 BF[1F340000]        <1> 		mov edi, commandbufend
  1313 0000115E 47                  <1> 		inc edi
  1314 0000115F EBBC                <1> 		jmp getccmdlp
  1315                              <1> 	fixcmdbufb4moreint305:
  1316 00001161 4F                  <1> 		dec edi
  1317 00001162 81EF[1F340000]      <1> 		sub edi, commandbufend
  1318 00001168 81C7[1F300000]      <1> 		add edi, commandbuf
  1319                              <1> 	moreint305up:
  1320 0000116E 8A07                <1> 		mov al, [edi]
  1321 00001170 47                  <1> 		inc edi
  1322 00001171 81EF[1F300000]      <1> 		sub edi, commandbuf
  1323 00001177 3C00                <1> 		cmp al, 0
  1324 00001179 0F84CEFDFFFF        <1> 		je near int305b
  1325 0000117F 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1326 00001185 0F83C2FDFFFF        <1> 		jae near int305b
  1327 0000118B 81C7[1F300000]      <1> 		add edi, commandbuf
  1328 00001191 8806                <1> 		mov [esi], al
  1329 00001193 46                  <1> 		inc esi
  1330 00001194 57                  <1> 		push edi
  1331 00001195 8A1D[280F0000]      <1> 		mov bl, [modkey305]
  1332 0000119B E857FBFFFF          <1> 		call int301
  1333 000011A0 5F                  <1> 		pop edi
  1334 000011A1 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1335 000011A7 76C5                <1> 		jbe moreint305up
  1336 000011A9 BF[1F300000]        <1> 		mov edi, commandbuf
  1337 000011AE EBBE                <1> 		jmp moreint305up
  1338                              <1> 	int305bscheck:
  1339 000011B0 3B35[290F0000]      <1> 		cmp esi, [firstesi305]
  1340 000011B6 7705                <1> 		ja goodbscheck
  1341 000011B8 E990FDFFFF          <1> 		jmp int305b
  1342                              <1> 	goodbscheck:
  1343 000011BD 4E                  <1> 		dec esi
  1344 000011BE C60600              <1> 		mov byte [esi], 0
  1345 000011C1 8A1D[280F0000]      <1> 		mov bl, [modkey305]
  1346 000011C7 B008                <1> 		mov al, 8
  1347 000011C9 E9BBFDFFFF          <1> 		jmp bscheckequal
  1348                              <1> 	
  1349                              <1> 		
  1350                              <1> 	clear:		
  1351                              <1> 	
  1352                              <1> 	int306:	;;clear screen
  1353 000011CE 668B0D[F30C0000]    <1> 		mov cx, [charxy]
  1354 000011D5 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1355 000011DA 66B80000            <1> 		mov ax, 0
  1356 000011DE 66A3[ED0C0000]      <1> 		mov [linebeginpos], ax
  1357 000011E4 66A3[EF0C0000]      <1> 		mov [videobufpos], ax
  1358 000011EA 66BA0000            <1> 		mov dx, 0
  1359 000011EE 66A3[F10C0000]      <1> 		mov [charpos], ax
  1360                              <1> 	int306b:
  1361 000011F4 668907              <1> 		mov [edi], ax
  1362 000011F7 81C702000000        <1> 		add edi, 2
  1363 000011FD 80E902              <1> 		sub cl, 2
  1364 00001200 80F900              <1> 		cmp cl, 0
  1365 00001203 75EF                <1> 		jne int306b
  1366 00001205 8A0D[F30C0000]      <1> 		mov cl, [charxy]
  1367 0000120B FECD                <1> 		dec ch
  1368 0000120D 80FD00              <1> 		cmp ch, 0
  1369 00001210 75E2                <1> 		jne int306b
  1370 00001212 E906000000          <1> 		jmp termcopy
  1371                              <1> 		
  1372 00001217 00000000            <1> 	termcursorpos dd 0
  1373 0000121B 0000                <1> 	removedvideo dw 0
  1374                              <1> termcopy:	
  1375 0000121D 60                  <1> 	pusha
  1376 0000121E BF[8F1C0000]        <1> 	mov edi, videobuf2
  1377 00001223 BB00000000          <1> 	mov ebx, 0
  1378 00001228 668B1D[EF0C0000]    <1> 	mov bx, [videobufpos]
  1379 0000122F 01DF                <1> 	add edi, ebx
  1380 00001231 893D[17120000]      <1> 	mov [termcursorpos], edi
  1381 00001237 E8C0000000          <1> 	call switchtermcursor
  1382 0000123C C605[03310000]00    <1> 	mov byte [mouseselecton], 0
  1383 00001243 C605[020D0000]01    <1> 	mov byte [termcopyon], 1
  1384 0000124A 803D[04310000]00    <1> 	cmp byte [guion], 0
  1385 00001251 0F8412000000        <1> 	je near nowincopy
  1386 00001257 803D[010D0000]01    <1> 	cmp byte [termguion], 1
  1387 0000125E 0F847F2A0000        <1> 	je near windowvideocopy
  1388 00001264 E98C000000          <1> 	jmp nocopytermatall
  1389                              <1> nowincopy:
  1390 00001269 BE00000A00          <1> 	mov esi, 0xA0000
  1391 0000126E A1[F0030000]        <1> 	mov eax, [basecache]
  1392 00001273 C1E004              <1> 	shl eax, 4
  1393 00001276 29C6                <1> 	sub esi, eax
  1394 00001278 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1395 0000127D B900000000          <1> 	mov ecx, 0
  1396 00001282 668B0D[F30C0000]    <1> 	mov cx, [charxy]
  1397                              <1> nowincopy2:
  1398 00001289 BB[9C520000]        <1> 	mov ebx, fonts
  1399 0000128E B800000000          <1> 	mov eax, 0
  1400 00001293 8A07                <1> 	mov al, [edi]
  1401 00001295 C1E004              <1> 	shl eax, 4
  1402 00001298 01C3                <1> 	add ebx, eax
  1403 0000129A 47                  <1> 	inc edi
  1404 0000129B 8A27                <1> 	mov ah, [edi]
  1405 0000129D BA00000000          <1> 	mov edx, 0
  1406 000012A2 8A15[F30C0000]      <1> 	mov dl, [charxy]
  1407 000012A8 D1EA                <1> 	shr edx, 1
  1408 000012AA C1C110              <1> 	rol ecx, 16
  1409 000012AD B110                <1> 	mov cl, 16
  1410                              <1> nowinfont:
  1411 000012AF 8A03                <1> 	mov al, [ebx]
  1412 000012B1 D0C8                <1> 	ror al, 1
  1413 000012B3 80FC07              <1> 	cmp ah, 7
  1414 000012B6 7602                <1> 	jbe notnotfont
  1415 000012B8 F6D0                <1> 	not al
  1416                              <1> notnotfont:
  1417 000012BA 8806                <1> 	mov [esi], al
  1418 000012BC 01D6                <1> 	add esi, edx
  1419 000012BE 43                  <1> 	inc ebx
  1420 000012BF FEC9                <1> 	dec cl
  1421 000012C1 80F900              <1> 	cmp cl, 0
  1422 000012C4 75E9                <1> 	jne nowinfont
  1423 000012C6 C1E204              <1> 	shl edx, 4
  1424 000012C9 29D6                <1> 	sub esi, edx
  1425 000012CB C1C110              <1> 	rol ecx, 16
  1426                              <1> nopresentwinfont:
  1427 000012CE 47                  <1> 	inc edi
  1428 000012CF 46                  <1> 	inc esi
  1429 000012D0 80E902              <1> 	sub cl, 2
  1430 000012D3 80F900              <1> 	cmp cl, 0
  1431 000012D6 75B1                <1> 	jne nowincopy2
  1432 000012D8 8A0D[F30C0000]      <1> 	mov cl, [charxy]
  1433 000012DE BA00000000          <1> 	mov edx, 0
  1434 000012E3 88CA                <1> 	mov dl, cl
  1435 000012E5 D1EA                <1> 	shr edx, 1
  1436 000012E7 29D6                <1> 	sub esi, edx
  1437 000012E9 C1E204              <1> 	shl edx, 4
  1438 000012EC 01D6                <1> 	add esi, edx
  1439 000012EE FECD                <1> 	dec ch
  1440 000012F0 80FD00              <1> 	cmp ch, 0
  1441 000012F3 7594                <1> 	jne nowincopy2
  1442                              <1> nocopytermatall:
  1443 000012F5 E802000000          <1> 	call switchtermcursor
  1444 000012FA 61                  <1> 	popa
  1445 000012FB C3                  <1> 	ret
  1446                              <1> 	
  1447                              <1> switchtermcursor:
  1448 000012FC 8B3D[17120000]      <1> 	mov edi, [termcursorpos]
  1449 00001302 8A4701              <1> 	mov al, [edi + 1]
  1450 00001305 8A27                <1> 	mov ah, [edi]
  1451 00001307 3C07                <1> 	cmp al, 7
  1452 00001309 7607                <1> 	jbe movlargecursorterm
  1453 0000130B B007                <1> 	mov al, 7
  1454 0000130D E902000000          <1> 	jmp movedcursorterm
  1455                              <1> movlargecursorterm:
  1456 00001312 B0F0                <1> 	mov al, 0xF0
  1457                              <1> movedcursorterm:
  1458 00001314 884701              <1> 	mov [edi + 1], al
  1459 00001317 80FC00              <1> 	cmp ah, 0
  1460 0000131A 7504                <1> 	jne fixednocursorterm
  1461 0000131C B420                <1> 	mov ah, " "
  1462 0000131E 8827                <1> 	mov [edi], ah
  1463                              <1> fixednocursorterm:
  1464 00001320 C3                  <1> 	ret
  1465                              <1> 	
  1466                                      %include 'source/solleros.asm'
  1467                              <1> 	;SOLLEROS.ASM
  1468                              <1> os:
  1469 00001321 E8A8FEFFFF          <1> 	call clear
  1470 00001326 BE[56520000]        <1> 	mov esi, userask
  1471 0000132B E8AEFBFFFF          <1> 	call print
  1472                              <1> usercheck:
  1473 00001330 BE[7A1B0000]        <1> 	mov esi, buftxt
  1474 00001335 B00D                <1> 	mov al, 13
  1475 00001337 B404                <1> 	mov ah, 4
  1476 00001339 CD30                <1> 	int 30h
  1477 0000133B 56                  <1> 	push esi
  1478 0000133C BE[76520000]        <1> 	mov esi, line
  1479 00001341 E898FBFFFF          <1> 	call print
  1480 00001346 BE[60520000]        <1> 	mov esi, pwdask
  1481 0000134B E88EFBFFFF          <1> 	call print
  1482 00001350 5E                  <1> 	pop esi
  1483 00001351 46                  <1> 	inc esi
  1484 00001352 8935[08140000]      <1> 	mov [esipass], esi
  1485                              <1> passcheck:
  1486 00001358 B000                <1> 	mov al, 0
  1487 0000135A B405                <1> 	mov ah, 5
  1488 0000135C CD30                <1> 	int 30h
  1489 0000135E 3C0D                <1> 	cmp al, 13
  1490 00001360 0F8435000000        <1> 	je near gotpass
  1491 00001366 3C08                <1> 	cmp al, 8
  1492 00001368 0F840F000000        <1> 	je near backpass
  1493 0000136E 8806                <1> 	mov [esi], al
  1494 00001370 46                  <1> 	inc esi
  1495 00001371 B02A                <1> 	mov al, '*'
  1496 00001373 B406                <1> 	mov ah, 6
  1497 00001375 CD30                <1> 	int 30h
  1498 00001377 EBDF                <1> 	jmp passcheck
  1499 00001379 08200800            <1> backcursor2 db 8," ",8,0
  1500                              <1> backpass:
  1501 0000137D 3B35[08140000]      <1> 	cmp esi, [esipass]
  1502 00001383 0F84CFFFFFFF        <1> 	je near passcheck
  1503 00001389 4E                  <1> 	dec esi
  1504 0000138A C60600              <1> 	mov byte [esi], 0
  1505 0000138D 56                  <1> 	push esi
  1506 0000138E BE[79130000]        <1> 	mov esi, backcursor2
  1507 00001393 E846FBFFFF          <1> 	call print
  1508 00001398 5E                  <1> 	pop esi
  1509 00001399 EBBD                <1> 	jmp passcheck
  1510                              <1> gotpass:
  1511 0000139B B000                <1> 	mov al,0
  1512 0000139D 8806                <1> 	mov [esi], al
  1513 0000139F BE[76520000]        <1> 	mov esi, line
  1514 000013A4 E835FBFFFF          <1> 	call print
  1515 000013A9 BB[79520000]        <1> 	mov ebx, userlst
  1516                              <1> userfind:
  1517 000013AE BE[7A1B0000]        <1> 	mov esi, buftxt
  1518 000013B3 8A06                <1> 	mov al, [esi]
  1519 000013B5 3C00                <1> 	cmp al, 0
  1520 000013B7 0F8464FFFFFF        <1> 	je near os
  1521 000013BD 891D[0C140000]      <1> 	mov [usercache], ebx
  1522 000013C3 E8AF010000          <1> 	call tester
  1523 000013C8 3C01                <1> 	cmp al, 1
  1524 000013CA 7415                <1> 	je pwdtest
  1525                              <1> nxtuser:
  1526 000013CC 43                  <1> 	inc ebx
  1527 000013CD 8A03                <1> 	mov al, [ebx]
  1528 000013CF 3C00                <1> 	cmp al, 0
  1529 000013D1 74DB                <1> 	je userfind
  1530 000013D3 81FB[9C520000]      <1> 	cmp ebx, userlstend
  1531 000013D9 0F8342FFFFFF        <1> 	jae near os
  1532 000013DF EBCD                <1> 	jmp userfind
  1533                              <1> pwdtest:
  1534 000013E1 46                  <1> 	inc esi
  1535 000013E2 43                  <1> 	inc ebx
  1536 000013E3 E88F010000          <1> 	call tester
  1537 000013E8 3C01                <1> 	cmp al, 1
  1538 000013EA 7402                <1> 	je pwdrgt
  1539 000013EC EBDE                <1> 	jmp nxtuser
  1540 000013EE E8DBFDFFFF          <1> pwdrgt:	call clear
  1541 000013F3 66B90002            <1> 	mov cx, 200h
  1542 000013F7 BE[7A1B0000]        <1> 	mov esi, buftxt
  1543 000013FC B000                <1> 	mov al, 0
  1544 000013FE 8806                <1> bufclr:	mov [esi], al
  1545 00001400 46                  <1> 	inc esi
  1546 00001401 E2FB                <1> 	loop bufclr
  1547                              <1> ;;;;;;;;;;;;;;;;
  1548 00001403 E92B000000          <1> 	jmp nwcmd
  1549                              <1> 
  1550 00001408 00000000            <1> esipass dd 0
  1551 0000140C [79520000]          <1> usercache dd userlst
  1552                              <1> 	
  1553                              <1> buftxtclear:
  1554 00001410 B000                <1> 	mov al, 0
  1555 00001412 BE[7A1B0000]        <1> 	mov esi, buftxt
  1556 00001417 81FE[7A1C0000]      <1> clearbuftxt: cmp esi, buf2
  1557 0000141D 730E                <1> 	jae retbufclr
  1558 0000141F 8806                <1> 	mov [esi], al
  1559 00001421 46                  <1> 	inc esi
  1560 00001422 EBF3                <1> 	jmp clearbuftxt
  1561                              <1> 
  1562 00001424 39DE                <1> clearitbuf: cmp esi, ebx
  1563 00001426 7305                <1> 	jae retbufclr
  1564 00001428 8806                <1> 	mov [esi], al
  1565 0000142A 46                  <1> 	inc esi
  1566 0000142B EBF7                <1> 	jmp clearitbuf
  1567 0000142D C3                  <1> retbufclr: ret
  1568                              <1> 
  1569 0000142E E900000000          <1> full:	jmp nwcmd
  1570                              <1> 
  1571                              <1> 
  1572 00001433 B001                <1> nwcmd:	mov al, 1
  1573 00001435 3805[69130000]      <1> 	cmp [BATCHISON], al
  1574 0000143B 0F839F000000        <1> 	jae near batchran
  1575 00001441 B000                <1> cancel:	mov al, 0
  1576 00001443 A2[00130000]        <1> 	mov [IFON], al
  1577 00001448 A2[69130000]        <1> 	mov [BATCHISON], al
  1578 0000144D B05B                <1> 	mov al, '['
  1579 0000144F B406                <1> 	mov ah, 6
  1580 00001451 66BB0700            <1> 	mov bx, 7
  1581 00001455 E8A9F8FFFF          <1> 	call int301prnt
  1582 0000145A 8B35[0C140000]      <1> 	mov esi, [usercache]
  1583 00001460 E879FAFFFF          <1> 	call print
  1584 00001465 BE[6A520000]        <1> 	mov esi, location
  1585 0000146A E86FFAFFFF          <1> 	call print
  1586                              <1> 	;call time
  1587                              <1> 	;mov esi, timeshow
  1588                              <1> 	;call print
  1589                              <1> 	;mov esi, cmd
  1590                              <1> 	;call print
  1591 0000146F E89CFFFFFF          <1> 	call buftxtclear
  1592 00001474 BE[7A1B0000]        <1> 	mov esi, buftxt
  1593 00001479 C605[2D0F0000]01    <1> 	mov byte [commandedit], 1
  1594 00001480 B00D                <1> 	mov al, 13
  1595 00001482 66BB0700            <1> 	mov bx, 7
  1596 00001486 E8ABFAFFFF          <1> 	call int305
  1597 0000148B C605[2D0F0000]00    <1> 	mov byte [commandedit], 0
  1598 00001492 8B35[1B300000]      <1> gotcmd:	mov esi, [currentcommandpos]
  1599 00001498 8935[17300000]      <1> 	mov [lastcommandpos], esi
  1600 0000149E BF[7A1B0000]        <1> 	mov edi, buftxt
  1601 000014A3 81C6[1F300000]      <1> 	add esi, commandbuf
  1602 000014A9 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1603 000014AF 7605                <1> 	jbe copycommand
  1604 000014B1 BE[1F300000]        <1> 	mov esi, commandbuf
  1605                              <1> copycommand:
  1606 000014B6 8A07                <1> 	mov al, [edi]
  1607 000014B8 8806                <1> 	mov [esi], al
  1608 000014BA 47                  <1> 	inc edi
  1609 000014BB 46                  <1> 	inc esi
  1610 000014BC 3C00                <1> 	cmp al, 0
  1611 000014BE 740F                <1> 	je donecopy
  1612 000014C0 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1613 000014C6 76EE                <1> 	jbe copycommand
  1614 000014C8 BE[1F300000]        <1> 	mov esi, commandbuf
  1615 000014CD EBE7                <1> 	jmp copycommand
  1616                              <1> donecopy:
  1617 000014CF 81EE[1F300000]      <1> 	sub esi, commandbuf
  1618 000014D5 8935[1B300000]      <1> 	mov [currentcommandpos], esi
  1619 000014DB E914000000          <1> 	jmp run
  1620                              <1> 	
  1621                              <1> batchran:
  1622 000014E0 C3                  <1> 	ret
  1623                              <1> 
  1624 000014E1 E82AFFFFFF          <1> input:	call buftxtclear
  1625 000014E6 BE[7A1B0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1626 000014EB B00D                <1> stdin:	mov al, 13
  1627 000014ED B307                <1> 	mov bl, 7
  1628 000014EF B404                <1> 	mov ah, 4
  1629 000014F1 CD30                <1> 	int 30h
  1630 000014F3 C3                  <1> 	ret
  1631                              <1> 
  1632 000014F4 BE[76520000]        <1> run:	mov esi, line
  1633 000014F9 E8E0F9FFFF          <1> 	call print
  1634                              <1> progtest:
  1635 000014FE BE[7A1B0000]        <1> 	mov esi, buftxt
  1636 00001503 BB[6F130000]        <1> 	mov ebx, fileindex
  1637 00001508 668B03              <1> prgnxt:	mov ax, [ebx]
  1638 0000150B B105                <1> 	mov cl, 5
  1639 0000150D B504                <1> 	mov ch, 4
  1640 0000150F 6639C8              <1> 	cmp ax, cx
  1641 00001512 740B                <1> 	je fndprg
  1642 00001514 43                  <1> 	inc ebx
  1643 00001515 81FB[6F150000]      <1> 	cmp ebx, fileindexend
  1644 0000151B 732E                <1> 	jae prgnf
  1645 0000151D EBE9                <1> 	jmp prgnxt
  1646 0000151F 81C302000000        <1> fndprg: add ebx, 2
  1647 00001525 BE[7A1B0000]        <1> 	mov esi, buftxt
  1648 0000152A 66B90000            <1> 	mov cx, 0
  1649 0000152E E87E000000          <1> 	call cndtest
  1650 00001533 3C01                <1> 	cmp al, 1
  1651 00001535 7302                <1> 	jae prggood
  1652 00001537 EBCF                <1> 	jmp prgnxt
  1653 00001539 81FB[6F150000]      <1> prggood: cmp ebx, fileindexend
  1654 0000153F 7331                <1> 	jae prgdn
  1655 00001541 81C303000000        <1> 	add ebx, 3
  1656 00001547 8B3B                <1> 	mov edi, [ebx]
  1657 00001549 FFE7                <1> 	jmp edi
  1658                              <1> prgnf:	
  1659 0000154B A0[7A1B0000]        <1> 	mov al, [buftxt]
  1660 00001550 3C00                <1> 	cmp al, 0
  1661 00001552 741E                <1> 	je prgdn
  1662 00001554 BE[3D520000]        <1> 	mov esi, notfound1
  1663 00001559 E880F9FFFF          <1> 	call print
  1664 0000155E BE[7A1B0000]        <1> 	mov esi, buftxt
  1665 00001563 E876F9FFFF          <1> 	call print
  1666 00001568 BE[47520000]        <1> 	mov esi, notfound2
  1667 0000156D E86CF9FFFF          <1> 	call print
  1668 00001572 E9BCFEFFFF          <1> prgdn:	jmp nwcmd
  1669                              <1> 
  1670                              <1> 
  1671                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1672 00001577 B000                <1> 	mov al, 0
  1673 00001579 8A06                <1> retest:	mov al, [esi]
  1674 0000157B 8A23                <1> 	mov ah, [ebx]
  1675 0000157D 3C00                <1> 	cmp al, 0
  1676 0000157F 7408                <1> 	je testtrue
  1677 00001581 38E0                <1> 	cmp al, ah
  1678 00001583 750C                <1> 	jne testfalse
  1679 00001585 43                  <1> 	inc ebx
  1680 00001586 46                  <1> 	inc esi
  1681 00001587 EBF0                <1> 	jmp retest
  1682                              <1> testtrue:
  1683 00001589 80FC00              <1> 	cmp ah, 0
  1684 0000158C 7503                <1> 	jne testfalse
  1685 0000158E B001                <1> 	mov al, 1
  1686 00001590 C3                  <1> 	ret
  1687                              <1> testfalse:
  1688 00001591 B000                <1> 	mov al, 0
  1689 00001593 C3                  <1> 	ret
  1690                              <1> 
  1691                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1692 00001594 B000                <1> 	mov al, 0
  1693                              <1> opretest:
  1694 00001596 8A06                <1> 	mov al, [esi]
  1695 00001598 8A23                <1> 	mov ah, [ebx]
  1696 0000159A 38E0                <1> 	cmp al, ah
  1697 0000159C 7510                <1> 	jne optestfalse
  1698 0000159E 80FC00              <1> 	cmp ah, 0
  1699 000015A1 7404                <1> 	je optesttrue
  1700 000015A3 43                  <1> 	inc ebx
  1701 000015A4 46                  <1> 	inc esi
  1702 000015A5 EBEF                <1> 	jmp opretest
  1703                              <1> optesttrue:
  1704 000015A7 3C00                <1> 	cmp al, 0
  1705 000015A9 7503                <1> 	jne optestfalse
  1706 000015AB B001                <1> 	mov al, 1
  1707 000015AD C3                  <1> 	ret
  1708                              <1> optestfalse:
  1709 000015AE B000                <1> 	mov al, 0
  1710 000015B0 C3                  <1> 	ret
  1711                              <1> 
  1712                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1713 000015B1 B000                <1> 	mov al, 0
  1714 000015B3 8A06                <1> cndretest:	mov al, [esi]
  1715 000015B5 8A23                <1> 	mov ah, [ebx]
  1716 000015B7 38CC                <1> 	cmp ah, cl
  1717 000015B9 7408                <1> 	je cndtesttrue
  1718 000015BB 38E0                <1> 	cmp al, ah
  1719 000015BD 750B                <1> 	jne cndtestfalse
  1720 000015BF 43                  <1> 	inc ebx
  1721 000015C0 46                  <1> 	inc esi
  1722 000015C1 EBF0                <1> 	jmp cndretest
  1723                              <1> cndtesttrue:
  1724 000015C3 38C8                <1> 	cmp al, cl
  1725 000015C5 7506                <1> 	jne cndtestalmost
  1726 000015C7 B001                <1> 	mov al, 1
  1727 000015C9 C3                  <1> 	ret
  1728                              <1> cndtestfalse:
  1729 000015CA B000                <1> 	mov al, 0
  1730 000015CC C3                  <1> 	ret
  1731                              <1> cndtestalmost:
  1732 000015CD B002                <1> 	mov al, 2
  1733 000015CF C3                  <1> 	ret
  1734 000015D0 00                  <1> currentdir db 0
  1735 000015D1 BE[6F130000]        <1> dir:	mov esi, fileindex
  1736 000015D6 8A06                <1> 	dirnxt:	mov al, [esi]
  1737 000015D8 B400                <1> 		mov ah, 0
  1738 000015DA 3C05                <1> 		cmp al, 5
  1739 000015DC 744A                <1> 		je dirfnd
  1740 000015DE 3C07                <1> 		cmp al, 7
  1741 000015E0 743C                <1> 		je dirfnd3
  1742 000015E2 3C06                <1> 		cmp al, 6
  1743 000015E4 7438                <1> 		je dirfnd3
  1744 000015E6 46                  <1> 		inc esi
  1745 000015E7 81FE[6F150000]      <1> 		cmp esi,  fileindexend
  1746 000015ED 737B                <1> 		jae dirdn
  1747 000015EF EBE5                <1> 		jmp dirnxt
  1748 000015F1 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1749 000015FA 070400646F63756D65- <1>
  1750 00001603 6E74000A0400666F6C- <1>
  1751 0000160C 646572000504006578- <1>
  1752 00001615 6563757461626C6500  <1>
  1753                              <1> 	dirfnd3:
  1754 0000161E 46                  <1> 		inc esi
  1755 0000161F 81FE[6F150000]      <1> 		cmp esi, fileindexend
  1756 00001625 76AF                <1> 		jbe dirnxt
  1757 00001627 4E                  <1> 		dec esi
  1758 00001628 46                  <1> 	dirfnd:	inc esi
  1759 00001629 8A06                <1> 		mov al, [esi]
  1760 0000162B B400                <1> 		mov ah, 0
  1761 0000162D 3C04                <1> 		cmp al, 4
  1762 0000162F 740B                <1> 		je dirfnd2
  1763 00001631 46                  <1> 		inc esi
  1764 00001632 81FE[6F150000]      <1> 		cmp esi,  fileindexend
  1765 00001638 7330                <1> 		jae dirdn
  1766 0000163A EB9A                <1> 		jmp dirnxt
  1767 0000163C 81C601000000        <1> 	dirfnd2: add esi, 1
  1768 00001642 E897F8FFFF          <1> 		call print
  1769 00001647 8935[6F160000]      <1> 		mov [esidir], esi
  1770 0000164D BE[76520000]        <1> 		mov esi, line
  1771 00001652 E887F8FFFF          <1> 		call print
  1772 00001657 8B35[6F160000]      <1> 		mov esi, [esidir]
  1773 0000165D 81FE[6F150000]      <1> 		cmp esi,  fileindexend
  1774 00001663 7305                <1> 		jae dirdn
  1775 00001665 E96CFFFFFF          <1> 		jmp dirnxt
  1776 0000166A E9C4FDFFFF          <1> 	dirdn:	jmp nwcmd
  1777 0000166F 00000000            <1> esidir dd 0
  1778                              <1> 
  1779                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1780                              <1> 		                ;ends if array seperator is found backwards after 0
  1781                              <1> 	arnxt:	      
  1782 00001673 88E8                <1> 		mov al, ch
  1783 00001675 88CC                <1> 		mov ah, cl        
  1784 00001677 663906              <1> 		cmp [esi], ax
  1785 0000167A 744D                <1> 		je ardn
  1786 0000167C 66390E              <1> 		cmp [esi], cx
  1787 0000167F 7407                <1> 		je arfnd
  1788 00001681 46                  <1> 		inc esi
  1789 00001682 39DE                <1> 		cmp esi, ebx
  1790 00001684 7343                <1> 		jae ardn
  1791 00001686 EBEB                <1> 		jmp arnxt
  1792 00001688 81C602000000        <1> 	arfnd: add esi, 2
  1793 0000168E 891D[CA160000]      <1> 		mov [arbx], ebx
  1794 00001694 890D[CE160000]      <1> 		mov [arcx], ecx
  1795 0000169A E83FF8FFFF          <1> 		call print
  1796 0000169F 8935[D0160000]      <1> 		mov [arsi], esi
  1797 000016A5 BE[76520000]        <1> 		mov esi, line
  1798 000016AA E82FF8FFFF          <1> 		call print
  1799 000016AF 8B1D[CA160000]      <1> 		mov ebx, [arbx]
  1800 000016B5 668B0D[CE160000]    <1> 		mov cx, [arcx]
  1801 000016BC 8B35[D0160000]      <1> 		mov esi, [arsi]
  1802 000016C2 46                  <1> 		inc esi
  1803 000016C3 39DE                <1> 		cmp esi, ebx
  1804 000016C5 7302                <1> 		jae ardn
  1805 000016C7 EBAA                <1> 		jmp arnxt
  1806 000016C9 C3                  <1> 	ardn:	ret
  1807 000016CA 00000000            <1> arbx:	dw 0,0
  1808 000016CE 0000                <1> arcx:	db 0,0
  1809 000016D0 00000000            <1> arsi:	dw 0,0
  1810                              <1> 
  1811                              <1> clearbuffer:
  1812 000016D4 BE[7A1C0000]        <1> 	mov esi, buf2
  1813 000016D9 B030                <1> 	mov al, '0'
  1814 000016DB 81FE[8E1C0000]      <1> clearbuf: cmp esi, numbuf
  1815 000016E1 7305                <1> 	jae doneclearbuff
  1816 000016E3 8806                <1> 	mov [esi], al
  1817 000016E5 46                  <1> 	inc esi
  1818 000016E6 EBF3                <1> 	jmp clearbuf
  1819                              <1> doneclearbuff: 
  1820 000016E8 C3                  <1> 		ret
  1821                              <1> 
  1822                              <1> convert:
  1823 000016E9 4E                  <1> 	dec esi
  1824 000016EA 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  1825                              <1> cnvrt:
  1826 000016EC 89DE                <1> 	mov esi, ebx
  1827 000016EE 81EE09000000        <1> 	sub esi, 9
  1828 000016F4 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  1829 000016FA 720A                <1> 	jb ten8
  1830 000016FC 81E900CA9A3B        <1> 	sub ecx, 1000000000
  1831 00001702 FE06                <1> 	inc byte [esi]
  1832 00001704 EBE6                <1> 	jmp cnvrt
  1833 00001706 46                  <1> ten8:	inc esi
  1834 00001707 81F900E1F505        <1> 	cmp ecx, 100000000
  1835 0000170D 720A                <1> 	jb ten7
  1836 0000170F 81E900E1F505        <1> 	sub ecx, 100000000
  1837 00001715 FE06                <1> 	inc byte [esi]
  1838 00001717 EBD3                <1> 	jmp cnvrt
  1839 00001719 46                  <1> ten7:	inc esi
  1840 0000171A 81F980969800        <1> 	cmp ecx, 10000000
  1841 00001720 720A                <1> 	jb ten6
  1842 00001722 81E980969800        <1> 	sub ecx, 10000000
  1843 00001728 FE06                <1> 	inc byte [esi]
  1844 0000172A EBC0                <1> 	jmp cnvrt
  1845 0000172C 46                  <1> ten6:	inc esi
  1846 0000172D 81F940420F00        <1> 	cmp ecx, 1000000
  1847 00001733 720A                <1> 	jb ten5
  1848 00001735 81E940420F00        <1> 	sub ecx, 1000000
  1849 0000173B FE06                <1> 	inc byte [esi]
  1850 0000173D EBAD                <1> 	jmp cnvrt
  1851 0000173F 46                  <1> ten5:	inc esi
  1852 00001740 81F9A0860100        <1> 	cmp ecx, 100000
  1853 00001746 720A                <1> 	jb ten4
  1854 00001748 81E9A0860100        <1> 	sub ecx, 100000
  1855 0000174E FE06                <1> 	inc byte [esi]
  1856 00001750 EB9A                <1> 	jmp cnvrt
  1857 00001752 46                  <1> ten4:	inc esi
  1858 00001753 81F910270000        <1> 	cmp ecx, 10000
  1859 00001759 720A                <1> 	jb ten3
  1860 0000175B 81E910270000        <1> 	sub ecx, 10000
  1861 00001761 FE06                <1> 	inc byte [esi]
  1862 00001763 EB87                <1> 	jmp cnvrt
  1863 00001765 46                  <1> ten3:	inc esi
  1864 00001766 81F9E8030000        <1> 	cmp ecx, 1000
  1865 0000176C 720D                <1> 	jb ten2
  1866 0000176E 81E9E8030000        <1> 	sub ecx, 1000
  1867 00001774 FE06                <1> 	inc byte [esi]
  1868 00001776 E971FFFFFF          <1> 	jmp cnvrt
  1869 0000177B 46                  <1> ten2:	inc esi
  1870 0000177C 81F964000000        <1> 	cmp ecx, 100
  1871 00001782 720D                <1> 	jb ten1
  1872 00001784 81E964000000        <1> 	sub ecx, 100
  1873 0000178A FE06                <1> 	inc byte [esi]
  1874 0000178C E95BFFFFFF          <1> 	jmp cnvrt
  1875 00001791 46                  <1> ten1:	inc esi
  1876 00001792 81F90A000000        <1> 	cmp ecx, 10
  1877 00001798 720D                <1> 	jb ten0
  1878 0000179A 81E90A000000        <1> 	sub ecx, 10
  1879 000017A0 FE06                <1> 	inc byte [esi]
  1880 000017A2 E945FFFFFF          <1> 	jmp cnvrt
  1881 000017A7 46                  <1> ten0:	inc esi
  1882 000017A8 81F901000000        <1> 	cmp ecx, 1
  1883 000017AE 720D                <1> 	jb tendn
  1884 000017B0 81E901000000        <1> 	sub ecx, 1
  1885 000017B6 FE06                <1> 	inc byte [esi]
  1886 000017B8 E92FFFFFFF          <1> 	jmp cnvrt
  1887                              <1> tendn:
  1888 000017BD C3                  <1> 	ret
  1889                              <1> 
  1890                              <1> 	
  1891                              <1> 
  1892 000017BE 00<rept>            <1> hexnumber times 8 db 0
  1893 000017C6 202000              <1> hexnumberend db "  ",0
  1894                              <1> 
  1895                              <1> 
  1896 000017C9 00000000            <1> sibuf dw 0,0
  1897 000017CD 00000000            <1> dibuf dw 0,0
  1898                              <1> 
  1899                              <1> converthex:
  1900                              <1> clearbufferhex:
  1901 000017D1 B030                <1> 	mov al, '0'
  1902 000017D3 8935[C9170000]      <1> 	mov [sibuf], esi
  1903 000017D9 893D[CD170000]      <1> 	mov [dibuf], edi
  1904 000017DF 39FE                <1> clearbufhex: cmp esi, edi
  1905 000017E1 7305                <1> 	jae doneclearbuffhex
  1906 000017E3 8806                <1> 	mov [esi], al
  1907 000017E5 46                  <1> 	inc esi
  1908 000017E6 EBF7                <1> 	jmp clearbufhex
  1909                              <1> doneclearbuffhex:
  1910 000017E8 8B35[CD170000]      <1> 	mov esi, [dibuf]
  1911 000017EE 89CA                <1> 	mov edx, ecx
  1912 000017F0 81FA00000000        <1> 	cmp edx, 0
  1913 000017F6 741F                <1> 	je donenxtephx
  1914                              <1> nxtexphx:	;0x10^x
  1915 000017F8 4E                  <1> 	dec esi
  1916 000017F9 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  1917 000017FB 89D1                <1> 	mov ecx, edx
  1918 000017FD 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  1919 00001803 E81C000000          <1> 	call cnvrtexphx		;;get this digit
  1920 00001808 89FE                <1> 	mov esi, edi
  1921 0000180A C1EA04              <1> 	shr edx, 4		;;next digit
  1922 0000180D 81FA00000000        <1> 	cmp edx, 0
  1923 00001813 7402                <1> 	je donenxtephx
  1924 00001815 EBE1                <1> 	jmp nxtexphx
  1925                              <1> donenxtephx:
  1926 00001817 8B35[C9170000]      <1> 	mov esi, [sibuf]
  1927 0000181D 8B3D[CD170000]      <1> 	mov edi, [dibuf]
  1928 00001823 C3                  <1> 	ret
  1929                              <1> cnvrtexphx:			;;convert this number
  1930 00001824 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  1931 00001826 81F900000000        <1> 	cmp ecx, 0
  1932 0000182C 7429                <1> 	je zerohx
  1933 0000182E 8A06                <1> cnvrthx:  mov al, [esi]
  1934 00001830 3C39                <1> 	cmp al, '9'
  1935 00001832 741B                <1> 	je lettershx
  1936 00001834 3C46                <1> lttrhxdn: cmp al, 'F'
  1937 00001836 741F                <1> 	je zerohx
  1938 00001838 8A06                <1> 	mov al, [esi]
  1939 0000183A FEC0                <1> 	inc al
  1940 0000183C 8806                <1> 	mov [esi], al
  1941 0000183E 89DE                <1> 	mov esi, ebx
  1942 00001840 81E901000000        <1> cnvrtlphx: sub ecx, 1
  1943 00001846 81F900000000        <1> 	cmp ecx, 0
  1944 0000184C 75E0                <1> 	jne cnvrthx
  1945 0000184E C3                  <1> 	ret
  1946                              <1> lettershx:
  1947 0000184F B041                <1> 	mov al, 'A'
  1948 00001851 2C01                <1> 	sub al, 1
  1949 00001853 8806                <1> 	mov [esi], al
  1950 00001855 EBDD                <1> 	jmp lttrhxdn
  1951 00001857 B030                <1> zerohx:	mov al, '0'
  1952 00001859 8806                <1> 	mov [esi], al
  1953 0000185B 4E                  <1> 	dec esi
  1954 0000185C 8A06                <1> 	mov al, [esi]
  1955 0000185E 3C46                <1> 	cmp al, 'F'
  1956 00001860 74F5                <1> 	je zerohx
  1957 00001862 41                  <1> 	inc ecx
  1958 00001863 EBDB                <1> 	jmp cnvrtlphx
  1959 00001865 00                  <1> smallhex db 0
  1960 00001866 01                  <1> firsthexshown db 1
  1961                              <1> showhexsmall:
  1962 00001867 C605[65180000]01    <1> 	mov byte [smallhex], 1
  1963 0000186E E808000000          <1> 	call showhex
  1964 00001873 C605[65180000]00    <1> 	mov byte [smallhex], 0
  1965 0000187A C3                  <1> 	ret
  1966                              <1> showhex:
  1967 0000187B 60                  <1> 	pusha
  1968 0000187C BE[BE170000]        <1> 	mov esi, hexnumber
  1969 00001881 BF[C6170000]        <1> 	mov edi, hexnumberend
  1970 00001886 E846FFFFFF          <1> 	call converthex
  1971 0000188B 803D[66180000]01    <1> 	cmp byte [firsthexshown], 1
  1972 00001892 7504                <1> 	jne showthathex
  1973 00001894 66BA0000            <1> 	mov dx, 0
  1974                              <1> showthathex:
  1975 00001898 803D[66180000]03    <1> 	cmp byte [firsthexshown], 3
  1976 0000189F 750A                <1> 	jne nonewhexline
  1977 000018A1 BE[76520000]        <1> 	mov esi, line
  1978 000018A6 E833F6FFFF          <1> 	call print
  1979                              <1> nonewhexline:
  1980 000018AB 803D[66180000]04    <1> 	cmp byte [firsthexshown], 4
  1981 000018B2 7527                <1> 	jne notabfixhex
  1982 000018B4 B1A0                <1> 	mov cl, 160
  1983 000018B6 28D1                <1> 	sub cl, dl
  1984 000018B8 C0E905              <1> 	shr cl, 5
  1985 000018BB C0E105              <1> 	shl cl, 5
  1986 000018BE 80F900              <1> 	cmp cl, 0
  1987 000018C1 750F                <1> 	jne nonewlinetabfixhex
  1988 000018C3 BE[76520000]        <1> 	mov esi, line
  1989 000018C8 E811F6FFFF          <1> 	call print
  1990 000018CD E909000000          <1> 	jmp notabfixhex
  1991                              <1> nonewlinetabfixhex:
  1992 000018D2 80C20F              <1> 	add dl, 15
  1993 000018D5 C0EA04              <1> 	shr dl, 4
  1994 000018D8 C0E204              <1> 	shl dl, 4
  1995                              <1> notabfixhex:
  1996 000018DB BE[BE170000]        <1> 	mov esi, hexnumber
  1997 000018E0 803D[65180000]01    <1> 	cmp byte [smallhex],1
  1998 000018E7 7506                <1> 	jne printnosmallhex
  1999 000018E9 81C606000000        <1> 	add esi, 6
  2000                              <1> printnosmallhex:
  2001 000018EF E8EAF5FFFF          <1> 	call print
  2002 000018F4 803D[66180000]02    <1> 	cmp byte [firsthexshown], 2
  2003 000018FB 750A                <1> 	jne hexshown
  2004 000018FD BE[76520000]        <1> 	mov esi, line
  2005 00001902 E8D7F5FFFF          <1> 	call print
  2006                              <1> hexshown:
  2007 00001907 C605[66180000]00    <1> 	mov byte [firsthexshown], 0
  2008 0000190E 61                  <1> 	popa
  2009 0000190F C3                  <1> 	ret
  2010                              <1> 
  2011                              <1> 
  2012 00001910 303030303030303030- <1> decnumber db "00000000000000"
  2013 00001919 3030303030          <1>
  2014 0000191E 2000                <1> decnumberend: db " ",0
  2015                              <1> 
  2016                              <1> showdec: ;;same as showhex, just uses decimal conversion
  2017 00001920 60                  <1> 	pusha
  2018 00001921 BF[10190000]        <1> 	mov edi, decnumber
  2019 00001926 BE[1E190000]        <1> 	mov esi, decnumberend
  2020                              <1> cleardecbuf:
  2021 0000192B C60730              <1> 	mov byte [edi], '0'
  2022 0000192E 47                  <1> 	inc edi
  2023 0000192F 39F7                <1> 	cmp edi, esi
  2024 00001931 72F8                <1> 	jb cleardecbuf
  2025 00001933 BF[10190000]        <1> 	mov edi, decnumber
  2026 00001938 E8ACFDFFFF          <1> 	call convert
  2027 0000193D 803D[66180000]01    <1> 	cmp byte [firsthexshown], 1
  2028 00001944 7504                <1> 	jne showthatdec
  2029 00001946 66BA0000            <1> 	mov dx, 0
  2030                              <1> showthatdec:
  2031 0000194A 803D[66180000]03    <1> 	cmp byte [firsthexshown], 3
  2032 00001951 750A                <1> 	jne nonewdecline
  2033 00001953 BE[76520000]        <1> 	mov esi, line
  2034 00001958 E881F5FFFF          <1> 	call print
  2035                              <1> nonewdecline:
  2036 0000195D 803D[66180000]04    <1> 	cmp byte [firsthexshown], 4
  2037 00001964 7527                <1> 	jne notabfixdec
  2038 00001966 B1A0                <1> 	mov cl, 160
  2039 00001968 28D1                <1> 	sub cl, dl
  2040 0000196A C0E905              <1> 	shr cl, 5
  2041 0000196D C0E105              <1> 	shl cl, 5
  2042 00001970 80F900              <1> 	cmp cl, 0
  2043 00001973 750F                <1> 	jne nonewlinetabfixdec
  2044 00001975 BE[76520000]        <1> 	mov esi, line
  2045 0000197A E85FF5FFFF          <1> 	call print
  2046 0000197F E909000000          <1> 	jmp notabfixdec
  2047                              <1> nonewlinetabfixdec:
  2048 00001984 80C20F              <1> 	add dl, 15
  2049 00001987 C0EA04              <1> 	shr dl, 4
  2050 0000198A C0E204              <1> 	shl dl, 4
  2051                              <1> notabfixdec:
  2052 0000198D BE[10190000]        <1> 	mov esi, decnumber
  2053 00001992 4E                  <1> 	dec esi
  2054                              <1> sifind:
  2055 00001993 46                  <1> 	inc esi
  2056 00001994 803E30              <1> 	cmp byte [esi], '0'
  2057 00001997 74FA                <1> 	je sifind
  2058 00001999 E840F5FFFF          <1> 	call print
  2059 0000199E 803D[66180000]02    <1> 	cmp byte [firsthexshown], 2
  2060 000019A5 750A                <1> 	jne decshown
  2061 000019A7 BE[76520000]        <1> 	mov esi, line
  2062 000019AC E82DF5FFFF          <1> 	call print
  2063                              <1> decshown:
  2064 000019B1 C605[66180000]00    <1> 	mov byte [firsthexshown], 0
  2065 000019B8 61                  <1> 	popa
  2066 000019B9 C3                  <1> 	ret
  2067                              <1> 	
  2068                              <1> cnvrttxt: 
  2069 000019BA B900000000          <1> 	mov ecx, 0
  2070 000019BF B800000000          <1> 	mov eax, 0
  2071 000019C4 BA00000000          <1> 	mov edx, 0
  2072 000019C9 BB00000000          <1> 	mov ebx, 0
  2073 000019CE 4E                  <1> 	dec esi
  2074                              <1> cnvrtlptxt:
  2075 000019CF 46                  <1> 	inc esi
  2076 000019D0 8A06                <1> 	mov al, [esi]
  2077 000019D2 3C00                <1> 	cmp al, 0
  2078 000019D4 75F9                <1> 	jne cnvrtlptxt
  2079 000019D6 4E                  <1> 	dec esi
  2080 000019D7 8A06                <1> 	mov al, [esi]
  2081 000019D9 3C30                <1> 	cmp al, '0'
  2082 000019DB 7504                <1> 	jne txtlp
  2083 000019DD 39FE                <1> zerotest: cmp esi, edi
  2084 000019DF 745B                <1> 	je donecnvrt
  2085                              <1> txtlp:	
  2086 000019E1 B800000000          <1> 	mov eax, 0
  2087 000019E6 8A06                <1> 	mov al, [esi]
  2088 000019E8 3C3D                <1> 	cmp al, '='
  2089 000019EA 7450                <1> 	je donecnvrt
  2090 000019EC 3C30                <1> 	cmp al, 48
  2091 000019EE 724C                <1> 	jb donecnvrt
  2092 000019F0 3C23                <1> 	cmp al, '#'
  2093 000019F2 7448                <1> 	je donecnvrt
  2094 000019F4 39FE                <1> 	cmp esi, edi
  2095 000019F6 7244                <1> 	jb donecnvrt
  2096 000019F8 81F900000000        <1> 	cmp ecx, 0
  2097 000019FE 7708                <1> 	ja exp
  2098 00001A00 2C30                <1> noexp:	sub al, 48
  2099 00001A02 01C2                <1> 	add edx, eax
  2100 00001A04 4E                  <1> 	dec esi
  2101 00001A05 41                  <1> 	inc ecx
  2102 00001A06 EBD9                <1> 	jmp txtlp
  2103 00001A08 81F900000000        <1> exp:	cmp ecx, 0
  2104 00001A0E 74F0                <1> 	je noexp
  2105 00001A10 2C30                <1> 	sub al, 48
  2106 00001A12 51                  <1> 	push ecx
  2107 00001A13 89C3                <1> expmul:	mov ebx, eax
  2108 00001A15 01D8                <1> 	add eax, ebx
  2109 00001A17 01D8                <1> 	add eax, ebx
  2110 00001A19 01D8                <1> 	add eax, ebx
  2111 00001A1B 01D8                <1> 	add eax, ebx
  2112 00001A1D 01D8                <1> 	add eax, ebx
  2113 00001A1F 01D8                <1> 	add eax, ebx
  2114 00001A21 01D8                <1> 	add eax, ebx
  2115 00001A23 01D8                <1> 	add eax, ebx
  2116 00001A25 01D8                <1> 	add eax, ebx
  2117 00001A27 81E901000000        <1> 	sub ecx, 1
  2118 00001A2D 81F900000000        <1> 	cmp ecx, 0
  2119 00001A33 77DE                <1> 	ja expmul
  2120 00001A35 01C2                <1> 	add edx, eax
  2121 00001A37 59                  <1> 	pop ecx
  2122 00001A38 4E                  <1> 	dec esi
  2123 00001A39 41                  <1> 	inc ecx
  2124 00001A3A EBA5                <1> 	jmp txtlp
  2125 00001A3C 89D1                <1> donecnvrt: mov ecx, edx
  2126 00001A3E C3                  <1> 	ret
  2127                                      %include 'source/builtinprogs.asm'
  2128 00001A3F 050406040704        <1> filetypes db 5,4,6,4,7,4
  2129                              <1> progstart:		;programs start here
  2130                              <1> ;db 5,4,"index",0
  2131                              <1> ;	call indexfiles
  2132                              <1> ;	jmp nwcmd
  2133                              <1> indexfiles:
  2134 00001A45 BE[451A0000]        <1> 	mov esi, progstart
  2135 00001A4A BB[6F130000]        <1> 	mov ebx, fileindex
  2136 00001A4F BF[451A0000]        <1> 	mov edi, progstart
  2137 00001A54 81EF02000000        <1> 	sub edi, 2
  2138                              <1> indexloop:
  2139 00001A5A 668B0E              <1> 	mov cx, [esi]
  2140                              <1> 	indexloop2:
  2141 00001A5D 663B0F              <1> 		cmp cx, [edi]
  2142 00001A60 7424                <1> 		je indexloop2done
  2143 00001A62 81EF02000000        <1> 		sub edi, 2
  2144 00001A68 81FF[3F1A0000]      <1> 		cmp edi, filetypes
  2145 00001A6E 73ED                <1> 		jae indexloop2
  2146 00001A70 BF[451A0000]        <1> 	mov edi, progstart
  2147 00001A75 81EF02000000        <1> 	sub edi, 2
  2148 00001A7B 46                  <1> 	inc esi
  2149 00001A7C 81FE[A12A0000]      <1> 	cmp esi, batchprogend
  2150 00001A82 734E                <1> 	jae indexloopdone
  2151 00001A84 EBD4                <1> 	jmp indexloop
  2152                              <1> indexloop2done:
  2153 00001A86 66890B              <1> 	mov [ebx], cx
  2154 00001A89 81C302000000        <1> 	add ebx, 2
  2155 00001A8F 81C602000000        <1> 	add esi, 2
  2156                              <1> 	nameindex:
  2157 00001A95 8A0E                <1> 		mov cl, [esi]
  2158 00001A97 80F900              <1> 		cmp cl, 0
  2159 00001A9A 7406                <1> 		je nameindexdone
  2160 00001A9C 880B                <1> 		mov [ebx], cl
  2161 00001A9E 46                  <1> 		inc esi
  2162 00001A9F 43                  <1> 		inc ebx
  2163 00001AA0 EBF3                <1> 		jmp nameindex
  2164                              <1> 	nameindexdone:
  2165 00001AA2 43                  <1> 		inc ebx
  2166 00001AA3 66C7030000          <1> 		mov word [ebx], 0
  2167 00001AA8 81C302000000        <1> 		add ebx, 2
  2168 00001AAE 46                  <1> 		inc esi
  2169 00001AAF 8933                <1> 		mov [ebx], esi
  2170 00001AB1 81C304000000        <1> 		add ebx, 4
  2171 00001AB7 66C7030000          <1> 		mov word [ebx], 0
  2172 00001ABC 81C302000000        <1> 		add ebx, 2
  2173 00001AC2 81FB[6F150000]      <1> 		cmp ebx, fileindexend
  2174 00001AC8 7308                <1> 		jae indexloopdone
  2175 00001ACA 81C601000000        <1> 		add esi, 1
  2176 00001AD0 EB88                <1> 		jmp indexloop
  2177 00001AD2 C3                  <1> indexloopdone: 	ret
  2178                              <1> 
  2179                              <1> 
  2180                              <1> ;db 5,4,"showindex",0
  2181                              <1> ;	mov esi, fileindex
  2182                              <1> ;	mov ebx, fileindexend
  2183                              <1> ;	mov cl, 5
  2184                              <1> ;	mov ch, 4
  2185                              <1> ;	call array
  2186                              <1> ;	mov esi, fileindex
  2187                              <1> ;	mov ebx, fileindexend
  2188                              <1> ;	mov cl, 6
  2189                              <1> ;	mov ch, 4
  2190                              <1> ;	call array
  2191                              <1> ;	mov esi, fileindex
  2192                              <1> ;	mov ebx, fileindexend
  2193                              <1> ;	mov cl, 7
  2194                              <1> ;	mov ch, 4
  2195                              <1> ;	call array
  2196                              <1> ;	jmp nwcmd
  2197                              <1> 
  2198 00001AD3 05046C7300          <1> db 5,4,"ls",0
  2199 00001AD8 BE[451A0000]        <1> 	lscmd:	mov esi, progstart
  2200 00001ADD BB[A12A0000]        <1> 		mov ebx, progend
  2201 00001AE2 E9EAFAFFFF          <1> 		jmp dir
  2202                              <1> 		
  2203 00001AE7 05046469736B00      <1> db 5,4,"disk",0
  2204 00001AEE B900000000          <1> 		mov ecx, 0
  2205 00001AF3 8A0D[82010000]      <1> 		mov cl, [DriveNumber]
  2206 00001AF9 C605[66180000]00    <1> 		mov byte [firsthexshown], 0
  2207 00001B00 E876FDFFFF          <1> 		call showhex
  2208 00001B05 BE[76520000]        <1> 		mov esi, line
  2209 00001B0A E8CFF3FFFF          <1> 		call print
  2210 00001B0F BE[D3510000]        <1> 		mov esi, diskfileindex
  2211                              <1> 	diskindexdir:
  2212 00001B14 E8C5F3FFFF          <1> 		call print
  2213 00001B19 8B4E05              <1> 		mov ecx, [esi + 5]
  2214 00001B1C C605[66180000]03    <1> 		mov byte [firsthexshown], 3
  2215 00001B23 E8F8FDFFFF          <1> 		call showdec
  2216 00001B28 56                  <1> 		push esi
  2217 00001B29 BE[76520000]        <1> 		mov esi, line
  2218 00001B2E E8ABF3FFFF          <1> 		call print
  2219 00001B33 5E                  <1> 		pop esi
  2220 00001B34 81C609000000        <1> 		add esi, 9
  2221 00001B3A 81FE[38520000]      <1> 		cmp esi, enddiskfileindex
  2222 00001B40 72D2                <1> 		jb diskindexdir
  2223 00001B42 E9ECF8FFFF          <1> 		jmp nwcmd
  2224                              <1> 
  2225 00001B47 0504636C65617200    <1> db 5,4,"clear",0
  2226 00001B4F E87AF6FFFF          <1> 	cls:	call clear
  2227 00001B54 E9DAF8FFFF          <1> 		jmp nwcmd
  2228                              <1> 		
  2229 00001B59 05047761697400      <1> db 5,4,"wait",0
  2230 00001B60 B000                <1> 		mov al, 0
  2231 00001B62 E836F3FFFF          <1> 		call int302
  2232 00001B67 E9C7F8FFFF          <1> 		jmp nwcmd
  2233                              <1> 
  2234 00001B6C 05046563686F00      <1> db 5,4,"echo",0
  2235 00001B73 BE[7A1B0000]        <1> 	echo:	mov esi, buftxt
  2236 00001B78 81C605000000        <1> 		add esi, 5
  2237 00001B7E 8A06                <1> 		mov al, [esi]
  2238 00001B80 3C24                <1> 		cmp al, '$'
  2239 00001B82 7414                <1> 		je echovr
  2240 00001B84 E855F3FFFF          <1> 		call print
  2241 00001B89 BE[76520000]        <1> 		mov esi, line
  2242 00001B8E E84BF3FFFF          <1> 		call print
  2243 00001B93 E99BF8FFFF          <1> 		jmp nwcmd
  2244 00001B98 BB[6F150000]        <1> 	echovr:	mov ebx, variables
  2245 00001B9D BF06000000          <1> 		mov edi, 6
  2246 00001BA2 E83A000000          <1> 		call nxtvrech
  2247 00001BA7 E957000000          <1> 		jmp prntvr2
  2248 00001BAC B13D                <1> 	echvar:	mov cl, '='
  2249 00001BAE 43                  <1> 		inc ebx
  2250 00001BAF 8A03                <1> 		mov al, [ebx]
  2251 00001BB1 3C00                <1> 		cmp al, 0
  2252 00001BB3 742C                <1> 		je nxtvrech
  2253 00001BB5 3C3D                <1> 		cmp al, '='
  2254 00001BB7 7420                <1> 		je nxtvrechb1
  2255 00001BB9 BE[7A1B0000]        <1> 		mov esi, buftxt
  2256 00001BBE 01FE                <1> 		add esi, edi
  2257 00001BC0 E8ECF9FFFF          <1> 		call cndtest
  2258 00001BC5 3C02                <1> 		cmp al, 2
  2259 00001BC7 7436                <1> 		je prntvr
  2260 00001BC9 3C01                <1> 		cmp al, 1
  2261 00001BCB 7432                <1> 		je prntvr
  2262 00001BCD BE[7A1B0000]        <1> 		mov esi, buftxt
  2263 00001BD2 01FE                <1> 		add esi, edi
  2264 00001BD4 E908000000          <1> 		jmp nxtvrech
  2265                              <1> 	nxtvrechb1:
  2266 00001BD9 81EB02000000        <1> 		sub ebx, 2
  2267 00001BDF EBCB                <1> 		jmp echvar
  2268 00001BE1 8A03                <1> 	nxtvrech: mov al, [ebx]
  2269 00001BE3 3C05                <1> 		cmp al, 5
  2270 00001BE5 740F                <1> 		je nxtvrec2
  2271 00001BE7 43                  <1> 		inc ebx
  2272 00001BE8 81FB[6F1A0000]      <1> 		cmp ebx, varend
  2273 00001BEE 0F833FF8FFFF        <1> 		jae nwcmd
  2274 00001BF4 EBEB                <1> 		jmp nxtvrech
  2275 00001BF6 43                  <1> 	nxtvrec2: inc ebx
  2276 00001BF7 8A03                <1> 		mov al, [ebx]
  2277 00001BF9 3C04                <1> 		cmp al, 4
  2278 00001BFB 74AF                <1> 		je echvar
  2279 00001BFD EBE2                <1> 		jmp nxtvrech
  2280 00001BFF 43                  <1> 	prntvr: inc ebx
  2281 00001C00 89DE                <1> 		mov esi, ebx
  2282 00001C02 C3                  <1> 		ret
  2283 00001C03 E8D6F2FFFF          <1> 	prntvr2: call print
  2284 00001C08 BE[76520000]        <1> 		mov esi, line
  2285 00001C0D E8CCF2FFFF          <1> 		call print
  2286 00001C12 E91CF8FFFF          <1> 		jmp nwcmd
  2287                              <1> 		
  2288                              <1> 
  2289 00001C17 05042300            <1> db 5,4,"#",0
  2290                              <1> 	num:	
  2291 00001C1B E8B4FAFFFF          <1> 		call clearbuffer
  2292 00001C20 C605[D71E0000]00    <1> 		mov byte [decimal], 0
  2293 00001C27 C605[D81E0000]00    <1> 		mov byte [decimal2], 0
  2294 00001C2E BE[7A1B0000]        <1> 		mov esi, buftxt
  2295 00001C33 B800000000          <1> 		mov eax, 0
  2296 00001C38 B900000000          <1> 		mov ecx, 0
  2297 00001C3D BB00000000          <1> 		mov ebx, 0
  2298 00001C42 8A06                <1> 	num2:	mov al, [esi]
  2299 00001C44 3C2B                <1> 		cmp al, '+'
  2300 00001C46 741B                <1> 		je operatorfound
  2301 00001C48 3C2D                <1> 		cmp al, '-'
  2302 00001C4A 7417                <1> 		je operatorfound
  2303 00001C4C 3C2A                <1> 		cmp al, '*'
  2304 00001C4E 7413                <1> 		je operatorfound
  2305 00001C50 3C2F                <1> 		cmp al, '/'
  2306 00001C52 740F                <1> 		je operatorfound
  2307 00001C54 3C5E                <1> 		cmp al, '^'
  2308 00001C56 740B                <1> 		je operatorfound
  2309 00001C58 46                  <1> 		inc esi
  2310 00001C59 3C00                <1> 		cmp al, 0
  2311 00001C5B 0F84D2F7FFFF        <1> 		je near nwcmd
  2312 00001C61 EBDF                <1> 		jmp num2
  2313 00001C63 50                  <1> 	operatorfound: push eax
  2314 00001C64 B400                <1> 		mov ah, 0
  2315 00001C66 8826                <1> 		mov [esi], ah
  2316 00001C68 89F7                <1> 		mov edi, esi
  2317 00001C6A 46                  <1> 		inc esi
  2318 00001C6B 8A06                <1> 		mov al, [esi]
  2319 00001C6D 3C24                <1> 		cmp al, '$'
  2320 00001C6F 0F8481000000        <1> 		je near varnum1
  2321 00001C75 3C25                <1> 		cmp al, '%'
  2322 00001C77 0F8469000000        <1> 		je near resultnum1
  2323                              <1> 	varnum2: 
  2324 00001C7D 57                  <1> 		push edi
  2325 00001C7E E8C9000000          <1> 		call checkdecimal
  2326 00001C83 5F                  <1> 		pop edi
  2327 00001C84 E831FDFFFF          <1> 		call cnvrttxt
  2328                              <1> 	vrnm2:
  2329 00001C89 89CB                <1> 		mov ebx, ecx
  2330 00001C8B 53                  <1> 		push ebx
  2331 00001C8C E843FAFFFF          <1> 		call clearbuffer
  2332 00001C91 BE[7A1B0000]        <1> 		mov esi, buftxt
  2333 00001C96 89F7                <1> 		mov edi, esi
  2334 00001C98 46                  <1> 		inc esi
  2335 00001C99 8A06                <1> 		mov al, [esi]
  2336 00001C9B 3C24                <1> 		cmp al, '$'
  2337 00001C9D 0F8474000000        <1> 		je near varnum3
  2338 00001CA3 3C25                <1> 		cmp al, '%'
  2339 00001CA5 0F8443000000        <1> 		je near resultnum2
  2340                              <1> 	varnum4: 
  2341 00001CAB 57                  <1> 		push edi
  2342 00001CAC E887000000          <1> 		call checkdecimal2
  2343 00001CB1 5F                  <1> 		pop edi
  2344 00001CB2 E803FDFFFF          <1> 		call cnvrttxt
  2345                              <1> 	vrnm4:
  2346 00001CB7 5B                  <1> 		pop ebx
  2347 00001CB8 58                  <1> 		pop eax
  2348 00001CB9 3C2B                <1> 		cmp al, '+'
  2349 00001CBB 0F84B9000000        <1> 		je near plusnum
  2350 00001CC1 3C2D                <1> 		cmp al, '-'
  2351 00001CC3 0F84BD000000        <1> 		je near subnum
  2352 00001CC9 3C2A                <1> 		cmp al, '*'
  2353 00001CCB 0F84C1000000        <1> 		je near mulnum
  2354 00001CD1 3C2F                <1> 		cmp al, '/'
  2355 00001CD3 0F84CF000000        <1> 		je near divnum
  2356 00001CD9 3C5E                <1> 		cmp al, '^'
  2357 00001CDB 0F84ED000000        <1> 		je near expnum
  2358 00001CE1 E94DF7FFFF          <1> 		jmp nwcmd
  2359                              <1> 	resultnum1:
  2360 00001CE6 8B0D[D91E0000]      <1> 		mov ecx, [result]
  2361 00001CEC EB9B                <1> 		jmp vrnm2
  2362                              <1> 	resultnum2:
  2363 00001CEE 8B0D[D91E0000]      <1> 		mov ecx, [result]
  2364 00001CF4 EBC1                <1> 		jmp vrnm4
  2365 00001CF6 81EE[7A1B0000]      <1> 	varnum1: sub esi, buftxt
  2366 00001CFC 89F7                <1> 		mov edi, esi
  2367 00001CFE 81C6[7A1B0000]      <1> 		add esi, buftxt
  2368 00001D04 47                  <1> 		inc edi
  2369 00001D05 BB[6F150000]        <1> 		mov ebx, variables
  2370 00001D0A E8D2FEFFFF          <1> 		call nxtvrech
  2371 00001D0F 89F7                <1> 		mov edi, esi
  2372 00001D11 4F                  <1> 		dec edi
  2373 00001D12 E966FFFFFF          <1> 		jmp varnum2
  2374 00001D17 81EE[7A1B0000]      <1> 	varnum3: sub esi, buftxt
  2375 00001D1D 89F7                <1> 		mov edi, esi
  2376 00001D1F 81C6[7A1B0000]      <1> 		add esi, buftxt
  2377 00001D25 47                  <1> 		inc edi
  2378 00001D26 BB[6F150000]        <1> 		mov ebx, variables
  2379 00001D2B E8B1FEFFFF          <1> 		call nxtvrech
  2380 00001D30 89F7                <1> 		mov edi, esi
  2381 00001D32 4F                  <1> 		dec edi
  2382 00001D33 E973FFFFFF          <1> 		jmp varnum4
  2383                              <1> 	checkdecimal2:
  2384 00001D38 8A25[D71E0000]      <1> 		mov ah, [decimal]
  2385 00001D3E 8825[D81E0000]      <1> 		mov [decimal2], ah
  2386 00001D44 B400                <1> 		mov ah, 0
  2387 00001D46 8825[D71E0000]      <1> 		mov [decimal], ah
  2388                              <1> 	checkdecimal:
  2389 00001D4C 89F7                <1> 		mov edi, esi
  2390                              <1> 	chkdec1:
  2391 00001D4E 8A07                <1> 		mov al, [edi]
  2392 00001D50 3C2E                <1> 		cmp al, '.'
  2393 00001D52 0F840B000000        <1> 		je near fnddec
  2394 00001D58 3C00                <1> 		cmp al, 0
  2395 00001D5A 0F8419000000        <1> 		je near nodecimal
  2396 00001D60 47                  <1> 		inc edi
  2397 00001D61 EBEB                <1> 		jmp chkdec1
  2398                              <1> 	fnddec:
  2399 00001D63 8A4701              <1> 		mov al, [edi + 1]
  2400 00001D66 8807                <1> 		mov [edi], al
  2401 00001D68 3C00                <1> 		cmp al, 0
  2402 00001D6A 0F8409000000        <1> 		je near nodecimal
  2403 00001D70 FE05[D71E0000]      <1> 		inc byte [decimal]
  2404 00001D76 47                  <1> 		inc edi
  2405 00001D77 EBEA                <1> 		jmp fnddec
  2406                              <1> 	nodecimal:
  2407 00001D79 C3                  <1> 		ret
  2408                              <1> 	plusnum:
  2409 00001D7A E816010000          <1> 		call decaddfix
  2410 00001D7F 01D9                <1> 		add ecx, ebx
  2411 00001D81 E991000000          <1> 		jmp retnum
  2412                              <1> 	subnum:
  2413 00001D86 E80A010000          <1> 		call decaddfix
  2414 00001D8B 29D9                <1> 		sub ecx, ebx
  2415 00001D8D E985000000          <1> 		jmp retnum
  2416                              <1> 	mulnum:
  2417 00001D92 A0[D81E0000]        <1> 		mov al, [decimal2]
  2418 00001D97 0005[D71E0000]      <1> 		add [decimal], al
  2419 00001D9D 89C8                <1> 		mov eax, ecx
  2420 00001D9F F7E3                <1> 		mul ebx
  2421 00001DA1 89C1                <1> 		mov ecx, eax
  2422 00001DA3 E96F000000          <1> 		jmp retnum
  2423                              <1> 	divnum:
  2424 00001DA8 E8E8000000          <1> 		call decaddfix
  2425 00001DAD B000                <1> 		mov al, 0
  2426 00001DAF A2[D71E0000]        <1> 		mov [decimal], al
  2427 00001DB4 6689C8              <1> 		mov ax, cx
  2428 00001DB7 80FB00              <1> 		cmp bl, 0
  2429 00001DBA 0F8457000000        <1> 		je near retnum
  2430 00001DC0 F6F3                <1> 		div bl
  2431 00001DC2 B900000000          <1> 		mov ecx, 0
  2432 00001DC7 88C1                <1> 		mov cl, al
  2433 00001DC9 E949000000          <1> 		jmp retnum
  2434                              <1> 	expnum:
  2435 00001DCE 8A15[D71E0000]      <1> 		mov dl, [decimal]
  2436 00001DD4 8815[D81E0000]      <1> 		mov [decimal2], dl
  2437 00001DDA BA00000000          <1> 		mov edx, 0
  2438 00001DDF 89C8                <1> 		mov eax, ecx
  2439 00001DE1 89D9                <1> 		mov ecx, ebx
  2440 00001DE3 89C3                <1> 		mov ebx, eax
  2441 00001DE5 81F900000000        <1> 		cmp ecx, 0
  2442 00001DEB 7425                <1> 		je noexpnum
  2443 00001DED 49                  <1> 		dec ecx
  2444 00001DEE 81F900000000        <1> 		cmp ecx, 0
  2445 00001DF4 7415                <1> 		je noexpnumlp
  2446 00001DF6 F7E3                <1> 	expnumlp: mul ebx
  2447 00001DF8 8A15[D81E0000]      <1> 		mov dl, [decimal2]
  2448 00001DFE 0015[D71E0000]      <1> 		add [decimal], dl
  2449 00001E04 BA00000000          <1> 		mov edx, 0
  2450 00001E09 E2EB                <1> 		loop expnumlp
  2451                              <1> 	noexpnumlp:
  2452 00001E0B 89C1                <1> 		mov ecx, eax
  2453 00001E0D E905000000          <1> 		jmp retnum
  2454                              <1> 	noexpnum:
  2455 00001E12 B901000000          <1> 		mov ecx, 1
  2456                              <1> 	retnum: 
  2457 00001E17 BE[8E1C0000]        <1> 		mov esi, numbuf
  2458 00001E1C 890D[D91E0000]      <1> 		mov [result], ecx
  2459 00001E22 E8C2F8FFFF          <1> 		call convert
  2460 00001E27 BE[8E1C0000]        <1> 		mov esi, numbuf
  2461 00001E2C 8A25[D71E0000]      <1> 		mov ah, [decimal]
  2462 00001E32 80FC00              <1> 		cmp ah, 0
  2463 00001E35 0F8425000000        <1> 		je near noputdecimal
  2464                              <1> 	putdecimal:
  2465 00001E3B 4E                  <1> 		dec esi
  2466 00001E3C FECC                <1> 		dec ah
  2467 00001E3E 80FC00              <1> 		cmp ah, 0
  2468 00001E41 0F87F4FFFFFF        <1> 		ja near putdecimal
  2469 00001E47 4E                  <1> 		dec esi
  2470 00001E48 8A06                <1> 		mov al, [esi]
  2471 00001E4A C6062E              <1> 		mov byte [esi], '.'
  2472                              <1> 	decputloop:
  2473 00001E4D 4E                  <1> 		dec esi
  2474 00001E4E 8A26                <1> 		mov ah, [esi]
  2475 00001E50 8806                <1> 		mov [esi], al
  2476 00001E52 88E0                <1> 		mov al, ah
  2477 00001E54 81FE[7A1C0000]      <1> 		cmp esi, buf2
  2478 00001E5A 0F87EDFFFFFF        <1> 		ja near decputloop
  2479                              <1> 	noputdecimal:
  2480 00001E60 BE[7A1C0000]        <1> 		mov esi, buf2
  2481 00001E65 E809000000          <1> 		call chkadd
  2482 00001E6A E9C4F5FFFF          <1> 		jmp nwcmd
  2483 00001E6F 00000000            <1> edxnumbuf dw 0,0
  2484 00001E73 8A06                <1> 	chkadd: mov al, [esi]
  2485 00001E75 3C30                <1> 		cmp al, '0'
  2486 00001E77 750C                <1> 		jne dnadd
  2487 00001E79 46                  <1> 		inc esi
  2488 00001E7A 81FE[8E1C0000]      <1> 		cmp esi, numbuf
  2489 00001E80 7402                <1> 		je dnaddm1
  2490 00001E82 EBEF                <1> 		jmp chkadd
  2491 00001E84 4E                  <1> 	dnaddm1: dec esi
  2492 00001E85 E854F0FFFF          <1> 	dnadd:	call print
  2493 00001E8A BE[76520000]        <1> 		mov esi, line
  2494 00001E8F E84AF0FFFF          <1> 		call print
  2495 00001E94 C3                  <1> 		ret
  2496                              <1> 		
  2497                              <1> 	decaddfix:
  2498 00001E95 A0[D81E0000]        <1> 		mov al, [decimal2]
  2499 00001E9A 8A25[D71E0000]      <1> 		mov ah, [decimal]
  2500 00001EA0 38E0                <1> 		cmp al, ah
  2501 00001EA2 7432                <1> 		je gooddecadd
  2502 00001EA4 38E0                <1> 		cmp al, ah
  2503 00001EA6 721A                <1> 		jb lowdecadd
  2504                              <1> 	highdecadd:
  2505 00001EA8 FEC4                <1> 		inc ah
  2506 00001EAA 89CA                <1> 		mov edx, ecx
  2507 00001EAC C1E103              <1> 		shl ecx, 3
  2508 00001EAF 01D1                <1> 		add ecx, edx
  2509 00001EB1 01D1                <1> 		add ecx, edx
  2510 00001EB3 38E0                <1> 		cmp al, ah
  2511 00001EB5 77F1                <1> 		ja highdecadd
  2512 00001EB7 8825[D71E0000]      <1> 		mov [decimal], ah
  2513 00001EBD E914000000          <1> 		jmp gooddecadd
  2514                              <1> 	lowdecadd:
  2515 00001EC2 FEC0                <1> 		inc al
  2516 00001EC4 89DA                <1> 		mov edx, ebx
  2517 00001EC6 C1E303              <1> 		shl ebx, 3
  2518 00001EC9 01D3                <1> 		add ebx, edx
  2519 00001ECB 01D3                <1> 		add ebx, edx
  2520 00001ECD 38E0                <1> 		cmp al, ah
  2521 00001ECF 72F1                <1> 		jb lowdecadd
  2522 00001ED1 A2[D71E0000]        <1> 		mov [decimal], al
  2523                              <1> 	gooddecadd:
  2524 00001ED6 C3                  <1> 		ret
  2525                              <1> 		
  2526 00001ED7 00                  <1> decimal db 0
  2527 00001ED8 00                  <1> decimal2 db 0
  2528 00001ED9 00000000            <1> result db 0,0,0,0
  2529                              <1> 	
  2530 00001EDD 05042500            <1> db 5,4,"%",0
  2531 00001EE1 E8EEF7FFFF          <1> 	ans:	call clearbuffer
  2532 00001EE6 8B0D[D91E0000]      <1> 		mov ecx, [result]
  2533 00001EEC BE[7A1C0000]        <1> 		mov esi, buf2
  2534 00001EF1 E8F3F7FFFF          <1> 		call convert
  2535 00001EF6 BE[7A1C0000]        <1> 		mov esi, buf2
  2536 00001EFB E873FFFFFF          <1> 		call chkadd
  2537 00001F00 E92EF5FFFF          <1> 		jmp nwcmd
  2538                              <1> 
  2539 00001F05 05042400            <1> db 5,4,"$",0
  2540 00001F09 BE[7A1B0000]        <1> var: mov esi, buftxt
  2541 00001F0E BB[6F150000]        <1> 	mov ebx, variables
  2542 00001F13 8A06                <1> lkeq:	mov al, [esi]
  2543 00001F15 3C3D                <1> 	cmp al, '='
  2544 00001F17 741F                <1> 	je eqfnd	;is there an '=' sign?
  2545 00001F19 3C00                <1> 	cmp al, 0
  2546 00001F1B 7403                <1> 	je echovars
  2547 00001F1D 46                  <1> 	inc esi
  2548 00001F1E EBF3                <1> 	jmp lkeq
  2549 00001F20 BE[6F150000]        <1> echovars: mov esi, variables
  2550 00001F25 BB[6F1A0000]        <1> 	mov ebx, varend
  2551 00001F2A B105                <1> 	mov cl, 5
  2552 00001F2C B504                <1> 	mov ch, 4
  2553 00001F2E E840F7FFFF          <1> 	call array
  2554 00001F33 E9FBF4FFFF          <1> 	jmp nwcmd
  2555 00001F38 46                  <1> eqfnd:	inc esi
  2556 00001F39 8A06                <1> 	mov al, [esi]
  2557 00001F3B 3C00                <1> 	cmp al, 0
  2558 00001F3D 740F                <1> 	je readvar
  2559 00001F3F BE[7A1B0000]        <1> 	mov esi, buftxt
  2560 00001F44 BB[6F150000]        <1> 	mov ebx, variables
  2561 00001F49 E91E000000          <1> 	jmp seek
  2562                              <1> readvar:
  2563 00001F4E B00D                <1> 	mov al, 13
  2564 00001F50 66BB0700            <1> 	mov bx, 7
  2565 00001F54 C605[2D0F0000]00    <1> 	mov byte [commandedit], 0
  2566 00001F5B E8D6EFFFFF          <1> 	call int305
  2567 00001F60 BE[76520000]        <1> 	mov esi, line
  2568 00001F65 E874EFFFFF          <1> 	call print
  2569 00001F6A EB9D                <1> 	jmp var
  2570 00001F6C 668B03              <1> seek:	mov ax, [ebx]
  2571 00001F6F B105                <1> 	mov cl, 5
  2572 00001F71 B504                <1> 	mov ch, 4
  2573 00001F73 663D0000            <1> 	cmp ax, 0
  2574 00001F77 0F8459000000        <1> 	je near save
  2575 00001F7D 6639C8              <1> 	cmp ax, cx
  2576 00001F80 7403                <1> 	je skfnd
  2577 00001F82 43                  <1> 	inc ebx
  2578 00001F83 EBE7                <1> 	jmp seek
  2579 00001F85 BE[7A1B0000]        <1> skfnd:	mov esi, buftxt
  2580 00001F8A 46                  <1> 	inc esi
  2581 00001F8B 81C302000000        <1> 	add ebx, 2
  2582 00001F91 89DF                <1> 	mov edi, ebx
  2583 00001F93 B13D                <1> 	mov cl, '='
  2584 00001F95 E817F6FFFF          <1> 	call cndtest
  2585 00001F9A 3C01                <1> 	cmp al, 1	
  2586 00001F9C 7417                <1> 	je varfnd
  2587 00001F9E 89FB                <1> 	mov ebx, edi
  2588 00001FA0 BE[7A1B0000]        <1> 	mov esi, buftxt
  2589 00001FA5 668B03              <1> 	mov ax, [ebx]
  2590 00001FA8 663D0000            <1> 	cmp ax, 0
  2591 00001FAC 0F8424000000        <1> 	je near save
  2592 00001FB2 43                  <1> 	inc ebx
  2593 00001FB3 EBB7                <1> 	jmp seek
  2594 00001FB5 8A03                <1> varfnd:	mov al, [ebx]
  2595 00001FB7 3C04                <1> 	cmp al, 4
  2596 00001FB9 7404                <1> 	je save2
  2597 00001FBB 4B                  <1> 	dec ebx
  2598 00001FBC 4E                  <1> 	dec esi
  2599 00001FBD EBF6                <1> 	jmp varfnd
  2600 00001FBF 4B                  <1> save2:	dec ebx
  2601 00001FC0 4E                  <1> 	dec esi
  2602 00001FC1 8A03                <1> 	mov al, [ebx]
  2603 00001FC3 3C05                <1> 	cmp al, 5
  2604 00001FC5 7402                <1> 	je remove
  2605 00001FC7 EBEC                <1> 	jmp varfnd
  2606 00001FC9 8A03                <1> remove: mov al, [ebx]
  2607 00001FCB 3C00                <1> 	cmp al, 0
  2608 00001FCD 749D                <1> 	je seek
  2609 00001FCF B000                <1> 	mov al, 0
  2610 00001FD1 8803                <1> 	mov [ebx], al
  2611 00001FD3 43                  <1> 	inc ebx
  2612 00001FD4 EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2613 00001FD6 BE[7A1B0000]        <1> save:	mov esi, buftxt
  2614 00001FDB 43                  <1> 	inc ebx
  2615 00001FDC B005                <1> 	mov al, 5
  2616 00001FDE B404                <1> 	mov ah, 4
  2617 00001FE0 668903              <1> 	mov [ebx], ax
  2618 00001FE3 43                  <1> 	inc ebx
  2619 00001FE4 43                  <1> svhere:	inc ebx
  2620 00001FE5 46                  <1> 	inc esi
  2621 00001FE6 8A06                <1> 	mov al, [esi]
  2622 00001FE8 3C00                <1> 	cmp al, 0
  2623 00001FEA 0F8442000000        <1> 	je near svdone
  2624 00001FF0 3C25                <1> 	cmp al, '%'
  2625 00001FF2 7404                <1> 	je ans2
  2626 00001FF4 8803                <1> 	mov [ebx], al	
  2627 00001FF6 EBEC                <1> 	jmp svhere
  2628 00001FF8 56                  <1> ans2:	push esi
  2629 00001FF9 BE[7A1C0000]        <1> 	mov esi, buf2
  2630 00001FFE E823000000          <1> 	call ansfnd
  2631 00002003 E803000000          <1> 	call anscp
  2632 00002008 5E                  <1> 	pop esi
  2633 00002009 EBD9                <1> 	jmp svhere
  2634 0000200B 8A06                <1> anscp:	mov al, [esi]
  2635 0000200D 8803                <1> 	mov [ebx], al
  2636 0000200F 81FE[8E1C0000]      <1> 	cmp esi, numbuf
  2637 00002015 74CD                <1> 	je svhere
  2638 00002017 3C00                <1> 	cmp al, 0
  2639 00002019 74C9                <1> 	je svhere
  2640 0000201B 43                  <1> 	inc ebx
  2641 0000201C 46                  <1> 	inc esi
  2642 0000201D EBEC                <1> 	jmp anscp
  2643 0000201F 5E                  <1> ansnf:	pop esi
  2644 00002020 8A06                <1> 	mov al, [esi]
  2645 00002022 8803                <1> 	mov [ebx], al
  2646 00002024 EBBE                <1> 	jmp svhere
  2647 00002026 46                  <1> ansfnd:	inc esi
  2648 00002027 8A06                <1> 	mov al, [esi]
  2649 00002029 3C00                <1> 	cmp al, 0
  2650 0000202B 74F2                <1> 	je ansnf
  2651 0000202D 3C30                <1> 	cmp al, '0'
  2652 0000202F 74F5                <1> 	je ansfnd
  2653 00002031 C3                  <1> 	ret
  2654 00002032 B000                <1> svdone:	mov al, 0
  2655 00002034 8803                <1> 	mov [ebx], al
  2656 00002036 E9F8F3FFFF          <1> 	jmp nwcmd
  2657                              <1> 	
  2658 0000203B 05046C6F676F757400  <1> 	db 5,4,"logout",0
  2659                              <1> logout:
  2660 00002044 E9D8F2FFFF          <1> 	jmp os
  2661                              <1> 	
  2662 00002049 05047265626F6F7400  <1> 	db 5,4,"reboot",0
  2663                              <1> rebootcomp:
  2664 00002052 E9ECE1FFFF          <1> 	jmp coldboot
  2665                              <1> 
  2666 00002057 050473687574646F77- <1> 	db 5,4,"shutdown",0
  2667 00002060 6E00                <1>
  2668                              <1> shutdowncomp:
  2669 00002062 E9B2E1FFFF          <1> 	jmp shutdown
  2670                              <1> 	
  2671                              <1> 	
  2672 00002067 05042E2F00          <1> 	db 5,4,"./",0
  2673                              <1> rundiskprog:
  2674 0000206C BF[7A1B0000]        <1> 	mov edi, buftxt
  2675 00002071 81C702000000        <1> 	add edi, 2
  2676 00002077 BE00004000          <1> 	mov esi, 0x400000
  2677 0000207C E8F7290000          <1> 	call loadfile
  2678 00002081 81FA94010000        <1> 	cmp edx, 404
  2679 00002087 7414                <1> 	je noprogfound
  2680 00002089 BB00004000          <1> 	mov ebx, 0x400000
  2681 0000208E 66813B4558          <1> 	cmp word [ebx], "EX"
  2682 00002093 7531                <1> 	jne progbatchfound
  2683 00002095 81C302000000        <1> 	add ebx, 2
  2684 0000209B FFE3                <1> 	jmp ebx
  2685                              <1> noprogfound:
  2686 0000209D BE[3D520000]        <1> 	mov esi, notfound1
  2687 000020A2 E837EEFFFF          <1> 	call print
  2688 000020A7 BE[7A1B0000]        <1> 	mov esi, buftxt
  2689 000020AC 81C602000000        <1> 	add esi, 2
  2690 000020B2 E827EEFFFF          <1> 	call print
  2691 000020B7 BE[47520000]        <1> 	mov esi, notfound2
  2692 000020BC E81DEEFFFF          <1> 	call print
  2693 000020C1 E96DF3FFFF          <1> 	jmp nwcmd
  2694                              <1> progbatchfound:
  2695 000020C6 BF00004000          <1> 		mov edi, 0x400000
  2696 000020CB C605[69130000]01    <1> 		mov byte [BATCHISON], 1
  2697                              <1> 	batchrunloop:
  2698 000020D2 E839F3FFFF          <1> 		call buftxtclear
  2699 000020D7 BE[7A1B0000]        <1> 		mov esi, buftxt
  2700                              <1> 	batchrunloop2:
  2701 000020DC B10D                <1> 		mov cl, 13
  2702 000020DE B50A                <1> 		mov ch, 10
  2703 000020E0 66390F              <1> 		cmp [edi], cx
  2704 000020E3 0F841E000000        <1> 		je near nxtbatchrunline
  2705 000020E9 66C1C108            <1> 		rol cx, 8
  2706 000020ED 66390F              <1> 		cmp [edi], cx
  2707 000020F0 0F8411000000        <1> 		je near nxtbatchrunline
  2708 000020F6 803F00              <1> 		cmp byte [edi], 0
  2709 000020F9 0F8408000000        <1> 		je near nxtbatchrunline
  2710 000020FF 8A07                <1> 		mov al, [edi]
  2711 00002101 8806                <1> 		mov [esi], al
  2712 00002103 46                  <1> 		inc esi
  2713 00002104 47                  <1> 		inc edi
  2714 00002105 EBD5                <1> 		jmp batchrunloop2
  2715                              <1> 	nxtbatchrunline:
  2716 00002107 81C702000000        <1> 		add edi, 2
  2717 0000210D 893D[6C210000]      <1> 		mov [batchedi], edi
  2718 00002113 C60600              <1> 		mov byte [esi], 0
  2719 00002116 BE[7A1B0000]        <1> 		mov esi, buftxt
  2720 0000211B 803E00              <1> 		cmp byte [esi], 0
  2721 0000211E 0F843C000000        <1> 		je near nobatchfoundrun
  2722 00002124 BB00000000          <1> 		mov ebx, 0
  2723 00002129 8A1D[00130000]      <1> 		mov bl, [IFON]
  2724 0000212F 80FB01              <1> 		cmp bl, 1
  2725 00002132 0F8338000000        <1> 		jae near iftestbatch
  2726                              <1> 	doneiftest:
  2727 00002138 803D[33220000]00    <1> 		cmp byte [runnextline], 0
  2728 0000213F 0F8405000000        <1> 		je near noruniftest
  2729 00002145 E8B4F3FFFF          <1> 		call progtest
  2730                              <1> 	noruniftest:
  2731 0000214A C605[33220000]01    <1> 		mov byte [runnextline], 1
  2732 00002151 8B3D[6C210000]      <1> 		mov edi, [batchedi]
  2733 00002157 803F00              <1> 		cmp byte [edi], 0
  2734 0000215A 0F8572FFFFFF        <1> 		jne near batchrunloop
  2735                              <1> 	nobatchfoundrun:
  2736 00002160 C605[69130000]00    <1> 		mov byte [BATCHISON], 0
  2737 00002167 E9C7F2FFFF          <1> 		jmp nwcmd
  2738                              <1> 	
  2739 0000216C 00000000            <1> batchedi dd 0	
  2740                              <1> 	
  2741                              <1> 	iftestbatch:
  2742 00002170 BE[01130000]        <1> 		mov esi, IFTRUE
  2743 00002175 01DE                <1> 		add esi, ebx
  2744 00002177 803E00              <1> 		cmp byte [esi], 0
  2745 0000217A 0F85B8FFFFFF        <1> 		jne near doneiftest
  2746 00002180 881D[34220000]      <1> 		mov [iffalsebuf], bl
  2747 00002186 803D[6A130000]01    <1> 		cmp byte [LOOPON], 1
  2748 0000218D 750B                <1> 		jne fifindbatch
  2749 0000218F 8B3D[6B130000]      <1> 		mov edi, [LOOPPOS]
  2750 00002195 E938FFFFFF          <1> 		jmp batchrunloop
  2751                              <1> 	fifindbatch:
  2752 0000219A 66B96966            <1> 		mov cx, "if"
  2753 0000219E 66B86669            <1> 		mov ax, "fi"
  2754 000021A2 663907              <1> 		cmp [edi], ax
  2755 000021A5 0F841A000000        <1> 		je near fifoundbatch
  2756 000021AB 66390F              <1> 		cmp [edi], cx
  2757 000021AE 0F8462000000        <1> 		je near iffoundbatch
  2758 000021B4 803F00              <1> 		cmp byte [edi], 0
  2759 000021B7 0F8408000000        <1> 		je near fifoundbatch
  2760 000021BD 81C702000000        <1> 		add edi, 2
  2761 000021C3 EBD5                <1> 		jmp fifindbatch
  2762                              <1> 	fifoundbatch:
  2763 000021C5 81C702000000        <1> 		add edi, 2
  2764 000021CB B00D                <1> 		mov al, 13
  2765 000021CD B40A                <1> 		mov ah, 10
  2766 000021CF 663907              <1> 		cmp [edi], ax
  2767 000021D2 7414                <1> 		je goodfibatch
  2768 000021D4 66C1C008            <1> 		rol ax, 8
  2769 000021D8 663907              <1> 		cmp [edi], ax
  2770 000021DB 740B                <1> 		je goodfibatch
  2771 000021DD 803F00              <1> 		cmp byte [edi], 0
  2772 000021E0 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  2773 000021E6 EBB2                <1> 		jmp fifindbatch
  2774                              <1> 	goodfibatch:
  2775 000021E8 B001                <1> 		mov al, 1
  2776 000021EA 2805[00130000]      <1> 		sub [IFON], al 
  2777 000021F0 A0[00130000]        <1> 		mov al, [IFON]
  2778 000021F5 8A1D[34220000]      <1> 		mov bl, [iffalsebuf]
  2779 000021FB 38D8                <1> 		cmp al, bl
  2780 000021FD 779B                <1> 		ja fifindbatch
  2781 000021FF BE[7A1B0000]        <1> 		mov esi, buftxt
  2782 00002204 81EF02000000        <1> 		sub edi, 2
  2783 0000220A C605[33220000]00    <1> 		mov byte [runnextline], 0
  2784 00002211 E9BCFEFFFF          <1> 		jmp batchrunloop
  2785                              <1> 	iffoundbatch:
  2786 00002216 B020                <1> 		mov al, ' '
  2787 00002218 81C702000000        <1> 		add edi, 2
  2788 0000221E 3807                <1> 		cmp [edi], al
  2789 00002220 0F8574FFFFFF        <1> 		jne near fifindbatch
  2790 00002226 B001                <1> 		mov al, 1
  2791 00002228 0005[00130000]      <1> 		add [IFON], al
  2792 0000222E E967FFFFFF          <1> 		jmp fifindbatch
  2793                              <1> 		
  2794                              <1> 		
  2795 00002233 01                  <1> runnextline db 1
  2796 00002234 00                  <1> iffalsebuf db 0
  2797                              <1> 
  2798 00002235 E9F9F1FFFF          <1> notbatch: jmp nwcmd
  2799                              <1> 
  2800 0000223A 05047768696C6500    <1> 	db 5,4,"while",0
  2801 00002242 B000                <1> whilecmd:  mov al, 0
  2802 00002244 3805[69130000]      <1> 	cmp [BATCHISON], al
  2803 0000224A 0F84E5FFFFFF        <1> 	je near notbatch
  2804 00002250 8B35[65130000]      <1> 	MOV esi, [BATCHPOS]
  2805 00002256 4E                  <1> whilefnd: dec esi
  2806 00002257 8A06                <1> 	mov al, [esi]
  2807 00002259 3C0A                <1> 	cmp al, 10
  2808 0000225B 0F8412000000        <1> 	je near whilefnd2
  2809 00002261 3C0D                <1> 	cmp al, 13
  2810 00002263 0F840A000000        <1> 	je near whilefnd2
  2811 00002269 3C00                <1> 	cmp al, 0
  2812 0000226B 0F8402000000        <1> 	je near whilefnd2
  2813 00002271 EBE3                <1> 	jmp whilefnd
  2814                              <1> whilefnd2:
  2815 00002273 8935[6B130000]      <1> 	mov [LOOPPOS], esi
  2816 00002279 C605[6A130000]01    <1> 	mov BYTE [LOOPON], 1
  2817 00002280 0005[00130000]      <1> 	add [IFON], al
  2818 00002286 BE[7A1B0000]        <1> 	mov esi, buftxt
  2819 0000228B BB[7A1B0000]        <1> 	mov ebx, buftxt
  2820 00002290 81C306000000        <1> 	add ebx, 6
  2821 00002296 E923000000          <1> 	jmp chkeqsn
  2822                              <1> 
  2823                              <1> 
  2824 0000229B 0504696600          <1> 	db 5,4,"if",0
  2825 000022A0 B000                <1> ifcmd:	mov al, 0
  2826 000022A2 3805[69130000]      <1> 	cmp [BATCHISON], al
  2827 000022A8 0F8487FFFFFF        <1> 	je near notbatch
  2828 000022AE BE[7A1B0000]        <1> 	mov esi, buftxt
  2829 000022B3 BB[7A1B0000]        <1> 	mov ebx, buftxt
  2830 000022B8 81C303000000        <1> 	add ebx, 3
  2831 000022BE 8A06                <1> chkeqsn: mov al, [esi]
  2832 000022C0 3C00                <1> 	cmp al, 0
  2833 000022C2 0F846DFFFFFF        <1> 	je near notbatch
  2834 000022C8 3C3D                <1> 	cmp al, '='
  2835 000022CA 0F8403000000        <1> 	je near chkeqdn
  2836 000022D0 46                  <1> 	inc esi
  2837 000022D1 EBEB                <1> 	jmp chkeqsn
  2838 000022D3 B000                <1> chkeqdn: mov al, 0 
  2839 000022D5 8806                <1> 	mov [esi], al
  2840 000022D7 46                  <1> 	inc esi
  2841 000022D8 8A06                <1> 	mov al, [esi]
  2842 000022DA 3C24                <1> 	cmp al, '$'
  2843 000022DC 0F8462000000        <1> 	je near ifvar1
  2844 000022E2 8A03                <1> ifvar2: mov al, [ebx]
  2845 000022E4 3C24                <1> 	cmp al, '$'
  2846 000022E6 0F847B000000        <1> 	je near ifvar3
  2847 000022EC E886F2FFFF          <1> ifvar4:	call tester
  2848 000022F1 3C01                <1> 	cmp al, 1
  2849 000022F3 0F8405000000        <1> 	je near trueif
  2850 000022F9 E923000000          <1> 	jmp falseif
  2851 000022FE B800000000          <1> trueif:	mov eax, 0
  2852 00002303 A0[00130000]        <1> 	mov al, [IFON]
  2853 00002308 FEC0                <1> 	inc al
  2854 0000230A A2[00130000]        <1> 	mov [IFON], al
  2855 0000230F B400                <1> 	mov ah, 0
  2856 00002311 BE[01130000]        <1> 	mov esi, IFTRUE
  2857 00002316 01C6                <1> 	add esi, eax
  2858 00002318 B401                <1> 	mov ah, 1
  2859 0000231A 8826                <1> 	mov [esi], ah
  2860 0000231C E912F1FFFF          <1> 	jmp nwcmd
  2861 00002321 B800000000          <1> falseif: mov eax, 0
  2862 00002326 A0[00130000]        <1> 	mov al, [IFON]
  2863 0000232B FEC0                <1> 	inc al
  2864 0000232D A2[00130000]        <1> 	mov [IFON], al
  2865 00002332 B400                <1> 	mov ah, 0
  2866 00002334 BE[01130000]        <1> 	mov esi, IFTRUE
  2867 00002339 01C6                <1> 	add esi, eax
  2868 0000233B B400                <1> 	mov ah, 0
  2869 0000233D 8826                <1> 	mov [esi], ah
  2870 0000233F E9EFF0FFFF          <1> 	jmp nwcmd
  2871 00002344 89F7                <1> ifvar1: mov edi, esi
  2872 00002346 81EF[7A1B0000]      <1> 	sub edi, buftxt
  2873 0000234C 47                  <1> 	inc edi
  2874 0000234D BB[6F150000]        <1> 	mov ebx, variables
  2875 00002352 E88AF8FFFF          <1> 	call nxtvrech
  2876 00002357 BB[7A1B0000]        <1> 	mov ebx, buftxt
  2877 0000235C 81C303000000        <1> 	add ebx, 3
  2878 00002362 E97BFFFFFF          <1> 	jmp ifvar2
  2879 00002367 8935[87230000]      <1> ifvar3: mov [esiif], esi
  2880 0000236D BF04000000          <1> 	mov edi, 4
  2881 00002372 BB[6F150000]        <1> 	mov ebx, variables
  2882 00002377 E865F8FFFF          <1> 	call nxtvrech
  2883 0000237C 8B35[87230000]      <1> 	mov esi, [esiif]
  2884 00002382 E965FFFFFF          <1> 	jmp ifvar4
  2885                              <1> 
  2886 00002387 00000000            <1> esiif dd 0
  2887                              <1> 	
  2888 0000238B 0504656C736500      <1> 	db 5,4,"else",0
  2889 00002392 B800000000          <1> elsecmd:	mov eax, 0
  2890 00002397 A0[00130000]        <1> 	mov al, [IFON]
  2891 0000239C BE[01130000]        <1> 	mov esi, IFTRUE
  2892 000023A1 01C6                <1> 	add esi, eax
  2893 000023A3 8A06                <1> 	mov al, [esi]
  2894 000023A5 3C00                <1> 	cmp al, 0		
  2895 000023A7 7409                <1> 	je else1
  2896 000023A9 3C01                <1> 	cmp al, 1
  2897 000023AB 740E                <1> 	je else2
  2898 000023AD E981F0FFFF          <1> 	jmp nwcmd
  2899 000023B2 B001                <1> else1:  mov al, 1
  2900 000023B4 8806                <1> 	mov [esi], al
  2901 000023B6 E978F0FFFF          <1> 	jmp nwcmd
  2902 000023BB B000                <1> else2:	mov al, 0
  2903 000023BD 8806                <1> 	mov [esi], al
  2904 000023BF E96FF0FFFF          <1> 	jmp nwcmd
  2905                              <1> 
  2906 000023C4 05046C6F6F7000      <1> 	db 5,4,"loop",0
  2907 000023CB 3805[6A130000]      <1> 	cmp [LOOPON], al
  2908 000023D1 0F8405000000        <1> 	je near filoop
  2909 000023D7 E957F0FFFF          <1> 	jmp nwcmd
  2910 000023DC 8B35[6B130000]      <1> filoop: mov esi, [LOOPPOS]
  2911 000023E2 8935[65130000]      <1> 	mov [BATCHPOS], esi
  2912 000023E8 E946F0FFFF          <1> 	jmp nwcmd
  2913                              <1> 	
  2914                              <1> 
  2915 000023ED 0504666900          <1> 	db 5,4,"fi",0
  2916 000023F2 B000                <1> 	mov al, 0
  2917 000023F4 3805[69130000]      <1> 	cmp [BATCHISON], al
  2918 000023FA 0F8435FEFFFF        <1> 	je near notbatch
  2919 00002400 B001                <1> fi:	mov al, 1
  2920 00002402 2805[00130000]      <1> 	sub [IFON],al
  2921 00002408 E926F0FFFF          <1> 	jmp nwcmd
  2922                              <1> 
  2923 0000240D 050473746F7000      <1> 	db 5,4,"stop",0
  2924 00002414 B000                <1> stop:	mov al, 0
  2925 00002416 A2[69130000]        <1> 	mov [BATCHISON], al
  2926 0000241B A2[00130000]        <1> 	mov [IFON], al
  2927 00002420 A2[01130000]        <1> 	mov [IFTRUE], al
  2928 00002425 A2[6A130000]        <1> 	mov [LOOPON], al
  2929 0000242A E904F0FFFF          <1> 	jmp nwcmd
  2930                                      %include 'source/programs.asm'
  2931                              <1> ;db 5,4,"internet",0
  2932                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  2933                              <1> 							;;^^used to^^, now tests int 30h functions		
  2934 0000242F B403                <1> 		mov ah, 3
  2935 00002431 CD30                <1> 		int 30h
  2936 00002433 B401                <1> 		mov ah, 1
  2937                              <1> 		;mov esi, datmsg
  2938 00002435 66BB0700            <1> 		mov bx, 7
  2939 00002439 B000                <1> 		mov al, 0
  2940 0000243B CD30                <1> 		int 30h
  2941                              <1> 	    ;jmp packettest
  2942 0000243D E9F1EFFFFF          <1> 		jmp nwcmd
  2943                              <1> ;datmsg: db "Internet has not been implemented yet.",10,13,0
  2944                              <1> 	
  2945 00002442 050474687265616473- <1> db 5,4,"threads",0
  2946 0000244B 00                  <1>
  2947 0000244C 90                  <1> 	nop
  2948 0000244D 90                  <1> 	nop
  2949 0000244E E9DB270000          <1> 	jmp threadstarttest
  2950 00002453 E9DBEFFFFF          <1> 	jmp nwcmd
  2951                              <1> 	
  2952 00002458 0504636861726D6170- <1> db 5,4,"charmap",0
  2953 00002461 00                  <1>
  2954 00002462 B000                <1> 	mov al, 0
  2955 00002464 66BB0700            <1> 	mov bx, 7
  2956                              <1> charmapcopy:
  2957 00002468 FEC0                <1> 	inc al
  2958 0000246A 3C08                <1> 	cmp al, 8
  2959 0000246C 74FA                <1> 	je charmapcopy
  2960 0000246E 3C0A                <1> 	cmp al, 10
  2961 00002470 74F6                <1> 	je charmapcopy
  2962 00002472 3C0D                <1> 	cmp al, 13
  2963 00002474 74F2                <1> 	je charmapcopy
  2964 00002476 3C81                <1> 	cmp al, 129
  2965 00002478 7307                <1> 	jae nomorecharmap
  2966 0000247A E884E8FFFF          <1> 	call int301prnt
  2967 0000247F EBE7                <1> 	jmp charmapcopy
  2968                              <1> nomorecharmap:
  2969 00002481 BE[76520000]        <1> 	mov esi, line
  2970 00002486 E853EAFFFF          <1> 	call print
  2971 0000248B E9A3EFFFFF          <1> 	jmp nwcmd
  2972                              <1> 	
  2973 00002490 05046B6579636F6465- <1> db 5,4,"keycode",0
  2974 00002499 00                  <1>
  2975                              <1> keycode:
  2976 0000249A E880060000          <1> 	call guistartin
  2977 0000249F B800000000          <1> 	mov eax, 0
  2978 000024A4 66A1[9A0E0000]      <1> 	mov ax, [lastkey]
  2979 000024AA 80FC01              <1> 	cmp ah, 1
  2980 000024AD 0F840E000000        <1> 	je near killkeycode
  2981 000024B3 B900000000          <1> 	mov ecx, 0
  2982 000024B8 88E1                <1> 	mov cl, ah
  2983 000024BA E8A8F3FFFF          <1> 	call showhexsmall
  2984 000024BF EBD9                <1> 	jmp keycode
  2985                              <1> killkeycode:
  2986 000024C1 BE[76520000]        <1> 	mov esi, line
  2987 000024C6 E813EAFFFF          <1> 	call print
  2988 000024CB E963EFFFFF          <1> 	jmp nwcmd
  2989                              <1> 
  2990 000024D0 050470636900        <1> db 5,4,"pci",0
  2991                              <1> 	pcishow:
  2992 000024D6 E8E3230000          <1> 	call pcidump
  2993 000024DB E953EFFFFF          <1> 	jmp nwcmd
  2994                              <1> 	
  2995 000024E0 050461727000        <1> db 5,4,"arp",0
  2996 000024E6 E8CE220000          <1> 	call arptest
  2997 000024EB E943EFFFFF          <1> 	jmp nwcmd
  2998                              <1> 
  2999 000024F0 0504626174636800    <1> db 5,4,"batch",0
  3000                              <1> 	batchst: 
  3001 000024F8 BF[7A1B0000]        <1> 		mov edi, buftxt
  3002 000024FD 81C706000000        <1> 		add edi, 6
  3003 00002503 803F00              <1> 		cmp byte [edi], 0
  3004 00002506 0F8473000000        <1> 		je near nonamefound
  3005 0000250C BE00004000          <1> 		mov esi, 0x400000
  3006 00002511 E862250000          <1> 		call loadfile
  3007 00002516 89D0                <1> 		mov eax, edx
  3008 00002518 3D94010000          <1> 		cmp eax, 404
  3009 0000251D 746F                <1> 		je goodbatchname
  3010 0000251F BE[2E250000]        <1> 		mov esi, badbatchname
  3011 00002524 E8B5E9FFFF          <1> 		call print
  3012 00002529 E905EFFFFF          <1> 		jmp nwcmd
  3013 0000252E 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  3014 00002537 20616C726561647920- <1>
  3015 00002540 657869737473210A0D- <1>
  3016 00002549 00                  <1>
  3017 0000254A 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  3018 00002553 746F20747970652061- <1>
  3019 0000255C 206E616D6520616674- <1>
  3020 00002565 65722074686520636F- <1>
  3021 0000256E 6D6D616E642E0A0D00  <1>
  3022 00002577 00000000            <1> 		esicache3 dd 0
  3023 0000257B 00000000            <1> 		esicache2 dd 0
  3024                              <1> 	nonamefound:
  3025 0000257F BE[4A250000]        <1> 		mov esi, namenotfoundbatch
  3026 00002584 E855E9FFFF          <1> 		call print
  3027 00002589 E9A5EEFFFF          <1> 		jmp nwcmd
  3028                              <1> 	goodbatchname:
  3029 0000258E BE00004000          <1> 		mov esi, 0x400000
  3030                              <1> 	batchcreate:
  3031 00002593 8935[77250000]      <1> 		mov [esicache3], esi
  3032 00002599 B00D                <1> 		mov al, 13
  3033 0000259B B307                <1> 		mov bl, 7
  3034 0000259D B404                <1> 		mov ah, 4
  3035 0000259F CD30                <1> 		int 30h
  3036 000025A1 8935[7B250000]      <1> 		mov [esicache2], esi
  3037 000025A7 8A0E                <1> 		mov cl, [esi]
  3038 000025A9 8B35[77250000]      <1> 		mov esi, [esicache3]
  3039 000025AF BB[06260000]        <1> 		mov ebx, exitword
  3040 000025B4 E8F8EFFFFF          <1> 		call cndtest
  3041 000025B9 3C01                <1> 		cmp al, 1
  3042 000025BB 7423                <1> 		je endbatchcreate
  3043 000025BD 3C02                <1> 		cmp al, 2
  3044 000025BF 741F                <1> 		je endbatchcreate
  3045 000025C1 BE[76520000]        <1> 		mov esi, line
  3046 000025C6 E813E9FFFF          <1> 		call print
  3047 000025CB 8B35[7B250000]      <1> 		mov esi, [esicache2]
  3048 000025D1 B00D                <1> 		mov al, 13
  3049 000025D3 B40A                <1> 		mov ah, 10
  3050 000025D5 668906              <1> 		mov [esi], ax
  3051 000025D8 81C602000000        <1> 		add esi, 2
  3052 000025DE EBB3                <1> 		jmp batchcreate
  3053                              <1> 	endbatchcreate:
  3054 000025E0 8B35[77250000]      <1> 		mov esi, [esicache3]
  3055 000025E6 B800000000          <1> 		mov eax, 0
  3056 000025EB 8806                <1> 		mov [esi], al
  3057 000025ED BE[76520000]        <1> 		mov esi, line
  3058 000025F2 E8E7E8FFFF          <1> 		call print
  3059 000025F7 BE00004000          <1> 		mov esi, 0x400000
  3060 000025FC E8DDE8FFFF          <1> 		call print
  3061 00002601 E92DEEFFFF          <1> 		jmp nwcmd
  3062                              <1> 	
  3063 00002606 5C7800              <1> 	exitword db "\x",0
  3064 00002609 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  3065 00002612 6F20657869742E0A0D- <1>
  3066 0000261B 00                  <1>
  3067                              <1> 		
  3068 0000261C 050473686F7700      <1> db 5,4,"show",0
  3069 00002623 BF[7A1B0000]        <1> 		mov edi, buftxt
  3070 00002628 81C705000000        <1> 		add edi, 5
  3071 0000262E BE00004000          <1> 		mov esi, 0x400000
  3072 00002633 E840240000          <1> 		call loadfile
  3073 00002638 BE00004000          <1> 		mov esi, 0x400000
  3074 0000263D 66813E424D          <1> 		cmp word [esi], "BM"
  3075 00002642 7414                <1> 		je bmpfound
  3076 00002644 E895E8FFFF          <1> 		call print
  3077 00002649 BE[76520000]        <1> 		mov esi, line
  3078 0000264E E88BE8FFFF          <1> 		call print
  3079 00002653 E9DBEDFFFF          <1> 		jmp nwcmd
  3080                              <1> bmpfound:
  3081 00002658 803D[04310000]00    <1> 		cmp byte [guion], 0
  3082 0000265F 0F8452000000        <1> 		je near noguibmp
  3083 00002665 BE00004000          <1> 		mov esi, 0x400000
  3084 0000266A B900000000          <1> 		mov ecx, 0
  3085 0000266F BA00000000          <1> 		mov edx, 0
  3086 00002674 B800000000          <1> 		mov eax, 0
  3087 00002679 BB00000000          <1> 		mov ebx, 0
  3088 0000267E E8941A0000          <1> 		call showbmp
  3089 00002683 B000                <1> 		mov al, 0
  3090 00002685 B405                <1> 		mov ah, 5
  3091 00002687 CD30                <1> 		int 30h
  3092 00002689 E8DD080000          <1> 		call guiclear
  3093 0000268E E8720A0000          <1> 		call clearmousecursor
  3094 00002693 E8F0100000          <1> 		call reloadallgraphics
  3095 00002698 BE[7A1B0000]        <1> 		mov esi, buftxt
  3096 0000269D 81C605000000        <1> 		add esi, 5
  3097 000026A3 E836E8FFFF          <1> 		call print
  3098 000026A8 BE[3A270000]        <1> 		mov esi, loadedbmpmsg
  3099 000026AD E82CE8FFFF          <1> 		call print
  3100 000026B2 E97CEDFFFF          <1> 		jmp nwcmd
  3101                              <1> noguibmp:
  3102 000026B7 BE[C6260000]        <1> 		mov esi, warnguibmp
  3103 000026BC E81DE8FFFF          <1> 		call print
  3104 000026C1 E96DEDFFFF          <1> 		jmp nwcmd
  3105 000026C6 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  3106 000026CF 6E6F7420626520646F- <1>
  3107 000026D8 6E6520776974686F75- <1>
  3108 000026E1 742074686520677569- <1>
  3109 000026EA 2E0A0D00            <1>
  3110                              <1> 
  3111                              <1> 		
  3112                              <1> filenotfound:
  3113 000026EE BE[17270000]        <1> 		mov esi, filenf
  3114 000026F3 E8E6E7FFFF          <1> 		call print
  3115 000026F8 BE[7A1B0000]        <1> 		mov esi, buftxt
  3116 000026FD 81C608000000        <1> 		add esi, 8
  3117 00002703 E8D6E7FFFF          <1> 		call print
  3118 00002708 BE[22270000]        <1> 		mov esi, filenf2
  3119 0000270D E8CCE7FFFF          <1> 		call print
  3120 00002712 E91CEDFFFF          <1> 		jmp nwcmd
  3121 00002717 5468652066696C6520- <1> filenf db "The file ",34,0
  3122 00002720 2200                <1>
  3123 00002722 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  3124 0000272B 6F7420626520666F75- <1>
  3125 00002734 6E642E0D0A00        <1>
  3126                              <1> 		
  3127 0000273A 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  3128 00002743 0A00                <1>
  3129                              <1> 
  3130 00002745 050464756D7000      <1> 	db 5,4,"dump",0
  3131 0000274C BE[7A1B0000]        <1> 	mov esi, buftxt
  3132 00002751 81C605000000        <1> 	add esi, 5
  3133 00002757 B900000000          <1> 	mov ecx, 0
  3134 0000275C E859F2FFFF          <1> 	call cnvrttxt
  3135 00002761 89CF                <1> 	mov edi, ecx
  3136 00002763 89FE                <1> 	mov esi, edi
  3137 00002765 81C680030000        <1> 	add esi, 896
  3138 0000276B C605[66180000]00    <1> 	mov byte [firsthexshown],0
  3139                              <1> dumphexloop:
  3140 00002772 8B0F                <1> 	mov ecx, [edi]
  3141 00002774 E802F1FFFF          <1> 	call showhex
  3142 00002779 81C704000000        <1> 	add edi, 4
  3143 0000277F 39F7                <1> 	cmp edi, esi
  3144 00002781 72EF                <1> 	jb dumphexloop
  3145 00002783 E9ABECFFFF          <1> 	jmp nwcmd
  3146                              <1> 
  3147 00002788 050474696D6500      <1> db 5,4,"time",0
  3148 0000278F E823000000          <1> 	call time
  3149 00002794 BE[A1290000]        <1> 	mov esi, timeshow
  3150 00002799 E840E7FFFF          <1> 	call print
  3151 0000279E BE[76520000]        <1> 	mov esi, line
  3152 000027A3 E836E7FFFF          <1> 	call print
  3153 000027A8 BE[AB290000]        <1> 	mov esi, dateshow
  3154 000027AD E82CE7FFFF          <1> 	call print
  3155 000027B2 E97CECFFFF          <1> 	jmp nwcmd
  3156                              <1> 	time:
  3157 000027B7 E86D010000          <1> 	call tstackput1
  3158 000027BC B00A                <1> 	mov al,10			;Get RTC register A
  3159 000027BE E897010000          <1> 	call tget1
  3160 000027C3 A880                <1> 	test al,0x80			;Is update in progress?
  3161 000027C5 75F0                <1> 	jne time				; yes, wait
  3162                              <1> 
  3163 000027C7 B000                <1> 	mov al,0			;Get seconds (00 to 59)
  3164 000027C9 E88C010000          <1> 	call tget1
  3165 000027CE A2[98290000]        <1> 	mov [RTCtimeSecond],al
  3166                              <1> 
  3167 000027D3 B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  3168 000027D5 E880010000          <1> 	call tget1
  3169 000027DA A2[99290000]        <1> 	mov [RTCtimeMinute],al
  3170                              <1> 
  3171 000027DF B004                <1> 	mov al,0x04			;Get hours (see notes)
  3172 000027E1 E874010000          <1> 	call tget1
  3173 000027E6 A2[9A290000]        <1> 	mov [RTCtimeHour],al
  3174                              <1> 
  3175 000027EB B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  3176 000027ED E868010000          <1> 	call tget1
  3177                              <1> ;	mov ah, 0			;;fix day
  3178                              <1> ;	mov ah, al
  3179                              <1> ;	shr ah, 4
  3180                              <1> ;	shl al, 4
  3181                              <1> ;	shr al, 4
  3182                              <1> ;	cmp al, 0
  3183                              <1> ;	jne nodecahday
  3184                              <1> ;	mov al, 10
  3185                              <1> ;	dec ah
  3186                              <1> ;nodecahday:
  3187                              <1> ;	dec al
  3188                              <1> ;	shl ah, 4
  3189                              <1> ;	or al, ah
  3190 000027F2 A2[9B290000]        <1> 	mov [RTCtimeDay],al
  3191                              <1> 
  3192 000027F7 B008                <1> 	mov al,0x08			;Get month (01 to 12)
  3193 000027F9 E85C010000          <1> 	call tget1
  3194 000027FE A2[9C290000]        <1> 	mov [RTCtimeMonth],al
  3195                              <1> 
  3196 00002803 B009                <1> 	mov al,0x09			;Get year (00 to 99)
  3197 00002805 E850010000          <1> 	call tget1
  3198 0000280A A2[9D290000]        <1> 	mov [RTCtimeYear],al
  3199                              <1> 	
  3200 0000280F BE[A1290000]        <1> 	mov esi, timeshow
  3201 00002814 8A2D[9A290000]      <1> 	mov ch, [RTCtimeHour]
  3202 0000281A E846010000          <1> 	call tput1
  3203 0000281F 8A2D[99290000]      <1> 	mov ch, [RTCtimeMinute]
  3204 00002825 E83B010000          <1> 	call tput1
  3205 0000282A 8A2D[98290000]      <1> 	mov ch, [RTCtimeSecond]
  3206 00002830 E830010000          <1> 	call tput1
  3207 00002835 BE[AB290000]        <1> 	mov esi, dateshow
  3208 0000283A 8A2D[9C290000]      <1> 	mov ch, [RTCtimeMonth]
  3209 00002840 E820010000          <1> 	call tput1
  3210 00002845 8A2D[9B290000]      <1> 	mov ch, [RTCtimeDay]
  3211 0000284B E815010000          <1> 	call tput1
  3212 00002850 B520                <1> 	mov ch, 0x20
  3213 00002852 E80E010000          <1> 	call tput1
  3214 00002857 4E                  <1> 	dec esi
  3215 00002858 8A2D[9D290000]      <1> 	mov ch, [RTCtimeYear]
  3216 0000285E E802010000          <1> 	call tput1
  3217 00002863 E8DB000000          <1> 	call tstackget1
  3218 00002868 BE[A1290000]        <1> 	mov esi, timeshow
  3219 0000286D 66BB0700            <1> 	mov bx, 7
  3220 00002871 B401                <1> 	mov ah, 1
  3221 00002873 B000                <1> 	mov al, 0
  3222 00002875 CD30                <1> 	int 30h
  3223                              <1> ;;get day of week
  3224                              <1> ;;add these:
  3225                              <1> ;;century value
  3226                              <1> ;;last 2 digits of year
  3227                              <1> ;;last 2 digits of year right shifted twice
  3228                              <1> ;;month table value
  3229                              <1> ;;day of the month
  3230                              <1> ;;divide these by 7
  3231                              <1> ;;the remainder is the day
  3232 00002877 B800000000          <1> 	mov eax, 0
  3233                              <1> ;;first convert the values from BCD to hex
  3234 0000287C A0[9B290000]        <1> 	mov al, [RTCtimeDay]
  3235 00002881 E88A000000          <1> 	call converttohex
  3236 00002886 8825[9E290000]      <1> 	mov [dayhex], ah
  3237 0000288C A0[9C290000]        <1> 	mov al, [RTCtimeMonth]
  3238 00002891 E87A000000          <1> 	call converttohex
  3239 00002896 8825[9F290000]      <1> 	mov [monthhex], ah
  3240 0000289C A0[9D290000]        <1> 	mov al, [RTCtimeYear]
  3241 000028A1 E86A000000          <1> 	call converttohex
  3242 000028A6 8825[A0290000]      <1> 	mov [yearhex], ah
  3243 000028AC B800000000          <1> 	mov eax, 0
  3244 000028B1 A0[A0290000]        <1> 	mov al, [yearhex]
  3245 000028B6 C0E802              <1> 	shr al, 2
  3246 000028B9 0205[A0290000]      <1> 	add al, [yearhex]
  3247 000028BF 0506000000          <1> 	add eax, 6
  3248 000028C4 BB00000000          <1> 	mov ebx, 0
  3249 000028C9 8A1D[9F290000]      <1> 	mov bl, [monthhex]
  3250 000028CF FECB                <1> 	dec bl
  3251 000028D1 81C3[C1290000]      <1> 	add ebx, month
  3252 000028D7 B900000000          <1> 	mov ecx, 0
  3253 000028DC 8A0B                <1> 	mov cl, [ebx]
  3254 000028DE 01C8                <1> 	add eax, ecx
  3255 000028E0 8A0D[9E290000]      <1> 	mov cl, [dayhex]
  3256 000028E6 01C8                <1> 	add eax, ecx
  3257 000028E8 66BB0700            <1> 	mov bx, 7
  3258 000028EC BA00000000          <1> 	mov edx, 0
  3259 000028F1 66F7F3              <1> 	div bx
  3260 000028F4 C1E202              <1> 	shl edx, 2
  3261 000028F7 81C2[CD290000]      <1> 	add edx, day
  3262 000028FD 8B32                <1> 	mov esi, [edx]
  3263 000028FF 66BB0700            <1> 	mov bx, 7
  3264 00002903 B401                <1> 	mov ah, 1
  3265 00002905 B000                <1> 	mov al, 0
  3266 00002907 CD30                <1> 	int 30h
  3267 00002909 66B80000            <1> 	mov ax, 0
  3268 0000290D CD30                <1> 	int 30h
  3269 0000290F F4                  <1> 	hlt
  3270                              <1> 	
  3271                              <1> converttohex:
  3272 00002910 88C4                <1> 	mov ah, al
  3273 00002912 C0E804              <1> 	shr al, 4
  3274 00002915 C0E404              <1> 	shl ah, 4
  3275 00002918 C0EC04              <1> 	shr ah, 4
  3276 0000291B 3C00                <1> 	cmp al, 0
  3277 0000291D 7409                <1> 	je noconverttohex
  3278                              <1> converttohexlp:
  3279 0000291F 80C40A              <1> 	add ah, 10
  3280 00002922 FEC8                <1> 	dec al
  3281 00002924 3C00                <1> 	cmp al, 0
  3282 00002926 75F7                <1> 	jne converttohexlp
  3283                              <1> noconverttohex:
  3284 00002928 C3                  <1> 	ret
  3285                              <1> 	
  3286                              <1> tstackput1:
  3287 00002929 8935[94290000]      <1> 	mov [tstack + 20], esi
  3288 0000292F BE[80290000]        <1> 	mov esi, tstack
  3289 00002934 8906                <1> 	mov [esi], eax
  3290 00002936 895E04              <1> 	mov [esi + 4], ebx
  3291 00002939 894E08              <1> 	mov [esi + 8], ecx
  3292 0000293C 89560C              <1> 	mov [esi + 12], edx
  3293 0000293F 897E10              <1> 	mov [esi + 16], edi
  3294 00002942 C3                  <1> 	ret
  3295                              <1> 	
  3296                              <1> tstackget1:
  3297 00002943 BE[80290000]        <1> 	mov esi, tstack
  3298 00002948 8B06                <1> 	mov eax, [esi]
  3299 0000294A 8B5E04              <1> 	mov ebx, [esi + 4]
  3300 0000294D 8B4E08              <1> 	mov ecx, [esi + 8]
  3301 00002950 8B560C              <1> 	mov edx, [esi + 12]
  3302 00002953 8B7E10              <1> 	mov edi, [esi + 16]
  3303 00002956 8B7614              <1> 	mov esi, [esi + 20]
  3304 00002959 C3                  <1> 	ret
  3305                              <1> 	
  3306                              <1> tget1:
  3307 0000295A 66BA7000            <1> 	mov dx, 0x70
  3308 0000295E EE                  <1> 	out dx, al
  3309 0000295F 6642                <1> 	inc dx
  3310 00002961 EC                  <1> 	in al, dx
  3311 00002962 664A                <1> 	dec dx
  3312 00002964 C3                  <1> 	ret
  3313                              <1> 	
  3314                              <1> tput1:
  3315 00002965 66C1E904            <1> 	shr cx, 4
  3316 00002969 B030                <1> 	mov al, 48
  3317 0000296B 00E8                <1> 	add al, ch
  3318 0000296D 8806                <1> 	mov [esi], al
  3319 0000296F 46                  <1> 	inc esi
  3320 00002970 B030                <1> 	mov al, 48
  3321 00002972 C0E904              <1> 	shr cl, 4
  3322 00002975 00C8                <1> 	add al, cl
  3323 00002977 8806                <1> 	mov [esi], al
  3324 00002979 81C602000000        <1> 	add esi, 2
  3325 0000297F C3                  <1> 	ret
  3326                              <1> 		
  3327 00002980 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  3328 00002989 000000000000000000- <1>
  3329 00002992 000000000000        <1>
  3330 00002998 00                  <1> 	RTCtimeSecond db 0
  3331 00002999 00                  <1> 	RTCtimeMinute db 0
  3332 0000299A 00                  <1> 	RTCtimeHour db 0
  3333 0000299B 00                  <1> 	RTCtimeDay db 0
  3334 0000299C 00                  <1> 	RTCtimeMonth db 0
  3335 0000299D 00                  <1> 	RTCtimeYear db 0
  3336 0000299E 00                  <1> 	dayhex db 0
  3337 0000299F 00                  <1> 	monthhex db 0
  3338 000029A0 00                  <1> 	yearhex db 0
  3339 000029A1 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  3340 000029AA 0A                  <1>
  3341 000029AB 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  3342 000029B4 300D0A00            <1>
  3343                              <1> 	oldcentury:	;;from 1700 to 1900
  3344 000029B8 040200              <1> 	db 4,2,0
  3345                              <1> 	century:	;;from 2000 to 2500
  3346 000029BB 060402000604        <1> 	db 6,4,2,0,6,4
  3347                              <1> 	month:
  3348 000029C1 000303060104060205- <1> 	db 0,3,3,6,1,4,6,2,5,0,3,5
  3349 000029CA 000305              <1>
  3350                              <1> 	day:
  3351 000029CD [E9290000]          <1> 	dd sunday
  3352 000029D1 [F2290000]          <1> 	dd monday
  3353 000029D5 [FB290000]          <1> 	dd tuesday
  3354 000029D9 [052A0000]          <1> 	dd wednesday
  3355 000029DD [112A0000]          <1> 	dd thursday
  3356 000029E1 [1C2A0000]          <1> 	dd friday
  3357 000029E5 [252A0000]          <1> 	dd saturday
  3358                              <1> sunday:
  3359 000029E9 53756E6461790D0A00  <1> 	db "Sunday",13,10,0
  3360                              <1> monday:
  3361 000029F2 4D6F6E6461790D0A00  <1> 	db "Monday",13,10,0
  3362                              <1> tuesday:
  3363 000029FB 547565736461790D0A- <1> 	db "Tuesday",13,10,0
  3364 00002A04 00                  <1>
  3365                              <1> wednesday:
  3366 00002A05 5765646E6573646179- <1> 	db "Wednesday",13,10,0
  3367 00002A0E 0D0A00              <1>
  3368                              <1> thursday:
  3369 00002A11 54687572736461790D- <1> 	db "Thursday",13,10,0
  3370 00002A1A 0A00                <1>
  3371                              <1> friday:
  3372 00002A1C 4672696461790D0A00  <1> 	db "Friday",13,10,0
  3373                              <1> saturday:
  3374 00002A25 53617475726461790D- <1> 	db "Saturday",13,10,0
  3375 00002A2E 0A00                <1>
  3376                              <1> 
  3377 00002A30 0504637075696400    <1> db 5,4,"cpuid",0
  3378 00002A38 B800000000          <1> 	mov eax, 0
  3379 00002A3D 0FA2                <1> 	cpuid
  3380 00002A3F 891D[942A0000]      <1> 	mov [cpuidbuf], ebx
  3381 00002A45 8915[982A0000]      <1> 	mov [cpuidbuf + 4], edx
  3382 00002A4B 890D[9C2A0000]      <1> 	mov [cpuidbuf + 8], ecx
  3383 00002A51 BE[942A0000]        <1> 	mov esi, cpuidbuf
  3384 00002A56 E883E4FFFF          <1> 	call print
  3385 00002A5B BE[76520000]        <1> 	mov esi, line
  3386 00002A60 E879E4FFFF          <1> 	call print
  3387 00002A65 B801000000          <1> 	mov eax, 1
  3388 00002A6A 0FA2                <1> 	cpuid
  3389 00002A6C 89C1                <1> 	mov ecx, eax
  3390 00002A6E C605[66180000]02    <1> 	mov byte [firsthexshown], 2
  3391 00002A75 E801EEFFFF          <1> 	call showhex
  3392 00002A7A B808000080          <1> 	mov eax, 0x80000008
  3393 00002A7F 0FA2                <1> 	cpuid
  3394 00002A81 89C1                <1> 	mov ecx, eax
  3395 00002A83 C605[66180000]02    <1> 	mov byte [firsthexshown], 2
  3396 00002A8A E8ECEDFFFF          <1> 	call showhex
  3397 00002A8F E99FE9FFFF          <1> 	jmp nwcmd
  3398                              <1> 	
  3399 00002A94 00<rept>            <1> cpuidbuf times 13 db 0
  3400                              <1> cpuidvendorend:
  3401                              <1> progend:		;programs end here	
  3402                              <1> batchprogend:
  3403                                      %include 'source/input.asm'
  3404                              <1> PS2SET:
  3405 00002AA1 B0A8                <1>   mov  al, 0xa8		; enable mouse port
  3406 00002AA3 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3407 00002AA5 E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  3408 00002AAA C3                  <1> ret
  3409                              <1> 
  3410                              <1> CHKPRT:
  3411 00002AAB 66B96400            <1>   mov  cx, 100
  3412                              <1>  .again:
  3413 00002AAF E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3414 00002AB1 A802                <1>   test al, 2		; Check if input buffer is empty
  3415 00002AB3 7402                <1>   je .go
  3416 00002AB5 E2F8                <1>   loop .again
  3417                              <1>  .go:
  3418 00002AB7 C3                  <1> ret
  3419                              <1> 
  3420                              <1> WMOUS:
  3421 00002AB8 B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  3422 00002ABA E664                <1>   out  0x64, al		; write to keyboardcontroller
  3423 00002ABC E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3424 00002AC1 C3                  <1> ret
  3425                              <1> 
  3426                              <1> MBUFFUL:
  3427 00002AC2 66B96400            <1>   mov cx, 100
  3428                              <1>  .mn:
  3429 00002AC6 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3430 00002AC8 A820                <1>   test al, 0x20		; check if mouse output buffer is full
  3431 00002ACA 7402                <1>   jz  .mnn
  3432 00002ACC E2F8                <1>   loop .mn
  3433                              <1>  .mnn:
  3434 00002ACE C3                  <1> ret
  3435                              <1> 
  3436                              <1> 
  3437                              <1> ACTMOUS:
  3438 00002ACF E8E4FFFFFF          <1>   call WMOUS
  3439 00002AD4 B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  3440 00002AD6 E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  3441 00002AD8 E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3442 00002ADD E801000000          <1>   call CHKMOUS		; check if a byte is available
  3443 00002AE2 C3                  <1> ret
  3444                              <1> 
  3445                              <1> CHKMOUS:
  3446 00002AE3 B300                <1>   mov  bl, 0
  3447 00002AE5 66B96400            <1>   mov cx, 100
  3448                              <1>  .vrd:
  3449 00002AE9 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3450 00002AEB A801                <1>   test al, 1		; check if controller buffer (60h) has data
  3451 00002AED 7504                <1>   jnz .yy
  3452 00002AEF E2F8                <1>   loop .vrd
  3453 00002AF1 B301                <1>   mov  bl, 1
  3454                              <1>  .yy:
  3455 00002AF3 C3                  <1> ret
  3456                              <1> 
  3457                              <1> GETB:
  3458                              <1>  .cagain:
  3459 00002AF4 E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  3460 00002AF9 08DB                <1>   or bl, bl
  3461 00002AFB 75F7                <1>   jnz .cagain
  3462 00002AFD B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  3463 00002AFF E664                <1>   out  0x64, al		; write to keyboardcontroller
  3464 00002B01 E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3465 00002B06 6631C0              <1>   xor  ax, ax
  3466 00002B09 E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3467 00002B0B 88C2                <1>   mov  dl, al
  3468 00002B0D B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  3469 00002B0F E664                <1>   out  0x64, al		; write to keyboardcontroller
  3470 00002B11 E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3471 00002B16 88D0                <1>   mov  al, dl
  3472 00002B18 C3                  <1> ret
  3473                              <1> 
  3474 00002B19 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  3475 00002B1A 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  3476 00002B1B 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  3477 00002B1C 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  3478 00002B1D 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  3479                              <1> 
  3480 00002B1E 00                  <1> specialkey db 0
  3481                              <1> 
  3482                              <1> 	guistartin:
  3483 00002B1F B800000000          <1> 		mov eax, 0
  3484 00002B24 A2[1E2B0000]        <1> 		mov [specialkey], al
  3485 00002B29 66A3[9A0E0000]      <1> 		mov [lastkey], ax
  3486 00002B2F E464                <1> 		in al, 64h ; Status
  3487 00002B31 A801                <1> 		test al, 1 ; output buffer full?
  3488 00002B33 74EA                <1> 		jz guistartin
  3489 00002B35 A820                <1> 		test al, 20h ; PS2-Mouse?
  3490 00002B37 0F8577010000        <1> 		jnz near maincall2
  3491                              <1> 	guigetkey:
  3492 00002B3D E460                <1> 		in al, 60h
  3493 00002B3F 88C4                <1> 		mov ah, al
  3494 00002B41 B000                <1> 		mov al, 0
  3495 00002B43 8825[9B0E0000]      <1> 		mov [lastkey + 1], ah
  3496 00002B49 88E0                <1> 		mov al, ah
  3497 00002B4B BF[F72E0000]        <1> 		mov edi, scancode
  3498                              <1> 	guisearchscan: 
  3499 00002B50 3C3A                <1> 		cmp al, 3Ah
  3500 00002B52 7315                <1> 		jae guiscanother
  3501 00002B54 B400                <1> 		mov ah, 0
  3502 00002B56 D0E0                <1> 		shl al, 1
  3503 00002B58 01C7                <1> 		add edi, eax
  3504 00002B5A D0E8                <1> 		shr al, 1
  3505 00002B5C 8A27                <1> 		mov ah, [edi]
  3506 00002B5E 80FC00              <1> 		cmp ah, 0
  3507 00002B61 7406                <1> 		je guiscanother
  3508 00002B63 E99C000000          <1> 		jmp guiscanfound
  3509 00002B68 00                  <1> guiupper db 0
  3510                              <1> guiscanother:
  3511 00002B69 88C4                <1> 		mov ah, al
  3512 00002B6B B000                <1> 		mov al, 0
  3513 00002B6D 66A3[9A0E0000]      <1> 		mov [lastkey], ax
  3514 00002B73 80FCE0              <1> 		cmp ah, 0E0h
  3515 00002B76 0F845A000000        <1> 		je near guigetkeyspecial
  3516 00002B7C B0E0                <1> 		mov al, 0xE0
  3517 00002B7E 3805[1E2B0000]      <1> 		cmp [specialkey], al
  3518 00002B84 7507                <1> 		jne nospecialkey
  3519 00002B86 66A3[9A0E0000]      <1> 		mov [lastkey], ax
  3520 00002B8C C3                  <1> 		ret
  3521                              <1> nospecialkey:
  3522                              <1> 		;cmp ah, 4Dh
  3523                              <1> 		;je near nextimage
  3524 00002B8D 80FC2A              <1> 		cmp ah, 2Ah
  3525 00002B90 0F8455000000        <1> 		je near guishifton
  3526 00002B96 80FC36              <1> 		cmp ah, 36h
  3527 00002B99 0F844C000000        <1> 		je near guishifton
  3528 00002B9F 80FC1C              <1> 		cmp ah, 1Ch
  3529 00002BA2 0F845B000000        <1> 		je near guientdown
  3530 00002BA8 80FCAA              <1> 		cmp ah, 0AAh
  3531 00002BAB 0F8446000000        <1> 		je near guishiftoff
  3532 00002BB1 80FCB6              <1> 		cmp ah, 0B6h
  3533 00002BB4 0F843D000000        <1> 		je near guishiftoff
  3534 00002BBA 80FC3A              <1> 		cmp ah, 3Ah
  3535 00002BBD 0F8461000000        <1> 		je near guicaps
  3536 00002BC3 80FC45              <1> 		cmp ah, 0x45
  3537 00002BC6 0F8466000000        <1> 		je near guinumlock
  3538 00002BCC 80FC46              <1> 		cmp ah, 0x46
  3539 00002BCF 0F8475000000        <1> 		je near guiscrolllock
  3540 00002BD5 C3                  <1> 		ret
  3541                              <1> 	guigetkeyspecial:
  3542 00002BD6 B0E0                <1> 		mov al, 0xE0
  3543 00002BD8 A2[1E2B0000]        <1> 		mov [specialkey], al
  3544 00002BDD E95BFFFFFF          <1> 		jmp guigetkey
  3545                              <1> 	guishift:
  3546 00002BE2 A0[682B0000]        <1> 		mov al, [guiupper]
  3547 00002BE7 3C01                <1> 		cmp al, 1
  3548 00002BE9 730C                <1> 		jae guishiftoff
  3549                              <1> 	guishifton:
  3550 00002BEB C605[682B0000]01    <1> 		mov byte [guiupper], 1
  3551 00002BF2 E928FFFFFF          <1> 		jmp guistartin
  3552                              <1> 	guishiftoff:
  3553 00002BF7 C605[682B0000]00    <1> 		mov byte [guiupper], 0
  3554 00002BFE E91CFFFFFF          <1> 		jmp guistartin
  3555                              <1> 	guientdown:
  3556 00002C03 C3                  <1> 		ret
  3557                              <1> 	guiscanfound:
  3558 00002C04 81C701000000        <1> 		add edi, 1
  3559 00002C0A 803D[682B0000]01    <1> 		cmp byte [guiupper], 1
  3560 00002C11 7306                <1> 		jae uppercasegui
  3561 00002C13 81EF01000000        <1> 		sub edi, 1
  3562                              <1> uppercasegui:
  3563 00002C19 8A07                <1> 		mov al,[edi]
  3564 00002C1B A2[9A0E0000]        <1> 		mov [lastkey], al
  3565 00002C20 C3                  <1> 		ret
  3566                              <1> 		
  3567 00002C21 00                  <1> keyboardstatus db 0
  3568 00002C22 00                  <1> numlockstatus db 0
  3569 00002C23 00                  <1> scrolllockstatus db 0
  3570                              <1> 	guicaps:
  3571 00002C24 8035[212C0000]04    <1> 		xor byte [keyboardstatus], 00000100b
  3572 00002C2B E832000000          <1> 		call updatekblights
  3573 00002C30 EBB0                <1> 		jmp guishift
  3574                              <1> 		
  3575                              <1> 	guinumlock:
  3576 00002C32 8035[212C0000]02    <1> 		xor byte [keyboardstatus], 00000010b
  3577 00002C39 8035[222C0000]01    <1> 		xor byte [numlockstatus], 1
  3578 00002C40 E81D000000          <1> 		call updatekblights
  3579 00002C45 E9D5FEFFFF          <1> 		jmp guistartin
  3580                              <1> 	
  3581                              <1> 	guiscrolllock:
  3582 00002C4A 8035[212C0000]01    <1> 		xor byte [keyboardstatus], 00000001b
  3583 00002C51 8035[232C0000]01    <1> 		xor byte [scrolllockstatus], 1
  3584 00002C58 E805000000          <1> 		call updatekblights
  3585 00002C5D E9BDFEFFFF          <1> 		jmp guistartin
  3586                              <1> 		
  3587                              <1> 	updatekblights:
  3588 00002C62 B0ED                <1> 		mov al, 0xED
  3589 00002C64 66BA6000            <1> 		mov dx, 0x60
  3590 00002C68 EE                  <1> 		out dx, al
  3591                              <1> 	chkkbdack:
  3592 00002C69 EC                  <1> 		in al, dx
  3593 00002C6A 3CFA                <1> 		cmp al, 0xFA
  3594 00002C6C 75FB                <1> 		jne chkkbdack
  3595 00002C6E A0[212C0000]        <1> 		mov al, [keyboardstatus]
  3596 00002C73 EE                  <1> 		out dx, al
  3597 00002C74 C3                  <1> 		ret
  3598                              <1> 	
  3599                              <1> 	cursorgui:
  3600 00002C75 803D[C0410000]01    <1> 		cmp byte [mouseon], 1
  3601 00002C7C 0F8432000000        <1> 		je near maincall2
  3602 00002C82 803D[04310000]00    <1> 		cmp byte [guion], 0
  3603 00002C89 0F8474FFFFFF        <1> 		je guientdown
  3604                              <1> 	initmouse:
  3605 00002C8F 803D[04310000]00    <1> 		cmp byte [guion], 0
  3606 00002C96 7405                <1> 		je noswmsposinit
  3607 00002C98 E834050000          <1> 		call switchmousepos2
  3608                              <1> 	noswmsposinit:
  3609 00002C9D E8FFFDFFFF          <1> 	  	call PS2SET
  3610 00002CA2 E828FEFFFF          <1> 		call ACTMOUS
  3611 00002CA7 C605[C0410000]01    <1> 		mov byte [mouseon],1
  3612 00002CAE E841FEFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  3613                              <1> 				;;If the bytes are mixed up,
  3614                              <1> 				;;remove this line or add another of this line.
  3615                              <1> 		;call GETB
  3616 00002CB3 C3                  <1> 		ret
  3617                              <1> 	maincall2:
  3618 00002CB4 803D[C0410000]01    <1> 		  cmp byte [mouseon], 1
  3619 00002CBB 75D2                <1> 		  jne initmouse
  3620 00002CBD E832FEFFFF          <1> 		  call GETB
  3621 00002CC2 88C3                <1> 		  mov  bl, al
  3622 00002CC4 80E301              <1> 		  and  bl, 1
  3623 00002CC7 881D[192B0000]      <1> 		  mov  BYTE [LBUTTON], bl
  3624 00002CCD 88C3                <1> 		  mov  bl, al
  3625 00002CCF 80E302              <1> 		  and  bl, 2
  3626 00002CD2 D0EB                <1> 		  shr  bl, 1
  3627 00002CD4 881D[1A2B0000]      <1> 		  mov  BYTE [RBUTTON], bl
  3628 00002CDA 88C3                <1> 		  mov  bl, al
  3629 00002CDC 80E304              <1> 		  and  bl, 4
  3630 00002CDF C0EB02              <1> 		  shr  bl, 2
  3631 00002CE2 881D[1B2B0000]      <1> 		  mov  BYTE [MBUTTON], bl
  3632 00002CE8 E807FEFFFF          <1> 		  call GETB
  3633 00002CED A2[1C2B0000]        <1> 		  mov  BYTE [XCOORD], al
  3634 00002CF2 E8FDFDFFFF          <1> 		  call GETB
  3635 00002CF7 A2[1D2B0000]        <1> 		  mov  BYTE [YCOORD], al
  3636                              <1> 
  3637                              <1> 	showpixelcursor:
  3638 00002CFC 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  3639 00002D03 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  3640 00002D0A 668915[522E0000]    <1> 		mov [lastmouseposition], dx
  3641 00002D11 66890D[542E0000]    <1> 		mov [lastmouseposition + 2], cx
  3642 00002D18 A0[1C2B0000]        <1> 		mov al, [XCOORD]
  3643 00002D1D 3C80                <1> 		cmp al, 128
  3644 00002D1F 730C                <1> 		jae subxcoord
  3645 00002D21 00C0                <1> 		add al, al
  3646 00002D23 B400                <1> 		mov ah, 0
  3647 00002D25 6601C2              <1> 		add dx, ax
  3648 00002D28 E90B000000          <1> 		jmp subxcoorddn
  3649                              <1> 	subxcoord:
  3650 00002D2D 00C0                <1> 		add al, al
  3651 00002D2F B300                <1> 		mov bl, 0
  3652 00002D31 28C3                <1> 		sub bl, al
  3653 00002D33 B700                <1> 		mov bh, 0
  3654 00002D35 6629DA              <1> 		sub dx, bx
  3655                              <1> 	subxcoorddn:
  3656 00002D38 8A1D[1D2B0000]      <1> 		mov bl, [YCOORD]
  3657 00002D3E B000                <1> 		mov al, 0
  3658 00002D40 28D8                <1> 		sub al, bl
  3659 00002D42 3C80                <1> 		cmp al, 128
  3660 00002D44 730A                <1> 		jae subycoord
  3661 00002D46 B400                <1> 		mov ah, 0
  3662 00002D48 6601C1              <1> 		add cx, ax
  3663 00002D4B E909000000          <1> 		jmp subycoorddn
  3664                              <1> 	subycoord:
  3665 00002D50 B300                <1> 		mov bl, 0
  3666 00002D52 28C3                <1> 		sub bl, al
  3667 00002D54 B700                <1> 		mov bh, 0
  3668 00002D56 6629D9              <1> 		sub cx, bx
  3669                              <1> 	subycoorddn:
  3670 00002D59 6681FA204E          <1> 		cmp dx, 20000
  3671 00002D5E 7604                <1> 		jbe nooriginx2
  3672 00002D60 66BA0000            <1> 		mov dx, 0
  3673                              <1> 	nooriginx2:
  3674 00002D64 6681F9204E          <1> 		cmp cx, 20000
  3675 00002D69 7604                <1> 		jbe nooriginy2
  3676 00002D6B 66B90000            <1> 		mov cx, 0
  3677                              <1> 	nooriginy2:
  3678 00002D6F 6681FA0000          <1> 		cmp dx, 0
  3679 00002D74 7415                <1> 		je nofixxcolumn2
  3680 00002D76 663B15[683F0000]    <1> 		cmp dx, [resolutionx2]
  3681 00002D7D 720C                <1> 		jb nofixxcolumn2
  3682 00002D7F 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  3683 00002D86 6681EA0200          <1> 		sub dx, 2
  3684                              <1> 	nofixxcolumn2:
  3685 00002D8B 6681F90000          <1> 		cmp cx, 0
  3686 00002D90 7415                <1> 		je nofixyrow2
  3687 00002D92 663B0D[643F0000]    <1> 		cmp cx, [resolutiony]
  3688 00002D99 720C                <1> 		jb nofixyrow2
  3689 00002D9B 668B0D[643F0000]    <1> 		mov cx, [resolutiony]
  3690 00002DA2 6681E90100          <1> 		sub cx, 1
  3691                              <1> 	nofixyrow2:
  3692 00002DA7 668915[562E0000]    <1> 		mov [mousecursorposition], dx
  3693 00002DAE 66890D[582E0000]    <1> 		mov [mousecursorposition + 2], cx
  3694 00002DB5 803D[04310000]00    <1> 		cmp byte [guion], 0
  3695 00002DBC 0F8498000000        <1> 		je near termmouse
  3696 00002DC2 E8A1030000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3697 00002DC7 803D[192B0000]01    <1> 		cmp byte [LBUTTON], 1
  3698 00002DCE 0F847A040000        <1> 		je near clickicon
  3699 00002DD4 803D[1A2B0000]01    <1> 		cmp byte [RBUTTON], 1
  3700 00002DDB 0F846D040000        <1> 		je near clickicon
  3701 00002DE1 A0[3B320000]        <1> 		mov al, [pbutton]
  3702 00002DE6 C705[3E320000]0000- <1> 		mov dword [dragging], 0
  3703 00002DEE 0000                <1>
  3704 00002DF0 3C00                <1> 		cmp al, 0
  3705 00002DF2 740F                <1> 		je nopreviousbutton
  3706 00002DF4 E80C030000          <1> 		call clearmousecursor
  3707 00002DF9 E88A090000          <1> 		call reloadallgraphics
  3708                              <1> 	windowtermcopyend:
  3709 00002DFE E8CE030000          <1> 		call switchmousepos2
  3710                              <1> 	nopreviousbutton:
  3711 00002E03 B000                <1> 		mov al, 0
  3712 00002E05 A2[3B320000]        <1> 		mov [pbutton], al
  3713 00002E0A A0[192B0000]        <1> 		mov al, [LBUTTON]
  3714 00002E0F A2[3C320000]        <1> 		mov [pLBUTTON], al
  3715 00002E14 A0[1A2B0000]        <1> 		mov al, [RBUTTON]
  3716 00002E19 A2[3D320000]        <1> 		mov [pRBUTTON], al
  3717 00002E1E B900000000          <1> 		mov ecx, 0
  3718 00002E23 BA00000000          <1> 		mov edx, 0
  3719 00002E28 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  3720 00002E2F 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  3721 00002E36 66BB18C7            <1> 		mov bx, 1100011100011000b
  3722 00002E3A B400                <1> 		mov ah, 0
  3723 00002E3C B080                <1> 		mov al, 128
  3724 00002E3E C605[01310000]01    <1> 		mov byte [showcursorfonton], 1
  3725 00002E45 E82E110000          <1> 		call showfontvesa
  3726 00002E4A C605[01310000]00    <1> 		mov byte [showcursorfonton], 0
  3727 00002E51 C3                  <1> 		ret
  3728                              <1> 
  3729 00002E52 84008400            <1> lastmouseposition dw 132,132
  3730 00002E56 84008400            <1> mousecursorposition dw 132,132	
  3731                              <1> 
  3732                              <1> termmouse:
  3733 00002E5A BE[8F1C0000]        <1> 		mov esi, videobuf2
  3734 00002E5F BA00000000          <1> 		mov edx, 0
  3735 00002E64 668B15[522E0000]    <1> 		mov dx, [lastmouseposition]
  3736 00002E6B 668B0D[542E0000]    <1> 		mov cx, [lastmouseposition + 2]
  3737 00002E72 66A1[F52E0000]      <1> 		mov ax, [cursorcache]
  3738 00002E78 663D0000            <1> 		cmp ax, 0
  3739 00002E7C 7426                <1> 		je nocopycursorcache
  3740 00002E7E 66C1E104            <1> 		shl cx, 4
  3741 00002E82 66C1E203            <1> 		shl dx, 3
  3742 00002E86 01D6                <1> 		add esi, edx
  3743 00002E88 66BA0000            <1> 		mov dx, 0
  3744 00002E8C 8A15[F30C0000]      <1> 		mov dl, [charxy]
  3745 00002E92 6641                <1> 		inc cx
  3746                              <1> termmousecplp1:
  3747 00002E94 01D6                <1> 		add esi, edx
  3748 00002E96 6649                <1> 		dec cx
  3749 00002E98 6681F90000          <1> 		cmp cx, 0
  3750 00002E9D 75F5                <1> 		jne termmousecplp1
  3751 00002E9F 29D6                <1> 		sub esi, edx
  3752 00002EA1 668906              <1> 		mov [esi], ax
  3753                              <1> nocopycursorcache:
  3754 00002EA4 BE[8F1C0000]        <1> 		mov esi, videobuf2
  3755 00002EA9 BA00000000          <1> 		mov edx, 0
  3756 00002EAE 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  3757 00002EB5 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  3758 00002EBC 66C1E104            <1> 		shl cx, 4
  3759 00002EC0 66C1E203            <1> 		shl dx, 3
  3760 00002EC4 01D6                <1> 		add esi, edx
  3761 00002EC6 66BA0000            <1> 		mov dx, 0
  3762 00002ECA 8A15[F30C0000]      <1> 		mov dl, [charxy]
  3763 00002ED0 6641                <1> 		inc cx
  3764                              <1> termmousecplp2:
  3765 00002ED2 01D6                <1> 		add esi, edx
  3766 00002ED4 6649                <1> 		dec cx
  3767 00002ED6 6681F90000          <1> 		cmp cx, 0
  3768 00002EDB 75F5                <1> 		jne termmousecplp2
  3769 00002EDD 29D6                <1> 		sub esi, edx
  3770 00002EDF 668B06              <1> 		mov ax, [esi]
  3771 00002EE2 66A3[F52E0000]      <1> 		mov [cursorcache], ax
  3772 00002EE8 B080                <1> 		mov al, 128
  3773 00002EEA B407                <1> 		mov ah, 7
  3774 00002EEC 668906              <1> 		mov [esi], ax
  3775 00002EEF E829E3FFFF          <1> 		call termcopy
  3776 00002EF4 C3                  <1> 		ret
  3777 00002EF5 0000                <1> cursorcache db 0,0
  3778                              <1> 	
  3779                              <1> scancode:
  3780 00002EF7 0000                <1> 	db 0,0		;,0h
  3781 00002EF9 0000                <1> 	db 0,0		;,1h
  3782 00002EFB 3121                <1> 	db '1','!'	;,2h
  3783 00002EFD 3240                <1> 	db '2','@'	;,3h
  3784 00002EFF 3323                <1> 	db '3','#'	;,4h
  3785 00002F01 3424                <1> 	db '4','$'	;,5h
  3786 00002F03 3525                <1> 	db '5','%'	;,6h
  3787 00002F05 365E                <1> 	db '6','^'	;,7h
  3788 00002F07 3726                <1> 	db '7','&'	;,8h
  3789 00002F09 382A                <1> 	db '8','*'	;,9h
  3790 00002F0B 3928                <1> 	db '9','('	;,0Ah
  3791 00002F0D 3029                <1> 	db '0',')'	;,0Bh
  3792 00002F0F 2D5F                <1> 	db '-','_'	;,0Ch
  3793 00002F11 3D2B                <1> 	db '=','+'	;,0Dh
  3794 00002F13 0808                <1> 	db 8,8		;,0Eh
  3795 00002F15 0000                <1> 	db 0,0		;,0Fh
  3796 00002F17 7151                <1> 	db 'q','Q'	;,10h
  3797 00002F19 7757                <1> 	db 'w','W'	;,11h
  3798 00002F1B 6545                <1> 	db 'e','E'	;,12h
  3799 00002F1D 7252                <1> 	db 'r','R'	;,13h
  3800 00002F1F 7454                <1> 	db 't','T'	;,14h
  3801 00002F21 7959                <1> 	db 'y','Y'	;,15h
  3802 00002F23 7555                <1> 	db 'u','U'	;,16h
  3803 00002F25 6949                <1> 	db 'i','I'	;,17h
  3804 00002F27 6F4F                <1> 	db 'o','O'	;,18h
  3805 00002F29 7050                <1> 	db 'p','P'	;,19h
  3806 00002F2B 5B7B                <1> 	db '[','{'	;,1Ah
  3807 00002F2D 5D7D                <1> 	db ']','}'	;,1Bh
  3808 00002F2F 0000                <1> 	db 0,0		;,1Ch
  3809 00002F31 0000                <1> 	db 0,0		;,1Dh
  3810 00002F33 6141                <1> 	db 'a','A'	;,1Eh
  3811 00002F35 7353                <1> 	db 's','S'	;,1Fh
  3812 00002F37 6444                <1> 	db 'd','D'	;,20h
  3813 00002F39 6646                <1> 	db 'f','F'	;,21h
  3814 00002F3B 6747                <1> 	db 'g','G'	;,22h
  3815 00002F3D 6848                <1> 	db 'h','H'	;,23h
  3816 00002F3F 6A4A                <1> 	db 'j','J'	;,24h
  3817 00002F41 6B4B                <1> 	db 'k','K'	;,25h
  3818 00002F43 6C4C                <1> 	db 'l','L'	;,26h
  3819 00002F45 3B3A                <1> 	db ';',':'	;,27h
  3820 00002F47 2722                <1> 	db 27h,22h	;,28h
  3821 00002F49 607E                <1> 	db '`','~'	;,29h
  3822 00002F4B 0000                <1> 	db 0,0		;,2Ah
  3823 00002F4D 5C7C                <1> 	db '\','|'	;,2Bh
  3824 00002F4F 7A5A                <1> 	db 'z','Z'	;,2Ch
  3825 00002F51 7858                <1> 	db 'x','X'	;,2Dh
  3826 00002F53 6343                <1> 	db 'c','C'	;,2Eh
  3827 00002F55 7656                <1> 	db 'v','V'	;,2Fh
  3828 00002F57 6242                <1> 	db 'b','B'	;,30h
  3829 00002F59 6E4E                <1> 	db 'n','N'	;,31h
  3830 00002F5B 6D4D                <1> 	db 'm','M'	;,32h
  3831 00002F5D 2C3C                <1> 	db ',','<'	;,33h
  3832 00002F5F 2E3E                <1> 	db '.','>'	;,34h
  3833 00002F61 2F3F                <1> 	db '/','?'	;,35h
  3834 00002F63 0000                <1> 	db 0,0		;,36h
  3835 00002F65 0000                <1> 	db 0,0		;,37h
  3836 00002F67 0000                <1> 	db 0,0		;,38h
  3837 00002F69 2020                <1> 	db ' ',' '	;,39h
  3838                              <1> noscan:
  3839                                      %include 'source/gui.asm'
  3840                              <1> guiclear:
  3841 00002F6B 8B3D[E45C0000]      <1> 	mov edi, [physbaseptr]
  3842 00002F71 668B15[663F0000]    <1> 	mov dx, [resolutionx]
  3843 00002F78 668B0D[643F0000]    <1> 	mov cx, [resolutiony]
  3844 00002F7F 66A1[A82F0000]      <1> 	mov ax, [background]
  3845                              <1> guiclearloop:
  3846 00002F85 668907              <1> 	mov [edi], ax
  3847 00002F88 81C702000000        <1> 	add edi, 2
  3848 00002F8E 664A                <1> 	dec dx
  3849 00002F90 6681FA0000          <1> 	cmp dx, 0
  3850 00002F95 77EE                <1> 	ja guiclearloop
  3851 00002F97 6649                <1> 	dec cx
  3852 00002F99 668B15[663F0000]    <1> 	mov dx, [resolutionx]
  3853 00002FA0 6681F90000          <1> 	cmp cx, 0
  3854 00002FA5 77DE                <1> 	ja guiclearloop
  3855 00002FA7 C3                  <1> 	ret
  3856                              <1> 
  3857 00002FA8 CF7B                <1> background dw 0111101111001111b
  3858                              <1> 
  3859                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  3860 00002FAA B800000000          <1> 	mov eax, 0
  3861 00002FAF BB00000000          <1> 	mov ebx, 0
  3862 00002FB4 B900000000          <1> 	mov ecx, 0
  3863 00002FB9 BA00000000          <1> 	mov edx, 0
  3864 00002FBE 8B3D[E45C0000]      <1> 	mov edi, [physbaseptr]
  3865 00002FC4 668B15[663F0000]    <1> 	mov dx, [resolutionx]
  3866 00002FCB 668B0D[643F0000]    <1> 	mov cx, [resolutiony]
  3867 00002FD2 668B1D[A82F0000]    <1> 	mov bx, [background]
  3868                              <1> guiclearloop2:
  3869 00002FD9 66891F              <1> 	mov [edi], bx
  3870 00002FDC 81C702000000        <1> 	add edi, 2
  3871 00002FE2 664A                <1> 	dec dx
  3872 00002FE4 6681FA0000          <1> 	cmp dx, 0
  3873 00002FE9 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  3874 00002FEF 6649                <1> 	dec cx
  3875 00002FF1 668B15[663F0000]    <1> 	mov dx, [resolutionx]
  3876 00002FF8 6681F90000          <1> 	cmp cx, 0
  3877 00002FFD 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  3878 00003003 C605[04310000]01    <1> 	mov byte [guion], 1
  3879 0000300A C605[03310000]00    <1> 	mov byte [mouseselecton], 0
  3880 00003011 B800000000          <1> 	mov eax, 0
  3881 00003016 BB00000000          <1> 	mov ebx, 0
  3882 0000301B B900000000          <1> 	mov ecx, 0
  3883 00003020 BA00000000          <1> 	mov edx, 0
  3884                              <1> 	
  3885 00003025 BE[D5410000]        <1> 	mov esi, pacmsg
  3886 0000302A 66B80000            <1> 	mov ax, 0
  3887 0000302E BB00000000          <1> 	mov ebx, 0
  3888 00003033 66B99000            <1> 	mov cx, 144
  3889 00003037 66BA0400            <1> 	mov dx, 4
  3890 0000303B E88F0A0000          <1> 	call showstring
  3891                              <1> 	
  3892 00003040 BE[EB420000]        <1> 	mov esi, interneticon
  3893 00003045 66B80000            <1> 	mov ax, 0
  3894 00003049 BB[4A420000]        <1> 	mov ebx, noie
  3895 0000304E 66B91800            <1> 	mov cx, 24
  3896 00003052 66BA0400            <1> 	mov dx, 4
  3897 00003056 E8300E0000          <1> 	call showicon
  3898                              <1> 	
  3899 0000305B BE[6D430000]        <1> 	mov esi, wordicon
  3900 00003060 66B80000            <1> 	mov ax, 0
  3901 00003064 BB00000000          <1> 	mov ebx, 0
  3902 00003069 66B91800            <1> 	mov cx, 24
  3903 0000306D 66BA3000            <1> 	mov dx, 48
  3904 00003071 E8150E0000          <1> 	call showicon
  3905                              <1> 	
  3906 00003076 BE[EF430000]        <1> 	mov esi, pacmanpellet
  3907 0000307B 66B80000            <1> 	mov ax, 0
  3908 0000307F BB00000000          <1> 	mov ebx, 0
  3909 00003084 66B94000            <1> 	mov cx, 64
  3910 00003088 66BA0400            <1> 	mov dx, 4
  3911 0000308C E8FA0D0000          <1> 	call showicon
  3912                              <1> 	
  3913 00003091 BE[F3440000]        <1> 	mov esi, pacman
  3914 00003096 66B80000            <1> 	mov ax, 0
  3915 0000309A BB[2F420000]        <1> 	mov ebx, pacmannomnom
  3916 0000309F 66B94000            <1> 	mov cx, 64
  3917 000030A3 66BA3000            <1> 	mov dx, 48
  3918 000030A7 E8DF0D0000          <1> 	call showicon
  3919                              <1> 	
  3920 000030AC BE[71440000]        <1> 	mov esi, ghostie
  3921 000030B1 66B80000            <1> 	mov ax, 0
  3922 000030B5 BB[14420000]        <1> 	mov ebx, boo
  3923 000030BA 66B96C00            <1> 	mov cx, 108
  3924 000030BE 66BA0400            <1> 	mov dx, 4
  3925 000030C2 E8C40D0000          <1> 	call showicon
  3926                              <1> 
  3927 000030C7 BE[C1410000]        <1> 	mov esi, start
  3928 000030CC 668B0D[643F0000]    <1> 	mov cx, [resolutiony]
  3929 000030D3 6681E91000          <1> 	sub cx, 16
  3930 000030D8 66BA0200            <1> 	mov dx, 2
  3931 000030DC B400                <1> 	mov ah, 0
  3932 000030DE B010                <1> 	mov al, 00010000b
  3933 000030E0 BB[98420000]        <1> 	mov ebx, winblows
  3934 000030E5 E8E5090000          <1> 	call showstring
  3935                              <1> 	
  3936 000030EA E886FBFFFF          <1> 	call cursorgui
  3937                              <1> guistart:
  3938 000030EF E82BFAFFFF          <1> 	call guistartin
  3939 000030F4 C605[FD300000]00    <1> 	mov byte [copygui], 0
  3940 000030FB EBF2                <1> 	jmp guistart
  3941                              <1> 	
  3942                              <1> ;guicopy:	;;for double buffering
  3943                              <1> ;	mov byte [copygui], 1
  3944                              <1> ;	mov edi, [offscreenmemoffset]
  3945                              <1> ;	mov edx, 0
  3946                              <1> ;	mov ecx, 0
  3947                              <1> ;	mov dx, [mousecursorposition]
  3948                              <1> ;	mov cx, [mousecursorposition + 2]
  3949                              <1> ;	add edi, edx
  3950                              <1> ;	mov dx, [resolutionx2]
  3951                              <1> ;	inc cx
  3952                              <1> ;guicp2:
  3953                              <1> ;	add edi, edx
  3954                              <1> ;	dec cx
  3955                              <1> ;	cmp cx, 0
  3956                              <1> ;	jne guicp2
  3957                              <1> ;	sub edi, edx
  3958                              <1> ;	mov [cursorloc], edi
  3959                              <1> ;	mov ebx, cursorbmp
  3960                              <1> ;	mov cx, [resolutiony]
  3961                              <1> ;	rol ecx, 16
  3962                              <1> ;	mov cx, [resolutionx]
  3963                              <1> ;	mov esi, [physbaseptr]
  3964                              <1> ;	mov edi, [offscreenmemoffset]
  3965                              <1> ;guicp1:
  3966                              <1> ;	mov ax, [esi]
  3967                              <1> ;	mov [edi], ax
  3968                              <1> ;	add esi, 2
  3969                              <1> ;	add edi, 2
  3970                              <1> ;	cmp edi, [cursorloc]
  3971                              <1> ;	je copycursor
  3972                              <1> ;dncopycursor:
  3973                              <1> ;	dec cx
  3974                              <1> ;	cmp cx, 0
  3975                              <1> ;	jne guicp1
  3976                              <1> ;	mov cx, [resolutionx]
  3977                              <1> ;	rol ecx, 16
  3978                              <1> ;	dec cx
  3979                              <1> ;	cmp cx, 0
  3980                              <1> ;	rol ecx, 16
  3981                              <1> ;	jne guicp1
  3982                              <1> ;	mov byte [copygui], 0
  3983                              <1> ;	ret
  3984                              <1> ;copycursor:
  3985                              <1> ;	cmp ebx, cursorbmpend
  3986                              <1> ;	jae dncopycursor
  3987                              <1> ;	mov dx, [resolutionx2]
  3988                              <1> ;	add edi, edx
  3989                              <1> ;	mov [cursorloc], edi
  3990                              <1> ;	sub edi, edx
  3991                              <1> ;	dec ebx
  3992                              <1> ;	sub edi, 2
  3993                              <1> ;	sub esi, 2
  3994                              <1> ;	mov dx, 9
  3995                              <1> ;curscplp:
  3996                              <1> ;	inc ebx
  3997                              <1> ;	add esi, 2
  3998                              <1> ;	add edi, 2
  3999                              <1> ;	mov ax, [esi]
  4000                              <1> ;	mov [edi], ax
  4001                              <1> ;	mov al, [ebx]
  4002                              <1> ;	cmp al, 0
  4003                              <1> ;	je curscplp2
  4004                              <1> ;	mov word [edi], 1110011110011100b
  4005                              <1> ;curscplp2:
  4006                              <1> ;	dec cx
  4007                              <1> ;	cmp cx, 0
  4008                              <1> ;	je dncopycursor
  4009                              <1> ;	dec dx
  4010                              <1> ;	cmp dx, 0
  4011                              <1> ;	jne curscplp
  4012                              <1> ;	jmp dncopycursor
  4013                              <1> 	
  4014                              <1> 	
  4015                              <1> ;cursorloc: dd 0
  4016                              <1> 		
  4017                              <1> ;nextimage:	
  4018                              <1> ;	call guiclear
  4019                              <1> ;	mov esi, [bmpend]
  4020                              <1> ;	mov eax, 0
  4021                              <1> ;	mov ebx, 0
  4022                              <1> ;	mov ecx, 0
  4023                              <1> ;	mov edx, 0
  4024                              <1> ;	call showbmp
  4025                              <1> ;	jmp guistartin
  4026                              <1> 		
  4027 000030FD 00                  <1> copygui db 0
  4028 000030FE 00                  <1> graphicsset db 0
  4029 000030FF 0000                <1> graphicspos db 0,0
  4030 00003101 00                  <1> showcursorfonton db 0
  4031 00003102 00                  <1> savefonton db 0
  4032 00003103 00                  <1> mouseselecton db 0
  4033 00003104 00                  <1> guion db 0
  4034                              <1> 
  4035                              <1> 		
  4036                              <1> clearmousecursor:
  4037 00003105 BE[A82F0000]        <1> 		mov esi, background
  4038 0000310A 8B3D[E45C0000]      <1> 		mov edi, [physbaseptr]
  4039 00003110 BA00000000          <1> 		mov edx, 0
  4040 00003115 B900000000          <1> 		mov ecx, 0
  4041 0000311A 668B15[522E0000]    <1> 		mov dx, [lastmouseposition]
  4042 00003121 668B0D[542E0000]    <1> 		mov cx, [lastmouseposition + 2]
  4043 00003128 01D7                <1> 		add edi, edx
  4044 0000312A BA00000000          <1> 		mov edx, 0
  4045 0000312F 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4046 00003136 6681F90000          <1> 		cmp cx, 0
  4047 0000313B 740B                <1> 		je noyclr
  4048 0000313D 01D7                <1> yclr:	add edi, edx
  4049 0000313F 6649                <1> 		dec cx
  4050 00003141 6681F90000          <1> 		cmp cx, 0
  4051 00003146 75F5                <1> 		jne yclr
  4052 00003148 668B06              <1> noyclr:	mov ax, [esi]
  4053 0000314B C1C010              <1> 		rol eax, 16
  4054 0000314E 668B06              <1> 		mov ax, [esi]
  4055 00003151 8907                <1> 		mov [edi], eax
  4056 00003153 894704              <1> 		mov [edi + 4], eax
  4057 00003156 894708              <1> 		mov [edi + 8], eax
  4058 00003159 89470C              <1> 		mov [edi + 12], eax
  4059 0000315C 01D7                <1> 		add edi, edx
  4060 0000315E 6641                <1> 		inc cx
  4061 00003160 6681F91000          <1> 		cmp cx, 16
  4062 00003165 72E1                <1> 		jb noyclr
  4063 00003167 C3                  <1> 		ret
  4064                              <1> 
  4065                              <1> switchmousepos:		;;switch were the mouse is located
  4066 00003168 BE[00120000]        <1> 		mov esi, mousecolorbuf
  4067 0000316D 8B3D[E45C0000]      <1> 		mov edi, [physbaseptr]
  4068 00003173 BA00000000          <1> 		mov edx, 0
  4069 00003178 B900000000          <1> 		mov ecx, 0
  4070 0000317D 668B15[522E0000]    <1> 		mov dx, [lastmouseposition]
  4071 00003184 668B0D[542E0000]    <1> 		mov cx, [lastmouseposition + 2]
  4072 0000318B 01D7                <1> 		add edi, edx
  4073 0000318D BA00000000          <1> 		mov edx, 0
  4074 00003192 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4075 00003199 6681F90000          <1> 		cmp cx, 0
  4076 0000319E 740B                <1> 		je noswmsy
  4077 000031A0 01D7                <1> swmsy:		add edi, edx
  4078 000031A2 6649                <1> 		dec cx
  4079 000031A4 6681F90000          <1> 		cmp cx, 0
  4080 000031A9 75F5                <1> 		jne swmsy
  4081 000031AB 8B06                <1> noswmsy:	mov eax, [esi]
  4082 000031AD 8B5E04              <1> 		mov ebx, [esi + 4]
  4083 000031B0 8907                <1> 		mov [edi], eax
  4084 000031B2 895F04              <1> 		mov [edi + 4], ebx
  4085 000031B5 8B4608              <1> 		mov eax, [esi + 8]
  4086 000031B8 8B5E0C              <1> 		mov ebx, [esi + 12]
  4087 000031BB 894708              <1> 		mov [edi + 8], eax
  4088 000031BE 895F0C              <1> 		mov [edi + 12], ebx
  4089 000031C1 01D7                <1> 		add edi, edx
  4090 000031C3 81C610000000        <1> 		add esi, 16
  4091 000031C9 81FE[00130000]      <1> 		cmp esi, mcolorend
  4092 000031CF 72DA                <1> 		jb noswmsy
  4093                              <1> 		
  4094                              <1> switchmousepos2:
  4095 000031D1 BE[00120000]        <1> 		mov esi, mousecolorbuf
  4096 000031D6 8B3D[E45C0000]      <1> 		mov edi, [physbaseptr]
  4097 000031DC BA00000000          <1> 		mov edx, 0
  4098 000031E1 B900000000          <1> 		mov ecx, 0
  4099 000031E6 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  4100 000031ED 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4101 000031F4 01D7                <1> 		add edi, edx
  4102 000031F6 BA00000000          <1> 		mov edx, 0
  4103 000031FB 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4104 00003202 6681F90000          <1> 		cmp cx, 0
  4105 00003207 740B                <1> 		je noswmsy2
  4106 00003209 01D7                <1> swmsy2:		add edi, edx
  4107 0000320B 6649                <1> 		dec cx
  4108 0000320D 6681F90000          <1> 		cmp cx, 0
  4109 00003212 75F5                <1> 		jne swmsy2
  4110 00003214 8B07                <1> noswmsy2:	mov eax, [edi]
  4111 00003216 8B5F04              <1> 		mov ebx, [edi + 4]
  4112 00003219 8906                <1> 		mov [esi], eax
  4113 0000321B 895E04              <1> 		mov [esi + 4], ebx
  4114 0000321E 8B4708              <1> 		mov eax, [edi + 8]
  4115 00003221 8B5F0C              <1> 		mov ebx, [edi + 12]
  4116 00003224 894608              <1> 		mov [esi + 8], eax
  4117 00003227 895E0C              <1> 		mov [esi + 12], ebx
  4118 0000322A 01D7                <1> 		add edi, edx
  4119 0000322C 81C610000000        <1> 		add esi, 16
  4120 00003232 81FE[00130000]      <1> 		cmp esi, mcolorend
  4121 00003238 72DA                <1> 		jb noswmsy2
  4122 0000323A C3                  <1> 		ret
  4123                              <1> 
  4124 0000323B 00                  <1> pbutton db 0
  4125 0000323C 00                  <1> pLBUTTON db 0
  4126 0000323D 00                  <1> pRBUTTON db 0
  4127 0000323E 00000000            <1> dragging dw 0,0
  4128 00003242 0000000000000000    <1> lastpos dw 0,0,0,0
  4129 0000324A 00000000            <1> colorbuf dw 0,0
  4130                              <1> 	
  4131                              <1> 	clickicon:
  4132 0000324E B001                <1> 		mov al, 1
  4133 00003250 A2[3B320000]        <1> 		mov [pbutton], al
  4134 00003255 A0[3C320000]        <1> 		mov al, [pLBUTTON]
  4135 0000325A 2205[192B0000]      <1> 		and al, [LBUTTON]
  4136 00003260 8A25[3D320000]      <1> 		mov ah, [pRBUTTON]
  4137 00003266 2225[1A2B0000]      <1> 		and ah, [RBUTTON]
  4138 0000326C 08E0                <1> 		or al, ah
  4139 0000326E 3C00                <1> 		cmp al, 0
  4140 00003270 741B                <1> 		je nodragclick
  4141 00003272 813D[3E320000]0100- <1> 		cmp dword [dragging], 1
  4142 0000327A 0000                <1>
  4143 0000327C 732D                <1> 		jae dragclick
  4144 0000327E C705[3E320000]0100- <1> 		mov dword [dragging], 1
  4145 00003286 0000                <1>
  4146 00003288 E91E000000          <1> 		jmp dragclick
  4147                              <1> 	nodragclick:
  4148 0000328D C705[3E320000]0000- <1> 		mov dword [dragging], 0
  4149 00003295 0000                <1>
  4150 00003297 A0[192B0000]        <1> 		mov al, [LBUTTON]
  4151 0000329C A2[3C320000]        <1> 		mov [pLBUTTON], al
  4152 000032A1 A0[1A2B0000]        <1> 		mov al, [RBUTTON]
  4153 000032A6 A2[3D320000]        <1> 		mov [pRBUTTON], al
  4154                              <1> 	dragclick:
  4155 000032AB 66B80000            <1> 		mov ax, 0
  4156 000032AF BE[00100000]        <1> 		mov esi, graphicstable
  4157 000032B4 C705[0F420000]0000- <1> 		mov dword [codepointer], 0
  4158 000032BC 0000                <1>
  4159                              <1> 	clicon2:
  4160 000032BE BA00000000          <1> 		mov edx, 0
  4161 000032C3 B900000000          <1> 		mov ecx, 0
  4162 000032C8 66813E0100          <1> 		cmp word [esi], 1
  4163 000032CD 0F841B000000        <1> 		je near iconselect
  4164 000032D3 66813E0200          <1> 		cmp word [esi], 2
  4165 000032D8 0F8472010000        <1> 		je near textselected
  4166 000032DE 66813E0300          <1> 		cmp word [esi], 3
  4167 000032E3 0F84C7020000        <1> 		je near windowselect
  4168 000032E9 E90B040000          <1> 		jmp nexticonsel
  4169                              <1> 	iconselect:
  4170 000032EE 668B5606            <1> 		mov dx, [esi + 6]
  4171 000032F2 6689D0              <1> 		mov ax, dx
  4172 000032F5 668B4E08            <1> 		mov cx, [esi + 8]
  4173 000032F9 6689CB              <1> 		mov bx, cx
  4174 000032FC 6681C32000          <1> 		add bx, 32
  4175 00003301 6601D0              <1> 		add ax, dx
  4176 00003304 813D[3E320000]0100- <1> 		cmp dword [dragging], 1
  4177 0000330C 0000                <1>
  4178 0000330E 746F                <1> 		je dragicon
  4179 00003310 813D[3E320000]0000- <1> 		cmp dword [dragging], 0
  4180 00003318 0000                <1>
  4181 0000331A 7411                <1> 		je nodragiconcheck
  4182 0000331C 3935[3E320000]      <1> 		cmp dword [dragging], esi
  4183 00003322 0F85D1030000        <1> 		jne near nexticonsel
  4184 00003328 E952000000          <1> 		jmp dragicon
  4185                              <1> 	nodragiconcheck:
  4186 0000332D 663905[562E0000]    <1> 		cmp [mousecursorposition], ax
  4187 00003334 0F82BF030000        <1> 		jb near nexticonsel
  4188 0000333A 66054000            <1> 		add ax, 64
  4189 0000333E 663905[562E0000]    <1> 		cmp [mousecursorposition], ax
  4190 00003345 0F87AE030000        <1> 		ja near nexticonsel
  4191 0000334B 6629D0              <1> 		sub ax, dx
  4192 0000334E 66390D[582E0000]    <1> 		cmp [mousecursorposition + 2], cx
  4193 00003355 0F829E030000        <1> 		jb near nexticonsel
  4194 0000335B 66391D[582E0000]    <1> 		cmp [mousecursorposition + 2], bx
  4195 00003362 0F8791030000        <1> 		ja near nexticonsel
  4196 00003368 668B460A            <1> 		mov ax, [esi + 10]
  4197 0000336C 66250100            <1> 		and ax, 1
  4198 00003370 663D0100            <1> 		cmp ax, 1
  4199 00003374 0F84B6000000        <1> 		je near unselecticon
  4200 0000337A E98D000000          <1> 		jmp nodragicon
  4201                              <1> 	dragicon:
  4202 0000337F 663905[522E0000]    <1> 		cmp [lastmouseposition], ax
  4203 00003386 0F826D030000        <1> 		jb near nexticonsel
  4204 0000338C 66054000            <1> 		add ax, 64
  4205 00003390 663905[522E0000]    <1> 		cmp [lastmouseposition], ax
  4206 00003397 0F875C030000        <1> 		ja near nexticonsel
  4207 0000339D 6629D0              <1> 		sub ax, dx
  4208 000033A0 66390D[542E0000]    <1> 		cmp [lastmouseposition + 2], cx
  4209 000033A7 0F824C030000        <1> 		jb near nexticonsel
  4210 000033AD 66391D[542E0000]    <1> 		cmp [lastmouseposition + 2], bx
  4211 000033B4 0F873F030000        <1> 		ja near nexticonsel
  4212 000033BA 668B460A            <1> 		mov ax, [esi + 10]
  4213 000033BE 2410                <1> 		and al, 00010000b
  4214 000033C0 3C10                <1> 		cmp al, 00010000b
  4215 000033C2 7448                <1> 		je nodragicon
  4216 000033C4 8935[3E320000]      <1> 		mov [dragging], esi
  4217 000033CA 66D1E2              <1> 		shl dx, 1
  4218 000033CD 662B15[522E0000]    <1> 		sub dx, [lastmouseposition]
  4219 000033D4 660315[562E0000]    <1> 		add dx, [mousecursorposition]
  4220 000033DB 66D1EA              <1> 		shr dx, 1
  4221 000033DE 66030D[582E0000]    <1> 		add cx, [mousecursorposition + 2]
  4222 000033E5 662B0D[542E0000]    <1> 		sub cx, [lastmouseposition + 2]
  4223 000033EC 663B15[683F0000]    <1> 		cmp dx, [resolutionx2]
  4224 000033F3 7607                <1> 		jbe chkyresdrgicn
  4225 000033F5 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  4226                              <1> 	chkyresdrgicn:
  4227 000033FC 663B0D[643F0000]    <1> 		cmp cx, [resolutiony]
  4228 00003403 7607                <1> 		jbe nodragicon
  4229 00003405 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4230                              <1> 	nodragicon:
  4231 0000340C 66814E0A0100        <1> 		or word [esi + 10], 1
  4232 00003412 8B5E0C              <1> 		mov ebx, [esi + 12]
  4233 00003415 668B460A            <1> 		mov ax, [esi + 10]
  4234 00003419 8B7602              <1> 		mov esi, [esi + 2]
  4235 0000341C C705[0F420000]0000- <1> 		mov dword [codepointer], 0
  4236 00003424 0000                <1>
  4237 00003426 E8600A0000          <1> 		call showicon
  4238 0000342B E9E2020000          <1> 		jmp doneiconsel
  4239                              <1> 	unselecticon:
  4240 00003430 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4241 00003436 8B5E0C              <1> 		mov ebx, [esi + 12]
  4242 00003439 668B460A            <1> 		mov ax, [esi + 10]
  4243 0000343D 8B7602              <1> 		mov esi, [esi + 2]
  4244 00003440 891D[0F420000]      <1> 		mov [codepointer], ebx
  4245 00003446 E8400A0000          <1> 		call showicon
  4246 0000344B E9C2020000          <1> 		jmp doneiconsel
  4247                              <1> 	textselected:
  4248 00003450 8B5E02              <1> 		mov ebx, [esi + 2]
  4249 00003453 668B5606            <1> 		mov dx, [esi + 6]
  4250 00003457 6689D0              <1> 		mov ax, dx
  4251 0000345A 668B4E08            <1> 		mov cx, [esi + 8]
  4252                              <1> 	lengthtesttext:
  4253 0000345E 803B00              <1> 		cmp byte [ebx], 0
  4254 00003461 7407                <1> 		je donetesttextlength
  4255 00003463 43                  <1> 		inc ebx
  4256 00003464 66051000            <1> 		add ax, 16
  4257 00003468 EBF4                <1> 		jmp lengthtesttext
  4258                              <1> 	donetesttextlength:
  4259 0000346A 6689CB              <1> 		mov bx, cx
  4260 0000346D 6681C30F00          <1> 		add bx, 15
  4261 00003472 813D[3E320000]0100- <1> 		cmp dword [dragging], 1
  4262 0000347A 0000                <1>
  4263 0000347C 7468                <1> 		je dragtext
  4264 0000347E 813D[3E320000]0000- <1> 		cmp dword [dragging], 0
  4265 00003486 0000                <1>
  4266 00003488 7411                <1> 		je nodragtextcheck
  4267 0000348A 3935[3E320000]      <1> 		cmp dword [dragging], esi
  4268 00003490 0F8563020000        <1> 		jne near nexticonsel
  4269 00003496 E94B000000          <1> 		jmp dragtext
  4270                              <1> 	nodragtextcheck:
  4271 0000349B 663915[562E0000]    <1> 		cmp [mousecursorposition], dx
  4272 000034A2 0F8251020000        <1> 		jb near nexticonsel
  4273 000034A8 663905[562E0000]    <1> 		cmp [mousecursorposition], ax
  4274 000034AF 0F8744020000        <1> 		ja near nexticonsel
  4275 000034B5 66390D[582E0000]    <1> 		cmp [mousecursorposition + 2], cx
  4276 000034BC 0F8237020000        <1> 		jb near nexticonsel
  4277 000034C2 66391D[582E0000]    <1> 		cmp [mousecursorposition + 2], bx
  4278 000034C9 0F872A020000        <1> 		ja near nexticonsel
  4279 000034CF 668B460A            <1> 		mov ax, [esi + 10]
  4280 000034D3 66250100            <1> 		and ax, 1
  4281 000034D7 663D0100            <1> 		cmp ax, 1
  4282 000034DB 0F84AB000000        <1> 		je near unselecttext
  4283 000034E1 E986000000          <1> 		jmp nodragtext
  4284                              <1> 	dragtext:
  4285 000034E6 663915[522E0000]    <1> 		cmp [lastmouseposition], dx
  4286 000034ED 0F8206020000        <1> 		jb near nexticonsel
  4287 000034F3 663905[522E0000]    <1> 		cmp [lastmouseposition], ax
  4288 000034FA 0F87F9010000        <1> 		ja near nexticonsel
  4289 00003500 66390D[542E0000]    <1> 		cmp [lastmouseposition + 2], cx
  4290 00003507 0F82EC010000        <1> 		jb near nexticonsel
  4291 0000350D 66391D[542E0000]    <1> 		cmp [lastmouseposition + 2], bx
  4292 00003514 0F87DF010000        <1> 		ja near nexticonsel
  4293 0000351A 668B460A            <1> 		mov ax, [esi + 10]
  4294 0000351E 2410                <1> 		and al, 00010000b
  4295 00003520 663D1000            <1> 		cmp ax, 00010000b
  4296 00003524 0F8442000000        <1> 		je near nodragtext
  4297 0000352A 8935[3E320000]      <1> 		mov [dragging], esi
  4298 00003530 662B15[522E0000]    <1> 		sub dx, [lastmouseposition]
  4299 00003537 660315[562E0000]    <1> 		add dx, [mousecursorposition]
  4300 0000353E 66030D[582E0000]    <1> 		add cx, [mousecursorposition + 2]
  4301 00003545 662B0D[542E0000]    <1> 		sub cx, [lastmouseposition + 2]
  4302 0000354C 663B15[683F0000]    <1> 		cmp dx, [resolutionx2]
  4303 00003553 7607                <1> 		jbe chkyresdrgtxt
  4304 00003555 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  4305                              <1> 	chkyresdrgtxt:
  4306 0000355C 663B0D[643F0000]    <1> 		cmp cx, [resolutiony]
  4307 00003563 7607                <1> 		jbe nodragtext
  4308 00003565 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4309                              <1> 	nodragtext:
  4310 0000356C 66814E0A0100        <1> 		or word [esi + 10], 1
  4311 00003572 8B5E0C              <1> 		mov ebx, [esi + 12]
  4312 00003575 891D[0F420000]      <1> 		mov [codepointer], ebx
  4313 0000357B 668B460A            <1> 		mov ax, [esi + 10]
  4314 0000357F 8B7602              <1> 		mov esi, [esi + 2]
  4315 00003582 E848050000          <1> 		call showstring
  4316 00003587 E986010000          <1> 		jmp doneiconsel
  4317                              <1> 	unselecttext:
  4318 0000358C 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4319 00003592 8B5E0C              <1> 		mov ebx, [esi + 12]
  4320 00003595 668B460A            <1> 		mov ax, [esi + 10]
  4321 00003599 8B7602              <1> 		mov esi, [esi + 2]
  4322 0000359C C705[0F420000]0000- <1> 		mov dword [codepointer], 0
  4323 000035A4 0000                <1>
  4324 000035A6 E824050000          <1> 		call showstring
  4325 000035AB E962010000          <1> 		jmp doneiconsel
  4326                              <1> windowselect:
  4327 000035B0 8B7E02              <1> 		mov edi, [esi + 2]
  4328 000035B3 668B5606            <1> 		mov dx, [esi + 6]
  4329 000035B7 6689D0              <1> 		mov ax, dx
  4330 000035BA 668B4E08            <1> 		mov cx, [esi + 8]
  4331 000035BE 6689CB              <1> 		mov bx, cx
  4332 000035C1 6681C31000          <1> 		add bx, 16
  4333 000035C6 813D[3E320000]0100- <1> 		cmp dword [dragging], 1
  4334 000035CE 0000                <1>
  4335 000035D0 746D                <1> 		je dragwin
  4336 000035D2 813D[3E320000]0000- <1> 		cmp dword [dragging], 0
  4337 000035DA 0000                <1>
  4338 000035DC 7411                <1> 		je nodragwincheck
  4339 000035DE 3935[3E320000]      <1> 		cmp dword [dragging], esi
  4340 000035E4 0F850F010000        <1> 		jne near nexticonsel
  4341 000035EA E950000000          <1> 		jmp dragwin
  4342                              <1> 	nodragwincheck:
  4343 000035EF 663905[562E0000]    <1> 		cmp [mousecursorposition], ax
  4344 000035F6 0F82FD000000        <1> 		jb near nexticonsel
  4345 000035FC 660307              <1> 		add ax, [edi]
  4346 000035FF 660307              <1> 		add ax, [edi]
  4347 00003602 663905[562E0000]    <1> 		cmp [mousecursorposition], ax
  4348 00003609 0F87EA000000        <1> 		ja near nexticonsel
  4349 0000360F 66390D[582E0000]    <1> 		cmp [mousecursorposition + 2], cx
  4350 00003616 0F82DD000000        <1> 		jb near nexticonsel
  4351 0000361C 66391D[582E0000]    <1> 		cmp [mousecursorposition + 2], bx
  4352 00003623 0F87D0000000        <1> 		ja near nexticonsel
  4353 00003629 662D1400            <1> 		sub ax, 20
  4354 0000362D 663905[562E0000]    <1> 		cmp [mousecursorposition], ax
  4355 00003634 0F8795000000        <1> 		ja near killwin
  4356 0000363A E97C000000          <1> 		jmp nodragwin
  4357                              <1> 	dragwin:
  4358 0000363F 663905[522E0000]    <1> 		cmp [lastmouseposition], ax
  4359 00003646 0F82AD000000        <1> 		jb near nexticonsel
  4360 0000364C 660307              <1> 		add ax, [edi]
  4361 0000364F 660307              <1> 		add ax, [edi]
  4362 00003652 663905[522E0000]    <1> 		cmp [lastmouseposition], ax
  4363 00003659 0F879A000000        <1> 		ja near nexticonsel
  4364 0000365F 66390D[542E0000]    <1> 		cmp [lastmouseposition + 2], cx
  4365 00003666 0F828D000000        <1> 		jb near nexticonsel
  4366 0000366C 66391D[542E0000]    <1> 		cmp [lastmouseposition + 2], bx
  4367 00003673 0F8780000000        <1> 		ja near nexticonsel
  4368 00003679 8935[3E320000]      <1> 		mov [dragging], esi
  4369 0000367F 662B15[522E0000]    <1> 		sub dx, [lastmouseposition]
  4370 00003686 660315[562E0000]    <1> 		add dx, [mousecursorposition]
  4371 0000368D 66030D[582E0000]    <1> 		add cx, [mousecursorposition + 2]
  4372 00003694 662B0D[542E0000]    <1> 		sub cx, [lastmouseposition + 2]
  4373 0000369B 663B15[683F0000]    <1> 		cmp dx, [resolutionx2]
  4374 000036A2 7607                <1> 		jbe chkyresdrgwin
  4375 000036A4 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  4376                              <1> 	chkyresdrgwin:
  4377 000036AB 663B0D[643F0000]    <1> 		cmp cx, [resolutiony]
  4378 000036B2 7607                <1> 		jbe nodragwin
  4379 000036B4 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4380                              <1> 	nodragwin:
  4381 000036BB 8B5E0C              <1> 		mov ebx, [esi + 12]
  4382 000036BE 668B460A            <1> 		mov ax, [esi + 10]
  4383 000036C2 8B7602              <1> 		mov esi, [esi + 2]
  4384 000036C5 E85B040000          <1> 		call showwindow
  4385 000036CA E943000000          <1> 		jmp doneiconsel
  4386                              <1> 	killwin:
  4387 000036CF 66C7060000          <1> 		mov word [esi], 0
  4388 000036D4 C705[EC030000]0000- <1> 		mov dword [user2codepoint], 0
  4389 000036DC 0000                <1>
  4390 000036DE C605[010D0000]00    <1> 		mov byte [termguion], 0
  4391 000036E5 E881F8FFFF          <1> 		call guiclear
  4392 000036EA E899000000          <1> 		call reloadallgraphics
  4393 000036EF E9FBF9FFFF          <1> 		jmp guistart
  4394 000036F4 E93A000000          <1> 		jmp doneiconsel2
  4395                              <1> 	nexticonsel:
  4396 000036F9 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4397 000036FF 81C610000000        <1> 		add esi, 16
  4398 00003705 81FE[00120000]      <1> 		cmp esi, graphicstableend
  4399 0000370B 7305                <1> 		jae doneiconsel
  4400 0000370D E9ACFBFFFF          <1> 		jmp clicon2
  4401                              <1> 	doneiconsel:
  4402 00003712 813D[3E320000]0100- <1> 		cmp dword [dragging], 1
  4403 0000371A 0000                <1>
  4404 0000371C 7315                <1> 		jae doneiconsel2
  4405 0000371E 813D[0F420000]0000- <1> 		cmp dword [codepointer], 0
  4406 00003726 0000                <1>
  4407 00003728 7409                <1> 		je doneiconsel2
  4408 0000372A 8B1D[0F420000]      <1> 		mov ebx, [codepointer]
  4409 00003730 FFD3                <1> 		call ebx 
  4410 00003732 C3                  <1> 		ret
  4411                              <1> 	doneiconsel2:
  4412 00003733 A0[192B0000]        <1> 		mov al, [LBUTTON]
  4413 00003738 A2[3C320000]        <1> 		mov [pLBUTTON], al
  4414 0000373D A0[1A2B0000]        <1> 		mov al, [RBUTTON]
  4415 00003742 A2[3D320000]        <1> 		mov [pRBUTTON], al
  4416 00003747 E83C000000          <1> call reloadallgraphics
  4417 0000374C B900000000          <1> 		mov ecx, 0
  4418 00003751 BA00000000          <1> 		mov edx, 0
  4419 00003756 B400                <1> 		mov ah, 0
  4420 00003758 B080                <1> 		mov al, 128
  4421 0000375A 668B15[562E0000]    <1> 		mov dx, [mousecursorposition]
  4422 00003761 668B0D[582E0000]    <1> 		mov cx, [mousecursorposition + 2]
  4423 00003768 66BBE738            <1> 		mov bx, 0011100011100111b
  4424 0000376C C605[01310000]01    <1> 		mov byte [showcursorfonton], 1
  4425 00003773 E800080000          <1> 		call showfontvesa
  4426 00003778 C605[01310000]00    <1> 		mov byte [showcursorfonton], 0
  4427 0000377F C3                  <1> 		ret
  4428 00003780 00000000            <1> lastdrag dw 0,0
  4429 00003784 00000000            <1> grpctblpos dw 0,0
  4430                              <1> 
  4431                              <1> reloadallgraphics:
  4432 00003788 BF[00100000]        <1> 		mov edi, graphicstable
  4433                              <1> reloadgraphicsloop:
  4434 0000378D 8B7702              <1> 		mov esi, [edi + 2]
  4435 00003790 668B5706            <1> 		mov dx, [edi + 6]
  4436 00003794 668B4F08            <1> 		mov cx, [edi + 8]
  4437 00003798 668B07              <1> 		mov ax, [edi]
  4438 0000379B 668B5F0A            <1> 		mov bx, [edi + 10]
  4439 0000379F 893D[84370000]      <1> 		mov [grpctblpos], edi
  4440 000037A5 3B3D[3E320000]      <1> 		cmp edi, [dragging]
  4441 000037AB 741E                <1> 		je loadedgraphic
  4442 000037AD 663D0100            <1> 		cmp ax, 1
  4443 000037B1 0F8431000000        <1> 		je near icongraphic
  4444 000037B7 663D0200            <1> 		cmp ax, 2
  4445 000037BB 0F8437000000        <1> 		je near stringgraphic
  4446 000037C1 663D0300            <1> 		cmp ax, 3
  4447 000037C5 0F8416000000        <1> 		je near windowgraphic
  4448 000037CB 8B3D[84370000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  4449 000037D1 81C710000000        <1> 		add edi, 16
  4450 000037D7 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4451 000037DD 7329                <1> 		jae donereloadgraphics
  4452 000037DF EBAC                <1> 		jmp reloadgraphicsloop
  4453 000037E1 E892030000          <1> windowgraphic:	call showwindow2
  4454 000037E6 EBE3                <1> 		jmp loadedgraphic
  4455 000037E8 80E301              <1> icongraphic:	and bl, 1
  4456 000037EB 881D[13420000]      <1> 		mov [iconselected], bl
  4457 000037F1 E8A8060000          <1> 		call showicon2
  4458 000037F6 EBD3                <1> 		jmp loadedgraphic
  4459 000037F8 80E301              <1> stringgraphic:  and bl, 1
  4460 000037FB 881D[03310000]      <1> 		mov [mouseselecton], bl
  4461 00003801 E8DC020000          <1> 		call showstring2
  4462 00003806 EBC3                <1> 		jmp loadedgraphic
  4463                              <1> donereloadgraphics:
  4464 00003808 8B3D[3E320000]      <1> 		mov edi, [dragging]
  4465 0000380E 81FF[00100000]      <1> 		cmp edi, graphicstable
  4466 00003814 7226                <1> 		jb notcorrectdrag
  4467 00003816 668B07              <1> 		mov ax, [edi]
  4468 00003819 8B7702              <1> 		mov esi, [edi + 2]
  4469 0000381C 668B5706            <1> 		mov dx, [edi + 6]
  4470 00003820 668B4F08            <1> 		mov cx, [edi + 8]
  4471 00003824 668B5F0A            <1> 		mov bx, [edi + 10]
  4472 00003828 663D0100            <1> 		cmp ax, 1
  4473 0000382C 750F                <1> 		jne noticondragging
  4474 0000382E 80E301              <1> 		and bl, 1
  4475 00003831 881D[13420000]      <1> 		mov [iconselected], bl
  4476 00003837 E862060000          <1> 		call showicon2
  4477                              <1> notcorrectdrag:
  4478 0000383C C3                  <1> 		ret
  4479                              <1> 
  4480                              <1> 	noticondragging:
  4481 0000383D 663D0200            <1> 		cmp ax, 2
  4482 00003841 75F9                <1> 		jne notcorrectdrag
  4483 00003843 80E301              <1> 		and bl, 1
  4484 00003846 881D[03310000]      <1> 		mov [mouseselecton], bl
  4485 0000384C E891020000          <1> 		call showstring2
  4486 00003851 EBE9                <1> 		jmp notcorrectdrag
  4487                              <1> 
  4488 00003853 00<rept>            <1> grphbuf times 16 db 0
  4489                              <1> 	graphicsadd:
  4490 00003863 BF[00100000]        <1> 		mov edi, graphicstable
  4491                              <1> 	shwgrph1:
  4492 00003868 397702              <1> 		cmp dword [edi + 2], esi
  4493 0000386B 7414                <1> 		je showgraphicsreplace2
  4494 0000386D 81C710000000        <1> 		add edi, 16
  4495 00003873 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4496 00003879 0F8335020000        <1> 		jae near showgraphicsnew
  4497 0000387F EBE7                <1> 		jmp shwgrph1
  4498                              <1> 	showgraphicsreplace2:
  4499 00003881 8935[55380000]      <1> 		mov [grphbuf + 2], esi
  4500 00003887 668915[59380000]    <1> 		mov [grphbuf + 6], dx
  4501 0000388E 66890D[5B380000]    <1> 		mov [grphbuf + 8], cx
  4502 00003895 891D[5F380000]      <1> 		mov [grphbuf + 12], ebx
  4503 0000389B B700                <1> 		mov bh, 0
  4504 0000389D 88E3                <1> 		mov bl, ah
  4505 0000389F B400                <1> 		mov ah, 0
  4506 000038A1 66A3[5D380000]      <1> 		mov [grphbuf + 10], ax	
  4507 000038A7 66891D[53380000]    <1> 		mov [grphbuf], bx
  4508 000038AE 66A1[53380000]      <1> 		mov ax, [grphbuf]
  4509 000038B4 663D0100            <1> 		cmp ax, 1
  4510 000038B8 0F8419000000        <1> 		je near replaceicon
  4511 000038BE 663D0200            <1> 		cmp ax, 2
  4512 000038C2 0F8493000000        <1> 		je near replacestring
  4513 000038C8 663D0300            <1> 		cmp ax, 3
  4514 000038CC 0F840F010000        <1> 		je near replacewindow
  4515 000038D2 E9BA010000          <1> 		jmp showgraphicsreplace
  4516                              <1> 	replaceicon:
  4517 000038D7 893D[42320000]      <1> 		mov [lastpos], edi
  4518 000038DD 8935[46320000]      <1> 		mov [lastpos + 4], esi
  4519 000038E3 8B7702              <1> 		mov esi, [edi + 2]
  4520 000038E6 668B5F0C            <1> 		mov bx, [edi + 12]
  4521 000038EA 668B5706            <1> 		mov dx, [edi + 6]
  4522 000038EE 668B4F08            <1> 		mov cx, [edi + 8]
  4523 000038F2 668B06              <1> 		mov ax, [esi]
  4524 000038F5 66A3[4A320000]      <1> 		mov [colorbuf], ax
  4525 000038FB 66A1[A82F0000]      <1> 		mov ax, [background]
  4526 00003901 668906              <1> 		mov [esi], ax
  4527 00003904 8B5F0C              <1> 		mov ebx, [edi + 12]
  4528 00003907 668B470A            <1> 		mov ax, [edi + 10]
  4529 0000390B 2401                <1> 		and al, 1
  4530 0000390D A2[13420000]        <1> 		mov [iconselected], al
  4531 00003912 668B470A            <1> 		mov ax, [edi + 10]
  4532 00003916 E883050000          <1> 		call showicon2
  4533 0000391B 8B3D[42320000]      <1> 		mov edi, [lastpos]
  4534 00003921 8B7702              <1> 		mov esi, [edi + 2]
  4535 00003924 66A1[4A320000]      <1> 		mov ax, [colorbuf]
  4536 0000392A 668906              <1> 		mov [esi], ax
  4537 0000392D 8B35[46320000]      <1> 		mov esi, [lastpos + 4]
  4538 00003933 668B15[59380000]    <1> 		mov dx, [grphbuf + 6]
  4539 0000393A 668B0D[5B380000]    <1> 		mov cx, [grphbuf + 8]
  4540 00003941 668B1D[53380000]    <1> 		mov bx, [grphbuf]
  4541 00003948 66A1[5D380000]      <1> 		mov ax, [grphbuf + 10]
  4542 0000394E 88DC                <1> 		mov ah, bl
  4543 00003950 8B1D[5F380000]      <1> 		mov ebx, [grphbuf + 12]
  4544 00003956 E936010000          <1> 		jmp showgraphicsreplace
  4545                              <1> 	replacestring:
  4546 0000395B 893D[42320000]      <1> 		mov [lastpos], edi
  4547 00003961 8935[46320000]      <1> 		mov [lastpos + 4], esi
  4548 00003967 8B5F0C              <1> 		mov ebx, [edi + 12]
  4549 0000396A 8B7702              <1> 		mov esi, [edi + 2]
  4550 0000396D 668B5706            <1> 		mov dx, [edi + 6]
  4551 00003971 668B4F08            <1> 		mov cx, [edi + 8]
  4552 00003975 66A1[123B0000]      <1> 		mov ax, [colorfont2]
  4553 0000397B 66A3[4A320000]      <1> 		mov [colorbuf], ax
  4554 00003981 66A1[A82F0000]      <1> 		mov ax, [background]
  4555 00003987 66A3[123B0000]      <1> 		mov [colorfont2], ax		
  4556 0000398D 8B5F0C              <1> 		mov ebx, [edi + 12]
  4557 00003990 668B470A            <1> 		mov ax, [edi + 10]
  4558 00003994 2401                <1> 		and al, 1
  4559 00003996 A2[03310000]        <1> 		mov [mouseselecton], al
  4560 0000399B 668B470A            <1> 		mov ax, [edi + 10]
  4561 0000399F E83E010000          <1> 		call showstring2
  4562 000039A4 66A1[4A320000]      <1> 		mov ax, [colorbuf]
  4563 000039AA 66A3[123B0000]      <1> 		mov [colorfont2], ax
  4564 000039B0 8B3D[42320000]      <1> 		mov edi, [lastpos]
  4565 000039B6 8B7702              <1> 		mov esi, [edi + 2]
  4566 000039B9 668B15[59380000]    <1> 		mov dx, [grphbuf + 6]
  4567 000039C0 668B0D[5B380000]    <1> 		mov cx, [grphbuf + 8]
  4568 000039C7 668B1D[53380000]    <1> 		mov bx, [grphbuf]
  4569 000039CE 66A1[5D380000]      <1> 		mov ax, [grphbuf + 10]
  4570 000039D4 88DC                <1> 		mov ah, bl
  4571 000039D6 8B1D[5F380000]      <1> 		mov ebx, [grphbuf + 12]
  4572 000039DC E9B0000000          <1> 		jmp showgraphicsreplace
  4573                              <1> 	replacewindow:
  4574 000039E1 893D[42320000]      <1> 		mov [lastpos], edi
  4575 000039E7 8935[46320000]      <1> 		mov [lastpos + 4], esi
  4576 000039ED 8B7702              <1> 		mov esi, [edi + 2]
  4577 000039F0 8B3D[213B0000]      <1> 		mov edi, [windowbufloc]
  4578 000039F6 BA00000000          <1> 		mov edx, 0
  4579 000039FB 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4580 00003A02 C1E204              <1> 		shl edx, 4
  4581 00003A05 29D7                <1> 		sub edi, edx
  4582 00003A07 BA00000000          <1> 		mov edx, 0
  4583 00003A0C 668B16              <1> 		mov dx, [esi]
  4584 00003A0F 660316              <1> 		add dx, [esi]
  4585 00003A12 668B4E02            <1> 		mov cx, [esi + 2]
  4586 00003A16 6681C11000          <1> 		add cx, 16
  4587 00003A1B 66A1[A82F0000]      <1> 		mov ax, [background]
  4588                              <1> 	clearwindow:
  4589 00003A21 668907              <1> 		mov [edi], ax
  4590 00003A24 81C702000000        <1> 		add edi, 2
  4591 00003A2A 81EA02000000        <1> 		sub edx, 2
  4592 00003A30 81FA00000000        <1> 		cmp edx, 0
  4593 00003A36 75E9                <1> 		jne clearwindow
  4594 00003A38 6649                <1> 		dec cx
  4595 00003A3A 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4596 00003A41 662B16              <1> 		sub dx, [esi]
  4597 00003A44 662B16              <1> 		sub dx, [esi]
  4598 00003A47 01D7                <1> 		add edi, edx
  4599 00003A49 668B16              <1> 		mov dx, [esi]
  4600 00003A4C 660316              <1> 		add dx, [esi]
  4601 00003A4F 6681F90000          <1> 		cmp cx, 0
  4602 00003A54 75CB                <1> 		jne clearwindow
  4603 00003A56 C605[020D0000]00    <1> 		mov byte [termcopyon], 0
  4604 00003A5D 8B3D[42320000]      <1> 		mov edi, [lastpos]
  4605 00003A63 8B35[55380000]      <1> 		mov esi, [grphbuf + 2]
  4606 00003A69 668B15[59380000]    <1> 		mov dx, [grphbuf + 6]
  4607 00003A70 668B0D[5B380000]    <1> 		mov cx, [grphbuf + 8]
  4608 00003A77 668B1D[53380000]    <1> 		mov bx, [grphbuf]
  4609 00003A7E 66A1[5D380000]      <1> 		mov ax, [grphbuf + 10]
  4610 00003A84 88DC                <1> 		mov ah, bl
  4611 00003A86 8B1D[5F380000]      <1> 		mov ebx, [grphbuf + 12]
  4612 00003A8C E900000000          <1> 		jmp showgraphicsreplace
  4613                              <1> 	showgraphicsreplace:
  4614 00003A91 897702              <1> 		mov [edi + 2], esi
  4615 00003A94 66895706            <1> 		mov [edi + 6], dx
  4616 00003A98 66894F08            <1> 		mov [edi + 8], cx
  4617 00003A9C 895F0C              <1> 		mov [edi + 12], ebx
  4618 00003A9F B700                <1> 		mov bh, 0
  4619 00003AA1 88E3                <1> 		mov bl, ah
  4620 00003AA3 B400                <1> 		mov ah, 0
  4621 00003AA5 6689470A            <1> 		mov [edi + 10], ax
  4622 00003AA9 66891F              <1> 		mov [edi], bx
  4623 00003AAC 8B5F0C              <1> 		mov ebx, [edi + 12]
  4624 00003AAF 668B470A            <1> 		mov ax, [edi + 10]
  4625 00003AB3 C3                  <1> 		ret
  4626                              <1> 	showgraphicsnew:
  4627 00003AB4 BF[00100000]        <1> 		mov edi, graphicstable
  4628                              <1> 	shwgrph2:
  4629 00003AB9 66813F0000          <1> 		cmp word [edi], 0
  4630 00003ABE 74D1                <1> 		je showgraphicsreplace
  4631 00003AC0 81C710000000        <1> 		add edi, 16
  4632 00003AC6 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4633 00003ACC 72EB                <1> 		jb shwgrph2
  4634                              <1> 	showgraphicsdone:
  4635 00003ACE C3                  <1> 		ret
  4636                              <1> 
  4637                              <1> 	showstring:
  4638 00003ACF A2[03310000]        <1> 		mov [mouseselecton], al
  4639 00003AD4 8025[03310000]01    <1> 		and byte [mouseselecton], 1
  4640 00003ADB B402                <1> 		mov ah, 2
  4641 00003ADD E881FDFFFF          <1> 		call graphicsadd
  4642                              <1> 	showstring2:
  4643 00003AE2 B400                <1> 		mov ah, 0
  4644 00003AE4 8A06                <1> 		mov al, [esi]
  4645 00003AE6 3C00                <1> 		cmp al, 0
  4646 00003AE8 7420                <1> 		je doneshowstring
  4647 00003AEA 46                  <1> 		inc esi
  4648 00003AEB 8935[BC410000]      <1> 		mov [showstringesi], esi
  4649 00003AF1 668B1D[123B0000]    <1> 		mov bx, [colorfont2]
  4650 00003AF8 E87B040000          <1> 		call showfontvesa
  4651 00003AFD 6681C20800          <1> 		add dx, 8
  4652 00003B02 8B35[BC410000]      <1> 		mov esi, [showstringesi]
  4653 00003B08 EBD8                <1> 		jmp showstring2
  4654                              <1> 	doneshowstring:
  4655 00003B0A C605[03310000]00    <1> 		mov byte [mouseselecton], 0
  4656 00003B11 C3                  <1> 		ret
  4657                              <1> 
  4658 00003B12 FFFF                <1> colorfont2 dw 0xFFFF
  4659 00003B14 00                  <1> colorcache db 0
  4660 00003B15 0000                <1> winvcopystx dw 0
  4661 00003B17 0000                <1> winvcopysty dw 0
  4662 00003B19 0000                <1> winvcopydx dw 0
  4663 00003B1B 0000                <1> winvcopycx dw 0
  4664 00003B1D FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4665 00003B21 00000000            <1> windowbufloc: dw 0,0
  4666                              <1> 
  4667                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4668 00003B25 C605[010D0000]01    <1> 		mov byte [termguion], 1
  4669 00003B2C 6681C11000          <1> 		add cx, 16
  4670 00003B31 668915[153B0000]    <1> 		mov [winvcopystx], dx
  4671 00003B38 66890D[173B0000]    <1> 		mov [winvcopysty], cx
  4672 00003B3F 668B16              <1> 		mov dx, [esi]
  4673 00003B42 668B4E02            <1> 		mov cx, [esi + 2]
  4674 00003B46 6601D2              <1> 		add dx, dx
  4675 00003B49 668915[193B0000]    <1> 		mov [winvcopydx], dx
  4676 00003B50 66890D[1B3B0000]    <1> 		mov [winvcopycx], cx
  4677 00003B57 668B0D[173B0000]    <1> 		mov cx, [winvcopysty]
  4678 00003B5E 6681E91000          <1> 		sub cx, 16
  4679 00003B63 668B15[153B0000]    <1> 		mov dx, [winvcopystx]
  4680 00003B6A C605[020D0000]00    <1> 		mov byte [termcopyon], 0
  4681 00003B71 B403                <1> 		mov ah, 3
  4682 00003B73 E8EBFCFFFF          <1> 		call graphicsadd
  4683                              <1> 	showwindow2:
  4684 00003B78 6681C11000          <1> 		add cx, 16
  4685 00003B7D 668915[153B0000]    <1> 		mov [winvcopystx], dx
  4686 00003B84 66890D[173B0000]    <1> 		mov [winvcopysty], cx
  4687 00003B8B 668B16              <1> 		mov dx, [esi]
  4688 00003B8E 668B4E02            <1> 		mov cx, [esi + 2]
  4689 00003B92 6601D2              <1> 		add dx, dx
  4690 00003B95 668915[193B0000]    <1> 		mov [winvcopydx], dx
  4691 00003B9C 66890D[1B3B0000]    <1> 		mov [winvcopycx], cx
  4692 00003BA3 8B3D[213B0000]      <1> 		mov edi, [windowbufloc]
  4693 00003BA9 BA00000000          <1> 		mov edx, 0
  4694 00003BAE 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4695 00003BB5 C1E204              <1> 		shl edx, 4
  4696 00003BB8 29D7                <1> 		sub edi, edx
  4697 00003BBA 803D[020D0000]00    <1> 		cmp byte [termcopyon], 0
  4698 00003BC1 753E                <1> 		jne nocleartitlebarpos
  4699 00003BC3 8B3D[E45C0000]      <1> 		mov edi, [physbaseptr]
  4700 00003BC9 BA00000000          <1> 		mov edx, 0
  4701 00003BCE 668B15[153B0000]    <1> 		mov dx, [winvcopystx]
  4702 00003BD5 01D7                <1> 		add edi, edx
  4703 00003BD7 668B0D[173B0000]    <1> 		mov cx, [winvcopysty]
  4704 00003BDE 6681E91000          <1> 		sub cx, 16
  4705 00003BE3 6681F90000          <1> 		cmp cx, 0
  4706 00003BE8 7417                <1> 		je nocleartitlebarpos
  4707                              <1> 	cleartitlebarpos:
  4708 00003BEA BA00000000          <1> 		mov edx, 0
  4709 00003BEF 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4710 00003BF6 01D7                <1> 		add edi, edx
  4711 00003BF8 6649                <1> 		dec cx
  4712 00003BFA 6681F90000          <1> 		cmp cx, 0
  4713 00003BFF 75E9                <1> 		jne cleartitlebarpos
  4714                              <1> 	nocleartitlebarpos:
  4715 00003C01 66B91000            <1> 		mov cx, 16
  4716 00003C05 668B15[193B0000]    <1> 		mov dx, [winvcopydx]
  4717 00003C0C 6681F90000          <1> 		cmp cx, 0
  4718 00003C11 0F844B000000        <1> 		je near canceltitlebarput
  4719 00003C17 6681FA0000          <1> 		cmp dx, 0
  4720 00003C1C 0F8440000000        <1> 		je near canceltitlebarput
  4721                              <1> 	titlebarput:
  4722 00003C22 66A1[1D3B0000]      <1> 		mov ax, [windowcolor]
  4723 00003C28 668907              <1> 		mov [edi], ax
  4724 00003C2B 6681EA0200          <1> 		sub dx, 2
  4725 00003C30 81C702000000        <1> 		add edi, 2
  4726 00003C36 6681FA0000          <1> 		cmp dx, 0
  4727 00003C3B 75E5                <1> 		jne titlebarput
  4728 00003C3D BA00000000          <1> 		mov edx, 0
  4729 00003C42 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4730 00003C49 6649                <1> 		dec cx
  4731 00003C4B 662B15[193B0000]    <1> 		sub dx, [winvcopydx]
  4732 00003C52 01D7                <1> 		add edi, edx
  4733 00003C54 668B15[193B0000]    <1> 		mov dx, [winvcopydx]
  4734 00003C5B 6681F90000          <1> 		cmp cx, 0
  4735 00003C60 75C0                <1> 		jne titlebarput
  4736                              <1> 	canceltitlebarput:
  4737 00003C62 893D[213B0000]      <1> 		mov [windowbufloc], edi
  4738 00003C68 803D[020D0000]02    <1> 		cmp byte [termcopyon], 2
  4739 00003C6F 0F8463000000        <1> 		je near winvcpst
  4740 00003C75 66B80000            <1> 		mov ax, 0
  4741 00003C79 81C604000000        <1> 		add esi, 4
  4742 00003C7F 668B15[153B0000]    <1> 		mov dx, [winvcopystx]
  4743 00003C86 668B0D[173B0000]    <1> 		mov cx, [winvcopysty]
  4744 00003C8D 6681E91000          <1> 		sub cx, 16
  4745 00003C92 66BB0000            <1> 		mov bx, 0
  4746 00003C96 C605[03310000]01    <1> 		mov byte [mouseselecton], 1
  4747 00003C9D E840FEFFFF          <1> 		call showstring2
  4748 00003CA2 B058                <1> 		mov al, "X"
  4749 00003CA4 B400                <1> 		mov ah, 0
  4750 00003CA6 668B1D[123B0000]    <1> 		mov bx, [colorfont2]
  4751 00003CAD 668B15[153B0000]    <1> 		mov dx, [winvcopystx]
  4752 00003CB4 668B0D[173B0000]    <1> 		mov cx, [winvcopysty]
  4753 00003CBB 6681E91000          <1> 		sub cx, 16
  4754 00003CC0 6681EA1400          <1> 		sub dx, 20
  4755 00003CC5 660315[193B0000]    <1> 		add dx, [winvcopydx]
  4756 00003CCC C605[03310000]01    <1> 		mov byte [mouseselecton], 1
  4757 00003CD3 E8A0020000          <1> 		call showfontvesa
  4758                              <1> 	winvcpst:
  4759 00003CD8 8B3D[213B0000]      <1> 		mov edi, [windowbufloc]
  4760 00003CDE E957000000          <1> 		jmp windowvideocopyset
  4761                              <1> 
  4762                              <1> 	windowvideocopy:
  4763 00003CE3 8B3D[213B0000]      <1> 		mov edi, [windowbufloc]
  4764 00003CE9 3B3D[E45C0000]      <1> 		cmp edi, [physbaseptr]
  4765 00003CEF 0F8345000000        <1> 		jae near windowvideocopyset
  4766 00003CF5 B900000000          <1> 		mov ecx, 0
  4767 00003CFA BA00000000          <1> 		mov edx, 0
  4768 00003CFF 668B15[153B0000]    <1> 		mov dx, [winvcopystx]
  4769 00003D06 668B0D[173B0000]    <1> 		mov cx, [winvcopysty]
  4770 00003D0D 8B3D[E45C0000]      <1> 		mov edi, [physbaseptr]
  4771 00003D13 01D7                <1> 		add edi, edx
  4772 00003D15 81F900000000        <1> 		cmp ecx, 0
  4773 00003D1B 741D                <1> 		je windowvideocopyset
  4774                              <1> 	yrescopylp:
  4775 00003D1D BA00000000          <1> 		mov edx, 0
  4776 00003D22 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4777 00003D29 01D7                <1> 		add edi, edx
  4778 00003D2B 6649                <1> 		dec cx
  4779 00003D2D 6681F90000          <1> 		cmp cx, 0
  4780 00003D32 75E9                <1> 		jne yrescopylp
  4781 00003D34 893D[213B0000]      <1> 		mov [windowbufloc], edi
  4782                              <1> 	windowvideocopyset:
  4783 00003D3A 66B90000            <1> 		mov cx, 0
  4784 00003D3E 66890D[833E0000]    <1> 		mov [charposline], cx
  4785 00003D45 BE[8F1C0000]        <1> 		mov esi, videobuf2
  4786 00003D4A 8935[853E0000]      <1> 		mov [charposvbuf], esi
  4787 00003D50 8A5E01              <1> 		mov bl, [esi + 1]
  4788 00003D53 881D[143B0000]      <1> 		mov [colorcache], bl
  4789 00003D59 8A1E                <1> 		mov bl, [esi]
  4790 00003D5B B700                <1> 		mov bh, 0
  4791 00003D5D 66C1E304            <1> 		shl bx, 4
  4792 00003D61 678AB7[9C52]        <1> 		mov dh, [fonts + bx]
  4793 00003D66 D0CE                <1> 		ror dh, 1
  4794 00003D68 89FE                <1> 		mov esi, edi
  4795                              <1> 	copywindow:
  4796 00003D6A B201                <1> 		mov dl, 1
  4797 00003D6C D0C6                <1> 		rol dh, 1
  4798 00003D6E 20F2                <1> 		and dl, dh
  4799 00003D70 803D[143B0000]10    <1> 		cmp byte [colorcache], 0x10
  4800 00003D77 731C                <1> 		jae switchwincolors
  4801 00003D79 66A1[1F3B0000]      <1> 		mov ax, [windowcolor + 2]
  4802 00003D7F 668907              <1> 		mov [edi], ax
  4803 00003D82 80FA00              <1> 		cmp dl, 0
  4804 00003D85 7425                <1> 		je nowritewin
  4805 00003D87 66A1[1D3B0000]      <1> 		mov ax, [windowcolor]
  4806 00003D8D 668907              <1> 		mov [edi], ax
  4807 00003D90 E917000000          <1> 		jmp nowritewin
  4808                              <1> 	switchwincolors:
  4809 00003D95 66A1[1D3B0000]      <1> 		mov ax, [windowcolor]
  4810 00003D9B 668907              <1> 		mov [edi], ax
  4811 00003D9E 80FA00              <1> 		cmp dl, 0
  4812 00003DA1 7409                <1> 		je nowritewin
  4813 00003DA3 66A1[1F3B0000]      <1> 		mov ax, [windowcolor + 2]
  4814 00003DA9 668907              <1> 		mov [edi], ax
  4815                              <1> 	nowritewin:
  4816 00003DAC 81C702000000        <1> 		add edi, 2
  4817 00003DB2 FEC1                <1> 		inc cl
  4818 00003DB4 80F908              <1> 		cmp cl, 8
  4819 00003DB7 75B1                <1> 		jne copywindow
  4820 00003DB9 6643                <1> 		inc bx
  4821 00003DBB B100                <1> 		mov cl, 0
  4822 00003DBD BA00000000          <1> 		mov edx, 0
  4823 00003DC2 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4824 00003DC9 01D6                <1> 		add esi, edx
  4825 00003DCB 89F7                <1> 		mov edi, esi
  4826 00003DCD 678AB7[9C52]        <1> 		mov dh, [fonts + bx]
  4827 00003DD2 D0CE                <1> 		ror dh, 1
  4828 00003DD4 FEC5                <1> 		inc ch
  4829 00003DD6 80FD10              <1> 		cmp ch, 16
  4830 00003DD9 758F                <1> 		jne copywindow
  4831 00003DDB 66B90000            <1> 		mov cx, 0
  4832 00003DDF 8B3D[853E0000]      <1> 		mov edi, [charposvbuf]
  4833 00003DE5 81C702000000        <1> 		add edi, 2
  4834 00003DEB 81FF[4F2F0000]      <1> 		cmp edi, videobufend
  4835 00003DF1 7379                <1> 		jae donewincopynow
  4836 00003DF3 8A5F01              <1> 		mov bl, [edi + 1]
  4837 00003DF6 881D[143B0000]      <1> 		mov [colorcache], bl
  4838 00003DFC 8A1F                <1> 		mov bl, [edi]
  4839 00003DFE B700                <1> 		mov bh, 0
  4840 00003E00 66C1E304            <1> 		shl bx, 4
  4841 00003E04 893D[853E0000]      <1> 		mov [charposvbuf], edi
  4842 00003E0A BA00000000          <1> 		mov edx, 0
  4843 00003E0F 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4844 00003E16 C1E204              <1> 		shl edx, 4
  4845 00003E19 29D6                <1> 		sub esi, edx
  4846 00003E1B 81C610000000        <1> 		add esi, 16
  4847 00003E21 89F7                <1> 		mov edi, esi
  4848 00003E23 668B0D[833E0000]    <1> 		mov cx, [charposline]
  4849 00003E2A 6641                <1> 		inc cx
  4850 00003E2C 6681F95000          <1> 		cmp cx, 80
  4851 00003E31 7317                <1> 		jae fixwindowcopy
  4852 00003E33 66890D[833E0000]    <1> 		mov [charposline], cx
  4853 00003E3A 66B90000            <1> 		mov cx, 0
  4854 00003E3E 678AB7[9C52]        <1> 		mov dh, [fonts + bx]
  4855 00003E43 D0CE                <1> 		ror dh, 1
  4856 00003E45 E920FFFFFF          <1> 		jmp copywindow
  4857                              <1> fixwindowcopy:
  4858 00003E4A 66B90000            <1> 		mov cx, 0
  4859 00003E4E 66890D[833E0000]    <1> 		mov [charposline], cx
  4860 00003E55 662B15[193B0000]    <1> 		sub dx, [winvcopydx]
  4861 00003E5C 01D6                <1> 		add esi, edx
  4862 00003E5E 89F7                <1> 		mov edi, esi
  4863 00003E60 678AB7[9C52]        <1> 		mov dh, [fonts + bx]
  4864 00003E65 D0CE                <1> 		ror dh, 1
  4865 00003E67 E9FEFEFFFF          <1> 		jmp copywindow
  4866                              <1> donewincopynow:
  4867 00003E6C E88BD4FFFF          <1> 		call switchtermcursor
  4868 00003E71 803D[020D0000]01    <1> 		cmp byte [termcopyon], 1
  4869 00003E78 7501                <1> 		jne forgetresetstuff
  4870 00003E7A 61                  <1> 		popa
  4871                              <1> forgetresetstuff:
  4872 00003E7B C605[020D0000]00    <1> 		mov byte [termcopyon], 0
  4873 00003E82 C3                  <1> 		ret
  4874                              <1> 
  4875 00003E83 0000                <1> charposline dw 0
  4876 00003E85 00000000            <1> charposvbuf dw 0,0
  4877 00003E89 0000                <1> iconcolor dw 0
  4878                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  4879 00003E8B A2[13420000]        <1> 		mov [iconselected], al
  4880 00003E90 8025[13420000]01    <1> 		and byte [iconselected], 1
  4881 00003E97 B401                <1> 		mov ah, 1
  4882 00003E99 E8C5F9FFFF          <1> 		call graphicsadd
  4883                              <1> 	showicon2:
  4884 00003E9E 8B3D[E45C0000]      <1> 		mov edi, [physbaseptr]
  4885 00003EA4 6601D2              <1> 		add dx, dx
  4886 00003EA7 663B15[683F0000]    <1> 		cmp dx, [resolutionx2]
  4887 00003EAE 720C                <1> 		jb screenxgood
  4888 00003EB0 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4889 00003EB7 6681EA4000          <1> 		sub dx, 64
  4890                              <1> 	screenxgood:
  4891 00003EBC 6681F90000          <1> 		cmp cx, 0
  4892 00003EC1 7425                <1> 		je noscreenygoodchk
  4893 00003EC3 663B0D[643F0000]    <1> 		cmp cx, [resolutiony]
  4894 00003ECA 720C                <1> 		jb screenygood
  4895 00003ECC 668B0D[643F0000]    <1> 		mov cx, [resolutiony]
  4896 00003ED3 6681E92000          <1> 		sub cx, 32
  4897                              <1> 	screenygood:
  4898 00003ED8 BB00000000          <1> 		mov ebx, 0
  4899 00003EDD 668B1D[683F0000]    <1> 		mov bx, [resolutionx2]
  4900 00003EE4 01DF                <1> 		add edi, ebx
  4901 00003EE6 E2F0                <1> 		loop screenygood
  4902                              <1> 	noscreenygoodchk:
  4903 00003EE8 BB00000000          <1> 		mov ebx, 0
  4904 00003EED 6689D3              <1> 		mov bx, dx
  4905 00003EF0 01DF                <1> 		add edi, ebx
  4906 00003EF2 66B90000            <1> 		mov cx, 0
  4907 00003EF6 668B06              <1> 		mov ax, [esi]
  4908 00003EF9 81C602000000        <1> 		add esi, 2
  4909 00003EFF 66A3[893E0000]      <1> 		mov [iconcolor], ax
  4910                              <1> 	writeicon:
  4911 00003F05 8B06                <1> 		mov eax, [esi]
  4912 00003F07 D1C0                <1> 		rol eax, 1
  4913 00003F09 B100                <1> 		mov cl, 0
  4914                              <1> 	writeiconline:
  4915 00003F0B B201                <1> 		mov dl, 1
  4916 00003F0D 20C2                <1> 		and dl, al
  4917 00003F0F 3215[13420000]      <1> 		xor dl, [iconselected]
  4918 00003F15 668B1D[A82F0000]    <1> 		mov bx, [background]
  4919 00003F1C 66891F              <1> 		mov [edi], bx
  4920 00003F1F 80FA00              <1> 		cmp dl, 0
  4921 00003F22 740A                <1> 		je noiconline
  4922 00003F24 668B15[893E0000]    <1> 		mov dx, [iconcolor]
  4923 00003F2B 668917              <1> 		mov [edi], dx
  4924                              <1> 	noiconline:
  4925 00003F2E 81C702000000        <1> 		add edi, 2
  4926 00003F34 D1C0                <1> 		rol eax, 1
  4927 00003F36 FEC1                <1> 		inc cl
  4928 00003F38 80F920              <1> 		cmp cl, 32
  4929 00003F3B 72CE                <1> 		jb writeiconline
  4930 00003F3D 81C604000000        <1> 		add esi, 4
  4931 00003F43 FEC5                <1> 		inc ch
  4932 00003F45 BA00000000          <1> 		mov edx, 0
  4933 00003F4A 668B15[683F0000]    <1> 		mov dx, [resolutionx2]
  4934 00003F51 01D7                <1> 		add edi, edx
  4935 00003F53 81EF40000000        <1> 		sub edi, 64
  4936 00003F59 80FD20              <1> 		cmp ch, 32
  4937 00003F5C 72A7                <1> 		jb writeicon
  4938 00003F5E B800000000          <1> 		mov eax, 0
  4939 00003F63 C3                  <1> 		ret
  4940                              <1> 
  4941 00003F64 0000                <1> resolutiony dw 0
  4942 00003F66 0000                <1> resolutionx dw 0
  4943 00003F68 0000                <1> resolutionx2 dw 0
  4944 00003F6A 02                  <1> resolutionbytes db 2
  4945 00003F6B 0000                <1> posxvesa dw 0
  4946 00003F6D 0000                <1> posyvesa dw 0
  4947 00003F6F FFFF                <1> colorfont dw 0xFFFF
  4948                              <1> savefontvesa:		;;same rules as showfontvesa
  4949 00003F71 C605[02310000]01    <1> 	mov byte [savefonton], 1
  4950                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  4951 00003F78 66890D[6D3F0000]    <1> 	mov [posyvesa], cx
  4952 00003F7F 668915[6B3F0000]    <1> 	mov [posxvesa], dx
  4953 00003F86 8B3D[E45C0000]      <1> 	mov edi, [physbaseptr]
  4954 00003F8C 66891D[6F3F0000]    <1> 	mov [colorfont], bx
  4955 00003F93 BB00000000          <1> 	mov ebx, 0
  4956 00003F98 88C3                <1> 	mov bl, al
  4957 00003F9A B800000000          <1> 	mov eax, 0
  4958 00003F9F 88D8                <1> 	mov al, bl
  4959 00003FA1 6689D3              <1> 	mov bx, dx
  4960 00003FA4 89DA                <1> 	mov edx, ebx
  4961 00003FA6 BB00000000          <1> 	mov ebx, 0
  4962 00003FAB 6681F90000          <1> 	cmp cx, 0
  4963 00003FB0 7415                <1> 	je vesaposloopdn
  4964 00003FB2 668B1D[683F0000]    <1> 	mov bx, [resolutionx2]
  4965                              <1> vesaposloop:
  4966 00003FB9 01DA                <1> 	add edx, ebx
  4967 00003FBB 6681E90100          <1> 	sub cx, 1
  4968 00003FC0 6681F90000          <1> 	cmp cx, 0
  4969 00003FC5 75F2                <1> 	jne vesaposloop
  4970                              <1> vesaposloopdn:
  4971 00003FC7 01D7                <1> 	add edi, edx
  4972 00003FC9 BE[9C520000]        <1> 	mov esi, fonts
  4973                              <1> findfontvesa:
  4974 00003FCE B400                <1> 	mov ah, 0
  4975 00003FD0 C1E004              <1> 	shl eax, 4
  4976 00003FD3 01C6                <1> 	add esi, eax
  4977 00003FD5 C1E804              <1> 	shr eax, 4
  4978 00003FD8 81FE[BC5A0000]      <1> 	cmp esi, fontend
  4979 00003FDE 0F83BF000000        <1> 	jae near donefontvesa
  4980 00003FE4 4E                  <1> 	dec esi
  4981                              <1> foundfontvesa:
  4982 00003FE5 46                  <1> 	inc esi
  4983 00003FE6 803D[02310000]01    <1> 	cmp byte [savefonton], 1
  4984 00003FED 0F84E1000000        <1> 	je near vesafontsaver
  4985 00003FF3 B100                <1> 	mov cl, 0
  4986 00003FF5 8A06                <1> 	mov al, [esi]
  4987 00003FF7 668B15[683F0000]    <1> 	mov dx, [resolutionx2]
  4988 00003FFE 662B15[6B3F0000]    <1> 	sub dx, [posxvesa]
  4989 00004005 6681FA1000          <1> 	cmp dx, 16
  4990 0000400A 7708                <1> 	ja paintfontvesa
  4991 0000400C D0EA                <1> 	shr dl, 1
  4992 0000400E 8815[D3400000]      <1> 	mov [charwidth], dl
  4993                              <1> paintfontvesa:
  4994 00004014 B201                <1> 	mov dl, 1
  4995 00004016 20C2                <1> 	and dl, al
  4996 00004018 803D[01310000]01    <1> 	cmp byte [showcursorfonton], 1
  4997 0000401F 0F8435000000        <1> 	je near nodelpaintedfont
  4998 00004025 803D[01310000]02    <1> 	cmp byte [showcursorfonton], 2
  4999 0000402C 0F8518000000        <1> 	jne near noswitchcursorfonton
  5000 00004032 80FA00              <1> 	cmp dl, 0
  5001 00004035 0F842E000000        <1> 	je near nopixelset
  5002 0000403B 668B1D[6F3F0000]    <1> 	mov bx, [colorfont]
  5003 00004042 66891F              <1> 	mov [edi], bx
  5004 00004045 E91F000000          <1> 	jmp nopixelset
  5005                              <1> noswitchcursorfonton:
  5006 0000404A 3215[03310000]      <1> 	xor dl, [mouseselecton]
  5007 00004050 668B1D[A82F0000]    <1> 	mov bx, [background]
  5008 00004057 66891F              <1> 	mov [edi], bx
  5009                              <1> nodelpaintedfont:
  5010 0000405A 80FA00              <1> 	cmp dl, 0
  5011 0000405D 740A                <1> 	je nopixelset
  5012 0000405F 668B15[6F3F0000]    <1> 	mov dx, [colorfont]
  5013 00004066 668917              <1> 	mov [edi], dx
  5014                              <1> nopixelset:
  5015 00004069 81C702000000        <1> 	add edi, 2
  5016 0000406F D0C0                <1> 	rol al, 1
  5017 00004071 FEC1                <1> 	inc cl
  5018 00004073 3A0D[D3400000]      <1> 	cmp cl, [charwidth]
  5019 00004079 7299                <1> 	jb paintfontvesa
  5020 0000407B FEC5                <1> 	inc ch
  5021 0000407D BA00000000          <1> 	mov edx, 0
  5022 00004082 668B15[683F0000]    <1> 	mov dx, [resolutionx2]
  5023 00004089 01D7                <1> 	add edi, edx
  5024 0000408B BA00000000          <1> 	mov edx, 0
  5025 00004090 8A15[D3400000]      <1> 	mov dl, [charwidth]
  5026 00004096 00D2                <1> 	add dl, dl
  5027 00004098 29D7                <1> 	sub edi, edx
  5028 0000409A 80FD10              <1> 	cmp ch, 16
  5029 0000409D 0F8242FFFFFF        <1> 	jb foundfontvesa
  5030                              <1> donefontvesa:
  5031 000040A3 B208                <1> 	mov dl, 8
  5032 000040A5 8815[D3400000]      <1> 	mov [charwidth], dl
  5033 000040AB 668B15[6B3F0000]    <1> 	mov dx, [posxvesa]
  5034 000040B2 8A1D[D3400000]      <1> 	mov bl, [charwidth]
  5035 000040B8 B700                <1> 	mov bh, 0
  5036 000040BA 6601DA              <1> 	add dx, bx
  5037 000040BD 668B1D[6F3F0000]    <1> 	mov bx, [colorfont]
  5038 000040C4 668B0D[6D3F0000]    <1> 	mov cx, [posyvesa]
  5039 000040CB C605[02310000]00    <1> 	mov byte [savefonton], 0
  5040 000040D2 C3                  <1> 	ret
  5041 000040D3 08                  <1> charwidth db 8
  5042                              <1> vesafontsaver:
  5043 000040D4 B000                <1> 	mov al, 0
  5044 000040D6 B100                <1> 	mov cl, 0
  5045                              <1> vesafontsaver2:
  5046 000040D8 668B17              <1> 	mov dx, [edi]
  5047 000040DB 663B15[6F3F0000]    <1> 	cmp dx, [colorfont]
  5048 000040E2 742F                <1> 	je colorfontmatch
  5049                              <1> donecolormatch:
  5050 000040E4 81C702000000        <1> 	add edi, 2
  5051 000040EA D0C0                <1> 	rol al, 1
  5052 000040EC FEC1                <1> 	inc cl
  5053 000040EE 80F908              <1> 	cmp cl, 8
  5054 000040F1 72E5                <1> 	jb vesafontsaver2
  5055 000040F3 8806                <1> 	mov [esi], al
  5056 000040F5 46                  <1> 	inc esi
  5057 000040F6 FEC5                <1> 	inc ch
  5058 000040F8 BA00000000          <1> 	mov edx, 0
  5059 000040FD 668B15[683F0000]    <1> 	mov dx, [resolutionx2]
  5060 00004104 01D7                <1> 	add edi, edx
  5061 00004106 81EF10000000        <1> 	sub edi, 16
  5062 0000410C 80FD10              <1> 	cmp ch, 16
  5063 0000410F 72C3                <1> 	jb vesafontsaver
  5064 00004111 EB90                <1> 	jmp donefontvesa
  5065                              <1> colorfontmatch:
  5066 00004113 0401                <1> 	add al, 1
  5067 00004115 EBCD                <1> 	jmp donecolormatch
  5068                              <1> 	
  5069                              <1> showbmp:
  5070 00004117 668B06              <1> 	mov ax, [esi]
  5071 0000411A 663D424D            <1> 	cmp ax, "BM"
  5072 0000411E 0F858E000000        <1> 	jne near endedbmp
  5073 00004124 8B3D[E45C0000]      <1> 	mov edi, [physbaseptr]
  5074 0000412A 6689D0              <1> 	mov ax, dx
  5075 0000412D 6689CB              <1> 	mov bx, cx
  5076 00004130 B900000000          <1> 	mov ecx, 0
  5077 00004135 BA00000000          <1> 	mov edx, 0
  5078 0000413A 6689D9              <1> 	mov cx, bx
  5079 0000413D 6689C2              <1> 	mov dx, ax
  5080 00004140 01D7                <1> 	add edi, edx
  5081 00004142 01D7                <1> 	add edi, edx
  5082 00004144 BA00000000          <1> 	mov edx, 0
  5083 00004149 668B15[683F0000]    <1> 	mov dx, [resolutionx2]
  5084 00004150 41                  <1> 	inc ecx
  5085 00004151 034E16              <1> 	add ecx, [esi + 22]
  5086                              <1> bmplocloop:
  5087 00004154 01D7                <1> 	add edi, edx
  5088 00004156 E2FC                <1> 	loop bmplocloop
  5089 00004158 29D7                <1> 	sub edi, edx
  5090 0000415A 8B5612              <1> 	mov edx, [esi + 18]
  5091 0000415D 8B4E16              <1> 	mov ecx, [esi + 22]
  5092 00004160 8B460A              <1> 	mov eax, [esi + 10]
  5093 00004163 8B5E02              <1> 	mov ebx, [esi + 2]
  5094 00004166 01F3                <1> 	add ebx, esi
  5095 00004168 891D[B8410000]      <1> 	mov [bmpend], ebx
  5096 0000416E 89D3                <1> 	mov ebx, edx
  5097 00004170 01C6                <1> 	add esi, eax
  5098                              <1> ldxbmp:
  5099 00004172 668B06              <1> 	mov ax, [esi]
  5100 00004175 668907              <1> 	mov [edi], ax
  5101 00004178 81C702000000        <1> 	add edi, 2
  5102 0000417E 81C602000000        <1> 	add esi, 2
  5103 00004184 3B35[B8410000]      <1> 	cmp esi, [bmpend]
  5104 0000418A 7726                <1> 	ja endedbmp
  5105 0000418C 4A                  <1> 	dec edx
  5106 0000418D 81FA00000000        <1> 	cmp edx, 0
  5107 00004193 77DD                <1> 	ja ldxbmp
  5108 00004195 BA00000000          <1> 	mov edx, 0
  5109 0000419A 668B15[683F0000]    <1> 	mov dx, [resolutionx2]
  5110 000041A1 29DF                <1> 	sub edi, ebx
  5111 000041A3 29DF                <1> 	sub edi, ebx
  5112 000041A5 29D7                <1> 	sub edi, edx
  5113 000041A7 49                  <1> 	dec ecx
  5114 000041A8 89DA                <1> 	mov edx, ebx
  5115 000041AA 81F900000000        <1> 	cmp ecx, 0
  5116 000041B0 77C0                <1> 	ja ldxbmp
  5117                              <1> endedbmp:
  5118 000041B2 E81AF0FFFF          <1> 	call switchmousepos2
  5119 000041B7 C3                  <1> 	ret
  5120                              <1> 	
  5121 000041B8 00000000            <1> 	bmpend dd 0
  5122                              <1> 
  5123                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5124 000041BC 00000000            <1> 	showstringesi dw 0,0
  5125 000041C0 00                  <1> 	mouseon db 0
  5126 000041C1 737461727400        <1> 	start	db "start",0
  5127 000041C7 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  5128 000041D0 426F6F2100          <1> 	boomsg db "Boo!",0
  5129 000041D5 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  5130 000041DE 73206561737920746F- <1>
  5131 000041E7 20647261772E00      <1>
  5132 000041EE 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  5133 000041F7 6D206E6F6D00        <1>
  5134 000041FD 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  5135 00004206 75636B7300          <1>
  5136 0000420B 5800                <1> 	xmsg db "X",0
  5137 0000420D 0000                <1> 	icon dw 0	;pointer to icon
  5138 0000420F 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  5139 00004213 00                  <1> 	iconselected db 0
  5140                              <1> 	
  5141                              <1> 	boo:
  5142 00004214 BE[D0410000]        <1> 		mov esi, boomsg
  5143 00004219 66BA6400            <1> 		mov dx, 100
  5144 0000421D 66B94001            <1> 		mov cx, 320
  5145 00004221 BB00000000          <1> 		mov ebx, 0
  5146 00004226 66B80000            <1> 		mov ax, 0
  5147 0000422A E9A0F8FFFF          <1> 		jmp showstring
  5148                              <1> 
  5149                              <1> 	pacmannomnom:
  5150 0000422F BE[EE410000]        <1> 		mov esi, pacnom
  5151 00004234 66BA8200            <1> 		mov dx, 130
  5152 00004238 66B93C00            <1> 		mov cx, 60
  5153 0000423C BB00000000          <1> 		mov ebx, 0
  5154 00004241 66B80000            <1> 		mov ax, 0
  5155 00004245 E985F8FFFF          <1> 		jmp showstring	
  5156                              <1> 	
  5157                              <1> 	noie:
  5158 0000424A BE[DE420000]        <1> 		mov esi, termwindow
  5159 0000424F 66BA0000            <1> 		mov dx, 0
  5160 00004253 66B90000            <1> 		mov cx, 0
  5161 00004257 BB[21130000]        <1> 		mov ebx, os
  5162                              <1> ;;		mov ebx, internettest
  5163 0000425C 891D[EC030000]      <1> 		mov [user2codepoint], ebx
  5164 00004262 66B80000            <1> 		mov ax, 0
  5165 00004266 E8BAF8FFFF          <1> 		call showwindow
  5166                              <1> ;;		jmp internettest
  5167 0000426B E9B1D0FFFF          <1> 		jmp os
  5168 00004270 C3                  <1> 		ret
  5169                              <1> 
  5170                              <1> 	gotomenuboot:
  5171 00004271 BE[DE420000]        <1> 		mov esi, termwindow
  5172 00004276 66BA0000            <1> 		mov dx, 0
  5173 0000427A 66B90000            <1> 		mov cx, 0
  5174 0000427E BB[21130000]        <1> 		mov ebx, os
  5175 00004283 891D[EC030000]      <1> 		mov [user2codepoint], ebx
  5176 00004289 66B80000            <1> 		mov ax, 0
  5177 0000428D E893F8FFFF          <1> 		call showwindow
  5178 00004292 E98AD0FFFF          <1> 		jmp os
  5179 00004297 C3                  <1> 		ret
  5180                              <1> 
  5181                              <1> 	winblows:
  5182 00004298 BE[FD410000]        <1> 		mov esi, winmsg
  5183 0000429D 66BA0000            <1> 		mov dx, 0
  5184 000042A1 668B0D[643F0000]    <1> 		mov cx, [resolutiony]
  5185 000042A8 6681E92000          <1> 		sub cx, 32
  5186 000042AD BB00000000          <1> 		mov ebx, 0
  5187 000042B2 B400                <1> 		mov ah, 0
  5188 000042B4 B011                <1> 		mov al, 00010001b
  5189 000042B6 E814F8FFFF          <1> 		call showstring
  5190 000042BB BE[C7410000]        <1> 		mov esi, gotomenu
  5191 000042C0 668B0D[643F0000]    <1> 		mov cx, [resolutiony]
  5192 000042C7 6681E93000          <1> 		sub cx, 48
  5193 000042CC 66BA0000            <1> 		mov dx, 0
  5194 000042D0 B400                <1> 		mov ah, 0
  5195 000042D2 B010                <1> 		mov al, 00010000b
  5196 000042D4 BB[71420000]        <1> 		mov ebx, gotomenuboot
  5197 000042D9 E9F1F7FFFF          <1> 		jmp showstring
  5198                              <1> 
  5199 000042DE 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  5200 000042E2 5465726D696E616C00  <1> 	termmsg:	db "Terminal",0	;;window title
  5201                              <1> 	
  5202 000042E2 <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  5203 000042E2 <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  5204 000042E2 <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  5205 000042E2 <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  5206 000042E2 <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  5207                                      ;%include 'source/network.asm'
  5208                                  	%include 'source/rtl8139.asm'
  5209                              <1> ;;rtl8139.asm
  5210                              <1> initcard:	;;should find card, get mac, and initialize card
  5211 00004575 B800000000          <1> 	mov eax, 0
  5212 0000457A A2[AF480000]        <1> 	mov [pcifunction], al
  5213 0000457F A2[AD480000]        <1> 	mov [pcibus], al
  5214 00004584 A2[AE480000]        <1> 	mov [pcidevice], al
  5215 00004589 B002                <1> 	mov al, 0x02 ;;type code
  5216 0000458B A2[32490000]        <1> 	mov [pcitype], al
  5217 00004590 E81D030000          <1> 	call getpciport
  5218                              <1> initnic:		;;;;Here i tried the rtl8139 interface, fuck it
  5219 00004595 8915[84470000]      <1> 	mov [basenicaddr], edx
  5220 0000459B 89D1                <1> 	mov ecx, edx
  5221 0000459D C605[66180000]03    <1> 	mov byte [firsthexshown], 3
  5222 000045A4 E8D2D2FFFF          <1> 	call showhex	;;for debugging, please remove
  5223 000045A9 BE[1F340000]        <1> 	mov esi, rbuffstart
  5224 000045AE B900200000          <1> 	mov ecx, 8192
  5225 000045B3 B800000000          <1> 	mov eax, 0
  5226                              <1> clearrbuff:		;;clear receive buffer which starts at rbuffstart
  5227 000045B8 8806                <1> 	mov [esi], al
  5228 000045BA 46                  <1> 	inc esi
  5229 000045BB 6649                <1> 	dec cx
  5230 000045BD 6681F90000          <1> 	cmp cx, 0
  5231 000045C2 75F4                <1> 	jne clearrbuff
  5232                              <1> findmac:
  5233 000045C4 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5234 000045CA BF[8C470000]        <1> 	mov edi, sysmac
  5235 000045CF B906000000          <1> 	mov ecx, 6
  5236                              <1> macputloop:
  5237 000045D4 EC                  <1> 	in al, dx
  5238 000045D5 8807                <1> 	mov [edi], al
  5239 000045D7 47                  <1> 	inc edi
  5240 000045D8 42                  <1> 	inc edx
  5241 000045D9 49                  <1> 	dec ecx
  5242 000045DA 75F8                <1> 	jnz macputloop
  5243 000045DC B9[8C470000]        <1> 	mov ecx, sysmac
  5244 000045E1 E837010000          <1> 	call showmac
  5245                              <1> resetnic:
  5246 000045E6 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5247 000045EC 81C252000000        <1> 	add edx, 0x52
  5248 000045F2 B000                <1> 	mov al, 0
  5249 000045F4 EE                  <1> 	out dx, al	;;WAKE UP!!!!
  5250 000045F5 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5251 000045FB 81C237000000        <1> 	add edx, 0x37
  5252 00004601 B010                <1> 	mov al, 0x10
  5253 00004603 EE                  <1> 	out dx, al	;;Reset
  5254                              <1> resetnicwait:
  5255 00004604 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5256 0000460A 81C237000000        <1> 	add edx, 0x37
  5257 00004610 EC                  <1> 	in al, dx
  5258 00004611 2410                <1> 	and al, 0x10
  5259 00004613 3C10                <1> 	cmp al, 0x10
  5260 00004615 0F84E9FFFFFF        <1> 	je near resetnicwait
  5261 0000461B 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5262 00004621 81C230000000        <1> 	add edx, 0x30
  5263 00004627 B8[1F340000]        <1> 	mov eax, rbuffstart
  5264 0000462C EF                  <1> 	out dx, eax	;;give nic receive buffer location
  5265 0000462D 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5266 00004633 81C23C000000        <1> 	add edx, 0x3C
  5267 00004639 66B80500            <1> 	mov ax, 0x0005
  5268 0000463D 66EF                <1> 	out dx, ax	;;set TOK and ROK
  5269 0000463F 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5270 00004645 81C244000000        <1> 	add edx, 0x44
  5271 0000464B B80F000000          <1> 	mov eax, 0xf
  5272 00004650 EF                  <1> 	out dx, eax	;;recieve packets from all matches
  5273 00004651 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5274 00004657 81C237000000        <1> 	add edx, 0x37
  5275 0000465D B00C                <1> 	mov al, 0x0C
  5276 0000465F EE                  <1> 	out dx, al	;;use transmit and receive
  5277 00004660 C605[6D470000]01    <1> 	mov byte [nicconfig], 1
  5278 00004667 C3                  <1> 	ret
  5279                              <1> 	
  5280                              <1> sendframe:	;;padded frame with beginning in edi and end in esi
  5281 00004668 56                  <1> 	push esi
  5282 00004669 57                  <1> 	push edi
  5283                              <1> nic2:		;;here come the low level drivers :(
  5284                              <1> 			;;frame begins at esi, ends at edi 			;;0x0200 is the class code for ethernet cards
  5285 0000466A 803D[6D470000]01    <1> 	cmp byte [nicconfig], 1
  5286 00004671 7405                <1> 	je sendcachedata
  5287 00004673 E8FDFEFFFF          <1> 	call initcard
  5288                              <1> sendcachedata:
  5289 00004678 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5290 0000467E 81C210000000        <1> 	add edx, 0x10
  5291 00004684 ED                  <1> 	in eax, dx
  5292 00004685 89C1                <1> 	mov ecx, eax
  5293 00004687 E8EFD1FFFF          <1> 	call showhex
  5294 0000468C 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5295 00004692 81C213000000        <1> 	add edx, 0x13
  5296 00004698 ED                  <1> 	in eax, dx
  5297 00004699 89C1                <1> 	mov ecx, eax
  5298 0000469B E8DBD1FFFF          <1> 	call showhex
  5299 000046A0 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5300 000046A6 81C223000000        <1> 	add edx, 0x23	;;23 or 20?
  5301 000046AC 5F                  <1> 	pop edi
  5302 000046AD 89F8                <1> 	mov eax, edi
  5303 000046AF EF                  <1> 	out dx, eax	;;here's Johnny!
  5304 000046B0 5E                  <1> 	pop esi
  5305 000046B1 29FE                <1> 	sub esi, edi
  5306 000046B3 89F0                <1> 	mov eax, esi
  5307 000046B5 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5308 000046BB 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5309 000046C1 EF                  <1> 	out dx, eax
  5310                              <1> checknicstatus1:
  5311 000046C2 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5312 000046C8 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5313 000046CE ED                  <1> 	in eax, dx
  5314 000046CF 2500200000          <1> 	and eax, 0x2000
  5315 000046D4 3D00200000          <1> 	cmp eax, 0x2000
  5316 000046D9 75E7                <1> 	jne checknicstatus1
  5317                              <1> checknicstatus:
  5318 000046DB 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5319 000046E1 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5320 000046E7 ED                  <1> 	in eax, dx
  5321 000046E8 2500800000          <1> 	and eax, 0x8000
  5322 000046ED 3D00800000          <1> 	cmp eax, 0x8000
  5323 000046F2 75E7                <1> 	jne checknicstatus
  5324 000046F4 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5325 000046FA 81C210000000        <1> 	add edx, 0x10
  5326 00004700 ED                  <1> 	in eax, dx
  5327 00004701 89C1                <1> 	mov ecx, eax
  5328 00004703 E873D1FFFF          <1> 	call showhex
  5329 00004708 8B15[84470000]      <1> 	mov edx, [basenicaddr]
  5330 0000470E 81C213000000        <1> 	add edx, 0x13
  5331 00004714 ED                  <1> 	in eax, dx
  5332 00004715 89C1                <1> 	mov ecx, eax
  5333 00004717 E85FD1FFFF          <1> 	call showhex
  5334 0000471C C3                  <1> 	ret
  5335                              <1> 	
  5336                              <1> showmac:	;;mac begins in [ecx]
  5337 0000471D BE[55470000]        <1> 	mov esi, macprint
  5338 00004722 89CF                <1> 	mov edi, ecx
  5339 00004724 81C106000000        <1> 	add ecx, 6
  5340                              <1> showmacloop:
  5341 0000472A 8A07                <1> 	mov al, [edi]
  5342 0000472C 8A27                <1> 	mov ah, [edi]
  5343 0000472E C0E804              <1> 	shr al, 4
  5344 00004731 C0E404              <1> 	shl ah, 4
  5345 00004734 C0EC04              <1> 	shr ah, 4
  5346 00004737 0430                <1> 	add al, 48
  5347 00004739 80C430              <1> 	add ah, 48
  5348 0000473C 668906              <1> 	mov [esi], ax
  5349 0000473F 81C603000000        <1> 	add esi, 3
  5350 00004745 47                  <1> 	inc edi
  5351 00004746 39CF                <1> 	cmp edi, ecx
  5352 00004748 72E0                <1> 	jb showmacloop
  5353 0000474A BE[55470000]        <1> 	mov esi, macprint
  5354 0000474F E88AC7FFFF          <1> 	call print
  5355 00004754 C3                  <1> 	ret
  5356                              <1> 	
  5357 00004755 30302D30302D30302D- <1> macprint db "00-00-00-00-00-00  ",0
  5358 0000475E 30302D30302D303020- <1>
  5359 00004767 2000                <1>
  5360 00004769 00000000            <1> ethernetend dw 0,0
  5361 0000476D 00                  <1> nicconfig db 0
  5362 0000476E 4E4F204E494300      <1> nonicfoundmsg db "NO NIC",0
  5363 00004775 496E6974696174696E- <1> initnicmsg	db "Initiating NIC",0
  5364 0000477E 67204E494300        <1>
  5365 00004784 00000000            <1> basenicaddr	db 0,0,0,0
  5366 00004788 C0A80005            <1> sysip db 192,168,0,5
  5367 0000478C 000000000000        <1> sysmac	db 0,0,0,0,0,0		;;my mac address
  5368                                  	%include 'source/arp.asm'
  5369                              <1> ;;let's try something else
  5370                              <1> ;;arp.asm
  5371                              <1> arpinit:
  5372 00004792 BE[49480000]        <1> 	mov esi, arptable
  5373 00004797 BF[8C470000]        <1> 	mov edi, sysmac
  5374 0000479C BB[88470000]        <1> 	mov ebx, sysip
  5375 000047A1 8B0F                <1> 	mov ecx, [edi]
  5376 000047A3 890E                <1> 	mov [esi], ecx
  5377 000047A5 668B4F04            <1> 	mov cx, [edi + 4]
  5378 000047A9 894E04              <1> 	mov [esi + 4], ecx
  5379 000047AC 8B0B                <1> 	mov ecx, [ebx]
  5380 000047AE 894E06              <1> 	mov [esi + 6], ecx
  5381 000047B1 C605[48480000]01    <1> 	mov byte [arpconfig], 1
  5382 000047B8 C3                  <1> 	ret
  5383                              <1> arptest:
  5384 000047B9 803D[48480000]01    <1> 	cmp byte [arpconfig], 1
  5385 000047C0 7405                <1> 	je arptest2
  5386 000047C2 E8CBFFFFFF          <1> 	call arpinit
  5387                              <1> arptest2:	;;try to reach 192.168.0.1
  5388 000047C7 8B0D[8C470000]      <1> 	mov ecx, [sysmac]
  5389 000047CD 668B1D[90470000]    <1> 	mov bx, [sysmac + 4]
  5390 000047D4 890D[0E480000]      <1> 	mov [sourcemac], ecx
  5391 000047DA 66891D[12480000]    <1> 	mov [sourcemac + 4],bx
  5392 000047E1 890D[1E480000]      <1> 	mov [arpsenderinfo], ecx
  5393 000047E7 66891D[22480000]    <1> 	mov [arpsenderinfo + 4], bx
  5394 000047EE BF[08480000]        <1> 	mov edi, frame
  5395 000047F3 BE[48480000]        <1> 	mov esi, framend
  5396 000047F8 E86BFEFFFF          <1> 	call sendframe
  5397 000047FD BE[76520000]        <1> 	mov esi, line
  5398 00004802 E8D7C6FFFF          <1> 	call print
  5399 00004807 C3                  <1> 	ret
  5400                              <1> 	
  5401                              <1> ;;example frame
  5402                              <1> frame:
  5403 00004808 FFFFFFFFFFFF        <1> destinationmac:	db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  5404 0000480E 000000000000        <1> sourcemac:		db 0,0,0,0,0,0
  5405 00004814 0608                <1> ethertype:		dw 0x0806			;;arp
  5406                              <1> 	;;example packet
  5407 00004816 0100                <1> 	arppacket: 		dw 1				;;ethernet is 1
  5408 00004818 0008                <1> 	arpprotocol: 	dw 0x0800			;;ip is 0x800
  5409 0000481A 0604                <1> 					db 6,4				;;length of mac, length of ip
  5410 0000481C 0100                <1> 	arpoperation: 	dw 1				;;one for arp request
  5411 0000481E 000000000000        <1> 	arpsenderinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;mac
  5412 00004824 C0A80005            <1> 					db 192,168,0,5			;;ip
  5413 00004828 000000000000        <1> 	arptargetinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;ignored in requests
  5414 0000482E C0A80001            <1> 					db 192,168,0,1			;;ip
  5415 00004832 00<rept>            <1> padding:		times (64-($-frame)) db 0
  5416                              <1> framend:
  5417                              <1> 
  5418 00004848 00                  <1> arpconfig db 0
  5419                              <1> arptable:	;;mac,ip
  5420 00004849 000000000000000000- <1> 	times 10 db 0,0,0,0,0,0,0,0,0,0
  5421 00004852 00<rept>            <1>
  5422                              <1> arptableend:
  5423                                  	%include 'source/pci.asm'
  5424 000048AD 00                  <1> pcibus		db 0
  5425 000048AE 00                  <1> pcidevice	db 0
  5426 000048AF 00                  <1> pcifunction	db 0
  5427 000048B0 00                  <1> pciregister	db 0
  5428 000048B1 00                  <1> pcireqtype db 0
  5429                              <1> 
  5430                              <1> getpciport:
  5431 000048B2 B001                <1> 	mov al, 1
  5432 000048B4 A2[B1480000]        <1> 	mov [pcireqtype], al
  5433 000048B9 E91E000000          <1> 	jmp searchpci
  5434                              <1> pcidump:
  5435 000048BE B800000000          <1> 	mov eax, 0
  5436 000048C3 A2[AF480000]        <1> 	mov [pcifunction], al
  5437 000048C8 A2[AD480000]        <1> 	mov [pcibus], al
  5438 000048CD A2[AE480000]        <1> 	mov [pcidevice], al
  5439 000048D2 A2[B1480000]        <1> 	mov [pcireqtype], al
  5440 000048D7 E900000000          <1> 	jmp searchpci
  5441                              <1> searchpci:		;;return in ebx, start X in pciX
  5442 000048DC B000                <1> 	mov al, 0
  5443 000048DE A2[B0480000]        <1> 	mov [pciregister], al
  5444 000048E3 E84F010000          <1> 	call getpciaddr
  5445 000048E8 BAF80C0000          <1> 	mov edx, 0xCF8
  5446 000048ED EF                  <1> 	out dx, eax	;;request pci config
  5447 000048EE BAFC0C0000          <1> 	mov edx, 0xCFC
  5448 000048F3 ED                  <1> 	in eax, dx 	;;read in pci config
  5449 000048F4 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  5450 000048F9 0F8237000000        <1> 	jb near checkpcidevice
  5451                              <1> searchpciret:
  5452                              <1> nextpcidevice:
  5453 000048FF B000                <1> 	mov al, 0
  5454 00004901 A2[AF480000]        <1> 	mov [pcifunction], al
  5455 00004906 A0[AE480000]        <1> 	mov al, [pcidevice]
  5456 0000490B 3C1F                <1> 	cmp al, 11111b
  5457 0000490D 0F83B8000000        <1> 	jae near nextpcibus
  5458 00004913 FEC0                <1> 	inc al
  5459 00004915 A2[AE480000]        <1> 	mov [pcidevice], al
  5460 0000491A EBC0                <1> 	jmp searchpci
  5461 0000491C A0[AF480000]        <1> 	mov al, [pcifunction]
  5462 00004921 3C07                <1> 	cmp al, 111b
  5463 00004923 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  5464 00004929 FEC0                <1> 	inc al
  5465 0000492B A2[AF480000]        <1> 	mov [pcifunction], al
  5466 00004930 EBAA                <1> 	jmp searchpci
  5467 00004932 00000000            <1> pcitype: db 0,0,0,0
  5468                              <1> checkpcidevice:
  5469 00004936 B000                <1> 	mov al, 0
  5470 00004938 3805[B1480000]      <1> 	cmp [pcireqtype], al
  5471 0000493E 0F842B000000        <1> 	je near dumppcidevice
  5472 00004944 B008                <1> 	mov al, 0x08
  5473 00004946 A2[B0480000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  5474 0000494B E8E7000000          <1> 	call getpciaddr
  5475 00004950 BAF80C0000          <1> 	mov edx, 0xCF8
  5476 00004955 EF                  <1> 	out dx, eax
  5477 00004956 BAFC0C0000          <1> 	mov edx, 0xCFC
  5478 0000495B ED                  <1> 	in eax, dx
  5479 0000495C C1C008              <1> 	rol eax, 8
  5480 0000495F 8A1D[32490000]      <1> 	mov bl, [pcitype]
  5481 00004965 38D8                <1> 	cmp al, bl
  5482 00004967 0F8480000000        <1> 	je near foundpciaddr
  5483 0000496D EB90                <1> 	jmp searchpciret
  5484                              <1> dumppcidevice:
  5485 0000496F B000                <1> 	mov al, 0
  5486 00004971 A2[B0480000]        <1> 	mov [pciregister], al
  5487 00004976 E8BC000000          <1> 	call getpciaddr
  5488 0000497B 89C1                <1> 	mov ecx, eax
  5489 0000497D C605[66180000]00    <1> 	mov byte [firsthexshown],0
  5490 00004984 E8F2CEFFFF          <1> 	call showhex
  5491                              <1> dumppcidevicelp:
  5492 00004989 A2[B0480000]        <1> 	mov [pciregister], al
  5493 0000498E E8A4000000          <1> 	call getpciaddr
  5494 00004993 BAF80C0000          <1> 	mov edx, 0xCF8
  5495 00004998 EF                  <1> 	out dx, eax
  5496 00004999 BAFC0C0000          <1> 	mov edx, 0xCFC
  5497 0000499E ED                  <1> 	in eax, dx
  5498 0000499F 89C1                <1> 	mov ecx, eax
  5499 000049A1 A0[B0480000]        <1> 	mov al, [pciregister]
  5500 000049A6 0404                <1> 	add al, 4
  5501 000049A8 3C1A                <1> 	cmp al, 0x1A
  5502 000049AA 730E                <1> 	jae dumppcidn
  5503 000049AC C605[66180000]00    <1> 	mov byte [firsthexshown],0
  5504 000049B3 E8C3CEFFFF          <1> 	call showhex
  5505 000049B8 EBCF                <1> 	jmp dumppcidevicelp
  5506                              <1> dumppcidn:
  5507 000049BA C605[66180000]00    <1> 	mov byte [firsthexshown],0
  5508 000049C1 E8B5CEFFFF          <1> 	call showhex
  5509 000049C6 E934FFFFFF          <1> 	jmp searchpciret
  5510                              <1> nextpcibus:
  5511 000049CB B000                <1> 	mov al, 0
  5512 000049CD A2[AE480000]        <1> 	mov [pcidevice], al
  5513 000049D2 A0[AD480000]        <1> 	mov al, [pcibus]
  5514 000049D7 3C7F                <1> 	cmp al, 1111111b
  5515 000049D9 730C                <1> 	jae donesearchpci
  5516 000049DB FEC0                <1> 	inc al
  5517 000049DD A2[AD480000]        <1> 	mov [pcibus], al
  5518 000049E2 E9F5FEFFFF          <1> 	jmp searchpci
  5519                              <1> donesearchpci:
  5520 000049E7 BA00000000          <1> 	mov edx, 0
  5521 000049EC C3                  <1> 	ret
  5522                              <1> foundpciaddr:
  5523 000049ED B010                <1> 	mov al, 0x10
  5524 000049EF A2[B0480000]        <1> 	mov [pciregister], al
  5525                              <1> findpciioaddr:
  5526 000049F4 E83E000000          <1> 	call getpciaddr
  5527 000049F9 BAF80C0000          <1> 	mov edx, 0xCF8
  5528 000049FE EF                  <1> 	out dx, eax
  5529 000049FF BAFC0C0000          <1> 	mov edx, 0xCFC
  5530 00004A04 ED                  <1> 	in eax, dx
  5531 00004A05 89C3                <1> 	mov ebx, eax
  5532 00004A07 81E301000000        <1> 	and ebx, 1
  5533 00004A0D 81FB00000000        <1> 	cmp ebx, 0
  5534 00004A13 0F8408000000        <1> 	je near notpciioaddr
  5535 00004A19 2D01000000          <1> 	sub eax, 1
  5536 00004A1E 89C2                <1> 	mov edx, eax
  5537 00004A20 C3                  <1> 	ret
  5538                              <1> notpciioaddr:
  5539 00004A21 A0[B0480000]        <1> 	mov al, [pciregister]
  5540 00004A26 0404                <1> 	add al, 4
  5541 00004A28 3C28                <1> 	cmp al, 0x28
  5542 00004A2A 0F87CFFEFFFF        <1> 	ja near searchpciret
  5543 00004A30 A2[B0480000]        <1> 	mov [pciregister], al
  5544 00004A35 EBBD                <1> 	jmp findpciioaddr
  5545                              <1> getpciaddr:		;;puts it in eax and ebx
  5546 00004A37 B800000000          <1> 			mov eax, 0
  5547 00004A3C BB00000080          <1> 			mov ebx, 0x80000000
  5548 00004A41 A0[AD480000]        <1> 			mov al, [pcibus]
  5549 00004A46 C1E010              <1> 			shl eax, 16
  5550 00004A49 01C3                <1> 			add ebx, eax
  5551 00004A4B B800000000          <1> 			mov eax, 0
  5552 00004A50 A0[AE480000]        <1> 			mov al, [pcidevice]
  5553 00004A55 C1E00B              <1> 			shl eax, 11
  5554 00004A58 01C3                <1> 			add ebx, eax
  5555 00004A5A B800000000          <1> 			mov eax, 0
  5556 00004A5F A0[AF480000]        <1> 			mov al, [pcifunction]
  5557 00004A64 C1E008              <1> 			shl eax, 8
  5558 00004A67 01C3                <1> 			add ebx, eax
  5559 00004A69 B800000000          <1> 			mov eax, 0
  5560 00004A6E A0[B0480000]        <1> 			mov al, [pciregister]
  5561 00004A73 01C3                <1> 			add ebx, eax
  5562 00004A75 89D8                <1> 			mov eax, ebx
  5563 00004A77 C3                  <1> 			ret
  5564                              <1> 			
  5565                                  	;%include 'source/process.asm'
  5566                                      %include 'source/disk.asm'
  5567                              <1> ;;disk.asm - new - using lba
  5568                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  5569 00004A78 803F00              <1> 	cmp byte [edi], 0
  5570 00004A7B 0F8444000000        <1> 	je near nofileload
  5571 00004A81 89FA                <1> 	mov edx, edi
  5572 00004A83 BB[D3510000]        <1> 	mov ebx, diskfileindex
  5573                              <1> nextnamechar:
  5574 00004A88 8A07                <1> 	mov al, [edi]
  5575 00004A8A 8A23                <1> 	mov ah, [ebx]
  5576 00004A8C 47                  <1> 	inc edi
  5577 00004A8D 43                  <1> 	inc ebx
  5578 00004A8E 88C1                <1> 	mov cl, al
  5579 00004A90 08E1                <1> 	or cl, ah
  5580 00004A92 80F900              <1> 	cmp cl, 0
  5581 00004A95 744E                <1> 	je equalfilenames
  5582 00004A97 80F920              <1> 	cmp cl, ' '
  5583 00004A9A 7449                <1> 	je equalfilenames
  5584 00004A9C 3C2A                <1> 	cmp al, '*'
  5585 00004A9E 742B                <1> 	je equalfilenames2
  5586 00004AA0 80FC00              <1> 	cmp ah, 0
  5587 00004AA3 7410                <1> 	je nextfilename
  5588 00004AA5 3C00                <1> 	cmp al, 0
  5589 00004AA7 740C                <1> 	je nextfilename
  5590 00004AA9 38E0                <1> 	cmp al, ah
  5591 00004AAB 74DB                <1> 	je nextnamechar
  5592                              <1> getebxzero:
  5593 00004AAD 8A23                <1> 	mov ah, [ebx]
  5594 00004AAF 43                  <1> 	inc ebx
  5595 00004AB0 80FC00              <1> 	cmp ah, 0
  5596 00004AB3 75F8                <1> 	jne getebxzero
  5597                              <1> nextfilename:
  5598 00004AB5 81C308000000        <1> 	add ebx, 8		;;next descriptor
  5599 00004ABB 89D7                <1> 	mov edi, edx
  5600 00004ABD 81FB[38520000]      <1> 	cmp ebx, enddiskfileindex
  5601 00004AC3 72C3                <1> 	jb nextnamechar
  5602                              <1> nofileload:
  5603 00004AC5 BA94010000          <1> 	mov edx, 404	;;indicate not found error
  5604 00004ACA C3                  <1> 	ret
  5605                              <1> equalfilenames2:
  5606 00004ACB 81EB02000000        <1> 	sub ebx, 2
  5607                              <1> eqfilefind:
  5608 00004AD1 43                  <1> 	inc ebx
  5609 00004AD2 81FB[38520000]      <1> 	cmp ebx, enddiskfileindex
  5610 00004AD8 0F83E7FFFFFF        <1> 	jae near nofileload
  5611 00004ADE 8A03                <1> 	mov al, [ebx]
  5612 00004AE0 3C00                <1> 	cmp al, 0
  5613 00004AE2 75ED                <1> 	jne eqfilefind
  5614 00004AE4 43                  <1> 	inc ebx
  5615                              <1> equalfilenames:
  5616 00004AE5 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  5617 00004AE8 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  5618 00004AEA 031D[83010000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  5619 00004AF0 B900000000          <1> 	mov ecx, 0
  5620 00004AF5 88C1                <1> 	mov cl, al			;;get excess number of sectors
  5621 00004AF7 D0E1                <1> 	shl cl, 1
  5622 00004AF9 D0E9                <1> 	shr cl, 1			;;cut off at 128
  5623 00004AFB 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  5624 00004AFD B500                <1> 	mov ch, 0			;;drive 0
  5625 00004AFF C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  5626                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  5627 00004B02 A3[404B0000]        <1> 	mov [filetracks], eax
  5628 00004B07 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  5629 00004B09 89DA                <1> 	mov edx, ebx
  5630 00004B0B 80F900              <1> 	cmp cl, 0
  5631 00004B0E 7405                <1> 	je copytracksforfile
  5632 00004B10 E831000000          <1> 	call diskr		;;take care of excess sectors
  5633                              <1> copytracksforfile:
  5634 00004B15 A1[404B0000]        <1> 	mov eax, [filetracks]
  5635 00004B1A 3D00000000          <1> 	cmp eax, 0
  5636 00004B1F 7419                <1> 	je donecopyfile
  5637 00004B21 48                  <1> 	dec eax
  5638 00004B22 A3[404B0000]        <1> 	mov [filetracks], eax
  5639 00004B27 89D3                <1> 	mov ebx, edx	;;get end lba
  5640 00004B29 B180                <1> 	mov cl, 0x80
  5641 00004B2B 8A2D[82010000]      <1> 	mov ch, [DriveNumber]
  5642 00004B31 89FE                <1> 	mov esi, edi	;;reset buffer
  5643 00004B33 E80E000000          <1> 	call diskr
  5644 00004B38 EBDB                <1> 	jmp copytracksforfile
  5645                              <1> donecopyfile:
  5646 00004B3A BA00000000          <1> 	mov edx, 0	;;no error
  5647 00004B3F C3                  <1> 	ret
  5648                              <1> 	
  5649 00004B40 00000000            <1> filetracks dd 0
  5650                              <1> 	
  5651 00004B44 6400                <1> segments dw 100
  5652                              <1> 
  5653                              <1> diskr:		;;sector count in cl, disk number in ch, 48 bit address with first 32 bits in ebx, buffer in esi, puts end buffer in edi and end lba in edx
  5654                              <1> 
  5655 00004B46 8935[2A4C0000]      <1> 	mov [bufferstartesi], esi
  5656 00004B4C 891D[264C0000]      <1> 	mov [lbaadstartebx], ebx
  5657 00004B52 BA00000000          <1> 	mov edx, 0
  5658 00004B57 88CA                <1> 	mov dl, cl
  5659 00004B59 01DA                <1> 	add edx, ebx
  5660 00004B5B 8915[224C0000]      <1> 	mov [lbaadend], edx
  5661 00004B61 66B80000            <1> 	mov ax, 0
  5662 00004B65 66BAF101            <1> 	mov dx, 0x1F1
  5663 00004B69 EE                  <1> 	out dx, al	;;2 null bytes
  5664 00004B6A EE                  <1> 	out dx, al
  5665 00004B6B B000                <1> 	mov al, 0
  5666 00004B6D 66BAF201            <1> 	mov dx, 0x1F2
  5667 00004B71 EE                  <1> 	out dx, al	;;16 bit sector count-last byte now 0
  5668 00004B72 88C8                <1> 	mov al, cl
  5669 00004B74 EE                  <1> 	out dx, al
  5670 00004B75 66BAF301            <1> 	mov dx, 0x1F3
  5671 00004B79 89D8                <1> 	mov eax, ebx
  5672 00004B7B C1C818              <1> 	ror eax, 24
  5673 00004B7E EE                  <1> 	out dx, al	;;4th byte of address
  5674 00004B7F C1C018              <1> 	rol eax, 24
  5675 00004B82 EE                  <1> 	out dx, al	;;1st byte of address
  5676 00004B83 66BAF401            <1> 	mov dx, 0x1F4
  5677 00004B87 B000                <1> 	mov al, 0
  5678 00004B89 EE                  <1> 	out dx, al	;;5th byte of address-always 0 for now
  5679 00004B8A C1C808              <1> 	ror eax, 8
  5680 00004B8D EE                  <1> 	out dx, al	;;2nd byte of address
  5681 00004B8E 66BAF501            <1> 	mov dx, 0x1F5
  5682 00004B92 C1C008              <1> 	rol eax, 8
  5683 00004B95 B000                <1> 	mov al, 0
  5684 00004B97 EE                  <1> 	out dx, al	;;6th byte
  5685 00004B98 C1C810              <1> 	ror eax, 16
  5686 00004B9B EE                  <1> 	out dx, al	;;3rd byte
  5687 00004B9C B840000000          <1> 	mov eax, 0x40
  5688 00004BA1 66BAF601            <1> 	mov dx, 0x1F6
  5689 00004BA5 EE                  <1> 	out dx, al	;;send magic bits-add drive indicator later
  5690 00004BA6 B024                <1> 	mov al, 0x24
  5691 00004BA8 66BAF701            <1> 	mov dx, 0x1F7
  5692 00004BAC EE                  <1> 	out dx, al	;;READ!!!
  5693                              <1> diskrwait:
  5694 00004BAD 66BAF701            <1> 	mov dx, 0x1F7
  5695 00004BB1 EC                  <1> 	in al, dx
  5696 00004BB2 2408                <1> 	and al, 0x08
  5697 00004BB4 3C08                <1> 	cmp al, 0x08
  5698 00004BB6 75F5                <1> 	jne diskrwait
  5699 00004BB8 88CD                <1> 	mov ch, cl	;;move sector data into ch, multiplying it by 256
  5700 00004BBA B100                <1> 	mov cl, 0
  5701                              <1> diskdataread:
  5702 00004BBC 66BAF001            <1> 	mov dx, 0x1F0
  5703 00004BC0 66ED                <1> 	in ax, dx
  5704 00004BC2 668906              <1> 	mov [esi], ax
  5705 00004BC5 81C602000000        <1> 	add esi, 2
  5706 00004BCB 6649                <1> 	dec cx
  5707 00004BCD 6681F90000          <1> 	cmp cx, 0
  5708 00004BD2 75E8                <1> 	jne diskdataread		;;read all sectors
  5709 00004BD4 89F7                <1> 	mov edi, esi
  5710 00004BD6 8B15[224C0000]      <1> 	mov edx, [lbaadend]
  5711 00004BDC 8B35[2A4C0000]      <1> 	mov esi, [bufferstartesi]
  5712 00004BE2 8B1D[264C0000]      <1> 	mov ebx, [lbaadstartebx]
  5713 00004BE8 C3                  <1> 	ret
  5714                              <1> 	
  5715                              <1> 	
  5716                              <1> diskold: ;;28 bits
  5717 00004BE9 66B80000            <1> 	mov ax, 0
  5718 00004BED 66BAF101            <1> 	mov dx, 0x1F1
  5719 00004BF1 EE                  <1> 	out dx, al	;;send null byte to port
  5720 00004BF2 6642                <1> 	inc dx	;;0x1F2
  5721 00004BF4 88C8                <1> 	mov al, cl	;;get sector count
  5722 00004BF6 EE                  <1> 	out dx, al	;;send sector count
  5723 00004BF7 6642                <1> 	inc dx	;;0x1F3
  5724 00004BF9 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  5725 00004BFB EE                  <1> 	out dx, al	;;send them
  5726 00004BFC 6642                <1> 	inc dx	;;0x1F4
  5727 00004BFE C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  5728 00004C01 88D8                <1> 	mov al, bl
  5729 00004C03 EE                  <1> 	out dx, al
  5730 00004C04 6642                <1> 	inc dx	;;0x1F5
  5731 00004C06 C1CB08              <1> 	ror ebx, 8	;;again
  5732 00004C09 88D8                <1> 	mov al, bl
  5733 00004C0B EE                  <1> 	out dx, al
  5734 00004C0C 6642                <1> 	inc dx	;;0x1F6
  5735 00004C0E C1CB08              <1> 	ror ebx, 8
  5736 00004C11 88D8                <1> 	mov al, bl
  5737 00004C13 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  5738 00004C15 0CE0                <1> 	or al, 0xE0			;;majic number
  5739 00004C17 C0E504              <1> 	shl ch, 4
  5740 00004C1A 08E8                <1> 	or al, ch
  5741 00004C1C EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  5742 00004C1D 6642                <1> 	inc dx	;;0x1F7
  5743 00004C1F B020                <1> 	mov al, 0x20
  5744 00004C21 EE                  <1> 	out dx, al			;;execute read command
  5745                              <1> 	
  5746 00004C22 00000000            <1> lbaadend dd 0
  5747 00004C26 00000000            <1> lbaadstartebx dd 0
  5748 00004C2A 00000000            <1> bufferstartesi dd 0
  5749                                  	%include 'source/threads.asm'
  5750                              <1> ;;THIS IS MY FIRST ATTEMPT AT IMPLEMENTING THREADS
  5751                              <1> threadstarttest:
  5752 00004C2E E945040000          <1>     jmp startthreads
  5753                              <1> mainthread:
  5754 00004C33 F4                  <1> 	hlt		;;this does not work properly
  5755 00004C34 EBFD                <1> 	jmp mainthread
  5756                              <1> 	
  5757                              <1> nwcmdst:
  5758 00004C36 FA                  <1> 	cli			;;no more interrupts!!!
  5759 00004C37 BE[76520000]        <1> 	mov esi, line
  5760 00004C3C E89DC2FFFF          <1> 	call print
  5761 00004C41 E9EDC7FFFF          <1> 	jmp nwcmd
  5762                              <1> 	
  5763                              <1> modelthread:
  5764 00004C46 66A1[D1510000]      <1> 	mov ax, [currentthread]
  5765                              <1> 	
  5766 00004C4C B900000000          <1> 	mov ecx, 0
  5767 00004C51 6689C1              <1> 	mov cx, ax
  5768 00004C54 E822CCFFFF          <1> 	call showhex
  5769 00004C59 F4                  <1> 	hlt		;;wait for next time around
  5770                              <1> 	
  5771 00004C5A B90000DEC0          <1> 	mov ecx, 0xC0DE0000
  5772 00004C5F 6689C1              <1> 	mov cx, ax
  5773 00004C62 E814CCFFFF          <1> 	call showhex
  5774 00004C67 F4                  <1> 	hlt
  5775                              <1> 	
  5776 00004C68 B90000ADDE          <1> 	mov ecx, 0xDEAD0000
  5777 00004C6D 6689C1              <1> 	mov cx, ax
  5778 00004C70 E806CCFFFF          <1> 	call showhex
  5779 00004C75 F4                  <1> 	hlt
  5780                              <1> 
  5781 00004C76 EBBE                <1> 	jmp nwcmdst
  5782                              <1> 	
  5783                              <1> 	
  5784                              <1> thrdtst:
  5785 00004C78 [464C0000]<rept>    <1> times 256 dd modelthread	;;could go up to 2048, but that takes too long
  5786                              <1> thrdtstend:
  5787                              <1> 
  5788                              <1> startthreads:
  5789 00005078 60                  <1> 	pushad
  5790 00005079 66B80070            <1> 	mov ax, 0x7000	;;this is the divider for the PIT
  5791 0000507D E640                <1> 	out 0x40, al
  5792 0000507F 66C1C008            <1> 	rol ax, 8
  5793 00005083 E640                <1> 	out 0x40, al
  5794                              <1> 	
  5795 00005085 8CC8                <1> 	mov eax, cs
  5796 00005087 89C2                <1> 	mov edx, eax
  5797 00005089 8B4C2428            <1> 	mov ecx, [esp + 40]
  5798 0000508D 81C900020000        <1> 	or ecx, 0x200
  5799 00005093 89E3                <1> 	mov ebx, esp
  5800 00005095 BC[3B780000]        <1> 	mov esp, stackdummy
  5801 0000509A 90                  <1> 	nop
  5802 0000509B 60                  <1> 	pushad
  5803 0000509C B8[334C0000]        <1> 	mov eax, mainthread
  5804 000050A1 89442420            <1> 	mov [esp + 32], eax
  5805 000050A5 89542424            <1> 	mov [esp + 36], edx
  5806 000050A9 894C2428            <1> 	mov [esp + 40], ecx
  5807 000050AD 8925[33540000]      <1> 	mov [threadlist], esp
  5808                              <1> 			;;that above setup the dummy thread which for some reason does not run
  5809                              <1> 			;;this below will setup the threads found in thrdtst
  5810 000050B3 BE[784C0000]        <1> 	mov esi, thrdtst
  5811 000050B8 BC[3B7C0000]        <1> 	mov esp, stack1
  5812 000050BD BF[33540000]        <1> 	mov edi, threadlist
  5813 000050C2 81C704000000        <1> 	add edi, 4
  5814                              <1> nxtthreadld:
  5815 000050C8 60                  <1> 	pushad
  5816 000050C9 8B06                <1> 	mov eax, [esi]
  5817 000050CB 89442420            <1> 	mov [esp + 32], eax
  5818 000050CF 89542424            <1> 	mov [esp + 36], edx
  5819 000050D3 894C2428            <1> 	mov [esp + 40], ecx
  5820 000050D7 8927                <1> 	mov [edi], esp
  5821 000050D9 81C400040000        <1> 	add esp, 1024
  5822 000050DF 81C604000000        <1> 	add esi, 4
  5823 000050E5 81C704000000        <1> 	add edi, 4
  5824 000050EB 81FF[3B740000]      <1> 	cmp edi, threadlistend
  5825 000050F1 0F8322000000        <1> 	jae near nomorethreadspace
  5826 000050F7 81FC[3B842000]      <1> 	cmp esp, bssend
  5827 000050FD 0F8344000000        <1> 	jae near nomorestackspace
  5828 00005103 81FE[78500000]      <1> 	cmp esi, thrdtstend
  5829 00005109 72BD                <1> 	jb nxtthreadld
  5830 0000510B 89DC                <1> 	mov esp, ebx
  5831 0000510D B0FE                <1> 	mov al, 0xFE
  5832 0000510F E621                <1> 	out 0x21, al
  5833 00005111 B020                <1> 	mov al, 0x20
  5834 00005113 E620                <1> 	out 0x20, al
  5835 00005115 61                  <1> 	popad
  5836 00005116 FB                  <1> 	sti
  5837 00005117 EBFE                <1> 	jmp $	;;wait for the irq to hook
  5838                              <1> 	
  5839                              <1> nomorethreadspace:
  5840 00005119 BE[25510000]        <1> 	mov esi, nmts
  5841 0000511E E8BBBDFFFF          <1> 	call print
  5842 00005123 EBFE                <1> 	jmp $
  5843 00005125 74656820636F6C6F6E- <1> nmts	db "teh colonel no can haz moar treds",0
  5844 0000512E 656C206E6F2063616E- <1>
  5845 00005137 2068617A206D6F6172- <1>
  5846 00005140 20747265647300      <1>
  5847                              <1> 
  5848                              <1> nomorestackspace:
  5849 00005147 BE[53510000]        <1> 	mov esi, nmss
  5850 0000514C E88DBDFFFF          <1> 	call print
  5851 00005151 EBFE                <1> 	jmp $
  5852 00005153 74656820636F6C6F6E- <1> nmss	db "teh colonel no can haz moar staqz",0
  5853 0000515C 656C206E6F2063616E- <1>
  5854 00005165 2068617A206D6F6172- <1>
  5855 0000516E 20737461717A00      <1>
  5856                              <1> 	
  5857                              <1> threadswitch:
  5858 00005175 FA                  <1> 	cli
  5859 00005176 60                  <1> 	pushad
  5860 00005177 BF[33540000]        <1> 	mov edi, threadlist
  5861 0000517C B800000000          <1> 	mov eax, 0
  5862 00005181 66A1[D1510000]      <1> 	mov ax, [currentthread]
  5863 00005187 6640                <1> 	inc ax
  5864 00005189 66A3[D1510000]      <1> 	mov [currentthread], ax
  5865 0000518F 6648                <1> 	dec ax
  5866 00005191 C1E002              <1> 	shl eax, 2
  5867 00005194 01C7                <1> 	add edi, eax
  5868 00005196 8927                <1> 	mov [edi], esp
  5869 00005198 81C704000000        <1> 	add edi, 4
  5870 0000519E 81FF[3B740000]      <1> 	cmp edi, threadlistend
  5871 000051A4 0F830D000000        <1> 	jae near nookespthread
  5872 000051AA 8B07                <1> 	mov eax, [edi]
  5873 000051AC 3D00000000          <1> 	cmp eax, 0
  5874 000051B1 0F8511000000        <1> 	jne near okespthread
  5875                              <1> nookespthread:
  5876 000051B7 BF[33540000]        <1> 	mov edi, threadlist
  5877 000051BC 66B80000            <1> 	mov ax, 0
  5878 000051C0 66A3[D1510000]      <1> 	mov [currentthread], ax
  5879 000051C6 8B07                <1> 	mov eax, [edi]
  5880                              <1> okespthread:
  5881 000051C8 89C4                <1> 	mov esp, eax
  5882 000051CA B020                <1> 	mov al, 0x20
  5883 000051CC E620                <1> 	out 0x20, al
  5884 000051CE 61                  <1> 	popad
  5885 000051CF FB                  <1> 	sti
  5886 000051D0 CF                  <1> 	iretd
  5887                              <1> 	
  5888 000051D1 0000                <1> currentthread dw 0
  5889                                      %include 'fileindex.asm'
  5890                              <1> diskfileindex:
  5891 000051D3 65787000            <1> db "exp",0
  5892 000051D7 2F000000            <1> dd (f0-$$)/512
  5893 000051DB 01000000            <1> dd (f1-f0)/512
  5894 000051DF 736F6C6C65726F732E- <1> db "solleros.bmp",0
  5895 000051E8 626D7000            <1>
  5896 000051EC 30000000            <1> dd (f1-$$)/512
  5897 000051F0 B0020000            <1> dd (f2-f1)/512
  5898 000051F4 736F6C6C65726F732E- <1> db "solleros.txt",0
  5899 000051FD 74787400            <1>
  5900 00005201 E0020000            <1> dd (f2-$$)/512
  5901 00005205 01000000            <1> dd (f3-f2)/512
  5902 00005209 74656C7900          <1> db "tely",0
  5903 0000520E E1020000            <1> dd (f3-$$)/512
  5904 00005212 01000000            <1> dd (f4-f3)/512
  5905 00005216 74696D6500          <1> db "time",0
  5906 0000521B E2020000            <1> dd (f4-$$)/512
  5907 0000521F 02000000            <1> dd (f5-f4)/512
  5908 00005223 7475746F7269616C2E- <1> db "tutorial.bat",0
  5909 0000522C 62617400            <1>
  5910 00005230 E4020000            <1> dd (f5-$$)/512
  5911 00005234 03000000            <1> dd (f6-f5)/512
  5912                              <1> enddiskfileindex:
  5913                              <1> 
  5914                                  	%include 'source/msg.asm'
  5915 00005238 6578697400          <1> 	exitmsg db	"exit",0
  5916 0000523D 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  5917 00005246 00                  <1>
  5918 00005247 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  5919 00005250 6E642E0D0A00        <1>
  5920 00005256 757365726E616D653A- <1> 	userask db "username:",0
  5921 0000525F 00                  <1>
  5922 00005260 70617373776F72643A- <1> 	pwdask	db	"password:",0
  5923 00005269 00                  <1>
  5924 0000526A 40536F6C6C65724F53- <1> 	location	db	"@SollerOS]#",0
  5925 00005273 5D2300              <1>
  5926 00005276 0D0A00              <1> 	line	db	13,10,0
  5927                              <1> 	userlst:
  5928 00005279 7573657200          <1> 			db "user",0
  5929 0000527E 70617373776F726400  <1> 			db "password",0
  5930 00005287 726F6F7400          <1> 			db "root",0
  5931 0000528C 617765736F6D65706F- <1> 			db "awesomepower",0
  5932 00005295 77657200            <1>
  5933 00005299 6E00                <1> 			db "n",0	;;use for quick entry-a quick double n followed by a double enter will get you in
  5934 0000529B 00                  <1> 			db 0
  5935                              <1> 	userlstend:
  5936                              <1> 	
  5937 0000529B <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  5938                              <1> fontend2:
  5939                              <1> mcursor:
  5940 00005AAC 01                  <1> 	db	00000001b
  5941 00005AAD 81                  <1> 	db	10000001b
  5942 00005AAE C1                  <1> 	db	11000001b
  5943 00005AAF E1                  <1> 	db	11100001b
  5944 00005AB0 F1                  <1> 	db	11110001b
  5945 00005AB1 F9                  <1> 	db	11111001b
  5946 00005AB2 FD                  <1> 	db	11111101b
  5947 00005AB3 FF                  <1> 	db	11111111b
  5948 00005AB4 F9                  <1> 	db	11111001b
  5949 00005AB5 B9                  <1> 	db	10111001b
  5950 00005AB6 39                  <1> 	db	00111001b
  5951 00005AB7 1C                  <1> 	db	00011100b
  5952 00005AB8 1C                  <1> 	db	00011100b
  5953 00005AB9 0E                  <1> 	db	00001110b
  5954 00005ABA 0E                  <1> 	db	00001110b
  5955 00005ABB 0C                  <1> 	db	00001100b
  5956                              <1> fontend:
  5957                              <1> 
  5958                              <1> ;cursorbmp:
  5959                              <1> ;	db	1,0,0,0,0,0,0,0
  5960                              <1> ;	db	1,1,0,0,0,0,0,0
  5961                              <1> ;	db	1,1,1,0,0,0,0,0
  5962                              <1> ;	db	1,1,1,1,0,0,0,0
  5963                              <1> ;	db	1,1,1,1,1,0,0,0
  5964                              <1> ;	db	1,1,1,1,1,1,0,0
  5965                              <1> ;	db	1,1,1,1,1,1,1,0
  5966                              <1> ;	db	1,1,1,1,1,1,1,1
  5967                              <1> ;	db	1,1,1,1,1,1,0,0
  5968                              <1> ;	db	1,1,0,1,1,1,0,0
  5969                              <1> ;	db	1,0,0,1,1,1,0,0
  5970                              <1> ;	db	0,0,0,0,1,1,1,0
  5971                              <1> ;	db	0,0,0,0,1,1,1,0
  5972                              <1> ;	db	0,0,0,0,0,1,1,1
  5973                              <1> ;	db	0,0,0,0,0,1,1,1
  5974                              <1> ;	db	0,0,0,0,0,1,1,0
  5975                              <1> ;cursorbmpend:
  5976                              <1> 
  5977                              <1> 
  5978                              <1> VBEMODEBLOCK:
  5979 00005ABC 00<rept>            <1> vbesignature 		times 4 db 0	;VBE Signature
  5980 00005AC0 00<rept>            <1> vbeversion  		times 2 db 0	;VBE Version
  5981 00005AC2 00<rept>            <1> oemstringptr  		times 4 db 0	;Pointer to OEM String
  5982 00005AC6 00<rept>            <1> capabilities 		times 4 db 0	;Capabilities of graphics cont.
  5983 00005ACA 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  5984 00005ACE 00<rept>            <1> totalmemory   		times 2 db 0	;number of 64Kb memory blocks
  5985 00005AD0 00<rept>            <1> oemsoftwarerev  	times 2 db 0	;VBE implementation Software revision
  5986 00005AD2 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  5987 00005AD6 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  5988 00005ADA 00<rept>            <1> oemproductrevptr 	times 4 db 0	;Pointer to Product Revision String
  5989 00005ADE 00<rept>            <1> reserved			times 222 db 0	;Reserved for VBE implementation scratch area
  5990 00005BBC 00<rept>            <1> oemdata 			times 256 db 0	;Data Area for OEM Strings
  5991                              <1> 
  5992                              <1> 
  5993                              <1> VBEMODEINFOBLOCK:
  5994                              <1> ;Mandatory information for all VBE revision
  5995 00005CBC 00<rept>            <1> modeattributes   	times 2 db 0	;Mode attributes
  5996 00005CBE 00                  <1> winaattributes   	times 1 db 0	;Window A attributes
  5997 00005CBF 00                  <1> winbattributes   	times 1 db 0	;Window B attributes
  5998 00005CC0 00<rept>            <1> wingranularity   	times 2 db 0	;Window granularity
  5999 00005CC2 00<rept>            <1> winsize          	times 2 db 0	;Window size
  6000 00005CC4 00<rept>            <1> winasegment      	times 2 db 0	;Window A start segment
  6001 00005CC6 00<rept>            <1> winbsegment      	times 2 db 0	;Window B start segment
  6002 00005CC8 00<rept>            <1> winfuncptr       	times 4 db 0	;pointer to window function
  6003 00005CCC 00<rept>            <1> bytesperscanline 	times 2 db 0	;Bytes per scan line
  6004                              <1> 
  6005                              <1> ;Mandatory information for VBE 1.2 and above
  6006 00005CCE 00<rept>            <1> xresolution     	times 2 db 0	;Horizontal resolution in pixel or chars
  6007 00005CD0 00<rept>            <1> yresolution	    	times 2 db 0	;Vertical resolution in pixel or chars
  6008 00005CD2 00                  <1> xcharsize       	times 1 db 0	;Character cell width in pixel
  6009 00005CD3 00                  <1> ycharsize       	times 1 db 0	;Character cell height in pixel
  6010 00005CD4 00                  <1> numberofplanes  	times 1 db 0	;Number of memory planes
  6011 00005CD5 00                  <1> bitsperpixel    	times 1 db 0	;Bits per pixel
  6012 00005CD6 00                  <1> numberofbanks   	times 1 db 0	;Number of banks
  6013 00005CD7 00                  <1> memorymodel     	times 1 db 0	;Memory model type
  6014 00005CD8 00                  <1> banksize        	times 1 db 0	;Bank size in KB
  6015 00005CD9 00                  <1> numberofimagepages	times 1 db 0	;Number of images
  6016 00005CDA 00                  <1> reserved1       	times 1 db 0	;Reserved for page function
  6017                              <1> 
  6018                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  6019 00005CDB 00                  <1> redmasksize			times 1 db 0	;Size of direct color red mask in bits
  6020 00005CDC 00                  <1> redfieldposition	times 1 db 0	;Bit position of lsb of red bask
  6021 00005CDD 00                  <1> greenmasksize   	times 1 db 0	;Size of direct color green mask in bits
  6022 00005CDE 00                  <1> greenfieldposition	times 1 db 0	;Bit position of lsb of green bask
  6023 00005CDF 00                  <1> bluemasksize		times 1 db 0	;Size of direct color blue mask in bits
  6024 00005CE0 00                  <1> bluefieldposition	times 1 db 0	;Bit position of lsb of blue bask
  6025 00005CE1 00                  <1> rsvdmasksize        times 1	db 0	;Size of direct color reserved mask in bits
  6026 00005CE2 00                  <1> rsvdfieldposition	times 1	db 0	;Bit position of lsb of reserved bask
  6027 00005CE3 00                  <1> directcolormodeinfo	times 1 db 0	;Direct color mode attributes
  6028                              <1> 
  6029                              <1> ;Mandatory information for VBE 2.0 and above
  6030 00005CE4 00<rept>            <1> physbaseptr 		times 4 db 0	;Physical address for flat frame buffer
  6031 00005CE8 00<rept>            <1> offscreenmemoffset 	times 4 db 0	;Pointer to start of off screen memory
  6032 00005CEC 00<rept>            <1> offscreenmemsize 	times 2 db 0    ;Amount of off screen memory in 1Kb units
  6033 00005CEE 00<rept>            <1> reserved2 			times 206 db 0  ;Remainder of ModeInfoBlock
  6034                                  	;%include 'source/memory.asm'
  6035                                  	%include 'source/buf.asm'
  6036 00005DBC 4255465354415254    <1> db "BUFSTART"
  6037                              <1> [section .bss]
  6038                              <1> bssstart:
  6039                              <1> stack:
  6040 00000000 <res 00001000>      <1> 	resb 4096
  6041                              <1> stackend:
  6042                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  6043 00001000 <res 00000200>      <1> 	resb 200h 
  6044                              <1> 	graphicstableend:
  6045                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  6046 00001200 <res 00000100>      <1> 	resb 256 
  6047                              <1> mcolorend:
  6048 00001300 <res 00000001>      <1> IFON resb 1 
  6049 00001301 <res 00000064>      <1> IFTRUE resb 100 
  6050 00001365 <res 00000004>      <1> BATCHPOS resb 4 
  6051 00001369 <res 00000001>      <1> BATCHISON resb 1 
  6052 0000136A <res 00000001>      <1> LOOPON resb 1 
  6053 0000136B <res 00000004>      <1> LOOPPOS	resb 4 
  6054 0000136F <res 00000200>      <1> fileindex: resb 200h 
  6055                              <1> fileindexend:
  6056 0000156F <res 00000500>      <1> variables: 	resb 500h 
  6057 00001A6F <res 00000001>      <1> varend: resb 1
  6058 00001A70 <res 00000100>      <1> buftxt2: resb 100h
  6059 00001B70 <res 0000000A>      <1> resb 10
  6060 00001B7A <res 00000100>      <1> buftxt: resb 100h 
  6061 00001C7A <res 00000014>      <1> buf2:	resb 20 
  6062 00001C8E <res 00000001>      <1> numbuf: resb 1 
  6063 00001C8F <res 000012C0>      <1> videobuf2 		resb 0x12C0 
  6064 00002F4F <res 000000C8>      <1> videobufend		resb 200
  6065 00003017 <res 00000004>      <1> lastcommandpos: resb 4
  6066 0000301B <res 00000004>      <1> currentcommandpos: resb 4
  6067                              <1> commandbuf:
  6068 0000301F <res 00000400>      <1> resb 1024
  6069                              <1> commandbufend:
  6070                              <1> rbuffstart: ;for use with networking
  6071 0000341F <res 00002014>      <1> resb 8212
  6072                              <1> threadlist:	;;this buffer will hold the stack locations of all of the threads, up to 2048
  6073 00005433 <res 00002008>      <1> 	resb 2050*4
  6074                              <1> threadlistend:
  6075                              <1> stacks:		;;the stacks will go on forever until end of memory
  6076 0000743B <res 00000400>      <1> 	resb 1024
  6077                              <1> stackdummy:
  6078 0000783B <res 00000400>      <1> 	resb 1024
  6079                              <1> stack1:
  6080 00007C3B <res 00200800>      <1> 	resb 1024*2050	;;woah, thats a lot of space for stacks
  6081                              <1> bssend:		;;from here on, it is not kernel space so apps can be loaded here.
  6082                              <1> [section .text]
  6083                                      %include 'files.asm'
  6084 00005DC4 00<rept>            <1> align 512,db 0
  6085                              <1> f0:
  6086 00005DC4 <incbin>            <1> incbin "included/exp"
  6087 00005E52 00<rept>            <1> align 512,db 0
  6088                              <1> f1:
  6089 00005E52 <incbin>            <1> incbin "included/solleros.bmp"
  6090 0005BFE6 00<rept>            <1> align 512,db 0
  6091                              <1> f2:
  6092 0005BFE6 <incbin>            <1> incbin "included/solleros.txt"
  6093 0005C176 00<rept>            <1> align 512,db 0
  6094                              <1> f3:
  6095 0005C176 <incbin>            <1> incbin "included/tely"
  6096 0005C3BD 00<rept>            <1> align 512,db 0
  6097                              <1> f4:
  6098 0005C3BD <incbin>            <1> incbin "included/time"
  6099 0005C67B 00<rept>            <1> align 512,db 0
  6100                              <1> f5:
  6101 0005C67B <incbin>            <1> incbin "included/tutorial.bat"
  6102 0005CCAA 00<rept>            <1> align 512,db 0
  6103                              <1> f6:
