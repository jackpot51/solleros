     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> %include 'source/signature.asm'
     5                              <2> signature:	;used by bootloader to find SollerOS, is totally awesome
     6 00000000 EDA55ED1            <2> dd 0xD15EA5ED	;diseased
     7 00000004 15D000B1            <2> dd 0xB100D015	;blood is
     8 00000008 EDFED2BA            <2> dd 0xBAD2FEED	;bad to feed
     9 0000000C 95D0112A            <2> dd 0x2A11D095	;to all dogs
    10 00000010 52A71CA1            <2> dd 0xA11CA752	;all cats too.
    11 00000014 0F751015            <2> dd 0x1510750F   ;is lots of
    12 00000018 75CAADDE            <2> dd 0xDEADCA75   ;dead cats
    13 0000001C 95D0ADDE            <2> dd 0xDEADD095   ;dead dogs
    14 00000020 07000000            <2> dd 7			;version
    15 00000024 534F4C4C45524F53    <2> db "SOLLEROS"
    16                              <2> signatureend:
    17                              <1> menustart:	
    18 0000002C 8CC8                <1> 	mov ax, cs
    19 0000002E 8ED8                <1> 	mov ds, ax
    20 00000030 8EC0                <1> 	mov es, ax
    21 00000032 8ED0                <1> 	mov ss, ax
    22 00000034 880E[A001]          <1> 	mov [DriveNumber], cl
    23 00000038 668916[A101]        <1> 	mov [lbaad], edx
    24 0000003D B800A0              <1> 	mov ax, 0xA000
    25 00000040 8EE8                <1> 	mov gs, ax
    26 00000042 B81200              <1> 	mov ax, 12h
    27 00000045 BB0000              <1> 	mov bx, 0
    28 00000048 CD10                <1> 	int 10h
    29                              <1> guiload:
    30 0000004A BE[B102]            <1> 	mov si, bootmsg
    31 0000004D E86A01              <1> 	call printrm
    32 00000050 B80000              <1> 	mov ax, 0
    33 00000053 CD16                <1> 	int 16h
    34 00000055 3C79                <1> 	cmp al, "y"
    35 00000057 0F851201            <1> 	jne near guiload2
    36                              <1> guiloadagain:
    37 0000005B B8004F              <1> 	mov ax, 04F00h
    38 0000005E BF[5268]            <1> 	mov di, VBEMODEBLOCK
    39 00000061 CD10                <1> 	int 10h
    40 00000063 BE[7468]            <1> 	mov si, reserved
    41 00000066 81EE0200            <1> 	sub si, 2
    42                              <1> findvideomodes:
    43 0000006A 81C60200            <1> 	add si, 2
    44 0000006E 8B0C                <1> 	mov cx, [si]
    45 00000070 81F9FFFF            <1> 	cmp cx, 0xFFFF
    46 00000074 0F840A00            <1> 	je near nextvmode
    47 00000078 81FE[5269]          <1> 	cmp si, oemdata
    48 0000007C 0F83ED00            <1> 	jae near guiload2	;;kill if no valid list is found
    49 00000080 EBE8                <1> 	jmp findvideomodes 	
    50                              <1> ;;debug,shows vmodes available
    51                              <1> nextvmode:
    52 00000082 81EE0200            <1> 	sub si, 2
    53 00000086 81FE[7468]          <1> 	cmp si, reserved
    54 0000008A 0F82CDFF            <1> 	jb near guiloadagain
    55 0000008E 8B0C                <1> 	mov cx, [si]
    56 00000090 81F9FFFF            <1> 	cmp cx, 0xFFFF
    57 00000094 0F84EAFF            <1> 	je near nextvmode
    58 00000098 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    59 0000009C B8014F              <1> 	mov ax, 04F01h
    60 0000009F BF[526A]            <1> 	mov di, VBEMODEINFOBLOCK
    61 000000A2 890E[A501]          <1> 	mov [vesamode], cx
    62 000000A6 CD10                <1> 	int 10h
    63 000000A8 A0[6B6A]            <1> 	mov al, [bitsperpixel]
    64 000000AB 3C10                <1> 	cmp al, 16
    65 000000AD 75D3                <1> 	jne nextvmode
    66 000000AF 8936[A701]          <1> 	mov [videomodecache], si
    67 000000B3 80FC00              <1> 	cmp ah, 0
    68 000000B6 0F842200            <1> 	je near setvesamode
    69 000000BA EBC6                <1> 	jmp nextvmode
    70 000000BC 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    71 000000C5 20766964656F206D6F- <1>
    72 000000CE 6465204F4B3F28792F- <1>
    73 000000D7 6E290D0A00          <1>
    74                              <1> setvesamode:
    75 000000DC 8B0E[646A]          <1> 	mov cx, [xresolution]
    76 000000E0 E8EF00              <1> 	call decshow
    77 000000E3 B078                <1> 	mov al, "x"
    78 000000E5 E85701              <1> 	call char
    79 000000E8 8B0E[666A]          <1> 	mov cx, [yresolution]
    80 000000EC E8E300              <1> 	call decshow
    81 000000EF B040                <1> 	mov al, "@"
    82 000000F1 E84B01              <1> 	call char
    83 000000F4 8A0E[6B6A]          <1> 	mov cl, [bitsperpixel]
    84 000000F8 E8D700              <1> 	call decshow
    85 000000FB BE[BC00]            <1> 	mov si, isthisvideook
    86 000000FE E8B900              <1> 	call printrm
    87 00000101 B80000              <1> 	mov ax, 0
    88 00000104 CD16                <1> 	int 16h
    89 00000106 8B36[A701]          <1> 	mov si, [videomodecache]
    90 0000010A 3C79                <1> 	cmp al, "y"
    91 0000010C 0F8572FF            <1> 	jne near nextvmode
    92 00000110 8B16[646A]          <1> 	mov dx, [xresolution]
    93 00000114 8B0E[666A]          <1> 	mov cx, [yresolution]
    94 00000118 8916[6A43]          <1> 	mov [resolutionx], dx
    95 0000011C 890E[6843]          <1> 	mov [resolutiony], cx
    96 00000120 01D2                <1> 	add dx, dx
    97 00000122 8916[6C43]          <1> 	mov [resolutionx2], dx
    98 00000126 BA0000              <1> 	mov dx, 0
    99 00000129 B90000              <1> 	mov cx, 0
   100 0000012C B8024F              <1> 	mov ax, 04F02h
   101 0000012F 8B1E[A501]          <1> 	mov bx, [vesamode]
   102 00000133 CD10                <1> 	int 10h		;;enter VESA mode
   103 00000135 C606[A901]00        <1> 	mov byte [guinodo], 0
   104 0000013A C606[E834]01        <1> 	mov byte [guion], 1
   105 0000013F 66BB00000000        <1> 	mov ebx, 0
   106 00000145 8CCB                <1> 	mov bx, cs
   107 00000147 66C1E304            <1> 	shl ebx, 4
   108 0000014B 668B3E[7A6A]        <1> 	mov edi, [physbaseptr]
   109 00000150 6629DF              <1> 	sub edi, ebx
   110 00000153 66893E[7A6A]        <1> 	mov [physbaseptr], edi
   111 00000158 6631C0              <1> 	xor eax, eax
   112 0000015B 6631DB              <1> 	xor ebx, ebx
   113 0000015E 6631C9              <1> 	xor ecx, ecx
   114 00000161 6631D2              <1> 	xor edx, edx
   115 00000164 6631F6              <1> 	xor esi, esi
   116 00000167 6631FF              <1> 	xor edi, edi	;;reset registers
   117 0000016A E95E01              <1> 	jmp pmode
   118                              <1> guiload2:
   119 0000016D B9E001              <1> 	mov cx, 480
   120 00000170 BA8002              <1> 	mov dx, 640
   121 00000173 8916[6A43]          <1> 	mov [resolutionx], dx
   122 00000177 01D2                <1> 	add dx, dx
   123 00000179 8916[6C43]          <1> 	mov [resolutionx2], dx
   124 0000017D 890E[6843]          <1> 	mov [resolutiony], cx
   125 00000181 B81200              <1> 	mov ax, 12h
   126 00000184 BB0000              <1> 	mov bx, 0
   127 00000187 CD10                <1> 	int 10h
   128 00000189 C606[A901]01        <1> 	mov byte [guinodo], 1
   129 0000018E 6631DB              <1> 	xor ebx, ebx
   130 00000191 6631C9              <1> 	xor ecx, ecx
   131 00000194 6631D2              <1> 	xor edx, edx
   132 00000197 6631F6              <1> 	xor esi, esi
   133 0000019A 6631FF              <1> 	xor edi, edi
   134 0000019D E92B01              <1> 	jmp pmode
   135                              <1> 
   136 000001A0 00                  <1> DriveNumber db 0
   137 000001A1 00000000            <1> lbaad dd 0
   138                              <1> 	
   139 000001A5 0000                <1> vesamode dw 0
   140 000001A7 0000                <1> videomodecache dw 0
   141                              <1> 
   142 000001A9 00                  <1> guinodo db 0
   143                              <1> tests:
   144 000001AA BB0700              <1> 	mov bx, 7
   145 000001AD B40E                <1> 	mov ah, 0Eh
   146 000001AF FEC0                <1> 	inc al
   147 000001B1 3C02                <1> 	cmp al, 2
   148 000001B3 7501                <1> 	jne cnttest
   149 000001B5 C3                  <1> 	ret
   150                              <1> cnttest:
   151 000001B6 CD10                <1> 	int 10h
   152 000001B8 EBF0                <1> 	jmp tests
   153                              <1> 
   154                              <1>     printrm:			; 'si' comes in with string address
   155 000001BA BB0700              <1> 	    mov bx,07		; write to display
   156 000001BD B40E                <1> 	    mov ah,0Eh		; screen function
   157 000001BF 8A04                <1>     prs2:    mov al,[si]         ; get next character
   158 000001C1 3C00                <1> 	    cmp al,0		; look for terminator 
   159 000001C3 7405                <1>             je finpr2		; zero byte at end of string
   160 000001C5 CD10                <1> 	    int 10h		; write character to screen.    
   161 000001C7 46                  <1>      	    inc si	     	; move to next character
   162 000001C8 EBF5                <1> 	    jmp prs2		; loop
   163 000001CA C3                  <1>     finpr2: ret
   164                              <1> 
   165 000001CB 0000000000          <1> dcnm db 0,0,0,0,0
   166 000001D0 0000                <1> dcnmend db 0,0
   167                              <1> 
   168                              <1> 
   169                              <1> decshow:
   170 000001D2 BE[CB01]            <1> 	mov si, dcnm
   171                              <1> decclear:
   172 000001D5 B030                <1> 	mov al, "0"
   173 000001D7 8804                <1> 	mov [si], al
   174 000001D9 46                  <1> 	inc si
   175 000001DA 81FE[D001]          <1> 	cmp si, dcnmend
   176 000001DE 76F5                <1> 	jbe decclear
   177 000001E0 4E                  <1> 	dec si
   178 000001E1 E81500              <1> 	call convertrm
   179 000001E4 BE[CB01]            <1> 	mov si, dcnm
   180                              <1> dectst:
   181 000001E7 8A04                <1> 	mov al, [si]
   182 000001E9 46                  <1> 	inc si
   183 000001EA 81FE[D001]          <1> 	cmp si, dcnmend
   184 000001EE 7704                <1> 	ja dectstend
   185 000001F0 3C30                <1> 	cmp al, "0"
   186 000001F2 76F3                <1> 	jbe dectst
   187                              <1> dectstend:
   188 000001F4 4E                  <1> 	dec si
   189 000001F5 E8C2FF              <1> 	call printrm
   190 000001F8 C3                  <1> 	ret
   191                              <1> 	
   192                              <1> 	
   193                              <1> convertrm:
   194 000001F9 4E                  <1> 	dec si
   195 000001FA 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   196                              <1> cnvrtrm:
   197 000001FC 89DE                <1> 	mov si, bx
   198 000001FE 81EE0300            <1> 	sub si, 3
   199 00000202 46                  <1> ten3rm:	inc si
   200 00000203 81F9E803            <1> 	cmp cx, 1000
   201 00000207 7208                <1> 	jb ten2rm
   202 00000209 81E9E803            <1> 	sub cx, 1000
   203 0000020D FE04                <1> 	inc byte [si]
   204 0000020F EBEB                <1> 	jmp cnvrtrm
   205 00000211 46                  <1> ten2rm:	inc si
   206 00000212 81F96400            <1> 	cmp cx, 100
   207 00000216 7208                <1> 	jb ten1rm
   208 00000218 81E96400            <1> 	sub cx, 100
   209 0000021C FE04                <1> 	inc byte [si]
   210 0000021E EBDC                <1> 	jmp cnvrtrm
   211 00000220 46                  <1> ten1rm:	inc si
   212 00000221 81F90A00            <1> 	cmp cx, 10
   213 00000225 7208                <1> 	jb ten0rm
   214 00000227 81E90A00            <1> 	sub cx, 10
   215 0000022B FE04                <1> 	inc byte [si]
   216 0000022D EBCD                <1> 	jmp cnvrtrm
   217 0000022F 46                  <1> ten0rm:	inc si
   218 00000230 81F90100            <1> 	cmp cx, 1
   219 00000234 7208                <1> 	jb tendnrm
   220 00000236 81E90100            <1> 	sub cx, 1
   221 0000023A FE04                <1> 	inc byte [si]
   222 0000023C EBBE                <1> 	jmp cnvrtrm
   223                              <1> tendnrm:
   224 0000023E C3                  <1> 	ret
   225                              <1> 
   226                              <1> 
   227                              <1> 
   228                              <1> 
   229                              <1>     char: 		    ;char must be in al
   230 0000023F BB0700              <1>        mov bx, 07
   231 00000242 B40E                <1> 	   mov ah, 0Eh
   232 00000244 CD10                <1> 	   int 10h
   233 00000246 C3                  <1> 	   ret
   234                              <1> 
   235                              <1> 		shutdown:
   236 00000247 0F20C0              <1> 				mov eax, cr0
   237 0000024A 24FE                <1> 				and al,0xFE     ; back to realmode
   238 0000024C 0F22C0              <1> 				mov  cr0, eax   ; by toggling bit again
   239 0000024F FB                  <1> 				sti
   240 00000250 B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   241 00000253 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   242 00000255 CD15                <1> 			INT 15h		; shut down
   243 00000257 B80453              <1> 			MOV AX, 5304h
   244 0000025A 31DB                <1> 			XOR BX, BX
   245 0000025C CD15                <1> 			INT 15h		; Interrupt 15h originally was
   246 0000025E B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   247 00000261 31DB                <1> 			XOR BX, BX	; but is still in use for
   248 00000263 CD15                <1> 			INT 15h		; diverse things
   249 00000265 B80753              <1> 			MOV AX, 5307h
   250 00000268 BB0100              <1> 			MOV BX, 1
   251 0000026B B90300              <1> 			MOV CX, 3
   252 0000026E CD15                <1> 			INT 15h
   253 00000270 CF                  <1> 			IRET
   254                              <1> 
   255                              <1> 	coldboot:
   256 00000271 0F20C0              <1> 			   mov eax, cr0
   257 00000274 24FE                <1> 			   and al,0xFE     ; back to realmode
   258 00000276 0F22C0              <1> 			   mov  cr0, eax   ; by toggling bit again
   259 00000279 FB                  <1> 			   sti
   260 0000027A B84000              <1> 			MOV AX, 0040h
   261 0000027D 8EC0                <1> 			MOV ES, AX
   262 0000027F 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   263 00000286 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   264 0000028B CF                  <1> 			IRET
   265                              <1> 
   266                              <1> 		warmboot:
   267 0000028C E81200              <1> 			call realmode
   268 0000028F B84000              <1> 			MOV AX, 0040h
   269 00000292 8EC0                <1> 			MOV ES, AX
   270 00000294 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   271 0000029B EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   272 000002A0 CF                  <1> 			IRET
   273                              <1> 
   274                              <1> 
   275                              <1> realmode:
   276 000002A1 0F20C0              <1>    mov eax, cr0
   277 000002A4 24FE                <1>    and al,0xFE     ; back to realmode
   278 000002A6 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   279 000002A9 FB                  <1>    sti
   280 000002AA 66B800000000        <1>    mov eax, 0
   281 000002B0 C3                  <1>    ret
   282                              <1>    
   283 000002B1 426F6F7420696E746F- <1> bootmsg:	db "Boot into the GUI?(y/n)",10,13,0
   284 000002BA 20746865204755493F- <1>
   285 000002C3 28792F6E290A0D00    <1>
   286                                      %include 'source/pmode.asm'
   287                              <1> [BITS 16]
   288                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   289                              <1> ;	16-bit real mode
   290                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   291                              <1> 
   292                              <1> pmode:
   293 000002CB BA9200              <1> 	mov dx, 0x92
   294 000002CE EC                  <1> 	in al, dx	;;A20
   295 000002CF 0C02                <1> 	or al, 2
   296 000002D1 EE                  <1> 	out dx, al
   297 000002D2 66BB00000000        <1> 	mov ebx, 0
   298 000002D8 8CCB                <1> 	mov bx,cs		; EBX=segment
   299 000002DA 66C1E304            <1> 	shl ebx,4		;	<< 4
   300 000002DE 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   301 000002E2 A3[3A0C]            <1> 	mov [gdt2 + 2],ax
   302 000002E5 A3[420C]            <1> 	mov [gdt3 + 2],ax
   303 000002E8 66C1E810            <1> 	shr eax,16
   304 000002EC A2[3C0C]            <1> 	mov [gdt2 + 4],al
   305 000002EF A2[440C]            <1> 	mov [gdt3 + 4],al
   306 000002F2 8826[3F0C]          <1> 	mov [gdt2 + 7],ah
   307 000002F6 8826[470C]          <1> 	mov [gdt3 + 7],ah
   308                              <1> 	
   309 000002FA 66B8[00000000]      <1> 	mov eax, stack
   310 00000300 A3[4A0C]            <1> 	mov [gdts + 2],ax
   311 00000303 66C1E810            <1> 	shr eax,16
   312 00000307 A2[4C0C]            <1> 	mov [gdts + 4],al
   313 0000030A 8826[4F0C]          <1> 	mov [gdts + 7],ah
   314 0000030E 66A1[0704]          <1> 	mov eax, [newcodecache]
   315 00000312 A3[520C]            <1> 	mov [gdt4 + 2],ax
   316 00000315 A3[5A0C]            <1> 	mov [gdt5 + 2],ax
   317 00000318 66C1E810            <1> 	shr eax,16
   318 0000031C A2[540C]            <1> 	mov [gdt4 + 4],al
   319 0000031F A2[5C0C]            <1> 	mov [gdt5 + 4],al
   320 00000322 8826[570C]          <1> 	mov [gdt4 + 7],ah
   321 00000326 8826[5F0C]          <1> 	mov [gdt5 + 7],ah
   322                              <1> 	
   323                              <1> ; fix up gdt and idt
   324 0000032A 67668D83[280C0000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   325 00000332 66A3[1E0C]          <1> 	mov [gdtr + 2],eax
   326 00000336 67668D83[600C0000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   327 0000033E 66A3[240C]          <1> 	mov [idtr + 2],eax
   328 00000342 FA                  <1> 	cli
   329 00000343 0F0116[1C0C]        <1> 	lgdt [gdtr]
   330 00000348 0F011E[220C]        <1> 	lidt [idtr]
   331 0000034D 66BB00000000        <1> 	mov ebx, 0
   332 00000353 8CDB                <1> 	mov bx, ds
   333 00000355 66891E[0304]        <1> 	mov [basecache], ebx
   334 0000035A 0F20C0              <1> 	mov eax,cr0
   335 0000035D 0C01                <1> 	or al,1
   336 0000035F 0F22C0              <1> 	mov cr0,eax
   337 00000362 EA[6B03]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   338                              <1> [BITS 32]
   339 00000367 90                  <1> 	nop
   340 00000368 90                  <1> 	nop
   341 00000369 90                  <1> 	nop
   342 0000036A 90                  <1> 	nop
   343                              <1> do_pm:
   344 0000036B B800000000          <1> 	mov eax, 0
   345 00000370 66B81800            <1> 	mov ax, SYS_DATA_SEL
   346 00000374 8ED8                <1> 	mov ds,ax
   347 00000376 8ED0                <1> 	mov ss,ax	;;can switch back to STACK_SEL later
   348 00000378 BC[00100000]        <1> 	mov esp, stackend	;;can switch back to 4096 later
   349 0000037D 90                  <1> 	nop
   350 0000037E 90                  <1> 	nop
   351 0000037F 8EC0                <1> 	mov es, ax
   352 00000381 8EE0                <1> 	mov fs, ax
   353 00000383 66B83000            <1> 	mov ax, NEW_DATA_SEL
   354 00000387 8EE8                <1> 	mov gs, ax
   355                              <1> 	
   356                              <1> copykernel:
   357 00000389 648B06              <1> 	mov eax, [fs:esi]
   358 0000038C 658906              <1> 	mov [gs:esi], eax
   359 0000038F 81C604000000        <1> 	add esi, 4
   360 00000395 81FE[00000000]      <1> 	cmp esi, bssstart
   361 0000039B 72EC                <1> 	jb copykernel
   362 0000039D EA[A4030000]2800    <1> 	jmp NEW_CODE_SEL:done_copy
   363                              <1> 	
   364                              <1> done_copy:
   365 000003A4 66B83000            <1> 	mov ax, NEW_DATA_SEL	;;these MUST be setup AFTER the kernel switches places!!!
   366 000003A8 8ED8                <1> 	mov ds, ax
   367 000003AA 8ED0                <1> 	mov ss, ax
   368 000003AC BC[00100000]        <1> 	mov esp, stackend
   369 000003B1 90                  <1> 	nop
   370 000003B2 90                  <1> 	nop
   371 000003B3 66B83000            <1> 	mov ax, NEW_DATA_SEL
   372 000003B7 8EC0                <1> 	mov es, ax
   373 000003B9 8EE0                <1> 	mov fs, ax
   374 000003BB 66B81800            <1> 	mov ax, SYS_DATA_SEL
   375 000003BF 8EE8                <1> 	mov gs, ax
   376                              <1> 	
   377 000003C1 A1[07040000]        <1> 	mov eax, [newcodecache]
   378 000003C6 C1E804              <1> 	shr eax, 4
   379 000003C9 A3[03040000]        <1> 	mov [basecache], eax
   380 000003CE BE[00000000]        <1> 	mov esi, bssstart
   381 000003D3 B800000000          <1> 	mov eax, 0
   382                              <1> clearkernelbuffers:
   383 000003D8 8906                <1> 	mov [esi], eax
   384 000003DA 81C604000000        <1> 	add esi, 4
   385 000003E0 81FE[27642000]      <1> 	cmp esi, bssend
   386 000003E6 72F0                <1> 	jb clearkernelbuffers
   387 000003E8 803D[A9010000]01    <1> 	cmp byte [guinodo], 1
   388 000003EF 7407                <1> 	je guidonot
   389 000003F1 90                  <1> 	nop
   390 000003F2 90                  <1> 	nop
   391 000003F3 E9962F0000          <1> 	jmp gui
   392                              <1> guidonot:
   393 000003F8 90                  <1> 	nop
   394 000003F9 90                  <1> 	nop
   395 000003FA E914110000          <1> 	jmp os
   396                              <1> 	
   397 000003FF 00000000            <1> user2codepoint dw 0,0
   398 00000403 00000000            <1> basecache dd 0
   399 00000407 00001000            <1> newcodecache dd 0x100000
   400                              <1> 	
   401                              <1> 
   402                              <1> unhand:	
   403                              <1> 	%assign i 0
   404                              <1> 	%rep 40
   405                              <1> 	cli
   406                              <1> 	mov byte [intprob], i
   407                              <1> 	jmp unhand2
   408                              <1> 	%assign i i+1
   409                              <1> 	%endrep
   410 0000040B FA                  <2>  cli
   411 0000040C C605[6F080000]00    <2>  mov byte [intprob], i
   412 00000413 E9FB010000          <2>  jmp unhand2
   413                              <2>  %assign i i+1
   414 00000418 FA                  <2>  cli
   415 00000419 C605[6F080000]01    <2>  mov byte [intprob], i
   416 00000420 E9EE010000          <2>  jmp unhand2
   417                              <2>  %assign i i+1
   418 00000425 FA                  <2>  cli
   419 00000426 C605[6F080000]02    <2>  mov byte [intprob], i
   420 0000042D E9E1010000          <2>  jmp unhand2
   421                              <2>  %assign i i+1
   422 00000432 FA                  <2>  cli
   423 00000433 C605[6F080000]03    <2>  mov byte [intprob], i
   424 0000043A E9D4010000          <2>  jmp unhand2
   425                              <2>  %assign i i+1
   426 0000043F FA                  <2>  cli
   427 00000440 C605[6F080000]04    <2>  mov byte [intprob], i
   428 00000447 E9C7010000          <2>  jmp unhand2
   429                              <2>  %assign i i+1
   430 0000044C FA                  <2>  cli
   431 0000044D C605[6F080000]05    <2>  mov byte [intprob], i
   432 00000454 E9BA010000          <2>  jmp unhand2
   433                              <2>  %assign i i+1
   434 00000459 FA                  <2>  cli
   435 0000045A C605[6F080000]06    <2>  mov byte [intprob], i
   436 00000461 E9AD010000          <2>  jmp unhand2
   437                              <2>  %assign i i+1
   438 00000466 FA                  <2>  cli
   439 00000467 C605[6F080000]07    <2>  mov byte [intprob], i
   440 0000046E E9A0010000          <2>  jmp unhand2
   441                              <2>  %assign i i+1
   442 00000473 FA                  <2>  cli
   443 00000474 C605[6F080000]08    <2>  mov byte [intprob], i
   444 0000047B E993010000          <2>  jmp unhand2
   445                              <2>  %assign i i+1
   446 00000480 FA                  <2>  cli
   447 00000481 C605[6F080000]09    <2>  mov byte [intprob], i
   448 00000488 E986010000          <2>  jmp unhand2
   449                              <2>  %assign i i+1
   450 0000048D FA                  <2>  cli
   451 0000048E C605[6F080000]0A    <2>  mov byte [intprob], i
   452 00000495 E979010000          <2>  jmp unhand2
   453                              <2>  %assign i i+1
   454 0000049A FA                  <2>  cli
   455 0000049B C605[6F080000]0B    <2>  mov byte [intprob], i
   456 000004A2 E96C010000          <2>  jmp unhand2
   457                              <2>  %assign i i+1
   458 000004A7 FA                  <2>  cli
   459 000004A8 C605[6F080000]0C    <2>  mov byte [intprob], i
   460 000004AF E95F010000          <2>  jmp unhand2
   461                              <2>  %assign i i+1
   462 000004B4 FA                  <2>  cli
   463 000004B5 C605[6F080000]0D    <2>  mov byte [intprob], i
   464 000004BC E952010000          <2>  jmp unhand2
   465                              <2>  %assign i i+1
   466 000004C1 FA                  <2>  cli
   467 000004C2 C605[6F080000]0E    <2>  mov byte [intprob], i
   468 000004C9 E945010000          <2>  jmp unhand2
   469                              <2>  %assign i i+1
   470 000004CE FA                  <2>  cli
   471 000004CF C605[6F080000]0F    <2>  mov byte [intprob], i
   472 000004D6 E938010000          <2>  jmp unhand2
   473                              <2>  %assign i i+1
   474 000004DB FA                  <2>  cli
   475 000004DC C605[6F080000]10    <2>  mov byte [intprob], i
   476 000004E3 E92B010000          <2>  jmp unhand2
   477                              <2>  %assign i i+1
   478 000004E8 FA                  <2>  cli
   479 000004E9 C605[6F080000]11    <2>  mov byte [intprob], i
   480 000004F0 E91E010000          <2>  jmp unhand2
   481                              <2>  %assign i i+1
   482 000004F5 FA                  <2>  cli
   483 000004F6 C605[6F080000]12    <2>  mov byte [intprob], i
   484 000004FD E911010000          <2>  jmp unhand2
   485                              <2>  %assign i i+1
   486 00000502 FA                  <2>  cli
   487 00000503 C605[6F080000]13    <2>  mov byte [intprob], i
   488 0000050A E904010000          <2>  jmp unhand2
   489                              <2>  %assign i i+1
   490 0000050F FA                  <2>  cli
   491 00000510 C605[6F080000]14    <2>  mov byte [intprob], i
   492 00000517 E9F7000000          <2>  jmp unhand2
   493                              <2>  %assign i i+1
   494 0000051C FA                  <2>  cli
   495 0000051D C605[6F080000]15    <2>  mov byte [intprob], i
   496 00000524 E9EA000000          <2>  jmp unhand2
   497                              <2>  %assign i i+1
   498 00000529 FA                  <2>  cli
   499 0000052A C605[6F080000]16    <2>  mov byte [intprob], i
   500 00000531 E9DD000000          <2>  jmp unhand2
   501                              <2>  %assign i i+1
   502 00000536 FA                  <2>  cli
   503 00000537 C605[6F080000]17    <2>  mov byte [intprob], i
   504 0000053E E9D0000000          <2>  jmp unhand2
   505                              <2>  %assign i i+1
   506 00000543 FA                  <2>  cli
   507 00000544 C605[6F080000]18    <2>  mov byte [intprob], i
   508 0000054B E9C3000000          <2>  jmp unhand2
   509                              <2>  %assign i i+1
   510 00000550 FA                  <2>  cli
   511 00000551 C605[6F080000]19    <2>  mov byte [intprob], i
   512 00000558 E9B6000000          <2>  jmp unhand2
   513                              <2>  %assign i i+1
   514 0000055D FA                  <2>  cli
   515 0000055E C605[6F080000]1A    <2>  mov byte [intprob], i
   516 00000565 E9A9000000          <2>  jmp unhand2
   517                              <2>  %assign i i+1
   518 0000056A FA                  <2>  cli
   519 0000056B C605[6F080000]1B    <2>  mov byte [intprob], i
   520 00000572 E99C000000          <2>  jmp unhand2
   521                              <2>  %assign i i+1
   522 00000577 FA                  <2>  cli
   523 00000578 C605[6F080000]1C    <2>  mov byte [intprob], i
   524 0000057F E98F000000          <2>  jmp unhand2
   525                              <2>  %assign i i+1
   526 00000584 FA                  <2>  cli
   527 00000585 C605[6F080000]1D    <2>  mov byte [intprob], i
   528 0000058C E982000000          <2>  jmp unhand2
   529                              <2>  %assign i i+1
   530 00000591 FA                  <2>  cli
   531 00000592 C605[6F080000]1E    <2>  mov byte [intprob], i
   532 00000599 E975000000          <2>  jmp unhand2
   533                              <2>  %assign i i+1
   534 0000059E FA                  <2>  cli
   535 0000059F C605[6F080000]1F    <2>  mov byte [intprob], i
   536 000005A6 E968000000          <2>  jmp unhand2
   537                              <2>  %assign i i+1
   538 000005AB FA                  <2>  cli
   539 000005AC C605[6F080000]20    <2>  mov byte [intprob], i
   540 000005B3 E95B000000          <2>  jmp unhand2
   541                              <2>  %assign i i+1
   542 000005B8 FA                  <2>  cli
   543 000005B9 C605[6F080000]21    <2>  mov byte [intprob], i
   544 000005C0 E94E000000          <2>  jmp unhand2
   545                              <2>  %assign i i+1
   546 000005C5 FA                  <2>  cli
   547 000005C6 C605[6F080000]22    <2>  mov byte [intprob], i
   548 000005CD E941000000          <2>  jmp unhand2
   549                              <2>  %assign i i+1
   550 000005D2 FA                  <2>  cli
   551 000005D3 C605[6F080000]23    <2>  mov byte [intprob], i
   552 000005DA E934000000          <2>  jmp unhand2
   553                              <2>  %assign i i+1
   554 000005DF FA                  <2>  cli
   555 000005E0 C605[6F080000]24    <2>  mov byte [intprob], i
   556 000005E7 E927000000          <2>  jmp unhand2
   557                              <2>  %assign i i+1
   558 000005EC FA                  <2>  cli
   559 000005ED C605[6F080000]25    <2>  mov byte [intprob], i
   560 000005F4 E91A000000          <2>  jmp unhand2
   561                              <2>  %assign i i+1
   562 000005F9 FA                  <2>  cli
   563 000005FA C605[6F080000]26    <2>  mov byte [intprob], i
   564 00000601 E90D000000          <2>  jmp unhand2
   565                              <2>  %assign i i+1
   566 00000606 FA                  <2>  cli
   567 00000607 C605[6F080000]27    <2>  mov byte [intprob], i
   568 0000060E E900000000          <2>  jmp unhand2
   569                              <2>  %assign i i+1
   570                              <1> unhand2:
   571 00000613 1E                  <1> 	push ds
   572 00000614 06                  <1> 	push es
   573 00000615 0FA0                <1> 	push fs
   574 00000617 0FA8                <1> 	push gs
   575 00000619 16                  <1> 	push ss
   576 0000061A 60                  <1> 	pushad
   577 0000061B 803D[E8340000]00    <1> 	cmp byte [guion], 0
   578 00000622 0F8432000000        <1> 	je near noguiunhandstuff
   579 00000628 66C705[69080000]08- <1> 	mov word [locunhandy], 8
   580 00000630 00                  <1>
   581 00000631 66C705[6B080000]08- <1> 	mov word [locunhandx], 8
   582 00000639 00                  <1>
   583 0000063A 668B1D[8C330000]    <1> 	mov bx, [background]
   584 00000641 66891D[6D080000]    <1> 	mov [backgroundcache], bx
   585 00000648 C605[792D0000]01    <1> 	mov byte [mousedisabled],1
   586 0000064F 66BB00F8            <1> 	mov bx, 1111100000000000b
   587 00000653 66891D[8C330000]    <1> 	mov [background], bx
   588                              <1> noguiunhandstuff
   589 0000065A 89E6                <1> 	mov esi, esp
   590 0000065C 8935[61080000]      <1> 	mov [espfirst], esi
   591 00000662 81C6BC000000        <1> 	add esi, ((unhndrgend - unhndrg)/15)*4
   592 00000668 8935[5D080000]      <1> 	mov [esploc], esi
   593 0000066E BE[78080000]        <1> 	mov esi, unhandmsg
   594 00000673 8935[65080000]      <1> 	mov [esiloc], esi
   595 00000679 BE[19580000]        <1> 	mov esi, line
   596 0000067E E84B0A0000          <1> 	call print
   597 00000683 B900000000          <1> 	mov ecx, 0
   598 00000688 8A0D[6F080000]      <1> 	mov cl, [intprob]
   599 0000068E E862010000          <1> 	call expdump
   600                              <1> dumpstack:
   601 00000693 8B35[5D080000]      <1> 	mov esi, [esploc]
   602 00000699 39E6                <1> 	cmp esi, esp
   603 0000069B 7216                <1> 	jb donedump
   604 0000069D 368B0E              <1> 	mov ecx, [ss:esi]
   605 000006A0 81EE04000000        <1> 	sub esi, 4
   606 000006A6 8935[5D080000]      <1> 	mov [esploc], esi
   607 000006AC E844010000          <1> 	call expdump
   608 000006B1 EBE0                <1> 	jmp dumpstack
   609                              <1> donedump:
   610 000006B3 0F20C1              <1> 	mov ecx, cr0
   611 000006B6 E83A010000          <1> 	call expdump
   612 000006BB 0F20D1              <1> 	mov ecx, cr2
   613 000006BE E832010000          <1> 	call expdump
   614 000006C3 0F20D9              <1> 	mov ecx, cr3
   615 000006C6 E82A010000          <1> 	call expdump
   616 000006CB 0F20E1              <1> 	mov ecx, cr4
   617 000006CE E822010000          <1> 	call expdump
   618 000006D3 8B35[5D080000]      <1> 	mov esi, [esploc]
   619 000006D9 368B7C2434          <1> 	mov edi, [ss:esp + 52]
   620 000006DE 81C710000000        <1> 	add edi, 16
   621 000006E4 893D[74080000]      <1> 	mov [codelocend], edi
   622 000006EA 81EF20000000        <1> 	sub edi, 32
   623                              <1> dumpcodeloop:
   624 000006F0 893D[70080000]      <1> 	mov [codeloc], edi
   625 000006F6 8B0F                <1> 	mov ecx, [edi]
   626 000006F8 E8F8000000          <1> 	call expdump
   627 000006FD 8B3D[70080000]      <1> 	mov edi, [codeloc]
   628 00000703 81C704000000        <1> 	add edi, 4
   629 00000709 3B3D[74080000]      <1> 	cmp edi, [codelocend]
   630 0000070F 72DF                <1> 	jb dumpcodeloop
   631 00000711 BE[CF070000]        <1> 	mov esi, backtoosmsg
   632 00000716 803D[E8340000]00    <1> 	cmp byte [guion], 0
   633 0000071D 750A                <1> 	jne guibacktomsg
   634 0000071F E8AA090000          <1> 	call print
   635 00000724 E91B000000          <1> 	jmp backtomsgdone
   636                              <1> guibacktomsg:
   637 00000729 668B15[6B080000]    <1> 	mov dx, [locunhandx]
   638 00000730 668B0D[69080000]    <1> 	mov cx, [locunhandy]
   639 00000737 66B80100            <1> 	mov ax, 1
   640 0000073B 66BB0000            <1> 	mov bx, 0
   641 0000073F E896370000          <1> 	call showstring2
   642                              <1> backtomsgdone:
   643 00000744 B000                <1> 	mov al, 0
   644 00000746 E83D090000          <1> 	call int302
   645 0000074B 803D[6F080000]03    <1> 	cmp byte [intprob], 3
   646 00000752 753D                <1> 	jne nodebugint
   647 00000754 803D[E8340000]00    <1> 	cmp byte [guion], 0
   648 0000075B 7423                <1> 	je nodebuggui
   649 0000075D 668B1D[6D080000]    <1> 	mov bx, [backgroundcache]
   650 00000764 66891D[8C330000]    <1> 	mov [background], bx
   651 0000076B 66BB0000            <1> 	mov bx, 0
   652 0000076F C605[792D0000]00    <1> 	mov byte [mousedisabled], 0
   653 00000776 E8D42B0000          <1> 	call guiclear
   654 0000077B E800340000          <1> 	call reloadallgraphics
   655                              <1> nodebuggui:
   656 00000780 8B35[61080000]      <1> 	mov esi, [espfirst]
   657 00000786 89F4                <1> 	mov esp, esi
   658 00000788 61                  <1> 	popad
   659 00000789 17                  <1> 	pop ss
   660 0000078A 0FA9                <1> 	pop gs
   661 0000078C 0FA1                <1> 	pop fs
   662 0000078E 07                  <1> 	pop es
   663 0000078F 1F                  <1> 	pop ds
   664 00000790 CF                  <1> 	iret
   665                              <1> nodebugint:
   666 00000791 61                  <1> 	popad
   667 00000792 17                  <1> 	pop ss
   668 00000793 0FA9                <1> 	pop gs
   669 00000795 0FA1                <1> 	pop fs
   670 00000797 07                  <1> 	pop es
   671 00000798 1F                  <1> 	pop ds
   672 00000799 803D[E8340000]00    <1> 	cmp byte [guion], 0
   673 000007A0 7428                <1> 	je returnunhandgui
   674 000007A2 668B1D[6D080000]    <1> 	mov bx, [backgroundcache]
   675 000007A9 66891D[8C330000]    <1> 	mov [background], bx
   676 000007B0 66BB0000            <1> 	mov bx, 0
   677 000007B4 C605[792D0000]00    <1> 	mov byte [mousedisabled], 0
   678 000007BB E88F2B0000          <1> 	call guiclear
   679 000007C0 E8BB330000          <1> 	call reloadallgraphics
   680 000007C5 E9C42B0000          <1> 	jmp gui
   681                              <1> returnunhandgui:
   682 000007CA E9600E0000          <1> 	jmp nwcmd
   683 000007CF 507265737320616E79- <1> backtoosmsg db "Press any key to return to SollerOS",10,13,0
   684 000007D8 206B657920746F2072- <1>
   685 000007E1 657475726E20746F20- <1>
   686 000007EA 536F6C6C65724F530A- <1>
   687 000007F3 0D00                <1>
   688                              <1> expdump:
   689 000007F5 8B35[65080000]      <1> 	mov esi, [esiloc]
   690 000007FB 89F7                <1> 	mov edi, esi
   691 000007FD 81C70F000000        <1> 	add edi, 15
   692 00000803 81C604000000        <1> 	add esi, 4
   693 00000809 893D[65080000]      <1> 	mov [esiloc], edi
   694 0000080F 81EF03000000        <1> 	sub edi, 3
   695 00000815 E8D8110000          <1> 	call converthex
   696 0000081A 81EE04000000        <1> 	sub esi, 4
   697 00000820 803D[E8340000]00    <1> 	cmp byte [guion], 0
   698 00000827 0F842A000000        <1> 	je near expdumptext
   699 0000082D 668B0D[69080000]    <1> 	mov cx, [locunhandy]
   700 00000834 668B15[6B080000]    <1> 	mov dx, [locunhandx]
   701 0000083B 66B80100            <1> 	mov ax, 1
   702 0000083F 66BB0000            <1> 	mov bx, 0
   703 00000843 E892360000          <1> 	call showstring2
   704 00000848 66890D[69080000]    <1> 	mov [locunhandy], cx
   705 0000084F 668915[6B080000]    <1> 	mov [locunhandx], dx
   706 00000856 C3                  <1> 	ret
   707                              <1> expdumptext:
   708 00000857 E872080000          <1> 	call print
   709 0000085C C3                  <1> 	ret
   710 0000085D 00000000            <1> esploc dd 0
   711 00000861 00000000            <1> espfirst dd 0
   712 00000865 00000000            <1> esiloc dd 0
   713 00000869 0100                <1> locunhandy dw 1
   714 0000086B 0100                <1> locunhandx dw 1
   715 0000086D 0000                <1> backgroundcache dw 0
   716 0000086F 00                  <1> intprob db 0
   717 00000870 00000000            <1> codeloc dd 0
   718 00000874 00000000            <1> codelocend dd 0
   719                              <1> 	unhandmsg:	
   720 00000878 494E543D3030303030- <1> 			db "INT=00000000",10,13,0
   721 00000881 3030300A0D00        <1>
   722                              <1> unhndrg:
   723 00000887 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   724 00000890 303030202000<rept>  <1>
   725 000008F0 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   726 000008F9 3030300A0D00        <1>
   727 000008FF FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   728 00000908 303030202000<rept>  <1>
   729 00000968 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   730 00000971 3030300A0D00        <1>
   731 00000977 FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   732 00000980 303030202000<rept>  <1>
   733 000009E0 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   734 000009E9 3030300A0D00        <1>
   735 000009EF FFFFFFFF3030303030- <1> 	times 7 db 255,255,255,255,"00000000  ",0	;;this dumps the stack before the stack frame in question
   736 000009F8 303030202000<rept>  <1>
   737 00000A58 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   738 00000A61 3030300A0D00        <1>
   739                              <1> unhandregs:
   740 00000A67 45464C3D3030303030- <1> 			db "EFL=00000000",10,13,0
   741 00000A70 3030300A0D00        <1>
   742 00000A76 43533A3D3030303030- <1> 			db "CS:=00000000",10,13,0
   743 00000A7F 3030300A0D00        <1>
   744 00000A85 4549503D3030303030- <1> 			db "EIP=00000000",10,13,0
   745 00000A8E 3030300A0D00        <1>
   746 00000A94 44533A3D3030303030- <1> 			db "DS:=00000000",10,13,0
   747 00000A9D 3030300A0D00        <1>
   748 00000AA3 45533A3D3030303030- <1> 			db "ES:=00000000",10,13,0
   749 00000AAC 3030300A0D00        <1>
   750 00000AB2 46533A3D3030303030- <1> 			db "FS:=00000000",10,13,0
   751 00000ABB 3030300A0D00        <1>
   752 00000AC1 47533A3D3030303030- <1> 			db "GS:=00000000",10,13,0
   753 00000ACA 3030300A0D00        <1>
   754 00000AD0 53533A3D3030303030- <1> 			db "SS:=00000000",10,13,0
   755 00000AD9 3030300A0D00        <1>
   756 00000ADF 4541583D3030303030- <1> 			db "EAX=00000000",10,13,0
   757 00000AE8 3030300A0D00        <1>
   758 00000AEE 4543583D3030303030- <1> 			db "ECX=00000000",10,13,0
   759 00000AF7 3030300A0D00        <1>
   760 00000AFD 4544583D3030303030- <1> 			db "EDX=00000000",10,13,0
   761 00000B06 3030300A0D00        <1>
   762 00000B0C 4542583D3030303030- <1> 			db "EBX=00000000",10,13,0
   763 00000B15 3030300A0D00        <1>
   764 00000B1B 4553503D3030303030- <1> 			db "ESP=00000000",10,13,0
   765 00000B24 3030300A0D00        <1>
   766 00000B2A 4542503D3030303030- <1> 			db "EBP=00000000",10,13,0
   767 00000B33 3030300A0D00        <1>
   768 00000B39 4553493D3030303030- <1> 			db "ESI=00000000",10,13,0
   769 00000B42 3030300A0D00        <1>
   770 00000B48 4544493D3030303030- <1> unhndrgend:	db "EDI=00000000",10,13,0
   771 00000B51 3030300A0D00        <1>
   772 00000B57 4352303D3030303030- <1> 			db "CR0=00000000",10,13,0
   773 00000B60 3030300A0D00        <1>
   774 00000B66 4352323D3030303030- <1> 			db "CR2=00000000",10,13,0
   775 00000B6F 3030300A0D00        <1>
   776 00000B75 4352333D3030303030- <1> 			db "CR3=00000000",10,13,0
   777 00000B7E 3030300A0D00        <1>
   778 00000B84 4352343D3030303030- <1> 			db "CR4=00000000",10,13,0
   779 00000B8D 3030300A0D00        <1>
   780 00000B93 FFFFFFFF3030303030- <1> unhandcode: times 2 db 255,255,255,255,"00000000  ",0	;;this dumps the code before and after the interrupt in question
   781 00000B9C 303030202000<rept>  <1>
   782 00000BB1 FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000 ",255,0
   783 00000BBA 30303020FF00        <1>
   784 00000BC0 FFFFFF5B3030303030- <1> 			db 255,255,255,"[00000000] ",0
   785 00000BC9 3030305D2000        <1>
   786 00000BCF FFFFFFFF3030303030- <1> 			times 3 db 255,255,255,255,"00000000  ",0
   787 00000BD8 303030202000<rept>  <1>
   788 00000BFC FFFFFFFF3030303030- <1> 			db 255,255,255,255,"00000000",10,13,0
   789 00000C05 3030300A0D00        <1>
   790                              <1> unhandmsgend:
   791                              <1> 
   792                              <1> timerinterrupt:
   793 00000C0B 803D[42510000]01    <1> 	cmp byte [threadson], 1
   794 00000C12 7505                <1> 	jne handled
   795 00000C14 E9E74A0000          <1> 	jmp threadswitch
   796                              <1> 	
   797                              <1> handled:
   798 00000C19 CF                  <1> 	iret
   799 00000C1A EBFE                <1> 	jmp $
   800                              <1> [BITS 16]
   801                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   802                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   803                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   804 00000C1C 3700                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   805 00000C1E 00000000            <1> 	dd 0    		; filled with linear, physical address of GDT
   806                              <1> 
   807 00000C22 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   808 00000C24 00000000            <1> 	dd 0			; filled with linear, physical address of IDT
   809                              <1> 
   810                              <1> 
   811 00000C28 0000                <1> gdt:	dw 0			; limit 15:0
   812 00000C2A 0000                <1> 	dw 0			; base 15:0
   813 00000C2C 00                  <1> 	db 0			; base 23:16
   814 00000C2D 00                  <1> 	db 0			; type
   815 00000C2E 00                  <1> 	db 0			; limit 19:16, flags
   816 00000C2F 00                  <1> 	db 0			; base 31:24
   817                              <1> ; linear data segment descriptor
   818                              <1> LINEAR_SEL	equ	$-gdt
   819 00000C30 FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   820 00000C32 0000                <1> 	dw 0			; base for this one is always 0
   821 00000C34 00                  <1> 	db 0
   822 00000C35 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   823 00000C36 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   824 00000C37 00                  <1> 	db 0
   825                              <1> ; code segment descriptor
   826                              <1> SYS_CODE_SEL	equ	$-gdt
   827 00000C38 FFFF                <1> gdt2:	dw 0xFFFF
   828 00000C3A 0000                <1> 	dw 0			; (base gets set above)
   829 00000C3C 00                  <1> 	db 0
   830 00000C3D 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   831 00000C3E CF                  <1> 	db 0xCF
   832 00000C3F 00                  <1> 	db 0
   833                              <1> ; data segment descriptor
   834                              <1> SYS_DATA_SEL	equ	$-gdt
   835 00000C40 FFFF                <1> gdt3:	dw 0xFFFF
   836 00000C42 0000                <1> 	dw 0			; (base gets set above)
   837 00000C44 00                  <1> 	db 0
   838 00000C45 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   839 00000C46 CF                  <1> 	db 0xCF
   840 00000C47 00                  <1> 	db 0
   841                              <1> STACK_SEL	equ	$-gdt	;;this is no longer used for various reasons
   842 00000C48 0100                <1> gdts:	dw 1
   843 00000C4A 0000                <1> 	dw 0			; (base gets set above)
   844 00000C4C 00                  <1> 	db 0
   845 00000C4D 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   846 00000C4E C0                  <1> 	db 0xC0
   847 00000C4F 00                  <1> 	db 0
   848                              <1> NEW_CODE_SEL	equ	$-gdt
   849 00000C50 FFFF                <1> gdt4:	dw 0xFFFF
   850 00000C52 0000                <1> 	dw 0			; (base gets set above)
   851 00000C54 00                  <1> 	db 0
   852 00000C55 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   853 00000C56 CF                  <1> 	db 0xCF
   854 00000C57 00                  <1> 	db 0
   855                              <1> ; data segment descriptor
   856                              <1> NEW_DATA_SEL	equ	$-gdt
   857 00000C58 FFFF                <1> gdt5:	dw 0xFFFF
   858 00000C5A 0000                <1> 	dw 0			; (base gets set above)
   859 00000C5C 00                  <1> 	db 0
   860 00000C5D 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   861 00000C5E CF                  <1> 	db 0xCF
   862 00000C5F 00                  <1> 	db 0
   863                              <1> gdt_end:
   864                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   865                              <1> ;	interrupt descriptor table (IDT)
   866                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   867                              <1> ; 32 reserved interrupts:
   868                              <1> idt:	
   869                              <1> %assign i 0
   870                              <1> %rep    8
   871                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   872                              <1> %assign i i+1 
   873                              <1> %endrep
   874 00000C60 [0B04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   875                              <2> %assign i i+1
   876 00000C68 [1804]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   877                              <2> %assign i i+1
   878 00000C70 [2504]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   879                              <2> %assign i i+1
   880 00000C78 [3204]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   881                              <2> %assign i i+1
   882 00000C80 [3F04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   883                              <2> %assign i i+1
   884 00000C88 [4C04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   885                              <2> %assign i i+1
   886 00000C90 [5904]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   887                              <2> %assign i i+1
   888 00000C98 [6604]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   889                              <2> %assign i i+1
   890 00000CA0 [0B0C]2800008E0000  <1> 		dw timerinterrupt,NEW_CODE_SEL,0x8E00,0
   891                              <1> %assign i 9
   892                              <1> %rep    6
   893                              <1>         dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   894                              <1> %assign i i+1 
   895                              <1> %endrep
   896 00000CA8 [8004]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   897                              <2> %assign i i+1
   898 00000CB0 [8D04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   899                              <2> %assign i i+1
   900 00000CB8 [9A04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   901                              <2> %assign i i+1
   902 00000CC0 [A704]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   903                              <2> %assign i i+1
   904 00000CC8 [B404]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   905                              <2> %assign i i+1
   906 00000CD0 [C104]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   907                              <2> %assign i i+1
   908 00000CD8 [190C]2800008E0000  <1> 		dw handled,NEW_CODE_SEL,0x8E00,0		;;irq 7 or int 0xF is random, unusable, and usually reserved
   909                              <1> %assign i 16
   910                              <1> %rep    32
   911                              <1> 		dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   912                              <1> %assign i i+1
   913                              <1> %endrep
   914 00000CE0 [DB04]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   915                              <2> %assign i i+1
   916 00000CE8 [E804]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   917                              <2> %assign i i+1
   918 00000CF0 [F504]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   919                              <2> %assign i i+1
   920 00000CF8 [0205]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   921                              <2> %assign i i+1
   922 00000D00 [0F05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   923                              <2> %assign i i+1
   924 00000D08 [1C05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   925                              <2> %assign i i+1
   926 00000D10 [2905]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   927                              <2> %assign i i+1
   928 00000D18 [3605]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   929                              <2> %assign i i+1
   930 00000D20 [4305]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   931                              <2> %assign i i+1
   932 00000D28 [5005]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   933                              <2> %assign i i+1
   934 00000D30 [5D05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   935                              <2> %assign i i+1
   936 00000D38 [6A05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   937                              <2> %assign i i+1
   938 00000D40 [7705]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   939                              <2> %assign i i+1
   940 00000D48 [8405]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   941                              <2> %assign i i+1
   942 00000D50 [9105]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   943                              <2> %assign i i+1
   944 00000D58 [9E05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   945                              <2> %assign i i+1
   946 00000D60 [AB05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   947                              <2> %assign i i+1
   948 00000D68 [B805]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   949                              <2> %assign i i+1
   950 00000D70 [C505]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   951                              <2> %assign i i+1
   952 00000D78 [D205]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   953                              <2> %assign i i+1
   954 00000D80 [DF05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   955                              <2> %assign i i+1
   956 00000D88 [EC05]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   957                              <2> %assign i i+1
   958 00000D90 [F905]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   959                              <2> %assign i i+1
   960 00000D98 [0606]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   961                              <2> %assign i i+1
   962 00000DA0 [1306]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   963                              <2> %assign i i+1
   964 00000DA8 [2006]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   965                              <2> %assign i i+1
   966 00000DB0 [2D06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   967                              <2> %assign i i+1
   968 00000DB8 [3A06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   969                              <2> %assign i i+1
   970 00000DC0 [4706]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   971                              <2> %assign i i+1
   972 00000DC8 [5406]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   973                              <2> %assign i i+1
   974 00000DD0 [6106]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   975                              <2> %assign i i+1
   976 00000DD8 [6E06]2800008E0000  <2>  dw unhand + i*13,NEW_CODE_SEL,0x8E00,0
   977                              <2> %assign i i+1
   978                              <1> 		
   979                              <1> ;;INT 30h for os use and 3rd party use:
   980 00000DE0 [E80D]1000008E0000  <1> 	dw newints,SYS_CODE_SEL,0x8E00,0
   981                              <1> idt_end:
   982                              <1> [BITS 32]
   983                                  [BITS 32]
   984                                      %include 'source/ints.asm'
   985                              <1> newints:	;;for great justice
   986 00000DE8 FA                  <1> 	cli				;;stop other interrupts
   987 00000DE9 80FC00              <1> 	cmp ah, 0		;;originally 0
   988 00000DEC 0F8452000000        <1> 	je near intx0   ;;0=kills app
   989 00000DF2 80FC01              <1> 	cmp ah, 1		;;originally 1
   990 00000DF5 0F844E000000        <1> 	je near intx1   ;;3=print string
   991 00000DFB 80FC02              <1> 	cmp ah, 2		;;originally 2
   992 00000DFE 0F844F000000        <1> 	je near intx2	;;4=read string
   993 00000E04 80FC03              <1> 	cmp ah, 3		;;originally 3
   994 00000E07 0F8450000000        <1> 	je near intx3	;;6=clear screen
   995 00000E0D 80FC04              <1> 	cmp ah, 4		;;originally 4
   996 00000E10 0F8451000000        <1> 	je near intx4	;;5=read and print string
   997 00000E16 80FC05              <1> 	cmp ah, 5		;;originally 5		
   998 00000E19 0F8452000000        <1> 	je near intx5	;;2=get char
   999 00000E1F 80FC06              <1> 	cmp ah, 6		;;originally 6
  1000 00000E22 0F8453000000        <1> 	je near intx6	;;1=print char
  1001 00000E28 80FC07              <1> 	cmp ah, 7
  1002 00000E2B 0F8454000000        <1> 	je near intx7	;;read file
  1003 00000E31 80FC09              <1> 	cmp ah, 9
  1004 00000E34 0F8455000000        <1> 	je near intx9	;;convert number
  1005 00000E3A 80FC0A              <1> 	cmp ah, 10
  1006 00000E3D 0F8464000000        <1> 	je near intx10	;;create thread
  1007 00000E43 C3                  <1> 	ret
  1008                              <1> 	
  1009                              <1> ;;the jmp timerinterrupt's ensure that task switches occur
  1010                              <1> 	
  1011                              <1> intx0:
  1012 00000E44 E9E6070000          <1> 	jmp nwcmd
  1013                              <1> intx1:
  1014 00000E49 E888020000          <1> 	call int303
  1015 00000E4E E9B8FDFFFF          <1> 	jmp timerinterrupt
  1016                              <1> intx2:
  1017 00000E53 E8A2020000          <1> 	call int304
  1018 00000E58 E9AEFDFFFF          <1> 	jmp timerinterrupt
  1019                              <1> intx3:
  1020 00000E5D E85D050000          <1> 	call int306
  1021 00000E62 E9A4FDFFFF          <1> 	jmp timerinterrupt
  1022                              <1> intx4:
  1023 00000E67 E8BB020000          <1> 	call int305
  1024 00000E6C E99AFDFFFF          <1> 	jmp timerinterrupt
  1025                              <1> intx5:
  1026 00000E71 E812020000          <1> 	call int302
  1027 00000E76 E990FDFFFF          <1> 	jmp timerinterrupt
  1028                              <1> intx6:
  1029 00000E7B E837000000          <1> 	call int301
  1030 00000E80 E986FDFFFF          <1> 	jmp timerinterrupt
  1031                              <1> intx7:
  1032 00000E85 E877400000          <1> 	call loadfile
  1033 00000E8A E97CFDFFFF          <1> 	jmp timerinterrupt
  1034                              <1> intx9:
  1035 00000E8F 3C00                <1> 	cmp al, 0
  1036 00000E91 750A                <1> 	jne intx9B
  1037 00000E93 E8A90C0000          <1> 	call showdec
  1038 00000E98 E96EFDFFFF          <1> 	jmp timerinterrupt
  1039                              <1> intx9B:
  1040 00000E9D E8FA0B0000          <1> 	call showhex
  1041 00000EA2 E964FDFFFF          <1> 	jmp timerinterrupt
  1042                              <1> intx10:
  1043 00000EA7 E89F460000          <1> 	call threadfork
  1044 00000EAC CF                  <1> 	iret
  1045                              <1> 	
  1046 00000EAD 0000                <1> linebeginpos dw 0
  1047 00000EAF 0000                <1> videobufpos: dw 0
  1048 00000EB1 0000                <1> charpos db 0,0
  1049 00000EB3 A01E                <1> charxy db 160,30
  1050 00000EB5 0000                <1> charbuf dw 0
  1051                              <1> 	
  1052                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
  1053 00000EB7 E808000000          <1> 	call int301prnt
  1054 00000EBC E84E050000          <1> 	call termcopy
  1055 00000EC1 C3                  <1> 	ret
  1056 00000EC2 00                  <1> termguion db 0
  1057 00000EC3 00                  <1> termcopyon db 0
  1058                              <1> int301prnt:
  1059 00000EC4 88DC                <1> 	mov ah, bl
  1060 00000EC6 66A3[B50E0000]      <1> 	mov [charbuf], ax
  1061 00000ECC BB00000000          <1> 	mov ebx, 0
  1062 00000ED1 668B1D[AF0E0000]    <1> 	mov bx, [videobufpos]
  1063 00000ED8 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1064 00000EDD 01DF                <1> 	add edi, ebx
  1065 00000EDF 66A1[0D140000]      <1> 	mov ax, [removedvideo]
  1066 00000EE5 668907              <1> 	mov [edi], ax
  1067 00000EE8 66A1[B50E0000]      <1> 	mov ax, [charbuf]
  1068 00000EEE BA00000000          <1> 	mov edx, 0
  1069 00000EF3 668B15[B10E0000]    <1> 	mov dx, [charpos]
  1070 00000EFA B900000000          <1> 	mov ecx, 0
  1071 00000EFF 668B0D[B30E0000]    <1> 	mov cx, [charxy]
  1072 00000F06 3C09                <1> 	cmp al, 9
  1073 00000F08 0F8464000000        <1> 	je near int301tab
  1074 00000F0E 3C0D                <1> 	cmp al, 13
  1075 00000F10 0F8476000000        <1> 	je near int301cr
  1076 00000F16 3C0A                <1> 	cmp al, 10
  1077 00000F18 0F84A4000000        <1> 	je near int301nl
  1078 00000F1E 3C08                <1> 	cmp al, 8
  1079 00000F20 0F847D000000        <1> 	je near int301bs
  1080 00000F26 3CFF                <1> 	cmp al, 255		;;null character
  1081 00000F28 0F841C000000        <1> 	je near donescr
  1082 00000F2E 668907              <1> 	mov [edi], ax
  1083 00000F31 81C702000000        <1> 	add edi, 2
  1084 00000F37 80C202              <1> 	add dl, 2
  1085                              <1> donecrnl:
  1086 00000F3A 38CA                <1> 	cmp dl, cl
  1087 00000F3C 0F83B1000000        <1> 	jae near int301eol
  1088                              <1> doneeol:
  1089 00000F42 38EE                <1> 	cmp dh, ch
  1090 00000F44 0F83C7000000        <1> 	jae near int301scr	
  1091                              <1> donescr:
  1092 00000F4A 89FB                <1> 	mov ebx, edi
  1093 00000F4C 668B07              <1> 	mov ax, [edi]
  1094 00000F4F 66A3[0D140000]      <1> 	mov [removedvideo], ax
  1095 00000F55 81EB[8F1C0000]      <1> 	sub ebx, videobuf2
  1096 00000F5B 66891D[AF0E0000]    <1> 	mov [videobufpos], bx
  1097 00000F62 668915[B10E0000]    <1> 	mov [charpos], dx
  1098 00000F69 66A1[B50E0000]      <1> 	mov ax, [charbuf]
  1099 00000F6F 88E3                <1> 	mov bl, ah
  1100 00000F71 C3                  <1> 	ret
  1101                              <1> 	
  1102                              <1> 	int301tab:
  1103 00000F72 C1EF04              <1> 		shr edi, 4
  1104 00000F75 C1E704              <1> 		shl edi, 4
  1105 00000F78 81C710000000        <1> 		add edi, 16
  1106 00000F7E C0EA04              <1> 		shr dl, 4
  1107 00000F81 C0E204              <1> 		shl dl, 4
  1108 00000F84 80C210              <1> 		add dl, 16
  1109 00000F87 4F                  <1> 		dec edi
  1110 00000F88 FECA                <1> 		dec dl
  1111 00000F8A EBAE                <1> 		jmp donecrnl
  1112                              <1> 	
  1113                              <1> 	int301cr:
  1114 00000F8C B200                <1> 		mov dl, 0
  1115 00000F8E BB00000000          <1> 		mov ebx, 0
  1116 00000F93 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1117 00000F98 668B1D[AD0E0000]    <1> 		mov bx, [linebeginpos]
  1118 00000F9F 01DF                <1> 		add edi, ebx
  1119 00000FA1 EB97                <1> 		jmp donecrnl
  1120                              <1> 			
  1121                              <1> 	int301bs:
  1122 00000FA3 80FA00              <1> 		cmp dl, 0
  1123 00000FA6 740F                <1> 		je int301backline
  1124                              <1> 	int301nobmr:
  1125 00000FA8 80EA02              <1> 		sub dl, 2
  1126 00000FAB 66B80000            <1> 		mov ax, 0
  1127 00000FAF 81EF02000000        <1> 		sub edi, 2
  1128 00000FB5 EB83                <1> 		jmp donecrnl
  1129                              <1> 	int301backline:
  1130 00000FB7 88CA                <1> 		mov dl, cl
  1131 00000FB9 80FE00              <1> 		cmp dh, 0
  1132 00000FBC 74EA                <1> 		je int301nobmr
  1133 00000FBE FECE                <1> 		dec dh
  1134 00000FC0 EBE6                <1> 		jmp int301nobmr
  1135                              <1> 		
  1136                              <1> 	int301nl:
  1137 00000FC2 FEC6                <1> 		inc dh
  1138 00000FC4 BB00000000          <1> 		mov ebx, 0
  1139 00000FC9 88CB                <1> 		mov bl, cl
  1140 00000FCB BF[8F1C0000]        <1> 		mov edi, videobuf2
  1141 00000FD0 66031D[AF0E0000]    <1> 		add bx, [videobufpos]
  1142 00000FD7 01DF                <1> 		add edi, ebx
  1143 00000FD9 BB00000000          <1> 		mov ebx, 0
  1144 00000FDE 88CB                <1> 		mov bl, cl
  1145 00000FE0 66031D[AD0E0000]    <1> 		add bx, [linebeginpos]
  1146 00000FE7 66891D[AD0E0000]    <1> 		mov [linebeginpos], bx
  1147 00000FEE E947FFFFFF          <1> 		jmp donecrnl
  1148                              <1> 		
  1149                              <1> 	int301eol:
  1150 00000FF3 B200                <1> 		mov dl, 0
  1151 00000FF5 FEC6                <1> 		inc dh
  1152 00000FF7 BB00000000          <1> 		mov ebx, 0
  1153 00000FFC 88CB                <1> 		mov bl, cl
  1154 00000FFE 66031D[AD0E0000]    <1> 		add bx, [linebeginpos]
  1155 00001005 66891D[AD0E0000]    <1> 		mov [linebeginpos], bx
  1156 0000100C E931FFFFFF          <1> 		jmp doneeol
  1157                              <1> 	int301scr:
  1158 00001011 FECE                <1> 		dec dh
  1159 00001013 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1160 00001018 BB00000000          <1> 		mov ebx, 0
  1161 0000101D 88CB                <1> 		mov bl, cl
  1162 0000101F 01FB                <1> 		add ebx, edi
  1163                              <1> 	intscrollloop:
  1164 00001021 668B03              <1> 		mov ax, [ebx]
  1165 00001024 668907              <1> 		mov [edi], ax
  1166 00001027 81C702000000        <1> 		add edi, 2
  1167 0000102D 81C302000000        <1> 		add ebx, 2
  1168 00001033 80E902              <1> 		sub cl, 2
  1169 00001036 80F900              <1> 		cmp cl, 0
  1170 00001039 75E6                <1> 		jne intscrollloop
  1171 0000103B 8A0D[B30E0000]      <1> 		mov cl, [charxy]
  1172 00001041 FECD                <1> 		dec ch
  1173 00001043 80FD01              <1> 		cmp ch, 1
  1174 00001046 77D9                <1> 		ja intscrollloop
  1175 00001048 66B80000            <1> 		mov ax, 0
  1176 0000104C 81EF[8F1C0000]      <1> 		sub edi, videobuf2
  1177 00001052 66893D[AD0E0000]    <1> 		mov [linebeginpos], di
  1178 00001059 81C7[8F1C0000]      <1> 		add edi, videobuf2
  1179 0000105F 89FB                <1> 		mov ebx, edi
  1180                              <1> 	intloopclear:
  1181 00001061 668903              <1> 		mov [ebx], ax
  1182 00001064 81C302000000        <1> 		add ebx, 2
  1183 0000106A 80E902              <1> 		sub cl, 2
  1184 0000106D 80F900              <1> 		cmp cl, 0
  1185 00001070 75EF                <1> 		jne intloopclear
  1186 00001072 FECD                <1> 		dec ch
  1187 00001074 80FD00              <1> 		cmp ch, 0
  1188 00001077 75E8                <1> 		jne intloopclear
  1189 00001079 668B0D[B30E0000]    <1> 		mov cx, [charxy]
  1190 00001080 E9C5FEFFFF          <1> 		jmp donescr
  1191                              <1> 		
  1192                              <1> 		
  1193 00001085 0000                <1> lastkey db 0,0
  1194 00001087 00                  <1> trans db 0
  1195                              <1> 
  1196                              <1> 	int302:		;;get char, if al is 0, wait for key
  1197 00001088 A2[87100000]        <1> 		mov [trans], al
  1198                              <1> 	transcheck:
  1199 0000108D E8111D0000          <1> 		call guistartin
  1200 00001092 8A3D[87100000]      <1> 		mov bh, [trans]
  1201 00001098 66A1[85100000]      <1> 		mov ax, [lastkey]
  1202 0000109E 80FC1C              <1> 		cmp ah, 1Ch
  1203 000010A1 7419                <1> 		je int302enter
  1204 000010A3 803D[7A2D0000]E0    <1> 		cmp byte [specialkey], 0xE0
  1205 000010AA 7504                <1> 		jne nospecialtrans
  1206 000010AC 88C3                <1> 		mov bl, al
  1207 000010AE B000                <1> 		mov al, 0
  1208                              <1> 	nospecialtrans:
  1209 000010B0 08C7                <1> 		or bh, al
  1210 000010B2 80FF00              <1> 		cmp bh, 0
  1211 000010B5 74D6                <1> 		je transcheck
  1212 000010B7 E902000000          <1> 		jmp int302end
  1213                              <1> 	int302enter:
  1214 000010BC B00D                <1> 		mov al, 13
  1215                              <1> 	int302end:
  1216 000010BE C3                  <1> 		ret
  1217                              <1> 	
  1218 000010BF 00                  <1> endkey303 db 0
  1219                              <1> 	printquiet:
  1220 000010C0 66B80000            <1> 		mov ax, 0
  1221 000010C4 66BB0700            <1> 		mov bx, 7
  1222 000010C8 E819000000          <1> 		call int303b
  1223 000010CD C3                  <1> 		ret
  1224                              <1>     print:
  1225 000010CE 66B80000            <1> 		mov ax, 0
  1226 000010D2 66BB0700            <1> 		mov bx, 7
  1227                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
  1228 000010D6 A2[BF100000]        <1> 		mov [endkey303], al
  1229 000010DB E806000000          <1> 		call int303b
  1230 000010E0 E82A030000          <1> 		call termcopy
  1231 000010E5 C3                  <1> 		ret
  1232                              <1> 	int303b:
  1233 000010E6 8A06                <1> 		mov al, [esi]
  1234 000010E8 3A05[BF100000]      <1> 		cmp al, [endkey303]
  1235 000010EE 7408                <1> 		je doneint303
  1236 000010F0 E8CFFDFFFF          <1> 		call int301prnt
  1237 000010F5 46                  <1> 		inc esi
  1238 000010F6 EBEE                <1> 		jmp int303b
  1239                              <1> 	doneint303:
  1240 000010F8 C3                  <1> 		ret
  1241                              <1> 		
  1242 000010F9 00                  <1> endkey304 db 0
  1243                              <1> 	int304:	;;get line, al=last key, esi = buffer
  1244 000010FA A2[F9100000]        <1> 		mov [endkey304], al
  1245                              <1> 	int304b:
  1246 000010FF 56                  <1> 		push esi
  1247 00001100 B000                <1> 		mov al, 0
  1248 00001102 E881FFFFFF          <1> 		call int302
  1249 00001107 5E                  <1> 		pop esi
  1250 00001108 8806                <1> 		mov [esi], al
  1251 0000110A 46                  <1> 		inc esi
  1252 0000110B 3A05[F9100000]      <1> 		cmp al, [endkey304]
  1253 00001111 75EC                <1> 		jne int304b
  1254 00001113 4E                  <1> 		dec esi
  1255 00001114 C60600              <1> 		mov byte [esi], 0
  1256 00001117 C3                  <1> 	ret
  1257                              <1> 	
  1258 00001118 00                  <1> endkey305 db 0
  1259 00001119 00                  <1> modkey305 db 0
  1260 0000111A 00000000            <1> firstesi305 dd 0
  1261 0000111E 00                  <1> commandedit db 0
  1262 0000111F 00                  <1> txtmask db 0
  1263 00001120 00000000            <1> buftxtloc dd 0
  1264 00001124 082000              <1> backcursor db 8," ",0
  1265                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
  1266 00001127 8935[20110000]      <1> 		mov [buftxtloc], esi
  1267 0000112D A2[18110000]        <1> 		mov [endkey305], al
  1268 00001132 881D[19110000]      <1> 		mov [modkey305], bl
  1269 00001138 8935[1A110000]      <1> 		mov [firstesi305], esi
  1270                              <1> 	int305b:
  1271 0000113E 56                  <1> 		push esi
  1272 0000113F B001                <1> 		mov al, 1
  1273 00001141 E842FFFFFF          <1> 		call int302
  1274 00001146 5E                  <1> 		pop esi
  1275 00001147 80FC48              <1> 		cmp ah, 0x48
  1276 0000114A 0F845E010000        <1> 		je near int305up
  1277 00001150 80FC50              <1> 		cmp ah, 0x50
  1278 00001153 0F8438010000        <1> 		je near int305down
  1279 00001159 80FC4D              <1> 		cmp ah, 0x4D
  1280 0000115C 0F84ED000000        <1> 		je near int305right
  1281 00001162 80FC4B              <1> 		cmp ah, 0x4B
  1282 00001165 0F84AB000000        <1> 		je near int305left
  1283 0000116B 3C08                <1> 		cmp al, 8
  1284 0000116D 0F842E020000        <1> 		je near int305bscheck
  1285 00001173 3C00                <1> 		cmp al, 0
  1286 00001175 74C7                <1> 		je int305b
  1287 00001177 8806                <1> 		mov [esi], al
  1288 00001179 46                  <1> 		inc esi
  1289                              <1> 	bscheckequal:
  1290 0000117A 8A1D[19110000]      <1> 		mov bl, [modkey305]
  1291 00001180 8A3D[1F110000]      <1> 		mov bh, [txtmask]
  1292 00001186 80FF00              <1> 		cmp bh, 0
  1293 00001189 7402                <1> 		je nomasktxt
  1294 0000118B 88F8                <1> 		mov al, bh
  1295                              <1> 	nomasktxt:
  1296 0000118D E825FDFFFF          <1> 		call int301
  1297 00001192 56                  <1> 		push esi
  1298 00001193 66A3[14120000]      <1> 		mov [int305axcache], ax
  1299 00001199 8A25[18110000]      <1> 		mov ah, [endkey305]
  1300 0000119F 38E0                <1> 		cmp al, ah
  1301 000011A1 7429                <1> 		je nobackprintbuftxt2
  1302 000011A3 BE[701A0000]        <1> 		mov esi, buftxt2
  1303 000011A8 E813FFFFFF          <1> 		call printquiet
  1304 000011AD B020                <1> 		mov al, " "
  1305 000011AF E810FDFFFF          <1> 		call int301prnt
  1306 000011B4 B008                <1> 		mov al, 8
  1307 000011B6 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1308 000011BC 740E                <1> 		je nobackprintbuftxt2
  1309                              <1> 	backprintbuftxt2:
  1310 000011BE E801FDFFFF          <1> 		call int301prnt
  1311 000011C3 4E                  <1> 		dec esi
  1312 000011C4 81FE[701A0000]      <1> 		cmp esi, buftxt2
  1313 000011CA 77F2                <1> 		ja backprintbuftxt2
  1314                              <1> 	nobackprintbuftxt2:
  1315 000011CC E8E6FCFFFF          <1> 		call int301
  1316 000011D1 5E                  <1> 		pop esi
  1317 000011D2 66A1[14120000]      <1> 		mov ax, [int305axcache]
  1318 000011D8 8A25[18110000]      <1> 		mov ah, [endkey305]
  1319 000011DE 38E0                <1> 		cmp al, ah
  1320 000011E0 0F8558FFFFFF        <1> 		jne int305b
  1321 000011E6 4E                  <1> 		dec esi
  1322 000011E7 BF[701A0000]        <1> 		mov edi, buftxt2
  1323                              <1> 	copylaterstuff:
  1324 000011EC 8A07                <1> 		mov al, [edi]
  1325 000011EE 3C00                <1> 		cmp al, 0
  1326 000011F0 7406                <1> 		je nocopylaterstuff
  1327 000011F2 8806                <1> 		mov [esi], al
  1328 000011F4 47                  <1> 		inc edi
  1329 000011F5 46                  <1> 		inc esi
  1330 000011F6 EBF4                <1> 		jmp copylaterstuff
  1331                              <1> 	nocopylaterstuff:
  1332 000011F8 C60600              <1> 		mov byte [esi], 0
  1333 000011FB E801000000          <1> 		call clearbuftxt2
  1334 00001200 C3                  <1> 		ret
  1335                              <1> 	
  1336                              <1> 	clearbuftxt2:
  1337 00001201 B000                <1> 		mov al, 0
  1338 00001203 BF[701A0000]        <1> 		mov edi, buftxt2
  1339                              <1> 	clearbuftxt2lp:
  1340 00001208 8807                <1> 		mov [edi], al
  1341 0000120A 47                  <1> 		inc edi
  1342 0000120B 81FF[7A1B0000]      <1> 		cmp edi, buftxt
  1343 00001211 75F5                <1> 		jne clearbuftxt2lp
  1344 00001213 C3                  <1> 		ret
  1345                              <1> 		
  1346 00001214 0000                <1> 	int305axcache dw 0
  1347                              <1> 		
  1348                              <1> 	int305left:
  1349 00001216 3B35[20110000]      <1> 		cmp esi, [buftxtloc]
  1350 0000121C 0F841CFFFFFF        <1> 		je near int305b
  1351 00001222 BF[701A0000]        <1> 		mov edi, buftxt2
  1352 00001227 8A07                <1> 		mov al, [edi]
  1353                              <1> 	shiftbuftxt2:
  1354 00001229 3C00                <1> 		cmp al, 0
  1355 0000122B 7409                <1> 		je noshiftbuftxt2
  1356 0000122D 47                  <1> 		inc edi
  1357 0000122E 8A27                <1> 		mov ah, [edi]
  1358 00001230 8807                <1> 		mov [edi], al
  1359 00001232 88E0                <1> 		mov al, ah
  1360 00001234 EBF3                <1> 		jmp shiftbuftxt2
  1361                              <1> 	noshiftbuftxt2:
  1362 00001236 BF[701A0000]        <1> 		mov edi, buftxt2
  1363 0000123B 4E                  <1> 		dec esi
  1364 0000123C 8A06                <1> 		mov al, [esi]
  1365 0000123E 8807                <1> 		mov [edi], al
  1366 00001240 C60600              <1> 		mov byte [esi], 0
  1367 00001243 B008                <1> 		mov al, 8
  1368 00001245 E86DFCFFFF          <1> 		call int301
  1369 0000124A E9EFFEFFFF          <1> 		jmp int305b
  1370                              <1> 		
  1371                              <1> 	int305right:
  1372 0000124F BF[701A0000]        <1> 		mov edi, buftxt2
  1373 00001254 8A07                <1> 		mov al, [edi]
  1374 00001256 3C00                <1> 		cmp al, 0
  1375 00001258 0F84E0FEFFFF        <1> 		je near int305b
  1376 0000125E 8806                <1> 		mov [esi], al
  1377                              <1> 	shiftbuftxt2lft:
  1378 00001260 3C00                <1> 		cmp al, 0
  1379 00001262 7408                <1> 		je noshiftbuftxt2lft
  1380 00001264 47                  <1> 		inc edi
  1381 00001265 8A07                <1> 		mov al, [edi]
  1382 00001267 8847FF              <1> 		mov [edi - 1], al
  1383 0000126A EBF4                <1> 		jmp shiftbuftxt2lft
  1384                              <1> 	noshiftbuftxt2lft:
  1385 0000126C 8A06                <1> 		mov al, [esi]
  1386 0000126E 46                  <1> 		inc esi
  1387 0000126F 8A1D[19110000]      <1> 		mov bl, [modkey305]
  1388 00001275 E83DFCFFFF          <1> 		call int301
  1389 0000127A E9BFFEFFFF          <1> 		jmp int305b
  1390                              <1> 		
  1391                              <1> 	int305downbck:
  1392 0000127F FECC                <1> 		dec ah
  1393 00001281 8825[1E110000]      <1> 		mov [commandedit], ah
  1394 00001287 E83A000000          <1> 		call int305bckspc
  1395 0000128C E9ADFEFFFF          <1> 		jmp int305b
  1396                              <1> 	
  1397                              <1> 	int305down:
  1398 00001291 8A25[1E110000]      <1> 		mov ah, [commandedit]
  1399 00001297 80FC01              <1> 		cmp ah, 1
  1400 0000129A 0F869EFEFFFF        <1> 		jbe near int305b
  1401 000012A0 80FC02              <1> 		cmp ah, 2
  1402 000012A3 74DA                <1> 		je int305downbck
  1403 000012A5 80EC02              <1> 		sub ah, 2
  1404 000012A8 8825[1E110000]      <1> 		mov [commandedit], ah
  1405                              <1> 		
  1406                              <1> 	int305up:
  1407                              <1> 		;cmp bl, 0xE0
  1408                              <1> 		;jne int305b
  1409 000012AE B000                <1> 		mov al, 0
  1410 000012B0 3805[1E110000]      <1> 		cmp [commandedit], al
  1411 000012B6 0F8482FEFFFF        <1> 		je near int305b
  1412 000012BC E805000000          <1> 		call int305bckspc
  1413 000012C1 E93C000000          <1> 		jmp getcurrentcommandstr
  1414                              <1> 	int305bckspc:
  1415 000012C6 3B35[20110000]      <1> 		cmp esi, [buftxtloc]
  1416 000012CC 7426                <1> 		je noint305upbck
  1417                              <1> 	int305upbckspclp:
  1418 000012CE B008                <1> 		mov al, 8
  1419 000012D0 8A1D[19110000]      <1> 		mov bl, [modkey305]
  1420 000012D6 E8E9FBFFFF          <1> 		call int301prnt
  1421 000012DB B020                <1> 		mov al, " "
  1422 000012DD E8E2FBFFFF          <1> 		call int301prnt
  1423 000012E2 B008                <1> 		mov al, 8
  1424 000012E4 E8CEFBFFFF          <1> 		call int301
  1425 000012E9 4E                  <1> 		dec esi
  1426 000012EA 3B35[20110000]      <1> 		cmp esi, [buftxtloc]
  1427 000012F0 7402                <1> 		je noint305upbck
  1428 000012F2 EBDA                <1> 		jmp int305upbckspclp
  1429                              <1> 	noint305upbck:
  1430 000012F4 8B3D[1B300000]      <1> 		mov edi, [currentcommandpos]
  1431 000012FA 81C7[1F300000]      <1> 		add edi, commandbuf
  1432 00001300 4F                  <1> 		dec edi
  1433 00001301 C3                  <1> 		ret
  1434                              <1> 	getcurrentcommandstr:
  1435 00001302 8A25[1E110000]      <1> 		mov ah, [commandedit]
  1436 00001308 FE05[1E110000]      <1> 		inc byte [commandedit]
  1437                              <1> 	getccmdlp:
  1438 0000130E 4F                  <1> 		dec edi
  1439 0000130F 8A07                <1> 		mov al, [edi]
  1440 00001311 81FF[1F300000]      <1> 		cmp edi, commandbuf
  1441 00001317 7231                <1> 		jb getcmdresetcommandbuf
  1442 00001319 81EF[1F300000]      <1> 		sub edi, commandbuf
  1443 0000131F 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1444 00001325 0F8413FEFFFF        <1> 		je near int305b
  1445 0000132B 81C7[1F300000]      <1> 		add edi, commandbuf
  1446 00001331 3C00                <1> 		cmp al, 0
  1447 00001333 75D9                <1> 		jne getccmdlp
  1448 00001335 FECC                <1> 		dec ah
  1449 00001337 80FC00              <1> 		cmp ah, 0
  1450 0000133A 77D2                <1> 		ja getccmdlp
  1451 0000133C 47                  <1> 		inc edi
  1452 0000133D 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1453 00001343 770D                <1> 		ja fixcmdbufb4moreint305
  1454 00001345 E915000000          <1> 		jmp moreint305up
  1455                              <1> 	getcmdresetcommandbuf:
  1456 0000134A BF[1F340000]        <1> 		mov edi, commandbufend
  1457 0000134F 47                  <1> 		inc edi
  1458 00001350 EBBC                <1> 		jmp getccmdlp
  1459                              <1> 	fixcmdbufb4moreint305:
  1460 00001352 4F                  <1> 		dec edi
  1461 00001353 81EF[1F340000]      <1> 		sub edi, commandbufend
  1462 00001359 81C7[1F300000]      <1> 		add edi, commandbuf
  1463                              <1> 	moreint305up:
  1464 0000135F 8A07                <1> 		mov al, [edi]
  1465 00001361 47                  <1> 		inc edi
  1466 00001362 81EF[1F300000]      <1> 		sub edi, commandbuf
  1467 00001368 3C00                <1> 		cmp al, 0
  1468 0000136A 0F84CEFDFFFF        <1> 		je near int305b
  1469 00001370 3B3D[1B300000]      <1> 		cmp edi, [currentcommandpos]
  1470 00001376 0F83C2FDFFFF        <1> 		jae near int305b
  1471 0000137C 81C7[1F300000]      <1> 		add edi, commandbuf
  1472 00001382 8806                <1> 		mov [esi], al
  1473 00001384 46                  <1> 		inc esi
  1474 00001385 57                  <1> 		push edi
  1475 00001386 8A1D[19110000]      <1> 		mov bl, [modkey305]
  1476 0000138C E826FBFFFF          <1> 		call int301
  1477 00001391 5F                  <1> 		pop edi
  1478 00001392 81FF[1F340000]      <1> 		cmp edi, commandbufend
  1479 00001398 76C5                <1> 		jbe moreint305up
  1480 0000139A BF[1F300000]        <1> 		mov edi, commandbuf
  1481 0000139F EBBE                <1> 		jmp moreint305up
  1482                              <1> 	int305bscheck:
  1483 000013A1 3B35[1A110000]      <1> 		cmp esi, [firstesi305]
  1484 000013A7 7705                <1> 		ja goodbscheck
  1485 000013A9 E990FDFFFF          <1> 		jmp int305b
  1486                              <1> 	goodbscheck:
  1487 000013AE 4E                  <1> 		dec esi
  1488 000013AF C60600              <1> 		mov byte [esi], 0
  1489 000013B2 8A1D[19110000]      <1> 		mov bl, [modkey305]
  1490 000013B8 B008                <1> 		mov al, 8
  1491 000013BA E9BBFDFFFF          <1> 		jmp bscheckequal
  1492                              <1> 	
  1493                              <1> 		
  1494                              <1> 	clear:		
  1495                              <1> 	
  1496                              <1> 	int306:	;;clear screen
  1497 000013BF 668B0D[B30E0000]    <1> 		mov cx, [charxy]
  1498 000013C6 BF[8F1C0000]        <1> 		mov edi, videobuf2
  1499 000013CB 66B80000            <1> 		mov ax, 0
  1500 000013CF 66A3[AD0E0000]      <1> 		mov [linebeginpos], ax
  1501 000013D5 66A3[AF0E0000]      <1> 		mov [videobufpos], ax
  1502 000013DB 66BA0000            <1> 		mov dx, 0
  1503 000013DF 66A3[B10E0000]      <1> 		mov [charpos], ax
  1504                              <1> 	int306b:
  1505 000013E5 668907              <1> 		mov [edi], ax
  1506 000013E8 81C702000000        <1> 		add edi, 2
  1507 000013EE 80E902              <1> 		sub cl, 2
  1508 000013F1 80F900              <1> 		cmp cl, 0
  1509 000013F4 75EF                <1> 		jne int306b
  1510 000013F6 8A0D[B30E0000]      <1> 		mov cl, [charxy]
  1511 000013FC FECD                <1> 		dec ch
  1512 000013FE 80FD00              <1> 		cmp ch, 0
  1513 00001401 75E2                <1> 		jne int306b
  1514 00001403 E807000000          <1> 		call termcopy
  1515 00001408 C3                  <1> 		ret
  1516                              <1> 		
  1517 00001409 00000000            <1> 	termcursorpos dd 0
  1518 0000140D 0000                <1> 	removedvideo dw 0
  1519                              <1> termcopy:	
  1520 0000140F 60                  <1> 	pusha
  1521 00001410 BF[8F1C0000]        <1> 	mov edi, videobuf2
  1522 00001415 BB00000000          <1> 	mov ebx, 0
  1523 0000141A 668B1D[AF0E0000]    <1> 	mov bx, [videobufpos]
  1524 00001421 01DF                <1> 	add edi, ebx
  1525 00001423 893D[09140000]      <1> 	mov [termcursorpos], edi
  1526 00001429 E8C0000000          <1> 	call switchtermcursor
  1527 0000142E C605[E7340000]00    <1> 	mov byte [mouseselecton], 0
  1528 00001435 C605[C30E0000]01    <1> 	mov byte [termcopyon], 1
  1529 0000143C 803D[E8340000]00    <1> 	cmp byte [guion], 0
  1530 00001443 0F8412000000        <1> 	je near nowincopy
  1531 00001449 803D[C20E0000]01    <1> 	cmp byte [termguion], 1
  1532 00001450 0F84912C0000        <1> 	je near windowvideocopy
  1533 00001456 E98C000000          <1> 	jmp nocopytermatall
  1534                              <1> nowincopy:
  1535 0000145B BE00000A00          <1> 	mov esi, 0xA0000
  1536 00001460 A1[03040000]        <1> 	mov eax, [basecache]
  1537 00001465 C1E004              <1> 	shl eax, 4
  1538 00001468 29C6                <1> 	sub esi, eax
  1539 0000146A BF[8F1C0000]        <1> 	mov edi, videobuf2
  1540 0000146F B900000000          <1> 	mov ecx, 0
  1541 00001474 668B0D[B30E0000]    <1> 	mov cx, [charxy]
  1542                              <1> nowincopy2:
  1543 0000147B BB[42580000]        <1> 	mov ebx, fonts
  1544 00001480 B800000000          <1> 	mov eax, 0
  1545 00001485 8A07                <1> 	mov al, [edi]
  1546 00001487 C1E004              <1> 	shl eax, 4
  1547 0000148A 01C3                <1> 	add ebx, eax
  1548 0000148C 47                  <1> 	inc edi
  1549 0000148D 8A27                <1> 	mov ah, [edi]
  1550 0000148F BA00000000          <1> 	mov edx, 0
  1551 00001494 8A15[B30E0000]      <1> 	mov dl, [charxy]
  1552 0000149A D1EA                <1> 	shr edx, 1
  1553 0000149C C1C110              <1> 	rol ecx, 16
  1554 0000149F B110                <1> 	mov cl, 16
  1555                              <1> nowinfont:
  1556 000014A1 8A03                <1> 	mov al, [ebx]
  1557 000014A3 D0C8                <1> 	ror al, 1
  1558 000014A5 80FC07              <1> 	cmp ah, 7
  1559 000014A8 7602                <1> 	jbe notnotfont
  1560 000014AA F6D0                <1> 	not al
  1561                              <1> notnotfont:
  1562 000014AC 8806                <1> 	mov [esi], al
  1563 000014AE 01D6                <1> 	add esi, edx
  1564 000014B0 43                  <1> 	inc ebx
  1565 000014B1 FEC9                <1> 	dec cl
  1566 000014B3 80F900              <1> 	cmp cl, 0
  1567 000014B6 75E9                <1> 	jne nowinfont
  1568 000014B8 C1E204              <1> 	shl edx, 4
  1569 000014BB 29D6                <1> 	sub esi, edx
  1570 000014BD C1C110              <1> 	rol ecx, 16
  1571                              <1> nopresentwinfont:
  1572 000014C0 47                  <1> 	inc edi
  1573 000014C1 46                  <1> 	inc esi
  1574 000014C2 80E902              <1> 	sub cl, 2
  1575 000014C5 80F900              <1> 	cmp cl, 0
  1576 000014C8 75B1                <1> 	jne nowincopy2
  1577 000014CA 8A0D[B30E0000]      <1> 	mov cl, [charxy]
  1578 000014D0 BA00000000          <1> 	mov edx, 0
  1579 000014D5 88CA                <1> 	mov dl, cl
  1580 000014D7 D1EA                <1> 	shr edx, 1
  1581 000014D9 29D6                <1> 	sub esi, edx
  1582 000014DB C1E204              <1> 	shl edx, 4
  1583 000014DE 01D6                <1> 	add esi, edx
  1584 000014E0 FECD                <1> 	dec ch
  1585 000014E2 80FD00              <1> 	cmp ch, 0
  1586 000014E5 7594                <1> 	jne nowincopy2
  1587                              <1> nocopytermatall:
  1588 000014E7 E802000000          <1> 	call switchtermcursor
  1589 000014EC 61                  <1> 	popa
  1590 000014ED C3                  <1> 	ret
  1591                              <1> 	
  1592                              <1> switchtermcursor:
  1593 000014EE 8B3D[09140000]      <1> 	mov edi, [termcursorpos]
  1594 000014F4 8A4701              <1> 	mov al, [edi + 1]
  1595 000014F7 8A27                <1> 	mov ah, [edi]
  1596 000014F9 3C07                <1> 	cmp al, 7
  1597 000014FB 7607                <1> 	jbe movlargecursorterm
  1598 000014FD B007                <1> 	mov al, 7
  1599 000014FF E902000000          <1> 	jmp movedcursorterm
  1600                              <1> movlargecursorterm:
  1601 00001504 B0F0                <1> 	mov al, 0xF0
  1602                              <1> movedcursorterm:
  1603 00001506 884701              <1> 	mov [edi + 1], al
  1604 00001509 80FC00              <1> 	cmp ah, 0
  1605 0000150C 7504                <1> 	jne fixednocursorterm
  1606 0000150E B420                <1> 	mov ah, " "
  1607 00001510 8827                <1> 	mov [edi], ah
  1608                              <1> fixednocursorterm:
  1609 00001512 C3                  <1> 	ret
  1610                              <1> 	
  1611                                      %include 'source/solleros.asm'
  1612                              <1> 	;SOLLEROS.ASM
  1613                              <1> os:
  1614 00001513 E8A7FEFFFF          <1> 	call clear
  1615 00001518 BE[F9570000]        <1> 	mov esi, userask
  1616 0000151D E8ACFBFFFF          <1> 	call print
  1617                              <1> usercheck:
  1618 00001522 BE[7A1B0000]        <1> 	mov esi, buftxt
  1619 00001527 B00D                <1> 	mov al, 13
  1620 00001529 B404                <1> 	mov ah, 4
  1621 0000152B CD30                <1> 	int 30h
  1622 0000152D 56                  <1> 	push esi
  1623 0000152E BE[19580000]        <1> 	mov esi, line
  1624 00001533 E896FBFFFF          <1> 	call print
  1625 00001538 BE[03580000]        <1> 	mov esi, pwdask
  1626 0000153D E88CFBFFFF          <1> 	call print
  1627 00001542 5E                  <1> 	pop esi
  1628 00001543 46                  <1> 	inc esi
  1629 00001544 8935[FA150000]      <1> 	mov [esipass], esi
  1630                              <1> passcheck:
  1631 0000154A B000                <1> 	mov al, 0
  1632 0000154C B405                <1> 	mov ah, 5
  1633 0000154E CD30                <1> 	int 30h
  1634 00001550 3C0D                <1> 	cmp al, 13
  1635 00001552 0F8435000000        <1> 	je near gotpass
  1636 00001558 3C08                <1> 	cmp al, 8
  1637 0000155A 0F840F000000        <1> 	je near backpass
  1638 00001560 8806                <1> 	mov [esi], al
  1639 00001562 46                  <1> 	inc esi
  1640 00001563 B02A                <1> 	mov al, '*'
  1641 00001565 B406                <1> 	mov ah, 6
  1642 00001567 CD30                <1> 	int 30h
  1643 00001569 EBDF                <1> 	jmp passcheck
  1644 0000156B 08200800            <1> backcursor2 db 8," ",8,0
  1645                              <1> backpass:
  1646 0000156F 3B35[FA150000]      <1> 	cmp esi, [esipass]
  1647 00001575 0F84CFFFFFFF        <1> 	je near passcheck
  1648 0000157B 4E                  <1> 	dec esi
  1649 0000157C C60600              <1> 	mov byte [esi], 0
  1650 0000157F 56                  <1> 	push esi
  1651 00001580 BE[6B150000]        <1> 	mov esi, backcursor2
  1652 00001585 E844FBFFFF          <1> 	call print
  1653 0000158A 5E                  <1> 	pop esi
  1654 0000158B EBBD                <1> 	jmp passcheck
  1655                              <1> gotpass:
  1656 0000158D B000                <1> 	mov al,0
  1657 0000158F 8806                <1> 	mov [esi], al
  1658 00001591 BE[19580000]        <1> 	mov esi, line
  1659 00001596 E833FBFFFF          <1> 	call print
  1660 0000159B BB[1F580000]        <1> 	mov ebx, userlst
  1661                              <1> userfind:
  1662 000015A0 BE[7A1B0000]        <1> 	mov esi, buftxt
  1663 000015A5 8A06                <1> 	mov al, [esi]
  1664 000015A7 3C00                <1> 	cmp al, 0
  1665 000015A9 0F8464FFFFFF        <1> 	je near os
  1666 000015AF 891D[FE150000]      <1> 	mov [usercache], ebx
  1667 000015B5 E8D4010000          <1> 	call tester
  1668 000015BA 3C01                <1> 	cmp al, 1
  1669 000015BC 7415                <1> 	je pwdtest
  1670                              <1> nxtuser:
  1671 000015BE 43                  <1> 	inc ebx
  1672 000015BF 8A03                <1> 	mov al, [ebx]
  1673 000015C1 3C00                <1> 	cmp al, 0
  1674 000015C3 74DB                <1> 	je userfind
  1675 000015C5 81FB[42580000]      <1> 	cmp ebx, userlstend
  1676 000015CB 0F8342FFFFFF        <1> 	jae near os
  1677 000015D1 EBCD                <1> 	jmp userfind
  1678                              <1> pwdtest:
  1679 000015D3 46                  <1> 	inc esi
  1680 000015D4 43                  <1> 	inc ebx
  1681 000015D5 E8B4010000          <1> 	call tester
  1682 000015DA 3C01                <1> 	cmp al, 1
  1683 000015DC 7402                <1> 	je pwdrgt
  1684 000015DE EBDE                <1> 	jmp nxtuser
  1685 000015E0 E8DAFDFFFF          <1> pwdrgt:	call clear
  1686 000015E5 66B90002            <1> 	mov cx, 200h
  1687 000015E9 BE[7A1B0000]        <1> 	mov esi, buftxt
  1688 000015EE B000                <1> 	mov al, 0
  1689 000015F0 8806                <1> bufclr:	mov [esi], al
  1690 000015F2 46                  <1> 	inc esi
  1691 000015F3 E2FB                <1> 	loop bufclr
  1692                              <1> ;;;;;;;;;;;;;;;;
  1693 000015F5 E935000000          <1> 	jmp nwcmd
  1694                              <1> 
  1695 000015FA 00000000            <1> esipass dd 0
  1696 000015FE [1F580000]          <1> usercache dd userlst
  1697                              <1> 	
  1698                              <1> buftxtclear:
  1699 00001602 B000                <1> 	mov al, 0
  1700 00001604 BE[7A1B0000]        <1> 	mov esi, buftxt
  1701 00001609 81FE[7A1C0000]      <1> clearbuftxt: cmp esi, buf2
  1702 0000160F 730E                <1> 	jae retbufclr
  1703 00001611 8806                <1> 	mov [esi], al
  1704 00001613 46                  <1> 	inc esi
  1705 00001614 EBF3                <1> 	jmp clearbuftxt
  1706                              <1> 
  1707 00001616 39DE                <1> clearitbuf: cmp esi, ebx
  1708 00001618 7305                <1> 	jae retbufclr
  1709 0000161A 8806                <1> 	mov [esi], al
  1710 0000161C 46                  <1> 	inc esi
  1711 0000161D EBF7                <1> 	jmp clearitbuf
  1712 0000161F C3                  <1> retbufclr: ret
  1713                              <1> 
  1714 00001620 E90A000000          <1> full:	jmp nwcmd
  1715                              <1> 
  1716                              <1> nwcmd2:
  1717 00001625 BE[19580000]        <1> 	mov esi, line
  1718 0000162A E89FFAFFFF          <1> 	call print
  1719                              <1> 
  1720 0000162F B001                <1> nwcmd:	mov al, 1
  1721 00001631 3805[69150000]      <1> 	cmp [BATCHISON], al
  1722 00001637 0F83AC000000        <1> 	jae near batchran
  1723 0000163D B000                <1> cancel:	mov al, 0
  1724 0000163F A2[00150000]        <1> 	mov [IFON], al
  1725 00001644 A2[69150000]        <1> 	mov [BATCHISON], al
  1726 00001649 B05B                <1> 	mov al, '['
  1727 0000164B B406                <1> 	mov ah, 6
  1728 0000164D 66BB0700            <1> 	mov bx, 7
  1729 00001651 E86EF8FFFF          <1> 	call int301prnt
  1730 00001656 8B35[FE150000]      <1> 	mov esi, [usercache]
  1731 0000165C E86DFAFFFF          <1> 	call print
  1732 00001661 BE[0D580000]        <1> 	mov esi, location
  1733 00001666 E863FAFFFF          <1> 	call print
  1734                              <1> 	;call time
  1735                              <1> 	;mov esi, timeshow
  1736                              <1> 	;call print
  1737                              <1> 	;mov esi, cmd
  1738                              <1> 	;call print
  1739 0000166B E892FFFFFF          <1> 	call buftxtclear
  1740 00001670 BE[7A1B0000]        <1> 	mov esi, buftxt
  1741 00001675 C605[1E110000]01    <1> 	mov byte [commandedit], 1
  1742 0000167C B00D                <1> 	mov al, 13
  1743 0000167E 66BB0700            <1> 	mov bx, 7
  1744 00001682 E8A0FAFFFF          <1> 	call int305
  1745 00001687 C605[1E110000]00    <1> 	mov byte [commandedit], 0
  1746 0000168E 803D[7A1B0000]00    <1> 	cmp byte [buftxt], 0
  1747 00001695 0F848AFFFFFF        <1> 	je near nwcmd2
  1748 0000169B 8B35[1B300000]      <1> gotcmd:	mov esi, [currentcommandpos]
  1749 000016A1 8935[17300000]      <1> 	mov [lastcommandpos], esi
  1750 000016A7 BF[7A1B0000]        <1> 	mov edi, buftxt
  1751 000016AC 81C6[1F300000]      <1> 	add esi, commandbuf
  1752 000016B2 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1753 000016B8 7605                <1> 	jbe copycommand
  1754 000016BA BE[1F300000]        <1> 	mov esi, commandbuf
  1755                              <1> copycommand:
  1756 000016BF 8A07                <1> 	mov al, [edi]
  1757 000016C1 8806                <1> 	mov [esi], al
  1758 000016C3 47                  <1> 	inc edi
  1759 000016C4 46                  <1> 	inc esi
  1760 000016C5 3C00                <1> 	cmp al, 0
  1761 000016C7 740F                <1> 	je donecopy
  1762 000016C9 81FE[1F340000]      <1> 	cmp esi, commandbufend
  1763 000016CF 76EE                <1> 	jbe copycommand
  1764 000016D1 BE[1F300000]        <1> 	mov esi, commandbuf
  1765 000016D6 EBE7                <1> 	jmp copycommand
  1766                              <1> donecopy:
  1767 000016D8 81EE[1F300000]      <1> 	sub esi, commandbuf
  1768 000016DE 8935[1B300000]      <1> 	mov [currentcommandpos], esi
  1769 000016E4 E914000000          <1> 	jmp run
  1770                              <1> 	
  1771                              <1> batchran:
  1772 000016E9 C3                  <1> 	ret
  1773                              <1> 
  1774 000016EA E813FFFFFF          <1> input:	call buftxtclear
  1775 000016EF BE[7A1B0000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1776 000016F4 B00D                <1> stdin:	mov al, 13
  1777 000016F6 B307                <1> 	mov bl, 7
  1778 000016F8 B404                <1> 	mov ah, 4
  1779 000016FA CD30                <1> 	int 30h
  1780 000016FC C3                  <1> 	ret
  1781                              <1> 
  1782 000016FD BE[19580000]        <1> run:	mov esi, line
  1783 00001702 E8C7F9FFFF          <1> 	call print
  1784 00001707 803D[FB1C0000]00    <1> 	cmp byte [indexdone], 0
  1785 0000170E 7505                <1> 	jne progtest
  1786 00001710 E851050000          <1> 	call indexfiles
  1787                              <1> progtest:
  1788 00001715 BE[7A1B0000]        <1> 	mov esi, buftxt
  1789 0000171A BB[00130000]        <1> 	mov ebx, fileindex
  1790 0000171F 668B03              <1> prgnxt:	mov ax, [ebx]
  1791 00001722 B105                <1> 	mov cl, 5
  1792 00001724 B504                <1> 	mov ch, 4
  1793 00001726 6639C8              <1> 	cmp ax, cx
  1794 00001729 740B                <1> 	je fndprg
  1795 0000172B 43                  <1> 	inc ebx
  1796 0000172C 81FB[00150000]      <1> 	cmp ebx, fileindexend
  1797 00001732 732E                <1> 	jae prgnf
  1798 00001734 EBE9                <1> 	jmp prgnxt
  1799 00001736 81C302000000        <1> fndprg: add ebx, 2
  1800 0000173C BE[7A1B0000]        <1> 	mov esi, buftxt
  1801 00001741 66B90000            <1> 	mov cx, 0
  1802 00001745 E87E000000          <1> 	call cndtest
  1803 0000174A 3C01                <1> 	cmp al, 1
  1804 0000174C 7302                <1> 	jae prggood
  1805 0000174E EBCF                <1> 	jmp prgnxt
  1806 00001750 81FB[00150000]      <1> prggood: cmp ebx, fileindexend
  1807 00001756 7331                <1> 	jae prgdn
  1808 00001758 81C303000000        <1> 	add ebx, 3
  1809 0000175E 8B3B                <1> 	mov edi, [ebx]
  1810 00001760 FFE7                <1> 	jmp edi
  1811                              <1> prgnf:	
  1812 00001762 A0[7A1B0000]        <1> 	mov al, [buftxt]
  1813 00001767 3C00                <1> 	cmp al, 0
  1814 00001769 741E                <1> 	je prgdn
  1815 0000176B BE[E0570000]        <1> 	mov esi, notfound1
  1816 00001770 E859F9FFFF          <1> 	call print
  1817 00001775 BE[7A1B0000]        <1> 	mov esi, buftxt
  1818 0000177A E84FF9FFFF          <1> 	call print
  1819 0000177F BE[EA570000]        <1> 	mov esi, notfound2
  1820 00001784 E845F9FFFF          <1> 	call print
  1821 00001789 E9A1FEFFFF          <1> prgdn:	jmp nwcmd
  1822                              <1> 
  1823                              <1> 
  1824                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1825 0000178E B000                <1> 	mov al, 0
  1826 00001790 8A06                <1> retest:	mov al, [esi]
  1827 00001792 8A23                <1> 	mov ah, [ebx]
  1828 00001794 3C00                <1> 	cmp al, 0
  1829 00001796 7408                <1> 	je testtrue
  1830 00001798 38E0                <1> 	cmp al, ah
  1831 0000179A 750C                <1> 	jne testfalse
  1832 0000179C 43                  <1> 	inc ebx
  1833 0000179D 46                  <1> 	inc esi
  1834 0000179E EBF0                <1> 	jmp retest
  1835                              <1> testtrue:
  1836 000017A0 80FC00              <1> 	cmp ah, 0
  1837 000017A3 7503                <1> 	jne testfalse
  1838 000017A5 B001                <1> 	mov al, 1
  1839 000017A7 C3                  <1> 	ret
  1840                              <1> testfalse:
  1841 000017A8 B000                <1> 	mov al, 0
  1842 000017AA C3                  <1> 	ret
  1843                              <1> 
  1844                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1845 000017AB B000                <1> 	mov al, 0
  1846                              <1> opretest:
  1847 000017AD 8A06                <1> 	mov al, [esi]
  1848 000017AF 8A23                <1> 	mov ah, [ebx]
  1849 000017B1 38E0                <1> 	cmp al, ah
  1850 000017B3 7510                <1> 	jne optestfalse
  1851 000017B5 80FC00              <1> 	cmp ah, 0
  1852 000017B8 7404                <1> 	je optesttrue
  1853 000017BA 43                  <1> 	inc ebx
  1854 000017BB 46                  <1> 	inc esi
  1855 000017BC EBEF                <1> 	jmp opretest
  1856                              <1> optesttrue:
  1857 000017BE 3C00                <1> 	cmp al, 0
  1858 000017C0 7503                <1> 	jne optestfalse
  1859 000017C2 B001                <1> 	mov al, 1
  1860 000017C4 C3                  <1> 	ret
  1861                              <1> optestfalse:
  1862 000017C5 B000                <1> 	mov al, 0
  1863 000017C7 C3                  <1> 	ret
  1864                              <1> 
  1865                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1866 000017C8 B000                <1> 	mov al, 0
  1867 000017CA 8A06                <1> cndretest:	mov al, [esi]
  1868 000017CC 8A23                <1> 	mov ah, [ebx]
  1869 000017CE 38CC                <1> 	cmp ah, cl
  1870 000017D0 7408                <1> 	je cndtesttrue
  1871 000017D2 38E0                <1> 	cmp al, ah
  1872 000017D4 750B                <1> 	jne cndtestfalse
  1873 000017D6 43                  <1> 	inc ebx
  1874 000017D7 46                  <1> 	inc esi
  1875 000017D8 EBF0                <1> 	jmp cndretest
  1876                              <1> cndtesttrue:
  1877 000017DA 38C8                <1> 	cmp al, cl
  1878 000017DC 7506                <1> 	jne cndtestalmost
  1879 000017DE B001                <1> 	mov al, 1
  1880 000017E0 C3                  <1> 	ret
  1881                              <1> cndtestfalse:
  1882 000017E1 B000                <1> 	mov al, 0
  1883 000017E3 C3                  <1> 	ret
  1884                              <1> cndtestalmost:
  1885 000017E4 B002                <1> 	mov al, 2
  1886 000017E6 C3                  <1> 	ret
  1887 000017E7 00                  <1> currentdir db 0
  1888 000017E8 BE[00130000]        <1> dir:	mov esi, fileindex
  1889 000017ED 8A06                <1> 	dirnxt:	mov al, [esi]
  1890 000017EF B400                <1> 		mov ah, 0
  1891 000017F1 3C05                <1> 		cmp al, 5
  1892 000017F3 744A                <1> 		je dirfnd
  1893 000017F5 3C07                <1> 		cmp al, 7
  1894 000017F7 743C                <1> 		je dirfnd3
  1895 000017F9 3C06                <1> 		cmp al, 6
  1896 000017FB 7438                <1> 		je dirfnd3
  1897 000017FD 46                  <1> 		inc esi
  1898 000017FE 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1899 00001804 737B                <1> 		jae dirdn
  1900 00001806 EBE5                <1> 		jmp dirnxt
  1901 00001808 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1902 00001811 070400646F63756D65- <1>
  1903 0000181A 6E74000A0400666F6C- <1>
  1904 00001823 646572000504006578- <1>
  1905 0000182C 6563757461626C6500  <1>
  1906                              <1> 	dirfnd3:
  1907 00001835 46                  <1> 		inc esi
  1908 00001836 81FE[00150000]      <1> 		cmp esi, fileindexend
  1909 0000183C 76AF                <1> 		jbe dirnxt
  1910 0000183E 4E                  <1> 		dec esi
  1911 0000183F 46                  <1> 	dirfnd:	inc esi
  1912 00001840 8A06                <1> 		mov al, [esi]
  1913 00001842 B400                <1> 		mov ah, 0
  1914 00001844 3C04                <1> 		cmp al, 4
  1915 00001846 740B                <1> 		je dirfnd2
  1916 00001848 46                  <1> 		inc esi
  1917 00001849 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1918 0000184F 7330                <1> 		jae dirdn
  1919 00001851 EB9A                <1> 		jmp dirnxt
  1920 00001853 81C601000000        <1> 	dirfnd2: add esi, 1
  1921 00001859 E870F8FFFF          <1> 		call print
  1922 0000185E 8935[90180000]      <1> 		mov [esidir], esi
  1923 00001864 BE[1C580000]        <1> 		mov esi, dirtab
  1924 00001869 E860F8FFFF          <1> 		call print
  1925 0000186E 8B35[90180000]      <1> 		mov esi, [esidir]
  1926 00001874 81FE[00150000]      <1> 		cmp esi,  fileindexend
  1927 0000187A 7305                <1> 		jae dirdn
  1928 0000187C E96CFFFFFF          <1> 		jmp dirnxt
  1929 00001881 BE[19580000]        <1> 	dirdn:	mov esi, line
  1930 00001886 E843F8FFFF          <1> 			call print
  1931 0000188B E99FFDFFFF          <1> 			jmp nwcmd
  1932 00001890 00000000            <1> esidir dd 0
  1933                              <1> 
  1934                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1935                              <1> 		                ;ends if array seperator is found backwards after 0
  1936                              <1> 	arnxt:	      
  1937 00001894 88E8                <1> 		mov al, ch
  1938 00001896 88CC                <1> 		mov ah, cl        
  1939 00001898 663906              <1> 		cmp [esi], ax
  1940 0000189B 744D                <1> 		je ardn
  1941 0000189D 66390E              <1> 		cmp [esi], cx
  1942 000018A0 7407                <1> 		je arfnd
  1943 000018A2 46                  <1> 		inc esi
  1944 000018A3 39DE                <1> 		cmp esi, ebx
  1945 000018A5 7343                <1> 		jae ardn
  1946 000018A7 EBEB                <1> 		jmp arnxt
  1947 000018A9 81C602000000        <1> 	arfnd: add esi, 2
  1948 000018AF 891D[EB180000]      <1> 		mov [arbx], ebx
  1949 000018B5 890D[EF180000]      <1> 		mov [arcx], ecx
  1950 000018BB E80EF8FFFF          <1> 		call print
  1951 000018C0 8935[F1180000]      <1> 		mov [arsi], esi
  1952 000018C6 BE[19580000]        <1> 		mov esi, line
  1953 000018CB E8FEF7FFFF          <1> 		call print
  1954 000018D0 8B1D[EB180000]      <1> 		mov ebx, [arbx]
  1955 000018D6 668B0D[EF180000]    <1> 		mov cx, [arcx]
  1956 000018DD 8B35[F1180000]      <1> 		mov esi, [arsi]
  1957 000018E3 46                  <1> 		inc esi
  1958 000018E4 39DE                <1> 		cmp esi, ebx
  1959 000018E6 7302                <1> 		jae ardn
  1960 000018E8 EBAA                <1> 		jmp arnxt
  1961 000018EA C3                  <1> 	ardn:	ret
  1962 000018EB 00000000            <1> arbx:	dw 0,0
  1963 000018EF 0000                <1> arcx:	db 0,0
  1964 000018F1 00000000            <1> arsi:	dw 0,0
  1965                              <1> 
  1966                              <1> clearbuffer:
  1967 000018F5 BE[7A1C0000]        <1> 	mov esi, buf2
  1968 000018FA B030                <1> 	mov al, '0'
  1969 000018FC 81FE[8E1C0000]      <1> clearbuf: cmp esi, numbuf
  1970 00001902 7305                <1> 	jae doneclearbuff
  1971 00001904 8806                <1> 	mov [esi], al
  1972 00001906 46                  <1> 	inc esi
  1973 00001907 EBF3                <1> 	jmp clearbuf
  1974                              <1> doneclearbuff: 
  1975 00001909 C3                  <1> 		ret
  1976                              <1> 
  1977                              <1> convert:
  1978 0000190A 4E                  <1> 	dec esi
  1979 0000190B 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  1980                              <1> cnvrt:
  1981 0000190D 89DE                <1> 	mov esi, ebx
  1982 0000190F 81EE09000000        <1> 	sub esi, 9
  1983 00001915 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  1984 0000191B 720A                <1> 	jb ten8
  1985 0000191D 81E900CA9A3B        <1> 	sub ecx, 1000000000
  1986 00001923 FE06                <1> 	inc byte [esi]
  1987 00001925 EBE6                <1> 	jmp cnvrt
  1988 00001927 46                  <1> ten8:	inc esi
  1989 00001928 81F900E1F505        <1> 	cmp ecx, 100000000
  1990 0000192E 720A                <1> 	jb ten7
  1991 00001930 81E900E1F505        <1> 	sub ecx, 100000000
  1992 00001936 FE06                <1> 	inc byte [esi]
  1993 00001938 EBD3                <1> 	jmp cnvrt
  1994 0000193A 46                  <1> ten7:	inc esi
  1995 0000193B 81F980969800        <1> 	cmp ecx, 10000000
  1996 00001941 720A                <1> 	jb ten6
  1997 00001943 81E980969800        <1> 	sub ecx, 10000000
  1998 00001949 FE06                <1> 	inc byte [esi]
  1999 0000194B EBC0                <1> 	jmp cnvrt
  2000 0000194D 46                  <1> ten6:	inc esi
  2001 0000194E 81F940420F00        <1> 	cmp ecx, 1000000
  2002 00001954 720A                <1> 	jb ten5
  2003 00001956 81E940420F00        <1> 	sub ecx, 1000000
  2004 0000195C FE06                <1> 	inc byte [esi]
  2005 0000195E EBAD                <1> 	jmp cnvrt
  2006 00001960 46                  <1> ten5:	inc esi
  2007 00001961 81F9A0860100        <1> 	cmp ecx, 100000
  2008 00001967 720A                <1> 	jb ten4
  2009 00001969 81E9A0860100        <1> 	sub ecx, 100000
  2010 0000196F FE06                <1> 	inc byte [esi]
  2011 00001971 EB9A                <1> 	jmp cnvrt
  2012 00001973 46                  <1> ten4:	inc esi
  2013 00001974 81F910270000        <1> 	cmp ecx, 10000
  2014 0000197A 720A                <1> 	jb ten3
  2015 0000197C 81E910270000        <1> 	sub ecx, 10000
  2016 00001982 FE06                <1> 	inc byte [esi]
  2017 00001984 EB87                <1> 	jmp cnvrt
  2018 00001986 46                  <1> ten3:	inc esi
  2019 00001987 81F9E8030000        <1> 	cmp ecx, 1000
  2020 0000198D 720D                <1> 	jb ten2
  2021 0000198F 81E9E8030000        <1> 	sub ecx, 1000
  2022 00001995 FE06                <1> 	inc byte [esi]
  2023 00001997 E971FFFFFF          <1> 	jmp cnvrt
  2024 0000199C 46                  <1> ten2:	inc esi
  2025 0000199D 81F964000000        <1> 	cmp ecx, 100
  2026 000019A3 720D                <1> 	jb ten1
  2027 000019A5 81E964000000        <1> 	sub ecx, 100
  2028 000019AB FE06                <1> 	inc byte [esi]
  2029 000019AD E95BFFFFFF          <1> 	jmp cnvrt
  2030 000019B2 46                  <1> ten1:	inc esi
  2031 000019B3 81F90A000000        <1> 	cmp ecx, 10
  2032 000019B9 720D                <1> 	jb ten0
  2033 000019BB 81E90A000000        <1> 	sub ecx, 10
  2034 000019C1 FE06                <1> 	inc byte [esi]
  2035 000019C3 E945FFFFFF          <1> 	jmp cnvrt
  2036 000019C8 46                  <1> ten0:	inc esi
  2037 000019C9 81F901000000        <1> 	cmp ecx, 1
  2038 000019CF 720D                <1> 	jb tendn
  2039 000019D1 81E901000000        <1> 	sub ecx, 1
  2040 000019D7 FE06                <1> 	inc byte [esi]
  2041 000019D9 E92FFFFFFF          <1> 	jmp cnvrt
  2042                              <1> tendn:
  2043 000019DE C3                  <1> 	ret
  2044                              <1> 
  2045                              <1> 	
  2046                              <1> 
  2047 000019DF 00<rept>            <1> hexnumber times 8 db 0
  2048 000019E7 202000              <1> hexnumberend db "  ",0
  2049                              <1> 
  2050                              <1> 
  2051 000019EA 00000000            <1> sibuf dw 0,0
  2052 000019EE 00000000            <1> dibuf dw 0,0
  2053                              <1> 
  2054                              <1> converthex:
  2055                              <1> clearbufferhex:
  2056 000019F2 B030                <1> 	mov al, '0'
  2057 000019F4 8935[EA190000]      <1> 	mov [sibuf], esi
  2058 000019FA 893D[EE190000]      <1> 	mov [dibuf], edi
  2059 00001A00 39FE                <1> clearbufhex: cmp esi, edi
  2060 00001A02 7305                <1> 	jae doneclearbuffhex
  2061 00001A04 8806                <1> 	mov [esi], al
  2062 00001A06 46                  <1> 	inc esi
  2063 00001A07 EBF7                <1> 	jmp clearbufhex
  2064                              <1> doneclearbuffhex:
  2065 00001A09 8B35[EE190000]      <1> 	mov esi, [dibuf]
  2066 00001A0F 89CA                <1> 	mov edx, ecx
  2067 00001A11 81FA00000000        <1> 	cmp edx, 0
  2068 00001A17 741F                <1> 	je donenxtephx
  2069                              <1> nxtexphx:	;0x10^x
  2070 00001A19 4E                  <1> 	dec esi
  2071 00001A1A 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  2072 00001A1C 89D1                <1> 	mov ecx, edx
  2073 00001A1E 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  2074 00001A24 E81C000000          <1> 	call cnvrtexphx		;;get this digit
  2075 00001A29 89FE                <1> 	mov esi, edi
  2076 00001A2B C1EA04              <1> 	shr edx, 4		;;next digit
  2077 00001A2E 81FA00000000        <1> 	cmp edx, 0
  2078 00001A34 7402                <1> 	je donenxtephx
  2079 00001A36 EBE1                <1> 	jmp nxtexphx
  2080                              <1> donenxtephx:
  2081 00001A38 8B35[EA190000]      <1> 	mov esi, [sibuf]
  2082 00001A3E 8B3D[EE190000]      <1> 	mov edi, [dibuf]
  2083 00001A44 C3                  <1> 	ret
  2084                              <1> cnvrtexphx:			;;convert this number
  2085 00001A45 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  2086 00001A47 81F900000000        <1> 	cmp ecx, 0
  2087 00001A4D 7429                <1> 	je zerohx
  2088 00001A4F 8A06                <1> cnvrthx:  mov al, [esi]
  2089 00001A51 3C39                <1> 	cmp al, '9'
  2090 00001A53 741B                <1> 	je lettershx
  2091 00001A55 3C46                <1> lttrhxdn: cmp al, 'F'
  2092 00001A57 741F                <1> 	je zerohx
  2093 00001A59 8A06                <1> 	mov al, [esi]
  2094 00001A5B FEC0                <1> 	inc al
  2095 00001A5D 8806                <1> 	mov [esi], al
  2096 00001A5F 89DE                <1> 	mov esi, ebx
  2097 00001A61 81E901000000        <1> cnvrtlphx: sub ecx, 1
  2098 00001A67 81F900000000        <1> 	cmp ecx, 0
  2099 00001A6D 75E0                <1> 	jne cnvrthx
  2100 00001A6F C3                  <1> 	ret
  2101                              <1> lettershx:
  2102 00001A70 B041                <1> 	mov al, 'A'
  2103 00001A72 2C01                <1> 	sub al, 1
  2104 00001A74 8806                <1> 	mov [esi], al
  2105 00001A76 EBDD                <1> 	jmp lttrhxdn
  2106 00001A78 B030                <1> zerohx:	mov al, '0'
  2107 00001A7A 8806                <1> 	mov [esi], al
  2108 00001A7C 4E                  <1> 	dec esi
  2109 00001A7D 8A06                <1> 	mov al, [esi]
  2110 00001A7F 3C46                <1> 	cmp al, 'F'
  2111 00001A81 74F5                <1> 	je zerohx
  2112 00001A83 41                  <1> 	inc ecx
  2113 00001A84 EBDB                <1> 	jmp cnvrtlphx
  2114 00001A86 00                  <1> smallhex db 0
  2115 00001A87 01                  <1> firsthexshown db 1
  2116                              <1> showhexsmall:
  2117 00001A88 C605[861A0000]01    <1> 	mov byte [smallhex], 1
  2118 00001A8F E808000000          <1> 	call showhex
  2119 00001A94 C605[861A0000]00    <1> 	mov byte [smallhex], 0
  2120 00001A9B C3                  <1> 	ret
  2121                              <1> showhex:
  2122 00001A9C 60                  <1> 	pusha
  2123 00001A9D BE[DF190000]        <1> 	mov esi, hexnumber
  2124 00001AA2 BF[E7190000]        <1> 	mov edi, hexnumberend
  2125 00001AA7 E846FFFFFF          <1> 	call converthex
  2126 00001AAC 803D[871A0000]01    <1> 	cmp byte [firsthexshown], 1
  2127 00001AB3 7504                <1> 	jne showthathex
  2128 00001AB5 66BA0000            <1> 	mov dx, 0
  2129                              <1> showthathex:
  2130 00001AB9 803D[871A0000]03    <1> 	cmp byte [firsthexshown], 3
  2131 00001AC0 750A                <1> 	jne nonewhexline
  2132 00001AC2 BE[19580000]        <1> 	mov esi, line
  2133 00001AC7 E802F6FFFF          <1> 	call print
  2134                              <1> nonewhexline:
  2135 00001ACC 803D[871A0000]04    <1> 	cmp byte [firsthexshown], 4
  2136 00001AD3 7527                <1> 	jne notabfixhex
  2137 00001AD5 B1A0                <1> 	mov cl, 160
  2138 00001AD7 28D1                <1> 	sub cl, dl
  2139 00001AD9 C0E905              <1> 	shr cl, 5
  2140 00001ADC C0E105              <1> 	shl cl, 5
  2141 00001ADF 80F900              <1> 	cmp cl, 0
  2142 00001AE2 750F                <1> 	jne nonewlinetabfixhex
  2143 00001AE4 BE[19580000]        <1> 	mov esi, line
  2144 00001AE9 E8E0F5FFFF          <1> 	call print
  2145 00001AEE E909000000          <1> 	jmp notabfixhex
  2146                              <1> nonewlinetabfixhex:
  2147 00001AF3 80C20F              <1> 	add dl, 15
  2148 00001AF6 C0EA04              <1> 	shr dl, 4
  2149 00001AF9 C0E204              <1> 	shl dl, 4
  2150                              <1> notabfixhex:
  2151 00001AFC BE[DF190000]        <1> 	mov esi, hexnumber
  2152 00001B01 803D[861A0000]01    <1> 	cmp byte [smallhex],1
  2153 00001B08 7506                <1> 	jne printnosmallhex
  2154 00001B0A 81C606000000        <1> 	add esi, 6
  2155                              <1> printnosmallhex:
  2156 00001B10 E8B9F5FFFF          <1> 	call print
  2157 00001B15 803D[871A0000]02    <1> 	cmp byte [firsthexshown], 2
  2158 00001B1C 750A                <1> 	jne hexshown
  2159 00001B1E BE[19580000]        <1> 	mov esi, line
  2160 00001B23 E8A6F5FFFF          <1> 	call print
  2161                              <1> hexshown:
  2162 00001B28 C605[871A0000]00    <1> 	mov byte [firsthexshown], 0
  2163 00001B2F 61                  <1> 	popa
  2164 00001B30 C3                  <1> 	ret
  2165                              <1> 
  2166                              <1> 
  2167 00001B31 303030303030303030- <1> decnumber db "00000000000000"
  2168 00001B3A 3030303030          <1>
  2169 00001B3F 2000                <1> decnumberend: db " ",0
  2170                              <1> 
  2171                              <1> showdec: ;;same as showhex, just uses decimal conversion
  2172 00001B41 60                  <1> 	pusha
  2173 00001B42 BF[311B0000]        <1> 	mov edi, decnumber
  2174 00001B47 BE[3F1B0000]        <1> 	mov esi, decnumberend
  2175                              <1> cleardecbuf:
  2176 00001B4C C60730              <1> 	mov byte [edi], '0'
  2177 00001B4F 47                  <1> 	inc edi
  2178 00001B50 39F7                <1> 	cmp edi, esi
  2179 00001B52 72F8                <1> 	jb cleardecbuf
  2180 00001B54 BF[311B0000]        <1> 	mov edi, decnumber
  2181 00001B59 E8ACFDFFFF          <1> 	call convert
  2182 00001B5E 803D[871A0000]01    <1> 	cmp byte [firsthexshown], 1
  2183 00001B65 7504                <1> 	jne showthatdec
  2184 00001B67 66BA0000            <1> 	mov dx, 0
  2185                              <1> showthatdec:
  2186 00001B6B 803D[871A0000]03    <1> 	cmp byte [firsthexshown], 3
  2187 00001B72 750A                <1> 	jne nonewdecline
  2188 00001B74 BE[19580000]        <1> 	mov esi, line
  2189 00001B79 E850F5FFFF          <1> 	call print
  2190                              <1> nonewdecline:
  2191 00001B7E 803D[871A0000]04    <1> 	cmp byte [firsthexshown], 4
  2192 00001B85 7527                <1> 	jne notabfixdec
  2193 00001B87 B1A0                <1> 	mov cl, 160
  2194 00001B89 28D1                <1> 	sub cl, dl
  2195 00001B8B C0E905              <1> 	shr cl, 5
  2196 00001B8E C0E105              <1> 	shl cl, 5
  2197 00001B91 80F900              <1> 	cmp cl, 0
  2198 00001B94 750F                <1> 	jne nonewlinetabfixdec
  2199 00001B96 BE[19580000]        <1> 	mov esi, line
  2200 00001B9B E82EF5FFFF          <1> 	call print
  2201 00001BA0 E909000000          <1> 	jmp notabfixdec
  2202                              <1> nonewlinetabfixdec:
  2203 00001BA5 80C20F              <1> 	add dl, 15
  2204 00001BA8 C0EA04              <1> 	shr dl, 4
  2205 00001BAB C0E204              <1> 	shl dl, 4
  2206                              <1> notabfixdec:
  2207 00001BAE BE[311B0000]        <1> 	mov esi, decnumber
  2208 00001BB3 4E                  <1> 	dec esi
  2209                              <1> sifind:
  2210 00001BB4 46                  <1> 	inc esi
  2211 00001BB5 803E30              <1> 	cmp byte [esi], '0'
  2212 00001BB8 74FA                <1> 	je sifind
  2213 00001BBA E80FF5FFFF          <1> 	call print
  2214 00001BBF 803D[871A0000]02    <1> 	cmp byte [firsthexshown], 2
  2215 00001BC6 750A                <1> 	jne decshown
  2216 00001BC8 BE[19580000]        <1> 	mov esi, line
  2217 00001BCD E8FCF4FFFF          <1> 	call print
  2218                              <1> decshown:
  2219 00001BD2 C605[871A0000]00    <1> 	mov byte [firsthexshown], 0
  2220 00001BD9 61                  <1> 	popa
  2221 00001BDA C3                  <1> 	ret
  2222                              <1> 	
  2223                              <1> cnvrttxt: 
  2224 00001BDB B900000000          <1> 	mov ecx, 0
  2225 00001BE0 B800000000          <1> 	mov eax, 0
  2226 00001BE5 BA00000000          <1> 	mov edx, 0
  2227 00001BEA BB00000000          <1> 	mov ebx, 0
  2228 00001BEF 4E                  <1> 	dec esi
  2229                              <1> cnvrtlptxt:
  2230 00001BF0 46                  <1> 	inc esi
  2231 00001BF1 8A06                <1> 	mov al, [esi]
  2232 00001BF3 3C00                <1> 	cmp al, 0
  2233 00001BF5 75F9                <1> 	jne cnvrtlptxt
  2234 00001BF7 4E                  <1> 	dec esi
  2235 00001BF8 8A06                <1> 	mov al, [esi]
  2236 00001BFA 3C30                <1> 	cmp al, '0'
  2237 00001BFC 7504                <1> 	jne txtlp
  2238 00001BFE 39FE                <1> zerotest: cmp esi, edi
  2239 00001C00 745B                <1> 	je donecnvrt
  2240                              <1> txtlp:	
  2241 00001C02 B800000000          <1> 	mov eax, 0
  2242 00001C07 8A06                <1> 	mov al, [esi]
  2243 00001C09 3C3D                <1> 	cmp al, '='
  2244 00001C0B 7450                <1> 	je donecnvrt
  2245 00001C0D 3C30                <1> 	cmp al, 48
  2246 00001C0F 724C                <1> 	jb donecnvrt
  2247 00001C11 3C23                <1> 	cmp al, '#'
  2248 00001C13 7448                <1> 	je donecnvrt
  2249 00001C15 39FE                <1> 	cmp esi, edi
  2250 00001C17 7244                <1> 	jb donecnvrt
  2251 00001C19 81F900000000        <1> 	cmp ecx, 0
  2252 00001C1F 7708                <1> 	ja exp
  2253 00001C21 2C30                <1> noexp:	sub al, 48
  2254 00001C23 01C2                <1> 	add edx, eax
  2255 00001C25 4E                  <1> 	dec esi
  2256 00001C26 41                  <1> 	inc ecx
  2257 00001C27 EBD9                <1> 	jmp txtlp
  2258 00001C29 81F900000000        <1> exp:	cmp ecx, 0
  2259 00001C2F 74F0                <1> 	je noexp
  2260 00001C31 2C30                <1> 	sub al, 48
  2261 00001C33 51                  <1> 	push ecx
  2262 00001C34 89C3                <1> expmul:	mov ebx, eax
  2263 00001C36 01D8                <1> 	add eax, ebx
  2264 00001C38 01D8                <1> 	add eax, ebx
  2265 00001C3A 01D8                <1> 	add eax, ebx
  2266 00001C3C 01D8                <1> 	add eax, ebx
  2267 00001C3E 01D8                <1> 	add eax, ebx
  2268 00001C40 01D8                <1> 	add eax, ebx
  2269 00001C42 01D8                <1> 	add eax, ebx
  2270 00001C44 01D8                <1> 	add eax, ebx
  2271 00001C46 01D8                <1> 	add eax, ebx
  2272 00001C48 81E901000000        <1> 	sub ecx, 1
  2273 00001C4E 81F900000000        <1> 	cmp ecx, 0
  2274 00001C54 77DE                <1> 	ja expmul
  2275 00001C56 01C2                <1> 	add edx, eax
  2276 00001C58 59                  <1> 	pop ecx
  2277 00001C59 4E                  <1> 	dec esi
  2278 00001C5A 41                  <1> 	inc ecx
  2279 00001C5B EBA5                <1> 	jmp txtlp
  2280 00001C5D 89D1                <1> donecnvrt: mov ecx, edx
  2281 00001C5F C3                  <1> 	ret
  2282                                      %include 'source/builtinprogs.asm'
  2283 00001C60 050406040704        <1> filetypes db 5,4,6,4,7,4
  2284                              <1> progstart:		;programs start here
  2285                              <1> ;db 5,4,"index",0
  2286                              <1> ;	call indexfiles
  2287                              <1> ;	jmp nwcmd
  2288                              <1> 
  2289                              <1> 
  2290                              <1> indexfiles:
  2291 00001C66 BE[661C0000]        <1> 	mov esi, progstart
  2292 00001C6B BB[00130000]        <1> 	mov ebx, fileindex
  2293 00001C70 BF[661C0000]        <1> 	mov edi, progstart
  2294 00001C75 81EF02000000        <1> 	sub edi, 2
  2295                              <1> indexloop:
  2296 00001C7B 668B0E              <1> 	mov cx, [esi]
  2297                              <1> 	indexloop2:
  2298 00001C7E 663B0F              <1> 		cmp cx, [edi]
  2299 00001C81 7424                <1> 		je indexloop2done
  2300 00001C83 81EF02000000        <1> 		sub edi, 2
  2301 00001C89 81FF[601C0000]      <1> 		cmp edi, filetypes
  2302 00001C8F 73ED                <1> 		jae indexloop2
  2303 00001C91 BF[661C0000]        <1> 	mov edi, progstart
  2304 00001C96 81EF02000000        <1> 	sub edi, 2
  2305 00001C9C 46                  <1> 	inc esi
  2306 00001C9D 81FE[FC2C0000]      <1> 	cmp esi, batchprogend
  2307 00001CA3 734E                <1> 	jae indexloopdone
  2308 00001CA5 EBD4                <1> 	jmp indexloop
  2309                              <1> indexloop2done:
  2310 00001CA7 66890B              <1> 	mov [ebx], cx
  2311 00001CAA 81C302000000        <1> 	add ebx, 2
  2312 00001CB0 81C602000000        <1> 	add esi, 2
  2313                              <1> 	nameindex:
  2314 00001CB6 8A0E                <1> 		mov cl, [esi]
  2315 00001CB8 80F900              <1> 		cmp cl, 0
  2316 00001CBB 7406                <1> 		je nameindexdone
  2317 00001CBD 880B                <1> 		mov [ebx], cl
  2318 00001CBF 46                  <1> 		inc esi
  2319 00001CC0 43                  <1> 		inc ebx
  2320 00001CC1 EBF3                <1> 		jmp nameindex
  2321                              <1> 	nameindexdone:
  2322 00001CC3 43                  <1> 		inc ebx
  2323 00001CC4 66C7030000          <1> 		mov word [ebx], 0
  2324 00001CC9 81C302000000        <1> 		add ebx, 2
  2325 00001CCF 46                  <1> 		inc esi
  2326 00001CD0 8933                <1> 		mov [ebx], esi
  2327 00001CD2 81C304000000        <1> 		add ebx, 4
  2328 00001CD8 66C7030000          <1> 		mov word [ebx], 0
  2329 00001CDD 81C302000000        <1> 		add ebx, 2
  2330 00001CE3 81FB[00150000]      <1> 		cmp ebx, fileindexend
  2331 00001CE9 7308                <1> 		jae indexloopdone
  2332 00001CEB 81C601000000        <1> 		add esi, 1
  2333 00001CF1 EB88                <1> 		jmp indexloop
  2334 00001CF3 C605[FB1C0000]01    <1> indexloopdone: 	mov byte [indexdone], 1
  2335 00001CFA C3                  <1> 		ret
  2336                              <1> 
  2337 00001CFB 00                  <1> indexdone db 0
  2338                              <1> 
  2339                              <1> 
  2340                              <1> ;db 5,4,"showindex",0
  2341                              <1> ;	mov esi, fileindex
  2342                              <1> ;	mov ebx, fileindexend
  2343                              <1> ;	mov cl, 5
  2344                              <1> ;	mov ch, 4
  2345                              <1> ;	call array
  2346                              <1> ;	mov esi, fileindex
  2347                              <1> ;	mov ebx, fileindexend
  2348                              <1> ;	mov cl, 6
  2349                              <1> ;	mov ch, 4
  2350                              <1> ;	call array
  2351                              <1> ;	mov esi, fileindex
  2352                              <1> ;	mov ebx, fileindexend
  2353                              <1> ;	mov cl, 7
  2354                              <1> ;	mov ch, 4
  2355                              <1> ;	call array
  2356                              <1> ;	jmp nwcmd
  2357                              <1> 
  2358 00001CFC 05046C7300          <1> db 5,4,"ls",0
  2359 00001D01 BE[661C0000]        <1> 	lscmd:	mov esi, progstart
  2360 00001D06 BB[FC2C0000]        <1> 		mov ebx, progend
  2361 00001D0B E9D8FAFFFF          <1> 		jmp dir
  2362                              <1> 		
  2363 00001D10 05046469736B00      <1> db 5,4,"disk",0
  2364 00001D17 B900000000          <1> 		mov ecx, 0
  2365 00001D1C 8A0D[A0010000]      <1> 		mov cl, [DriveNumber]
  2366 00001D22 C605[871A0000]00    <1> 		mov byte [firsthexshown], 0
  2367 00001D29 E86EFDFFFF          <1> 		call showhex
  2368 00001D2E BE[19580000]        <1> 		mov esi, line
  2369 00001D33 E896F3FFFF          <1> 		call print
  2370 00001D38 BE[69570000]        <1> 		mov esi, diskfileindex
  2371                              <1> 	diskindexdir:
  2372 00001D3D E88CF3FFFF          <1> 		call print
  2373 00001D42 8B4E05              <1> 		mov ecx, [esi + 5]
  2374 00001D45 C605[871A0000]03    <1> 		mov byte [firsthexshown], 3
  2375 00001D4C E8F0FDFFFF          <1> 		call showdec
  2376 00001D51 56                  <1> 		push esi
  2377 00001D52 BE[19580000]        <1> 		mov esi, line
  2378 00001D57 E872F3FFFF          <1> 		call print
  2379 00001D5C 5E                  <1> 		pop esi
  2380 00001D5D 81C609000000        <1> 		add esi, 9
  2381 00001D63 81FE[DB570000]      <1> 		cmp esi, enddiskfileindex
  2382 00001D69 72D2                <1> 		jb diskindexdir
  2383 00001D6B E9BFF8FFFF          <1> 		jmp nwcmd
  2384                              <1> 
  2385 00001D70 0504636C65617200    <1> db 5,4,"clear",0
  2386 00001D78 E842F6FFFF          <1> 	cls:	call clear
  2387 00001D7D E9ADF8FFFF          <1> 		jmp nwcmd
  2388                              <1> 		
  2389 00001D82 05047761697400      <1> db 5,4,"wait",0
  2390 00001D89 B000                <1> 		mov al, 0
  2391 00001D8B E8F8F2FFFF          <1> 		call int302
  2392 00001D90 E99AF8FFFF          <1> 		jmp nwcmd
  2393                              <1> 
  2394 00001D95 05046563686F00      <1> db 5,4,"echo",0
  2395 00001D9C BE[7A1B0000]        <1> 	echo:	mov esi, buftxt
  2396 00001DA1 81C605000000        <1> 		add esi, 5
  2397 00001DA7 8A06                <1> 		mov al, [esi]
  2398 00001DA9 3C24                <1> 		cmp al, '$'
  2399 00001DAB 7414                <1> 		je echovr
  2400 00001DAD E81CF3FFFF          <1> 		call print
  2401 00001DB2 BE[19580000]        <1> 		mov esi, line
  2402 00001DB7 E812F3FFFF          <1> 		call print
  2403 00001DBC E96EF8FFFF          <1> 		jmp nwcmd
  2404 00001DC1 BB[6F150000]        <1> 	echovr:	mov ebx, variables
  2405 00001DC6 BF06000000          <1> 		mov edi, 6
  2406 00001DCB E83A000000          <1> 		call nxtvrech
  2407 00001DD0 E957000000          <1> 		jmp prntvr2
  2408 00001DD5 B13D                <1> 	echvar:	mov cl, '='
  2409 00001DD7 43                  <1> 		inc ebx
  2410 00001DD8 8A03                <1> 		mov al, [ebx]
  2411 00001DDA 3C00                <1> 		cmp al, 0
  2412 00001DDC 742C                <1> 		je nxtvrech
  2413 00001DDE 3C3D                <1> 		cmp al, '='
  2414 00001DE0 7420                <1> 		je nxtvrechb1
  2415 00001DE2 BE[7A1B0000]        <1> 		mov esi, buftxt
  2416 00001DE7 01FE                <1> 		add esi, edi
  2417 00001DE9 E8DAF9FFFF          <1> 		call cndtest
  2418 00001DEE 3C02                <1> 		cmp al, 2
  2419 00001DF0 7436                <1> 		je prntvr
  2420 00001DF2 3C01                <1> 		cmp al, 1
  2421 00001DF4 7432                <1> 		je prntvr
  2422 00001DF6 BE[7A1B0000]        <1> 		mov esi, buftxt
  2423 00001DFB 01FE                <1> 		add esi, edi
  2424 00001DFD E908000000          <1> 		jmp nxtvrech
  2425                              <1> 	nxtvrechb1:
  2426 00001E02 81EB02000000        <1> 		sub ebx, 2
  2427 00001E08 EBCB                <1> 		jmp echvar
  2428 00001E0A 8A03                <1> 	nxtvrech: mov al, [ebx]
  2429 00001E0C 3C05                <1> 		cmp al, 5
  2430 00001E0E 740F                <1> 		je nxtvrec2
  2431 00001E10 43                  <1> 		inc ebx
  2432 00001E11 81FB[6F1A0000]      <1> 		cmp ebx, varend
  2433 00001E17 0F8312F8FFFF        <1> 		jae nwcmd
  2434 00001E1D EBEB                <1> 		jmp nxtvrech
  2435 00001E1F 43                  <1> 	nxtvrec2: inc ebx
  2436 00001E20 8A03                <1> 		mov al, [ebx]
  2437 00001E22 3C04                <1> 		cmp al, 4
  2438 00001E24 74AF                <1> 		je echvar
  2439 00001E26 EBE2                <1> 		jmp nxtvrech
  2440 00001E28 43                  <1> 	prntvr: inc ebx
  2441 00001E29 89DE                <1> 		mov esi, ebx
  2442 00001E2B C3                  <1> 		ret
  2443 00001E2C E89DF2FFFF          <1> 	prntvr2: call print
  2444 00001E31 BE[19580000]        <1> 		mov esi, line
  2445 00001E36 E893F2FFFF          <1> 		call print
  2446 00001E3B E9EFF7FFFF          <1> 		jmp nwcmd
  2447                              <1> 		
  2448                              <1> 
  2449 00001E40 05042300            <1> db 5,4,"#",0
  2450                              <1> 	num:	
  2451 00001E44 E8ACFAFFFF          <1> 		call clearbuffer
  2452 00001E49 C605[00210000]00    <1> 		mov byte [decimal], 0
  2453 00001E50 C605[01210000]00    <1> 		mov byte [decimal2], 0
  2454 00001E57 BE[7A1B0000]        <1> 		mov esi, buftxt
  2455 00001E5C B800000000          <1> 		mov eax, 0
  2456 00001E61 B900000000          <1> 		mov ecx, 0
  2457 00001E66 BB00000000          <1> 		mov ebx, 0
  2458 00001E6B 8A06                <1> 	num2:	mov al, [esi]
  2459 00001E6D 3C2B                <1> 		cmp al, '+'
  2460 00001E6F 741B                <1> 		je operatorfound
  2461 00001E71 3C2D                <1> 		cmp al, '-'
  2462 00001E73 7417                <1> 		je operatorfound
  2463 00001E75 3C2A                <1> 		cmp al, '*'
  2464 00001E77 7413                <1> 		je operatorfound
  2465 00001E79 3C2F                <1> 		cmp al, '/'
  2466 00001E7B 740F                <1> 		je operatorfound
  2467 00001E7D 3C5E                <1> 		cmp al, '^'
  2468 00001E7F 740B                <1> 		je operatorfound
  2469 00001E81 46                  <1> 		inc esi
  2470 00001E82 3C00                <1> 		cmp al, 0
  2471 00001E84 0F84A5F7FFFF        <1> 		je near nwcmd
  2472 00001E8A EBDF                <1> 		jmp num2
  2473 00001E8C 50                  <1> 	operatorfound: push eax
  2474 00001E8D B400                <1> 		mov ah, 0
  2475 00001E8F 8826                <1> 		mov [esi], ah
  2476 00001E91 89F7                <1> 		mov edi, esi
  2477 00001E93 46                  <1> 		inc esi
  2478 00001E94 8A06                <1> 		mov al, [esi]
  2479 00001E96 3C24                <1> 		cmp al, '$'
  2480 00001E98 0F8481000000        <1> 		je near varnum1
  2481 00001E9E 3C25                <1> 		cmp al, '%'
  2482 00001EA0 0F8469000000        <1> 		je near resultnum1
  2483                              <1> 	varnum2: 
  2484 00001EA6 57                  <1> 		push edi
  2485 00001EA7 E8C9000000          <1> 		call checkdecimal
  2486 00001EAC 5F                  <1> 		pop edi
  2487 00001EAD E829FDFFFF          <1> 		call cnvrttxt
  2488                              <1> 	vrnm2:
  2489 00001EB2 89CB                <1> 		mov ebx, ecx
  2490 00001EB4 53                  <1> 		push ebx
  2491 00001EB5 E83BFAFFFF          <1> 		call clearbuffer
  2492 00001EBA BE[7A1B0000]        <1> 		mov esi, buftxt
  2493 00001EBF 89F7                <1> 		mov edi, esi
  2494 00001EC1 46                  <1> 		inc esi
  2495 00001EC2 8A06                <1> 		mov al, [esi]
  2496 00001EC4 3C24                <1> 		cmp al, '$'
  2497 00001EC6 0F8474000000        <1> 		je near varnum3
  2498 00001ECC 3C25                <1> 		cmp al, '%'
  2499 00001ECE 0F8443000000        <1> 		je near resultnum2
  2500                              <1> 	varnum4: 
  2501 00001ED4 57                  <1> 		push edi
  2502 00001ED5 E887000000          <1> 		call checkdecimal2
  2503 00001EDA 5F                  <1> 		pop edi
  2504 00001EDB E8FBFCFFFF          <1> 		call cnvrttxt
  2505                              <1> 	vrnm4:
  2506 00001EE0 5B                  <1> 		pop ebx
  2507 00001EE1 58                  <1> 		pop eax
  2508 00001EE2 3C2B                <1> 		cmp al, '+'
  2509 00001EE4 0F84B9000000        <1> 		je near plusnum
  2510 00001EEA 3C2D                <1> 		cmp al, '-'
  2511 00001EEC 0F84BD000000        <1> 		je near subnum
  2512 00001EF2 3C2A                <1> 		cmp al, '*'
  2513 00001EF4 0F84C1000000        <1> 		je near mulnum
  2514 00001EFA 3C2F                <1> 		cmp al, '/'
  2515 00001EFC 0F84CF000000        <1> 		je near divnum
  2516 00001F02 3C5E                <1> 		cmp al, '^'
  2517 00001F04 0F84ED000000        <1> 		je near expnum
  2518 00001F0A E920F7FFFF          <1> 		jmp nwcmd
  2519                              <1> 	resultnum1:
  2520 00001F0F 8B0D[02210000]      <1> 		mov ecx, [result]
  2521 00001F15 EB9B                <1> 		jmp vrnm2
  2522                              <1> 	resultnum2:
  2523 00001F17 8B0D[02210000]      <1> 		mov ecx, [result]
  2524 00001F1D EBC1                <1> 		jmp vrnm4
  2525 00001F1F 81EE[7A1B0000]      <1> 	varnum1: sub esi, buftxt
  2526 00001F25 89F7                <1> 		mov edi, esi
  2527 00001F27 81C6[7A1B0000]      <1> 		add esi, buftxt
  2528 00001F2D 47                  <1> 		inc edi
  2529 00001F2E BB[6F150000]        <1> 		mov ebx, variables
  2530 00001F33 E8D2FEFFFF          <1> 		call nxtvrech
  2531 00001F38 89F7                <1> 		mov edi, esi
  2532 00001F3A 4F                  <1> 		dec edi
  2533 00001F3B E966FFFFFF          <1> 		jmp varnum2
  2534 00001F40 81EE[7A1B0000]      <1> 	varnum3: sub esi, buftxt
  2535 00001F46 89F7                <1> 		mov edi, esi
  2536 00001F48 81C6[7A1B0000]      <1> 		add esi, buftxt
  2537 00001F4E 47                  <1> 		inc edi
  2538 00001F4F BB[6F150000]        <1> 		mov ebx, variables
  2539 00001F54 E8B1FEFFFF          <1> 		call nxtvrech
  2540 00001F59 89F7                <1> 		mov edi, esi
  2541 00001F5B 4F                  <1> 		dec edi
  2542 00001F5C E973FFFFFF          <1> 		jmp varnum4
  2543                              <1> 	checkdecimal2:
  2544 00001F61 8A25[00210000]      <1> 		mov ah, [decimal]
  2545 00001F67 8825[01210000]      <1> 		mov [decimal2], ah
  2546 00001F6D B400                <1> 		mov ah, 0
  2547 00001F6F 8825[00210000]      <1> 		mov [decimal], ah
  2548                              <1> 	checkdecimal:
  2549 00001F75 89F7                <1> 		mov edi, esi
  2550                              <1> 	chkdec1:
  2551 00001F77 8A07                <1> 		mov al, [edi]
  2552 00001F79 3C2E                <1> 		cmp al, '.'
  2553 00001F7B 0F840B000000        <1> 		je near fnddec
  2554 00001F81 3C00                <1> 		cmp al, 0
  2555 00001F83 0F8419000000        <1> 		je near nodecimal
  2556 00001F89 47                  <1> 		inc edi
  2557 00001F8A EBEB                <1> 		jmp chkdec1
  2558                              <1> 	fnddec:
  2559 00001F8C 8A4701              <1> 		mov al, [edi + 1]
  2560 00001F8F 8807                <1> 		mov [edi], al
  2561 00001F91 3C00                <1> 		cmp al, 0
  2562 00001F93 0F8409000000        <1> 		je near nodecimal
  2563 00001F99 FE05[00210000]      <1> 		inc byte [decimal]
  2564 00001F9F 47                  <1> 		inc edi
  2565 00001FA0 EBEA                <1> 		jmp fnddec
  2566                              <1> 	nodecimal:
  2567 00001FA2 C3                  <1> 		ret
  2568                              <1> 	plusnum:
  2569 00001FA3 E816010000          <1> 		call decaddfix
  2570 00001FA8 01D9                <1> 		add ecx, ebx
  2571 00001FAA E991000000          <1> 		jmp retnum
  2572                              <1> 	subnum:
  2573 00001FAF E80A010000          <1> 		call decaddfix
  2574 00001FB4 29D9                <1> 		sub ecx, ebx
  2575 00001FB6 E985000000          <1> 		jmp retnum
  2576                              <1> 	mulnum:
  2577 00001FBB A0[01210000]        <1> 		mov al, [decimal2]
  2578 00001FC0 0005[00210000]      <1> 		add [decimal], al
  2579 00001FC6 89C8                <1> 		mov eax, ecx
  2580 00001FC8 F7E3                <1> 		mul ebx
  2581 00001FCA 89C1                <1> 		mov ecx, eax
  2582 00001FCC E96F000000          <1> 		jmp retnum
  2583                              <1> 	divnum:
  2584 00001FD1 E8E8000000          <1> 		call decaddfix
  2585 00001FD6 B000                <1> 		mov al, 0
  2586 00001FD8 A2[00210000]        <1> 		mov [decimal], al
  2587 00001FDD 6689C8              <1> 		mov ax, cx
  2588 00001FE0 80FB00              <1> 		cmp bl, 0
  2589 00001FE3 0F8457000000        <1> 		je near retnum
  2590 00001FE9 F6F3                <1> 		div bl
  2591 00001FEB B900000000          <1> 		mov ecx, 0
  2592 00001FF0 88C1                <1> 		mov cl, al
  2593 00001FF2 E949000000          <1> 		jmp retnum
  2594                              <1> 	expnum:
  2595 00001FF7 8A15[00210000]      <1> 		mov dl, [decimal]
  2596 00001FFD 8815[01210000]      <1> 		mov [decimal2], dl
  2597 00002003 BA00000000          <1> 		mov edx, 0
  2598 00002008 89C8                <1> 		mov eax, ecx
  2599 0000200A 89D9                <1> 		mov ecx, ebx
  2600 0000200C 89C3                <1> 		mov ebx, eax
  2601 0000200E 81F900000000        <1> 		cmp ecx, 0
  2602 00002014 7425                <1> 		je noexpnum
  2603 00002016 49                  <1> 		dec ecx
  2604 00002017 81F900000000        <1> 		cmp ecx, 0
  2605 0000201D 7415                <1> 		je noexpnumlp
  2606 0000201F F7E3                <1> 	expnumlp: mul ebx
  2607 00002021 8A15[01210000]      <1> 		mov dl, [decimal2]
  2608 00002027 0015[00210000]      <1> 		add [decimal], dl
  2609 0000202D BA00000000          <1> 		mov edx, 0
  2610 00002032 E2EB                <1> 		loop expnumlp
  2611                              <1> 	noexpnumlp:
  2612 00002034 89C1                <1> 		mov ecx, eax
  2613 00002036 E905000000          <1> 		jmp retnum
  2614                              <1> 	noexpnum:
  2615 0000203B B901000000          <1> 		mov ecx, 1
  2616                              <1> 	retnum: 
  2617 00002040 BE[8E1C0000]        <1> 		mov esi, numbuf
  2618 00002045 890D[02210000]      <1> 		mov [result], ecx
  2619 0000204B E8BAF8FFFF          <1> 		call convert
  2620 00002050 BE[8E1C0000]        <1> 		mov esi, numbuf
  2621 00002055 8A25[00210000]      <1> 		mov ah, [decimal]
  2622 0000205B 80FC00              <1> 		cmp ah, 0
  2623 0000205E 0F8425000000        <1> 		je near noputdecimal
  2624                              <1> 	putdecimal:
  2625 00002064 4E                  <1> 		dec esi
  2626 00002065 FECC                <1> 		dec ah
  2627 00002067 80FC00              <1> 		cmp ah, 0
  2628 0000206A 0F87F4FFFFFF        <1> 		ja near putdecimal
  2629 00002070 4E                  <1> 		dec esi
  2630 00002071 8A06                <1> 		mov al, [esi]
  2631 00002073 C6062E              <1> 		mov byte [esi], '.'
  2632                              <1> 	decputloop:
  2633 00002076 4E                  <1> 		dec esi
  2634 00002077 8A26                <1> 		mov ah, [esi]
  2635 00002079 8806                <1> 		mov [esi], al
  2636 0000207B 88E0                <1> 		mov al, ah
  2637 0000207D 81FE[7A1C0000]      <1> 		cmp esi, buf2
  2638 00002083 0F87EDFFFFFF        <1> 		ja near decputloop
  2639                              <1> 	noputdecimal:
  2640 00002089 BE[7A1C0000]        <1> 		mov esi, buf2
  2641 0000208E E809000000          <1> 		call chkadd
  2642 00002093 E997F5FFFF          <1> 		jmp nwcmd
  2643 00002098 00000000            <1> edxnumbuf dw 0,0
  2644 0000209C 8A06                <1> 	chkadd: mov al, [esi]
  2645 0000209E 3C30                <1> 		cmp al, '0'
  2646 000020A0 750C                <1> 		jne dnadd
  2647 000020A2 46                  <1> 		inc esi
  2648 000020A3 81FE[8E1C0000]      <1> 		cmp esi, numbuf
  2649 000020A9 7402                <1> 		je dnaddm1
  2650 000020AB EBEF                <1> 		jmp chkadd
  2651 000020AD 4E                  <1> 	dnaddm1: dec esi
  2652 000020AE E81BF0FFFF          <1> 	dnadd:	call print
  2653 000020B3 BE[19580000]        <1> 		mov esi, line
  2654 000020B8 E811F0FFFF          <1> 		call print
  2655 000020BD C3                  <1> 		ret
  2656                              <1> 		
  2657                              <1> 	decaddfix:
  2658 000020BE A0[01210000]        <1> 		mov al, [decimal2]
  2659 000020C3 8A25[00210000]      <1> 		mov ah, [decimal]
  2660 000020C9 38E0                <1> 		cmp al, ah
  2661 000020CB 7432                <1> 		je gooddecadd
  2662 000020CD 38E0                <1> 		cmp al, ah
  2663 000020CF 721A                <1> 		jb lowdecadd
  2664                              <1> 	highdecadd:
  2665 000020D1 FEC4                <1> 		inc ah
  2666 000020D3 89CA                <1> 		mov edx, ecx
  2667 000020D5 C1E103              <1> 		shl ecx, 3
  2668 000020D8 01D1                <1> 		add ecx, edx
  2669 000020DA 01D1                <1> 		add ecx, edx
  2670 000020DC 38E0                <1> 		cmp al, ah
  2671 000020DE 77F1                <1> 		ja highdecadd
  2672 000020E0 8825[00210000]      <1> 		mov [decimal], ah
  2673 000020E6 E914000000          <1> 		jmp gooddecadd
  2674                              <1> 	lowdecadd:
  2675 000020EB FEC0                <1> 		inc al
  2676 000020ED 89DA                <1> 		mov edx, ebx
  2677 000020EF C1E303              <1> 		shl ebx, 3
  2678 000020F2 01D3                <1> 		add ebx, edx
  2679 000020F4 01D3                <1> 		add ebx, edx
  2680 000020F6 38E0                <1> 		cmp al, ah
  2681 000020F8 72F1                <1> 		jb lowdecadd
  2682 000020FA A2[00210000]        <1> 		mov [decimal], al
  2683                              <1> 	gooddecadd:
  2684 000020FF C3                  <1> 		ret
  2685                              <1> 		
  2686 00002100 00                  <1> decimal db 0
  2687 00002101 00                  <1> decimal2 db 0
  2688 00002102 00000000            <1> result db 0,0,0,0
  2689                              <1> 	
  2690 00002106 05042500            <1> db 5,4,"%",0
  2691 0000210A E8E6F7FFFF          <1> 	ans:	call clearbuffer
  2692 0000210F 8B0D[02210000]      <1> 		mov ecx, [result]
  2693 00002115 BE[7A1C0000]        <1> 		mov esi, buf2
  2694 0000211A E8EBF7FFFF          <1> 		call convert
  2695 0000211F BE[7A1C0000]        <1> 		mov esi, buf2
  2696 00002124 E873FFFFFF          <1> 		call chkadd
  2697 00002129 E901F5FFFF          <1> 		jmp nwcmd
  2698                              <1> 
  2699 0000212E 05042400            <1> db 5,4,"$",0
  2700 00002132 BE[7A1B0000]        <1> var: mov esi, buftxt
  2701 00002137 BB[6F150000]        <1> 	mov ebx, variables
  2702 0000213C 8A06                <1> lkeq:	mov al, [esi]
  2703 0000213E 3C3D                <1> 	cmp al, '='
  2704 00002140 741F                <1> 	je eqfnd	;is there an '=' sign?
  2705 00002142 3C00                <1> 	cmp al, 0
  2706 00002144 7403                <1> 	je echovars
  2707 00002146 46                  <1> 	inc esi
  2708 00002147 EBF3                <1> 	jmp lkeq
  2709 00002149 BE[6F150000]        <1> echovars: mov esi, variables
  2710 0000214E BB[6F1A0000]        <1> 	mov ebx, varend
  2711 00002153 B105                <1> 	mov cl, 5
  2712 00002155 B504                <1> 	mov ch, 4
  2713 00002157 E838F7FFFF          <1> 	call array
  2714 0000215C E9CEF4FFFF          <1> 	jmp nwcmd
  2715 00002161 46                  <1> eqfnd:	inc esi
  2716 00002162 8A06                <1> 	mov al, [esi]
  2717 00002164 3C00                <1> 	cmp al, 0
  2718 00002166 740F                <1> 	je readvar
  2719 00002168 BE[7A1B0000]        <1> 	mov esi, buftxt
  2720 0000216D BB[6F150000]        <1> 	mov ebx, variables
  2721 00002172 E91E000000          <1> 	jmp seek
  2722                              <1> readvar:
  2723 00002177 B00D                <1> 	mov al, 13
  2724 00002179 66BB0700            <1> 	mov bx, 7
  2725 0000217D C605[1E110000]00    <1> 	mov byte [commandedit], 0
  2726 00002184 E89EEFFFFF          <1> 	call int305
  2727 00002189 BE[19580000]        <1> 	mov esi, line
  2728 0000218E E83BEFFFFF          <1> 	call print
  2729 00002193 EB9D                <1> 	jmp var
  2730 00002195 668B03              <1> seek:	mov ax, [ebx]
  2731 00002198 B105                <1> 	mov cl, 5
  2732 0000219A B504                <1> 	mov ch, 4
  2733 0000219C 663D0000            <1> 	cmp ax, 0
  2734 000021A0 0F8459000000        <1> 	je near save
  2735 000021A6 6639C8              <1> 	cmp ax, cx
  2736 000021A9 7403                <1> 	je skfnd
  2737 000021AB 43                  <1> 	inc ebx
  2738 000021AC EBE7                <1> 	jmp seek
  2739 000021AE BE[7A1B0000]        <1> skfnd:	mov esi, buftxt
  2740 000021B3 46                  <1> 	inc esi
  2741 000021B4 81C302000000        <1> 	add ebx, 2
  2742 000021BA 89DF                <1> 	mov edi, ebx
  2743 000021BC B13D                <1> 	mov cl, '='
  2744 000021BE E805F6FFFF          <1> 	call cndtest
  2745 000021C3 3C01                <1> 	cmp al, 1	
  2746 000021C5 7417                <1> 	je varfnd
  2747 000021C7 89FB                <1> 	mov ebx, edi
  2748 000021C9 BE[7A1B0000]        <1> 	mov esi, buftxt
  2749 000021CE 668B03              <1> 	mov ax, [ebx]
  2750 000021D1 663D0000            <1> 	cmp ax, 0
  2751 000021D5 0F8424000000        <1> 	je near save
  2752 000021DB 43                  <1> 	inc ebx
  2753 000021DC EBB7                <1> 	jmp seek
  2754 000021DE 8A03                <1> varfnd:	mov al, [ebx]
  2755 000021E0 3C04                <1> 	cmp al, 4
  2756 000021E2 7404                <1> 	je save2
  2757 000021E4 4B                  <1> 	dec ebx
  2758 000021E5 4E                  <1> 	dec esi
  2759 000021E6 EBF6                <1> 	jmp varfnd
  2760 000021E8 4B                  <1> save2:	dec ebx
  2761 000021E9 4E                  <1> 	dec esi
  2762 000021EA 8A03                <1> 	mov al, [ebx]
  2763 000021EC 3C05                <1> 	cmp al, 5
  2764 000021EE 7402                <1> 	je remove
  2765 000021F0 EBEC                <1> 	jmp varfnd
  2766 000021F2 8A03                <1> remove: mov al, [ebx]
  2767 000021F4 3C00                <1> 	cmp al, 0
  2768 000021F6 749D                <1> 	je seek
  2769 000021F8 B000                <1> 	mov al, 0
  2770 000021FA 8803                <1> 	mov [ebx], al
  2771 000021FC 43                  <1> 	inc ebx
  2772 000021FD EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2773 000021FF BE[7A1B0000]        <1> save:	mov esi, buftxt
  2774 00002204 43                  <1> 	inc ebx
  2775 00002205 B005                <1> 	mov al, 5
  2776 00002207 B404                <1> 	mov ah, 4
  2777 00002209 668903              <1> 	mov [ebx], ax
  2778 0000220C 43                  <1> 	inc ebx
  2779 0000220D 43                  <1> svhere:	inc ebx
  2780 0000220E 46                  <1> 	inc esi
  2781 0000220F 8A06                <1> 	mov al, [esi]
  2782 00002211 3C00                <1> 	cmp al, 0
  2783 00002213 0F8442000000        <1> 	je near svdone
  2784 00002219 3C25                <1> 	cmp al, '%'
  2785 0000221B 7404                <1> 	je ans2
  2786 0000221D 8803                <1> 	mov [ebx], al	
  2787 0000221F EBEC                <1> 	jmp svhere
  2788 00002221 56                  <1> ans2:	push esi
  2789 00002222 BE[7A1C0000]        <1> 	mov esi, buf2
  2790 00002227 E823000000          <1> 	call ansfnd
  2791 0000222C E803000000          <1> 	call anscp
  2792 00002231 5E                  <1> 	pop esi
  2793 00002232 EBD9                <1> 	jmp svhere
  2794 00002234 8A06                <1> anscp:	mov al, [esi]
  2795 00002236 8803                <1> 	mov [ebx], al
  2796 00002238 81FE[8E1C0000]      <1> 	cmp esi, numbuf
  2797 0000223E 74CD                <1> 	je svhere
  2798 00002240 3C00                <1> 	cmp al, 0
  2799 00002242 74C9                <1> 	je svhere
  2800 00002244 43                  <1> 	inc ebx
  2801 00002245 46                  <1> 	inc esi
  2802 00002246 EBEC                <1> 	jmp anscp
  2803 00002248 5E                  <1> ansnf:	pop esi
  2804 00002249 8A06                <1> 	mov al, [esi]
  2805 0000224B 8803                <1> 	mov [ebx], al
  2806 0000224D EBBE                <1> 	jmp svhere
  2807 0000224F 46                  <1> ansfnd:	inc esi
  2808 00002250 8A06                <1> 	mov al, [esi]
  2809 00002252 3C00                <1> 	cmp al, 0
  2810 00002254 74F2                <1> 	je ansnf
  2811 00002256 3C30                <1> 	cmp al, '0'
  2812 00002258 74F5                <1> 	je ansfnd
  2813 0000225A C3                  <1> 	ret
  2814 0000225B B000                <1> svdone:	mov al, 0
  2815 0000225D 8803                <1> 	mov [ebx], al
  2816 0000225F E9CBF3FFFF          <1> 	jmp nwcmd
  2817                              <1> 	
  2818 00002264 05046C6F676F757400  <1> 	db 5,4,"logout",0
  2819                              <1> logout:
  2820 0000226D E9A1F2FFFF          <1> 	jmp os
  2821                              <1> 	
  2822 00002272 05047265626F6F7400  <1> 	db 5,4,"reboot",0
  2823                              <1> rebootcomp:
  2824 0000227B E9F1DFFFFF          <1> 	jmp coldboot
  2825                              <1> 
  2826 00002280 050473687574646F77- <1> 	db 5,4,"shutdown",0
  2827 00002289 6E00                <1>
  2828                              <1> shutdowncomp:
  2829 0000228B E9B7DFFFFF          <1> 	jmp shutdown
  2830                              <1> 	
  2831 00002290 05042E2F00          <1> 	db 5,4,"./",0
  2832                              <1> rundiskprog:
  2833 00002295 BF[7A1B0000]        <1> 	mov edi, buftxt
  2834 0000229A 81C702000000        <1> 	add edi, 2
  2835 000022A0 BE00004000          <1> 	mov esi, 0x400000
  2836 000022A5 E8572C0000          <1> 	call loadfile
  2837 000022AA 81FA94010000        <1> 	cmp edx, 404
  2838 000022B0 7414                <1> 	je noprogfound
  2839 000022B2 BB00004000          <1> 	mov ebx, 0x400000
  2840 000022B7 66813B4558          <1> 	cmp word [ebx], "EX"
  2841 000022BC 7531                <1> 	jne progbatchfound
  2842 000022BE 81C302000000        <1> 	add ebx, 2
  2843 000022C4 FFE3                <1> 	jmp ebx
  2844                              <1> noprogfound:
  2845 000022C6 BE[E0570000]        <1> 	mov esi, notfound1
  2846 000022CB E8FEEDFFFF          <1> 	call print
  2847 000022D0 BE[7A1B0000]        <1> 	mov esi, buftxt
  2848 000022D5 81C602000000        <1> 	add esi, 2
  2849 000022DB E8EEEDFFFF          <1> 	call print
  2850 000022E0 BE[EA570000]        <1> 	mov esi, notfound2
  2851 000022E5 E8E4EDFFFF          <1> 	call print
  2852 000022EA E940F3FFFF          <1> 	jmp nwcmd
  2853                              <1> progbatchfound:
  2854 000022EF BF00004000          <1> 		mov edi, 0x400000
  2855 000022F4 C605[69150000]01    <1> 		mov byte [BATCHISON], 1
  2856                              <1> 	batchrunloop:
  2857 000022FB E802F3FFFF          <1> 		call buftxtclear
  2858 00002300 BE[7A1B0000]        <1> 		mov esi, buftxt
  2859                              <1> 	batchrunloop2:
  2860 00002305 B10D                <1> 		mov cl, 13
  2861 00002307 B50A                <1> 		mov ch, 10
  2862 00002309 66390F              <1> 		cmp [edi], cx
  2863 0000230C 0F841E000000        <1> 		je near nxtbatchrunline
  2864 00002312 66C1C108            <1> 		rol cx, 8
  2865 00002316 66390F              <1> 		cmp [edi], cx
  2866 00002319 0F8411000000        <1> 		je near nxtbatchrunline
  2867 0000231F 803F00              <1> 		cmp byte [edi], 0
  2868 00002322 0F8408000000        <1> 		je near nxtbatchrunline
  2869 00002328 8A07                <1> 		mov al, [edi]
  2870 0000232A 8806                <1> 		mov [esi], al
  2871 0000232C 46                  <1> 		inc esi
  2872 0000232D 47                  <1> 		inc edi
  2873 0000232E EBD5                <1> 		jmp batchrunloop2
  2874                              <1> 	nxtbatchrunline:
  2875 00002330 81C702000000        <1> 		add edi, 2
  2876 00002336 893D[95230000]      <1> 		mov [batchedi], edi
  2877 0000233C C60600              <1> 		mov byte [esi], 0
  2878 0000233F BE[7A1B0000]        <1> 		mov esi, buftxt
  2879 00002344 803E00              <1> 		cmp byte [esi], 0
  2880 00002347 0F843C000000        <1> 		je near nobatchfoundrun
  2881 0000234D BB00000000          <1> 		mov ebx, 0
  2882 00002352 8A1D[00150000]      <1> 		mov bl, [IFON]
  2883 00002358 80FB01              <1> 		cmp bl, 1
  2884 0000235B 0F8338000000        <1> 		jae near iftestbatch
  2885                              <1> 	doneiftest:
  2886 00002361 803D[5C240000]00    <1> 		cmp byte [runnextline], 0
  2887 00002368 0F8405000000        <1> 		je near noruniftest
  2888 0000236E E8A2F3FFFF          <1> 		call progtest
  2889                              <1> 	noruniftest:
  2890 00002373 C605[5C240000]01    <1> 		mov byte [runnextline], 1
  2891 0000237A 8B3D[95230000]      <1> 		mov edi, [batchedi]
  2892 00002380 803F00              <1> 		cmp byte [edi], 0
  2893 00002383 0F8572FFFFFF        <1> 		jne near batchrunloop
  2894                              <1> 	nobatchfoundrun:
  2895 00002389 C605[69150000]00    <1> 		mov byte [BATCHISON], 0
  2896 00002390 E99AF2FFFF          <1> 		jmp nwcmd
  2897                              <1> 	
  2898 00002395 00000000            <1> batchedi dd 0	
  2899                              <1> 	
  2900                              <1> 	iftestbatch:
  2901 00002399 BE[01150000]        <1> 		mov esi, IFTRUE
  2902 0000239E 01DE                <1> 		add esi, ebx
  2903 000023A0 803E00              <1> 		cmp byte [esi], 0
  2904 000023A3 0F85B8FFFFFF        <1> 		jne near doneiftest
  2905 000023A9 881D[5D240000]      <1> 		mov [iffalsebuf], bl
  2906 000023AF 803D[6A150000]01    <1> 		cmp byte [LOOPON], 1
  2907 000023B6 750B                <1> 		jne fifindbatch
  2908 000023B8 8B3D[6B150000]      <1> 		mov edi, [LOOPPOS]
  2909 000023BE E938FFFFFF          <1> 		jmp batchrunloop
  2910                              <1> 	fifindbatch:
  2911 000023C3 66B96966            <1> 		mov cx, "if"
  2912 000023C7 66B86669            <1> 		mov ax, "fi"
  2913 000023CB 663907              <1> 		cmp [edi], ax
  2914 000023CE 0F841A000000        <1> 		je near fifoundbatch
  2915 000023D4 66390F              <1> 		cmp [edi], cx
  2916 000023D7 0F8462000000        <1> 		je near iffoundbatch
  2917 000023DD 803F00              <1> 		cmp byte [edi], 0
  2918 000023E0 0F8408000000        <1> 		je near fifoundbatch
  2919 000023E6 81C702000000        <1> 		add edi, 2
  2920 000023EC EBD5                <1> 		jmp fifindbatch
  2921                              <1> 	fifoundbatch:
  2922 000023EE 81C702000000        <1> 		add edi, 2
  2923 000023F4 B00D                <1> 		mov al, 13
  2924 000023F6 B40A                <1> 		mov ah, 10
  2925 000023F8 663907              <1> 		cmp [edi], ax
  2926 000023FB 7414                <1> 		je goodfibatch
  2927 000023FD 66C1C008            <1> 		rol ax, 8
  2928 00002401 663907              <1> 		cmp [edi], ax
  2929 00002404 740B                <1> 		je goodfibatch
  2930 00002406 803F00              <1> 		cmp byte [edi], 0
  2931 00002409 0F847AFFFFFF        <1> 		je near nobatchfoundrun
  2932 0000240F EBB2                <1> 		jmp fifindbatch
  2933                              <1> 	goodfibatch:
  2934 00002411 B001                <1> 		mov al, 1
  2935 00002413 2805[00150000]      <1> 		sub [IFON], al 
  2936 00002419 A0[00150000]        <1> 		mov al, [IFON]
  2937 0000241E 8A1D[5D240000]      <1> 		mov bl, [iffalsebuf]
  2938 00002424 38D8                <1> 		cmp al, bl
  2939 00002426 779B                <1> 		ja fifindbatch
  2940 00002428 BE[7A1B0000]        <1> 		mov esi, buftxt
  2941 0000242D 81EF02000000        <1> 		sub edi, 2
  2942 00002433 C605[5C240000]00    <1> 		mov byte [runnextline], 0
  2943 0000243A E9BCFEFFFF          <1> 		jmp batchrunloop
  2944                              <1> 	iffoundbatch:
  2945 0000243F B020                <1> 		mov al, ' '
  2946 00002441 81C702000000        <1> 		add edi, 2
  2947 00002447 3807                <1> 		cmp [edi], al
  2948 00002449 0F8574FFFFFF        <1> 		jne near fifindbatch
  2949 0000244F B001                <1> 		mov al, 1
  2950 00002451 0005[00150000]      <1> 		add [IFON], al
  2951 00002457 E967FFFFFF          <1> 		jmp fifindbatch
  2952                              <1> 		
  2953                              <1> 		
  2954 0000245C 01                  <1> runnextline db 1
  2955 0000245D 00                  <1> iffalsebuf db 0
  2956                              <1> 
  2957 0000245E E9CCF1FFFF          <1> notbatch: jmp nwcmd
  2958                              <1> 
  2959 00002463 05047768696C6500    <1> 	db 5,4,"while",0
  2960 0000246B B000                <1> whilecmd:  mov al, 0
  2961 0000246D 3805[69150000]      <1> 	cmp [BATCHISON], al
  2962 00002473 0F84E5FFFFFF        <1> 	je near notbatch
  2963 00002479 8B35[65150000]      <1> 	MOV esi, [BATCHPOS]
  2964 0000247F 4E                  <1> whilefnd: dec esi
  2965 00002480 8A06                <1> 	mov al, [esi]
  2966 00002482 3C0A                <1> 	cmp al, 10
  2967 00002484 0F8412000000        <1> 	je near whilefnd2
  2968 0000248A 3C0D                <1> 	cmp al, 13
  2969 0000248C 0F840A000000        <1> 	je near whilefnd2
  2970 00002492 3C00                <1> 	cmp al, 0
  2971 00002494 0F8402000000        <1> 	je near whilefnd2
  2972 0000249A EBE3                <1> 	jmp whilefnd
  2973                              <1> whilefnd2:
  2974 0000249C 8935[6B150000]      <1> 	mov [LOOPPOS], esi
  2975 000024A2 C605[6A150000]01    <1> 	mov BYTE [LOOPON], 1
  2976 000024A9 0005[00150000]      <1> 	add [IFON], al
  2977 000024AF BE[7A1B0000]        <1> 	mov esi, buftxt
  2978 000024B4 BB[7A1B0000]        <1> 	mov ebx, buftxt
  2979 000024B9 81C306000000        <1> 	add ebx, 6
  2980 000024BF E923000000          <1> 	jmp chkeqsn
  2981                              <1> 
  2982                              <1> 
  2983 000024C4 0504696600          <1> 	db 5,4,"if",0
  2984 000024C9 B000                <1> ifcmd:	mov al, 0
  2985 000024CB 3805[69150000]      <1> 	cmp [BATCHISON], al
  2986 000024D1 0F8487FFFFFF        <1> 	je near notbatch
  2987 000024D7 BE[7A1B0000]        <1> 	mov esi, buftxt
  2988 000024DC BB[7A1B0000]        <1> 	mov ebx, buftxt
  2989 000024E1 81C303000000        <1> 	add ebx, 3
  2990 000024E7 8A06                <1> chkeqsn: mov al, [esi]
  2991 000024E9 3C00                <1> 	cmp al, 0
  2992 000024EB 0F846DFFFFFF        <1> 	je near notbatch
  2993 000024F1 3C3D                <1> 	cmp al, '='
  2994 000024F3 0F8403000000        <1> 	je near chkeqdn
  2995 000024F9 46                  <1> 	inc esi
  2996 000024FA EBEB                <1> 	jmp chkeqsn
  2997 000024FC B000                <1> chkeqdn: mov al, 0 
  2998 000024FE 8806                <1> 	mov [esi], al
  2999 00002500 46                  <1> 	inc esi
  3000 00002501 8A06                <1> 	mov al, [esi]
  3001 00002503 3C24                <1> 	cmp al, '$'
  3002 00002505 0F8462000000        <1> 	je near ifvar1
  3003 0000250B 8A03                <1> ifvar2: mov al, [ebx]
  3004 0000250D 3C24                <1> 	cmp al, '$'
  3005 0000250F 0F847B000000        <1> 	je near ifvar3
  3006 00002515 E874F2FFFF          <1> ifvar4:	call tester
  3007 0000251A 3C01                <1> 	cmp al, 1
  3008 0000251C 0F8405000000        <1> 	je near trueif
  3009 00002522 E923000000          <1> 	jmp falseif
  3010 00002527 B800000000          <1> trueif:	mov eax, 0
  3011 0000252C A0[00150000]        <1> 	mov al, [IFON]
  3012 00002531 FEC0                <1> 	inc al
  3013 00002533 A2[00150000]        <1> 	mov [IFON], al
  3014 00002538 B400                <1> 	mov ah, 0
  3015 0000253A BE[01150000]        <1> 	mov esi, IFTRUE
  3016 0000253F 01C6                <1> 	add esi, eax
  3017 00002541 B401                <1> 	mov ah, 1
  3018 00002543 8826                <1> 	mov [esi], ah
  3019 00002545 E9E5F0FFFF          <1> 	jmp nwcmd
  3020 0000254A B800000000          <1> falseif: mov eax, 0
  3021 0000254F A0[00150000]        <1> 	mov al, [IFON]
  3022 00002554 FEC0                <1> 	inc al
  3023 00002556 A2[00150000]        <1> 	mov [IFON], al
  3024 0000255B B400                <1> 	mov ah, 0
  3025 0000255D BE[01150000]        <1> 	mov esi, IFTRUE
  3026 00002562 01C6                <1> 	add esi, eax
  3027 00002564 B400                <1> 	mov ah, 0
  3028 00002566 8826                <1> 	mov [esi], ah
  3029 00002568 E9C2F0FFFF          <1> 	jmp nwcmd
  3030 0000256D 89F7                <1> ifvar1: mov edi, esi
  3031 0000256F 81EF[7A1B0000]      <1> 	sub edi, buftxt
  3032 00002575 47                  <1> 	inc edi
  3033 00002576 BB[6F150000]        <1> 	mov ebx, variables
  3034 0000257B E88AF8FFFF          <1> 	call nxtvrech
  3035 00002580 BB[7A1B0000]        <1> 	mov ebx, buftxt
  3036 00002585 81C303000000        <1> 	add ebx, 3
  3037 0000258B E97BFFFFFF          <1> 	jmp ifvar2
  3038 00002590 8935[B0250000]      <1> ifvar3: mov [esiif], esi
  3039 00002596 BF04000000          <1> 	mov edi, 4
  3040 0000259B BB[6F150000]        <1> 	mov ebx, variables
  3041 000025A0 E865F8FFFF          <1> 	call nxtvrech
  3042 000025A5 8B35[B0250000]      <1> 	mov esi, [esiif]
  3043 000025AB E965FFFFFF          <1> 	jmp ifvar4
  3044                              <1> 
  3045 000025B0 00000000            <1> esiif dd 0
  3046                              <1> 	
  3047 000025B4 0504656C736500      <1> 	db 5,4,"else",0
  3048 000025BB B800000000          <1> elsecmd:	mov eax, 0
  3049 000025C0 A0[00150000]        <1> 	mov al, [IFON]
  3050 000025C5 BE[01150000]        <1> 	mov esi, IFTRUE
  3051 000025CA 01C6                <1> 	add esi, eax
  3052 000025CC 8A06                <1> 	mov al, [esi]
  3053 000025CE 3C00                <1> 	cmp al, 0		
  3054 000025D0 7409                <1> 	je else1
  3055 000025D2 3C01                <1> 	cmp al, 1
  3056 000025D4 740E                <1> 	je else2
  3057 000025D6 E954F0FFFF          <1> 	jmp nwcmd
  3058 000025DB B001                <1> else1:  mov al, 1
  3059 000025DD 8806                <1> 	mov [esi], al
  3060 000025DF E94BF0FFFF          <1> 	jmp nwcmd
  3061 000025E4 B000                <1> else2:	mov al, 0
  3062 000025E6 8806                <1> 	mov [esi], al
  3063 000025E8 E942F0FFFF          <1> 	jmp nwcmd
  3064                              <1> 
  3065 000025ED 05046C6F6F7000      <1> 	db 5,4,"loop",0
  3066 000025F4 3805[6A150000]      <1> 	cmp [LOOPON], al
  3067 000025FA 0F8405000000        <1> 	je near filoop
  3068 00002600 E92AF0FFFF          <1> 	jmp nwcmd
  3069 00002605 8B35[6B150000]      <1> filoop: mov esi, [LOOPPOS]
  3070 0000260B 8935[65150000]      <1> 	mov [BATCHPOS], esi
  3071 00002611 E919F0FFFF          <1> 	jmp nwcmd
  3072                              <1> 	
  3073                              <1> 
  3074 00002616 0504666900          <1> 	db 5,4,"fi",0
  3075 0000261B B000                <1> 	mov al, 0
  3076 0000261D 3805[69150000]      <1> 	cmp [BATCHISON], al
  3077 00002623 0F8435FEFFFF        <1> 	je near notbatch
  3078 00002629 B001                <1> fi:	mov al, 1
  3079 0000262B 2805[00150000]      <1> 	sub [IFON],al
  3080 00002631 E9F9EFFFFF          <1> 	jmp nwcmd
  3081                              <1> 
  3082 00002636 050473746F7000      <1> 	db 5,4,"stop",0
  3083 0000263D B000                <1> stop:	mov al, 0
  3084 0000263F A2[69150000]        <1> 	mov [BATCHISON], al
  3085 00002644 A2[00150000]        <1> 	mov [IFON], al
  3086 00002649 A2[01150000]        <1> 	mov [IFTRUE], al
  3087 0000264E A2[6A150000]        <1> 	mov [LOOPON], al
  3088 00002653 E9D7EFFFFF          <1> 	jmp nwcmd
  3089                                      %include 'source/programs.asm'
  3090                              <1> ;db 5,4,"internet",0
  3091                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  3092                              <1> 							;;^^used to^^, now tests int 30h functions		
  3093 00002658 B403                <1> 		mov ah, 3
  3094 0000265A CD30                <1> 		int 30h
  3095 0000265C B401                <1> 		mov ah, 1
  3096                              <1> 		;mov esi, datmsg
  3097 0000265E 66BB0700            <1> 		mov bx, 7
  3098 00002662 B000                <1> 		mov al, 0
  3099 00002664 CD30                <1> 		int 30h
  3100                              <1> 	    ;jmp packettest
  3101 00002666 E9C4EFFFFF          <1> 		jmp nwcmd
  3102                              <1> ;datmsg: db "Internet has not been implemented yet.",10,13,0
  3103                              <1> 	
  3104 0000266B 050474687265616473- <1> db 5,4,"threads",0
  3105 00002674 00                  <1>
  3106 00002675 90                  <1> 	nop
  3107 00002676 90                  <1> 	nop
  3108 00002677 E9762A0000          <1> 	jmp threadstarttest
  3109 0000267C E9AEEFFFFF          <1> 	jmp nwcmd
  3110                              <1> 	
  3111 00002681 050472656700        <1> db 5,4,"reg",0
  3112 00002687 CD03                <1> 	int 3
  3113 00002689 E9A1EFFFFF          <1> 	jmp nwcmd
  3114                              <1> 	
  3115 0000268E 0504636861726D6170- <1> db 5,4,"charmap",0
  3116 00002697 00                  <1>
  3117 00002698 B000                <1> 	mov al, 0
  3118 0000269A 66BB0700            <1> 	mov bx, 7
  3119                              <1> charmapcopy:
  3120 0000269E FEC0                <1> 	inc al
  3121 000026A0 3C08                <1> 	cmp al, 8
  3122 000026A2 7426                <1> 	je charmapnocopy
  3123 000026A4 3C09                <1> 	cmp al, 9
  3124 000026A6 7422                <1> 	je charmapnocopy
  3125 000026A8 3C0A                <1> 	cmp al, 10
  3126 000026AA 741E                <1> 	je charmapnocopy
  3127 000026AC 3C0D                <1> 	cmp al, 13
  3128 000026AE 741A                <1> 	je charmapnocopy
  3129 000026B0 3C00                <1> 	cmp al, 0
  3130 000026B2 7407                <1> 	je nomorecharmap
  3131 000026B4 E80BE8FFFF          <1> 	call int301prnt
  3132 000026B9 EBE3                <1> 	jmp charmapcopy
  3133                              <1> nomorecharmap:
  3134 000026BB BE[19580000]        <1> 	mov esi, line
  3135 000026C0 E809EAFFFF          <1> 	call print
  3136 000026C5 E965EFFFFF          <1> 	jmp nwcmd
  3137                              <1> charmapnocopy:
  3138 000026CA 6650                <1> 	push ax
  3139 000026CC B020                <1> 	mov al, " "
  3140 000026CE E8F1E7FFFF          <1> 	call int301prnt
  3141 000026D3 6658                <1> 	pop ax
  3142 000026D5 EBC7                <1> 	jmp charmapcopy
  3143                              <1> 	
  3144 000026D7 05046B6579636F6465- <1> db 5,4,"keycode",0
  3145 000026E0 00                  <1>
  3146                              <1> keycode:
  3147 000026E1 E8BD060000          <1> 	call guistartin
  3148 000026E6 B800000000          <1> 	mov eax, 0
  3149 000026EB B900000000          <1> 	mov ecx, 0
  3150 000026F0 8A0D[7A2D0000]      <1> 	mov cl, [specialkey]
  3151 000026F6 80F900              <1> 	cmp cl, 0
  3152 000026F9 0F8405000000        <1> 	je near nospecialkeycode
  3153 000026FF E884F3FFFF          <1> 	call showhexsmall
  3154                              <1> nospecialkeycode:
  3155 00002704 66A1[85100000]      <1> 	mov ax, [lastkey]
  3156 0000270A 80FC01              <1> 	cmp ah, 1
  3157 0000270D 0F8409000000        <1> 	je near killkeycode
  3158 00002713 88E1                <1> 	mov cl, ah
  3159 00002715 E86EF3FFFF          <1> 	call showhexsmall
  3160 0000271A EBC5                <1> 	jmp keycode
  3161                              <1> killkeycode:
  3162 0000271C BE[19580000]        <1> 	mov esi, line
  3163 00002721 E8A8E9FFFF          <1> 	call print
  3164 00002726 E904EFFFFF          <1> 	jmp nwcmd
  3165                              <1> 
  3166 0000272B 050470636900        <1> db 5,4,"pci",0
  3167                              <1> 	pcishow:
  3168 00002731 E811260000          <1> 	call pcidump
  3169 00002736 E9F4EEFFFF          <1> 	jmp nwcmd
  3170                              <1> 	
  3171 0000273B 050461727000        <1> db 5,4,"arp",0
  3172 00002741 E8FC240000          <1> 	call arptest
  3173 00002746 E9E4EEFFFF          <1> 	jmp nwcmd
  3174                              <1> 
  3175 0000274B 0504626174636800    <1> db 5,4,"batch",0
  3176                              <1> 	batchst: 
  3177 00002753 BF[7A1B0000]        <1> 		mov edi, buftxt
  3178 00002758 81C706000000        <1> 		add edi, 6
  3179 0000275E 803F00              <1> 		cmp byte [edi], 0
  3180 00002761 0F8473000000        <1> 		je near nonamefound
  3181 00002767 BE00004000          <1> 		mov esi, 0x400000
  3182 0000276C E890270000          <1> 		call loadfile
  3183 00002771 89D0                <1> 		mov eax, edx
  3184 00002773 3D94010000          <1> 		cmp eax, 404
  3185 00002778 746F                <1> 		je goodbatchname
  3186 0000277A BE[89270000]        <1> 		mov esi, badbatchname
  3187 0000277F E84AE9FFFF          <1> 		call print
  3188 00002784 E9A6EEFFFF          <1> 		jmp nwcmd
  3189 00002789 546869732066696C65- <1> 		badbatchname db "This file already exists!",10,13,0
  3190 00002792 20616C726561647920- <1>
  3191 0000279B 657869737473210A0D- <1>
  3192 000027A4 00                  <1>
  3193 000027A5 596F75206861766520- <1> 		namenotfoundbatch db "You have to type a name after the command.",10,13,0
  3194 000027AE 746F20747970652061- <1>
  3195 000027B7 206E616D6520616674- <1>
  3196 000027C0 65722074686520636F- <1>
  3197 000027C9 6D6D616E642E0A0D00  <1>
  3198 000027D2 00000000            <1> 		esicache3 dd 0
  3199 000027D6 00000000            <1> 		esicache2 dd 0
  3200                              <1> 	nonamefound:
  3201 000027DA BE[A5270000]        <1> 		mov esi, namenotfoundbatch
  3202 000027DF E8EAE8FFFF          <1> 		call print
  3203 000027E4 E946EEFFFF          <1> 		jmp nwcmd
  3204                              <1> 	goodbatchname:
  3205 000027E9 BE00004000          <1> 		mov esi, 0x400000
  3206                              <1> 	batchcreate:
  3207 000027EE 8935[D2270000]      <1> 		mov [esicache3], esi
  3208 000027F4 B00D                <1> 		mov al, 13
  3209 000027F6 B307                <1> 		mov bl, 7
  3210 000027F8 B404                <1> 		mov ah, 4
  3211 000027FA CD30                <1> 		int 30h
  3212 000027FC 8935[D6270000]      <1> 		mov [esicache2], esi
  3213 00002802 8A0E                <1> 		mov cl, [esi]
  3214 00002804 8B35[D2270000]      <1> 		mov esi, [esicache3]
  3215 0000280A BB[61280000]        <1> 		mov ebx, exitword
  3216 0000280F E8B4EFFFFF          <1> 		call cndtest
  3217 00002814 3C01                <1> 		cmp al, 1
  3218 00002816 7423                <1> 		je endbatchcreate
  3219 00002818 3C02                <1> 		cmp al, 2
  3220 0000281A 741F                <1> 		je endbatchcreate
  3221 0000281C BE[19580000]        <1> 		mov esi, line
  3222 00002821 E8A8E8FFFF          <1> 		call print
  3223 00002826 8B35[D6270000]      <1> 		mov esi, [esicache2]
  3224 0000282C B00D                <1> 		mov al, 13
  3225 0000282E B40A                <1> 		mov ah, 10
  3226 00002830 668906              <1> 		mov [esi], ax
  3227 00002833 81C602000000        <1> 		add esi, 2
  3228 00002839 EBB3                <1> 		jmp batchcreate
  3229                              <1> 	endbatchcreate:
  3230 0000283B 8B35[D2270000]      <1> 		mov esi, [esicache3]
  3231 00002841 B800000000          <1> 		mov eax, 0
  3232 00002846 8806                <1> 		mov [esi], al
  3233 00002848 BE[19580000]        <1> 		mov esi, line
  3234 0000284D E87CE8FFFF          <1> 		call print
  3235 00002852 BE00004000          <1> 		mov esi, 0x400000
  3236 00002857 E872E8FFFF          <1> 		call print
  3237 0000285C E9CEEDFFFF          <1> 		jmp nwcmd
  3238                              <1> 	
  3239 00002861 5C7800              <1> 	exitword db "\x",0
  3240 00002864 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  3241 0000286D 6F20657869742E0A0D- <1>
  3242 00002876 00                  <1>
  3243                              <1> 		
  3244 00002877 050473686F7700      <1> db 5,4,"show",0
  3245 0000287E BF[7A1B0000]        <1> 		mov edi, buftxt
  3246 00002883 81C705000000        <1> 		add edi, 5
  3247 00002889 BE00004000          <1> 		mov esi, 0x400000
  3248 0000288E E86E260000          <1> 		call loadfile
  3249 00002893 BE00004000          <1> 		mov esi, 0x400000
  3250 00002898 66813E424D          <1> 		cmp word [esi], "BM"
  3251 0000289D 7414                <1> 		je bmpfound
  3252 0000289F E82AE8FFFF          <1> 		call print
  3253 000028A4 BE[19580000]        <1> 		mov esi, line
  3254 000028A9 E820E8FFFF          <1> 		call print
  3255 000028AE E97CEDFFFF          <1> 		jmp nwcmd
  3256                              <1> bmpfound:
  3257 000028B3 803D[E8340000]00    <1> 		cmp byte [guion], 0
  3258 000028BA 0F8452000000        <1> 		je near noguibmp
  3259 000028C0 BE00004000          <1> 		mov esi, 0x400000
  3260 000028C5 B900000000          <1> 		mov ecx, 0
  3261 000028CA BA00000000          <1> 		mov edx, 0
  3262 000028CF B800000000          <1> 		mov eax, 0
  3263 000028D4 BB00000000          <1> 		mov ebx, 0
  3264 000028D9 E8C21C0000          <1> 		call showbmp
  3265 000028DE B000                <1> 		mov al, 0
  3266 000028E0 B405                <1> 		mov ah, 5
  3267 000028E2 CD30                <1> 		int 30h
  3268 000028E4 E8660A0000          <1> 		call guiclear
  3269 000028E9 E8FB0B0000          <1> 		call clearmousecursor
  3270 000028EE E88D120000          <1> 		call reloadallgraphics
  3271 000028F3 BE[7A1B0000]        <1> 		mov esi, buftxt
  3272 000028F8 81C605000000        <1> 		add esi, 5
  3273 000028FE E8CBE7FFFF          <1> 		call print
  3274 00002903 BE[95290000]        <1> 		mov esi, loadedbmpmsg
  3275 00002908 E8C1E7FFFF          <1> 		call print
  3276 0000290D E91DEDFFFF          <1> 		jmp nwcmd
  3277                              <1> noguibmp:
  3278 00002912 BE[21290000]        <1> 		mov esi, warnguibmp
  3279 00002917 E8B2E7FFFF          <1> 		call print
  3280 0000291C E90EEDFFFF          <1> 		jmp nwcmd
  3281 00002921 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  3282 0000292A 6E6F7420626520646F- <1>
  3283 00002933 6E6520776974686F75- <1>
  3284 0000293C 742074686520677569- <1>
  3285 00002945 2E0A0D00            <1>
  3286                              <1> 
  3287                              <1> 		
  3288                              <1> filenotfound:
  3289 00002949 BE[72290000]        <1> 		mov esi, filenf
  3290 0000294E E87BE7FFFF          <1> 		call print
  3291 00002953 BE[7A1B0000]        <1> 		mov esi, buftxt
  3292 00002958 81C608000000        <1> 		add esi, 8
  3293 0000295E E86BE7FFFF          <1> 		call print
  3294 00002963 BE[7D290000]        <1> 		mov esi, filenf2
  3295 00002968 E861E7FFFF          <1> 		call print
  3296 0000296D E9BDECFFFF          <1> 		jmp nwcmd
  3297 00002972 5468652066696C6520- <1> filenf db "The file ",34,0
  3298 0000297B 2200                <1>
  3299 0000297D 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  3300 00002986 6F7420626520666F75- <1>
  3301 0000298F 6E642E0D0A00        <1>
  3302                              <1> 		
  3303 00002995 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  3304 0000299E 0A00                <1>
  3305                              <1> 
  3306 000029A0 050464756D7000      <1> 	db 5,4,"dump",0
  3307 000029A7 BE[7A1B0000]        <1> 	mov esi, buftxt
  3308 000029AC 81C605000000        <1> 	add esi, 5
  3309 000029B2 B900000000          <1> 	mov ecx, 0
  3310 000029B7 E81FF2FFFF          <1> 	call cnvrttxt
  3311 000029BC 89CF                <1> 	mov edi, ecx
  3312 000029BE 89FE                <1> 	mov esi, edi
  3313 000029C0 81C680030000        <1> 	add esi, 896
  3314 000029C6 C605[871A0000]00    <1> 	mov byte [firsthexshown],0
  3315                              <1> dumphexloop:
  3316 000029CD 8B0F                <1> 	mov ecx, [edi]
  3317 000029CF E8C8F0FFFF          <1> 	call showhex
  3318 000029D4 81C704000000        <1> 	add edi, 4
  3319 000029DA 39F7                <1> 	cmp edi, esi
  3320 000029DC 72EF                <1> 	jb dumphexloop
  3321 000029DE E94CECFFFF          <1> 	jmp nwcmd
  3322                              <1> 
  3323 000029E3 050474696D6500      <1> db 5,4,"time",0
  3324 000029EA E823000000          <1> 	call time
  3325 000029EF BE[FC2B0000]        <1> 	mov esi, timeshow
  3326 000029F4 E8D5E6FFFF          <1> 	call print
  3327 000029F9 BE[19580000]        <1> 	mov esi, line
  3328 000029FE E8CBE6FFFF          <1> 	call print
  3329 00002A03 BE[062C0000]        <1> 	mov esi, dateshow
  3330 00002A08 E8C1E6FFFF          <1> 	call print
  3331 00002A0D E91DECFFFF          <1> 	jmp nwcmd
  3332                              <1> 	time:
  3333 00002A12 E86D010000          <1> 	call tstackput1
  3334 00002A17 B00A                <1> 	mov al,10			;Get RTC register A
  3335 00002A19 E897010000          <1> 	call tget1
  3336 00002A1E A880                <1> 	test al,0x80			;Is update in progress?
  3337 00002A20 75F0                <1> 	jne time				; yes, wait
  3338                              <1> 
  3339 00002A22 B000                <1> 	mov al,0			;Get seconds (00 to 59)
  3340 00002A24 E88C010000          <1> 	call tget1
  3341 00002A29 A2[F32B0000]        <1> 	mov [RTCtimeSecond],al
  3342                              <1> 
  3343 00002A2E B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  3344 00002A30 E880010000          <1> 	call tget1
  3345 00002A35 A2[F42B0000]        <1> 	mov [RTCtimeMinute],al
  3346                              <1> 
  3347 00002A3A B004                <1> 	mov al,0x04			;Get hours (see notes)
  3348 00002A3C E874010000          <1> 	call tget1
  3349 00002A41 A2[F52B0000]        <1> 	mov [RTCtimeHour],al
  3350                              <1> 
  3351 00002A46 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  3352 00002A48 E868010000          <1> 	call tget1
  3353                              <1> ;	mov ah, 0			;;fix day
  3354                              <1> ;	mov ah, al
  3355                              <1> ;	shr ah, 4
  3356                              <1> ;	shl al, 4
  3357                              <1> ;	shr al, 4
  3358                              <1> ;	cmp al, 0
  3359                              <1> ;	jne nodecahday
  3360                              <1> ;	mov al, 10
  3361                              <1> ;	dec ah
  3362                              <1> ;nodecahday:
  3363                              <1> ;	dec al
  3364                              <1> ;	shl ah, 4
  3365                              <1> ;	or al, ah
  3366 00002A4D A2[F62B0000]        <1> 	mov [RTCtimeDay],al
  3367                              <1> 
  3368 00002A52 B008                <1> 	mov al,0x08			;Get month (01 to 12)
  3369 00002A54 E85C010000          <1> 	call tget1
  3370 00002A59 A2[F72B0000]        <1> 	mov [RTCtimeMonth],al
  3371                              <1> 
  3372 00002A5E B009                <1> 	mov al,0x09			;Get year (00 to 99)
  3373 00002A60 E850010000          <1> 	call tget1
  3374 00002A65 A2[F82B0000]        <1> 	mov [RTCtimeYear],al
  3375                              <1> 	
  3376 00002A6A BE[FC2B0000]        <1> 	mov esi, timeshow
  3377 00002A6F 8A2D[F52B0000]      <1> 	mov ch, [RTCtimeHour]
  3378 00002A75 E846010000          <1> 	call tput1
  3379 00002A7A 8A2D[F42B0000]      <1> 	mov ch, [RTCtimeMinute]
  3380 00002A80 E83B010000          <1> 	call tput1
  3381 00002A85 8A2D[F32B0000]      <1> 	mov ch, [RTCtimeSecond]
  3382 00002A8B E830010000          <1> 	call tput1
  3383 00002A90 BE[062C0000]        <1> 	mov esi, dateshow
  3384 00002A95 8A2D[F72B0000]      <1> 	mov ch, [RTCtimeMonth]
  3385 00002A9B E820010000          <1> 	call tput1
  3386 00002AA0 8A2D[F62B0000]      <1> 	mov ch, [RTCtimeDay]
  3387 00002AA6 E815010000          <1> 	call tput1
  3388 00002AAB B520                <1> 	mov ch, 0x20
  3389 00002AAD E80E010000          <1> 	call tput1
  3390 00002AB2 4E                  <1> 	dec esi
  3391 00002AB3 8A2D[F82B0000]      <1> 	mov ch, [RTCtimeYear]
  3392 00002AB9 E802010000          <1> 	call tput1
  3393 00002ABE E8DB000000          <1> 	call tstackget1
  3394 00002AC3 BE[FC2B0000]        <1> 	mov esi, timeshow
  3395 00002AC8 66BB0700            <1> 	mov bx, 7
  3396 00002ACC B401                <1> 	mov ah, 1
  3397 00002ACE B000                <1> 	mov al, 0
  3398 00002AD0 CD30                <1> 	int 30h
  3399                              <1> ;;get day of week
  3400                              <1> ;;add these:
  3401                              <1> ;;century value
  3402                              <1> ;;last 2 digits of year
  3403                              <1> ;;last 2 digits of year right shifted twice
  3404                              <1> ;;month table value
  3405                              <1> ;;day of the month
  3406                              <1> ;;divide these by 7
  3407                              <1> ;;the remainder is the day
  3408 00002AD2 B800000000          <1> 	mov eax, 0
  3409                              <1> ;;first convert the values from BCD to hex
  3410 00002AD7 A0[F62B0000]        <1> 	mov al, [RTCtimeDay]
  3411 00002ADC E88A000000          <1> 	call converttohex
  3412 00002AE1 8825[F92B0000]      <1> 	mov [dayhex], ah
  3413 00002AE7 A0[F72B0000]        <1> 	mov al, [RTCtimeMonth]
  3414 00002AEC E87A000000          <1> 	call converttohex
  3415 00002AF1 8825[FA2B0000]      <1> 	mov [monthhex], ah
  3416 00002AF7 A0[F82B0000]        <1> 	mov al, [RTCtimeYear]
  3417 00002AFC E86A000000          <1> 	call converttohex
  3418 00002B01 8825[FB2B0000]      <1> 	mov [yearhex], ah
  3419 00002B07 B800000000          <1> 	mov eax, 0
  3420 00002B0C A0[FB2B0000]        <1> 	mov al, [yearhex]
  3421 00002B11 C0E802              <1> 	shr al, 2
  3422 00002B14 0205[FB2B0000]      <1> 	add al, [yearhex]
  3423 00002B1A 0506000000          <1> 	add eax, 6
  3424 00002B1F BB00000000          <1> 	mov ebx, 0
  3425 00002B24 8A1D[FA2B0000]      <1> 	mov bl, [monthhex]
  3426 00002B2A FECB                <1> 	dec bl
  3427 00002B2C 81C3[1C2C0000]      <1> 	add ebx, month
  3428 00002B32 B900000000          <1> 	mov ecx, 0
  3429 00002B37 8A0B                <1> 	mov cl, [ebx]
  3430 00002B39 01C8                <1> 	add eax, ecx
  3431 00002B3B 8A0D[F92B0000]      <1> 	mov cl, [dayhex]
  3432 00002B41 01C8                <1> 	add eax, ecx
  3433 00002B43 66BB0700            <1> 	mov bx, 7
  3434 00002B47 BA00000000          <1> 	mov edx, 0
  3435 00002B4C 66F7F3              <1> 	div bx
  3436 00002B4F C1E202              <1> 	shl edx, 2
  3437 00002B52 81C2[282C0000]      <1> 	add edx, day
  3438 00002B58 8B32                <1> 	mov esi, [edx]
  3439 00002B5A 66BB0700            <1> 	mov bx, 7
  3440 00002B5E B401                <1> 	mov ah, 1
  3441 00002B60 B000                <1> 	mov al, 0
  3442 00002B62 CD30                <1> 	int 30h
  3443 00002B64 66B80000            <1> 	mov ax, 0
  3444 00002B68 CD30                <1> 	int 30h
  3445 00002B6A F4                  <1> 	hlt
  3446                              <1> 	
  3447                              <1> converttohex:
  3448 00002B6B 88C4                <1> 	mov ah, al
  3449 00002B6D C0E804              <1> 	shr al, 4
  3450 00002B70 C0E404              <1> 	shl ah, 4
  3451 00002B73 C0EC04              <1> 	shr ah, 4
  3452 00002B76 3C00                <1> 	cmp al, 0
  3453 00002B78 7409                <1> 	je noconverttohex
  3454                              <1> converttohexlp:
  3455 00002B7A 80C40A              <1> 	add ah, 10
  3456 00002B7D FEC8                <1> 	dec al
  3457 00002B7F 3C00                <1> 	cmp al, 0
  3458 00002B81 75F7                <1> 	jne converttohexlp
  3459                              <1> noconverttohex:
  3460 00002B83 C3                  <1> 	ret
  3461                              <1> 	
  3462                              <1> tstackput1:
  3463 00002B84 8935[EF2B0000]      <1> 	mov [tstack + 20], esi
  3464 00002B8A BE[DB2B0000]        <1> 	mov esi, tstack
  3465 00002B8F 8906                <1> 	mov [esi], eax
  3466 00002B91 895E04              <1> 	mov [esi + 4], ebx
  3467 00002B94 894E08              <1> 	mov [esi + 8], ecx
  3468 00002B97 89560C              <1> 	mov [esi + 12], edx
  3469 00002B9A 897E10              <1> 	mov [esi + 16], edi
  3470 00002B9D C3                  <1> 	ret
  3471                              <1> 	
  3472                              <1> tstackget1:
  3473 00002B9E BE[DB2B0000]        <1> 	mov esi, tstack
  3474 00002BA3 8B06                <1> 	mov eax, [esi]
  3475 00002BA5 8B5E04              <1> 	mov ebx, [esi + 4]
  3476 00002BA8 8B4E08              <1> 	mov ecx, [esi + 8]
  3477 00002BAB 8B560C              <1> 	mov edx, [esi + 12]
  3478 00002BAE 8B7E10              <1> 	mov edi, [esi + 16]
  3479 00002BB1 8B7614              <1> 	mov esi, [esi + 20]
  3480 00002BB4 C3                  <1> 	ret
  3481                              <1> 	
  3482                              <1> tget1:
  3483 00002BB5 66BA7000            <1> 	mov dx, 0x70
  3484 00002BB9 EE                  <1> 	out dx, al
  3485 00002BBA 6642                <1> 	inc dx
  3486 00002BBC EC                  <1> 	in al, dx
  3487 00002BBD 664A                <1> 	dec dx
  3488 00002BBF C3                  <1> 	ret
  3489                              <1> 	
  3490                              <1> tput1:
  3491 00002BC0 66C1E904            <1> 	shr cx, 4
  3492 00002BC4 B030                <1> 	mov al, 48
  3493 00002BC6 00E8                <1> 	add al, ch
  3494 00002BC8 8806                <1> 	mov [esi], al
  3495 00002BCA 46                  <1> 	inc esi
  3496 00002BCB B030                <1> 	mov al, 48
  3497 00002BCD C0E904              <1> 	shr cl, 4
  3498 00002BD0 00C8                <1> 	add al, cl
  3499 00002BD2 8806                <1> 	mov [esi], al
  3500 00002BD4 81C602000000        <1> 	add esi, 2
  3501 00002BDA C3                  <1> 	ret
  3502                              <1> 		
  3503 00002BDB 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  3504 00002BE4 000000000000000000- <1>
  3505 00002BED 000000000000        <1>
  3506 00002BF3 00                  <1> 	RTCtimeSecond db 0
  3507 00002BF4 00                  <1> 	RTCtimeMinute db 0
  3508 00002BF5 00                  <1> 	RTCtimeHour db 0
  3509 00002BF6 00                  <1> 	RTCtimeDay db 0
  3510 00002BF7 00                  <1> 	RTCtimeMonth db 0
  3511 00002BF8 00                  <1> 	RTCtimeYear db 0
  3512 00002BF9 00                  <1> 	dayhex db 0
  3513 00002BFA 00                  <1> 	monthhex db 0
  3514 00002BFB 00                  <1> 	yearhex db 0
  3515 00002BFC 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  3516 00002C05 0A                  <1>
  3517 00002C06 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  3518 00002C0F 300D0A00            <1>
  3519                              <1> 	oldcentury:	;;from 1700 to 1900
  3520 00002C13 040200              <1> 	db 4,2,0
  3521                              <1> 	century:	;;from 2000 to 2500
  3522 00002C16 060402000604        <1> 	db 6,4,2,0,6,4
  3523                              <1> 	month:
  3524 00002C1C 000303060104060205- <1> 	db 0,3,3,6,1,4,6,2,5,0,3,5
  3525 00002C25 000305              <1>
  3526                              <1> 	day:
  3527 00002C28 [442C0000]          <1> 	dd sunday
  3528 00002C2C [4D2C0000]          <1> 	dd monday
  3529 00002C30 [562C0000]          <1> 	dd tuesday
  3530 00002C34 [602C0000]          <1> 	dd wednesday
  3531 00002C38 [6C2C0000]          <1> 	dd thursday
  3532 00002C3C [772C0000]          <1> 	dd friday
  3533 00002C40 [802C0000]          <1> 	dd saturday
  3534                              <1> sunday:
  3535 00002C44 53756E6461790D0A00  <1> 	db "Sunday",13,10,0
  3536                              <1> monday:
  3537 00002C4D 4D6F6E6461790D0A00  <1> 	db "Monday",13,10,0
  3538                              <1> tuesday:
  3539 00002C56 547565736461790D0A- <1> 	db "Tuesday",13,10,0
  3540 00002C5F 00                  <1>
  3541                              <1> wednesday:
  3542 00002C60 5765646E6573646179- <1> 	db "Wednesday",13,10,0
  3543 00002C69 0D0A00              <1>
  3544                              <1> thursday:
  3545 00002C6C 54687572736461790D- <1> 	db "Thursday",13,10,0
  3546 00002C75 0A00                <1>
  3547                              <1> friday:
  3548 00002C77 4672696461790D0A00  <1> 	db "Friday",13,10,0
  3549                              <1> saturday:
  3550 00002C80 53617475726461790D- <1> 	db "Saturday",13,10,0
  3551 00002C89 0A00                <1>
  3552                              <1> 
  3553 00002C8B 0504637075696400    <1> db 5,4,"cpuid",0
  3554 00002C93 B800000000          <1> 	mov eax, 0
  3555 00002C98 0FA2                <1> 	cpuid
  3556 00002C9A 891D[EF2C0000]      <1> 	mov [cpuidbuf], ebx
  3557 00002CA0 8915[F32C0000]      <1> 	mov [cpuidbuf + 4], edx
  3558 00002CA6 890D[F72C0000]      <1> 	mov [cpuidbuf + 8], ecx
  3559 00002CAC BE[EF2C0000]        <1> 	mov esi, cpuidbuf
  3560 00002CB1 E818E4FFFF          <1> 	call print
  3561 00002CB6 BE[19580000]        <1> 	mov esi, line
  3562 00002CBB E80EE4FFFF          <1> 	call print
  3563 00002CC0 B801000000          <1> 	mov eax, 1
  3564 00002CC5 0FA2                <1> 	cpuid
  3565 00002CC7 89C1                <1> 	mov ecx, eax
  3566 00002CC9 C605[871A0000]02    <1> 	mov byte [firsthexshown], 2
  3567 00002CD0 E8C7EDFFFF          <1> 	call showhex
  3568 00002CD5 B808000080          <1> 	mov eax, 0x80000008
  3569 00002CDA 0FA2                <1> 	cpuid
  3570 00002CDC 89C1                <1> 	mov ecx, eax
  3571 00002CDE C605[871A0000]02    <1> 	mov byte [firsthexshown], 2
  3572 00002CE5 E8B2EDFFFF          <1> 	call showhex
  3573 00002CEA E940E9FFFF          <1> 	jmp nwcmd
  3574                              <1> 	
  3575 00002CEF 00<rept>            <1> cpuidbuf times 13 db 0
  3576                              <1> cpuidvendorend:
  3577                              <1> progend:		;programs end here	
  3578                              <1> batchprogend:
  3579                                      %include 'source/input.asm'
  3580                              <1> PS2SET:
  3581 00002CFC B0A8                <1>   mov  al, 0xa8		; enable mouse port
  3582 00002CFE E664                <1>   out  0x64, al		; write to keyboardcontroller
  3583 00002D00 E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  3584 00002D05 C3                  <1> ret
  3585                              <1> 
  3586                              <1> CHKPRT:
  3587 00002D06 66B96400            <1>   mov  cx, 100
  3588                              <1>  .again:
  3589 00002D0A E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3590 00002D0C A802                <1>   test al, 2		; Check if input buffer is empty
  3591 00002D0E 7402                <1>   je .go
  3592 00002D10 E2F8                <1>   loop .again
  3593                              <1>  .go:
  3594 00002D12 C3                  <1> ret
  3595                              <1> 
  3596                              <1> WMOUS:
  3597 00002D13 B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  3598 00002D15 E664                <1>   out  0x64, al		; write to keyboardcontroller
  3599 00002D17 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3600 00002D1C C3                  <1> ret
  3601                              <1> 
  3602                              <1> MBUFFUL:
  3603 00002D1D 66B96400            <1>   mov cx, 100
  3604                              <1>  .mn:
  3605 00002D21 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3606 00002D23 A820                <1>   test al, 0x20		; check if mouse output buffer is full
  3607 00002D25 7402                <1>   jz  .mnn
  3608 00002D27 E2F8                <1>   loop .mn
  3609                              <1>  .mnn:
  3610 00002D29 C3                  <1> ret
  3611                              <1> 
  3612                              <1> 
  3613                              <1> ACTMOUS:
  3614 00002D2A E8E4FFFFFF          <1>   call WMOUS
  3615 00002D2F B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  3616 00002D31 E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  3617 00002D33 E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3618 00002D38 E801000000          <1>   call CHKMOUS		; check if a byte is available
  3619 00002D3D C3                  <1> ret
  3620                              <1> 
  3621                              <1> CHKMOUS:
  3622 00002D3E B300                <1>   mov  bl, 0
  3623 00002D40 66B96400            <1>   mov cx, 100
  3624                              <1>  .vrd:
  3625 00002D44 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  3626 00002D46 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  3627 00002D48 7504                <1>   jnz .yy
  3628 00002D4A E2F8                <1>   loop .vrd
  3629 00002D4C B301                <1>   mov  bl, 1
  3630                              <1>  .yy:
  3631 00002D4E C3                  <1> ret
  3632                              <1> 
  3633                              <1> GETB:
  3634                              <1>  .cagain:
  3635 00002D4F E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  3636 00002D54 08DB                <1>   or bl, bl
  3637 00002D56 75F7                <1>   jnz .cagain
  3638 00002D58 B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  3639 00002D5A E664                <1>   out  0x64, al		; write to keyboardcontroller
  3640 00002D5C E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3641 00002D61 6631C0              <1>   xor  ax, ax
  3642 00002D64 E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  3643 00002D66 88C2                <1>   mov  dl, al
  3644 00002D68 B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  3645 00002D6A E664                <1>   out  0x64, al		; write to keyboardcontroller
  3646 00002D6C E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  3647 00002D71 88D0                <1>   mov  al, dl
  3648 00002D73 C3                  <1> ret
  3649                              <1> 
  3650 00002D74 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  3651 00002D75 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  3652 00002D76 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  3653 00002D77 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  3654 00002D78 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  3655 00002D79 00                  <1> mousedisabled db 0
  3656 00002D7A 00                  <1> specialkey db 0
  3657                              <1> guistartin2:		;;this is basically the idle process
  3658                              <1> 					;;this halts the cpu for a small amount of time and then sees if there was a keypress
  3659                              <1> 					;;this lets the cpu stay at close to 0% instead of 100%
  3660 00002D7B 66B80020            <1> 	mov ax, 0x2000	;;this is the divider for the PIT
  3661 00002D7F E640                <1> 	out 0x40, al
  3662 00002D81 66C1C008            <1> 	rol ax, 8
  3663 00002D85 E640                <1> 	out 0x40, al
  3664 00002D87 B0FE                <1> 	mov al, 0xFE
  3665 00002D89 E621                <1> 	out 0x21, al
  3666 00002D8B B020                <1> 	mov al, 0x20
  3667 00002D8D E620                <1> 	out 0x20, al
  3668 00002D8F A0[42510000]        <1> 	mov al, [threadson]
  3669 00002D94 C605[42510000]00    <1> 	mov byte [threadson], 0
  3670 00002D9B FB                  <1> 	sti
  3671 00002D9C F4                  <1> 	hlt
  3672 00002D9D A2[42510000]        <1> 	mov [threadson], al
  3673 00002DA2 FA                  <1> 	cli
  3674                              <1> guistartin:
  3675 00002DA3 B800000000          <1> 		mov eax, 0
  3676 00002DA8 A2[7A2D0000]        <1> 		mov [specialkey], al
  3677 00002DAD 66A3[85100000]      <1> 		mov [lastkey], ax
  3678 00002DB3 E464                <1> 		in al, 64h ; Status
  3679 00002DB5 A801                <1> 		test al, 1 
  3680 00002DB7 74C2                <1> 		jz guistartin2 ; if output buffer full or no keypress, jump to idle process (only works when it is jz guistartin2, use jz guistartin to disable)
  3681 00002DB9 A820                <1> 		test al, 20h ; PS2-Mouse?
  3682 00002DBB 0F85E6010000        <1> 		jnz near maincall2
  3683                              <1> 	guigetkey:
  3684 00002DC1 E460                <1> 		in al, 60h
  3685 00002DC3 88C4                <1> 		mov ah, al
  3686 00002DC5 B000                <1> 		mov al, 0
  3687 00002DC7 8825[86100000]      <1> 		mov [lastkey + 1], ah
  3688 00002DCD 88E0                <1> 		mov al, ah
  3689 00002DCF BF[F3310000]        <1> 		mov edi, scancode
  3690                              <1> 	guisearchscan: 
  3691 00002DD4 3C3A                <1> 		cmp al, 3Ah
  3692 00002DD6 731A                <1> 		jae guiscanother
  3693 00002DD8 B400                <1> 		mov ah, 0
  3694 00002DDA C0E002              <1> 		shl al, 2
  3695 00002DDD 01C7                <1> 		add edi, eax
  3696 00002DDF D0E8                <1> 		shr al, 1
  3697 00002DE1 01C7                <1> 		add edi, eax
  3698 00002DE3 D0E8                <1> 		shr al, 1
  3699 00002DE5 8A27                <1> 		mov ah, [edi]
  3700 00002DE7 80FC00              <1> 		cmp ah, 0
  3701 00002DEA 7406                <1> 		je guiscanother
  3702 00002DEC E9D7000000          <1> 		jmp guiscanfound
  3703 00002DF1 00                  <1> guiupper db 0
  3704                              <1> guiscanother:
  3705 00002DF2 88C4                <1> 		mov ah, al
  3706 00002DF4 B000                <1> 		mov al, 0
  3707 00002DF6 66A3[85100000]      <1> 		mov [lastkey], ax
  3708 00002DFC 80FCE0              <1> 		cmp ah, 0E0h
  3709 00002DFF 0F847D000000        <1> 		je near guigetkeyspecial
  3710 00002E05 803D[7A2D0000]E0    <1> 		cmp byte [specialkey], 0xE0
  3711 00002E0C 752B                <1> 		jne nospecialkey
  3712 00002E0E 80FC38              <1> 		cmp ah, 38h
  3713 00002E11 0F84A0000000        <1> 		je near guialton
  3714 00002E17 80FCB8              <1> 		cmp ah, 0B8h
  3715 00002E1A 0F849F000000        <1> 		je near guialtoff
  3716 00002E20 80FC1D              <1> 		cmp ah, 1Dh
  3717 00002E23 0F847E000000        <1> 		je near guictron
  3718 00002E29 80FC9D              <1> 		cmp ah, 9Dh
  3719 00002E2C 0F847D000000        <1> 		je near guictroff
  3720 00002E32 66A3[85100000]      <1> 		mov [lastkey], ax
  3721 00002E38 C3                  <1> 		ret
  3722                              <1> nospecialkey:
  3723                              <1> 		;cmp ah, 4Dh
  3724                              <1> 		;je near nextimage
  3725 00002E39 80FC2A              <1> 		cmp ah, 2Ah
  3726 00002E3C 0F8455000000        <1> 		je near guishifton
  3727 00002E42 80FC36              <1> 		cmp ah, 36h
  3728 00002E45 0F844C000000        <1> 		je near guishifton
  3729 00002E4B 80FC1C              <1> 		cmp ah, 1Ch
  3730 00002E4E 0F8473000000        <1> 		je near guientdown
  3731 00002E54 80FCAA              <1> 		cmp ah, 0AAh
  3732 00002E57 0F8442000000        <1> 		je near guishiftoff
  3733 00002E5D 80FCB6              <1> 		cmp ah, 0B6h
  3734 00002E60 0F8439000000        <1> 		je near guishiftoff
  3735 00002E66 80FC3A              <1> 		cmp ah, 3Ah
  3736 00002E69 0F84A5000000        <1> 		je near guicaps
  3737 00002E6F 80FC45              <1> 		cmp ah, 0x45
  3738 00002E72 0F84AD000000        <1> 		je near guinumlock
  3739 00002E78 80FC46              <1> 		cmp ah, 0x46
  3740 00002E7B 0F84BC000000        <1> 		je near guiscrolllock
  3741 00002E81 C3                  <1> 		ret
  3742                              <1> 	guigetkeyspecial:
  3743 00002E82 C605[7A2D0000]E0    <1> 		mov byte [specialkey], 0xE0
  3744 00002E89 E933FFFFFF          <1> 		jmp guigetkey
  3745                              <1> 	guishift:
  3746 00002E8E A0[F12D0000]        <1> 		mov al, [guiupper]
  3747 00002E93 3C01                <1> 		cmp al, 1
  3748 00002E95 7308                <1> 		jae guishiftoff
  3749                              <1> 	guishifton:
  3750 00002E97 C605[F12D0000]01    <1> 		mov byte [guiupper], 1
  3751 00002E9E C3                  <1> 		ret
  3752                              <1> 		;jmp guistartin
  3753                              <1> 	guishiftoff:
  3754 00002E9F C605[F12D0000]00    <1> 		mov byte [guiupper], 0
  3755 00002EA6 C3                  <1> 		ret
  3756                              <1> 		;jmp guistartin
  3757                              <1> 	guictron:
  3758 00002EA7 C605[132F0000]01    <1> 		mov byte [guictr], 1
  3759 00002EAE C3                  <1> 		ret
  3760                              <1> 	guictroff:
  3761 00002EAF C605[132F0000]00    <1> 		mov byte [guictr], 0
  3762 00002EB6 C3                  <1> 		ret
  3763                              <1> 	guialton:
  3764 00002EB7 C605[122F0000]01    <1> 		mov byte [guialt], 1
  3765 00002EBE C3                  <1> 		ret
  3766                              <1> 		;jmp guistartin
  3767                              <1> 	guialtoff:
  3768 00002EBF C605[122F0000]00    <1> 		mov byte [guialt], 0
  3769 00002EC6 C3                  <1> 		ret
  3770                              <1> 		;jmp guistartin
  3771                              <1> 	guientdown:
  3772 00002EC7 C3                  <1> 		ret
  3773                              <1> 	guiscanfound:
  3774 00002EC8 81C704000000        <1> 		add edi, 4
  3775 00002ECE 803D[132F0000]01    <1> 		cmp byte [guictr], 1
  3776 00002ED5 731B                <1> 		jae altguiin
  3777 00002ED7 81EF04000000        <1> 		sub edi, 4
  3778 00002EDD 81C702000000        <1> 		add edi, 2
  3779 00002EE3 803D[122F0000]01    <1> 		cmp byte [guialt], 1
  3780 00002EEA 7306                <1> 		jae altguiin
  3781 00002EEC 81EF02000000        <1> 		sub edi, 2
  3782                              <1> altguiin:
  3783 00002EF2 81C701000000        <1> 		add edi, 1
  3784 00002EF8 803D[F12D0000]01    <1> 		cmp byte [guiupper], 1
  3785 00002EFF 7306                <1> 		jae uppercasegui
  3786 00002F01 81EF01000000        <1> 		sub edi, 1
  3787                              <1> uppercasegui:
  3788 00002F07 8A07                <1> 		mov al,[edi]
  3789 00002F09 A2[85100000]        <1> 		mov [lastkey], al
  3790 00002F0E C3                  <1> 		ret
  3791                              <1> 		
  3792 00002F0F 00                  <1> keyboardstatus db 0
  3793 00002F10 00                  <1> numlockstatus db 0
  3794 00002F11 00                  <1> scrolllockstatus db 0
  3795 00002F12 00                  <1> guialt db 0
  3796 00002F13 00                  <1> guictr db 0
  3797                              <1> 	guicaps:
  3798 00002F14 8035[0F2F0000]04    <1> 		xor byte [keyboardstatus], 00000100b
  3799 00002F1B E835000000          <1> 		call updatekblights
  3800 00002F20 E969FFFFFF          <1> 		jmp guishift
  3801                              <1> 		
  3802                              <1> 	guinumlock:
  3803 00002F25 8035[0F2F0000]02    <1> 		xor byte [keyboardstatus], 00000010b
  3804 00002F2C 8035[102F0000]01    <1> 		xor byte [numlockstatus], 1
  3805 00002F33 E81D000000          <1> 		call updatekblights
  3806 00002F38 E966FEFFFF          <1> 		jmp guistartin
  3807                              <1> 	
  3808                              <1> 	guiscrolllock:
  3809 00002F3D 8035[0F2F0000]01    <1> 		xor byte [keyboardstatus], 00000001b
  3810 00002F44 8035[112F0000]01    <1> 		xor byte [scrolllockstatus], 1
  3811 00002F4B E805000000          <1> 		call updatekblights
  3812 00002F50 E94EFEFFFF          <1> 		jmp guistartin
  3813                              <1> 		
  3814                              <1> 	updatekblights:
  3815 00002F55 B0ED                <1> 		mov al, 0xED
  3816 00002F57 66BA6000            <1> 		mov dx, 0x60
  3817 00002F5B EE                  <1> 		out dx, al
  3818                              <1> 	chkkbdack:
  3819 00002F5C EC                  <1> 		in al, dx
  3820 00002F5D 3CFA                <1> 		cmp al, 0xFA
  3821 00002F5F 75FB                <1> 		jne chkkbdack
  3822 00002F61 A0[0F2F0000]        <1> 		mov al, [keyboardstatus]
  3823 00002F66 EE                  <1> 		out dx, al
  3824 00002F67 C3                  <1> 		ret
  3825                              <1> 	
  3826                              <1> 	cursorgui:
  3827 00002F68 803D[49460000]01    <1> 		cmp byte [mouseon], 1
  3828 00002F6F 0F8432000000        <1> 		je near maincall2
  3829 00002F75 803D[E8340000]00    <1> 		cmp byte [guion], 0
  3830 00002F7C 0F8445FFFFFF        <1> 		je guientdown
  3831                              <1> 	initmouse:
  3832 00002F82 803D[E8340000]00    <1> 		cmp byte [guion], 0
  3833 00002F89 7405                <1> 		je noswmsposinit
  3834 00002F8B E825060000          <1> 		call switchmousepos2
  3835                              <1> 	noswmsposinit:
  3836 00002F90 E867FDFFFF          <1> 	  	call PS2SET
  3837 00002F95 E890FDFFFF          <1> 		call ACTMOUS
  3838 00002F9A C605[49460000]01    <1> 		mov byte [mouseon],1
  3839 00002FA1 E8A9FDFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  3840                              <1> 				;;If the bytes are mixed up,
  3841                              <1> 				;;remove this line or add another of this line.
  3842                              <1> 		;call GETB
  3843                              <1> 	nomouse:
  3844 00002FA6 C3                  <1> 		ret
  3845                              <1> 	maincall2:
  3846 00002FA7 803D[792D0000]01    <1> 		cmp byte [mousedisabled], 1
  3847 00002FAE 74F6                <1> 		je nomouse
  3848 00002FB0 803D[49460000]01    <1> 		  cmp byte [mouseon], 1
  3849 00002FB7 75C9                <1> 		  jne initmouse
  3850 00002FB9 E891FDFFFF          <1> 		  call GETB
  3851 00002FBE 88C3                <1> 		  mov  bl, al
  3852 00002FC0 80E301              <1> 		  and  bl, 1
  3853 00002FC3 881D[742D0000]      <1> 		  mov  BYTE [LBUTTON], bl
  3854 00002FC9 88C3                <1> 		  mov  bl, al
  3855 00002FCB 80E302              <1> 		  and  bl, 2
  3856 00002FCE D0EB                <1> 		  shr  bl, 1
  3857 00002FD0 881D[752D0000]      <1> 		  mov  BYTE [RBUTTON], bl
  3858 00002FD6 88C3                <1> 		  mov  bl, al
  3859 00002FD8 80E304              <1> 		  and  bl, 4
  3860 00002FDB C0EB02              <1> 		  shr  bl, 2
  3861 00002FDE 881D[762D0000]      <1> 		  mov  BYTE [MBUTTON], bl
  3862 00002FE4 E866FDFFFF          <1> 		  call GETB
  3863 00002FE9 A2[772D0000]        <1> 		  mov  BYTE [XCOORD], al
  3864 00002FEE E85CFDFFFF          <1> 		  call GETB
  3865 00002FF3 A2[782D0000]        <1> 		  mov  BYTE [YCOORD], al
  3866                              <1> 
  3867                              <1> 	showpixelcursor:
  3868 00002FF8 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  3869 00002FFF 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  3870 00003006 668915[4E310000]    <1> 		mov [lastmouseposition], dx
  3871 0000300D 66890D[50310000]    <1> 		mov [lastmouseposition + 2], cx
  3872 00003014 A0[772D0000]        <1> 		mov al, [XCOORD]
  3873 00003019 3C80                <1> 		cmp al, 128
  3874 0000301B 730C                <1> 		jae subxcoord
  3875 0000301D 00C0                <1> 		add al, al
  3876 0000301F B400                <1> 		mov ah, 0
  3877 00003021 6601C2              <1> 		add dx, ax
  3878 00003024 E90B000000          <1> 		jmp subxcoorddn
  3879                              <1> 	subxcoord:
  3880 00003029 00C0                <1> 		add al, al
  3881 0000302B B300                <1> 		mov bl, 0
  3882 0000302D 28C3                <1> 		sub bl, al
  3883 0000302F B700                <1> 		mov bh, 0
  3884 00003031 6629DA              <1> 		sub dx, bx
  3885                              <1> 	subxcoorddn:
  3886 00003034 8A1D[782D0000]      <1> 		mov bl, [YCOORD]
  3887 0000303A B000                <1> 		mov al, 0
  3888 0000303C 28D8                <1> 		sub al, bl
  3889 0000303E 3C80                <1> 		cmp al, 128
  3890 00003040 730A                <1> 		jae subycoord
  3891 00003042 B400                <1> 		mov ah, 0
  3892 00003044 6601C1              <1> 		add cx, ax
  3893 00003047 E909000000          <1> 		jmp subycoorddn
  3894                              <1> 	subycoord:
  3895 0000304C B300                <1> 		mov bl, 0
  3896 0000304E 28C3                <1> 		sub bl, al
  3897 00003050 B700                <1> 		mov bh, 0
  3898 00003052 6629D9              <1> 		sub cx, bx
  3899                              <1> 	subycoorddn:
  3900 00003055 6681FA204E          <1> 		cmp dx, 20000
  3901 0000305A 7604                <1> 		jbe nooriginx2
  3902 0000305C 66BA0000            <1> 		mov dx, 0
  3903                              <1> 	nooriginx2:
  3904 00003060 6681F9204E          <1> 		cmp cx, 20000
  3905 00003065 7604                <1> 		jbe nooriginy2
  3906 00003067 66B90000            <1> 		mov cx, 0
  3907                              <1> 	nooriginy2:
  3908 0000306B 6681FA0000          <1> 		cmp dx, 0
  3909 00003070 7415                <1> 		je nofixxcolumn2
  3910 00003072 663B15[6C430000]    <1> 		cmp dx, [resolutionx2]
  3911 00003079 720C                <1> 		jb nofixxcolumn2
  3912 0000307B 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  3913 00003082 6681EA0200          <1> 		sub dx, 2
  3914                              <1> 	nofixxcolumn2:
  3915 00003087 6681F90000          <1> 		cmp cx, 0
  3916 0000308C 7415                <1> 		je nofixyrow2
  3917 0000308E 663B0D[68430000]    <1> 		cmp cx, [resolutiony]
  3918 00003095 720C                <1> 		jb nofixyrow2
  3919 00003097 668B0D[68430000]    <1> 		mov cx, [resolutiony]
  3920 0000309E 6681E90100          <1> 		sub cx, 1
  3921                              <1> 	nofixyrow2:
  3922 000030A3 668915[52310000]    <1> 		mov [mousecursorposition], dx
  3923 000030AA 66890D[54310000]    <1> 		mov [mousecursorposition + 2], cx
  3924 000030B1 803D[E8340000]00    <1> 		cmp byte [guion], 0
  3925 000030B8 0F8498000000        <1> 		je near termmouse
  3926 000030BE E889040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3927 000030C3 803D[742D0000]01    <1> 		cmp byte [LBUTTON], 1
  3928 000030CA 0F8462050000        <1> 		je near clickicon
  3929 000030D0 803D[752D0000]01    <1> 		cmp byte [RBUTTON], 1
  3930 000030D7 0F8455050000        <1> 		je near clickicon
  3931 000030DD A0[1F360000]        <1> 		mov al, [pbutton]
  3932 000030E2 C705[22360000]0000- <1> 		mov dword [dragging], 0
  3933 000030EA 0000                <1>
  3934 000030EC 3C00                <1> 		cmp al, 0
  3935 000030EE 740F                <1> 		je nopreviousbutton
  3936 000030F0 E8F4030000          <1> 		call clearmousecursor
  3937 000030F5 E8860A0000          <1> 		call reloadallgraphics
  3938                              <1> 	windowtermcopyend:
  3939 000030FA E8B6040000          <1> 		call switchmousepos2
  3940                              <1> 	nopreviousbutton:
  3941 000030FF B000                <1> 		mov al, 0
  3942 00003101 A2[1F360000]        <1> 		mov [pbutton], al
  3943 00003106 A0[742D0000]        <1> 		mov al, [LBUTTON]
  3944 0000310B A2[20360000]        <1> 		mov [pLBUTTON], al
  3945 00003110 A0[752D0000]        <1> 		mov al, [RBUTTON]
  3946 00003115 A2[21360000]        <1> 		mov [pRBUTTON], al
  3947 0000311A B900000000          <1> 		mov ecx, 0
  3948 0000311F BA00000000          <1> 		mov edx, 0
  3949 00003124 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  3950 0000312B 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  3951 00003132 66BB18C7            <1> 		mov bx, 1100011100011000b
  3952 00003136 B400                <1> 		mov ah, 0
  3953 00003138 B07F                <1> 		mov al, 127
  3954 0000313A C605[E5340000]01    <1> 		mov byte [showcursorfonton], 1
  3955 00003141 E836120000          <1> 		call showfontvesa
  3956 00003146 C605[E5340000]00    <1> 		mov byte [showcursorfonton], 0
  3957 0000314D C3                  <1> 		ret
  3958                              <1> 
  3959 0000314E 84008400            <1> lastmouseposition dw 132,132
  3960 00003152 84008400            <1> mousecursorposition dw 132,132	
  3961                              <1> 
  3962                              <1> termmouse:
  3963 00003156 BE[8F1C0000]        <1> 		mov esi, videobuf2
  3964 0000315B BA00000000          <1> 		mov edx, 0
  3965 00003160 668B15[4E310000]    <1> 		mov dx, [lastmouseposition]
  3966 00003167 668B0D[50310000]    <1> 		mov cx, [lastmouseposition + 2]
  3967 0000316E 66A1[F1310000]      <1> 		mov ax, [cursorcache]
  3968 00003174 663D0000            <1> 		cmp ax, 0
  3969 00003178 7426                <1> 		je nocopycursorcache
  3970 0000317A 66C1E104            <1> 		shl cx, 4
  3971 0000317E 66C1E203            <1> 		shl dx, 3
  3972 00003182 01D6                <1> 		add esi, edx
  3973 00003184 66BA0000            <1> 		mov dx, 0
  3974 00003188 8A15[B30E0000]      <1> 		mov dl, [charxy]
  3975 0000318E 6641                <1> 		inc cx
  3976                              <1> termmousecplp1:
  3977 00003190 01D6                <1> 		add esi, edx
  3978 00003192 6649                <1> 		dec cx
  3979 00003194 6681F90000          <1> 		cmp cx, 0
  3980 00003199 75F5                <1> 		jne termmousecplp1
  3981 0000319B 29D6                <1> 		sub esi, edx
  3982 0000319D 668906              <1> 		mov [esi], ax
  3983                              <1> nocopycursorcache:
  3984 000031A0 BE[8F1C0000]        <1> 		mov esi, videobuf2
  3985 000031A5 BA00000000          <1> 		mov edx, 0
  3986 000031AA 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  3987 000031B1 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  3988 000031B8 66C1E104            <1> 		shl cx, 4
  3989 000031BC 66C1E203            <1> 		shl dx, 3
  3990 000031C0 01D6                <1> 		add esi, edx
  3991 000031C2 66BA0000            <1> 		mov dx, 0
  3992 000031C6 8A15[B30E0000]      <1> 		mov dl, [charxy]
  3993 000031CC 6641                <1> 		inc cx
  3994                              <1> termmousecplp2:
  3995 000031CE 01D6                <1> 		add esi, edx
  3996 000031D0 6649                <1> 		dec cx
  3997 000031D2 6681F90000          <1> 		cmp cx, 0
  3998 000031D7 75F5                <1> 		jne termmousecplp2
  3999 000031D9 29D6                <1> 		sub esi, edx
  4000 000031DB 668B06              <1> 		mov ax, [esi]
  4001 000031DE 66A3[F1310000]      <1> 		mov [cursorcache], ax
  4002 000031E4 B080                <1> 		mov al, 128
  4003 000031E6 B407                <1> 		mov ah, 7
  4004 000031E8 668906              <1> 		mov [esi], ax
  4005 000031EB E81FE2FFFF          <1> 		call termcopy
  4006 000031F0 C3                  <1> 		ret
  4007 000031F1 0000                <1> cursorcache db 0,0
  4008                              <1> 	
  4009                              <1> scancode:
  4010 000031F3 000000000000        <1> 	db 0,0,0,0,0,0			;,0h
  4011 000031F9 000000000000        <1> 	db 0,0,0,0,0,0			;,1h
  4012 000031FF 3121AD000000        <1> 	db '1','!',173,0,0,0	;,2h
  4013 00003205 3240FD000000        <1> 	db '2','@',253,0,0,0	;,3h
  4014 0000320B 332300000000        <1> 	db '3','#',0,0,0,0		;,4h
  4015 00003211 34249B9C0000        <1> 	db '4','$',155,156,0,0	;,5h
  4016 00003217 3525EE000000        <1> 	db '5','%',238,0,0,0	;,6h
  4017 0000321D 365EAC000000        <1> 	db '6','^',172,0,0,0	;,7h
  4018 00003223 3726AB000000        <1> 	db '7','&',171,0,0,0	;,8h
  4019 00003229 382A00000000        <1> 	db '8','*',0,0,0,0		;,9h
  4020 0000322F 392800000000        <1> 	db '9','(',0,0,0,0		;,0Ah
  4021 00003235 302900000000        <1> 	db '0',')',0,0,0,0		;,0Bh
  4022 0000323B 2D5F9DF10000        <1> 	db '-','_',157,241,0,0	;,0Ch
  4023 00003241 3D2BF7F60000        <1> 	db '=','+',247,246,0,0	;,0Dh
  4024 00003247 080800000000        <1> 	db 8,8,0,0,0,0			;,0Eh
  4025 0000324D 000000000000        <1> 	db 0,0,0,0,0,0			;,0Fh
  4026 00003253 7151848E0000        <1> 	db 'q','Q',132,142,0,0	;,10h
  4027 00003259 7757868F0000        <1> 	db 'w','W',134,143,0,0	;,11h
  4028 0000325F 65458290EE45        <1> 	db 'e','E',130,144,238,'E'	;,12h
  4029 00003265 725200007050        <1> 	db 'r','R',0,0,'p','P'		;,13h
  4030 0000326B 745400007454        <1> 	db 't','T',0,0,'t','T'		;,14h
  4031 00003271 7959819A7559        <1> 	db 'y','Y',129,154,'u','Y'	;,15h
  4032 00003277 7555A3970000        <1> 	db 'u','U',163,151,0,0	;,16h
  4033 0000327D 6949A18D6949        <1> 	db 'i','I',161,141,'i','I'	;,17h
  4034 00003283 6F4FA29577EA        <1> 	db 'o','O',162,149,'w',234	;,18h
  4035 00003289 70509499E3EF        <1> 	db 'p','P',148,153,227,239	;,19h
  4036 0000328F 5B7B00000000        <1> 	db '[','{',0,0,0,0		;,1Ah
  4037 00003295 5D7D00000000        <1> 	db ']','}',0,0,0,0		;,1Bh
  4038 0000329B 000000000000        <1> 	db 0,0,0,0,0,0			;,1Ch
  4039 000032A1 000000000000        <1> 	db 0,0,0,0,0,0			;,1Dh
  4040 000032A7 6141A000E041        <1> 	db 'a','A',160,0,224,'A'	;,1Eh
  4041 000032AD 73531500E5E4        <1> 	db 's','S',21,0,229,228		;,1Fh
  4042 000032B3 64440000EB7F        <1> 	db 'd','D',0,0,235,127	;,20h
  4043 000032B9 66469F00EDE8        <1> 	db 'f','F',159,0,237,232	;,21h
  4044 000032BF 6747000079E2        <1> 	db 'g','G',0,0,'y',226		;,22h
  4045 000032C5 684800006E48        <1> 	db 'h','H',0,0,'n','H'		;,23h
  4046 000032CB 6A4A00000000        <1> 	db 'j','J',0,0,0,0		;,24h
  4047 000032D1 6B4B00006B4B        <1> 	db 'k','K',0,0,'k','K'		;,25h
  4048 000032D7 6C4C0000E9E9        <1> 	db 'l','L',0,0,233,233		;,26h
  4049 000032DD 3B3A14000000        <1> 	db ';',':',20,0,0,0		;,27h
  4050 000032E3 272200000000        <1> 	db 27h,22h,0,0,0,0		;,28h
  4051 000032E9 607E00000000        <1> 	db '`','~',0,0,0,0		;,29h
  4052 000032EF 000000000000        <1> 	db 0,0,0,0,0,0			;,2Ah
  4053 000032F5 5C7CAAB30000        <1> 	db '\','|',170,179,0,0	;,2Bh
  4054 000032FB 7A5A91927A5A        <1> 	db 'z','Z',145,146,'z','Z'	;,2Ch
  4055 00003301 7858000000F0        <1> 	db 'x','X',0,0,0,240		;,2Dh
  4056 00003307 634387800000        <1> 	db 'c','C',135,128,0,0	;,2Eh
  4057 0000330D 765600000000        <1> 	db 'v','V',0,0,0,0		;,2Fh
  4058 00003313 62420000E142        <1> 	db 'b','B',0,0,225,'B'	;,30h
  4059 00003319 6E4EA4A5764E        <1> 	db 'n','N',164,165,'v','N'	;,31h
  4060 0000331F 6D4D0000E64D        <1> 	db 'm','M',0,0,230,'M'		;,32h
  4061 00003325 2C3CF3AE0000        <1> 	db ',','<',243,174,0,0	;,33h
  4062 0000332B 2E3EF2AF0000        <1> 	db '.','>',242,175,0,0	;,34h
  4063 00003331 2F3FA8000000        <1> 	db '/','?',168,0,0,0	;,35h
  4064 00003337 000000000000        <1> 	db 0,0,0,0,0,0			;,36h
  4065 0000333D 000000000000        <1> 	db 0,0,0,0,0,0			;,37h
  4066 00003343 000000000000        <1> 	db 0,0,0,0,0,0			;,38h
  4067 00003349 202000000000        <1> 	db ' ',' ',0,0,0,0		;,39h
  4068                              <1> noscan:
  4069                                      %include 'source/gui.asm'
  4070                              <1> guiclear:
  4071 0000334F 8B3D[7A6A0000]      <1> 	mov edi, [physbaseptr]
  4072 00003355 668B15[6A430000]    <1> 	mov dx, [resolutionx]
  4073 0000335C 668B0D[68430000]    <1> 	mov cx, [resolutiony]
  4074 00003363 66A1[8C330000]      <1> 	mov ax, [background]
  4075                              <1> guiclearloop:
  4076 00003369 668907              <1> 	mov [edi], ax
  4077 0000336C 81C702000000        <1> 	add edi, 2
  4078 00003372 664A                <1> 	dec dx
  4079 00003374 6681FA0000          <1> 	cmp dx, 0
  4080 00003379 77EE                <1> 	ja guiclearloop
  4081 0000337B 6649                <1> 	dec cx
  4082 0000337D 668B15[6A430000]    <1> 	mov dx, [resolutionx]
  4083 00003384 6681F90000          <1> 	cmp cx, 0
  4084 00003389 77DE                <1> 	ja guiclearloop
  4085 0000338B C3                  <1> 	ret
  4086                              <1> 
  4087 0000338C CF7B                <1> background dw 0111101111001111b
  4088                              <1> 
  4089                              <1> gui:	;Let's see what I can do, I am going to try to make this as freestanding as possible
  4090 0000338E B800000000          <1> 	mov eax, 0
  4091 00003393 BB00000000          <1> 	mov ebx, 0
  4092 00003398 B900000000          <1> 	mov ecx, 0
  4093 0000339D BA00000000          <1> 	mov edx, 0
  4094 000033A2 8B3D[7A6A0000]      <1> 	mov edi, [physbaseptr]
  4095 000033A8 668B15[6A430000]    <1> 	mov dx, [resolutionx]
  4096 000033AF 668B0D[68430000]    <1> 	mov cx, [resolutiony]
  4097 000033B6 668B1D[8C330000]    <1> 	mov bx, [background]
  4098                              <1> guiclearloop2:
  4099 000033BD 66891F              <1> 	mov [edi], bx
  4100 000033C0 81C702000000        <1> 	add edi, 2
  4101 000033C6 664A                <1> 	dec dx
  4102 000033C8 6681FA0000          <1> 	cmp dx, 0
  4103 000033CD 0F85EAFFFFFF        <1> 	jne near guiclearloop2
  4104 000033D3 6649                <1> 	dec cx
  4105 000033D5 668B15[6A430000]    <1> 	mov dx, [resolutionx]
  4106 000033DC 6681F90000          <1> 	cmp cx, 0
  4107 000033E1 0F85D6FFFFFF        <1> 	jne near guiclearloop2
  4108 000033E7 C605[E8340000]01    <1> 	mov byte [guion], 1
  4109 000033EE C605[E7340000]00    <1> 	mov byte [mouseselecton], 0
  4110 000033F5 B800000000          <1> 	mov eax, 0
  4111 000033FA BB00000000          <1> 	mov ebx, 0
  4112 000033FF B900000000          <1> 	mov ecx, 0
  4113 00003404 BA00000000          <1> 	mov edx, 0
  4114                              <1> 	
  4115 00003409 BE[5E460000]        <1> 	mov esi, pacmsg
  4116 0000340E 66B80000            <1> 	mov ax, 0
  4117 00003412 BB00000000          <1> 	mov ebx, 0
  4118 00003417 66B99000            <1> 	mov cx, 144
  4119 0000341B 66BA0400            <1> 	mov dx, 4
  4120 0000341F E8A30A0000          <1> 	call showstring
  4121                              <1> 	
  4122 00003424 BE[74470000]        <1> 	mov esi, interneticon
  4123 00003429 66B80000            <1> 	mov ax, 0
  4124 0000342D BB[D3460000]        <1> 	mov ebx, noie
  4125 00003432 66B91800            <1> 	mov cx, 24
  4126 00003436 66BA0400            <1> 	mov dx, 4
  4127 0000343A E8500E0000          <1> 	call showicon
  4128                              <1> 	
  4129 0000343F BE[F6470000]        <1> 	mov esi, wordicon
  4130 00003444 66B80000            <1> 	mov ax, 0
  4131 00003448 BB00000000          <1> 	mov ebx, 0
  4132 0000344D 66B91800            <1> 	mov cx, 24
  4133 00003451 66BA3000            <1> 	mov dx, 48
  4134 00003455 E8350E0000          <1> 	call showicon
  4135                              <1> 	
  4136 0000345A BE[78480000]        <1> 	mov esi, pacmanpellet
  4137 0000345F 66B80000            <1> 	mov ax, 0
  4138 00003463 BB00000000          <1> 	mov ebx, 0
  4139 00003468 66B94000            <1> 	mov cx, 64
  4140 0000346C 66BA0400            <1> 	mov dx, 4
  4141 00003470 E81A0E0000          <1> 	call showicon
  4142                              <1> 	
  4143 00003475 BE[7C490000]        <1> 	mov esi, pacman
  4144 0000347A 66B80000            <1> 	mov ax, 0
  4145 0000347E BB[B8460000]        <1> 	mov ebx, pacmannomnom
  4146 00003483 66B94000            <1> 	mov cx, 64
  4147 00003487 66BA3000            <1> 	mov dx, 48
  4148 0000348B E8FF0D0000          <1> 	call showicon
  4149                              <1> 	
  4150 00003490 BE[FA480000]        <1> 	mov esi, ghostie
  4151 00003495 66B80000            <1> 	mov ax, 0
  4152 00003499 BB[9D460000]        <1> 	mov ebx, boo
  4153 0000349E 66B96C00            <1> 	mov cx, 108
  4154 000034A2 66BA0400            <1> 	mov dx, 4
  4155 000034A6 E8E40D0000          <1> 	call showicon
  4156                              <1> 
  4157 000034AB BE[4A460000]        <1> 	mov esi, start
  4158 000034B0 668B0D[68430000]    <1> 	mov cx, [resolutiony]
  4159 000034B7 6681E91000          <1> 	sub cx, 16
  4160 000034BC 66BA0200            <1> 	mov dx, 2
  4161 000034C0 B400                <1> 	mov ah, 0
  4162 000034C2 B010                <1> 	mov al, 00010000b
  4163 000034C4 BB[21470000]        <1> 	mov ebx, winblows
  4164 000034C9 E8F9090000          <1> 	call showstring
  4165                              <1> 	
  4166 000034CE E895FAFFFF          <1> 	call cursorgui
  4167                              <1> guistart:
  4168 000034D3 E8CBF8FFFF          <1> 	call guistartin
  4169 000034D8 C605[E1340000]00    <1> 	mov byte [copygui], 0
  4170 000034DF EBF2                <1> 	jmp guistart
  4171                              <1> 	
  4172                              <1> ;guicopy:	;;for double buffering
  4173                              <1> ;	mov byte [copygui], 1
  4174                              <1> ;	mov edi, [offscreenmemoffset]
  4175                              <1> ;	mov edx, 0
  4176                              <1> ;	mov ecx, 0
  4177                              <1> ;	mov dx, [mousecursorposition]
  4178                              <1> ;	mov cx, [mousecursorposition + 2]
  4179                              <1> ;	add edi, edx
  4180                              <1> ;	mov dx, [resolutionx2]
  4181                              <1> ;	inc cx
  4182                              <1> ;guicp2:
  4183                              <1> ;	add edi, edx
  4184                              <1> ;	dec cx
  4185                              <1> ;	cmp cx, 0
  4186                              <1> ;	jne guicp2
  4187                              <1> ;	sub edi, edx
  4188                              <1> ;	mov [cursorloc], edi
  4189                              <1> ;	mov ebx, cursorbmp
  4190                              <1> ;	mov cx, [resolutiony]
  4191                              <1> ;	rol ecx, 16
  4192                              <1> ;	mov cx, [resolutionx]
  4193                              <1> ;	mov esi, [physbaseptr]
  4194                              <1> ;	mov edi, [offscreenmemoffset]
  4195                              <1> ;guicp1:
  4196                              <1> ;	mov ax, [esi]
  4197                              <1> ;	mov [edi], ax
  4198                              <1> ;	add esi, 2
  4199                              <1> ;	add edi, 2
  4200                              <1> ;	cmp edi, [cursorloc]
  4201                              <1> ;	je copycursor
  4202                              <1> ;dncopycursor:
  4203                              <1> ;	dec cx
  4204                              <1> ;	cmp cx, 0
  4205                              <1> ;	jne guicp1
  4206                              <1> ;	mov cx, [resolutionx]
  4207                              <1> ;	rol ecx, 16
  4208                              <1> ;	dec cx
  4209                              <1> ;	cmp cx, 0
  4210                              <1> ;	rol ecx, 16
  4211                              <1> ;	jne guicp1
  4212                              <1> ;	mov byte [copygui], 0
  4213                              <1> ;	ret
  4214                              <1> ;copycursor:
  4215                              <1> ;	cmp ebx, cursorbmpend
  4216                              <1> ;	jae dncopycursor
  4217                              <1> ;	mov dx, [resolutionx2]
  4218                              <1> ;	add edi, edx
  4219                              <1> ;	mov [cursorloc], edi
  4220                              <1> ;	sub edi, edx
  4221                              <1> ;	dec ebx
  4222                              <1> ;	sub edi, 2
  4223                              <1> ;	sub esi, 2
  4224                              <1> ;	mov dx, 9
  4225                              <1> ;curscplp:
  4226                              <1> ;	inc ebx
  4227                              <1> ;	add esi, 2
  4228                              <1> ;	add edi, 2
  4229                              <1> ;	mov ax, [esi]
  4230                              <1> ;	mov [edi], ax
  4231                              <1> ;	mov al, [ebx]
  4232                              <1> ;	cmp al, 0
  4233                              <1> ;	je curscplp2
  4234                              <1> ;	mov word [edi], 1110011110011100b
  4235                              <1> ;curscplp2:
  4236                              <1> ;	dec cx
  4237                              <1> ;	cmp cx, 0
  4238                              <1> ;	je dncopycursor
  4239                              <1> ;	dec dx
  4240                              <1> ;	cmp dx, 0
  4241                              <1> ;	jne curscplp
  4242                              <1> ;	jmp dncopycursor
  4243                              <1> 	
  4244                              <1> 	
  4245                              <1> ;cursorloc: dd 0
  4246                              <1> 		
  4247                              <1> ;nextimage:	
  4248                              <1> ;	call guiclear
  4249                              <1> ;	mov esi, [bmpend]
  4250                              <1> ;	mov eax, 0
  4251                              <1> ;	mov ebx, 0
  4252                              <1> ;	mov ecx, 0
  4253                              <1> ;	mov edx, 0
  4254                              <1> ;	call showbmp
  4255                              <1> ;	jmp guistartin
  4256                              <1> 		
  4257 000034E1 00                  <1> copygui db 0
  4258 000034E2 00                  <1> graphicsset db 0
  4259 000034E3 0000                <1> graphicspos db 0,0
  4260 000034E5 00                  <1> showcursorfonton db 0
  4261 000034E6 00                  <1> savefonton db 0
  4262 000034E7 00                  <1> mouseselecton db 0
  4263 000034E8 00                  <1> guion db 0
  4264                              <1> 
  4265                              <1> 		
  4266                              <1> clearmousecursor:
  4267 000034E9 BE[8C330000]        <1> 		mov esi, background
  4268 000034EE 8B3D[7A6A0000]      <1> 		mov edi, [physbaseptr]
  4269 000034F4 BA00000000          <1> 		mov edx, 0
  4270 000034F9 B900000000          <1> 		mov ecx, 0
  4271 000034FE 668B15[4E310000]    <1> 		mov dx, [lastmouseposition]
  4272 00003505 668B0D[50310000]    <1> 		mov cx, [lastmouseposition + 2]
  4273 0000350C 01D7                <1> 		add edi, edx
  4274 0000350E BA00000000          <1> 		mov edx, 0
  4275 00003513 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4276 0000351A 6681F90000          <1> 		cmp cx, 0
  4277 0000351F 740B                <1> 		je noyclr
  4278 00003521 01D7                <1> yclr:	add edi, edx
  4279 00003523 6649                <1> 		dec cx
  4280 00003525 6681F90000          <1> 		cmp cx, 0
  4281 0000352A 75F5                <1> 		jne yclr
  4282 0000352C 668B06              <1> noyclr:	mov ax, [esi]
  4283 0000352F C1C010              <1> 		rol eax, 16
  4284 00003532 668B06              <1> 		mov ax, [esi]
  4285 00003535 8907                <1> 		mov [edi], eax
  4286 00003537 894704              <1> 		mov [edi + 4], eax
  4287 0000353A 894708              <1> 		mov [edi + 8], eax
  4288 0000353D 89470C              <1> 		mov [edi + 12], eax
  4289 00003540 01D7                <1> 		add edi, edx
  4290 00003542 6641                <1> 		inc cx
  4291 00003544 6681F91000          <1> 		cmp cx, 16
  4292 00003549 72E1                <1> 		jb noyclr
  4293 0000354B C3                  <1> 		ret
  4294                              <1> 
  4295                              <1> switchmousepos:		;;switch were the mouse is located
  4296 0000354C BE[00120000]        <1> 		mov esi, mousecolorbuf
  4297 00003551 8B3D[7A6A0000]      <1> 		mov edi, [physbaseptr]
  4298 00003557 BA00000000          <1> 		mov edx, 0
  4299 0000355C B900000000          <1> 		mov ecx, 0
  4300 00003561 668B15[4E310000]    <1> 		mov dx, [lastmouseposition]
  4301 00003568 668B0D[50310000]    <1> 		mov cx, [lastmouseposition + 2]
  4302 0000356F 01D7                <1> 		add edi, edx
  4303 00003571 BA00000000          <1> 		mov edx, 0
  4304 00003576 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4305 0000357D 6681F90000          <1> 		cmp cx, 0
  4306 00003582 740B                <1> 		je noswmsy
  4307 00003584 01D7                <1> swmsy:		add edi, edx
  4308 00003586 6649                <1> 		dec cx
  4309 00003588 6681F90000          <1> 		cmp cx, 0
  4310 0000358D 75F5                <1> 		jne swmsy
  4311 0000358F 8B06                <1> noswmsy:	mov eax, [esi]
  4312 00003591 8B5E04              <1> 		mov ebx, [esi + 4]
  4313 00003594 8907                <1> 		mov [edi], eax
  4314 00003596 895F04              <1> 		mov [edi + 4], ebx
  4315 00003599 8B4608              <1> 		mov eax, [esi + 8]
  4316 0000359C 8B5E0C              <1> 		mov ebx, [esi + 12]
  4317 0000359F 894708              <1> 		mov [edi + 8], eax
  4318 000035A2 895F0C              <1> 		mov [edi + 12], ebx
  4319 000035A5 01D7                <1> 		add edi, edx
  4320 000035A7 81C610000000        <1> 		add esi, 16
  4321 000035AD 81FE[00130000]      <1> 		cmp esi, mcolorend
  4322 000035B3 72DA                <1> 		jb noswmsy
  4323                              <1> 		
  4324                              <1> switchmousepos2:
  4325 000035B5 BE[00120000]        <1> 		mov esi, mousecolorbuf
  4326 000035BA 8B3D[7A6A0000]      <1> 		mov edi, [physbaseptr]
  4327 000035C0 BA00000000          <1> 		mov edx, 0
  4328 000035C5 B900000000          <1> 		mov ecx, 0
  4329 000035CA 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  4330 000035D1 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  4331 000035D8 01D7                <1> 		add edi, edx
  4332 000035DA BA00000000          <1> 		mov edx, 0
  4333 000035DF 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4334 000035E6 6681F90000          <1> 		cmp cx, 0
  4335 000035EB 740B                <1> 		je noswmsy2
  4336 000035ED 01D7                <1> swmsy2:		add edi, edx
  4337 000035EF 6649                <1> 		dec cx
  4338 000035F1 6681F90000          <1> 		cmp cx, 0
  4339 000035F6 75F5                <1> 		jne swmsy2
  4340 000035F8 8B07                <1> noswmsy2:	mov eax, [edi]
  4341 000035FA 8B5F04              <1> 		mov ebx, [edi + 4]
  4342 000035FD 8906                <1> 		mov [esi], eax
  4343 000035FF 895E04              <1> 		mov [esi + 4], ebx
  4344 00003602 8B4708              <1> 		mov eax, [edi + 8]
  4345 00003605 8B5F0C              <1> 		mov ebx, [edi + 12]
  4346 00003608 894608              <1> 		mov [esi + 8], eax
  4347 0000360B 895E0C              <1> 		mov [esi + 12], ebx
  4348 0000360E 01D7                <1> 		add edi, edx
  4349 00003610 81C610000000        <1> 		add esi, 16
  4350 00003616 81FE[00130000]      <1> 		cmp esi, mcolorend
  4351 0000361C 72DA                <1> 		jb noswmsy2
  4352 0000361E C3                  <1> 		ret
  4353                              <1> 
  4354 0000361F 00                  <1> pbutton db 0
  4355 00003620 00                  <1> pLBUTTON db 0
  4356 00003621 00                  <1> pRBUTTON db 0
  4357 00003622 00000000            <1> dragging dw 0,0
  4358 00003626 0000000000000000    <1> lastpos dw 0,0,0,0
  4359 0000362E 00000000            <1> colorbuf dw 0,0
  4360                              <1> 	
  4361                              <1> 	clickicon:
  4362 00003632 B001                <1> 		mov al, 1
  4363 00003634 A2[1F360000]        <1> 		mov [pbutton], al
  4364 00003639 A0[20360000]        <1> 		mov al, [pLBUTTON]
  4365 0000363E 2205[742D0000]      <1> 		and al, [LBUTTON]
  4366 00003644 8A25[21360000]      <1> 		mov ah, [pRBUTTON]
  4367 0000364A 2225[752D0000]      <1> 		and ah, [RBUTTON]
  4368 00003650 08E0                <1> 		or al, ah
  4369 00003652 3C00                <1> 		cmp al, 0
  4370 00003654 741B                <1> 		je nodragclick
  4371 00003656 813D[22360000]0100- <1> 		cmp dword [dragging], 1
  4372 0000365E 0000                <1>
  4373 00003660 732D                <1> 		jae dragclick
  4374 00003662 C705[22360000]0100- <1> 		mov dword [dragging], 1
  4375 0000366A 0000                <1>
  4376 0000366C E91E000000          <1> 		jmp dragclick
  4377                              <1> 	nodragclick:
  4378 00003671 C705[22360000]0000- <1> 		mov dword [dragging], 0
  4379 00003679 0000                <1>
  4380 0000367B A0[742D0000]        <1> 		mov al, [LBUTTON]
  4381 00003680 A2[20360000]        <1> 		mov [pLBUTTON], al
  4382 00003685 A0[752D0000]        <1> 		mov al, [RBUTTON]
  4383 0000368A A2[21360000]        <1> 		mov [pRBUTTON], al
  4384                              <1> 	dragclick:
  4385 0000368F 66B80000            <1> 		mov ax, 0
  4386 00003693 BE[00100000]        <1> 		mov esi, graphicstable
  4387 00003698 C705[98460000]0000- <1> 		mov dword [codepointer], 0
  4388 000036A0 0000                <1>
  4389                              <1> 	clicon2:
  4390 000036A2 BA00000000          <1> 		mov edx, 0
  4391 000036A7 B900000000          <1> 		mov ecx, 0
  4392 000036AC 66813E0100          <1> 		cmp word [esi], 1
  4393 000036B1 0F841B000000        <1> 		je near iconselect
  4394 000036B7 66813E0200          <1> 		cmp word [esi], 2
  4395 000036BC 0F8472010000        <1> 		je near textselected
  4396 000036C2 66813E0300          <1> 		cmp word [esi], 3
  4397 000036C7 0F84C7020000        <1> 		je near windowselect
  4398 000036CD E90B040000          <1> 		jmp nexticonsel
  4399                              <1> 	iconselect:
  4400 000036D2 668B5606            <1> 		mov dx, [esi + 6]
  4401 000036D6 6689D0              <1> 		mov ax, dx
  4402 000036D9 668B4E08            <1> 		mov cx, [esi + 8]
  4403 000036DD 6689CB              <1> 		mov bx, cx
  4404 000036E0 6681C32000          <1> 		add bx, 32
  4405 000036E5 6601D0              <1> 		add ax, dx
  4406 000036E8 813D[22360000]0100- <1> 		cmp dword [dragging], 1
  4407 000036F0 0000                <1>
  4408 000036F2 746F                <1> 		je dragicon
  4409 000036F4 813D[22360000]0000- <1> 		cmp dword [dragging], 0
  4410 000036FC 0000                <1>
  4411 000036FE 7411                <1> 		je nodragiconcheck
  4412 00003700 3935[22360000]      <1> 		cmp dword [dragging], esi
  4413 00003706 0F85D1030000        <1> 		jne near nexticonsel
  4414 0000370C E952000000          <1> 		jmp dragicon
  4415                              <1> 	nodragiconcheck:
  4416 00003711 663905[52310000]    <1> 		cmp [mousecursorposition], ax
  4417 00003718 0F82BF030000        <1> 		jb near nexticonsel
  4418 0000371E 66054000            <1> 		add ax, 64
  4419 00003722 663905[52310000]    <1> 		cmp [mousecursorposition], ax
  4420 00003729 0F87AE030000        <1> 		ja near nexticonsel
  4421 0000372F 6629D0              <1> 		sub ax, dx
  4422 00003732 66390D[54310000]    <1> 		cmp [mousecursorposition + 2], cx
  4423 00003739 0F829E030000        <1> 		jb near nexticonsel
  4424 0000373F 66391D[54310000]    <1> 		cmp [mousecursorposition + 2], bx
  4425 00003746 0F8791030000        <1> 		ja near nexticonsel
  4426 0000374C 668B460A            <1> 		mov ax, [esi + 10]
  4427 00003750 66250100            <1> 		and ax, 1
  4428 00003754 663D0100            <1> 		cmp ax, 1
  4429 00003758 0F84B6000000        <1> 		je near unselecticon
  4430 0000375E E98D000000          <1> 		jmp nodragicon
  4431                              <1> 	dragicon:
  4432 00003763 663905[4E310000]    <1> 		cmp [lastmouseposition], ax
  4433 0000376A 0F826D030000        <1> 		jb near nexticonsel
  4434 00003770 66054000            <1> 		add ax, 64
  4435 00003774 663905[4E310000]    <1> 		cmp [lastmouseposition], ax
  4436 0000377B 0F875C030000        <1> 		ja near nexticonsel
  4437 00003781 6629D0              <1> 		sub ax, dx
  4438 00003784 66390D[50310000]    <1> 		cmp [lastmouseposition + 2], cx
  4439 0000378B 0F824C030000        <1> 		jb near nexticonsel
  4440 00003791 66391D[50310000]    <1> 		cmp [lastmouseposition + 2], bx
  4441 00003798 0F873F030000        <1> 		ja near nexticonsel
  4442 0000379E 668B460A            <1> 		mov ax, [esi + 10]
  4443 000037A2 2410                <1> 		and al, 00010000b
  4444 000037A4 3C10                <1> 		cmp al, 00010000b
  4445 000037A6 7448                <1> 		je nodragicon
  4446 000037A8 8935[22360000]      <1> 		mov [dragging], esi
  4447 000037AE 66D1E2              <1> 		shl dx, 1
  4448 000037B1 662B15[4E310000]    <1> 		sub dx, [lastmouseposition]
  4449 000037B8 660315[52310000]    <1> 		add dx, [mousecursorposition]
  4450 000037BF 66D1EA              <1> 		shr dx, 1
  4451 000037C2 66030D[54310000]    <1> 		add cx, [mousecursorposition + 2]
  4452 000037C9 662B0D[50310000]    <1> 		sub cx, [lastmouseposition + 2]
  4453 000037D0 663B15[6C430000]    <1> 		cmp dx, [resolutionx2]
  4454 000037D7 7607                <1> 		jbe chkyresdrgicn
  4455 000037D9 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  4456                              <1> 	chkyresdrgicn:
  4457 000037E0 663B0D[68430000]    <1> 		cmp cx, [resolutiony]
  4458 000037E7 7607                <1> 		jbe nodragicon
  4459 000037E9 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  4460                              <1> 	nodragicon:
  4461 000037F0 66814E0A0100        <1> 		or word [esi + 10], 1
  4462 000037F6 8B5E0C              <1> 		mov ebx, [esi + 12]
  4463 000037F9 668B460A            <1> 		mov ax, [esi + 10]
  4464 000037FD 8B7602              <1> 		mov esi, [esi + 2]
  4465 00003800 C705[98460000]0000- <1> 		mov dword [codepointer], 0
  4466 00003808 0000                <1>
  4467 0000380A E8800A0000          <1> 		call showicon
  4468 0000380F E9E2020000          <1> 		jmp doneiconsel
  4469                              <1> 	unselecticon:
  4470 00003814 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4471 0000381A 8B5E0C              <1> 		mov ebx, [esi + 12]
  4472 0000381D 668B460A            <1> 		mov ax, [esi + 10]
  4473 00003821 8B7602              <1> 		mov esi, [esi + 2]
  4474 00003824 891D[98460000]      <1> 		mov [codepointer], ebx
  4475 0000382A E8600A0000          <1> 		call showicon
  4476 0000382F E9C2020000          <1> 		jmp doneiconsel
  4477                              <1> 	textselected:
  4478 00003834 8B5E02              <1> 		mov ebx, [esi + 2]
  4479 00003837 668B5606            <1> 		mov dx, [esi + 6]
  4480 0000383B 6689D0              <1> 		mov ax, dx
  4481 0000383E 668B4E08            <1> 		mov cx, [esi + 8]
  4482                              <1> 	lengthtesttext:
  4483 00003842 803B00              <1> 		cmp byte [ebx], 0
  4484 00003845 7407                <1> 		je donetesttextlength
  4485 00003847 43                  <1> 		inc ebx
  4486 00003848 66051000            <1> 		add ax, 16
  4487 0000384C EBF4                <1> 		jmp lengthtesttext
  4488                              <1> 	donetesttextlength:
  4489 0000384E 6689CB              <1> 		mov bx, cx
  4490 00003851 6681C30F00          <1> 		add bx, 15
  4491 00003856 813D[22360000]0100- <1> 		cmp dword [dragging], 1
  4492 0000385E 0000                <1>
  4493 00003860 7468                <1> 		je dragtext
  4494 00003862 813D[22360000]0000- <1> 		cmp dword [dragging], 0
  4495 0000386A 0000                <1>
  4496 0000386C 7411                <1> 		je nodragtextcheck
  4497 0000386E 3935[22360000]      <1> 		cmp dword [dragging], esi
  4498 00003874 0F8563020000        <1> 		jne near nexticonsel
  4499 0000387A E94B000000          <1> 		jmp dragtext
  4500                              <1> 	nodragtextcheck:
  4501 0000387F 663915[52310000]    <1> 		cmp [mousecursorposition], dx
  4502 00003886 0F8251020000        <1> 		jb near nexticonsel
  4503 0000388C 663905[52310000]    <1> 		cmp [mousecursorposition], ax
  4504 00003893 0F8744020000        <1> 		ja near nexticonsel
  4505 00003899 66390D[54310000]    <1> 		cmp [mousecursorposition + 2], cx
  4506 000038A0 0F8237020000        <1> 		jb near nexticonsel
  4507 000038A6 66391D[54310000]    <1> 		cmp [mousecursorposition + 2], bx
  4508 000038AD 0F872A020000        <1> 		ja near nexticonsel
  4509 000038B3 668B460A            <1> 		mov ax, [esi + 10]
  4510 000038B7 66250100            <1> 		and ax, 1
  4511 000038BB 663D0100            <1> 		cmp ax, 1
  4512 000038BF 0F84AB000000        <1> 		je near unselecttext
  4513 000038C5 E986000000          <1> 		jmp nodragtext
  4514                              <1> 	dragtext:
  4515 000038CA 663915[4E310000]    <1> 		cmp [lastmouseposition], dx
  4516 000038D1 0F8206020000        <1> 		jb near nexticonsel
  4517 000038D7 663905[4E310000]    <1> 		cmp [lastmouseposition], ax
  4518 000038DE 0F87F9010000        <1> 		ja near nexticonsel
  4519 000038E4 66390D[50310000]    <1> 		cmp [lastmouseposition + 2], cx
  4520 000038EB 0F82EC010000        <1> 		jb near nexticonsel
  4521 000038F1 66391D[50310000]    <1> 		cmp [lastmouseposition + 2], bx
  4522 000038F8 0F87DF010000        <1> 		ja near nexticonsel
  4523 000038FE 668B460A            <1> 		mov ax, [esi + 10]
  4524 00003902 2410                <1> 		and al, 00010000b
  4525 00003904 663D1000            <1> 		cmp ax, 00010000b
  4526 00003908 0F8442000000        <1> 		je near nodragtext
  4527 0000390E 8935[22360000]      <1> 		mov [dragging], esi
  4528 00003914 662B15[4E310000]    <1> 		sub dx, [lastmouseposition]
  4529 0000391B 660315[52310000]    <1> 		add dx, [mousecursorposition]
  4530 00003922 66030D[54310000]    <1> 		add cx, [mousecursorposition + 2]
  4531 00003929 662B0D[50310000]    <1> 		sub cx, [lastmouseposition + 2]
  4532 00003930 663B15[6C430000]    <1> 		cmp dx, [resolutionx2]
  4533 00003937 7607                <1> 		jbe chkyresdrgtxt
  4534 00003939 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  4535                              <1> 	chkyresdrgtxt:
  4536 00003940 663B0D[68430000]    <1> 		cmp cx, [resolutiony]
  4537 00003947 7607                <1> 		jbe nodragtext
  4538 00003949 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  4539                              <1> 	nodragtext:
  4540 00003950 66814E0A0100        <1> 		or word [esi + 10], 1
  4541 00003956 8B5E0C              <1> 		mov ebx, [esi + 12]
  4542 00003959 891D[98460000]      <1> 		mov [codepointer], ebx
  4543 0000395F 668B460A            <1> 		mov ax, [esi + 10]
  4544 00003963 8B7602              <1> 		mov esi, [esi + 2]
  4545 00003966 E85C050000          <1> 		call showstring
  4546 0000396B E986010000          <1> 		jmp doneiconsel
  4547                              <1> 	unselecttext:
  4548 00003970 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4549 00003976 8B5E0C              <1> 		mov ebx, [esi + 12]
  4550 00003979 668B460A            <1> 		mov ax, [esi + 10]
  4551 0000397D 8B7602              <1> 		mov esi, [esi + 2]
  4552 00003980 C705[98460000]0000- <1> 		mov dword [codepointer], 0
  4553 00003988 0000                <1>
  4554 0000398A E838050000          <1> 		call showstring
  4555 0000398F E962010000          <1> 		jmp doneiconsel
  4556                              <1> windowselect:
  4557 00003994 8B7E02              <1> 		mov edi, [esi + 2]
  4558 00003997 668B5606            <1> 		mov dx, [esi + 6]
  4559 0000399B 6689D0              <1> 		mov ax, dx
  4560 0000399E 668B4E08            <1> 		mov cx, [esi + 8]
  4561 000039A2 6689CB              <1> 		mov bx, cx
  4562 000039A5 6681C31000          <1> 		add bx, 16
  4563 000039AA 813D[22360000]0100- <1> 		cmp dword [dragging], 1
  4564 000039B2 0000                <1>
  4565 000039B4 746D                <1> 		je dragwin
  4566 000039B6 813D[22360000]0000- <1> 		cmp dword [dragging], 0
  4567 000039BE 0000                <1>
  4568 000039C0 7411                <1> 		je nodragwincheck
  4569 000039C2 3935[22360000]      <1> 		cmp dword [dragging], esi
  4570 000039C8 0F850F010000        <1> 		jne near nexticonsel
  4571 000039CE E950000000          <1> 		jmp dragwin
  4572                              <1> 	nodragwincheck:
  4573 000039D3 663905[52310000]    <1> 		cmp [mousecursorposition], ax
  4574 000039DA 0F82FD000000        <1> 		jb near nexticonsel
  4575 000039E0 660307              <1> 		add ax, [edi]
  4576 000039E3 660307              <1> 		add ax, [edi]
  4577 000039E6 663905[52310000]    <1> 		cmp [mousecursorposition], ax
  4578 000039ED 0F87EA000000        <1> 		ja near nexticonsel
  4579 000039F3 66390D[54310000]    <1> 		cmp [mousecursorposition + 2], cx
  4580 000039FA 0F82DD000000        <1> 		jb near nexticonsel
  4581 00003A00 66391D[54310000]    <1> 		cmp [mousecursorposition + 2], bx
  4582 00003A07 0F87D0000000        <1> 		ja near nexticonsel
  4583 00003A0D 662D1400            <1> 		sub ax, 20
  4584 00003A11 663905[52310000]    <1> 		cmp [mousecursorposition], ax
  4585 00003A18 0F8795000000        <1> 		ja near killwin
  4586 00003A1E E97C000000          <1> 		jmp nodragwin
  4587                              <1> 	dragwin:
  4588 00003A23 663905[4E310000]    <1> 		cmp [lastmouseposition], ax
  4589 00003A2A 0F82AD000000        <1> 		jb near nexticonsel
  4590 00003A30 660307              <1> 		add ax, [edi]
  4591 00003A33 660307              <1> 		add ax, [edi]
  4592 00003A36 663905[4E310000]    <1> 		cmp [lastmouseposition], ax
  4593 00003A3D 0F879A000000        <1> 		ja near nexticonsel
  4594 00003A43 66390D[50310000]    <1> 		cmp [lastmouseposition + 2], cx
  4595 00003A4A 0F828D000000        <1> 		jb near nexticonsel
  4596 00003A50 66391D[50310000]    <1> 		cmp [lastmouseposition + 2], bx
  4597 00003A57 0F8780000000        <1> 		ja near nexticonsel
  4598 00003A5D 8935[22360000]      <1> 		mov [dragging], esi
  4599 00003A63 662B15[4E310000]    <1> 		sub dx, [lastmouseposition]
  4600 00003A6A 660315[52310000]    <1> 		add dx, [mousecursorposition]
  4601 00003A71 66030D[54310000]    <1> 		add cx, [mousecursorposition + 2]
  4602 00003A78 662B0D[50310000]    <1> 		sub cx, [lastmouseposition + 2]
  4603 00003A7F 663B15[6C430000]    <1> 		cmp dx, [resolutionx2]
  4604 00003A86 7607                <1> 		jbe chkyresdrgwin
  4605 00003A88 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  4606                              <1> 	chkyresdrgwin:
  4607 00003A8F 663B0D[68430000]    <1> 		cmp cx, [resolutiony]
  4608 00003A96 7607                <1> 		jbe nodragwin
  4609 00003A98 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  4610                              <1> 	nodragwin:
  4611 00003A9F 8B5E0C              <1> 		mov ebx, [esi + 12]
  4612 00003AA2 668B460A            <1> 		mov ax, [esi + 10]
  4613 00003AA6 8B7602              <1> 		mov esi, [esi + 2]
  4614 00003AA9 E87B040000          <1> 		call showwindow
  4615 00003AAE E943000000          <1> 		jmp doneiconsel
  4616                              <1> 	killwin:
  4617 00003AB3 66C7060000          <1> 		mov word [esi], 0
  4618 00003AB8 C705[FF030000]0000- <1> 		mov dword [user2codepoint], 0
  4619 00003AC0 0000                <1>
  4620 00003AC2 C605[C20E0000]00    <1> 		mov byte [termguion], 0
  4621 00003AC9 E881F8FFFF          <1> 		call guiclear
  4622 00003ACE E8AD000000          <1> 		call reloadallgraphics
  4623 00003AD3 E9FBF9FFFF          <1> 		jmp guistart
  4624 00003AD8 E93A000000          <1> 		jmp doneiconsel2
  4625                              <1> 	nexticonsel:
  4626 00003ADD 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  4627 00003AE3 81C610000000        <1> 		add esi, 16
  4628 00003AE9 81FE[00120000]      <1> 		cmp esi, graphicstableend
  4629 00003AEF 7305                <1> 		jae doneiconsel
  4630 00003AF1 E9ACFBFFFF          <1> 		jmp clicon2
  4631                              <1> 	doneiconsel:
  4632 00003AF6 813D[22360000]0100- <1> 		cmp dword [dragging], 1
  4633 00003AFE 0000                <1>
  4634 00003B00 7315                <1> 		jae doneiconsel2
  4635 00003B02 813D[98460000]0000- <1> 		cmp dword [codepointer], 0
  4636 00003B0A 0000                <1>
  4637 00003B0C 7409                <1> 		je doneiconsel2
  4638 00003B0E 8B1D[98460000]      <1> 		mov ebx, [codepointer]
  4639 00003B14 FFD3                <1> 		call ebx 
  4640 00003B16 C3                  <1> 		ret
  4641                              <1> 	doneiconsel2:
  4642 00003B17 A0[742D0000]        <1> 		mov al, [LBUTTON]
  4643 00003B1C A2[20360000]        <1> 		mov [pLBUTTON], al
  4644 00003B21 A0[752D0000]        <1> 		mov al, [RBUTTON]
  4645 00003B26 A2[21360000]        <1> 		mov [pRBUTTON], al
  4646 00003B2B 66813D[22360000]01- <1> 		cmp word [dragging], 1
  4647 00003B33 00                  <1>
  4648 00003B34 0F860A000000        <1> 		jbe near noreloadgraphicsclick
  4649 00003B3A E8AAF9FFFF          <1> call clearmousecursor
  4650 00003B3F E83C000000          <1> call reloadallgraphics
  4651                              <1> noreloadgraphicsclick:
  4652 00003B44 B900000000          <1> 		mov ecx, 0
  4653 00003B49 BA00000000          <1> 		mov edx, 0
  4654 00003B4E B400                <1> 		mov ah, 0
  4655 00003B50 B07F                <1> 		mov al, 127
  4656 00003B52 668B15[52310000]    <1> 		mov dx, [mousecursorposition]
  4657 00003B59 668B0D[54310000]    <1> 		mov cx, [mousecursorposition + 2]
  4658 00003B60 66BBE738            <1> 		mov bx, 0011100011100111b
  4659 00003B64 C605[E5340000]01    <1> 		mov byte [showcursorfonton], 1
  4660 00003B6B E80C080000          <1> 		call showfontvesa
  4661 00003B70 C605[E5340000]00    <1> 		mov byte [showcursorfonton], 0
  4662 00003B77 C3                  <1> 		ret
  4663 00003B78 00000000            <1> lastdrag dw 0,0
  4664 00003B7C 00000000            <1> grpctblpos dw 0,0
  4665                              <1> 
  4666                              <1> reloadallgraphics:
  4667 00003B80 BF[00100000]        <1> 		mov edi, graphicstable
  4668                              <1> reloadgraphicsloop:
  4669 00003B85 8B7702              <1> 		mov esi, [edi + 2]
  4670 00003B88 668B5706            <1> 		mov dx, [edi + 6]
  4671 00003B8C 668B4F08            <1> 		mov cx, [edi + 8]
  4672 00003B90 668B07              <1> 		mov ax, [edi]
  4673 00003B93 668B5F0A            <1> 		mov bx, [edi + 10]
  4674 00003B97 893D[7C3B0000]      <1> 		mov [grpctblpos], edi
  4675 00003B9D 3B3D[22360000]      <1> 		cmp edi, [dragging]
  4676 00003BA3 741E                <1> 		je loadedgraphic
  4677 00003BA5 663D0100            <1> 		cmp ax, 1
  4678 00003BA9 0F8431000000        <1> 		je near icongraphic
  4679 00003BAF 663D0200            <1> 		cmp ax, 2
  4680 00003BB3 0F8437000000        <1> 		je near stringgraphic
  4681 00003BB9 663D0300            <1> 		cmp ax, 3
  4682 00003BBD 0F8416000000        <1> 		je near windowgraphic
  4683 00003BC3 8B3D[7C3B0000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  4684 00003BC9 81C710000000        <1> 		add edi, 16
  4685 00003BCF 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4686 00003BD5 7329                <1> 		jae donereloadgraphics
  4687 00003BD7 EBAC                <1> 		jmp reloadgraphicsloop
  4688 00003BD9 E89E030000          <1> windowgraphic:	call showwindow2
  4689 00003BDE EBE3                <1> 		jmp loadedgraphic
  4690 00003BE0 80E301              <1> icongraphic:	and bl, 1
  4691 00003BE3 881D[9C460000]      <1> 		mov [iconselected], bl
  4692 00003BE9 E8B4060000          <1> 		call showicon2
  4693 00003BEE EBD3                <1> 		jmp loadedgraphic
  4694 00003BF0 80E301              <1> stringgraphic:  and bl, 1
  4695 00003BF3 881D[E7340000]      <1> 		mov [mouseselecton], bl
  4696 00003BF9 E8DC020000          <1> 		call showstring2
  4697 00003BFE EBC3                <1> 		jmp loadedgraphic
  4698                              <1> donereloadgraphics:
  4699 00003C00 8B3D[22360000]      <1> 		mov edi, [dragging]
  4700 00003C06 81FF[00100000]      <1> 		cmp edi, graphicstable
  4701 00003C0C 7226                <1> 		jb notcorrectdrag
  4702 00003C0E 668B07              <1> 		mov ax, [edi]
  4703 00003C11 8B7702              <1> 		mov esi, [edi + 2]
  4704 00003C14 668B5706            <1> 		mov dx, [edi + 6]
  4705 00003C18 668B4F08            <1> 		mov cx, [edi + 8]
  4706 00003C1C 668B5F0A            <1> 		mov bx, [edi + 10]
  4707 00003C20 663D0100            <1> 		cmp ax, 1
  4708 00003C24 750F                <1> 		jne noticondragging
  4709 00003C26 80E301              <1> 		and bl, 1
  4710 00003C29 881D[9C460000]      <1> 		mov [iconselected], bl
  4711 00003C2F E86E060000          <1> 		call showicon2
  4712                              <1> notcorrectdrag:
  4713 00003C34 C3                  <1> 		ret
  4714                              <1> 
  4715                              <1> 	noticondragging:
  4716 00003C35 663D0200            <1> 		cmp ax, 2
  4717 00003C39 75F9                <1> 		jne notcorrectdrag
  4718 00003C3B 80E301              <1> 		and bl, 1
  4719 00003C3E 881D[E7340000]      <1> 		mov [mouseselecton], bl
  4720 00003C44 E891020000          <1> 		call showstring2
  4721 00003C49 EBE9                <1> 		jmp notcorrectdrag
  4722                              <1> 
  4723 00003C4B 00<rept>            <1> grphbuf times 16 db 0
  4724                              <1> 	graphicsadd:
  4725 00003C5B BF[00100000]        <1> 		mov edi, graphicstable
  4726                              <1> 	shwgrph1:
  4727 00003C60 397702              <1> 		cmp dword [edi + 2], esi
  4728 00003C63 7414                <1> 		je showgraphicsreplace2
  4729 00003C65 81C710000000        <1> 		add edi, 16
  4730 00003C6B 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4731 00003C71 0F8335020000        <1> 		jae near showgraphicsnew
  4732 00003C77 EBE7                <1> 		jmp shwgrph1
  4733                              <1> 	showgraphicsreplace2:
  4734 00003C79 8935[4D3C0000]      <1> 		mov [grphbuf + 2], esi
  4735 00003C7F 668915[513C0000]    <1> 		mov [grphbuf + 6], dx
  4736 00003C86 66890D[533C0000]    <1> 		mov [grphbuf + 8], cx
  4737 00003C8D 891D[573C0000]      <1> 		mov [grphbuf + 12], ebx
  4738 00003C93 B700                <1> 		mov bh, 0
  4739 00003C95 88E3                <1> 		mov bl, ah
  4740 00003C97 B400                <1> 		mov ah, 0
  4741 00003C99 66A3[553C0000]      <1> 		mov [grphbuf + 10], ax	
  4742 00003C9F 66891D[4B3C0000]    <1> 		mov [grphbuf], bx
  4743 00003CA6 66A1[4B3C0000]      <1> 		mov ax, [grphbuf]
  4744 00003CAC 663D0100            <1> 		cmp ax, 1
  4745 00003CB0 0F8419000000        <1> 		je near replaceicon
  4746 00003CB6 663D0200            <1> 		cmp ax, 2
  4747 00003CBA 0F8493000000        <1> 		je near replacestring
  4748 00003CC0 663D0300            <1> 		cmp ax, 3
  4749 00003CC4 0F840F010000        <1> 		je near replacewindow
  4750 00003CCA E9BA010000          <1> 		jmp showgraphicsreplace
  4751                              <1> 	replaceicon:
  4752 00003CCF 893D[26360000]      <1> 		mov [lastpos], edi
  4753 00003CD5 8935[2A360000]      <1> 		mov [lastpos + 4], esi
  4754 00003CDB 8B7702              <1> 		mov esi, [edi + 2]
  4755 00003CDE 668B5F0C            <1> 		mov bx, [edi + 12]
  4756 00003CE2 668B5706            <1> 		mov dx, [edi + 6]
  4757 00003CE6 668B4F08            <1> 		mov cx, [edi + 8]
  4758 00003CEA 668B06              <1> 		mov ax, [esi]
  4759 00003CED 66A3[2E360000]      <1> 		mov [colorbuf], ax
  4760 00003CF3 66A1[8C330000]      <1> 		mov ax, [background]
  4761 00003CF9 668906              <1> 		mov [esi], ax
  4762 00003CFC 8B5F0C              <1> 		mov ebx, [edi + 12]
  4763 00003CFF 668B470A            <1> 		mov ax, [edi + 10]
  4764 00003D03 2401                <1> 		and al, 1
  4765 00003D05 A2[9C460000]        <1> 		mov [iconselected], al
  4766 00003D0A 668B470A            <1> 		mov ax, [edi + 10]
  4767 00003D0E E88F050000          <1> 		call showicon2
  4768 00003D13 8B3D[26360000]      <1> 		mov edi, [lastpos]
  4769 00003D19 8B7702              <1> 		mov esi, [edi + 2]
  4770 00003D1C 66A1[2E360000]      <1> 		mov ax, [colorbuf]
  4771 00003D22 668906              <1> 		mov [esi], ax
  4772 00003D25 8B35[2A360000]      <1> 		mov esi, [lastpos + 4]
  4773 00003D2B 668B15[513C0000]    <1> 		mov dx, [grphbuf + 6]
  4774 00003D32 668B0D[533C0000]    <1> 		mov cx, [grphbuf + 8]
  4775 00003D39 668B1D[4B3C0000]    <1> 		mov bx, [grphbuf]
  4776 00003D40 66A1[553C0000]      <1> 		mov ax, [grphbuf + 10]
  4777 00003D46 88DC                <1> 		mov ah, bl
  4778 00003D48 8B1D[573C0000]      <1> 		mov ebx, [grphbuf + 12]
  4779 00003D4E E936010000          <1> 		jmp showgraphicsreplace
  4780                              <1> 	replacestring:
  4781 00003D53 893D[26360000]      <1> 		mov [lastpos], edi
  4782 00003D59 8935[2A360000]      <1> 		mov [lastpos + 4], esi
  4783 00003D5F 8B5F0C              <1> 		mov ebx, [edi + 12]
  4784 00003D62 8B7702              <1> 		mov esi, [edi + 2]
  4785 00003D65 668B5706            <1> 		mov dx, [edi + 6]
  4786 00003D69 668B4F08            <1> 		mov cx, [edi + 8]
  4787 00003D6D 66A1[163F0000]      <1> 		mov ax, [colorfont2]
  4788 00003D73 66A3[2E360000]      <1> 		mov [colorbuf], ax
  4789 00003D79 66A1[8C330000]      <1> 		mov ax, [background]
  4790 00003D7F 66A3[163F0000]      <1> 		mov [colorfont2], ax		
  4791 00003D85 8B5F0C              <1> 		mov ebx, [edi + 12]
  4792 00003D88 668B470A            <1> 		mov ax, [edi + 10]
  4793 00003D8C 2401                <1> 		and al, 1
  4794 00003D8E A2[E7340000]        <1> 		mov [mouseselecton], al
  4795 00003D93 668B470A            <1> 		mov ax, [edi + 10]
  4796 00003D97 E83E010000          <1> 		call showstring2
  4797 00003D9C 66A1[2E360000]      <1> 		mov ax, [colorbuf]
  4798 00003DA2 66A3[163F0000]      <1> 		mov [colorfont2], ax
  4799 00003DA8 8B3D[26360000]      <1> 		mov edi, [lastpos]
  4800 00003DAE 8B7702              <1> 		mov esi, [edi + 2]
  4801 00003DB1 668B15[513C0000]    <1> 		mov dx, [grphbuf + 6]
  4802 00003DB8 668B0D[533C0000]    <1> 		mov cx, [grphbuf + 8]
  4803 00003DBF 668B1D[4B3C0000]    <1> 		mov bx, [grphbuf]
  4804 00003DC6 66A1[553C0000]      <1> 		mov ax, [grphbuf + 10]
  4805 00003DCC 88DC                <1> 		mov ah, bl
  4806 00003DCE 8B1D[573C0000]      <1> 		mov ebx, [grphbuf + 12]
  4807 00003DD4 E9B0000000          <1> 		jmp showgraphicsreplace
  4808                              <1> 	replacewindow:
  4809 00003DD9 893D[26360000]      <1> 		mov [lastpos], edi
  4810 00003DDF 8935[2A360000]      <1> 		mov [lastpos + 4], esi
  4811 00003DE5 8B7702              <1> 		mov esi, [edi + 2]
  4812 00003DE8 8B3D[253F0000]      <1> 		mov edi, [windowbufloc]
  4813 00003DEE BA00000000          <1> 		mov edx, 0
  4814 00003DF3 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4815 00003DFA C1E204              <1> 		shl edx, 4
  4816 00003DFD 29D7                <1> 		sub edi, edx
  4817 00003DFF BA00000000          <1> 		mov edx, 0
  4818 00003E04 668B16              <1> 		mov dx, [esi]
  4819 00003E07 660316              <1> 		add dx, [esi]
  4820 00003E0A 668B4E02            <1> 		mov cx, [esi + 2]
  4821 00003E0E 6681C11000          <1> 		add cx, 16
  4822 00003E13 66A1[8C330000]      <1> 		mov ax, [background]
  4823                              <1> 	clearwindow:
  4824 00003E19 668907              <1> 		mov [edi], ax
  4825 00003E1C 81C702000000        <1> 		add edi, 2
  4826 00003E22 81EA02000000        <1> 		sub edx, 2
  4827 00003E28 81FA00000000        <1> 		cmp edx, 0
  4828 00003E2E 75E9                <1> 		jne clearwindow
  4829 00003E30 6649                <1> 		dec cx
  4830 00003E32 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4831 00003E39 662B16              <1> 		sub dx, [esi]
  4832 00003E3C 662B16              <1> 		sub dx, [esi]
  4833 00003E3F 01D7                <1> 		add edi, edx
  4834 00003E41 668B16              <1> 		mov dx, [esi]
  4835 00003E44 660316              <1> 		add dx, [esi]
  4836 00003E47 6681F90000          <1> 		cmp cx, 0
  4837 00003E4C 75CB                <1> 		jne clearwindow
  4838 00003E4E C605[C30E0000]00    <1> 		mov byte [termcopyon], 0
  4839 00003E55 8B3D[26360000]      <1> 		mov edi, [lastpos]
  4840 00003E5B 8B35[4D3C0000]      <1> 		mov esi, [grphbuf + 2]
  4841 00003E61 668B15[513C0000]    <1> 		mov dx, [grphbuf + 6]
  4842 00003E68 668B0D[533C0000]    <1> 		mov cx, [grphbuf + 8]
  4843 00003E6F 668B1D[4B3C0000]    <1> 		mov bx, [grphbuf]
  4844 00003E76 66A1[553C0000]      <1> 		mov ax, [grphbuf + 10]
  4845 00003E7C 88DC                <1> 		mov ah, bl
  4846 00003E7E 8B1D[573C0000]      <1> 		mov ebx, [grphbuf + 12]
  4847 00003E84 E900000000          <1> 		jmp showgraphicsreplace
  4848                              <1> 	showgraphicsreplace:
  4849 00003E89 897702              <1> 		mov [edi + 2], esi
  4850 00003E8C 66895706            <1> 		mov [edi + 6], dx
  4851 00003E90 66894F08            <1> 		mov [edi + 8], cx
  4852 00003E94 895F0C              <1> 		mov [edi + 12], ebx
  4853 00003E97 B700                <1> 		mov bh, 0
  4854 00003E99 88E3                <1> 		mov bl, ah
  4855 00003E9B B400                <1> 		mov ah, 0
  4856 00003E9D 6689470A            <1> 		mov [edi + 10], ax
  4857 00003EA1 66891F              <1> 		mov [edi], bx
  4858 00003EA4 8B5F0C              <1> 		mov ebx, [edi + 12]
  4859 00003EA7 668B470A            <1> 		mov ax, [edi + 10]
  4860 00003EAB C3                  <1> 		ret
  4861                              <1> 	showgraphicsnew:
  4862 00003EAC BF[00100000]        <1> 		mov edi, graphicstable
  4863                              <1> 	shwgrph2:
  4864 00003EB1 66813F0000          <1> 		cmp word [edi], 0
  4865 00003EB6 74D1                <1> 		je showgraphicsreplace
  4866 00003EB8 81C710000000        <1> 		add edi, 16
  4867 00003EBE 81FF[00120000]      <1> 		cmp edi, graphicstableend
  4868 00003EC4 72EB                <1> 		jb shwgrph2
  4869                              <1> 	showgraphicsdone:
  4870 00003EC6 C3                  <1> 		ret
  4871                              <1> 
  4872                              <1> 	showstring:
  4873 00003EC7 A2[E7340000]        <1> 		mov [mouseselecton], al
  4874 00003ECC 8025[E7340000]01    <1> 		and byte [mouseselecton], 1
  4875 00003ED3 B402                <1> 		mov ah, 2
  4876 00003ED5 E881FDFFFF          <1> 		call graphicsadd
  4877                              <1> 	showstring2:
  4878 00003EDA B400                <1> 		mov ah, 0
  4879 00003EDC 8A06                <1> 		mov al, [esi]
  4880 00003EDE 3C00                <1> 		cmp al, 0
  4881 00003EE0 742C                <1> 		je doneshowstring
  4882 00003EE2 46                  <1> 		inc esi
  4883 00003EE3 3CFF                <1> 		cmp al, 255
  4884 00003EE5 74F3                <1> 		je showstring2
  4885 00003EE7 8935[45460000]      <1> 		mov [showstringesi], esi
  4886 00003EED 668B1D[163F0000]    <1> 		mov bx, [colorfont2]
  4887 00003EF4 E883040000          <1> 		call showfontvesa
  4888 00003EF9 3C0D                <1> 		cmp al, 13
  4889 00003EFB 7409                <1> 		je noproceedshst
  4890 00003EFD 3C0A                <1> 		cmp al, 10
  4891 00003EFF 7405                <1> 		je noproceedshst
  4892 00003F01 6681C20800          <1> 		add dx, 8
  4893                              <1> 		noproceedshst
  4894 00003F06 8B35[45460000]      <1> 		mov esi, [showstringesi]
  4895 00003F0C EBCC                <1> 		jmp showstring2
  4896                              <1> 	doneshowstring:
  4897 00003F0E C605[E7340000]00    <1> 		mov byte [mouseselecton], 0
  4898 00003F15 C3                  <1> 		ret
  4899                              <1> 
  4900 00003F16 FFFF                <1> colorfont2 dw 0xFFFF
  4901 00003F18 00                  <1> colorcache db 0
  4902 00003F19 0000                <1> winvcopystx dw 0
  4903 00003F1B 0000                <1> winvcopysty dw 0
  4904 00003F1D 0000                <1> winvcopydx dw 0
  4905 00003F1F 0000                <1> winvcopycx dw 0
  4906 00003F21 FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4907 00003F25 00000000            <1> windowbufloc: dw 0,0
  4908                              <1> 
  4909                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4910 00003F29 C605[C20E0000]01    <1> 		mov byte [termguion], 1
  4911 00003F30 6681C11000          <1> 		add cx, 16
  4912 00003F35 668915[193F0000]    <1> 		mov [winvcopystx], dx
  4913 00003F3C 66890D[1B3F0000]    <1> 		mov [winvcopysty], cx
  4914 00003F43 668B16              <1> 		mov dx, [esi]
  4915 00003F46 668B4E02            <1> 		mov cx, [esi + 2]
  4916 00003F4A 6601D2              <1> 		add dx, dx
  4917 00003F4D 668915[1D3F0000]    <1> 		mov [winvcopydx], dx
  4918 00003F54 66890D[1F3F0000]    <1> 		mov [winvcopycx], cx
  4919 00003F5B 668B0D[1B3F0000]    <1> 		mov cx, [winvcopysty]
  4920 00003F62 6681E91000          <1> 		sub cx, 16
  4921 00003F67 668B15[193F0000]    <1> 		mov dx, [winvcopystx]
  4922 00003F6E C605[C30E0000]00    <1> 		mov byte [termcopyon], 0
  4923 00003F75 B403                <1> 		mov ah, 3
  4924 00003F77 E8DFFCFFFF          <1> 		call graphicsadd
  4925                              <1> 	showwindow2:
  4926 00003F7C 6681C11000          <1> 		add cx, 16
  4927 00003F81 668915[193F0000]    <1> 		mov [winvcopystx], dx
  4928 00003F88 66890D[1B3F0000]    <1> 		mov [winvcopysty], cx
  4929 00003F8F 668B16              <1> 		mov dx, [esi]
  4930 00003F92 668B4E02            <1> 		mov cx, [esi + 2]
  4931 00003F96 6601D2              <1> 		add dx, dx
  4932 00003F99 668915[1D3F0000]    <1> 		mov [winvcopydx], dx
  4933 00003FA0 66890D[1F3F0000]    <1> 		mov [winvcopycx], cx
  4934 00003FA7 8B3D[253F0000]      <1> 		mov edi, [windowbufloc]
  4935 00003FAD BA00000000          <1> 		mov edx, 0
  4936 00003FB2 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4937 00003FB9 C1E204              <1> 		shl edx, 4
  4938 00003FBC 29D7                <1> 		sub edi, edx
  4939 00003FBE 803D[C30E0000]00    <1> 		cmp byte [termcopyon], 0
  4940 00003FC5 753E                <1> 		jne nocleartitlebarpos
  4941 00003FC7 8B3D[7A6A0000]      <1> 		mov edi, [physbaseptr]
  4942 00003FCD BA00000000          <1> 		mov edx, 0
  4943 00003FD2 668B15[193F0000]    <1> 		mov dx, [winvcopystx]
  4944 00003FD9 01D7                <1> 		add edi, edx
  4945 00003FDB 668B0D[1B3F0000]    <1> 		mov cx, [winvcopysty]
  4946 00003FE2 6681E91000          <1> 		sub cx, 16
  4947 00003FE7 6681F90000          <1> 		cmp cx, 0
  4948 00003FEC 7417                <1> 		je nocleartitlebarpos
  4949                              <1> 	cleartitlebarpos:
  4950 00003FEE BA00000000          <1> 		mov edx, 0
  4951 00003FF3 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4952 00003FFA 01D7                <1> 		add edi, edx
  4953 00003FFC 6649                <1> 		dec cx
  4954 00003FFE 6681F90000          <1> 		cmp cx, 0
  4955 00004003 75E9                <1> 		jne cleartitlebarpos
  4956                              <1> 	nocleartitlebarpos:
  4957 00004005 66B91000            <1> 		mov cx, 16
  4958 00004009 668B15[1D3F0000]    <1> 		mov dx, [winvcopydx]
  4959 00004010 6681F90000          <1> 		cmp cx, 0
  4960 00004015 0F844B000000        <1> 		je near canceltitlebarput
  4961 0000401B 6681FA0000          <1> 		cmp dx, 0
  4962 00004020 0F8440000000        <1> 		je near canceltitlebarput
  4963                              <1> 	titlebarput:
  4964 00004026 66A1[213F0000]      <1> 		mov ax, [windowcolor]
  4965 0000402C 668907              <1> 		mov [edi], ax
  4966 0000402F 6681EA0200          <1> 		sub dx, 2
  4967 00004034 81C702000000        <1> 		add edi, 2
  4968 0000403A 6681FA0000          <1> 		cmp dx, 0
  4969 0000403F 75E5                <1> 		jne titlebarput
  4970 00004041 BA00000000          <1> 		mov edx, 0
  4971 00004046 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  4972 0000404D 6649                <1> 		dec cx
  4973 0000404F 662B15[1D3F0000]    <1> 		sub dx, [winvcopydx]
  4974 00004056 01D7                <1> 		add edi, edx
  4975 00004058 668B15[1D3F0000]    <1> 		mov dx, [winvcopydx]
  4976 0000405F 6681F90000          <1> 		cmp cx, 0
  4977 00004064 75C0                <1> 		jne titlebarput
  4978                              <1> 	canceltitlebarput:
  4979 00004066 893D[253F0000]      <1> 		mov [windowbufloc], edi
  4980 0000406C 803D[C30E0000]02    <1> 		cmp byte [termcopyon], 2
  4981 00004073 0F8463000000        <1> 		je near winvcpst
  4982 00004079 66B80000            <1> 		mov ax, 0
  4983 0000407D 81C604000000        <1> 		add esi, 4
  4984 00004083 668B15[193F0000]    <1> 		mov dx, [winvcopystx]
  4985 0000408A 668B0D[1B3F0000]    <1> 		mov cx, [winvcopysty]
  4986 00004091 6681E91000          <1> 		sub cx, 16
  4987 00004096 66BB0000            <1> 		mov bx, 0
  4988 0000409A C605[E7340000]01    <1> 		mov byte [mouseselecton], 1
  4989 000040A1 E834FEFFFF          <1> 		call showstring2
  4990 000040A6 B058                <1> 		mov al, "X"
  4991 000040A8 B400                <1> 		mov ah, 0
  4992 000040AA 668B1D[163F0000]    <1> 		mov bx, [colorfont2]
  4993 000040B1 668B15[193F0000]    <1> 		mov dx, [winvcopystx]
  4994 000040B8 668B0D[1B3F0000]    <1> 		mov cx, [winvcopysty]
  4995 000040BF 6681E91000          <1> 		sub cx, 16
  4996 000040C4 6681EA1400          <1> 		sub dx, 20
  4997 000040C9 660315[1D3F0000]    <1> 		add dx, [winvcopydx]
  4998 000040D0 C605[E7340000]01    <1> 		mov byte [mouseselecton], 1
  4999 000040D7 E8A0020000          <1> 		call showfontvesa
  5000                              <1> 	winvcpst:
  5001 000040DC 8B3D[253F0000]      <1> 		mov edi, [windowbufloc]
  5002 000040E2 E957000000          <1> 		jmp windowvideocopyset
  5003                              <1> 
  5004                              <1> 	windowvideocopy:
  5005 000040E7 8B3D[253F0000]      <1> 		mov edi, [windowbufloc]
  5006 000040ED 3B3D[7A6A0000]      <1> 		cmp edi, [physbaseptr]
  5007 000040F3 0F8345000000        <1> 		jae near windowvideocopyset
  5008 000040F9 B900000000          <1> 		mov ecx, 0
  5009 000040FE BA00000000          <1> 		mov edx, 0
  5010 00004103 668B15[193F0000]    <1> 		mov dx, [winvcopystx]
  5011 0000410A 668B0D[1B3F0000]    <1> 		mov cx, [winvcopysty]
  5012 00004111 8B3D[7A6A0000]      <1> 		mov edi, [physbaseptr]
  5013 00004117 01D7                <1> 		add edi, edx
  5014 00004119 81F900000000        <1> 		cmp ecx, 0
  5015 0000411F 741D                <1> 		je windowvideocopyset
  5016                              <1> 	yrescopylp:
  5017 00004121 BA00000000          <1> 		mov edx, 0
  5018 00004126 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  5019 0000412D 01D7                <1> 		add edi, edx
  5020 0000412F 6649                <1> 		dec cx
  5021 00004131 6681F90000          <1> 		cmp cx, 0
  5022 00004136 75E9                <1> 		jne yrescopylp
  5023 00004138 893D[253F0000]      <1> 		mov [windowbufloc], edi
  5024                              <1> 	windowvideocopyset:
  5025 0000413E 66B90000            <1> 		mov cx, 0
  5026 00004142 66890D[87420000]    <1> 		mov [charposline], cx
  5027 00004149 BE[8F1C0000]        <1> 		mov esi, videobuf2
  5028 0000414E 8935[89420000]      <1> 		mov [charposvbuf], esi
  5029 00004154 8A5E01              <1> 		mov bl, [esi + 1]
  5030 00004157 881D[183F0000]      <1> 		mov [colorcache], bl
  5031 0000415D 8A1E                <1> 		mov bl, [esi]
  5032 0000415F B700                <1> 		mov bh, 0
  5033 00004161 66C1E304            <1> 		shl bx, 4
  5034 00004165 678AB7[4258]        <1> 		mov dh, [fonts + bx]
  5035 0000416A D0CE                <1> 		ror dh, 1
  5036 0000416C 89FE                <1> 		mov esi, edi
  5037                              <1> 	copywindow:
  5038 0000416E B201                <1> 		mov dl, 1
  5039 00004170 D0C6                <1> 		rol dh, 1
  5040 00004172 20F2                <1> 		and dl, dh
  5041 00004174 803D[183F0000]10    <1> 		cmp byte [colorcache], 0x10
  5042 0000417B 731C                <1> 		jae switchwincolors
  5043 0000417D 66A1[233F0000]      <1> 		mov ax, [windowcolor + 2]
  5044 00004183 668907              <1> 		mov [edi], ax
  5045 00004186 80FA00              <1> 		cmp dl, 0
  5046 00004189 7425                <1> 		je nowritewin
  5047 0000418B 66A1[213F0000]      <1> 		mov ax, [windowcolor]
  5048 00004191 668907              <1> 		mov [edi], ax
  5049 00004194 E917000000          <1> 		jmp nowritewin
  5050                              <1> 	switchwincolors:
  5051 00004199 66A1[213F0000]      <1> 		mov ax, [windowcolor]
  5052 0000419F 668907              <1> 		mov [edi], ax
  5053 000041A2 80FA00              <1> 		cmp dl, 0
  5054 000041A5 7409                <1> 		je nowritewin
  5055 000041A7 66A1[233F0000]      <1> 		mov ax, [windowcolor + 2]
  5056 000041AD 668907              <1> 		mov [edi], ax
  5057                              <1> 	nowritewin:
  5058 000041B0 81C702000000        <1> 		add edi, 2
  5059 000041B6 FEC1                <1> 		inc cl
  5060 000041B8 80F908              <1> 		cmp cl, 8
  5061 000041BB 75B1                <1> 		jne copywindow
  5062 000041BD 6643                <1> 		inc bx
  5063 000041BF B100                <1> 		mov cl, 0
  5064 000041C1 BA00000000          <1> 		mov edx, 0
  5065 000041C6 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  5066 000041CD 01D6                <1> 		add esi, edx
  5067 000041CF 89F7                <1> 		mov edi, esi
  5068 000041D1 678AB7[4258]        <1> 		mov dh, [fonts + bx]
  5069 000041D6 D0CE                <1> 		ror dh, 1
  5070 000041D8 FEC5                <1> 		inc ch
  5071 000041DA 80FD10              <1> 		cmp ch, 16
  5072 000041DD 758F                <1> 		jne copywindow
  5073 000041DF 66B90000            <1> 		mov cx, 0
  5074 000041E3 8B3D[89420000]      <1> 		mov edi, [charposvbuf]
  5075 000041E9 81C702000000        <1> 		add edi, 2
  5076 000041EF 81FF[4F2F0000]      <1> 		cmp edi, videobufend
  5077 000041F5 7379                <1> 		jae donewincopynow
  5078 000041F7 8A5F01              <1> 		mov bl, [edi + 1]
  5079 000041FA 881D[183F0000]      <1> 		mov [colorcache], bl
  5080 00004200 8A1F                <1> 		mov bl, [edi]
  5081 00004202 B700                <1> 		mov bh, 0
  5082 00004204 66C1E304            <1> 		shl bx, 4
  5083 00004208 893D[89420000]      <1> 		mov [charposvbuf], edi
  5084 0000420E BA00000000          <1> 		mov edx, 0
  5085 00004213 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  5086 0000421A C1E204              <1> 		shl edx, 4
  5087 0000421D 29D6                <1> 		sub esi, edx
  5088 0000421F 81C610000000        <1> 		add esi, 16
  5089 00004225 89F7                <1> 		mov edi, esi
  5090 00004227 668B0D[87420000]    <1> 		mov cx, [charposline]
  5091 0000422E 6641                <1> 		inc cx
  5092 00004230 6681F95000          <1> 		cmp cx, 80
  5093 00004235 7317                <1> 		jae fixwindowcopy
  5094 00004237 66890D[87420000]    <1> 		mov [charposline], cx
  5095 0000423E 66B90000            <1> 		mov cx, 0
  5096 00004242 678AB7[4258]        <1> 		mov dh, [fonts + bx]
  5097 00004247 D0CE                <1> 		ror dh, 1
  5098 00004249 E920FFFFFF          <1> 		jmp copywindow
  5099                              <1> fixwindowcopy:
  5100 0000424E 66B90000            <1> 		mov cx, 0
  5101 00004252 66890D[87420000]    <1> 		mov [charposline], cx
  5102 00004259 662B15[1D3F0000]    <1> 		sub dx, [winvcopydx]
  5103 00004260 01D6                <1> 		add esi, edx
  5104 00004262 89F7                <1> 		mov edi, esi
  5105 00004264 678AB7[4258]        <1> 		mov dh, [fonts + bx]
  5106 00004269 D0CE                <1> 		ror dh, 1
  5107 0000426B E9FEFEFFFF          <1> 		jmp copywindow
  5108                              <1> donewincopynow:
  5109 00004270 E879D2FFFF          <1> 		call switchtermcursor
  5110 00004275 803D[C30E0000]01    <1> 		cmp byte [termcopyon], 1
  5111 0000427C 7501                <1> 		jne forgetresetstuff
  5112 0000427E 61                  <1> 		popa
  5113                              <1> forgetresetstuff:
  5114 0000427F C605[C30E0000]00    <1> 		mov byte [termcopyon], 0
  5115 00004286 C3                  <1> 		ret
  5116                              <1> 
  5117 00004287 0000                <1> charposline dw 0
  5118 00004289 00000000            <1> charposvbuf dw 0,0
  5119 0000428D 0000                <1> iconcolor dw 0
  5120                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  5121 0000428F A2[9C460000]        <1> 		mov [iconselected], al
  5122 00004294 8025[9C460000]01    <1> 		and byte [iconselected], 1
  5123 0000429B B401                <1> 		mov ah, 1
  5124 0000429D E8B9F9FFFF          <1> 		call graphicsadd
  5125                              <1> 	showicon2:
  5126 000042A2 8B3D[7A6A0000]      <1> 		mov edi, [physbaseptr]
  5127 000042A8 6601D2              <1> 		add dx, dx
  5128 000042AB 663B15[6C430000]    <1> 		cmp dx, [resolutionx2]
  5129 000042B2 720C                <1> 		jb screenxgood
  5130 000042B4 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  5131 000042BB 6681EA4000          <1> 		sub dx, 64
  5132                              <1> 	screenxgood:
  5133 000042C0 6681F90000          <1> 		cmp cx, 0
  5134 000042C5 7425                <1> 		je noscreenygoodchk
  5135 000042C7 663B0D[68430000]    <1> 		cmp cx, [resolutiony]
  5136 000042CE 720C                <1> 		jb screenygood
  5137 000042D0 668B0D[68430000]    <1> 		mov cx, [resolutiony]
  5138 000042D7 6681E92000          <1> 		sub cx, 32
  5139                              <1> 	screenygood:
  5140 000042DC BB00000000          <1> 		mov ebx, 0
  5141 000042E1 668B1D[6C430000]    <1> 		mov bx, [resolutionx2]
  5142 000042E8 01DF                <1> 		add edi, ebx
  5143 000042EA E2F0                <1> 		loop screenygood
  5144                              <1> 	noscreenygoodchk:
  5145 000042EC BB00000000          <1> 		mov ebx, 0
  5146 000042F1 6689D3              <1> 		mov bx, dx
  5147 000042F4 01DF                <1> 		add edi, ebx
  5148 000042F6 66B90000            <1> 		mov cx, 0
  5149 000042FA 668B06              <1> 		mov ax, [esi]
  5150 000042FD 81C602000000        <1> 		add esi, 2
  5151 00004303 66A3[8D420000]      <1> 		mov [iconcolor], ax
  5152                              <1> 	writeicon:
  5153 00004309 8B06                <1> 		mov eax, [esi]
  5154 0000430B D1C0                <1> 		rol eax, 1
  5155 0000430D B100                <1> 		mov cl, 0
  5156                              <1> 	writeiconline:
  5157 0000430F B201                <1> 		mov dl, 1
  5158 00004311 20C2                <1> 		and dl, al
  5159 00004313 3215[9C460000]      <1> 		xor dl, [iconselected]
  5160 00004319 668B1D[8C330000]    <1> 		mov bx, [background]
  5161 00004320 66891F              <1> 		mov [edi], bx
  5162 00004323 80FA00              <1> 		cmp dl, 0
  5163 00004326 740A                <1> 		je noiconline
  5164 00004328 668B15[8D420000]    <1> 		mov dx, [iconcolor]
  5165 0000432F 668917              <1> 		mov [edi], dx
  5166                              <1> 	noiconline:
  5167 00004332 81C702000000        <1> 		add edi, 2
  5168 00004338 D1C0                <1> 		rol eax, 1
  5169 0000433A FEC1                <1> 		inc cl
  5170 0000433C 80F920              <1> 		cmp cl, 32
  5171 0000433F 72CE                <1> 		jb writeiconline
  5172 00004341 81C604000000        <1> 		add esi, 4
  5173 00004347 FEC5                <1> 		inc ch
  5174 00004349 BA00000000          <1> 		mov edx, 0
  5175 0000434E 668B15[6C430000]    <1> 		mov dx, [resolutionx2]
  5176 00004355 01D7                <1> 		add edi, edx
  5177 00004357 81EF40000000        <1> 		sub edi, 64
  5178 0000435D 80FD20              <1> 		cmp ch, 32
  5179 00004360 72A7                <1> 		jb writeicon
  5180 00004362 B800000000          <1> 		mov eax, 0
  5181 00004367 C3                  <1> 		ret
  5182                              <1> 
  5183 00004368 0000                <1> resolutiony dw 0
  5184 0000436A 0000                <1> resolutionx dw 0
  5185 0000436C 0000                <1> resolutionx2 dw 0
  5186 0000436E 02                  <1> resolutionbytes db 2
  5187 0000436F 0000                <1> posxvesa dw 0
  5188 00004371 0000                <1> posyvesa dw 0
  5189 00004373 FFFF                <1> colorfont dw 0xFFFF
  5190                              <1> savefontvesa:		;;same rules as showfontvesa
  5191 00004375 C605[E6340000]01    <1> 	mov byte [savefonton], 1
  5192                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  5193 0000437C 3CFF                <1> 	cmp al, 255
  5194 0000437E 7501                <1> 	jne nostopshowfont
  5195 00004380 C3                  <1> 	ret
  5196                              <1> nostopshowfont:
  5197 00004381 66890D[71430000]    <1> 	mov [posyvesa], cx
  5198 00004388 3C0A                <1> 	cmp al, 10
  5199 0000438A 0F8435000000        <1> 	je near goodvesafontx
  5200 00004390 3C0D                <1> 	cmp al, 13
  5201 00004392 0F842D000000        <1> 	je near goodvesafontx
  5202 00004398 B900000000          <1> 	mov ecx, 0
  5203 0000439D 668B0D[6C430000]    <1> 	mov cx, [resolutionx2]
  5204 000043A4 6681E91000          <1> 	sub cx, 16
  5205 000043A9 6639CA              <1> 	cmp dx, cx
  5206 000043AC 7617                <1> 	jbe goodvesafontx
  5207 000043AE 66BA0000            <1> 	mov dx, 0
  5208 000043B2 668B0D[71430000]    <1> 	mov cx, [posyvesa]
  5209 000043B9 6681C11000          <1> 	add cx, 16
  5210 000043BE 66890D[71430000]    <1> 	mov [posyvesa], cx
  5211                              <1> goodvesafontx:
  5212 000043C5 668B0D[71430000]    <1> 	mov cx, [posyvesa]
  5213 000043CC 668915[6F430000]    <1> 	mov [posxvesa], dx
  5214 000043D3 8B3D[7A6A0000]      <1> 	mov edi, [physbaseptr]
  5215 000043D9 66891D[73430000]    <1> 	mov [colorfont], bx
  5216 000043E0 BB00000000          <1> 	mov ebx, 0
  5217 000043E5 88C3                <1> 	mov bl, al
  5218 000043E7 B800000000          <1> 	mov eax, 0
  5219 000043EC 88D8                <1> 	mov al, bl
  5220 000043EE 6689D3              <1> 	mov bx, dx
  5221 000043F1 89DA                <1> 	mov edx, ebx
  5222 000043F3 BB00000000          <1> 	mov ebx, 0
  5223 000043F8 6681F90000          <1> 	cmp cx, 0
  5224 000043FD 7415                <1> 	je vesaposloopdn
  5225 000043FF 668B1D[6C430000]    <1> 	mov bx, [resolutionx2]
  5226                              <1> vesaposloop:
  5227 00004406 01DA                <1> 	add edx, ebx
  5228 00004408 6681E90100          <1> 	sub cx, 1
  5229 0000440D 6681F90000          <1> 	cmp cx, 0
  5230 00004412 75F2                <1> 	jne vesaposloop
  5231                              <1> vesaposloopdn:
  5232 00004414 01D7                <1> 	add edi, edx
  5233 00004416 BE[42580000]        <1> 	mov esi, fonts
  5234                              <1> findfontvesa:
  5235 0000441B B400                <1> 	mov ah, 0
  5236 0000441D 3C0A                <1> 	cmp al, 10
  5237 0000441F 0F840C010000        <1> 	je near nwlinevesa
  5238 00004425 3C0D                <1> 	cmp al, 13
  5239 00004427 0F8419010000        <1> 	je near cretvesa
  5240 0000442D C1E004              <1> 	shl eax, 4
  5241 00004430 01C6                <1> 	add esi, eax
  5242 00004432 C1E804              <1> 	shr eax, 4
  5243 00004435 81FE[42680000]      <1> 	cmp esi, fontend
  5244 0000443B 0F83BF000000        <1> 	jae near donefontvesa
  5245 00004441 4E                  <1> 	dec esi
  5246                              <1> foundfontvesa:
  5247 00004442 46                  <1> 	inc esi
  5248 00004443 803D[E6340000]01    <1> 	cmp byte [savefonton], 1
  5249 0000444A 0F840A010000        <1> 	je near vesafontsaver
  5250 00004450 B100                <1> 	mov cl, 0
  5251 00004452 8A06                <1> 	mov al, [esi]
  5252 00004454 668B15[6C430000]    <1> 	mov dx, [resolutionx2]
  5253 0000445B 662B15[6F430000]    <1> 	sub dx, [posxvesa]
  5254 00004462 6681FA1000          <1> 	cmp dx, 16
  5255 00004467 7708                <1> 	ja paintfontvesa
  5256 00004469 D0EA                <1> 	shr dl, 1
  5257 0000446B 8815[30450000]      <1> 	mov [charwidth], dl
  5258                              <1> paintfontvesa:
  5259 00004471 B201                <1> 	mov dl, 1
  5260 00004473 20C2                <1> 	and dl, al
  5261 00004475 803D[E5340000]01    <1> 	cmp byte [showcursorfonton], 1
  5262 0000447C 0F8435000000        <1> 	je near nodelpaintedfont
  5263 00004482 803D[E5340000]02    <1> 	cmp byte [showcursorfonton], 2
  5264 00004489 0F8518000000        <1> 	jne near noswitchcursorfonton
  5265 0000448F 80FA00              <1> 	cmp dl, 0
  5266 00004492 0F842E000000        <1> 	je near nopixelset
  5267 00004498 668B1D[73430000]    <1> 	mov bx, [colorfont]
  5268 0000449F 66891F              <1> 	mov [edi], bx
  5269 000044A2 E91F000000          <1> 	jmp nopixelset
  5270                              <1> noswitchcursorfonton:
  5271 000044A7 3215[E7340000]      <1> 	xor dl, [mouseselecton]
  5272 000044AD 668B1D[8C330000]    <1> 	mov bx, [background]
  5273 000044B4 66891F              <1> 	mov [edi], bx
  5274                              <1> nodelpaintedfont:
  5275 000044B7 80FA00              <1> 	cmp dl, 0
  5276 000044BA 740A                <1> 	je nopixelset
  5277 000044BC 668B15[73430000]    <1> 	mov dx, [colorfont]
  5278 000044C3 668917              <1> 	mov [edi], dx
  5279                              <1> nopixelset:
  5280 000044C6 81C702000000        <1> 	add edi, 2
  5281 000044CC D0C0                <1> 	rol al, 1
  5282 000044CE FEC1                <1> 	inc cl
  5283 000044D0 3A0D[30450000]      <1> 	cmp cl, [charwidth]
  5284 000044D6 7299                <1> 	jb paintfontvesa
  5285 000044D8 FEC5                <1> 	inc ch
  5286 000044DA BA00000000          <1> 	mov edx, 0
  5287 000044DF 668B15[6C430000]    <1> 	mov dx, [resolutionx2]
  5288 000044E6 01D7                <1> 	add edi, edx
  5289 000044E8 BA00000000          <1> 	mov edx, 0
  5290 000044ED 8A15[30450000]      <1> 	mov dl, [charwidth]
  5291 000044F3 00D2                <1> 	add dl, dl
  5292 000044F5 29D7                <1> 	sub edi, edx
  5293 000044F7 80FD10              <1> 	cmp ch, 16
  5294 000044FA 0F8242FFFFFF        <1> 	jb foundfontvesa
  5295                              <1> donefontvesa:
  5296 00004500 B208                <1> 	mov dl, 8
  5297 00004502 8815[30450000]      <1> 	mov [charwidth], dl
  5298 00004508 668B15[6F430000]    <1> 	mov dx, [posxvesa]
  5299 0000450F 8A1D[30450000]      <1> 	mov bl, [charwidth]
  5300 00004515 B700                <1> 	mov bh, 0
  5301 00004517 6601DA              <1> 	add dx, bx
  5302 0000451A 668B1D[73430000]    <1> 	mov bx, [colorfont]
  5303 00004521 668B0D[71430000]    <1> 	mov cx, [posyvesa]
  5304 00004528 C605[E6340000]00    <1> 	mov byte [savefonton], 0
  5305 0000452F C3                  <1> 	ret
  5306 00004530 08                  <1> charwidth db 8
  5307                              <1> nwlinevesa:
  5308 00004531 668B0D[71430000]    <1> 	mov cx, [posyvesa]
  5309 00004538 6681C11000          <1> 	add cx, 16
  5310 0000453D 66890D[71430000]    <1> 	mov [posyvesa], cx
  5311 00004544 EBBA                <1> 	jmp donefontvesa
  5312                              <1> cretvesa:
  5313 00004546 668B15[6F430000]    <1> 	mov dx, [posxvesa]
  5314 0000454D 66BA0000            <1> 	mov dx, 0
  5315 00004551 668915[6F430000]    <1> 	mov [posxvesa], dx
  5316 00004558 EBA6                <1> 	jmp donefontvesa
  5317                              <1> vesafontsaver:
  5318 0000455A B000                <1> 	mov al, 0
  5319 0000455C B100                <1> 	mov cl, 0
  5320                              <1> vesafontsaver2:
  5321 0000455E 668B17              <1> 	mov dx, [edi]
  5322 00004561 663B15[73430000]    <1> 	cmp dx, [colorfont]
  5323 00004568 7432                <1> 	je colorfontmatch
  5324                              <1> donecolormatch:
  5325 0000456A 81C702000000        <1> 	add edi, 2
  5326 00004570 D0C0                <1> 	rol al, 1
  5327 00004572 FEC1                <1> 	inc cl
  5328 00004574 80F908              <1> 	cmp cl, 8
  5329 00004577 72E5                <1> 	jb vesafontsaver2
  5330 00004579 8806                <1> 	mov [esi], al
  5331 0000457B 46                  <1> 	inc esi
  5332 0000457C FEC5                <1> 	inc ch
  5333 0000457E BA00000000          <1> 	mov edx, 0
  5334 00004583 668B15[6C430000]    <1> 	mov dx, [resolutionx2]
  5335 0000458A 01D7                <1> 	add edi, edx
  5336 0000458C 81EF10000000        <1> 	sub edi, 16
  5337 00004592 80FD10              <1> 	cmp ch, 16
  5338 00004595 72C3                <1> 	jb vesafontsaver
  5339 00004597 E964FFFFFF          <1> 	jmp donefontvesa
  5340                              <1> colorfontmatch:
  5341 0000459C 0401                <1> 	add al, 1
  5342 0000459E EBCA                <1> 	jmp donecolormatch
  5343                              <1> 	
  5344                              <1> showbmp:
  5345 000045A0 668B06              <1> 	mov ax, [esi]
  5346 000045A3 663D424D            <1> 	cmp ax, "BM"
  5347 000045A7 0F858E000000        <1> 	jne near endedbmp
  5348 000045AD 8B3D[7A6A0000]      <1> 	mov edi, [physbaseptr]
  5349 000045B3 6689D0              <1> 	mov ax, dx
  5350 000045B6 6689CB              <1> 	mov bx, cx
  5351 000045B9 B900000000          <1> 	mov ecx, 0
  5352 000045BE BA00000000          <1> 	mov edx, 0
  5353 000045C3 6689D9              <1> 	mov cx, bx
  5354 000045C6 6689C2              <1> 	mov dx, ax
  5355 000045C9 01D7                <1> 	add edi, edx
  5356 000045CB 01D7                <1> 	add edi, edx
  5357 000045CD BA00000000          <1> 	mov edx, 0
  5358 000045D2 668B15[6C430000]    <1> 	mov dx, [resolutionx2]
  5359 000045D9 41                  <1> 	inc ecx
  5360 000045DA 034E16              <1> 	add ecx, [esi + 22]
  5361                              <1> bmplocloop:
  5362 000045DD 01D7                <1> 	add edi, edx
  5363 000045DF E2FC                <1> 	loop bmplocloop
  5364 000045E1 29D7                <1> 	sub edi, edx
  5365 000045E3 8B5612              <1> 	mov edx, [esi + 18]
  5366 000045E6 8B4E16              <1> 	mov ecx, [esi + 22]
  5367 000045E9 8B460A              <1> 	mov eax, [esi + 10]
  5368 000045EC 8B5E02              <1> 	mov ebx, [esi + 2]
  5369 000045EF 01F3                <1> 	add ebx, esi
  5370 000045F1 891D[41460000]      <1> 	mov [bmpend], ebx
  5371 000045F7 89D3                <1> 	mov ebx, edx
  5372 000045F9 01C6                <1> 	add esi, eax
  5373                              <1> ldxbmp:
  5374 000045FB 668B06              <1> 	mov ax, [esi]
  5375 000045FE 668907              <1> 	mov [edi], ax
  5376 00004601 81C702000000        <1> 	add edi, 2
  5377 00004607 81C602000000        <1> 	add esi, 2
  5378 0000460D 3B35[41460000]      <1> 	cmp esi, [bmpend]
  5379 00004613 7726                <1> 	ja endedbmp
  5380 00004615 4A                  <1> 	dec edx
  5381 00004616 81FA00000000        <1> 	cmp edx, 0
  5382 0000461C 77DD                <1> 	ja ldxbmp
  5383 0000461E BA00000000          <1> 	mov edx, 0
  5384 00004623 668B15[6C430000]    <1> 	mov dx, [resolutionx2]
  5385 0000462A 29DF                <1> 	sub edi, ebx
  5386 0000462C 29DF                <1> 	sub edi, ebx
  5387 0000462E 29D7                <1> 	sub edi, edx
  5388 00004630 49                  <1> 	dec ecx
  5389 00004631 89DA                <1> 	mov edx, ebx
  5390 00004633 81F900000000        <1> 	cmp ecx, 0
  5391 00004639 77C0                <1> 	ja ldxbmp
  5392                              <1> endedbmp:
  5393 0000463B E875EFFFFF          <1> 	call switchmousepos2
  5394 00004640 C3                  <1> 	ret
  5395                              <1> 	
  5396 00004641 00000000            <1> 	bmpend dd 0
  5397                              <1> 
  5398                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5399 00004645 00000000            <1> 	showstringesi dw 0,0
  5400 00004649 00                  <1> 	mouseon db 0
  5401 0000464A 737461727400        <1> 	start	db "start",0
  5402 00004650 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  5403 00004659 426F6F2100          <1> 	boomsg db "Boo!",0
  5404 0000465E 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  5405 00004667 73206561737920746F- <1>
  5406 00004670 20647261772E00      <1>
  5407 00004677 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  5408 00004680 6D206E6F6D00        <1>
  5409 00004686 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  5410 0000468F 75636B7300          <1>
  5411 00004694 5800                <1> 	xmsg db "X",0
  5412 00004696 0000                <1> 	icon dw 0	;pointer to icon
  5413 00004698 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  5414 0000469C 00                  <1> 	iconselected db 0
  5415                              <1> 	
  5416                              <1> 	boo:
  5417 0000469D BE[59460000]        <1> 		mov esi, boomsg
  5418 000046A2 66BA6400            <1> 		mov dx, 100
  5419 000046A6 66B94001            <1> 		mov cx, 320
  5420 000046AA BB00000000          <1> 		mov ebx, 0
  5421 000046AF 66B80000            <1> 		mov ax, 0
  5422 000046B3 E90FF8FFFF          <1> 		jmp showstring
  5423                              <1> 
  5424                              <1> 	pacmannomnom:
  5425 000046B8 BE[77460000]        <1> 		mov esi, pacnom
  5426 000046BD 66BA8200            <1> 		mov dx, 130
  5427 000046C1 66B93C00            <1> 		mov cx, 60
  5428 000046C5 BB00000000          <1> 		mov ebx, 0
  5429 000046CA 66B80000            <1> 		mov ax, 0
  5430 000046CE E9F4F7FFFF          <1> 		jmp showstring	
  5431                              <1> 	
  5432                              <1> 	noie:
  5433 000046D3 BE[67470000]        <1> 		mov esi, termwindow
  5434 000046D8 66BA0000            <1> 		mov dx, 0
  5435 000046DC 66B90000            <1> 		mov cx, 0
  5436 000046E0 BB[13150000]        <1> 		mov ebx, os
  5437                              <1> ;;		mov ebx, internettest
  5438 000046E5 891D[FF030000]      <1> 		mov [user2codepoint], ebx
  5439 000046EB 66B80000            <1> 		mov ax, 0
  5440 000046EF E835F8FFFF          <1> 		call showwindow
  5441                              <1> ;;		jmp internettest
  5442 000046F4 E91ACEFFFF          <1> 		jmp os
  5443 000046F9 C3                  <1> 		ret
  5444                              <1> 
  5445                              <1> 	gotomenuboot:
  5446 000046FA BE[67470000]        <1> 		mov esi, termwindow
  5447 000046FF 66BA0000            <1> 		mov dx, 0
  5448 00004703 66B90000            <1> 		mov cx, 0
  5449 00004707 BB[13150000]        <1> 		mov ebx, os
  5450 0000470C 891D[FF030000]      <1> 		mov [user2codepoint], ebx
  5451 00004712 66B80000            <1> 		mov ax, 0
  5452 00004716 E80EF8FFFF          <1> 		call showwindow
  5453 0000471B E9F3CDFFFF          <1> 		jmp os
  5454 00004720 C3                  <1> 		ret
  5455                              <1> 
  5456                              <1> 	winblows:
  5457 00004721 BE[86460000]        <1> 		mov esi, winmsg
  5458 00004726 66BA0000            <1> 		mov dx, 0
  5459 0000472A 668B0D[68430000]    <1> 		mov cx, [resolutiony]
  5460 00004731 6681E92000          <1> 		sub cx, 32
  5461 00004736 BB00000000          <1> 		mov ebx, 0
  5462 0000473B B400                <1> 		mov ah, 0
  5463 0000473D B011                <1> 		mov al, 00010001b
  5464 0000473F E883F7FFFF          <1> 		call showstring
  5465 00004744 BE[50460000]        <1> 		mov esi, gotomenu
  5466 00004749 668B0D[68430000]    <1> 		mov cx, [resolutiony]
  5467 00004750 6681E93000          <1> 		sub cx, 48
  5468 00004755 66BA0000            <1> 		mov dx, 0
  5469 00004759 B400                <1> 		mov ah, 0
  5470 0000475B B010                <1> 		mov al, 00010000b
  5471 0000475D BB[FA460000]        <1> 		mov ebx, gotomenuboot
  5472 00004762 E960F7FFFF          <1> 		jmp showstring
  5473                              <1> 
  5474 00004767 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  5475 0000476B 5465726D696E616C00  <1> 	termmsg:	db "Terminal",0	;;window title
  5476                              <1> 	
  5477 0000476B <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  5478 0000476B <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  5479 0000476B <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  5480 0000476B <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  5481 0000476B <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  5482                                      ;%include 'source/network.asm'
  5483                                  	%include 'source/rtl8139.asm'
  5484                              <1> ;;rtl8139.asm
  5485                              <1> initcard:	;;should find card, get mac, and initialize card
  5486 000049FE B800000000          <1> 	mov eax, 0
  5487 00004A03 A2[384D0000]        <1> 	mov [pcifunction], al
  5488 00004A08 A2[364D0000]        <1> 	mov [pcibus], al
  5489 00004A0D A2[374D0000]        <1> 	mov [pcidevice], al
  5490 00004A12 B002                <1> 	mov al, 0x02 ;;type code
  5491 00004A14 A2[BB4D0000]        <1> 	mov [pcitype], al
  5492 00004A19 E81D030000          <1> 	call getpciport
  5493                              <1> initnic:		;;;;Here i tried the rtl8139 interface, fuck it
  5494 00004A1E 8915[0D4C0000]      <1> 	mov [basenicaddr], edx
  5495 00004A24 89D1                <1> 	mov ecx, edx
  5496 00004A26 C605[871A0000]03    <1> 	mov byte [firsthexshown], 3
  5497 00004A2D E86AD0FFFF          <1> 	call showhex	;;for debugging, please remove
  5498 00004A32 BE[1F340000]        <1> 	mov esi, rbuffstart
  5499 00004A37 B900200000          <1> 	mov ecx, 8192
  5500 00004A3C B800000000          <1> 	mov eax, 0
  5501                              <1> clearrbuff:		;;clear receive buffer which starts at rbuffstart
  5502 00004A41 8806                <1> 	mov [esi], al
  5503 00004A43 46                  <1> 	inc esi
  5504 00004A44 6649                <1> 	dec cx
  5505 00004A46 6681F90000          <1> 	cmp cx, 0
  5506 00004A4B 75F4                <1> 	jne clearrbuff
  5507                              <1> findmac:
  5508 00004A4D 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5509 00004A53 BF[154C0000]        <1> 	mov edi, sysmac
  5510 00004A58 B906000000          <1> 	mov ecx, 6
  5511                              <1> macputloop:
  5512 00004A5D EC                  <1> 	in al, dx
  5513 00004A5E 8807                <1> 	mov [edi], al
  5514 00004A60 47                  <1> 	inc edi
  5515 00004A61 42                  <1> 	inc edx
  5516 00004A62 49                  <1> 	dec ecx
  5517 00004A63 75F8                <1> 	jnz macputloop
  5518 00004A65 B9[154C0000]        <1> 	mov ecx, sysmac
  5519 00004A6A E837010000          <1> 	call showmac
  5520                              <1> resetnic:
  5521 00004A6F 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5522 00004A75 81C252000000        <1> 	add edx, 0x52
  5523 00004A7B B000                <1> 	mov al, 0
  5524 00004A7D EE                  <1> 	out dx, al	;;WAKE UP!!!!
  5525 00004A7E 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5526 00004A84 81C237000000        <1> 	add edx, 0x37
  5527 00004A8A B010                <1> 	mov al, 0x10
  5528 00004A8C EE                  <1> 	out dx, al	;;Reset
  5529                              <1> resetnicwait:
  5530 00004A8D 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5531 00004A93 81C237000000        <1> 	add edx, 0x37
  5532 00004A99 EC                  <1> 	in al, dx
  5533 00004A9A 2410                <1> 	and al, 0x10
  5534 00004A9C 3C10                <1> 	cmp al, 0x10
  5535 00004A9E 0F84E9FFFFFF        <1> 	je near resetnicwait
  5536 00004AA4 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5537 00004AAA 81C230000000        <1> 	add edx, 0x30
  5538 00004AB0 B8[1F340000]        <1> 	mov eax, rbuffstart
  5539 00004AB5 EF                  <1> 	out dx, eax	;;give nic receive buffer location
  5540 00004AB6 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5541 00004ABC 81C23C000000        <1> 	add edx, 0x3C
  5542 00004AC2 66B80500            <1> 	mov ax, 0x0005
  5543 00004AC6 66EF                <1> 	out dx, ax	;;set TOK and ROK
  5544 00004AC8 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5545 00004ACE 81C244000000        <1> 	add edx, 0x44
  5546 00004AD4 B80F000000          <1> 	mov eax, 0xf
  5547 00004AD9 EF                  <1> 	out dx, eax	;;recieve packets from all matches
  5548 00004ADA 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5549 00004AE0 81C237000000        <1> 	add edx, 0x37
  5550 00004AE6 B00C                <1> 	mov al, 0x0C
  5551 00004AE8 EE                  <1> 	out dx, al	;;use transmit and receive
  5552 00004AE9 C605[F64B0000]01    <1> 	mov byte [nicconfig], 1
  5553 00004AF0 C3                  <1> 	ret
  5554                              <1> 	
  5555                              <1> sendframe:	;;padded frame with beginning in edi and end in esi
  5556 00004AF1 56                  <1> 	push esi
  5557 00004AF2 57                  <1> 	push edi
  5558                              <1> nic2:		;;here come the low level drivers :(
  5559                              <1> 			;;frame begins at esi, ends at edi 			;;0x0200 is the class code for ethernet cards
  5560 00004AF3 803D[F64B0000]01    <1> 	cmp byte [nicconfig], 1
  5561 00004AFA 7405                <1> 	je sendcachedata
  5562 00004AFC E8FDFEFFFF          <1> 	call initcard
  5563                              <1> sendcachedata:
  5564 00004B01 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5565 00004B07 81C210000000        <1> 	add edx, 0x10
  5566 00004B0D ED                  <1> 	in eax, dx
  5567 00004B0E 89C1                <1> 	mov ecx, eax
  5568 00004B10 E887CFFFFF          <1> 	call showhex
  5569 00004B15 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5570 00004B1B 81C213000000        <1> 	add edx, 0x13
  5571 00004B21 ED                  <1> 	in eax, dx
  5572 00004B22 89C1                <1> 	mov ecx, eax
  5573 00004B24 E873CFFFFF          <1> 	call showhex
  5574 00004B29 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5575 00004B2F 81C223000000        <1> 	add edx, 0x23	;;23 or 20?
  5576 00004B35 5F                  <1> 	pop edi
  5577 00004B36 89F8                <1> 	mov eax, edi
  5578 00004B38 EF                  <1> 	out dx, eax	;;here's Johnny!
  5579 00004B39 5E                  <1> 	pop esi
  5580 00004B3A 29FE                <1> 	sub esi, edi
  5581 00004B3C 89F0                <1> 	mov eax, esi
  5582 00004B3E 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5583 00004B44 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5584 00004B4A EF                  <1> 	out dx, eax
  5585                              <1> checknicstatus1:
  5586 00004B4B 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5587 00004B51 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5588 00004B57 ED                  <1> 	in eax, dx
  5589 00004B58 2500200000          <1> 	and eax, 0x2000
  5590 00004B5D 3D00200000          <1> 	cmp eax, 0x2000
  5591 00004B62 75E7                <1> 	jne checknicstatus1
  5592                              <1> checknicstatus:
  5593 00004B64 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5594 00004B6A 81C213000000        <1> 	add edx, 0x13	;;13 or 10?
  5595 00004B70 ED                  <1> 	in eax, dx
  5596 00004B71 2500800000          <1> 	and eax, 0x8000
  5597 00004B76 3D00800000          <1> 	cmp eax, 0x8000
  5598 00004B7B 75E7                <1> 	jne checknicstatus
  5599 00004B7D 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5600 00004B83 81C210000000        <1> 	add edx, 0x10
  5601 00004B89 ED                  <1> 	in eax, dx
  5602 00004B8A 89C1                <1> 	mov ecx, eax
  5603 00004B8C E80BCFFFFF          <1> 	call showhex
  5604 00004B91 8B15[0D4C0000]      <1> 	mov edx, [basenicaddr]
  5605 00004B97 81C213000000        <1> 	add edx, 0x13
  5606 00004B9D ED                  <1> 	in eax, dx
  5607 00004B9E 89C1                <1> 	mov ecx, eax
  5608 00004BA0 E8F7CEFFFF          <1> 	call showhex
  5609 00004BA5 C3                  <1> 	ret
  5610                              <1> 	
  5611                              <1> showmac:	;;mac begins in [ecx]
  5612 00004BA6 BE[DE4B0000]        <1> 	mov esi, macprint
  5613 00004BAB 89CF                <1> 	mov edi, ecx
  5614 00004BAD 81C106000000        <1> 	add ecx, 6
  5615                              <1> showmacloop:
  5616 00004BB3 8A07                <1> 	mov al, [edi]
  5617 00004BB5 8A27                <1> 	mov ah, [edi]
  5618 00004BB7 C0E804              <1> 	shr al, 4
  5619 00004BBA C0E404              <1> 	shl ah, 4
  5620 00004BBD C0EC04              <1> 	shr ah, 4
  5621 00004BC0 0430                <1> 	add al, 48
  5622 00004BC2 80C430              <1> 	add ah, 48
  5623 00004BC5 668906              <1> 	mov [esi], ax
  5624 00004BC8 81C603000000        <1> 	add esi, 3
  5625 00004BCE 47                  <1> 	inc edi
  5626 00004BCF 39CF                <1> 	cmp edi, ecx
  5627 00004BD1 72E0                <1> 	jb showmacloop
  5628 00004BD3 BE[DE4B0000]        <1> 	mov esi, macprint
  5629 00004BD8 E8F1C4FFFF          <1> 	call print
  5630 00004BDD C3                  <1> 	ret
  5631                              <1> 	
  5632 00004BDE 30302D30302D30302D- <1> macprint db "00-00-00-00-00-00  ",0
  5633 00004BE7 30302D30302D303020- <1>
  5634 00004BF0 2000                <1>
  5635 00004BF2 00000000            <1> ethernetend dw 0,0
  5636 00004BF6 00                  <1> nicconfig db 0
  5637 00004BF7 4E4F204E494300      <1> nonicfoundmsg db "NO NIC",0
  5638 00004BFE 496E6974696174696E- <1> initnicmsg	db "Initiating NIC",0
  5639 00004C07 67204E494300        <1>
  5640 00004C0D 00000000            <1> basenicaddr	db 0,0,0,0
  5641 00004C11 C0A80005            <1> sysip db 192,168,0,5
  5642 00004C15 000000000000        <1> sysmac	db 0,0,0,0,0,0		;;my mac address
  5643                                  	%include 'source/arp.asm'
  5644                              <1> ;;let's try something else
  5645                              <1> ;;arp.asm
  5646                              <1> arpinit:
  5647 00004C1B BE[D24C0000]        <1> 	mov esi, arptable
  5648 00004C20 BF[154C0000]        <1> 	mov edi, sysmac
  5649 00004C25 BB[114C0000]        <1> 	mov ebx, sysip
  5650 00004C2A 8B0F                <1> 	mov ecx, [edi]
  5651 00004C2C 890E                <1> 	mov [esi], ecx
  5652 00004C2E 668B4F04            <1> 	mov cx, [edi + 4]
  5653 00004C32 894E04              <1> 	mov [esi + 4], ecx
  5654 00004C35 8B0B                <1> 	mov ecx, [ebx]
  5655 00004C37 894E06              <1> 	mov [esi + 6], ecx
  5656 00004C3A C605[D14C0000]01    <1> 	mov byte [arpconfig], 1
  5657 00004C41 C3                  <1> 	ret
  5658                              <1> arptest:
  5659 00004C42 803D[D14C0000]01    <1> 	cmp byte [arpconfig], 1
  5660 00004C49 7405                <1> 	je arptest2
  5661 00004C4B E8CBFFFFFF          <1> 	call arpinit
  5662                              <1> arptest2:	;;try to reach 192.168.0.1
  5663 00004C50 8B0D[154C0000]      <1> 	mov ecx, [sysmac]
  5664 00004C56 668B1D[194C0000]    <1> 	mov bx, [sysmac + 4]
  5665 00004C5D 890D[974C0000]      <1> 	mov [sourcemac], ecx
  5666 00004C63 66891D[9B4C0000]    <1> 	mov [sourcemac + 4],bx
  5667 00004C6A 890D[A74C0000]      <1> 	mov [arpsenderinfo], ecx
  5668 00004C70 66891D[AB4C0000]    <1> 	mov [arpsenderinfo + 4], bx
  5669 00004C77 BF[914C0000]        <1> 	mov edi, frame
  5670 00004C7C BE[D14C0000]        <1> 	mov esi, framend
  5671 00004C81 E86BFEFFFF          <1> 	call sendframe
  5672 00004C86 BE[19580000]        <1> 	mov esi, line
  5673 00004C8B E83EC4FFFF          <1> 	call print
  5674 00004C90 C3                  <1> 	ret
  5675                              <1> 	
  5676                              <1> ;;example frame
  5677                              <1> frame:
  5678 00004C91 FFFFFFFFFFFF        <1> destinationmac:	db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  5679 00004C97 000000000000        <1> sourcemac:		db 0,0,0,0,0,0
  5680 00004C9D 0608                <1> ethertype:		dw 0x0806			;;arp
  5681                              <1> 	;;example packet
  5682 00004C9F 0100                <1> 	arppacket: 		dw 1				;;ethernet is 1
  5683 00004CA1 0008                <1> 	arpprotocol: 	dw 0x0800			;;ip is 0x800
  5684 00004CA3 0604                <1> 					db 6,4				;;length of mac, length of ip
  5685 00004CA5 0100                <1> 	arpoperation: 	dw 1				;;one for arp request
  5686 00004CA7 000000000000        <1> 	arpsenderinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;mac
  5687 00004CAD C0A80005            <1> 					db 192,168,0,5			;;ip
  5688 00004CB1 000000000000        <1> 	arptargetinfo:	db 0x00,0x00,0x00,0x00,0x00,0x00	;;ignored in requests
  5689 00004CB7 C0A80001            <1> 					db 192,168,0,1			;;ip
  5690 00004CBB 00<rept>            <1> padding:		times (64-($-frame)) db 0
  5691                              <1> framend:
  5692                              <1> 
  5693 00004CD1 00                  <1> arpconfig db 0
  5694                              <1> arptable:	;;mac,ip
  5695 00004CD2 000000000000000000- <1> 	times 10 db 0,0,0,0,0,0,0,0,0,0
  5696 00004CDB 00<rept>            <1>
  5697                              <1> arptableend:
  5698                                  	%include 'source/pci.asm'
  5699 00004D36 00                  <1> pcibus		db 0
  5700 00004D37 00                  <1> pcidevice	db 0
  5701 00004D38 00                  <1> pcifunction	db 0
  5702 00004D39 00                  <1> pciregister	db 0
  5703 00004D3A 00                  <1> pcireqtype db 0
  5704                              <1> 
  5705                              <1> getpciport:
  5706 00004D3B B001                <1> 	mov al, 1
  5707 00004D3D A2[3A4D0000]        <1> 	mov [pcireqtype], al
  5708 00004D42 E91E000000          <1> 	jmp searchpci
  5709                              <1> pcidump:
  5710 00004D47 B800000000          <1> 	mov eax, 0
  5711 00004D4C A2[384D0000]        <1> 	mov [pcifunction], al
  5712 00004D51 A2[364D0000]        <1> 	mov [pcibus], al
  5713 00004D56 A2[374D0000]        <1> 	mov [pcidevice], al
  5714 00004D5B A2[3A4D0000]        <1> 	mov [pcireqtype], al
  5715 00004D60 E900000000          <1> 	jmp searchpci
  5716                              <1> searchpci:		;;return in ebx, start X in pciX
  5717 00004D65 B000                <1> 	mov al, 0
  5718 00004D67 A2[394D0000]        <1> 	mov [pciregister], al
  5719 00004D6C E84F010000          <1> 	call getpciaddr
  5720 00004D71 BAF80C0000          <1> 	mov edx, 0xCF8
  5721 00004D76 EF                  <1> 	out dx, eax	;;request pci config
  5722 00004D77 BAFC0C0000          <1> 	mov edx, 0xCFC
  5723 00004D7C ED                  <1> 	in eax, dx 	;;read in pci config
  5724 00004D7D 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  5725 00004D82 0F8237000000        <1> 	jb near checkpcidevice
  5726                              <1> searchpciret:
  5727                              <1> nextpcidevice:
  5728 00004D88 B000                <1> 	mov al, 0
  5729 00004D8A A2[384D0000]        <1> 	mov [pcifunction], al
  5730 00004D8F A0[374D0000]        <1> 	mov al, [pcidevice]
  5731 00004D94 3C1F                <1> 	cmp al, 11111b
  5732 00004D96 0F83B8000000        <1> 	jae near nextpcibus
  5733 00004D9C FEC0                <1> 	inc al
  5734 00004D9E A2[374D0000]        <1> 	mov [pcidevice], al
  5735 00004DA3 EBC0                <1> 	jmp searchpci
  5736 00004DA5 A0[384D0000]        <1> 	mov al, [pcifunction]
  5737 00004DAA 3C07                <1> 	cmp al, 111b
  5738 00004DAC 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  5739 00004DB2 FEC0                <1> 	inc al
  5740 00004DB4 A2[384D0000]        <1> 	mov [pcifunction], al
  5741 00004DB9 EBAA                <1> 	jmp searchpci
  5742 00004DBB 00000000            <1> pcitype: db 0,0,0,0
  5743                              <1> checkpcidevice:
  5744 00004DBF B000                <1> 	mov al, 0
  5745 00004DC1 3805[3A4D0000]      <1> 	cmp [pcireqtype], al
  5746 00004DC7 0F842B000000        <1> 	je near dumppcidevice
  5747 00004DCD B008                <1> 	mov al, 0x08
  5748 00004DCF A2[394D0000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  5749 00004DD4 E8E7000000          <1> 	call getpciaddr
  5750 00004DD9 BAF80C0000          <1> 	mov edx, 0xCF8
  5751 00004DDE EF                  <1> 	out dx, eax
  5752 00004DDF BAFC0C0000          <1> 	mov edx, 0xCFC
  5753 00004DE4 ED                  <1> 	in eax, dx
  5754 00004DE5 C1C008              <1> 	rol eax, 8
  5755 00004DE8 8A1D[BB4D0000]      <1> 	mov bl, [pcitype]
  5756 00004DEE 38D8                <1> 	cmp al, bl
  5757 00004DF0 0F8480000000        <1> 	je near foundpciaddr
  5758 00004DF6 EB90                <1> 	jmp searchpciret
  5759                              <1> dumppcidevice:
  5760 00004DF8 B000                <1> 	mov al, 0
  5761 00004DFA A2[394D0000]        <1> 	mov [pciregister], al
  5762 00004DFF E8BC000000          <1> 	call getpciaddr
  5763 00004E04 89C1                <1> 	mov ecx, eax
  5764 00004E06 C605[871A0000]00    <1> 	mov byte [firsthexshown],0
  5765 00004E0D E88ACCFFFF          <1> 	call showhex
  5766                              <1> dumppcidevicelp:
  5767 00004E12 A2[394D0000]        <1> 	mov [pciregister], al
  5768 00004E17 E8A4000000          <1> 	call getpciaddr
  5769 00004E1C BAF80C0000          <1> 	mov edx, 0xCF8
  5770 00004E21 EF                  <1> 	out dx, eax
  5771 00004E22 BAFC0C0000          <1> 	mov edx, 0xCFC
  5772 00004E27 ED                  <1> 	in eax, dx
  5773 00004E28 89C1                <1> 	mov ecx, eax
  5774 00004E2A A0[394D0000]        <1> 	mov al, [pciregister]
  5775 00004E2F 0404                <1> 	add al, 4
  5776 00004E31 3C1A                <1> 	cmp al, 0x1A
  5777 00004E33 730E                <1> 	jae dumppcidn
  5778 00004E35 C605[871A0000]00    <1> 	mov byte [firsthexshown],0
  5779 00004E3C E85BCCFFFF          <1> 	call showhex
  5780 00004E41 EBCF                <1> 	jmp dumppcidevicelp
  5781                              <1> dumppcidn:
  5782 00004E43 C605[871A0000]00    <1> 	mov byte [firsthexshown],0
  5783 00004E4A E84DCCFFFF          <1> 	call showhex
  5784 00004E4F E934FFFFFF          <1> 	jmp searchpciret
  5785                              <1> nextpcibus:
  5786 00004E54 B000                <1> 	mov al, 0
  5787 00004E56 A2[374D0000]        <1> 	mov [pcidevice], al
  5788 00004E5B A0[364D0000]        <1> 	mov al, [pcibus]
  5789 00004E60 3C7F                <1> 	cmp al, 1111111b
  5790 00004E62 730C                <1> 	jae donesearchpci
  5791 00004E64 FEC0                <1> 	inc al
  5792 00004E66 A2[364D0000]        <1> 	mov [pcibus], al
  5793 00004E6B E9F5FEFFFF          <1> 	jmp searchpci
  5794                              <1> donesearchpci:
  5795 00004E70 BA00000000          <1> 	mov edx, 0
  5796 00004E75 C3                  <1> 	ret
  5797                              <1> foundpciaddr:
  5798 00004E76 B010                <1> 	mov al, 0x10
  5799 00004E78 A2[394D0000]        <1> 	mov [pciregister], al
  5800                              <1> findpciioaddr:
  5801 00004E7D E83E000000          <1> 	call getpciaddr
  5802 00004E82 BAF80C0000          <1> 	mov edx, 0xCF8
  5803 00004E87 EF                  <1> 	out dx, eax
  5804 00004E88 BAFC0C0000          <1> 	mov edx, 0xCFC
  5805 00004E8D ED                  <1> 	in eax, dx
  5806 00004E8E 89C3                <1> 	mov ebx, eax
  5807 00004E90 81E301000000        <1> 	and ebx, 1
  5808 00004E96 81FB00000000        <1> 	cmp ebx, 0
  5809 00004E9C 0F8408000000        <1> 	je near notpciioaddr
  5810 00004EA2 2D01000000          <1> 	sub eax, 1
  5811 00004EA7 89C2                <1> 	mov edx, eax
  5812 00004EA9 C3                  <1> 	ret
  5813                              <1> notpciioaddr:
  5814 00004EAA A0[394D0000]        <1> 	mov al, [pciregister]
  5815 00004EAF 0404                <1> 	add al, 4
  5816 00004EB1 3C28                <1> 	cmp al, 0x28
  5817 00004EB3 0F87CFFEFFFF        <1> 	ja near searchpciret
  5818 00004EB9 A2[394D0000]        <1> 	mov [pciregister], al
  5819 00004EBE EBBD                <1> 	jmp findpciioaddr
  5820                              <1> getpciaddr:		;;puts it in eax and ebx
  5821 00004EC0 B800000000          <1> 			mov eax, 0
  5822 00004EC5 BB00000080          <1> 			mov ebx, 0x80000000
  5823 00004ECA A0[364D0000]        <1> 			mov al, [pcibus]
  5824 00004ECF C1E010              <1> 			shl eax, 16
  5825 00004ED2 01C3                <1> 			add ebx, eax
  5826 00004ED4 B800000000          <1> 			mov eax, 0
  5827 00004ED9 A0[374D0000]        <1> 			mov al, [pcidevice]
  5828 00004EDE C1E00B              <1> 			shl eax, 11
  5829 00004EE1 01C3                <1> 			add ebx, eax
  5830 00004EE3 B800000000          <1> 			mov eax, 0
  5831 00004EE8 A0[384D0000]        <1> 			mov al, [pcifunction]
  5832 00004EED C1E008              <1> 			shl eax, 8
  5833 00004EF0 01C3                <1> 			add ebx, eax
  5834 00004EF2 B800000000          <1> 			mov eax, 0
  5835 00004EF7 A0[394D0000]        <1> 			mov al, [pciregister]
  5836 00004EFC 01C3                <1> 			add ebx, eax
  5837 00004EFE 89D8                <1> 			mov eax, ebx
  5838 00004F00 C3                  <1> 			ret
  5839                              <1> 			
  5840                                  	;%include 'source/process.asm'
  5841                                      %include 'source/disk.asm'
  5842                              <1> ;;disk.asm - new - using lba
  5843                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  5844 00004F01 803F00              <1> 	cmp byte [edi], 0
  5845 00004F04 0F8444000000        <1> 	je near nofileload
  5846 00004F0A 89FA                <1> 	mov edx, edi
  5847 00004F0C BB[69570000]        <1> 	mov ebx, diskfileindex
  5848                              <1> nextnamechar:
  5849 00004F11 8A07                <1> 	mov al, [edi]
  5850 00004F13 8A23                <1> 	mov ah, [ebx]
  5851 00004F15 47                  <1> 	inc edi
  5852 00004F16 43                  <1> 	inc ebx
  5853 00004F17 88C1                <1> 	mov cl, al
  5854 00004F19 08E1                <1> 	or cl, ah
  5855 00004F1B 80F900              <1> 	cmp cl, 0
  5856 00004F1E 744E                <1> 	je equalfilenames
  5857 00004F20 80F920              <1> 	cmp cl, ' '
  5858 00004F23 7449                <1> 	je equalfilenames
  5859 00004F25 3C2A                <1> 	cmp al, '*'
  5860 00004F27 742B                <1> 	je equalfilenames2
  5861 00004F29 80FC00              <1> 	cmp ah, 0
  5862 00004F2C 7410                <1> 	je nextfilename
  5863 00004F2E 3C00                <1> 	cmp al, 0
  5864 00004F30 740C                <1> 	je nextfilename
  5865 00004F32 38E0                <1> 	cmp al, ah
  5866 00004F34 74DB                <1> 	je nextnamechar
  5867                              <1> getebxzero:
  5868 00004F36 8A23                <1> 	mov ah, [ebx]
  5869 00004F38 43                  <1> 	inc ebx
  5870 00004F39 80FC00              <1> 	cmp ah, 0
  5871 00004F3C 75F8                <1> 	jne getebxzero
  5872                              <1> nextfilename:
  5873 00004F3E 81C308000000        <1> 	add ebx, 8		;;next descriptor
  5874 00004F44 89D7                <1> 	mov edi, edx
  5875 00004F46 81FB[DB570000]      <1> 	cmp ebx, enddiskfileindex
  5876 00004F4C 72C3                <1> 	jb nextnamechar
  5877                              <1> nofileload:
  5878 00004F4E BA94010000          <1> 	mov edx, 404	;;indicate not found error
  5879 00004F53 C3                  <1> 	ret
  5880                              <1> equalfilenames2:
  5881 00004F54 81EB02000000        <1> 	sub ebx, 2
  5882                              <1> eqfilefind:
  5883 00004F5A 43                  <1> 	inc ebx
  5884 00004F5B 81FB[DB570000]      <1> 	cmp ebx, enddiskfileindex
  5885 00004F61 0F83E7FFFFFF        <1> 	jae near nofileload
  5886 00004F67 8A03                <1> 	mov al, [ebx]
  5887 00004F69 3C00                <1> 	cmp al, 0
  5888 00004F6B 75ED                <1> 	jne eqfilefind
  5889 00004F6D 43                  <1> 	inc ebx
  5890                              <1> equalfilenames:
  5891 00004F6E 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  5892 00004F71 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  5893 00004F73 031D[A1010000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  5894 00004F79 B900000000          <1> 	mov ecx, 0
  5895 00004F7E 88C1                <1> 	mov cl, al			;;get excess number of sectors
  5896 00004F80 D0E1                <1> 	shl cl, 1
  5897 00004F82 D0E9                <1> 	shr cl, 1			;;cut off at 128
  5898 00004F84 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  5899 00004F86 B500                <1> 	mov ch, 0			;;drive 0
  5900 00004F88 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  5901                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  5902 00004F8B A3[C94F0000]        <1> 	mov [filetracks], eax
  5903 00004F90 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  5904 00004F92 89DA                <1> 	mov edx, ebx
  5905 00004F94 80F900              <1> 	cmp cl, 0
  5906 00004F97 7405                <1> 	je copytracksforfile
  5907 00004F99 E837000000          <1> 	call diskr		;;take care of excess sectors
  5908                              <1> copytracksforfile:
  5909 00004F9E A1[C94F0000]        <1> 	mov eax, [filetracks]
  5910 00004FA3 3D00000000          <1> 	cmp eax, 0
  5911 00004FA8 7419                <1> 	je donecopyfile
  5912 00004FAA 48                  <1> 	dec eax
  5913 00004FAB A3[C94F0000]        <1> 	mov [filetracks], eax
  5914 00004FB0 89D3                <1> 	mov ebx, edx	;;get end lba
  5915 00004FB2 B180                <1> 	mov cl, 0x80
  5916 00004FB4 8A2D[A0010000]      <1> 	mov ch, [DriveNumber]
  5917 00004FBA 89FE                <1> 	mov esi, edi	;;reset buffer
  5918 00004FBC E814000000          <1> 	call diskr
  5919 00004FC1 EBDB                <1> 	jmp copytracksforfile
  5920                              <1> donecopyfile:
  5921 00004FC3 BA00000000          <1> 	mov edx, 0	;;no error
  5922 00004FC8 C3                  <1> 	ret
  5923                              <1> 	
  5924 00004FC9 00000000            <1> filetracks dd 0
  5925 00004FCD 00                  <1> lbad1 db 0
  5926 00004FCE 00                  <1> lbad2 db 0
  5927 00004FCF 00                  <1> lbad3 db 0
  5928 00004FD0 00                  <1> lbad4 db 0
  5929 00004FD1 00                  <1> lbad5 db 0
  5930 00004FD2 00                  <1> lbad6 db 0
  5931 00004FD3 6400                <1> segments dw 100
  5932                              <1> 
  5933                              <1> diskr:		;;sector count in cl, disk number in ch, 48 bit address with last 32 bits in ebx, buffer in esi, puts end buffer in edi and end lba in edx
  5934                              <1> 
  5935 00004FD5 8935[EE500000]      <1> 	mov [bufferstartesi], esi
  5936 00004FDB 891D[EA500000]      <1> 	mov [lbaadstartebx], ebx
  5937 00004FE1 BA00000000          <1> 	mov edx, 0
  5938 00004FE6 88CA                <1> 	mov dl, cl
  5939 00004FE8 01DA                <1> 	add edx, ebx
  5940 00004FEA 8915[E6500000]      <1> 	mov [lbaadend], edx
  5941 00004FF0 881D[CD4F0000]      <1> 	mov [lbad1], bl
  5942 00004FF6 883D[CE4F0000]      <1> 	mov [lbad2], bh
  5943 00004FFC C1C310              <1> 	rol ebx, 16
  5944 00004FFF 881D[CF4F0000]      <1> 	mov [lbad3], bl
  5945 00005005 883D[D04F0000]      <1> 	mov [lbad4], bh
  5946 0000500B C1CB10              <1> 	ror ebx, 16
  5947                              <1> 
  5948 0000500E B840000000          <1> 	mov eax, 0x40
  5949 00005013 66BAF601            <1> 	mov dx, 0x1F6
  5950 00005017 EE                  <1> 	out dx, al	;;send magic bits-add drive indicator later
  5951                              <1> 	
  5952 00005018 B000                <1> 	mov al, 0
  5953 0000501A 66BAF201            <1> 	mov dx, 0x1F2
  5954 0000501E EE                  <1> 	out dx, al	;;16 bit sector count-last byte now 0
  5955                              <1> 	
  5956 0000501F A0[D04F0000]        <1> 	mov al, [lbad4]
  5957 00005024 6642                <1> 	inc dx
  5958 00005026 EE                  <1> 	out dx, al
  5959                              <1> 	
  5960 00005027 A0[D14F0000]        <1> 	mov al, [lbad5]
  5961 0000502C 6642                <1> 	inc dx
  5962 0000502E EE                  <1> 	out dx, al
  5963                              <1> 	
  5964 0000502F A0[D24F0000]        <1> 	mov al, [lbad6]
  5965 00005034 6642                <1> 	inc dx
  5966 00005036 EE                  <1> 	out dx, al
  5967                              <1> 	
  5968 00005037 88C8                <1> 	mov al, cl
  5969 00005039 66BAF201            <1> 	mov dx, 0x1F2
  5970 0000503D EE                  <1> 	out dx, al	;;low byte of 16 bit sector count
  5971                              <1> 	
  5972 0000503E A0[CD4F0000]        <1> 	mov al, [lbad1]
  5973 00005043 6642                <1> 	inc dx
  5974 00005045 EE                  <1> 	out dx, al
  5975                              <1> 	
  5976 00005046 A0[CE4F0000]        <1> 	mov al, [lbad2]
  5977 0000504B 6642                <1> 	inc dx
  5978 0000504D EE                  <1> 	out dx, al
  5979                              <1> 	
  5980 0000504E A0[CF4F0000]        <1> 	mov al, [lbad3]
  5981 00005053 6642                <1> 	inc dx
  5982 00005055 EE                  <1> 	out dx, al
  5983                              <1> 	
  5984 00005056 B024                <1> 	mov al, 0x24
  5985 00005058 66BAF701            <1> 	mov dx, 0x1F7
  5986 0000505C EE                  <1> 	out dx, al	;;READ!!!
  5987 0000505D 66BBFFFF            <1> 	mov bx, 0xFFFF		;;try 65536 times before forcing
  5988                              <1> diskrwait:
  5989 00005061 66BAF701            <1> 	mov dx, 0x1F7
  5990 00005065 EC                  <1> 	in al, dx
  5991 00005066 2408                <1> 	and al, 0x08
  5992 00005068 664B                <1> 	dec bx
  5993 0000506A 6681FB0000          <1> 	cmp bx, 0
  5994 0000506F 7404                <1> 	je nomorediskwait
  5995 00005071 3C08                <1> 	cmp al, 0x08
  5996 00005073 75EC                <1> 	jne diskrwait
  5997                              <1> nomorediskwait:
  5998 00005075 66BB0001            <1> 	mov bx, 256
  5999                              <1> diskdataread:
  6000 00005079 66BAF001            <1> 	mov dx, 0x1F0
  6001 0000507D 66ED                <1> 	in ax, dx
  6002 0000507F 668906              <1> 	mov [esi], ax
  6003 00005082 81C602000000        <1> 	add esi, 2
  6004 00005088 664B                <1> 	dec bx
  6005 0000508A 6681FB0000          <1> 	cmp bx, 0
  6006 0000508F 75E8                <1> 	jne diskdataread		;;read a sector
  6007 00005091 FEC9                <1> 	dec cl
  6008 00005093 80F900              <1> 	cmp cl, 0
  6009 00005096 75C9                <1> 	jne diskrwait
  6010 00005098 89F7                <1> 	mov edi, esi
  6011 0000509A 8B15[E6500000]      <1> 	mov edx, [lbaadend]
  6012 000050A0 8B35[EE500000]      <1> 	mov esi, [bufferstartesi]
  6013 000050A6 8B1D[EA500000]      <1> 	mov ebx, [lbaadstartebx]
  6014 000050AC C3                  <1> 	ret
  6015                              <1> 	
  6016                              <1> 	
  6017                              <1> diskold: ;;28 bits
  6018 000050AD 66B80000            <1> 	mov ax, 0
  6019 000050B1 66BAF101            <1> 	mov dx, 0x1F1
  6020 000050B5 EE                  <1> 	out dx, al	;;send null byte to port
  6021 000050B6 6642                <1> 	inc dx	;;0x1F2
  6022 000050B8 88C8                <1> 	mov al, cl	;;get sector count
  6023 000050BA EE                  <1> 	out dx, al	;;send sector count
  6024 000050BB 6642                <1> 	inc dx	;;0x1F3
  6025 000050BD 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  6026 000050BF EE                  <1> 	out dx, al	;;send them
  6027 000050C0 6642                <1> 	inc dx	;;0x1F4
  6028 000050C2 C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  6029 000050C5 88D8                <1> 	mov al, bl
  6030 000050C7 EE                  <1> 	out dx, al
  6031 000050C8 6642                <1> 	inc dx	;;0x1F5
  6032 000050CA C1CB08              <1> 	ror ebx, 8	;;again
  6033 000050CD 88D8                <1> 	mov al, bl
  6034 000050CF EE                  <1> 	out dx, al
  6035 000050D0 6642                <1> 	inc dx	;;0x1F6
  6036 000050D2 C1CB08              <1> 	ror ebx, 8
  6037 000050D5 88D8                <1> 	mov al, bl
  6038 000050D7 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  6039 000050D9 0CE0                <1> 	or al, 0xE0			;;majic number
  6040 000050DB C0E504              <1> 	shl ch, 4
  6041 000050DE 08E8                <1> 	or al, ch
  6042 000050E0 EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  6043 000050E1 6642                <1> 	inc dx	;;0x1F7
  6044 000050E3 B020                <1> 	mov al, 0x20
  6045 000050E5 EE                  <1> 	out dx, al			;;execute read command
  6046                              <1> 	
  6047 000050E6 00000000            <1> lbaadend dd 0
  6048 000050EA 00000000            <1> lbaadstartebx dd 0
  6049 000050EE 00000000            <1> bufferstartesi dd 0
  6050                                  	%include 'source/threads.asm'
  6051                              <1> ;;THIS IS MY FIRST ATTEMPT AT IMPLEMENTING THREADS
  6052                              <1> threadstarttest:
  6053 000050F2 E9ED040000          <1>     jmp startthreads
  6054                              <1> mainthread:
  6055 000050F7 F4                  <1> 	hlt		;;this does not work properly
  6056 000050F8 EBFD                <1> 	jmp mainthread
  6057                              <1> 	
  6058                              <1> nwcmdst:
  6059 000050FA FA                  <1> 	cli			;;no more interrupts!!!
  6060 000050FB BE[19580000]        <1> 	mov esi, line
  6061 00005100 E8C9BFFFFF          <1> 	call print
  6062 00005105 C605[42510000]00    <1> 	mov byte [threadson], 0
  6063 0000510C E91EC5FFFF          <1> 	jmp nwcmd
  6064                              <1> 	
  6065                              <1> modelthread:
  6066 00005111 668B1D[67570000]    <1> 	mov bx, [currentthread]
  6067 00005118 B001                <1> 	mov al, 1
  6068 0000511A B409                <1> 	mov ah, 9
  6069 0000511C B900000000          <1> 	mov ecx, 0
  6070 00005121 6689D9              <1> 	mov cx, bx
  6071 00005124 CD30                <1> 	int 0x30
  6072                              <1> 	
  6073 00005126 B90000DEC0          <1> 	mov ecx, 0xC0DE0000
  6074 0000512B 6689D9              <1> 	mov cx, bx
  6075 0000512E CD30                <1> 	int 0x30
  6076                              <1> 	
  6077 00005130 B90000ADDE          <1> 	mov ecx, 0xDEAD0000
  6078 00005135 6689D9              <1> 	mov cx, bx
  6079 00005138 CD30                <1> 	int 0x30
  6080                              <1> 	
  6081 0000513A CD08                <1> 	int 8	;;skip this thread three times to ensure that all threads run
  6082 0000513C CD08                <1> 	int 8
  6083 0000513E CD08                <1> 	int 8
  6084                              <1> 	
  6085 00005140 EBB8                <1> 	jmp nwcmdst
  6086                              <1> 	
  6087                              <1> 	
  6088 00005142 00                  <1> threadson db 0
  6089 00005143 04000000            <1> lastthread dd 4
  6090                              <1> 
  6091                              <1> thrdtst:
  6092 00005147 [11510000]<rept>    <1> times 256 dd modelthread	;;could go up to 2048, but that takes too long
  6093                              <1> thrdtstend:
  6094                              <1> 
  6095 00005547 00000000            <1> 	espold dd 0
  6096                              <1> 
  6097                              <1> threadfork:
  6098 0000554B C605[42510000]01    <1> 	mov byte [threadson], 1
  6099 00005552 60                  <1> 	pushad
  6100 00005553 66B80040            <1> 	mov ax, 0x4000	;;this is the divider for the PIT
  6101 00005557 E640                <1> 	out 0x40, al
  6102 00005559 66C1C008            <1> 	rol ax, 8
  6103 0000555D E640                <1> 	out 0x40, al
  6104                              <1> 	
  6105 0000555F 8CC8                <1> 	mov eax, cs
  6106 00005561 89C2                <1> 	mov edx, eax
  6107 00005563 8B4C2428            <1> 	mov ecx, [esp + 40]
  6108 00005567 81C900020000        <1> 	or ecx, 0x200
  6109 0000556D 89E3                <1> 	mov ebx, esp
  6110 0000556F BC[27580000]        <1> 	mov esp, stackdummy
  6111 00005574 90                  <1> 	nop
  6112                              <1> 	
  6113 00005575 60                  <1> 	pushad
  6114 00005576 B8[F7500000]        <1> 	mov eax, mainthread
  6115 0000557B 89442420            <1> 	mov [esp + 32], eax
  6116 0000557F 89542424            <1> 	mov [esp + 36], edx
  6117 00005583 894C2428            <1> 	mov [esp + 40], ecx
  6118 00005587 8925[1F340000]      <1> 	mov [threadlist], esp
  6119                              <1> 	
  6120 0000558D 891D[47550000]      <1> 	mov [espold], ebx
  6121 00005593 89F0                <1> 	mov eax, esi
  6122 00005595 BC[275C0000]        <1> 	mov esp, stack1
  6123 0000559A 8B1D[43510000]      <1> 	mov ebx, [lastthread]
  6124 000055A0 C1E30A              <1> 	shl ebx, 10
  6125 000055A3 01DC                <1> 	add esp, ebx
  6126 000055A5 C1EB0A              <1> 	shr ebx, 10
  6127 000055A8 90                  <1> 	nop
  6128 000055A9 60                  <1> 	pushad
  6129 000055AA 89442420            <1> 	mov [esp + 32], eax
  6130 000055AE 89542424            <1> 	mov [esp + 36], edx
  6131 000055B2 894C2428            <1> 	mov [esp + 40], ecx
  6132 000055B6 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  6133 000055BC 8B25[47550000]      <1> 	mov esp, [espold]
  6134 000055C2 81C304000000        <1> 	add ebx, 4
  6135 000055C8 89A3[1F340000]      <1> 	mov [threadlist + ebx], esp
  6136 000055CE 81C304000000        <1> 	add ebx, 4
  6137 000055D4 891D[43510000]      <1> 	mov [lastthread], ebx
  6138 000055DA B0FE                <1> 	mov al, 0xFE
  6139 000055DC E621                <1> 	out 0x21, al
  6140 000055DE B020                <1> 	mov al, 0x20
  6141 000055E0 E620                <1> 	out 0x20, al
  6142 000055E2 61                  <1> 	popad
  6143 000055E3 C3                  <1> 	ret
  6144                              <1> 
  6145                              <1> startthreads:
  6146 000055E4 C605[42510000]01    <1> 	mov byte [threadson], 1
  6147 000055EB 60                  <1> 	pushad
  6148 000055EC 66B800A0            <1> 	mov ax, 0xA000	;;this is the divider for the PIT
  6149 000055F0 E640                <1> 	out 0x40, al
  6150 000055F2 66C1C008            <1> 	rol ax, 8
  6151 000055F6 E640                <1> 	out 0x40, al
  6152                              <1> 	
  6153 000055F8 8CC8                <1> 	mov eax, cs
  6154 000055FA 89C2                <1> 	mov edx, eax
  6155 000055FC 8B4C2428            <1> 	mov ecx, [esp + 40]
  6156 00005600 81C900020000        <1> 	or ecx, 0x200
  6157 00005606 89E3                <1> 	mov ebx, esp
  6158 00005608 BC[27580000]        <1> 	mov esp, stackdummy
  6159 0000560D 90                  <1> 	nop
  6160                              <1> 	
  6161 0000560E 60                  <1> 	pushad
  6162 0000560F B8[F7500000]        <1> 	mov eax, mainthread
  6163 00005614 89442420            <1> 	mov [esp + 32], eax
  6164 00005618 89542424            <1> 	mov [esp + 36], edx
  6165 0000561C 894C2428            <1> 	mov [esp + 40], ecx
  6166 00005620 8925[1F340000]      <1> 	mov [threadlist], esp
  6167                              <1> 
  6168                              <1> 			;;that above setup the dummy thread which for some reason does not run
  6169                              <1> 			;;this below will setup the threads found in thrdtst
  6170                              <1> 
  6171                              <1> testthreads:
  6172 00005626 BE[47510000]        <1> 	mov esi, thrdtst
  6173 0000562B BC[275C0000]        <1> 	mov esp, stack1
  6174 00005630 BF[1F340000]        <1> 	mov edi, threadlist
  6175 00005635 81C704000000        <1> 	add edi, 4
  6176                              <1> nxtthreadld:
  6177 0000563B 60                  <1> 	pushad
  6178 0000563C 8B06                <1> 	mov eax, [esi]
  6179 0000563E 89442420            <1> 	mov [esp + 32], eax
  6180 00005642 89542424            <1> 	mov [esp + 36], edx
  6181 00005646 894C2428            <1> 	mov [esp + 40], ecx
  6182 0000564A 8927                <1> 	mov [edi], esp
  6183 0000564C 81C400040000        <1> 	add esp, 1024
  6184 00005652 81C604000000        <1> 	add esi, 4
  6185 00005658 81C704000000        <1> 	add edi, 4
  6186 0000565E 81FF[27540000]      <1> 	cmp edi, threadlistend
  6187 00005664 0F8322000000        <1> 	jae near nomorethreadspace
  6188 0000566A 81FC[27642000]      <1> 	cmp esp, bssend
  6189 00005670 0F8350000000        <1> 	jae near nomorestackspace
  6190 00005676 81FE[47550000]      <1> 	cmp esi, thrdtstend
  6191 0000567C 72BD                <1> 	jb nxtthreadld
  6192 0000567E 89DC                <1> 	mov esp, ebx	
  6193 00005680 B0FE                <1> 	mov al, 0xFE
  6194 00005682 E621                <1> 	out 0x21, al
  6195 00005684 B020                <1> 	mov al, 0x20
  6196 00005686 E620                <1> 	out 0x20, al
  6197 00005688 61                  <1> 	popad
  6198 00005689 FB                  <1> 	sti
  6199 0000568A EBFE                <1> 	jmp $	;;wait for the irq to hook
  6200                              <1> 	
  6201                              <1> nomorethreadspace:
  6202 0000568C BE[A2560000]        <1> 	mov esi, nmts
  6203 00005691 E838BAFFFF          <1> 	call print
  6204 00005696 C605[42510000]00    <1> 	mov byte [threadson], 0
  6205 0000569D E98DBFFFFF          <1> 	jmp nwcmd
  6206 000056A2 74656820636F6C6F6E- <1> nmts	db "teh colonel no can haz moar treds",13,10,0
  6207 000056AB 656C206E6F2063616E- <1>
  6208 000056B4 2068617A206D6F6172- <1>
  6209 000056BD 2074726564730D0A00  <1>
  6210                              <1> 
  6211                              <1> nomorestackspace:
  6212 000056C6 BE[DC560000]        <1> 	mov esi, nmss
  6213 000056CB E8FEB9FFFF          <1> 	call print
  6214 000056D0 C605[42510000]00    <1> 	mov byte [threadson], 0
  6215 000056D7 E953BFFFFF          <1> 	jmp nwcmd
  6216 000056DC 74656820636F6C6F6E- <1> nmss	db "teh colonel no can haz moar staqz",13,10,0
  6217 000056E5 656C206E6F2063616E- <1>
  6218 000056EE 2068617A206D6F6172- <1>
  6219 000056F7 20737461717A0D0A00  <1>
  6220                              <1> 	
  6221                              <1> threadswitch:
  6222 00005700 FA                  <1> 	cli
  6223 00005701 60                  <1> 	pushad
  6224 00005702 BF[1F340000]        <1> 	mov edi, threadlist
  6225 00005707 B800000000          <1> 	mov eax, 0
  6226 0000570C 66A1[67570000]      <1> 	mov ax, [currentthread]
  6227 00005712 6640                <1> 	inc ax
  6228 00005714 66A3[67570000]      <1> 	mov [currentthread], ax
  6229 0000571A 6648                <1> 	dec ax
  6230 0000571C C1E002              <1> 	shl eax, 2
  6231 0000571F 01C7                <1> 	add edi, eax
  6232 00005721 8927                <1> 	mov [edi], esp
  6233 00005723 81C704000000        <1> 	add edi, 4
  6234 00005729 81FF[27540000]      <1> 	cmp edi, threadlistend
  6235 0000572F 0F830D000000        <1> 	jae near nookespthread
  6236 00005735 8B07                <1> 	mov eax, [edi]
  6237 00005737 3D00000000          <1> 	cmp eax, 0
  6238 0000573C 0F851C000000        <1> 	jne near okespthread
  6239                              <1> nookespthread:
  6240 00005742 BF[1F340000]        <1> 	mov edi, threadlist
  6241 00005747 66B80000            <1> 	mov ax, 0
  6242 0000574B 66A3[67570000]      <1> 	mov [currentthread], ax
  6243 00005751 8B07                <1> 	mov eax, [edi]
  6244 00005753 3D00000000          <1> 	cmp eax, 0
  6245 00005758 0F849CF9FFFF        <1> 	je near nwcmdst
  6246                              <1> okespthread:
  6247 0000575E 89C4                <1> 	mov esp, eax
  6248 00005760 B020                <1> 	mov al, 0x20
  6249 00005762 E620                <1> 	out 0x20, al
  6250 00005764 61                  <1> 	popad
  6251 00005765 FB                  <1> 	sti
  6252 00005766 CF                  <1> 	iretd
  6253                              <1> 	
  6254 00005767 0000                <1> currentthread dw 0
  6255                                      %include 'fileindex.asm'
  6256                              <1> diskfileindex:
  6257 00005769 65787000            <1> db "exp",0
  6258 0000576D 36000000            <1> dd (f0-$$)/512
  6259 00005771 01000000            <1> dd (f1-f0)/512
  6260 00005775 666F726B00          <1> db "fork",0
  6261 0000577A 37000000            <1> dd (f1-$$)/512
  6262 0000577E 01000000            <1> dd (f2-f1)/512
  6263 00005782 736F6C6C65726F732E- <1> db "solleros.bmp",0
  6264 0000578B 626D7000            <1>
  6265 0000578F 38000000            <1> dd (f2-$$)/512
  6266 00005793 B0020000            <1> dd (f3-f2)/512
  6267 00005797 736F6C6C65726F732E- <1> db "solleros.txt",0
  6268 000057A0 74787400            <1>
  6269 000057A4 E8020000            <1> dd (f3-$$)/512
  6270 000057A8 01000000            <1> dd (f4-f3)/512
  6271 000057AC 74656C7900          <1> db "tely",0
  6272 000057B1 E9020000            <1> dd (f4-$$)/512
  6273 000057B5 01000000            <1> dd (f5-f4)/512
  6274 000057B9 74696D6500          <1> db "time",0
  6275 000057BE EA020000            <1> dd (f5-$$)/512
  6276 000057C2 02000000            <1> dd (f6-f5)/512
  6277 000057C6 7475746F7269616C2E- <1> db "tutorial.bat",0
  6278 000057CF 62617400            <1>
  6279 000057D3 EC020000            <1> dd (f6-$$)/512
  6280 000057D7 03000000            <1> dd (f7-f6)/512
  6281                              <1> enddiskfileindex:
  6282                              <1> 
  6283                                  	%include 'source/msg.asm'
  6284 000057DB 6578697400          <1> 	exitmsg db	"exit",0
  6285 000057E0 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  6286 000057E9 00                  <1>
  6287 000057EA 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  6288 000057F3 6E642E0D0A00        <1>
  6289 000057F9 757365726E616D653A- <1> 	userask db "username:",0
  6290 00005802 00                  <1>
  6291 00005803 70617373776F72643A- <1> 	pwdask	db	"password:",0
  6292 0000580C 00                  <1>
  6293 0000580D 40536F6C6C65724F53- <1> 	location	db	"@SollerOS]:",0
  6294 00005816 5D3A00              <1>
  6295 00005819 0D0A00              <1> 	line	db	13,10,0
  6296 0000581C 200900              <1> 	dirtab 	db " ",9,0
  6297                              <1> 	userlst:
  6298 0000581F 7573657200          <1> 			db "user",0
  6299 00005824 70617373776F726400  <1> 			db "password",0
  6300 0000582D 726F6F7400          <1> 			db "root",0
  6301 00005832 617765736F6D65706F- <1> 			db "awesomepower",0
  6302 0000583B 77657200            <1>
  6303 0000583F 6E00                <1> 			db "n",0	;;use for quick entry-a quick double n followed by a double enter will get you in
  6304 00005841 00                  <1> 			db 0
  6305                              <1> 	userlstend:
  6306                              <1> 	
  6307 00005841 <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  6308                              <1> fontend:
  6309                              <1> 
  6310                              <1> 
  6311                              <1> mcursor:
  6312 00006842 01                  <1> 	db	00000001b
  6313 00006843 81                  <1> 	db	10000001b
  6314 00006844 C1                  <1> 	db	11000001b
  6315 00006845 E1                  <1> 	db	11100001b
  6316 00006846 F1                  <1> 	db	11110001b
  6317 00006847 F9                  <1> 	db	11111001b
  6318 00006848 FD                  <1> 	db	11111101b
  6319 00006849 FF                  <1> 	db	11111111b
  6320 0000684A F9                  <1> 	db	11111001b
  6321 0000684B B9                  <1> 	db	10111001b
  6322 0000684C 39                  <1> 	db	00111001b
  6323 0000684D 1C                  <1> 	db	00011100b
  6324 0000684E 1C                  <1> 	db	00011100b
  6325 0000684F 0E                  <1> 	db	00001110b
  6326 00006850 0E                  <1> 	db	00001110b
  6327 00006851 0C                  <1> 	db	00001100b
  6328                              <1> 
  6329                              <1> ;cursorbmp:
  6330                              <1> ;	db	1,0,0,0,0,0,0,0
  6331                              <1> ;	db	1,1,0,0,0,0,0,0
  6332                              <1> ;	db	1,1,1,0,0,0,0,0
  6333                              <1> ;	db	1,1,1,1,0,0,0,0
  6334                              <1> ;	db	1,1,1,1,1,0,0,0
  6335                              <1> ;	db	1,1,1,1,1,1,0,0
  6336                              <1> ;	db	1,1,1,1,1,1,1,0
  6337                              <1> ;	db	1,1,1,1,1,1,1,1
  6338                              <1> ;	db	1,1,1,1,1,1,0,0
  6339                              <1> ;	db	1,1,0,1,1,1,0,0
  6340                              <1> ;	db	1,0,0,1,1,1,0,0
  6341                              <1> ;	db	0,0,0,0,1,1,1,0
  6342                              <1> ;	db	0,0,0,0,1,1,1,0
  6343                              <1> ;	db	0,0,0,0,0,1,1,1
  6344                              <1> ;	db	0,0,0,0,0,1,1,1
  6345                              <1> ;	db	0,0,0,0,0,1,1,0
  6346                              <1> ;cursorbmpend:
  6347                              <1> 
  6348                              <1> 
  6349                              <1> VBEMODEBLOCK:
  6350 00006852 00<rept>            <1> vbesignature 		times 4 db 0	;VBE Signature
  6351 00006856 00<rept>            <1> vbeversion  		times 2 db 0	;VBE Version
  6352 00006858 00<rept>            <1> oemstringptr  		times 4 db 0	;Pointer to OEM String
  6353 0000685C 00<rept>            <1> capabilities 		times 4 db 0	;Capabilities of graphics cont.
  6354 00006860 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  6355 00006864 00<rept>            <1> totalmemory   		times 2 db 0	;number of 64Kb memory blocks
  6356 00006866 00<rept>            <1> oemsoftwarerev  	times 2 db 0	;VBE implementation Software revision
  6357 00006868 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  6358 0000686C 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  6359 00006870 00<rept>            <1> oemproductrevptr 	times 4 db 0	;Pointer to Product Revision String
  6360 00006874 00<rept>            <1> reserved			times 222 db 0	;Reserved for VBE implementation scratch area
  6361 00006952 00<rept>            <1> oemdata 			times 256 db 0	;Data Area for OEM Strings
  6362                              <1> 
  6363                              <1> 
  6364                              <1> VBEMODEINFOBLOCK:
  6365                              <1> ;Mandatory information for all VBE revision
  6366 00006A52 00<rept>            <1> modeattributes   	times 2 db 0	;Mode attributes
  6367 00006A54 00                  <1> winaattributes   	times 1 db 0	;Window A attributes
  6368 00006A55 00                  <1> winbattributes   	times 1 db 0	;Window B attributes
  6369 00006A56 00<rept>            <1> wingranularity   	times 2 db 0	;Window granularity
  6370 00006A58 00<rept>            <1> winsize          	times 2 db 0	;Window size
  6371 00006A5A 00<rept>            <1> winasegment      	times 2 db 0	;Window A start segment
  6372 00006A5C 00<rept>            <1> winbsegment      	times 2 db 0	;Window B start segment
  6373 00006A5E 00<rept>            <1> winfuncptr       	times 4 db 0	;pointer to window function
  6374 00006A62 00<rept>            <1> bytesperscanline 	times 2 db 0	;Bytes per scan line
  6375                              <1> 
  6376                              <1> ;Mandatory information for VBE 1.2 and above
  6377 00006A64 00<rept>            <1> xresolution     	times 2 db 0	;Horizontal resolution in pixel or chars
  6378 00006A66 00<rept>            <1> yresolution	    	times 2 db 0	;Vertical resolution in pixel or chars
  6379 00006A68 00                  <1> xcharsize       	times 1 db 0	;Character cell width in pixel
  6380 00006A69 00                  <1> ycharsize       	times 1 db 0	;Character cell height in pixel
  6381 00006A6A 00                  <1> numberofplanes  	times 1 db 0	;Number of memory planes
  6382 00006A6B 00                  <1> bitsperpixel    	times 1 db 0	;Bits per pixel
  6383 00006A6C 00                  <1> numberofbanks   	times 1 db 0	;Number of banks
  6384 00006A6D 00                  <1> memorymodel     	times 1 db 0	;Memory model type
  6385 00006A6E 00                  <1> banksize        	times 1 db 0	;Bank size in KB
  6386 00006A6F 00                  <1> numberofimagepages	times 1 db 0	;Number of images
  6387 00006A70 00                  <1> reserved1       	times 1 db 0	;Reserved for page function
  6388                              <1> 
  6389                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  6390 00006A71 00                  <1> redmasksize			times 1 db 0	;Size of direct color red mask in bits
  6391 00006A72 00                  <1> redfieldposition	times 1 db 0	;Bit position of lsb of red bask
  6392 00006A73 00                  <1> greenmasksize   	times 1 db 0	;Size of direct color green mask in bits
  6393 00006A74 00                  <1> greenfieldposition	times 1 db 0	;Bit position of lsb of green bask
  6394 00006A75 00                  <1> bluemasksize		times 1 db 0	;Size of direct color blue mask in bits
  6395 00006A76 00                  <1> bluefieldposition	times 1 db 0	;Bit position of lsb of blue bask
  6396 00006A77 00                  <1> rsvdmasksize        times 1	db 0	;Size of direct color reserved mask in bits
  6397 00006A78 00                  <1> rsvdfieldposition	times 1	db 0	;Bit position of lsb of reserved bask
  6398 00006A79 00                  <1> directcolormodeinfo	times 1 db 0	;Direct color mode attributes
  6399                              <1> 
  6400                              <1> ;Mandatory information for VBE 2.0 and above
  6401 00006A7A 00<rept>            <1> physbaseptr 		times 4 db 0	;Physical address for flat frame buffer
  6402 00006A7E 00<rept>            <1> offscreenmemoffset 	times 4 db 0	;Pointer to start of off screen memory
  6403 00006A82 00<rept>            <1> offscreenmemsize 	times 2 db 0    ;Amount of off screen memory in 1Kb units
  6404 00006A84 00<rept>            <1> reserved2 			times 206 db 0  ;Remainder of ModeInfoBlock
  6405                                  	;%include 'source/memory.asm'
  6406                                  	%include 'source/buf.asm'
  6407 00006B52 4255465354415254    <1> db "BUFSTART"
  6408                              <1> [section .bss]
  6409                              <1> bssstart:
  6410                              <1> stack:
  6411 00000000 <res 00001000>      <1> 	resb 4096
  6412                              <1> stackend:
  6413                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  6414 00001000 <res 00000200>      <1> 	resb 200h 
  6415                              <1> 	graphicstableend:
  6416                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  6417 00001200 <res 00000100>      <1> 	resb 256 
  6418                              <1> mcolorend:
  6419 00001300 <res 00000200>      <1> fileindex: resb 200h
  6420                              <1> fileindexend:
  6421 00001500 <res 00000001>      <1> IFON resb 1 
  6422 00001501 <res 00000064>      <1> IFTRUE resb 100 
  6423 00001565 <res 00000004>      <1> BATCHPOS resb 4 
  6424 00001569 <res 00000001>      <1> BATCHISON resb 1 
  6425 0000156A <res 00000001>      <1> LOOPON resb 1 
  6426 0000156B <res 00000004>      <1> LOOPPOS	resb 4 
  6427 0000156F <res 00000500>      <1> variables: 	resb 500h 
  6428 00001A6F <res 00000001>      <1> varend: resb 1
  6429 00001A70 <res 00000100>      <1> buftxt2: resb 100h
  6430 00001B70 <res 0000000A>      <1> resb 10
  6431 00001B7A <res 00000100>      <1> buftxt: resb 100h 
  6432 00001C7A <res 00000014>      <1> buf2:	resb 20 
  6433 00001C8E <res 00000001>      <1> numbuf: resb 1 
  6434 00001C8F <res 000012C0>      <1> videobuf2 		resb 0x12C0 
  6435 00002F4F <res 000000C8>      <1> videobufend		resb 200
  6436 00003017 <res 00000004>      <1> lastcommandpos: resb 4
  6437 0000301B <res 00000004>      <1> currentcommandpos: resb 4
  6438                              <1> commandbuf:
  6439 0000301F <res 00000400>      <1> resb 1024
  6440                              <1> commandbufend:
  6441                              <1> rbuffstart: ;for use with networking
  6442                              <1> ;resb 8212
  6443                              <1> threadlist:	;;this buffer will hold the stack locations of all of the threads, up to 2048
  6444 0000341F <res 00002008>      <1> 	resb 2050*4
  6445                              <1> threadlistend:
  6446                              <1> stacks:		;;the stacks will go on forever until end of memory
  6447 00005427 <res 00000400>      <1> 	resb 1024
  6448                              <1> stackdummy:
  6449 00005827 <res 00000400>      <1> 	resb 1024
  6450                              <1> stack1:
  6451 00005C27 <res 00200800>      <1> 	resb 1024*2050	;;woah, thats a lot of space for stacks
  6452                              <1> bssend:		;;from here on, it is not kernel space so apps can be loaded here.
  6453                              <1> [section .text]
  6454                                      %include 'files.asm'
  6455 00006B5A 00<rept>            <1> align 512,db 0
  6456                              <1> f0:
  6457 00006B5A <incbin>            <1> incbin "included/exp"
  6458 00006C56 00<rept>            <1> align 512,db 0
  6459                              <1> f1:
  6460 00006C56 <incbin>            <1> incbin "included/fork"
  6461 00006E67 00<rept>            <1> align 512,db 0
  6462                              <1> f2:
  6463 00006E67 <incbin>            <1> incbin "included/solleros.bmp"
  6464 0005CFE6 00<rept>            <1> align 512,db 0
  6465                              <1> f3:
  6466 0005CFE6 <incbin>            <1> incbin "included/solleros.txt"
  6467 0005D176 00<rept>            <1> align 512,db 0
  6468                              <1> f4:
  6469 0005D176 <incbin>            <1> incbin "included/tely"
  6470 0005D3BD 00<rept>            <1> align 512,db 0
  6471                              <1> f5:
  6472 0005D3BD <incbin>            <1> incbin "included/time"
  6473 0005D67B 00<rept>            <1> align 512,db 0
  6474                              <1> f6:
  6475 0005D67B <incbin>            <1> incbin "included/tutorial.bat"
  6476 0005DCAA 00<rept>            <1> align 512,db 0
  6477                              <1> f7:
