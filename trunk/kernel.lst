     1                                  [BITS 16]
     2                                      %include 'source/menu.asm'
     3                              <1>     ; MENU.ASM
     4                              <1> prog:	
     5 00000000 8CC8                <1> 	    mov ax, cs
     6 00000002 E90400              <1> 	    jmp mainindex	;;this command gives the solleros user the location of mainindex
     7 00000005 4A525300            <1> 	    db "JRS",0	;;this gives the bootloader a key to look for
     8                              <1> mainindex:
     9 00000009 E90000              <1> 	    jmp mainindexdn	;;this gives the size of the index
    10                              <1> 	    ;not needed;dw 0405h,progstart,batchprogend,fileindex,fileindexend,variables,varend,nwcmd,int30h,physbaseptr,0
    11                              <1> mainindexdn:
    12 0000000C 8ED8                <1> 	mov ds, ax
    13 0000000E 8EC0                <1> 	mov es, ax
    14 00000010 8ED0                <1> 	mov ss, ax
    15 00000012 880E[2B00]          <1> 	mov [DriveNumber], cl
    16 00000016 668916[2C00]        <1> 	mov [lbaad], edx
    17 0000001B B800A0              <1> 	mov ax, 0xA000
    18 0000001E 8EE8                <1> 	mov gs, ax
    19 00000020 B81200              <1> 	mov ax, 12h
    20 00000023 BB0000              <1> 	mov bx, 0
    21 00000026 CD10                <1> 	int 10h
    22                              <1> ;	mov si, graphicstable
    23                              <1> ;	mov di, rbuffstart
    24                              <1> ;	mov eax, 0
    25                              <1> ;initmemory:		;;no longer necessary
    26                              <1> ;	mov [si], eax
    27                              <1> ;	add si, 4
    28                              <1> ;	cmp si, di
    29                              <1> ;	jbe initmemory
    30 00000028 E90900              <1> 	jmp guiload
    31                              <1> 
    32 0000002B 00                  <1> DriveNumber db 0
    33 0000002C 00000000            <1> lbaad dd 0
    34                              <1> 	
    35 00000030 0000                <1> vesamode dw 0
    36 00000032 0000                <1> videomodecache dw 0
    37                              <1> 
    38                              <1> guiload:
    39 00000034 B8004F              <1> 	mov ax, 04F00h
    40 00000037 BF[0969]            <1> 	mov di, VBEMODEBLOCK
    41 0000003A CD10                <1> 	int 10h
    42 0000003C BE[2B69]            <1> 	mov si, reserved
    43 0000003F 81EE0200            <1> 	sub si, 2
    44                              <1> findvideomodes:
    45 00000043 81C60200            <1> 	add si, 2
    46 00000047 8B0C                <1> 	mov cx, [si]
    47 00000049 81F9FFFF            <1> 	cmp cx, 0xFFFF
    48 0000004D 0F840A00            <1> 	je near nextvmode
    49 00000051 81FE[096A]          <1> 	cmp si, oemdata
    50 00000055 0F83E300            <1> 	jae near guiload2	;;kill if no valid list is found
    51 00000059 EBE8                <1> 	jmp findvideomodes 	
    52                              <1> ;;debug,shows vmodes available
    53                              <1> nextvmode:
    54 0000005B 81EE0200            <1> 	sub si, 2
    55 0000005F 81FE[2B69]          <1> 	cmp si, reserved
    56 00000063 0F82D500            <1> 	jb near guiload2
    57 00000067 8B0C                <1> 	mov cx, [si]
    58 00000069 81F9FFFF            <1> 	cmp cx, 0xFFFF
    59 0000006D 0F84CB00            <1> 	je near guiload2
    60 00000071 81C10040            <1> 	add cx, 0x4000 		;;Linear Frame Buffer
    61 00000075 B8014F              <1> 	mov ax, 04F01h
    62 00000078 BF[096B]            <1> 	mov di, VBEMODEINFOBLOCK
    63 0000007B 890E[3000]          <1> 	mov [vesamode], cx
    64 0000007F CD10                <1> 	int 10h
    65 00000081 A0[226B]            <1> 	mov al, [bitsperpixel]
    66 00000084 3C10                <1> 	cmp al, 16
    67 00000086 75D3                <1> 	jne nextvmode
    68 00000088 8936[3200]          <1> 	mov [videomodecache], si
    69 0000008C 80FC00              <1> 	cmp ah, 0
    70 0000008F 0F842200            <1> 	je near setvesamode
    71 00000093 EBC6                <1> 	jmp nextvmode
    72 00000095 0A0D49732074686973- <1> isthisvideook db 10,13,"Is this video mode OK?(y/n)",13,10,0
    73 0000009E 20766964656F206D6F- <1>
    74 000000A7 6465204F4B3F28792F- <1>
    75 000000B0 6E290D0A00          <1>
    76                              <1> setvesamode:
    77 000000B5 8B0E[1B6B]          <1> 	mov cx, [xresolution]
    78 000000B9 E8B800              <1> 	call decshow
    79 000000BC B078                <1> 	mov al, "x"
    80 000000BE E82001              <1> 	call char
    81 000000C1 8B0E[1D6B]          <1> 	mov cx, [yresolution]
    82 000000C5 E8AC00              <1> 	call decshow
    83 000000C8 B040                <1> 	mov al, "@"
    84 000000CA E81401              <1> 	call char
    85 000000CD 8A0E[226B]          <1> 	mov cl, [bitsperpixel]
    86 000000D1 E8A000              <1> 	call decshow
    87 000000D4 BE[9500]            <1> 	mov si, isthisvideook
    88 000000D7 E88200              <1> 	call printrm
    89 000000DA B80000              <1> 	mov ax, 0
    90 000000DD CD16                <1> 	int 16h
    91 000000DF 8B36[3200]          <1> 	mov si, [videomodecache]
    92 000000E3 3C79                <1> 	cmp al, "y"
    93 000000E5 0F8572FF            <1> 	jne nextvmode
    94 000000E9 8B16[1B6B]          <1> 	mov dx, [xresolution]
    95 000000ED 8B0E[1D6B]          <1> 	mov cx, [yresolution]
    96 000000F1 8916[4736]          <1> 	mov [resolutionx], dx
    97 000000F5 890E[4536]          <1> 	mov [resolutiony], cx
    98 000000F9 01D2                <1> 	add dx, dx
    99 000000FB 8916[4936]          <1> 	mov [resolutionx2], dx
   100 000000FF BA0000              <1> 	mov dx, 0
   101 00000102 B90000              <1> 	mov cx, 0
   102 00000105 B8024F              <1> 	mov ax, 04F02h
   103 00000108 8B1E[3000]          <1> 	mov bx, [vesamode]
   104 0000010C CD10                <1> 	int 10h		;;enter VESA mode
   105 0000010E 668B3E[316B]        <1> 	mov edi, [physbaseptr]
   106 00000113 66B800000000        <1> 	mov eax, 0
   107 00000119 8CD8                <1> 	mov ax, ds
   108 0000011B 66C1E004            <1> 	shl eax, 4
   109 0000011F 6629C7              <1> 	sub edi, eax
   110 00000122 66893E[316B]        <1> 	mov [physbaseptr], edi	;;fix lfb base, is over by 0x20000 or 0x2000:0 where OS starts
   111 00000127 6631C0              <1> 	xor eax, eax
   112 0000012A 6631DB              <1> 	xor ebx, ebx
   113 0000012D 6631C9              <1> 	xor ecx, ecx
   114 00000130 6631D2              <1> 	xor edx, edx
   115 00000133 6631F6              <1> 	xor esi, esi
   116 00000136 6631FF              <1> 	xor edi, edi	;;reset registers
   117 00000139 E90B01              <1> 	jmp pmode
   118                              <1> guiload2:
   119 0000013C B81200              <1> 	mov ax, 12h
   120 0000013F BB0000              <1> 	mov bx, 0
   121 00000142 CD10                <1> 	int 10h
   122 00000144 C606[5B01]01        <1> 	mov byte [guinodo], 1
   123 00000149 6631DB              <1> 	xor ebx, ebx
   124 0000014C 6631C9              <1> 	xor ecx, ecx
   125 0000014F 6631D2              <1> 	xor edx, edx
   126 00000152 6631F6              <1> 	xor esi, esi
   127 00000155 6631FF              <1> 	xor edi, edi
   128 00000158 E9EC00              <1> 	jmp pmode
   129                              <1> ;;	jmp gui ;;test vesa
   130                              <1> 
   131 0000015B 00                  <1> guinodo db 0
   132                              <1> 
   133                              <1>     printrm:			; 'si' comes in with string address
   134 0000015C BB0700              <1> 	    mov bx,07		; write to display
   135 0000015F B40E                <1> 	    mov ah,0Eh		; screen function
   136 00000161 8A04                <1>     prs2:    mov al,[si]         ; get next character
   137 00000163 3C00                <1> 	    cmp al,0		; look for terminator 
   138 00000165 7405                <1>             je finpr2		; zero byte at end of string
   139 00000167 CD10                <1> 	    int 10h		; write character to screen.    
   140 00000169 46                  <1>      	    inc si	     	; move to next character
   141 0000016A EBF5                <1> 	    jmp prs2		; loop
   142 0000016C C3                  <1>     finpr2: ret
   143                              <1> 
   144 0000016D 0000000000          <1> dcnm db 0,0,0,0,0
   145 00000172 0000                <1> dcnmend db 0,0
   146                              <1> 
   147                              <1> 
   148                              <1> decshow:
   149 00000174 BE[6D01]            <1> 	mov si, dcnm
   150                              <1> decclear:
   151 00000177 B030                <1> 	mov al, "0"
   152 00000179 8804                <1> 	mov [si], al
   153 0000017B 46                  <1> 	inc si
   154 0000017C 81FE[7201]          <1> 	cmp si, dcnmend
   155 00000180 76F5                <1> 	jbe decclear
   156 00000182 4E                  <1> 	dec si
   157 00000183 E81500              <1> 	call convertrm
   158 00000186 BE[6D01]            <1> 	mov si, dcnm
   159                              <1> dectst:
   160 00000189 8A04                <1> 	mov al, [si]
   161 0000018B 46                  <1> 	inc si
   162 0000018C 81FE[7201]          <1> 	cmp si, dcnmend
   163 00000190 7704                <1> 	ja dectstend
   164 00000192 3C30                <1> 	cmp al, "0"
   165 00000194 76F3                <1> 	jbe dectst
   166                              <1> dectstend:
   167 00000196 4E                  <1> 	dec si
   168 00000197 E8C2FF              <1> 	call printrm
   169 0000019A C3                  <1> 	ret
   170                              <1> 	
   171                              <1> 	
   172                              <1> convertrm:
   173 0000019B 4E                  <1> 	dec si
   174 0000019C 89F3                <1> 	mov bx, si		;place to convert into must be in si, number to convert must be in cx
   175                              <1> cnvrtrm:
   176 0000019E 89DE                <1> 	mov si, bx
   177 000001A0 81EE0300            <1> 	sub si, 3
   178 000001A4 46                  <1> ten3rm:	inc si
   179 000001A5 81F9E803            <1> 	cmp cx, 1000
   180 000001A9 7208                <1> 	jb ten2rm
   181 000001AB 81E9E803            <1> 	sub cx, 1000
   182 000001AF FE04                <1> 	inc byte [si]
   183 000001B1 EBEB                <1> 	jmp cnvrtrm
   184 000001B3 46                  <1> ten2rm:	inc si
   185 000001B4 81F96400            <1> 	cmp cx, 100
   186 000001B8 7208                <1> 	jb ten1rm
   187 000001BA 81E96400            <1> 	sub cx, 100
   188 000001BE FE04                <1> 	inc byte [si]
   189 000001C0 EBDC                <1> 	jmp cnvrtrm
   190 000001C2 46                  <1> ten1rm:	inc si
   191 000001C3 81F90A00            <1> 	cmp cx, 10
   192 000001C7 7208                <1> 	jb ten0rm
   193 000001C9 81E90A00            <1> 	sub cx, 10
   194 000001CD FE04                <1> 	inc byte [si]
   195 000001CF EBCD                <1> 	jmp cnvrtrm
   196 000001D1 46                  <1> ten0rm:	inc si
   197 000001D2 81F90100            <1> 	cmp cx, 1
   198 000001D6 7208                <1> 	jb tendnrm
   199 000001D8 81E90100            <1> 	sub cx, 1
   200 000001DC FE04                <1> 	inc byte [si]
   201 000001DE EBBE                <1> 	jmp cnvrtrm
   202                              <1> tendnrm:
   203 000001E0 C3                  <1> 	ret
   204                              <1> 
   205                              <1> 
   206                              <1> 
   207                              <1> 
   208                              <1>     char: 		    ;char must be in al
   209 000001E1 BB0700              <1>            mov bx, 07
   210 000001E4 B40E                <1> 	   mov ah, 0Eh
   211 000001E6 CD10                <1> 	   int 10h
   212 000001E8 C3                  <1> 	    ret
   213                              <1> 
   214                              <1> 		shutdown:
   215 000001E9 E84B00              <1> 			call realmode	
   216 000001EC B80053              <1> 			MOV AX, 5300h	; Shuts down APM-Machines.
   217 000001EF 31DB                <1> 			XOR BX, BX	; Newer machines automatically
   218 000001F1 CD15                <1> 			INT 15h		; shut down
   219 000001F3 B80453              <1> 			MOV AX, 5304h
   220 000001F6 31DB                <1> 			XOR BX, BX
   221 000001F8 CD15                <1> 			INT 15h		; Interrupt 15h originally was
   222 000001FA B80153              <1> 			MOV AX, 5301h	; used for Cartridges (cassettes)
   223 000001FD 31DB                <1> 			XOR BX, BX	; but is still in use for
   224 000001FF CD15                <1> 			INT 15h		; diverse things
   225 00000201 B80753              <1> 			MOV AX, 5307h
   226 00000204 BB0100              <1> 			MOV BX, 1
   227 00000207 B90300              <1> 			MOV CX, 3
   228 0000020A CD15                <1> 			INT 15h
   229 0000020C CF                  <1> 			IRET
   230                              <1> 
   231                              <1> 	coldboot:
   232 0000020D E82700              <1> 			call realmode
   233 00000210 B84000              <1> 			MOV AX, 0040h
   234 00000213 8EC0                <1> 			MOV ES, AX
   235 00000215 26C70672000000      <1> 			MOV WORD [ES:00072h], 0h
   236 0000021C EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   237 00000221 CF                  <1> 			IRET
   238                              <1> 
   239                              <1> 		warmboot:
   240 00000222 E81200              <1> 			call realmode
   241 00000225 B84000              <1> 			MOV AX, 0040h
   242 00000228 8EC0                <1> 			MOV ES, AX
   243 0000022A 26C70672003412      <1> 			MOV WORD [ES:00072h], 01234h
   244 00000231 EA0000FFFF          <1> 			JMP 0FFFFh:0000h
   245 00000236 CF                  <1> 			IRET
   246                              <1> 
   247                              <1> 
   248                              <1> realmode:
   249 00000237 0F20C0              <1>    mov eax, cr0
   250 0000023A 24FE                <1>    and al,0xFE     ; back to realmode
   251 0000023C 0F22C0              <1>    mov  cr0, eax   ; by toggling bit again
   252 0000023F FB                  <1>    sti
   253                              <1> 
   254 00000240 66B800000000        <1>    mov eax, 0
   255 00000246 C3                  <1>    ret
   256                                      %include 'source/pmode.asm'
   257                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   258                              <1> ;	16-bit real mode
   259                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   260                              <1> [BITS 16]
   261                              <1> pmode:
   262 00000247 BA9200              <1> 	mov dx, 0x92
   263 0000024A EC                  <1> 	in al, dx	;;A20
   264 0000024B 0C02                <1> 	or al, 2
   265 0000024D EE                  <1> 	out dx, al
   266 0000024E 6631DB              <1> 	xor ebx,ebx
   267 00000251 8CCB                <1> 	mov bx,cs		; EBX=segment
   268 00000253 66C1E304            <1> 	shl ebx,4		;	<< 4
   269 00000257 67668D03            <1> 	lea eax,[ebx]		; EAX=linear address of segment base
   270 0000025B A3[A706]            <1> 	mov [gdt2 + 2],ax
   271 0000025E A3[AF06]            <1> 	mov [gdt3 + 2],ax
   272 00000261 66C1E810            <1> 	shr eax,16
   273 00000265 A2[A906]            <1> 	mov [gdt2 + 4],al
   274 00000268 A2[B106]            <1> 	mov [gdt3 + 4],al
   275 0000026B 8826[AC06]          <1> 	mov [gdt2 + 7],ah
   276 0000026F 8826[B406]          <1> 	mov [gdt3 + 7],ah
   277 00000273 67668D83[95060000]  <1> 	lea eax,[ebx + gdt]	; EAX=linear address of gdt
   278 0000027B 66A3[8B06]          <1> 	mov [gdtr + 2],eax
   279 0000027F 67668D83[BA060000]  <1> 	lea eax,[ebx + idt]	; EAX=linear address of idt
   280 00000287 66A3[9106]          <1> 	mov [idtr + 2],eax
   281 0000028B FA                  <1> 	cli
   282 0000028C 0F0116[8906]        <1> 	lgdt [gdtr]
   283 00000291 0F011E[8F06]        <1> 	lidt [idtr]
   284 00000296 0F20C0              <1> 	mov eax,cr0
   285 00000299 0C01                <1> 	or al,1
   286 0000029B 0F22C0              <1> 	mov cr0,eax
   287 0000029E EA[A302]1000        <1> 	jmp SYS_CODE_SEL:do_pm
   288                              <1> [BITS 32]
   289                              <1> do_pm:
   290 000002A3 66B81800            <1> 	mov ax, SYS_DATA_SEL
   291 000002A7 8ED8                <1> 	mov ds,ax
   292 000002A9 8ED0                <1> 	mov ss,ax
   293 000002AB BC00000000          <1> 	mov esp, 0
   294 000002B0 90                  <1> 	nop
   295 000002B1 8EC0                <1> 	mov es,ax
   296 000002B3 8EE0                <1> 	mov fs,ax
   297 000002B5 8EE8                <1> 	mov gs,ax
   298 000002B7 803D[5B010000]01    <1> 	cmp byte [guinodo], 1
   299 000002BE 750A                <1> 	jne user1b
   300 000002C0 E8B30F0000          <1> 	call indexfiles
   301 000002C5 E965090000          <1> 	jmp os
   302                              <1> user1b:
   303 000002CA E9EC220000          <1> 	jmp gui
   304                              <1> 	
   305 000002CF 0000                <1> user2codepoint dw 0
   306                              <1> 
   307                              <1> unhand:	
   308                              <1> 	%assign i 0
   309                              <1> 	%rep 40
   310                              <1> 	cli
   311                              <1> 	mov byte [intprob], i
   312                              <1> 	jmp unhand2
   313                              <1> 	%assign i i+1
   314                              <1> 	%endrep
   315 000002D1 FA                  <2>  cli
   316 000002D2 C605[D2050000]00    <2>  mov byte [intprob], i
   317 000002D9 E9FB010000          <2>  jmp unhand2
   318                              <2>  %assign i i+1
   319 000002DE FA                  <2>  cli
   320 000002DF C605[D2050000]01    <2>  mov byte [intprob], i
   321 000002E6 E9EE010000          <2>  jmp unhand2
   322                              <2>  %assign i i+1
   323 000002EB FA                  <2>  cli
   324 000002EC C605[D2050000]02    <2>  mov byte [intprob], i
   325 000002F3 E9E1010000          <2>  jmp unhand2
   326                              <2>  %assign i i+1
   327 000002F8 FA                  <2>  cli
   328 000002F9 C605[D2050000]03    <2>  mov byte [intprob], i
   329 00000300 E9D4010000          <2>  jmp unhand2
   330                              <2>  %assign i i+1
   331 00000305 FA                  <2>  cli
   332 00000306 C605[D2050000]04    <2>  mov byte [intprob], i
   333 0000030D E9C7010000          <2>  jmp unhand2
   334                              <2>  %assign i i+1
   335 00000312 FA                  <2>  cli
   336 00000313 C605[D2050000]05    <2>  mov byte [intprob], i
   337 0000031A E9BA010000          <2>  jmp unhand2
   338                              <2>  %assign i i+1
   339 0000031F FA                  <2>  cli
   340 00000320 C605[D2050000]06    <2>  mov byte [intprob], i
   341 00000327 E9AD010000          <2>  jmp unhand2
   342                              <2>  %assign i i+1
   343 0000032C FA                  <2>  cli
   344 0000032D C605[D2050000]07    <2>  mov byte [intprob], i
   345 00000334 E9A0010000          <2>  jmp unhand2
   346                              <2>  %assign i i+1
   347 00000339 FA                  <2>  cli
   348 0000033A C605[D2050000]08    <2>  mov byte [intprob], i
   349 00000341 E993010000          <2>  jmp unhand2
   350                              <2>  %assign i i+1
   351 00000346 FA                  <2>  cli
   352 00000347 C605[D2050000]09    <2>  mov byte [intprob], i
   353 0000034E E986010000          <2>  jmp unhand2
   354                              <2>  %assign i i+1
   355 00000353 FA                  <2>  cli
   356 00000354 C605[D2050000]0A    <2>  mov byte [intprob], i
   357 0000035B E979010000          <2>  jmp unhand2
   358                              <2>  %assign i i+1
   359 00000360 FA                  <2>  cli
   360 00000361 C605[D2050000]0B    <2>  mov byte [intprob], i
   361 00000368 E96C010000          <2>  jmp unhand2
   362                              <2>  %assign i i+1
   363 0000036D FA                  <2>  cli
   364 0000036E C605[D2050000]0C    <2>  mov byte [intprob], i
   365 00000375 E95F010000          <2>  jmp unhand2
   366                              <2>  %assign i i+1
   367 0000037A FA                  <2>  cli
   368 0000037B C605[D2050000]0D    <2>  mov byte [intprob], i
   369 00000382 E952010000          <2>  jmp unhand2
   370                              <2>  %assign i i+1
   371 00000387 FA                  <2>  cli
   372 00000388 C605[D2050000]0E    <2>  mov byte [intprob], i
   373 0000038F E945010000          <2>  jmp unhand2
   374                              <2>  %assign i i+1
   375 00000394 FA                  <2>  cli
   376 00000395 C605[D2050000]0F    <2>  mov byte [intprob], i
   377 0000039C E938010000          <2>  jmp unhand2
   378                              <2>  %assign i i+1
   379 000003A1 FA                  <2>  cli
   380 000003A2 C605[D2050000]10    <2>  mov byte [intprob], i
   381 000003A9 E92B010000          <2>  jmp unhand2
   382                              <2>  %assign i i+1
   383 000003AE FA                  <2>  cli
   384 000003AF C605[D2050000]11    <2>  mov byte [intprob], i
   385 000003B6 E91E010000          <2>  jmp unhand2
   386                              <2>  %assign i i+1
   387 000003BB FA                  <2>  cli
   388 000003BC C605[D2050000]12    <2>  mov byte [intprob], i
   389 000003C3 E911010000          <2>  jmp unhand2
   390                              <2>  %assign i i+1
   391 000003C8 FA                  <2>  cli
   392 000003C9 C605[D2050000]13    <2>  mov byte [intprob], i
   393 000003D0 E904010000          <2>  jmp unhand2
   394                              <2>  %assign i i+1
   395 000003D5 FA                  <2>  cli
   396 000003D6 C605[D2050000]14    <2>  mov byte [intprob], i
   397 000003DD E9F7000000          <2>  jmp unhand2
   398                              <2>  %assign i i+1
   399 000003E2 FA                  <2>  cli
   400 000003E3 C605[D2050000]15    <2>  mov byte [intprob], i
   401 000003EA E9EA000000          <2>  jmp unhand2
   402                              <2>  %assign i i+1
   403 000003EF FA                  <2>  cli
   404 000003F0 C605[D2050000]16    <2>  mov byte [intprob], i
   405 000003F7 E9DD000000          <2>  jmp unhand2
   406                              <2>  %assign i i+1
   407 000003FC FA                  <2>  cli
   408 000003FD C605[D2050000]17    <2>  mov byte [intprob], i
   409 00000404 E9D0000000          <2>  jmp unhand2
   410                              <2>  %assign i i+1
   411 00000409 FA                  <2>  cli
   412 0000040A C605[D2050000]18    <2>  mov byte [intprob], i
   413 00000411 E9C3000000          <2>  jmp unhand2
   414                              <2>  %assign i i+1
   415 00000416 FA                  <2>  cli
   416 00000417 C605[D2050000]19    <2>  mov byte [intprob], i
   417 0000041E E9B6000000          <2>  jmp unhand2
   418                              <2>  %assign i i+1
   419 00000423 FA                  <2>  cli
   420 00000424 C605[D2050000]1A    <2>  mov byte [intprob], i
   421 0000042B E9A9000000          <2>  jmp unhand2
   422                              <2>  %assign i i+1
   423 00000430 FA                  <2>  cli
   424 00000431 C605[D2050000]1B    <2>  mov byte [intprob], i
   425 00000438 E99C000000          <2>  jmp unhand2
   426                              <2>  %assign i i+1
   427 0000043D FA                  <2>  cli
   428 0000043E C605[D2050000]1C    <2>  mov byte [intprob], i
   429 00000445 E98F000000          <2>  jmp unhand2
   430                              <2>  %assign i i+1
   431 0000044A FA                  <2>  cli
   432 0000044B C605[D2050000]1D    <2>  mov byte [intprob], i
   433 00000452 E982000000          <2>  jmp unhand2
   434                              <2>  %assign i i+1
   435 00000457 FA                  <2>  cli
   436 00000458 C605[D2050000]1E    <2>  mov byte [intprob], i
   437 0000045F E975000000          <2>  jmp unhand2
   438                              <2>  %assign i i+1
   439 00000464 FA                  <2>  cli
   440 00000465 C605[D2050000]1F    <2>  mov byte [intprob], i
   441 0000046C E968000000          <2>  jmp unhand2
   442                              <2>  %assign i i+1
   443 00000471 FA                  <2>  cli
   444 00000472 C605[D2050000]20    <2>  mov byte [intprob], i
   445 00000479 E95B000000          <2>  jmp unhand2
   446                              <2>  %assign i i+1
   447 0000047E FA                  <2>  cli
   448 0000047F C605[D2050000]21    <2>  mov byte [intprob], i
   449 00000486 E94E000000          <2>  jmp unhand2
   450                              <2>  %assign i i+1
   451 0000048B FA                  <2>  cli
   452 0000048C C605[D2050000]22    <2>  mov byte [intprob], i
   453 00000493 E941000000          <2>  jmp unhand2
   454                              <2>  %assign i i+1
   455 00000498 FA                  <2>  cli
   456 00000499 C605[D2050000]23    <2>  mov byte [intprob], i
   457 000004A0 E934000000          <2>  jmp unhand2
   458                              <2>  %assign i i+1
   459 000004A5 FA                  <2>  cli
   460 000004A6 C605[D2050000]24    <2>  mov byte [intprob], i
   461 000004AD E927000000          <2>  jmp unhand2
   462                              <2>  %assign i i+1
   463 000004B2 FA                  <2>  cli
   464 000004B3 C605[D2050000]25    <2>  mov byte [intprob], i
   465 000004BA E91A000000          <2>  jmp unhand2
   466                              <2>  %assign i i+1
   467 000004BF FA                  <2>  cli
   468 000004C0 C605[D2050000]26    <2>  mov byte [intprob], i
   469 000004C7 E90D000000          <2>  jmp unhand2
   470                              <2>  %assign i i+1
   471 000004CC FA                  <2>  cli
   472 000004CD C605[D2050000]27    <2>  mov byte [intprob], i
   473 000004D4 E900000000          <2>  jmp unhand2
   474                              <2>  %assign i i+1
   475                              <1> unhand2:
   476 000004D9 60                  <1> 	pushad
   477 000004DA C705[CF020000]0000- <1> 	mov dword [user2codepoint], 0
   478 000004E2 0000                <1>
   479 000004E4 89E6                <1> 	mov esi, esp
   480 000004E6 81C624000000        <1> 	add esi, 36
   481 000004EC 8935[C8050000]      <1> 	mov [esploc], esi
   482 000004F2 BE[D3050000]        <1> 	mov esi, unhandmsg
   483 000004F7 8935[CC050000]      <1> 	mov [esiloc], esi
   484 000004FD B900000000          <1> 	mov ecx, 0
   485 00000502 8A0D[D2050000]      <1> 	mov cl, [intprob]
   486 00000508 E856000000          <1> 	call expdump
   487                              <1> dumpstack:
   488 0000050D 8B35[C8050000]      <1> 	mov esi, [esploc]
   489 00000513 39E6                <1> 	cmp esi, esp
   490 00000515 7215                <1> 	jb donedump
   491 00000517 8B0E                <1> 	mov ecx, [esi]
   492 00000519 81EE04000000        <1> 	sub esi, 4
   493 0000051F 8935[C8050000]      <1> 	mov [esploc], esi
   494 00000525 E839000000          <1> 	call expdump
   495 0000052A EBE1                <1> 	jmp dumpstack
   496                              <1> donedump:
   497 0000052C 8B35[C8050000]      <1> 	mov esi, [esploc]
   498 00000532 8B7C2420            <1> 	mov edi, [esp + 32]
   499 00000536 8B4FFC              <1> 	mov ecx, [edi - 4]
   500 00000539 E825000000          <1> 	call expdump
   501 0000053E 8B35[C8050000]      <1> 	mov esi, [esploc]
   502 00000544 8B7C2420            <1> 	mov edi, [esp + 32]
   503 00000548 8B0F                <1> 	mov ecx, [edi]
   504 0000054A E814000000          <1> 	call expdump
   505 0000054F 8B35[C8050000]      <1> 	mov esi, [esploc]
   506 00000555 8B7C2420            <1> 	mov edi, [esp + 32]
   507 00000559 8B4F04              <1> 	mov ecx, [edi + 4]
   508 0000055C E802000000          <1> 	call expdump
   509 00000561 EBFE                <1> 	jmp $
   510                              <1> expdump:
   511 00000563 8B35[CC050000]      <1> 	mov esi, [esiloc]
   512 00000569 89F7                <1> 	mov edi, esi
   513 0000056B 81C70D000000        <1> 	add edi, 13
   514 00000571 81C604000000        <1> 	add esi, 4
   515 00000577 893D[CC050000]      <1> 	mov [esiloc], edi
   516 0000057D 4F                  <1> 	dec edi
   517 0000057E E8860A0000          <1> 	call converthex
   518 00000583 81EE04000000        <1> 	sub esi, 4
   519 00000589 803D[29280000]00    <1> 	cmp byte [guion], 0
   520 00000590 0F8422000000        <1> 	je near expdumptext
   521 00000596 668B0D[D0050000]    <1> 	mov cx, [locunhand]
   522 0000059D 668105[D0050000]10- <1> 	add word [locunhand], 16
   523 000005A5 00                  <1>
   524 000005A6 66BA0200            <1> 	mov dx, 2
   525 000005AA 66B80100            <1> 	mov ax, 1
   526 000005AE 66BB0000            <1> 	mov bx, 0
   527 000005B2 E8362C0000          <1> 	call showstring
   528 000005B7 C3                  <1> 	ret
   529                              <1> expdumptext:
   530 000005B8 E8CF040000          <1> 	call print
   531 000005BD BE[B33F0000]        <1> 	mov esi, line
   532 000005C2 E8C5040000          <1> 	call print
   533 000005C7 C3                  <1> 	ret
   534 000005C8 00000000            <1> esploc dd 0
   535 000005CC 00000000            <1> esiloc dd 0
   536 000005D0 0100                <1> locunhand dw 1
   537 000005D2 00                  <1> intprob db 0
   538 000005D3 494E54203030303030- <1> 	unhandmsg	db "INT 00000000",0
   539 000005DC 30303000            <1>
   540 000005E0 43533A3D3030303030- <1> 			db "CS:=00000000",0
   541 000005E9 30303000            <1>
   542 000005ED 4549503D3030303030- <1> 			db "EIP=00000000",0
   543 000005F6 30303000            <1>
   544 000005FA 4541583D3030303030- <1> 			db "EAX=00000000",0
   545 00000603 30303000            <1>
   546 00000607 4543583D3030303030- <1> 			db "ECX=00000000",0
   547 00000610 30303000            <1>
   548 00000614 4544583D3030303030- <1> 			db "EDX=00000000",0
   549 0000061D 30303000            <1>
   550 00000621 4542583D3030303030- <1> 			db "EBX=00000000",0
   551 0000062A 30303000            <1>
   552 0000062E 4553503D3030303030- <1> 			db "ESP=00000000",0
   553 00000637 30303000            <1>
   554 0000063B 4542503D3030303030- <1> 			db "EBP=00000000",0
   555 00000644 30303000            <1>
   556 00000648 4553493D3030303030- <1> 			db "ESI=00000000",0
   557 00000651 30303000            <1>
   558 00000655 4544493D3030303030- <1> 			db "EDI=00000000",0
   559 0000065E 30303000            <1>
   560 00000662 434D443D3030303030- <1> 			db "CMD=00000000",0
   561 0000066B 30303000            <1>
   562 0000066F 434D443D3030303030- <1> 			db "CMD=00000000",0
   563 00000678 30303000            <1>
   564 0000067C 434D443D3030303030- <1> 			db "CMD=00000000",0
   565 00000685 30303000            <1>
   566                              <1> unhandmsgend:
   567                              <1> 
   568                              <1> [BITS 16]
   569                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   570                              <1> ;	16-bit limit/32-bit linear base address of GDT and IDT
   571                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   572 00000689 1F00                <1> gdtr:	dw gdt_end - gdt - 1	; GDT limit
   573 0000068B [95060000]          <1> 	dd gdt			; linear, physical address of GDT
   574                              <1> 
   575 0000068F 8701                <1> idtr:	dw idt_end - idt - 1	; IDT limit
   576 00000691 [BA060000]          <1> 	dd idt			; linear, physical address of IDT
   577                              <1> 
   578                              <1> 
   579 00000695 0000                <1> gdt:	dw 0			; limit 15:0
   580 00000697 0000                <1> 	dw 0			; base 15:0
   581 00000699 00                  <1> 	db 0			; base 23:16
   582 0000069A 00                  <1> 	db 0			; type
   583 0000069B 00                  <1> 	db 0			; limit 19:16, flags
   584 0000069C 00                  <1> 	db 0			; base 31:24
   585                              <1> ; linear data segment descriptor
   586                              <1> LINEAR_SEL	equ	$-gdt
   587 0000069D FFFF                <1> 	dw 0xFFFF		; limit 0xFFFFF
   588 0000069F 0000                <1> 	dw 0			; base for this one is always 0
   589 000006A1 00                  <1> 	db 0
   590 000006A2 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   591 000006A3 CF                  <1> 	db 0xCF			; page-granular, 32-bit
   592 000006A4 00                  <1> 	db 0
   593                              <1> ; code segment descriptor
   594                              <1> SYS_CODE_SEL	equ	$-gdt
   595 000006A5 FFFF                <1> gdt2:	dw 0xFFFF
   596 000006A7 0000                <1> 	dw 0			; (base gets set above)
   597 000006A9 00                  <1> 	db 0
   598 000006AA 9A                  <1> 	db 0x9A			; present, ring 0, code, non-conforming, readable
   599 000006AB CF                  <1> 	db 0xCF
   600 000006AC 00                  <1> 	db 0
   601                              <1> ; data segment descriptor
   602                              <1> SYS_DATA_SEL	equ	$-gdt
   603 000006AD FFFF                <1> gdt3:	dw 0xFFFF
   604 000006AF 0000                <1> 	dw 0			; (base gets set above)
   605 000006B1 00                  <1> 	db 0
   606 000006B2 92                  <1> 	db 0x92			; present, ring 0, data, expand-up, writable
   607 000006B3 CF                  <1> 	db 0xCF
   608 000006B4 00                  <1> 	db 0
   609                              <1> gdt_end:
   610                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   611                              <1> ;	interrupt descriptor table (IDT)
   612                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   613                              <1> ; 32 reserved interrupts:
   614 000006B5 494454              <1> db "IDT"
   615 000006B8 [D102]              <1> dw unhand
   616                              <1> idt:	
   617                              <1> %assign i 0 
   618                              <1> %rep    9	;;change to 8
   619                              <1>         dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   620                              <1> %assign i i+1 
   621                              <1> %endrep
   622 000006BA [D102]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   623                              <2> %assign i i+1
   624 000006C2 [DE02]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   625                              <2> %assign i i+1
   626 000006CA [EB02]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   627                              <2> %assign i i+1
   628 000006D2 [F802]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   629                              <2> %assign i i+1
   630 000006DA [0503]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   631                              <2> %assign i i+1
   632 000006E2 [1203]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   633                              <2> %assign i i+1
   634 000006EA [1F03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   635                              <2> %assign i i+1
   636 000006F2 [2C03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   637                              <2> %assign i i+1
   638 000006FA [3903]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   639                              <2> %assign i i+1
   640                              <1> ;;FILL IN 8th
   641                              <1> %assign i 9
   642                              <1> %rep    39
   643                              <1>         dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   644                              <1> %assign i i+1 
   645                              <1> %endrep
   646 00000702 [4603]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   647                              <2> %assign i i+1
   648 0000070A [5303]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   649                              <2> %assign i i+1
   650 00000712 [6003]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   651                              <2> %assign i i+1
   652 0000071A [6D03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   653                              <2> %assign i i+1
   654 00000722 [7A03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   655                              <2> %assign i i+1
   656 0000072A [8703]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   657                              <2> %assign i i+1
   658 00000732 [9403]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   659                              <2> %assign i i+1
   660 0000073A [A103]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   661                              <2> %assign i i+1
   662 00000742 [AE03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   663                              <2> %assign i i+1
   664 0000074A [BB03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   665                              <2> %assign i i+1
   666 00000752 [C803]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   667                              <2> %assign i i+1
   668 0000075A [D503]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   669                              <2> %assign i i+1
   670 00000762 [E203]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   671                              <2> %assign i i+1
   672 0000076A [EF03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   673                              <2> %assign i i+1
   674 00000772 [FC03]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   675                              <2> %assign i i+1
   676 0000077A [0904]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   677                              <2> %assign i i+1
   678 00000782 [1604]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   679                              <2> %assign i i+1
   680 0000078A [2304]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   681                              <2> %assign i i+1
   682 00000792 [3004]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   683                              <2> %assign i i+1
   684 0000079A [3D04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   685                              <2> %assign i i+1
   686 000007A2 [4A04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   687                              <2> %assign i i+1
   688 000007AA [5704]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   689                              <2> %assign i i+1
   690 000007B2 [6404]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   691                              <2> %assign i i+1
   692 000007BA [7104]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   693                              <2> %assign i i+1
   694 000007C2 [7E04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   695                              <2> %assign i i+1
   696 000007CA [8B04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   697                              <2> %assign i i+1
   698 000007D2 [9804]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   699                              <2> %assign i i+1
   700 000007DA [A504]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   701                              <2> %assign i i+1
   702 000007E2 [B204]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   703                              <2> %assign i i+1
   704 000007EA [BF04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   705                              <2> %assign i i+1
   706 000007F2 [CC04]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   707                              <2> %assign i i+1
   708 000007FA [D904]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   709                              <2> %assign i i+1
   710 00000802 [E604]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   711                              <2> %assign i i+1
   712 0000080A [F304]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   713                              <2> %assign i i+1
   714 00000812 [0005]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   715                              <2> %assign i i+1
   716 0000081A [0D05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   717                              <2> %assign i i+1
   718 00000822 [1A05]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   719                              <2> %assign i i+1
   720 0000082A [2705]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   721                              <2> %assign i i+1
   722 00000832 [3405]1000008E0000  <2>  dw unhand + i*13,SYS_CODE_SEL,0x8E00,0
   723                              <2> %assign i i+1
   724                              <1> 
   725                              <1> ;;INT 30h for os use and 3rd party use:
   726 0000083A [4208]1000008E0000  <1> 	dw newints,SYS_CODE_SEL,0x8E00,0
   727                              <1> idt_end:
   728                                  [BITS 32]
   729                                      %include 'source/ints.asm'
   730                              <1> newints:	;;for great justice
   731 00000842 80FC00              <1> 	cmp ah, 0		;;originally 0
   732 00000845 0F8449000000        <1> 	je near intx0   ;;0=kills app
   733 0000084B 80FC01              <1> 	cmp ah, 1		;;originally 1
   734 0000084E 0F8445000000        <1> 	je near intx1   ;;3=print string
   735 00000854 80FC02              <1> 	cmp ah, 2		;;originally 2
   736 00000857 0F8442000000        <1> 	je near intx2	;;4=read string
   737 0000085D 80FC03              <1> 	cmp ah, 3		;;originally 3
   738 00000860 0F843F000000        <1> 	je near intx3	;;6=clear screen
   739 00000866 80FC04              <1> 	cmp ah, 4		;;originally 4
   740 00000869 0F843C000000        <1> 	je near intx4	;;5=read and print string
   741 0000086F 80FC05              <1> 	cmp ah, 5		;;originally 5		
   742 00000872 0F8439000000        <1> 	je near intx5	;;2=get char
   743 00000878 80FC06              <1> 	cmp ah, 6		;;originally 6
   744 0000087B 0F8436000000        <1> 	je near intx6	;;1=print char
   745 00000881 80FC07              <1> 	cmp ah, 7
   746 00000884 0F8433000000        <1> 	je near intx7	;;read file
   747 0000088A 80FC0A              <1> 	cmp ah, 10
   748 0000088D 0F8430000000        <1> 	je near intx10	;;create thread
   749 00000893 C3                  <1> 	ret
   750                              <1> 	
   751                              <1> intx0:
   752 00000894 E94B040000          <1> 	jmp nwcmd
   753                              <1> intx1:
   754 00000899 E8F6010000          <1> 	call int303
   755 0000089E C3                  <1> 	ret
   756                              <1> intx2:
   757 0000089F E80D020000          <1> 	call int304
   758 000008A4 C3                  <1> 	ret
   759                              <1> intx3:
   760 000008A5 E88E020000          <1> 	call int306
   761 000008AA C3                  <1> 	ret
   762                              <1> intx4:
   763 000008AB E825020000          <1> 	call int305
   764 000008B0 C3                  <1> 	ret
   765                              <1> intx5:
   766 000008B1 E8A6010000          <1> 	call int302
   767 000008B6 C3                  <1> 	ret
   768                              <1> intx6:
   769 000008B7 E812000000          <1> 	call int301
   770 000008BC C3                  <1> 	ret
   771                              <1> intx7:
   772 000008BD E856350000          <1> 	call loadfile
   773 000008C2 C3                  <1> 	ret
   774                              <1> intx10:
   775                              <1> ;	call thread
   776 000008C3 C3                  <1> 	ret
   777                              <1> 	
   778 000008C4 0000                <1> linebeginpos dw 0
   779 000008C6 0000                <1> videobufpos: dw 0
   780 000008C8 0000                <1> charpos db 0,0
   781 000008CA A01E                <1> charxy db 160,30
   782 000008CC 0000                <1> charbuf dw 0
   783                              <1> 
   784                              <1> int301:	;;print char, char in al, modifier in bl, will run videobuf2copy if called as is
   785 000008CE E807000000          <1> 	call int301prnt
   786 000008D3 E9A4020000          <1> 	jmp termcopy
   787 000008D8 00                  <1> termguion db 0
   788 000008D9 00                  <1> termcopyon db 0
   789                              <1> int301prnt:
   790 000008DA 88DC                <1> 	mov ah, bl
   791 000008DC 66A3[CC080000]      <1> 	mov [charbuf], ax
   792 000008E2 BB00000000          <1> 	mov ebx, 0
   793 000008E7 668B1D[C6080000]    <1> 	mov bx, [videobufpos]
   794 000008EE BF[81550000]        <1> 	mov edi, videobuf2
   795 000008F3 01DF                <1> 	add edi, ebx
   796 000008F5 BA00000000          <1> 	mov edx, 0
   797 000008FA 668B15[C8080000]    <1> 	mov dx, [charpos]
   798 00000901 B900000000          <1> 	mov ecx, 0
   799 00000906 668B0D[CA080000]    <1> 	mov cx, [charxy]
   800 0000090D 3C0D                <1> 	cmp al, 13
   801 0000090F 0F844B000000        <1> 	je near int301cr
   802 00000915 3C0A                <1> 	cmp al, 10
   803 00000917 0F8479000000        <1> 	je near int301nl
   804 0000091D 3C08                <1> 	cmp al, 8
   805 0000091F 0F8452000000        <1> 	je near int301bs
   806 00000925 668907              <1> 	mov [edi], ax
   807 00000928 81C702000000        <1> 	add edi, 2
   808 0000092E 80C202              <1> 	add dl, 2
   809                              <1> donecrnl:
   810 00000931 38CA                <1> 	cmp dl, cl
   811 00000933 0F838E000000        <1> 	jae near int301eol
   812                              <1> doneeol:
   813 00000939 38EE                <1> 	cmp dh, ch
   814 0000093B 0F83A4000000        <1> 	jae near int301scr	
   815                              <1> donescr:
   816 00000941 89FB                <1> 	mov ebx, edi
   817 00000943 81EB[81550000]      <1> 	sub ebx, videobuf2
   818 00000949 66891D[C6080000]    <1> 	mov [videobufpos], bx
   819 00000950 668915[C8080000]    <1> 	mov [charpos], dx
   820 00000957 66A1[CC080000]      <1> 	mov ax, [charbuf]
   821 0000095D 88E3                <1> 	mov bl, ah
   822 0000095F C3                  <1> 	ret
   823                              <1> 	
   824                              <1> 	int301cr:
   825 00000960 B200                <1> 		mov dl, 0
   826 00000962 BB00000000          <1> 		mov ebx, 0
   827 00000967 BF[81550000]        <1> 		mov edi, videobuf2
   828 0000096C 668B1D[C4080000]    <1> 		mov bx, [linebeginpos]
   829 00000973 01DF                <1> 		add edi, ebx
   830 00000975 EBBA                <1> 		jmp donecrnl
   831                              <1> 			
   832                              <1> 	int301bs:
   833 00000977 80FA00              <1> 		cmp dl, 0
   834 0000097A 740F                <1> 		je int301backline
   835                              <1> 	int301nobmr:
   836 0000097C 80EA02              <1> 		sub dl, 2
   837 0000097F 66B80000            <1> 		mov ax, 0
   838 00000983 81EF02000000        <1> 		sub edi, 2
   839 00000989 EBA6                <1> 		jmp donecrnl
   840                              <1> 	int301backline:
   841 0000098B 88CA                <1> 		mov dl, cl
   842 0000098D 80FE00              <1> 		cmp dh, 0
   843 00000990 74EA                <1> 		je int301nobmr
   844 00000992 FECE                <1> 		dec dh
   845 00000994 EBE6                <1> 		jmp int301nobmr
   846                              <1> 		
   847                              <1> 	int301nl:
   848 00000996 FEC6                <1> 		inc dh
   849 00000998 BB00000000          <1> 		mov ebx, 0
   850 0000099D 88CB                <1> 		mov bl, cl
   851 0000099F BF[81550000]        <1> 		mov edi, videobuf2
   852 000009A4 66031D[C6080000]    <1> 		add bx, [videobufpos]
   853 000009AB 01DF                <1> 		add edi, ebx
   854 000009AD BB00000000          <1> 		mov ebx, 0
   855 000009B2 88CB                <1> 		mov bl, cl
   856 000009B4 66031D[C4080000]    <1> 		add bx, [linebeginpos]
   857 000009BB 66891D[C4080000]    <1> 		mov [linebeginpos], bx
   858 000009C2 E96AFFFFFF          <1> 		jmp donecrnl
   859                              <1> 		
   860                              <1> 	int301eol:
   861 000009C7 B200                <1> 		mov dl, 0
   862 000009C9 FEC6                <1> 		inc dh
   863 000009CB BB00000000          <1> 		mov ebx, 0
   864 000009D0 88CB                <1> 		mov bl, cl
   865 000009D2 66031D[C4080000]    <1> 		add bx, [linebeginpos]
   866 000009D9 66891D[C4080000]    <1> 		mov [linebeginpos], bx
   867 000009E0 E954FFFFFF          <1> 		jmp doneeol
   868                              <1> 		
   869                              <1> 	int301scr:
   870 000009E5 FECE                <1> 		dec dh
   871 000009E7 BF[81550000]        <1> 		mov edi, videobuf2
   872 000009EC BB00000000          <1> 		mov ebx, 0
   873 000009F1 88CB                <1> 		mov bl, cl
   874 000009F3 01FB                <1> 		add ebx, edi
   875                              <1> 	intscrollloop:
   876 000009F5 668B03              <1> 		mov ax, [ebx]
   877 000009F8 668907              <1> 		mov [edi], ax
   878 000009FB 81C702000000        <1> 		add edi, 2
   879 00000A01 81C302000000        <1> 		add ebx, 2
   880 00000A07 80E902              <1> 		sub cl, 2
   881 00000A0A 80F900              <1> 		cmp cl, 0
   882 00000A0D 75E6                <1> 		jne intscrollloop
   883 00000A0F 8A0D[CA080000]      <1> 		mov cl, [charxy]
   884 00000A15 FECD                <1> 		dec ch
   885 00000A17 80FD01              <1> 		cmp ch, 1
   886 00000A1A 77D9                <1> 		ja intscrollloop
   887 00000A1C 66B80000            <1> 		mov ax, 0
   888 00000A20 81EF[81550000]      <1> 		sub edi, videobuf2
   889 00000A26 66893D[C4080000]    <1> 		mov [linebeginpos], di
   890 00000A2D 81C7[81550000]      <1> 		add edi, videobuf2
   891 00000A33 89FB                <1> 		mov ebx, edi
   892                              <1> 	intloopclear:
   893 00000A35 668903              <1> 		mov [ebx], ax
   894 00000A38 81C302000000        <1> 		add ebx, 2
   895 00000A3E 80E902              <1> 		sub cl, 2
   896 00000A41 80F900              <1> 		cmp cl, 0
   897 00000A44 75EF                <1> 		jne intloopclear
   898 00000A46 FECD                <1> 		dec ch
   899 00000A48 80FD00              <1> 		cmp ch, 0
   900 00000A4B 75E8                <1> 		jne intloopclear
   901 00000A4D 668B0D[CA080000]    <1> 		mov cx, [charxy]
   902 00000A54 E9E8FEFFFF          <1> 		jmp donescr
   903                              <1> 		
   904                              <1> 		
   905 00000A59 0000                <1> lastkey db 0,0
   906 00000A5B 00                  <1> trans db 0
   907                              <1> 
   908                              <1> 	int302:		;;get char, if al is 0, wait for key
   909 00000A5C A2[5B0A0000]        <1> 		mov [trans], al
   910                              <1> 	transcheck:
   911 00000A61 E825180000          <1> 		call guistartin
   912 00000A66 8A3D[5B0A0000]      <1> 		mov bh, [trans]
   913 00000A6C 66A1[590A0000]      <1> 		mov ax, [lastkey]
   914 00000A72 80FC1C              <1> 		cmp ah, 1Ch
   915 00000A75 740C                <1> 		je int302enter
   916 00000A77 08C7                <1> 		or bh, al
   917 00000A79 80FF00              <1> 		cmp bh, 0
   918 00000A7C 74E3                <1> 		je transcheck
   919 00000A7E E907000000          <1> 		jmp int302end
   920                              <1> 	int302enter:
   921 00000A83 B00D                <1> 		mov al, 13
   922 00000A85 E900000000          <1> 		jmp int302end
   923                              <1> 	int302end:
   924 00000A8A C3                  <1> 		ret
   925                              <1> 	
   926 00000A8B 00                  <1> endkey303 db 0
   927                              <1>     print:
   928 00000A8C 66B80000            <1> 		mov ax, 0
   929 00000A90 66BB0700            <1> 		mov bx, 7
   930                              <1> 	int303:	;;print line, al=last key,bl=modifier, esi=buffer
   931 00000A94 A2[8B0A0000]        <1> 		mov [endkey303], al
   932                              <1> 	int303b:
   933 00000A99 8A06                <1> 		mov al, [esi]
   934 00000A9B 3A05[8B0A0000]      <1> 		cmp al, [endkey303]
   935 00000AA1 7408                <1> 		je doneint303
   936 00000AA3 E832FEFFFF          <1> 		call int301prnt
   937 00000AA8 46                  <1> 		inc esi
   938 00000AA9 EBEE                <1> 		jmp int303b
   939                              <1> 	doneint303:
   940 00000AAB E9CC000000          <1> 		jmp termcopy
   941                              <1> 	
   942 00000AB0 00                  <1> endkey304 db 0
   943                              <1> 	int304:	;;get line, al=last key, esi = buffer
   944 00000AB1 A2[B00A0000]        <1> 		mov [endkey304], al
   945                              <1> 	int304b:
   946 00000AB6 56                  <1> 		push esi
   947 00000AB7 B000                <1> 		mov al, 0
   948 00000AB9 E89EFFFFFF          <1> 		call int302
   949 00000ABE 5E                  <1> 		pop esi
   950 00000ABF 8806                <1> 		mov [esi], al
   951 00000AC1 46                  <1> 		inc esi
   952 00000AC2 3A05[B00A0000]      <1> 		cmp al, [endkey304]
   953 00000AC8 75EC                <1> 		jne int304b
   954 00000ACA 4E                  <1> 		dec esi
   955 00000ACB C60600              <1> 		mov byte [esi], 0
   956 00000ACE C3                  <1> 	ret
   957                              <1> 	
   958 00000ACF 00                  <1> endkey305 db 0
   959 00000AD0 00                  <1> modkey305 db 0
   960 00000AD1 00000000            <1> firstesi305 dd 0
   961                              <1> 	int305:	;;print and get line, al=last key, bl=modifier, esi=buffer
   962 00000AD5 A2[CF0A0000]        <1> 		mov [endkey305], al
   963 00000ADA 881D[D00A0000]      <1> 		mov [modkey305], bl
   964 00000AE0 8935[D10A0000]      <1> 		mov [firstesi305], esi
   965                              <1> 	int305b:
   966 00000AE6 56                  <1> 		push esi
   967 00000AE7 B000                <1> 		mov al, 0
   968 00000AE9 E86EFFFFFF          <1> 		call int302
   969 00000AEE 5E                  <1> 		pop esi
   970 00000AEF 3C08                <1> 		cmp al, 8
   971 00000AF1 0F841D000000        <1> 		je near int305bscheck
   972 00000AF7 8806                <1> 		mov [esi], al
   973 00000AF9 46                  <1> 		inc esi
   974                              <1> 	bscheckequal:
   975 00000AFA 8A1D[D00A0000]      <1> 		mov bl, [modkey305]
   976 00000B00 E8C9FDFFFF          <1> 		call int301
   977 00000B05 8A25[CF0A0000]      <1> 		mov ah, [endkey305]
   978 00000B0B 38E0                <1> 		cmp al, ah
   979 00000B0D 75D7                <1> 		jne int305b
   980 00000B0F 4E                  <1> 		dec esi
   981 00000B10 C60600              <1> 		mov byte [esi], 0
   982 00000B13 C3                  <1> 		ret
   983                              <1> 	
   984                              <1> 	int305bscheck:
   985 00000B14 3B35[D10A0000]      <1> 		cmp esi, [firstesi305]
   986 00000B1A 7702                <1> 		ja goodbscheck
   987 00000B1C EBC8                <1> 		jmp int305b
   988                              <1> 	goodbscheck:
   989 00000B1E 4E                  <1> 		dec esi
   990 00000B1F C60600              <1> 		mov byte [esi], 0
   991 00000B22 8A1D[D00A0000]      <1> 		mov bl, [modkey305]
   992 00000B28 E8A1FDFFFF          <1> 		call int301
   993 00000B2D B020                <1> 		mov al, " "
   994 00000B2F E89AFDFFFF          <1> 		call int301
   995 00000B34 B008                <1> 		mov al, 8
   996 00000B36 EBC2                <1> 		jmp bscheckequal
   997                              <1> 		
   998                              <1> 	clear:		
   999                              <1> 	
  1000                              <1> 	int306:	;;clear screen
  1001 00000B38 668B0D[CA080000]    <1> 		mov cx, [charxy]
  1002 00000B3F BF[81550000]        <1> 		mov edi, videobuf2
  1003 00000B44 66B80000            <1> 		mov ax, 0
  1004 00000B48 66A3[C4080000]      <1> 		mov [linebeginpos], ax
  1005 00000B4E 66A3[C6080000]      <1> 		mov [videobufpos], ax
  1006 00000B54 66BA0000            <1> 		mov dx, 0
  1007 00000B58 66A3[C8080000]      <1> 		mov [charpos], ax
  1008                              <1> 	int306b:
  1009 00000B5E 668907              <1> 		mov [edi], ax
  1010 00000B61 81C702000000        <1> 		add edi, 2
  1011 00000B67 80E902              <1> 		sub cl, 2
  1012 00000B6A 80F900              <1> 		cmp cl, 0
  1013 00000B6D 75EF                <1> 		jne int306b
  1014 00000B6F 8A0D[CA080000]      <1> 		mov cl, [charxy]
  1015 00000B75 FECD                <1> 		dec ch
  1016 00000B77 80FD00              <1> 		cmp ch, 0
  1017 00000B7A 75E2                <1> 		jne int306b
  1018                              <1> 	
  1019                              <1> termcopy:	
  1020 00000B7C 60                  <1> 	pusha
  1021 00000B7D C605[28280000]00    <1> 	mov byte [mouseselecton], 0
  1022 00000B84 C605[D9080000]01    <1> 	mov byte [termcopyon], 1
  1023 00000B8B 803D[29280000]00    <1> 	cmp byte [guion], 0
  1024 00000B92 0F840D000000        <1> 	je near nowincopy
  1025 00000B98 803D[D8080000]01    <1> 	cmp byte [termguion], 1
  1026 00000B9F 0F845B280000        <1> 	je near windowvideocopy
  1027                              <1> nowincopy:
  1028 00000BA5 BE00000A00          <1> 	mov esi, 0xA0000
  1029 00000BAA 81EE00000200        <1> 	sub esi, 0x20000
  1030 00000BB0 BF[81550000]        <1> 	mov edi, videobuf2
  1031 00000BB5 B900000000          <1> 	mov ecx, 0
  1032 00000BBA 668B0D[CA080000]    <1> 	mov cx, [charxy]
  1033                              <1> nowincopy2:
  1034 00000BC1 BB[5C400000]        <1> 	mov ebx, fonts
  1035 00000BC6 B800000000          <1> 	mov eax, 0
  1036 00000BCB 8A07                <1> 	mov al, [edi]
  1037 00000BCD C1E004              <1> 	shl eax, 4
  1038 00000BD0 01C3                <1> 	add ebx, eax
  1039 00000BD2 47                  <1> 	inc edi
  1040 00000BD3 8A27                <1> 	mov ah, [edi]
  1041 00000BD5 BA00000000          <1> 	mov edx, 0
  1042 00000BDA 8A15[CA080000]      <1> 	mov dl, [charxy]
  1043 00000BE0 D1EA                <1> 	shr edx, 1
  1044 00000BE2 C1C110              <1> 	rol ecx, 16
  1045 00000BE5 B110                <1> 	mov cl, 16
  1046                              <1> nowinfont
  1047 00000BE7 8A03                <1> 	mov al, [ebx]
  1048 00000BE9 D0C8                <1> 	ror al, 1
  1049 00000BEB 80FC07              <1> 	cmp ah, 7
  1050 00000BEE 7602                <1> 	jbe notnotfont
  1051 00000BF0 F6D0                <1> 	not al
  1052                              <1> notnotfont:
  1053 00000BF2 8806                <1> 	mov [esi], al
  1054 00000BF4 01D6                <1> 	add esi, edx
  1055 00000BF6 43                  <1> 	inc ebx
  1056 00000BF7 FEC9                <1> 	dec cl
  1057 00000BF9 80F900              <1> 	cmp cl, 0
  1058 00000BFC 75E9                <1> 	jne nowinfont
  1059 00000BFE C1E204              <1> 	shl edx, 4
  1060 00000C01 29D6                <1> 	sub esi, edx
  1061 00000C03 C1C110              <1> 	rol ecx, 16
  1062                              <1> nopresentwinfont:
  1063 00000C06 47                  <1> 	inc edi
  1064 00000C07 46                  <1> 	inc esi
  1065 00000C08 80E902              <1> 	sub cl, 2
  1066 00000C0B 80F900              <1> 	cmp cl, 0
  1067 00000C0E 75B1                <1> 	jne nowincopy2
  1068 00000C10 8A0D[CA080000]      <1> 	mov cl, [charxy]
  1069 00000C16 BA00000000          <1> 	mov edx, 0
  1070 00000C1B 88CA                <1> 	mov dl, cl
  1071 00000C1D D1EA                <1> 	shr edx, 1
  1072 00000C1F 29D6                <1> 	sub esi, edx
  1073 00000C21 C1E204              <1> 	shl edx, 4
  1074 00000C24 01D6                <1> 	add esi, edx
  1075 00000C26 FECD                <1> 	dec ch
  1076 00000C28 80FD00              <1> 	cmp ch, 0
  1077 00000C2B 7594                <1> 	jne nowincopy2
  1078 00000C2D 61                  <1> 	popa
  1079 00000C2E C3                  <1> 	ret
  1080                                      %include 'source/solleros.asm'
  1081                              <1> 	;SOLLEROS.ASM
  1082                              <1> os:
  1083 00000C2F B403                <1> 	mov ah, 3
  1084 00000C31 CD30                <1> 	int 30h
  1085 00000C33 BE[823F0000]        <1> 	mov esi, pwdask
  1086 00000C38 E84FFEFFFF          <1> 	call print
  1087                              <1> 
  1088                              <1> passcheck:
  1089 00000C3D BE[6C530000]        <1> 	mov esi, buftxt
  1090                              <1> passcheck2:
  1091 00000C42 B000                <1> 	mov al, 0
  1092 00000C44 B405                <1> 	mov ah, 5
  1093 00000C46 CD30                <1> 	int 30h
  1094 00000C48 3C0D                <1> 	cmp al, 13
  1095 00000C4A 0F8434000000        <1> 	je near gotpass
  1096 00000C50 3C08                <1> 	cmp al, 8
  1097 00000C52 0F840B000000        <1> 	je near backpass
  1098 00000C58 8806                <1> 	mov [esi], al
  1099 00000C5A 46                  <1> 	inc esi
  1100 00000C5B B02A                <1> 	mov al, '*'
  1101 00000C5D B406                <1> 	mov ah, 6
  1102 00000C5F CD30                <1> 	int 30h
  1103 00000C61 EBDF                <1> 	jmp passcheck2
  1104                              <1> backpass:
  1105 00000C63 81FE[6C530000]      <1> 	cmp esi, buftxt
  1106 00000C69 0F84D3FFFFFF        <1> 	je near passcheck2
  1107 00000C6F 4E                  <1> 	dec esi
  1108 00000C70 B008                <1> 	mov al, 8
  1109 00000C72 B406                <1> 	mov ah, 6
  1110 00000C74 CD30                <1> 	int 30h
  1111 00000C76 B020                <1> 	mov al, " "
  1112 00000C78 B406                <1> 	mov ah, 6
  1113 00000C7A CD30                <1> 	int 30h
  1114 00000C7C B008                <1> 	mov al, 8
  1115 00000C7E B406                <1> 	mov ah, 6
  1116 00000C80 CD30                <1> 	int 30h
  1117 00000C82 EBBE                <1> 	jmp passcheck2
  1118                              <1> gotpass:
  1119 00000C84 B000                <1> 	mov al,0
  1120 00000C86 8806                <1> 	mov [esi], al
  1121 00000C88 BE[B33F0000]        <1> 	mov esi, line
  1122 00000C8D E8FAFDFFFF          <1> 	call print
  1123 00000C92 BE[6C530000]        <1> 	mov esi, buftxt
  1124 00000C97 BB[923F0000]        <1> 	mov ebx, pwd
  1125 00000C9C E80E010000          <1> 	call tester
  1126 00000CA1 3C01                <1> 	cmp al, 1
  1127 00000CA3 7402                <1> 	je pwdrgt
  1128 00000CA5 EB88                <1> 	jmp os
  1129 00000CA7 E88CFEFFFF          <1> pwdrgt:	call clear
  1130 00000CAC 66B90002            <1> 	mov cx, 200h
  1131 00000CB0 BE[6C530000]        <1> 	mov esi, buftxt
  1132 00000CB5 B000                <1> 	mov al, 0
  1133 00000CB7 8806                <1> bufclr:	mov [esi], al
  1134 00000CB9 46                  <1> 	inc esi
  1135 00000CBA E2FB                <1> 	loop bufclr
  1136 00000CBC E923000000          <1> 	jmp nwcmd
  1137                              <1> 
  1138                              <1> buftxtclear:
  1139 00000CC1 B000                <1> 	mov al, 0
  1140 00000CC3 BE[6C530000]        <1> 	mov esi, buftxt
  1141 00000CC8 81FE[6C550000]      <1> clearbuftxt: cmp esi, buf2
  1142 00000CCE 730E                <1> 	jae retbufclr
  1143 00000CD0 8806                <1> 	mov [esi], al
  1144 00000CD2 46                  <1> 	inc esi
  1145 00000CD3 EBF3                <1> 	jmp clearbuftxt
  1146                              <1> 
  1147 00000CD5 39DE                <1> clearitbuf: cmp esi, ebx
  1148 00000CD7 7305                <1> 	jae retbufclr
  1149 00000CD9 8806                <1> 	mov [esi], al
  1150 00000CDB 46                  <1> 	inc esi
  1151 00000CDC EBF7                <1> 	jmp clearitbuf
  1152 00000CDE C3                  <1> retbufclr: ret
  1153                              <1> 
  1154 00000CDF E900000000          <1> full:	jmp nwcmd
  1155                              <1> 
  1156                              <1> 
  1157 00000CE4 B001                <1> nwcmd:	mov al, 1
  1158 00000CE6 3805[654C0000]      <1> 	cmp [BATCHISON], al
  1159 00000CEC 0F832D000000        <1> 	jae near batchran
  1160 00000CF2 B000                <1> cancel:	mov al, 0
  1161 00000CF4 A2[FC4B0000]        <1> 	mov [IFON], al
  1162 00000CF9 A2[654C0000]        <1> 	mov [BATCHISON], al
  1163 00000CFE BE[9B3F0000]        <1> 	mov esi, cmd
  1164 00000D03 E884FDFFFF          <1> 	call print
  1165 00000D08 E8B4FFFFFF          <1> 	call buftxtclear
  1166 00000D0D BE[6C530000]        <1> 	mov esi, buftxt
  1167 00000D12 B00D                <1> 	mov al, 13
  1168 00000D14 B307                <1> 	mov bl, 7
  1169 00000D16 B404                <1> 	mov ah, 4
  1170 00000D18 CD30                <1> 	int 30h
  1171                              <1> gotcmd:	
  1172 00000D1A E914000000          <1> 	jmp run
  1173                              <1> 	
  1174                              <1> batchran:
  1175 00000D1F C3                  <1> 	ret
  1176                              <1> 
  1177 00000D20 E89CFFFFFF          <1> input:	call buftxtclear
  1178 00000D25 BE[6C530000]        <1> 	mov esi, buftxt		;puts input into buftxt AND onto screen
  1179 00000D2A B00D                <1> stdin:	mov al, 13
  1180 00000D2C B307                <1> 	mov bl, 7
  1181 00000D2E B404                <1> 	mov ah, 4
  1182 00000D30 CD30                <1> 	int 30h
  1183 00000D32 C3                  <1> 	ret
  1184                              <1> 
  1185 00000D33 BE[B33F0000]        <1> run:	mov esi, line
  1186 00000D38 E84FFDFFFF          <1> 		call print
  1187                              <1> progtest:
  1188 00000D3D BE[6C530000]        <1> 	mov esi, buftxt
  1189 00000D42 BB[6B4C0000]        <1> 	mov ebx, fileindex
  1190 00000D47 668B03              <1> prgnxt:	mov ax, [ebx]
  1191 00000D4A B105                <1> 	mov cl, 5
  1192 00000D4C B504                <1> 	mov ch, 4
  1193 00000D4E 6639C8              <1> 	cmp ax, cx
  1194 00000D51 740B                <1> 	je fndprg
  1195 00000D53 43                  <1> 	inc ebx
  1196 00000D54 81FB[6B4E0000]      <1> 	cmp ebx, fileindexend
  1197 00000D5A 7330                <1> 	jae prgnf
  1198 00000D5C EBE9                <1> 	jmp prgnxt
  1199 00000D5E 81C302000000        <1> fndprg: add ebx, 2
  1200 00000D64 BE[6C530000]        <1> 	mov esi, buftxt
  1201 00000D69 66B90000            <1> 	mov cx, 0
  1202 00000D6D E877000000          <1> 	call cndtest
  1203 00000D72 3C01                <1> 	cmp al, 1
  1204 00000D74 7302                <1> 	jae prggood
  1205 00000D76 EBCF                <1> 	jmp prgnxt
  1206 00000D78 81FB[6B4E0000]      <1> prggood: cmp ebx, fileindexend
  1207 00000D7E 732A                <1> 	jae prgdn
  1208 00000D80 81C303000000        <1> 	add ebx, 3
  1209 00000D86 8B3B                <1> 	mov edi, [ebx]
  1210 00000D88 90                  <1> 	nop
  1211 00000D89 90                  <1> 	nop
  1212 00000D8A FFE7                <1> 	jmp edi
  1213 00000D8C BE[693F0000]        <1> prgnf:	mov esi, notfound1
  1214 00000D91 E8F6FCFFFF          <1> 	call print
  1215 00000D96 BE[6C530000]        <1> 	mov esi, buftxt
  1216 00000D9B E8ECFCFFFF          <1> 	call print
  1217 00000DA0 BE[733F0000]        <1> 	mov esi, notfound2
  1218 00000DA5 E8E2FCFFFF          <1> 	call print
  1219 00000DAA E935FFFFFF          <1> prgdn:	jmp nwcmd
  1220                              <1> 
  1221                              <1> 
  1222                              <1> tester:			;si=user bx=prog returns 1 in al if true
  1223 00000DAF B000                <1> 	mov al, 0
  1224 00000DB1 8A06                <1> retest:	mov al, [esi]
  1225 00000DB3 8A23                <1> 	mov ah, [ebx]
  1226 00000DB5 3C00                <1> 	cmp al, 0
  1227 00000DB7 7408                <1> 	je testtrue
  1228 00000DB9 38E0                <1> 	cmp al, ah
  1229 00000DBB 750C                <1> 	jne testfalse
  1230 00000DBD 43                  <1> 	inc ebx
  1231 00000DBE 46                  <1> 	inc esi
  1232 00000DBF EBF0                <1> 	jmp retest
  1233                              <1> testtrue:
  1234 00000DC1 80FC00              <1> 	cmp ah, 0
  1235 00000DC4 7503                <1> 	jne testfalse
  1236 00000DC6 B001                <1> 	mov al, 1
  1237 00000DC8 C3                  <1> 	ret
  1238                              <1> testfalse:
  1239 00000DC9 B000                <1> 	mov al, 0
  1240 00000DCB C3                  <1> 	ret
  1241                              <1> 
  1242                              <1> optest:			;si=user bx=prog returns 1 in al if true
  1243 00000DCC B000                <1> 	mov al, 0
  1244                              <1> opretest:
  1245 00000DCE 8A06                <1> 	mov al, [esi]
  1246 00000DD0 8A23                <1> 	mov ah, [ebx]
  1247 00000DD2 38E0                <1> 	cmp al, ah
  1248 00000DD4 7510                <1> 	jne optestfalse
  1249 00000DD6 80FC00              <1> 	cmp ah, 0
  1250 00000DD9 7404                <1> 	je optesttrue
  1251 00000DDB 43                  <1> 	inc ebx
  1252 00000DDC 46                  <1> 	inc esi
  1253 00000DDD EBEF                <1> 	jmp opretest
  1254                              <1> optesttrue:
  1255 00000DDF 3C00                <1> 	cmp al, 0
  1256 00000DE1 7503                <1> 	jne optestfalse
  1257 00000DE3 B001                <1> 	mov al, 1
  1258 00000DE5 C3                  <1> 	ret
  1259                              <1> optestfalse:
  1260 00000DE6 B000                <1> 	mov al, 0
  1261 00000DE8 C3                  <1> 	ret
  1262                              <1> 
  1263                              <1> cndtest:			;si=user bx=prog cl=endchar returns 1 in al if true
  1264 00000DE9 B000                <1> 	mov al, 0
  1265 00000DEB 8A06                <1> cndretest:	mov al, [esi]
  1266 00000DED 8A23                <1> 	mov ah, [ebx]
  1267 00000DEF 38CC                <1> 	cmp ah, cl
  1268 00000DF1 7408                <1> 	je cndtesttrue
  1269 00000DF3 38E0                <1> 	cmp al, ah
  1270 00000DF5 750B                <1> 	jne cndtestfalse
  1271 00000DF7 43                  <1> 	inc ebx
  1272 00000DF8 46                  <1> 	inc esi
  1273 00000DF9 EBF0                <1> 	jmp cndretest
  1274                              <1> cndtesttrue:
  1275 00000DFB 38C8                <1> 	cmp al, cl
  1276 00000DFD 7506                <1> 	jne cndtestalmost
  1277 00000DFF B001                <1> 	mov al, 1
  1278 00000E01 C3                  <1> 	ret
  1279                              <1> cndtestfalse:
  1280 00000E02 B000                <1> 	mov al, 0
  1281 00000E04 C3                  <1> 	ret
  1282                              <1> cndtestalmost:
  1283 00000E05 B002                <1> 	mov al, 2
  1284 00000E07 C3                  <1> 	ret
  1285 00000E08 00                  <1> currentdir db 0
  1286 00000E09 BE[6B4C0000]        <1> dir:	mov esi, fileindex
  1287 00000E0E 8A06                <1> 	dirnxt:	mov al, [esi]
  1288 00000E10 B400                <1> 		mov ah, 0
  1289 00000E12 3C05                <1> 		cmp al, 5
  1290 00000E14 744A                <1> 		je dirfnd
  1291 00000E16 3C07                <1> 		cmp al, 7
  1292 00000E18 743C                <1> 		je dirfnd3
  1293 00000E1A 3C06                <1> 		cmp al, 6
  1294 00000E1C 7438                <1> 		je dirfnd3
  1295 00000E1E 46                  <1> 		inc esi
  1296 00000E1F 81FE[6B4E0000]      <1> 		cmp esi,  fileindexend
  1297 00000E25 737B                <1> 		jae dirdn
  1298 00000E27 EBE5                <1> 		jmp dirnxt
  1299 00000E29 060400626174636800- <1> 	typetable db 6,4,0,"batch",0,7,4,0,"document",0,10,4,0,"folder",0,5,4,0,"executable",0
  1300 00000E32 070400646F63756D65- <1>
  1301 00000E3B 6E74000A0400666F6C- <1>
  1302 00000E44 646572000504006578- <1>
  1303 00000E4D 6563757461626C6500  <1>
  1304                              <1> 	dirfnd3:
  1305 00000E56 46                  <1> 		inc esi
  1306 00000E57 81FE[6B4E0000]      <1> 		cmp esi, fileindexend
  1307 00000E5D 76AF                <1> 		jbe dirnxt
  1308 00000E5F 4E                  <1> 		dec esi
  1309 00000E60 46                  <1> 	dirfnd:	inc esi
  1310 00000E61 8A06                <1> 		mov al, [esi]
  1311 00000E63 B400                <1> 		mov ah, 0
  1312 00000E65 3C04                <1> 		cmp al, 4
  1313 00000E67 740B                <1> 		je dirfnd2
  1314 00000E69 46                  <1> 		inc esi
  1315 00000E6A 81FE[6B4E0000]      <1> 		cmp esi,  fileindexend
  1316 00000E70 7330                <1> 		jae dirdn
  1317 00000E72 EB9A                <1> 		jmp dirnxt
  1318 00000E74 81C601000000        <1> 	dirfnd2: add esi, 1
  1319 00000E7A E80DFCFFFF          <1> 		call print
  1320 00000E7F 8935[A70E0000]      <1> 		mov [esidir], esi
  1321 00000E85 BE[B33F0000]        <1> 		mov esi, line
  1322 00000E8A E8FDFBFFFF          <1> 		call print
  1323 00000E8F 8B35[A70E0000]      <1> 		mov esi, [esidir]
  1324 00000E95 81FE[6B4E0000]      <1> 		cmp esi,  fileindexend
  1325 00000E9B 7305                <1> 		jae dirdn
  1326 00000E9D E96CFFFFFF          <1> 		jmp dirnxt
  1327 00000EA2 E93DFEFFFF          <1> 	dirdn:	jmp nwcmd
  1328 00000EA7 00000000            <1> esidir dd 0
  1329                              <1> 
  1330                              <1> array:				;arraystart in si, arrayend in bx, arrayseperator in cx
  1331                              <1> 		                ;ends if array seperator is found backwards after 0
  1332                              <1> 	arnxt:	      
  1333 00000EAB 88E8                <1> 		mov al, ch
  1334 00000EAD 88CC                <1> 		mov ah, cl        
  1335 00000EAF 663906              <1> 		cmp [esi], ax
  1336 00000EB2 744D                <1> 		je ardn
  1337 00000EB4 66390E              <1> 		cmp [esi], cx
  1338 00000EB7 7407                <1> 		je arfnd
  1339 00000EB9 46                  <1> 		inc esi
  1340 00000EBA 39DE                <1> 		cmp esi, ebx
  1341 00000EBC 7343                <1> 		jae ardn
  1342 00000EBE EBEB                <1> 		jmp arnxt
  1343 00000EC0 81C602000000        <1> 	arfnd: add esi, 2
  1344 00000EC6 891D[020F0000]      <1> 		mov [arbx], ebx
  1345 00000ECC 890D[060F0000]      <1> 		mov [arcx], ecx
  1346 00000ED2 E8B5FBFFFF          <1> 		call print
  1347 00000ED7 8935[080F0000]      <1> 		mov [arsi], esi
  1348 00000EDD BE[B33F0000]        <1> 		mov esi, line
  1349 00000EE2 E8A5FBFFFF          <1> 		call print
  1350 00000EE7 8B1D[020F0000]      <1> 		mov ebx, [arbx]
  1351 00000EED 668B0D[060F0000]    <1> 		mov cx, [arcx]
  1352 00000EF4 8B35[080F0000]      <1> 		mov esi, [arsi]
  1353 00000EFA 46                  <1> 		inc esi
  1354 00000EFB 39DE                <1> 		cmp esi, ebx
  1355 00000EFD 7302                <1> 		jae ardn
  1356 00000EFF EBAA                <1> 		jmp arnxt
  1357 00000F01 C3                  <1> 	ardn:	ret
  1358 00000F02 00000000            <1> arbx:	dw 0,0
  1359 00000F06 0000                <1> arcx:	db 0,0
  1360 00000F08 00000000            <1> arsi:	dw 0,0
  1361                              <1> 
  1362                              <1> clearbuffer:
  1363 00000F0C BE[6C550000]        <1> 	mov esi, buf2
  1364 00000F11 B030                <1> 	mov al, '0'
  1365 00000F13 81FE[80550000]      <1> clearbuf: cmp esi, numbuf
  1366 00000F19 7305                <1> 	jae doneclearbuff
  1367 00000F1B 8806                <1> 	mov [esi], al
  1368 00000F1D 46                  <1> 	inc esi
  1369 00000F1E EBF3                <1> 	jmp clearbuf
  1370                              <1> doneclearbuff: 
  1371 00000F20 C3                  <1> 		ret
  1372                              <1> 
  1373                              <1> convert:
  1374 00000F21 4E                  <1> 	dec esi
  1375 00000F22 89F3                <1> 	mov ebx, esi		;place to convert into must be in si, number to convert must be in cx
  1376                              <1> cnvrt:
  1377 00000F24 89DE                <1> 	mov esi, ebx
  1378 00000F26 81EE09000000        <1> 	sub esi, 9
  1379 00000F2C 81F900CA9A3B        <1> 	cmp ecx, 1000000000
  1380 00000F32 720A                <1> 	jb ten8
  1381 00000F34 81E900CA9A3B        <1> 	sub ecx, 1000000000
  1382 00000F3A FE06                <1> 	inc byte [esi]
  1383 00000F3C EBE6                <1> 	jmp cnvrt
  1384 00000F3E 46                  <1> ten8:	inc esi
  1385 00000F3F 81F900E1F505        <1> 	cmp ecx, 100000000
  1386 00000F45 720A                <1> 	jb ten7
  1387 00000F47 81E900E1F505        <1> 	sub ecx, 100000000
  1388 00000F4D FE06                <1> 	inc byte [esi]
  1389 00000F4F EBD3                <1> 	jmp cnvrt
  1390 00000F51 46                  <1> ten7:	inc esi
  1391 00000F52 81F980969800        <1> 	cmp ecx, 10000000
  1392 00000F58 720A                <1> 	jb ten6
  1393 00000F5A 81E980969800        <1> 	sub ecx, 10000000
  1394 00000F60 FE06                <1> 	inc byte [esi]
  1395 00000F62 EBC0                <1> 	jmp cnvrt
  1396 00000F64 46                  <1> ten6:	inc esi
  1397 00000F65 81F940420F00        <1> 	cmp ecx, 1000000
  1398 00000F6B 720A                <1> 	jb ten5
  1399 00000F6D 81E940420F00        <1> 	sub ecx, 1000000
  1400 00000F73 FE06                <1> 	inc byte [esi]
  1401 00000F75 EBAD                <1> 	jmp cnvrt
  1402 00000F77 46                  <1> ten5:	inc esi
  1403 00000F78 81F9A0860100        <1> 	cmp ecx, 100000
  1404 00000F7E 720A                <1> 	jb ten4
  1405 00000F80 81E9A0860100        <1> 	sub ecx, 100000
  1406 00000F86 FE06                <1> 	inc byte [esi]
  1407 00000F88 EB9A                <1> 	jmp cnvrt
  1408 00000F8A 46                  <1> ten4:	inc esi
  1409 00000F8B 81F910270000        <1> 	cmp ecx, 10000
  1410 00000F91 720A                <1> 	jb ten3
  1411 00000F93 81E910270000        <1> 	sub ecx, 10000
  1412 00000F99 FE06                <1> 	inc byte [esi]
  1413 00000F9B EB87                <1> 	jmp cnvrt
  1414 00000F9D 46                  <1> ten3:	inc esi
  1415 00000F9E 81F9E8030000        <1> 	cmp ecx, 1000
  1416 00000FA4 720D                <1> 	jb ten2
  1417 00000FA6 81E9E8030000        <1> 	sub ecx, 1000
  1418 00000FAC FE06                <1> 	inc byte [esi]
  1419 00000FAE E971FFFFFF          <1> 	jmp cnvrt
  1420 00000FB3 46                  <1> ten2:	inc esi
  1421 00000FB4 81F964000000        <1> 	cmp ecx, 100
  1422 00000FBA 720D                <1> 	jb ten1
  1423 00000FBC 81E964000000        <1> 	sub ecx, 100
  1424 00000FC2 FE06                <1> 	inc byte [esi]
  1425 00000FC4 E95BFFFFFF          <1> 	jmp cnvrt
  1426 00000FC9 46                  <1> ten1:	inc esi
  1427 00000FCA 81F90A000000        <1> 	cmp ecx, 10
  1428 00000FD0 720D                <1> 	jb ten0
  1429 00000FD2 81E90A000000        <1> 	sub ecx, 10
  1430 00000FD8 FE06                <1> 	inc byte [esi]
  1431 00000FDA E945FFFFFF          <1> 	jmp cnvrt
  1432 00000FDF 46                  <1> ten0:	inc esi
  1433 00000FE0 81F901000000        <1> 	cmp ecx, 1
  1434 00000FE6 720D                <1> 	jb tendn
  1435 00000FE8 81E901000000        <1> 	sub ecx, 1
  1436 00000FEE FE06                <1> 	inc byte [esi]
  1437 00000FF0 E92FFFFFFF          <1> 	jmp cnvrt
  1438                              <1> tendn:
  1439 00000FF5 C3                  <1> 	ret
  1440                              <1> 
  1441                              <1> 	
  1442                              <1> 
  1443 00000FF6 00<rept>            <1> hexnumber times 8 db 0
  1444 00000FFE 202000              <1> hexnumberend db "  ",0
  1445                              <1> 
  1446                              <1> 
  1447 00001001 00000000            <1> sibuf dw 0,0
  1448 00001005 00000000            <1> dibuf dw 0,0
  1449                              <1> 
  1450                              <1> converthex:
  1451                              <1> clearbufferhex:
  1452 00001009 B030                <1> 	mov al, '0'
  1453 0000100B 8935[01100000]      <1> 	mov [sibuf], esi
  1454 00001011 893D[05100000]      <1> 	mov [dibuf], edi
  1455 00001017 39FE                <1> clearbufhex: cmp esi, edi
  1456 00001019 7305                <1> 	jae doneclearbuffhex
  1457 0000101B 8806                <1> 	mov [esi], al
  1458 0000101D 46                  <1> 	inc esi
  1459 0000101E EBF7                <1> 	jmp clearbufhex
  1460                              <1> doneclearbuffhex:
  1461 00001020 8B35[05100000]      <1> 	mov esi, [dibuf]
  1462 00001026 89CA                <1> 	mov edx, ecx
  1463 00001028 81FA00000000        <1> 	cmp edx, 0
  1464 0000102E 741F                <1> 	je donenxtephx
  1465                              <1> nxtexphx:	;0x10^x
  1466 00001030 4E                  <1> 	dec esi
  1467 00001031 89F7                <1> 	mov edi, esi		;;location of 0x10^x
  1468 00001033 89D1                <1> 	mov ecx, edx
  1469 00001035 81E10F000000        <1> 	and ecx, 0xF		;;just this digit
  1470 0000103B E81C000000          <1> 	call cnvrtexphx		;;get this digit
  1471 00001040 89FE                <1> 	mov esi, edi
  1472 00001042 C1EA04              <1> 	shr edx, 4		;;next digit
  1473 00001045 81FA00000000        <1> 	cmp edx, 0
  1474 0000104B 7402                <1> 	je donenxtephx
  1475 0000104D EBE1                <1> 	jmp nxtexphx
  1476                              <1> donenxtephx:
  1477 0000104F 8B35[01100000]      <1> 	mov esi, [sibuf]
  1478 00001055 8B3D[05100000]      <1> 	mov edi, [dibuf]
  1479 0000105B C3                  <1> 	ret
  1480                              <1> cnvrtexphx:			;;convert this number
  1481 0000105C 89F3                <1> 	mov ebx, esi		;place to convert to must be in si, number to convert must be in cx
  1482 0000105E 81F900000000        <1> 	cmp ecx, 0
  1483 00001064 7429                <1> 	je zerohx
  1484 00001066 8A06                <1> cnvrthx:  mov al, [esi]
  1485 00001068 3C39                <1> 	cmp al, '9'
  1486 0000106A 741B                <1> 	je lettershx
  1487 0000106C 3C46                <1> lttrhxdn: cmp al, 'F'
  1488 0000106E 741F                <1> 	je zerohx
  1489 00001070 8A06                <1> 	mov al, [esi]
  1490 00001072 FEC0                <1> 	inc al
  1491 00001074 8806                <1> 	mov [esi], al
  1492 00001076 89DE                <1> 	mov esi, ebx
  1493 00001078 81E901000000        <1> cnvrtlphx: sub ecx, 1
  1494 0000107E 81F900000000        <1> 	cmp ecx, 0
  1495 00001084 75E0                <1> 	jne cnvrthx
  1496 00001086 C3                  <1> 	ret
  1497                              <1> lettershx:
  1498 00001087 B041                <1> 	mov al, 'A'
  1499 00001089 2C01                <1> 	sub al, 1
  1500 0000108B 8806                <1> 	mov [esi], al
  1501 0000108D EBDD                <1> 	jmp lttrhxdn
  1502 0000108F B030                <1> zerohx:	mov al, '0'
  1503 00001091 8806                <1> 	mov [esi], al
  1504 00001093 4E                  <1> 	dec esi
  1505 00001094 8A06                <1> 	mov al, [esi]
  1506 00001096 3C46                <1> 	cmp al, 'F'
  1507 00001098 74F5                <1> 	je zerohx
  1508 0000109A 41                  <1> 	inc ecx
  1509 0000109B EBDB                <1> 	jmp cnvrtlphx
  1510                              <1> 
  1511 0000109D 01                  <1> firsthexshown db 1
  1512                              <1> showhex:
  1513 0000109E 60                  <1> 	pusha
  1514 0000109F BE[F60F0000]        <1> 	mov esi, hexnumber
  1515 000010A4 BF[FE0F0000]        <1> 	mov edi, hexnumberend
  1516 000010A9 E85BFFFFFF          <1> 	call converthex
  1517 000010AE 803D[9D100000]01    <1> 	cmp byte [firsthexshown], 1
  1518 000010B5 7504                <1> 	jne showthathex
  1519 000010B7 66BA0000            <1> 	mov dx, 0
  1520                              <1> showthathex:
  1521 000010BB 803D[9D100000]03    <1> 	cmp byte [firsthexshown], 3
  1522 000010C2 750A                <1> 	jne nonewhexline
  1523 000010C4 BE[B33F0000]        <1> 	mov esi, line
  1524 000010C9 E8BEF9FFFF          <1> 	call print
  1525                              <1> nonewhexline:
  1526 000010CE 803D[9D100000]04    <1> 	cmp byte [firsthexshown], 4
  1527 000010D5 7527                <1> 	jne notabfixhex
  1528 000010D7 B1A0                <1> 	mov cl, 160
  1529 000010D9 28D1                <1> 	sub cl, dl
  1530 000010DB C0E905              <1> 	shr cl, 5
  1531 000010DE C0E105              <1> 	shl cl, 5
  1532 000010E1 80F900              <1> 	cmp cl, 0
  1533 000010E4 750F                <1> 	jne nonewlinetabfixhex
  1534 000010E6 BE[B33F0000]        <1> 	mov esi, line
  1535 000010EB E89CF9FFFF          <1> 	call print
  1536 000010F0 E909000000          <1> 	jmp notabfixhex
  1537                              <1> nonewlinetabfixhex:
  1538 000010F5 80C20F              <1> 	add dl, 15
  1539 000010F8 C0EA04              <1> 	shr dl, 4
  1540 000010FB C0E204              <1> 	shl dl, 4
  1541                              <1> notabfixhex:
  1542 000010FE BE[F60F0000]        <1> 	mov esi, hexnumber
  1543 00001103 E884F9FFFF          <1> 	call print
  1544 00001108 803D[9D100000]02    <1> 	cmp byte [firsthexshown], 2
  1545 0000110F 750A                <1> 	jne hexshown
  1546 00001111 BE[B33F0000]        <1> 	mov esi, line
  1547 00001116 E871F9FFFF          <1> 	call print
  1548                              <1> hexshown:
  1549 0000111B C605[9D100000]00    <1> 	mov byte [firsthexshown], 0
  1550 00001122 61                  <1> 	popa
  1551 00001123 C3                  <1> 	ret
  1552                              <1> 
  1553                              <1> 
  1554 00001124 303030303030303030- <1> decnumber db "00000000000000"
  1555 0000112D 3030303030          <1>
  1556 00001132 2000                <1> decnumberend: db " ",0
  1557                              <1> 
  1558                              <1> showdec: ;;same as showhex, just uses decimal conversion
  1559 00001134 60                  <1> 	pusha
  1560 00001135 BF[24110000]        <1> 	mov edi, decnumber
  1561 0000113A BE[32110000]        <1> 	mov esi, decnumberend
  1562                              <1> cleardecbuf:
  1563 0000113F C60730              <1> 	mov byte [edi], '0'
  1564 00001142 47                  <1> 	inc edi
  1565 00001143 39F7                <1> 	cmp edi, esi
  1566 00001145 72F8                <1> 	jb cleardecbuf
  1567 00001147 BF[24110000]        <1> 	mov edi, decnumber
  1568 0000114C E8D0FDFFFF          <1> 	call convert
  1569 00001151 803D[9D100000]01    <1> 	cmp byte [firsthexshown], 1
  1570 00001158 7504                <1> 	jne showthatdec
  1571 0000115A 66BA0000            <1> 	mov dx, 0
  1572                              <1> showthatdec:
  1573 0000115E 803D[9D100000]03    <1> 	cmp byte [firsthexshown], 3
  1574 00001165 750A                <1> 	jne nonewdecline
  1575 00001167 BE[B33F0000]        <1> 	mov esi, line
  1576 0000116C E81BF9FFFF          <1> 	call print
  1577                              <1> nonewdecline:
  1578 00001171 803D[9D100000]04    <1> 	cmp byte [firsthexshown], 4
  1579 00001178 7527                <1> 	jne notabfixdec
  1580 0000117A B1A0                <1> 	mov cl, 160
  1581 0000117C 28D1                <1> 	sub cl, dl
  1582 0000117E C0E905              <1> 	shr cl, 5
  1583 00001181 C0E105              <1> 	shl cl, 5
  1584 00001184 80F900              <1> 	cmp cl, 0
  1585 00001187 750F                <1> 	jne nonewlinetabfixdec
  1586 00001189 BE[B33F0000]        <1> 	mov esi, line
  1587 0000118E E8F9F8FFFF          <1> 	call print
  1588 00001193 E909000000          <1> 	jmp notabfixdec
  1589                              <1> nonewlinetabfixdec:
  1590 00001198 80C20F              <1> 	add dl, 15
  1591 0000119B C0EA04              <1> 	shr dl, 4
  1592 0000119E C0E204              <1> 	shl dl, 4
  1593                              <1> notabfixdec:
  1594 000011A1 BE[24110000]        <1> 	mov esi, decnumber
  1595 000011A6 4E                  <1> 	dec esi
  1596                              <1> sifind:
  1597 000011A7 46                  <1> 	inc esi
  1598 000011A8 803E30              <1> 	cmp byte [esi], '0'
  1599 000011AB 74FA                <1> 	je sifind
  1600 000011AD E8DAF8FFFF          <1> 	call print
  1601 000011B2 803D[9D100000]02    <1> 	cmp byte [firsthexshown], 2
  1602 000011B9 750A                <1> 	jne decshown
  1603 000011BB BE[B33F0000]        <1> 	mov esi, line
  1604 000011C0 E8C7F8FFFF          <1> 	call print
  1605                              <1> decshown:
  1606 000011C5 C605[9D100000]00    <1> 	mov byte [firsthexshown], 0
  1607 000011CC 61                  <1> 	popa
  1608 000011CD C3                  <1> 	ret
  1609                              <1> 	
  1610                              <1> cnvrttxt: 
  1611 000011CE B900000000          <1> 	mov ecx, 0
  1612 000011D3 B800000000          <1> 	mov eax, 0
  1613 000011D8 BA00000000          <1> 	mov edx, 0
  1614 000011DD BB00000000          <1> 	mov ebx, 0
  1615 000011E2 4E                  <1> 	dec esi
  1616                              <1> cnvrtlptxt:
  1617 000011E3 46                  <1> 	inc esi
  1618 000011E4 8A06                <1> 	mov al, [esi]
  1619 000011E6 3C00                <1> 	cmp al, 0
  1620 000011E8 75F9                <1> 	jne cnvrtlptxt
  1621 000011EA 4E                  <1> 	dec esi
  1622 000011EB 8A06                <1> 	mov al, [esi]
  1623 000011ED 3C30                <1> 	cmp al, '0'
  1624 000011EF 7405                <1> 	je zerotest
  1625 000011F1 E908000000          <1> 	jmp txtlp
  1626 000011F6 81FE[6C530000]      <1> zerotest: cmp esi, buftxt
  1627 000011FC 745F                <1> 	je donecnvrt
  1628                              <1> txtlp:	
  1629 000011FE B800000000          <1> 	mov eax, 0
  1630 00001203 8A06                <1> 	mov al, [esi]
  1631 00001205 3C3D                <1> 	cmp al, '='
  1632 00001207 7454                <1> 	je donecnvrt
  1633 00001209 3C30                <1> 	cmp al, 48
  1634 0000120B 7250                <1> 	jb donecnvrt
  1635 0000120D 3C23                <1> 	cmp al, '#'
  1636 0000120F 744C                <1> 	je donecnvrt
  1637 00001211 81FE[6C530000]      <1> 	cmp esi, buftxt
  1638 00001217 7244                <1> 	jb donecnvrt
  1639 00001219 81F900000000        <1> 	cmp ecx, 0
  1640 0000121F 7708                <1> 	ja exp
  1641 00001221 2C30                <1> noexp:	sub al, 48
  1642 00001223 01C2                <1> 	add edx, eax
  1643 00001225 4E                  <1> 	dec esi
  1644 00001226 41                  <1> 	inc ecx
  1645 00001227 EBD5                <1> 	jmp txtlp
  1646 00001229 81F900000000        <1> exp:	cmp ecx, 0
  1647 0000122F 74F0                <1> 	je noexp
  1648 00001231 2C30                <1> 	sub al, 48
  1649 00001233 51                  <1> 	push ecx
  1650 00001234 89C3                <1> expmul:	mov ebx, eax
  1651 00001236 01D8                <1> 	add eax, ebx
  1652 00001238 01D8                <1> 	add eax, ebx
  1653 0000123A 01D8                <1> 	add eax, ebx
  1654 0000123C 01D8                <1> 	add eax, ebx
  1655 0000123E 01D8                <1> 	add eax, ebx
  1656 00001240 01D8                <1> 	add eax, ebx
  1657 00001242 01D8                <1> 	add eax, ebx
  1658 00001244 01D8                <1> 	add eax, ebx
  1659 00001246 01D8                <1> 	add eax, ebx
  1660 00001248 81E901000000        <1> 	sub ecx, 1
  1661 0000124E 81F900000000        <1> 	cmp ecx, 0
  1662 00001254 77DE                <1> 	ja expmul
  1663 00001256 01C2                <1> 	add edx, eax
  1664 00001258 59                  <1> 	pop ecx
  1665 00001259 4E                  <1> 	dec esi
  1666 0000125A 41                  <1> 	inc ecx
  1667 0000125B EBA1                <1> 	jmp txtlp
  1668 0000125D 89D1                <1> donecnvrt: mov ecx, edx
  1669 0000125F C3                  <1> 	ret
  1670                                      %include 'source/programs.asm'
  1671 00001260 050406040704        <1> filetypes db 5,4,6,4,7,4
  1672                              <1> progstart:		;programs start here
  1673 00001266 0504696E64657800    <1> db 5,4,"index",0
  1674 0000126E E805000000          <1> 	call indexfiles
  1675 00001273 E96CFAFFFF          <1> 	jmp nwcmd
  1676                              <1> indexfiles:
  1677 00001278 BE[66120000]        <1> 	mov esi, progstart
  1678 0000127D BB[6B4C0000]        <1> 	mov ebx, fileindex
  1679 00001282 BF[66120000]        <1> 	mov edi, progstart
  1680 00001287 81EF02000000        <1> 	sub edi, 2
  1681                              <1> indexloop:
  1682 0000128D 668B0E              <1> 	mov cx, [esi]
  1683                              <1> 	indexloop2:
  1684 00001290 663B0F              <1> 		cmp cx, [edi]
  1685 00001293 7424                <1> 		je indexloop2done
  1686 00001295 81EF02000000        <1> 		sub edi, 2
  1687 0000129B 81FF[60120000]      <1> 		cmp edi, filetypes
  1688 000012A1 73ED                <1> 		jae indexloop2
  1689 000012A3 BF[66120000]        <1> 	mov edi, progstart
  1690 000012A8 81EF02000000        <1> 	sub edi, 2
  1691 000012AE 46                  <1> 	inc esi
  1692 000012AF 81FE[0E220000]      <1> 	cmp esi, batchprogend
  1693 000012B5 734E                <1> 	jae indexloopdone
  1694 000012B7 EBD4                <1> 	jmp indexloop
  1695                              <1> indexloop2done:
  1696 000012B9 66890B              <1> 	mov [ebx], cx
  1697 000012BC 81C302000000        <1> 	add ebx, 2
  1698 000012C2 81C602000000        <1> 	add esi, 2
  1699                              <1> 	nameindex:
  1700 000012C8 8A0E                <1> 		mov cl, [esi]
  1701 000012CA 80F900              <1> 		cmp cl, 0
  1702 000012CD 7406                <1> 		je nameindexdone
  1703 000012CF 880B                <1> 		mov [ebx], cl
  1704 000012D1 46                  <1> 		inc esi
  1705 000012D2 43                  <1> 		inc ebx
  1706 000012D3 EBF3                <1> 		jmp nameindex
  1707                              <1> 	nameindexdone:
  1708 000012D5 43                  <1> 		inc ebx
  1709 000012D6 66C7030000          <1> 		mov word [ebx], 0
  1710 000012DB 81C302000000        <1> 		add ebx, 2
  1711 000012E1 46                  <1> 		inc esi
  1712 000012E2 8933                <1> 		mov [ebx], esi
  1713 000012E4 81C304000000        <1> 		add ebx, 4
  1714 000012EA 66C7030000          <1> 		mov word [ebx], 0
  1715 000012EF 81C302000000        <1> 		add ebx, 2
  1716 000012F5 81FB[6B4E0000]      <1> 		cmp ebx, fileindexend
  1717 000012FB 7308                <1> 		jae indexloopdone
  1718 000012FD 81C601000000        <1> 		add esi, 1
  1719 00001303 EB88                <1> 		jmp indexloop
  1720 00001305 C3                  <1> indexloopdone: 	ret
  1721                              <1> 
  1722 00001306 0504696E7465726E65- <1> db 5,4,"internet",0
  1723 0000130F 7400                <1>
  1724                              <1> 	internettest: 			;;initialize network card, lets hope this is right
  1725                              <1> 					;;^^used to^^, now tests int 30h functions		
  1726 00001311 B403                <1> 		mov ah, 3
  1727 00001313 CD30                <1> 		int 30h
  1728 00001315 B401                <1> 		mov ah, 1
  1729 00001317 BE[29130000]        <1> 		mov esi, datmsg
  1730 0000131C 66BB0700            <1> 		mov bx, 7
  1731 00001320 B000                <1> 		mov al, 0
  1732 00001322 CD30                <1> 		int 30h
  1733                              <1> 	;jmp packettest
  1734 00001324 E9BBF9FFFF          <1> 		jmp nwcmd
  1735 00001329 496E7465726E657420- <1> datmsg: db "Internet has not been implemented yet.",10,13,0
  1736 00001332 686173206E6F742062- <1>
  1737 0000133B 65656E20696D706C65- <1>
  1738 00001344 6D656E746564207965- <1>
  1739 0000134D 742E0A0D00          <1>
  1740                              <1> 		
  1741 00001352 050470636900        <1> db 5,4,"pci",0
  1742                              <1> 	pcishow:
  1743 00001358 E801290000          <1> 	call pcidump
  1744 0000135D E982F9FFFF          <1> 	jmp nwcmd
  1745                              <1> 
  1746 00001362 050473686F77696E64- <1> db 5,4,"showindex",0
  1747 0000136B 657800              <1>
  1748 0000136E BE[6B4C0000]        <1> 	mov esi, fileindex
  1749 00001373 BB[6B4E0000]        <1> 	mov ebx, fileindexend
  1750 00001378 B105                <1> 	mov cl, 5
  1751 0000137A B504                <1> 	mov ch, 4
  1752 0000137C E82AFBFFFF          <1> 	call array
  1753 00001381 BE[6B4C0000]        <1> 	mov esi, fileindex
  1754 00001386 BB[6B4E0000]        <1> 	mov ebx, fileindexend
  1755 0000138B B106                <1> 	mov cl, 6
  1756 0000138D B504                <1> 	mov ch, 4
  1757 0000138F E817FBFFFF          <1> 	call array
  1758 00001394 BE[6B4C0000]        <1> 	mov esi, fileindex
  1759 00001399 BB[6B4E0000]        <1> 	mov ebx, fileindexend
  1760 0000139E B107                <1> 	mov cl, 7
  1761 000013A0 B504                <1> 	mov ch, 4
  1762 000013A2 E804FBFFFF          <1> 	call array
  1763 000013A7 E938F9FFFF          <1> 	jmp nwcmd
  1764                              <1> 	
  1765 000013AC 050464697200        <1> db 5,4,"dir",0
  1766 000013B2 E952FAFFFF          <1> 	dircmd:	jmp dir
  1767                              <1> 	
  1768 000013B7 05046C7300          <1> db 5,4,"ls",0
  1769 000013BC BE[66120000]        <1> 	lscmd:	mov esi, progstart
  1770 000013C1 BB[0E220000]        <1> 		mov ebx, progend
  1771 000013C6 E93EFAFFFF          <1> 		jmp dir
  1772                              <1> 
  1773 000013CB 05046469736B00      <1> db 5,4,"disk",0
  1774 000013D2 B900000000          <1> 		mov ecx, 0
  1775 000013D7 8A0D[2B000000]      <1> 		mov cl, [DriveNumber]
  1776 000013DD C605[9D100000]00    <1> 		mov byte [firsthexshown], 0
  1777 000013E4 E8B5FCFFFF          <1> 		call showhex
  1778 000013E9 BE[B33F0000]        <1> 		mov esi, line
  1779 000013EE E899F6FFFF          <1> 		call print
  1780 000013F3 BE[096C0000]        <1> 		mov esi, diskfileindex
  1781                              <1> 	diskindexdir:
  1782 000013F8 E88FF6FFFF          <1> 		call print
  1783 000013FD 8B4E05              <1> 		mov ecx, [esi + 5]
  1784 00001400 C605[9D100000]03    <1> 		mov byte [firsthexshown], 3
  1785 00001407 E828FDFFFF          <1> 		call showdec
  1786 0000140C 56                  <1> 		push esi
  1787 0000140D BE[B33F0000]        <1> 		mov esi, line
  1788 00001412 E875F6FFFF          <1> 		call print
  1789 00001417 5E                  <1> 		pop esi
  1790 00001418 81C609000000        <1> 		add esi, 9
  1791 0000141E 81FE[626C0000]      <1> 		cmp esi, enddiskfileindex
  1792 00001424 72D2                <1> 		jb diskindexdir
  1793 00001426 E9B9F8FFFF          <1> 		jmp nwcmd
  1794                              <1> 
  1795 0000142B 0504636C65617200    <1> db 5,4,"clear",0
  1796 00001433 E800F7FFFF          <1> 	cls:	call clear
  1797 00001438 E9A7F8FFFF          <1> 		jmp nwcmd
  1798                              <1> 
  1799 0000143D 05046563686F00      <1> db 5,4,"echo",0
  1800 00001444 BE[6C530000]        <1> 	echo:	mov esi, buftxt
  1801 00001449 81C605000000        <1> 		add esi, 5
  1802 0000144F 8A06                <1> 		mov al, [esi]
  1803 00001451 3C24                <1> 		cmp al, '$'
  1804 00001453 7414                <1> 		je echovr
  1805 00001455 E832F6FFFF          <1> 		call print
  1806 0000145A BE[B33F0000]        <1> 		mov esi, line
  1807 0000145F E828F6FFFF          <1> 		call print
  1808 00001464 E97BF8FFFF          <1> 		jmp nwcmd
  1809 00001469 BB[6C4E0000]        <1> 	echovr:	mov ebx, variables
  1810 0000146E BF06000000          <1> 		mov edi, 6
  1811 00001473 E83A000000          <1> 		call nxtvrech
  1812 00001478 E957000000          <1> 		jmp prntvr2
  1813 0000147D B13D                <1> 	echvar:	mov cl, '='
  1814 0000147F 43                  <1> 		inc ebx
  1815 00001480 8A03                <1> 		mov al, [ebx]
  1816 00001482 3C00                <1> 		cmp al, 0
  1817 00001484 742C                <1> 		je nxtvrech
  1818 00001486 3C3D                <1> 		cmp al, '='
  1819 00001488 7420                <1> 		je nxtvrechb1
  1820 0000148A BE[6C530000]        <1> 		mov esi, buftxt
  1821 0000148F 01FE                <1> 		add esi, edi
  1822 00001491 E853F9FFFF          <1> 		call cndtest
  1823 00001496 3C02                <1> 		cmp al, 2
  1824 00001498 7436                <1> 		je prntvr
  1825 0000149A 3C01                <1> 		cmp al, 1
  1826 0000149C 7432                <1> 		je prntvr
  1827 0000149E BE[6C530000]        <1> 		mov esi, buftxt
  1828 000014A3 01FE                <1> 		add esi, edi
  1829 000014A5 E908000000          <1> 		jmp nxtvrech
  1830                              <1> 	nxtvrechb1:
  1831 000014AA 81EB02000000        <1> 		sub ebx, 2
  1832 000014B0 EBCB                <1> 		jmp echvar
  1833 000014B2 8A03                <1> 	nxtvrech: mov al, [ebx]
  1834 000014B4 3C05                <1> 		cmp al, 5
  1835 000014B6 740F                <1> 		je nxtvrec2
  1836 000014B8 43                  <1> 		inc ebx
  1837 000014B9 81FB[6C530000]      <1> 		cmp ebx, varend
  1838 000014BF 0F831FF8FFFF        <1> 		jae nwcmd
  1839 000014C5 EBEB                <1> 		jmp nxtvrech
  1840 000014C7 43                  <1> 	nxtvrec2: inc ebx
  1841 000014C8 8A03                <1> 		mov al, [ebx]
  1842 000014CA 3C04                <1> 		cmp al, 4
  1843 000014CC 74AF                <1> 		je echvar
  1844 000014CE EBE2                <1> 		jmp nxtvrech
  1845 000014D0 43                  <1> 	prntvr: inc ebx
  1846 000014D1 89DE                <1> 		mov esi, ebx
  1847 000014D3 C3                  <1> 		ret
  1848 000014D4 E8B3F5FFFF          <1> 	prntvr2: call print
  1849 000014D9 BE[B33F0000]        <1> 		mov esi, line
  1850 000014DE E8A9F5FFFF          <1> 		call print
  1851 000014E3 E9FCF7FFFF          <1> 		jmp nwcmd
  1852 000014E8 050472756E62617463- <1> db 5,4,"runbatch",0
  1853 000014F1 6800                <1>
  1854                              <1> 	runbatch2:
  1855 000014F3 BE[B33F0000]        <1> 		mov esi, line
  1856 000014F8 E88FF5FFFF          <1> 		call print
  1857 000014FD BF[6C530000]        <1> 		mov edi, buftxt
  1858 00001502 81C709000000        <1> 		add edi, 9
  1859 00001508 BE00001000          <1> 		mov esi, 0x100000
  1860 0000150D E806290000          <1> 		call loadfile
  1861 00001512 BF00001000          <1> 		mov edi, 0x100000
  1862 00001517 C605[654C0000]01    <1> 		mov byte [BATCHISON], 1
  1863                              <1> 	batchrunloop:
  1864 0000151E E89EF7FFFF          <1> 		call buftxtclear
  1865 00001523 BE[6C530000]        <1> 		mov esi, buftxt
  1866                              <1> 	batchrunloop2:
  1867 00001528 B10D                <1> 		mov cl, 13
  1868 0000152A B50A                <1> 		mov ch, 10
  1869 0000152C 66390F              <1> 		cmp [edi], cx
  1870 0000152F 0F841E000000        <1> 		je near nxtbatchrunline
  1871 00001535 66C1C108            <1> 		rol cx, 8
  1872 00001539 66390F              <1> 		cmp [edi], cx
  1873 0000153C 0F8411000000        <1> 		je near nxtbatchrunline
  1874 00001542 803F00              <1> 		cmp byte [edi], 0
  1875 00001545 0F8408000000        <1> 		je near nxtbatchrunline
  1876 0000154B 8A07                <1> 		mov al, [edi]
  1877 0000154D 8806                <1> 		mov [esi], al
  1878 0000154F 46                  <1> 		inc esi
  1879 00001550 47                  <1> 		inc edi
  1880 00001551 EBD5                <1> 		jmp batchrunloop2
  1881                              <1> 	nxtbatchrunline:
  1882 00001553 81C702000000        <1> 		add edi, 2
  1883 00001559 893D[B8150000]      <1> 		mov [batchedi], edi
  1884 0000155F C60600              <1> 		mov byte [esi], 0
  1885 00001562 BE[6C530000]        <1> 		mov esi, buftxt
  1886 00001567 803E00              <1> 		cmp byte [esi], 0
  1887 0000156A 0F843C000000        <1> 		je near nobatchfoundrun
  1888 00001570 BB00000000          <1> 		mov ebx, 0
  1889 00001575 8A1D[FC4B0000]      <1> 		mov bl, [IFON]
  1890 0000157B 80FB01              <1> 		cmp bl, 1
  1891 0000157E 0F8338000000        <1> 		jae near iftestbatch
  1892                              <1> 	doneiftest:
  1893 00001584 803D[6B160000]00    <1> 		cmp byte [runnextline], 0
  1894 0000158B 0F8405000000        <1> 		je near noruniftest
  1895 00001591 E8A7F7FFFF          <1> 		call progtest
  1896                              <1> 	noruniftest:
  1897 00001596 C605[6B160000]01    <1> 		mov byte [runnextline], 1
  1898 0000159D 8B3D[B8150000]      <1> 		mov edi, [batchedi]
  1899 000015A3 803F00              <1> 		cmp byte [edi], 0
  1900 000015A6 0F8572FFFFFF        <1> 		jne near batchrunloop
  1901                              <1> 	nobatchfoundrun:
  1902 000015AC C605[654C0000]00    <1> 		mov byte [BATCHISON], 0
  1903 000015B3 E92CF7FFFF          <1> 		jmp nwcmd
  1904                              <1> 	
  1905 000015B8 00000000            <1> batchedi dd 0	
  1906                              <1> 	
  1907                              <1> 	iftestbatch:
  1908 000015BC BE[FD4B0000]        <1> 		mov esi, IFTRUE
  1909 000015C1 01DE                <1> 		add esi, ebx
  1910 000015C3 803E00              <1> 		cmp byte [esi], 0
  1911 000015C6 0F85B8FFFFFF        <1> 		jne near doneiftest
  1912 000015CC 881D[6C160000]      <1> 		mov [iffalsebuf], bl
  1913                              <1> 	fifindbatch:
  1914 000015D2 66B96966            <1> 		mov cx, "if"
  1915 000015D6 66B86669            <1> 		mov ax, "fi"
  1916 000015DA 663907              <1> 		cmp [edi], ax
  1917 000015DD 0F841A000000        <1> 		je near fifoundbatch
  1918 000015E3 66390F              <1> 		cmp [edi], cx
  1919 000015E6 0F8462000000        <1> 		je near iffoundbatch
  1920 000015EC 803F00              <1> 		cmp byte [edi], 0
  1921 000015EF 0F8408000000        <1> 		je near fifoundbatch
  1922 000015F5 81C702000000        <1> 		add edi, 2
  1923 000015FB EBD5                <1> 		jmp fifindbatch
  1924                              <1> 	fifoundbatch:
  1925 000015FD 81C702000000        <1> 		add edi, 2
  1926 00001603 B00D                <1> 		mov al, 13
  1927 00001605 B40A                <1> 		mov ah, 10
  1928 00001607 663907              <1> 		cmp [edi], ax
  1929 0000160A 7414                <1> 		je goodfibatch
  1930 0000160C 66C1C008            <1> 		rol ax, 8
  1931 00001610 663907              <1> 		cmp [edi], ax
  1932 00001613 740B                <1> 		je goodfibatch
  1933 00001615 803F00              <1> 		cmp byte [edi], 0
  1934 00001618 0F848EFFFFFF        <1> 		je near nobatchfoundrun
  1935 0000161E EBB2                <1> 		jmp fifindbatch
  1936                              <1> 	goodfibatch:
  1937 00001620 B001                <1> 		mov al, 1
  1938 00001622 2805[FC4B0000]      <1> 		sub [IFON], al 
  1939 00001628 A0[FC4B0000]        <1> 		mov al, [IFON]
  1940 0000162D 8A1D[6C160000]      <1> 		mov bl, [iffalsebuf]
  1941 00001633 38D8                <1> 		cmp al, bl
  1942 00001635 779B                <1> 		ja fifindbatch
  1943 00001637 BE[6C530000]        <1> 		mov esi, buftxt
  1944 0000163C 81EF02000000        <1> 		sub edi, 2
  1945 00001642 C605[6B160000]00    <1> 		mov byte [runnextline], 0
  1946 00001649 E9D0FEFFFF          <1> 		jmp batchrunloop
  1947                              <1> 	iffoundbatch:
  1948 0000164E B020                <1> 		mov al, ' '
  1949 00001650 81C702000000        <1> 		add edi, 2
  1950 00001656 3807                <1> 		cmp [edi], al
  1951 00001658 0F8574FFFFFF        <1> 		jne near fifindbatch
  1952 0000165E B001                <1> 		mov al, 1
  1953 00001660 0005[FC4B0000]      <1> 		add [IFON], al
  1954 00001666 E967FFFFFF          <1> 		jmp fifindbatch
  1955                              <1> 		
  1956                              <1> 		
  1957 0000166B 01                  <1> runnextline db 1
  1958 0000166C 00                  <1> iffalsebuf db 0
  1959                              <1> 
  1960 0000166D 0504626174636800    <1> db 5,4,"batch",0
  1961                              <1> 	batchst: 
  1962 00001675 BF[6C530000]        <1> 		mov edi, buftxt
  1963 0000167A 81C706000000        <1> 		add edi, 6
  1964 00001680 803F00              <1> 		cmp byte [edi], 0
  1965 00001683 0F8473000000        <1> 		je near nonamefound
  1966 00001689 BE00001000          <1> 		mov esi, 0x100000
  1967 0000168E E885270000          <1> 		call loadfile
  1968 00001693 89D0                <1> 		mov eax, edx
  1969 00001695 3D94010000          <1> 		cmp eax, 404
  1970 0000169A 746F                <1> 		je goodbatchname
  1971 0000169C BE[AB160000]        <1> 		mov esi, badbatchmsg
  1972 000016A1 E8E6F3FFFF          <1> 		call print
  1973 000016A6 E939F6FFFF          <1> 		jmp nwcmd
  1974 000016AB 546869732066696C65- <1> 		badbatchmsg db "This file already exists!",10,13,0
  1975 000016B4 20616C726561647920- <1>
  1976 000016BD 657869737473210A0D- <1>
  1977 000016C6 00                  <1>
  1978 000016C7 596F75206861766520- <1> 		nobatchname db "You have to type a name after the command.",10,13,0
  1979 000016D0 746F20747970652061- <1>
  1980 000016D9 206E616D6520616674- <1>
  1981 000016E2 65722074686520636F- <1>
  1982 000016EB 6D6D616E642E0A0D00  <1>
  1983 000016F4 00000000            <1> 		esicache3 dd 0
  1984 000016F8 00000000            <1> 		esicache2 dd 0
  1985                              <1> 	nonamefound:
  1986 000016FC BE[C7160000]        <1> 		mov esi, nobatchname
  1987 00001701 E886F3FFFF          <1> 		call print
  1988 00001706 E9D9F5FFFF          <1> 		jmp nwcmd
  1989                              <1> 	goodbatchname:
  1990 0000170B BE00001000          <1> 		mov esi, 0x100000
  1991                              <1> 	batchcreate:
  1992 00001710 8935[F4160000]      <1> 		mov [esicache3], esi
  1993 00001716 B00D                <1> 		mov al, 13
  1994 00001718 B307                <1> 		mov bl, 7
  1995 0000171A B404                <1> 		mov ah, 4
  1996 0000171C CD30                <1> 		int 30h
  1997 0000171E 8935[F8160000]      <1> 		mov [esicache2], esi
  1998 00001724 8A0E                <1> 		mov cl, [esi]
  1999 00001726 8B35[F4160000]      <1> 		mov esi, [esicache3]
  2000 0000172C BB[8E180000]        <1> 		mov ebx, exitword
  2001 00001731 E8B3F6FFFF          <1> 		call cndtest
  2002 00001736 3C01                <1> 		cmp al, 1
  2003 00001738 7423                <1> 		je endbatchcreate
  2004 0000173A 3C02                <1> 		cmp al, 2
  2005 0000173C 741F                <1> 		je endbatchcreate
  2006 0000173E BE[B33F0000]        <1> 		mov esi, line
  2007 00001743 E844F3FFFF          <1> 		call print
  2008 00001748 8B35[F8160000]      <1> 		mov esi, [esicache2]
  2009 0000174E B00D                <1> 		mov al, 13
  2010 00001750 B40A                <1> 		mov ah, 10
  2011 00001752 668906              <1> 		mov [esi], ax
  2012 00001755 81C602000000        <1> 		add esi, 2
  2013 0000175B EBB3                <1> 		jmp batchcreate
  2014                              <1> 	endbatchcreate:
  2015 0000175D 8B35[F4160000]      <1> 		mov esi, [esicache3]
  2016 00001763 B800000000          <1> 		mov eax, 0
  2017 00001768 8806                <1> 		mov [esi], al
  2018 0000176A BE[B33F0000]        <1> 		mov esi, line
  2019 0000176F E818F3FFFF          <1> 		call print
  2020 00001774 BE00001000          <1> 		mov esi, 0x100000
  2021 00001779 E80EF3FFFF          <1> 		call print
  2022 0000177E E961F5FFFF          <1> 		jmp nwcmd
  2023                              <1> 	
  2024                              <1> 		
  2025 00001783 8A06                <1> 	startbatch: mov al, [esi]
  2026 00001785 8803                <1> 		mov [ebx], al
  2027 00001787 43                  <1> 		inc ebx
  2028 00001788 46                  <1> 		inc esi
  2029 00001789 3C00                <1> 		cmp al, 0
  2030                              <1> 	;	je batchfile
  2031 0000178B EBF6                <1> 		jmp startbatch
  2032                              <1> 	donebatch2:
  2033 0000178D 5B                  <1> 		pop ebx
  2034 0000178E B104                <1> 		mov cl, 4
  2035 00001790 880B                <1> 		mov [ebx], cl
  2036 00001792 43                  <1> 		inc ebx
  2037 00001793 B503                <1> 		mov ch, 3
  2038 00001795 882B                <1> 		mov [ebx], ch
  2039 00001797 BE[29400000]        <1> 		mov esi, batchmsg
  2040 0000179C E8EBF2FFFF          <1> 		call print
  2041 000017A1 E93EF5FFFF          <1> 		jmp nwcmd
  2042                              <1> 	donebatch:
  2043 000017A6 E816F5FFFF          <1> 		call buftxtclear
  2044 000017AB BE[6C530000]        <1> 		mov esi, buftxt
  2045 000017B0 8A03                <1> 	batchfind: mov al, [ebx]
  2046 000017B2 3C03                <1> 		cmp al, 3
  2047 000017B4 741C                <1> 		je batchnext
  2048 000017B6 3C04                <1> 		cmp al, 4
  2049 000017B8 7405                <1> 		je batchendtest
  2050                              <1> ;;cmp ebx, commandlst
  2051 000017BA 7334                <1> 		jae backtonwcmd
  2052 000017BC 43                  <1> 		inc ebx
  2053 000017BD EBF1                <1> 		jmp batchfind
  2054                              <1> 	batchendtest:
  2055 000017BF 43                  <1> 		inc ebx
  2056 000017C0 8A03                <1> 		mov al, [ebx]
  2057 000017C2 3C03                <1> 		cmp al, 3
  2058 000017C4 7402                <1> 		je backtonwcmdtest
  2059 000017C6 EBE8                <1> 		jmp batchfind
  2060                              <1> 	backtonwcmdtest:
  2061 000017C8 43                  <1> 		inc ebx
  2062 000017C9 8A03                <1> 		mov al, [ebx]
  2063 000017CB 3C00                <1> 		cmp al, 0
  2064 000017CD 7421                <1> 		je backtonwcmd
  2065 000017CF 4B                  <1> 		dec ebx
  2066 000017D0 EBDE                <1> 		jmp batchfind
  2067                              <1> 	batchnext:
  2068 000017D2 BE[6C530000]        <1> 		mov esi, buftxt
  2069 000017D7 43                  <1> 		inc ebx
  2070 000017D8 8A03                <1> 		mov al, [ebx]
  2071 000017DA 3C04                <1> 		cmp al, 4
  2072 000017DC 7404                <1> 		je batchfound
  2073                              <1> ;;		cmp ebx, commandlst
  2074 000017DE 7310                <1> 		jae backtonwcmd
  2075 000017E0 EBCE                <1> 		jmp batchfind
  2076                              <1> 	batchfound:
  2077 000017E2 43                  <1> 		inc ebx
  2078 000017E3 8A03                <1> 		mov al, [ebx]
  2079 000017E5 8806                <1> 		mov [esi], al
  2080 000017E7 46                  <1> 		inc esi
  2081 000017E8 3C00                <1> 		cmp al, 0
  2082 000017EA 741A                <1> 		je runbatch
  2083                              <1> ;;		cmp ebx, commandlst
  2084 000017EC 7302                <1> 		jae backtonwcmd
  2085 000017EE EBF2                <1> 		jmp batchfound
  2086                              <1> 	backtonwcmd:
  2087 000017F0 A0[654C0000]        <1> 		mov al, [BATCHISON]
  2088 000017F5 FEC8                <1> 		dec al
  2089 000017F7 A2[654C0000]        <1> 		mov [BATCHISON], al
  2090 000017FC E8C0F4FFFF          <1> 		call buftxtclear
  2091 00001801 E9DEF4FFFF          <1> 		jmp nwcmd
  2092                              <1> 	runbatch:
  2093 00001806 A0[654C0000]        <1> 		mov al, [BATCHISON]
  2094 0000180B FEC0                <1> 		inc al
  2095 0000180D A2[654C0000]        <1> 		mov [BATCHISON], al
  2096 00001812 891D[614C0000]      <1> 		mov [BATCHPOS], ebx
  2097 00001818 BE[6C530000]        <1> 		mov esi, buftxt
  2098 0000181D 8A25[FC4B0000]      <1> 		mov ah, [IFON]
  2099 00001823 80FC01              <1> 		cmp ah, 1
  2100 00001826 7305                <1> 		jae ifit
  2101 00001828 E910F5FFFF          <1> 	brun:	jmp progtest
  2102 0000182D 8A06                <1> 	ifit:	mov al, [esi]
  2103 0000182F 3C66                <1> 		cmp al, 'f'
  2104 00001831 7428                <1> 		je ifit2
  2105 00001833 3C65                <1> 		cmp al, 'e'
  2106 00001835 742E                <1> 		je ifelse
  2107 00001837 B800000000          <1> 	ifitst:	mov eax, 0
  2108 0000183C A0[FC4B0000]        <1> 		mov al, [IFON]
  2109 00001841 BF[FD4B0000]        <1> 		mov edi, IFTRUE
  2110 00001846 01C7                <1> 		add edi, eax 
  2111 00001848 B101                <1> 		mov cl, 1
  2112 0000184A 380F                <1> 		cmp [edi],cl
  2113 0000184C 7405                <1> 		je brun2
  2114 0000184E E95DFFFFFF          <1> 		jmp batchfind
  2115 00001853 891D[614C0000]      <1> 	brun2:	mov [BATCHPOS], ebx
  2116 00001859 EBCD                <1> 		jmp brun
  2117 0000185B 46                  <1> 	ifit2:	inc esi
  2118 0000185C 8A06                <1> 		mov al, [esi]
  2119 0000185E 3C69                <1> 		cmp al, 'i'
  2120 00001860 7429                <1> 		je ifit3
  2121 00001862 4E                  <1> 		dec esi
  2122 00001863 EBD2                <1> 		jmp ifitst
  2123 00001865 46                  <1> 	ifelse:	inc esi
  2124 00001866 8A06                <1> 		mov al, [esi]
  2125 00001868 3C6C                <1> 		cmp al, 'l'
  2126 0000186A 7403                <1> 		je ifelse2
  2127 0000186C 4E                  <1> 		dec esi
  2128 0000186D EBC8                <1> 		jmp ifitst
  2129 0000186F 46                  <1> 	ifelse2:	inc esi
  2130 00001870 8A06                <1> 		mov al, [esi]
  2131 00001872 3C73                <1> 		cmp al, 's'
  2132 00001874 7404                <1> 		je ifelse3
  2133 00001876 4E                  <1> 		dec esi
  2134 00001877 4E                  <1> 		dec esi
  2135 00001878 EBBD                <1> 		jmp ifitst
  2136 0000187A 46                  <1> 	ifelse3:	inc esi
  2137 0000187B 8A06                <1> 		mov al, [esi]
  2138 0000187D 3C65                <1> 		cmp al, 'e'
  2139 0000187F 7405                <1> 		je ifelse4
  2140 00001881 4E                  <1> 		dec esi
  2141 00001882 4E                  <1> 		dec esi
  2142 00001883 4E                  <1> 		dec esi
  2143 00001884 EBB1                <1> 		jmp ifitst
  2144 00001886 4E                  <1> 	ifelse4: dec esi
  2145 00001887 4E                  <1> 		dec esi
  2146 00001888 4E                  <1> 		dec esi
  2147 00001889 EBC8                <1> 		jmp brun2
  2148 0000188B 4E                  <1> 	ifit3:	dec esi
  2149 0000188C EBC5                <1> 		jmp brun2
  2150                              <1> 		
  2151                              <1> ;	batchran: 
  2152                              <1> ;		call buftxtclear
  2153                              <1> ;		mov ebx, [BATCHPOS]
  2154                              <1> ;		jmp batchfind
  2155                              <1> 
  2156 0000188E 5C7800              <1> 	exitword db "\x",0
  2157 00001891 54797065205C782074- <1> 	wordmsg db "Type \x to exit.",10,13,0
  2158 0000189A 6F20657869742E0A0D- <1>
  2159 000018A3 00                  <1>
  2160                              <1> 		
  2161 000018A4 050473686F77626D70- <1> db 5,4,"showbmp",0
  2162 000018AD 00                  <1>
  2163 000018AE 803D[29280000]00    <1> 		cmp byte [guion], 0
  2164 000018B5 0F8458000000        <1> 		je near noguibmp
  2165 000018BB BF[6C530000]        <1> 		mov edi, buftxt
  2166 000018C0 81C708000000        <1> 		add edi, 8
  2167 000018C6 BE00001000          <1> 		mov esi, 0x100000
  2168 000018CB E848250000          <1> 		call loadfile
  2169 000018D0 BE00001000          <1> 		mov esi, 0x100000
  2170 000018D5 B900000000          <1> 		mov ecx, 0
  2171 000018DA BA00000000          <1> 		mov edx, 0
  2172 000018DF B800000000          <1> 		mov eax, 0
  2173 000018E4 BB00000000          <1> 		mov ebx, 0
  2174 000018E9 E8061F0000          <1> 		call showbmp
  2175 000018EE B000                <1> 		mov al, 0
  2176 000018F0 B405                <1> 		mov ah, 5
  2177 000018F2 CD30                <1> 		int 30h
  2178 000018F4 BE[6C530000]        <1> 		mov esi, buftxt
  2179 000018F9 81C608000000        <1> 		add esi, 8
  2180 000018FF E888F1FFFF          <1> 		call print
  2181 00001904 BE[DA190000]        <1> 		mov esi, loadedbmpmsg
  2182 00001909 E87EF1FFFF          <1> 		call print
  2183 0000190E E9D1F3FFFF          <1> 		jmp nwcmd
  2184                              <1> noguibmp:
  2185 00001913 BE[22190000]        <1> 		mov esi, warnguibmp
  2186 00001918 E86FF1FFFF          <1> 		call print
  2187 0000191D E9C2F3FFFF          <1> 		jmp nwcmd
  2188 00001922 546869732063616E20- <1> warnguibmp db "This can not be done without the gui.",10,13,0
  2189 0000192B 6E6F7420626520646F- <1>
  2190 00001934 6E6520776974686F75- <1>
  2191 0000193D 742074686520677569- <1>
  2192 00001946 2E0A0D00            <1>
  2193                              <1> 
  2194 0000194A 050473686F77747874- <1> db 5,4,"showtxt",0
  2195 00001953 00                  <1>
  2196 00001954 BF[6C530000]        <1> 		mov edi, buftxt
  2197 00001959 81C708000000        <1> 		add edi, 8
  2198 0000195F BE00001000          <1> 		mov esi, 0x100000
  2199 00001964 E8AF240000          <1> 		call loadfile
  2200 00001969 81FA94010000        <1> 		cmp edx, 404
  2201 0000196F 0F8419000000        <1> 		je near filenotfound
  2202 00001975 BE00001000          <1> 		mov esi, 0x100000
  2203 0000197A E80DF1FFFF          <1> 		call print
  2204 0000197F BE[B33F0000]        <1> 		mov esi, line
  2205 00001984 E803F1FFFF          <1> 		call print
  2206 00001989 E956F3FFFF          <1> 		jmp nwcmd
  2207                              <1> 		
  2208                              <1> filenotfound:
  2209 0000198E BE[B7190000]        <1> 		mov esi, filenf
  2210 00001993 E8F4F0FFFF          <1> 		call print
  2211 00001998 BE[6C530000]        <1> 		mov esi, buftxt
  2212 0000199D 81C608000000        <1> 		add esi, 8
  2213 000019A3 E8E4F0FFFF          <1> 		call print
  2214 000019A8 BE[C2190000]        <1> 		mov esi, filenf2
  2215 000019AD E8DAF0FFFF          <1> 		call print
  2216 000019B2 E92DF3FFFF          <1> 		jmp nwcmd
  2217 000019B7 5468652066696C6520- <1> filenf db "The file ",34,0
  2218 000019C0 2200                <1>
  2219 000019C2 2220636F756C64206E- <1> filenf2 db 34," could not be found.",13,10,0
  2220 000019CB 6F7420626520666F75- <1>
  2221 000019D4 6E642E0D0A00        <1>
  2222                              <1> 		
  2223 000019DA 206C6F616465642E0D- <1> loadedbmpmsg db " loaded.",13,10,0
  2224 000019E3 0A00                <1>
  2225                              <1> 
  2226 000019E5 05042300            <1> db 5,4,"#",0
  2227                              <1> 	num:	
  2228 000019E9 52                  <1> 		push edx
  2229 000019EA E81DF5FFFF          <1> 		call clearbuffer
  2230 000019EF C605[9E1C0000]00    <1> 		mov byte [decimal], 0
  2231 000019F6 C605[9F1C0000]00    <1> 		mov byte [decimal2], 0
  2232 000019FD BE[6C530000]        <1> 		mov esi, buftxt
  2233 00001A02 B800000000          <1> 		mov eax, 0
  2234 00001A07 B900000000          <1> 		mov ecx, 0
  2235 00001A0C BB00000000          <1> 		mov ebx, 0
  2236 00001A11 8A06                <1> 	num2:	mov al, [esi]
  2237 00001A13 3C2B                <1> 		cmp al, '+'
  2238 00001A15 741B                <1> 		je operatorfound
  2239 00001A17 3C2D                <1> 		cmp al, '-'
  2240 00001A19 7417                <1> 		je operatorfound
  2241 00001A1B 3C2A                <1> 		cmp al, '*'
  2242 00001A1D 7413                <1> 		je operatorfound
  2243 00001A1F 3C2F                <1> 		cmp al, '/'
  2244 00001A21 740F                <1> 		je operatorfound
  2245 00001A23 3C5E                <1> 		cmp al, '^'
  2246 00001A25 740B                <1> 		je operatorfound
  2247 00001A27 46                  <1> 		inc esi
  2248 00001A28 3C00                <1> 		cmp al, 0
  2249 00001A2A 0F84B4F2FFFF        <1> 		je near nwcmd
  2250 00001A30 EBDF                <1> 		jmp num2
  2251 00001A32 50                  <1> 	operatorfound: push eax
  2252 00001A33 B400                <1> 		mov ah, 0
  2253 00001A35 8826                <1> 		mov [esi], ah
  2254 00001A37 46                  <1> 		inc esi
  2255 00001A38 8A06                <1> 		mov al, [esi]
  2256 00001A3A 3C24                <1> 		cmp al, '$'
  2257 00001A3C 0F8480000000        <1> 		je near varnum1
  2258 00001A42 3C25                <1> 		cmp al, '%'
  2259 00001A44 0F8468000000        <1> 		je near resultnum1
  2260 00001A4A E900000000          <1> 		jmp varnum2
  2261                              <1> 	varnum2: 
  2262 00001A4F E8BE000000          <1> 		call checkdecimal
  2263 00001A54 E875F7FFFF          <1> 		call cnvrttxt
  2264                              <1> 	vrnm2:
  2265 00001A59 89CB                <1> 		mov ebx, ecx
  2266 00001A5B 53                  <1> 		push ebx
  2267 00001A5C E8ABF4FFFF          <1> 		call clearbuffer
  2268 00001A61 BE[6C530000]        <1> 		mov esi, buftxt
  2269 00001A66 46                  <1> 		inc esi
  2270 00001A67 8A06                <1> 		mov al, [esi]
  2271 00001A69 3C24                <1> 		cmp al, '$'
  2272 00001A6B 0F846F000000        <1> 		je near varnum3
  2273 00001A71 3C25                <1> 		cmp al, '%'
  2274 00001A73 0F8441000000        <1> 		je near resultnum2
  2275                              <1> 	varnum4: 
  2276 00001A79 E880000000          <1> 		call checkdecimal2
  2277 00001A7E E84BF7FFFF          <1> 		call cnvrttxt
  2278                              <1> 	vrnm4:
  2279 00001A83 5B                  <1> 		pop ebx
  2280 00001A84 58                  <1> 		pop eax
  2281 00001A85 3C2B                <1> 		cmp al, '+'
  2282 00001A87 0F84B3000000        <1> 		je near plusnum
  2283 00001A8D 3C2D                <1> 		cmp al, '-'
  2284 00001A8F 0F84B7000000        <1> 		je near subnum
  2285 00001A95 3C2A                <1> 		cmp al, '*'
  2286 00001A97 0F84BB000000        <1> 		je near mulnum
  2287 00001A9D 3C2F                <1> 		cmp al, '/'
  2288 00001A9F 0F84C9000000        <1> 		je near divnum
  2289 00001AA5 3C5E                <1> 		cmp al, '^'
  2290 00001AA7 0F84E7000000        <1> 		je near expnum
  2291 00001AAD E932F2FFFF          <1> 		jmp nwcmd
  2292                              <1> 	resultnum1:
  2293 00001AB2 8B0D[A01C0000]      <1> 		mov ecx, [result]
  2294 00001AB8 EB9F                <1> 		jmp vrnm2
  2295                              <1> 	resultnum2:
  2296 00001ABA 8B0D[A01C0000]      <1> 		mov ecx, [result]
  2297 00001AC0 EBC1                <1> 		jmp vrnm4
  2298 00001AC2 81EE[6C530000]      <1> 	varnum1: sub esi, buftxt
  2299 00001AC8 89F7                <1> 		mov edi, esi
  2300 00001ACA 81C6[6C530000]      <1> 		add esi, buftxt
  2301 00001AD0 47                  <1> 		inc edi
  2302 00001AD1 BB[6C4E0000]        <1> 		mov ebx, variables
  2303 00001AD6 E8D7F9FFFF          <1> 		call nxtvrech
  2304 00001ADB E96FFFFFFF          <1> 		jmp varnum2
  2305 00001AE0 81EE[6C530000]      <1> 	varnum3: sub esi, buftxt
  2306 00001AE6 89F7                <1> 		mov edi, esi
  2307 00001AE8 81C6[6C530000]      <1> 		add esi, buftxt
  2308 00001AEE 47                  <1> 		inc edi
  2309 00001AEF BB[6C4E0000]        <1> 		mov ebx, variables
  2310 00001AF4 E8B9F9FFFF          <1> 		call nxtvrech
  2311 00001AF9 E97BFFFFFF          <1> 		jmp varnum4
  2312                              <1> 	checkdecimal2:
  2313 00001AFE 8A25[9E1C0000]      <1> 		mov ah, [decimal]
  2314 00001B04 8825[9F1C0000]      <1> 		mov [decimal2], ah
  2315 00001B0A B400                <1> 		mov ah, 0
  2316 00001B0C 8825[9E1C0000]      <1> 		mov [decimal], ah
  2317                              <1> 	checkdecimal:
  2318 00001B12 89F7                <1> 		mov edi, esi
  2319                              <1> 	chkdec1:
  2320 00001B14 8A07                <1> 		mov al, [edi]
  2321 00001B16 3C2E                <1> 		cmp al, '.'
  2322 00001B18 0F840B000000        <1> 		je near fnddec
  2323 00001B1E 3C00                <1> 		cmp al, 0
  2324 00001B20 0F8419000000        <1> 		je near nodecimal
  2325 00001B26 47                  <1> 		inc edi
  2326 00001B27 EBEB                <1> 		jmp chkdec1
  2327                              <1> 	fnddec:
  2328 00001B29 8A4701              <1> 		mov al, [edi + 1]
  2329 00001B2C 8807                <1> 		mov [edi], al
  2330 00001B2E 3C00                <1> 		cmp al, 0
  2331 00001B30 0F8409000000        <1> 		je near nodecimal
  2332 00001B36 FE05[9E1C0000]      <1> 		inc byte [decimal]
  2333 00001B3C 47                  <1> 		inc edi
  2334 00001B3D EBEA                <1> 		jmp fnddec
  2335                              <1> 	nodecimal:
  2336 00001B3F C3                  <1> 		ret
  2337                              <1> 	plusnum:
  2338 00001B40 E817010000          <1> 		call decaddfix
  2339 00001B45 01D9                <1> 		add ecx, ebx
  2340 00001B47 E991000000          <1> 		jmp retnum
  2341                              <1> 	subnum:
  2342 00001B4C E80B010000          <1> 		call decaddfix
  2343 00001B51 29D9                <1> 		sub ecx, ebx
  2344 00001B53 E985000000          <1> 		jmp retnum
  2345                              <1> 	mulnum:
  2346 00001B58 A0[9F1C0000]        <1> 		mov al, [decimal2]
  2347 00001B5D 0005[9E1C0000]      <1> 		add [decimal], al
  2348 00001B63 89C8                <1> 		mov eax, ecx
  2349 00001B65 F7E3                <1> 		mul ebx
  2350 00001B67 89C1                <1> 		mov ecx, eax
  2351 00001B69 E96F000000          <1> 		jmp retnum
  2352                              <1> 	divnum:
  2353 00001B6E E8E9000000          <1> 		call decaddfix
  2354 00001B73 B000                <1> 		mov al, 0
  2355 00001B75 A2[9E1C0000]        <1> 		mov [decimal], al
  2356 00001B7A 6689C8              <1> 		mov ax, cx
  2357 00001B7D 80FB00              <1> 		cmp bl, 0
  2358 00001B80 0F8457000000        <1> 		je near retnum
  2359 00001B86 F6F3                <1> 		div bl
  2360 00001B88 B900000000          <1> 		mov ecx, 0
  2361 00001B8D 88C1                <1> 		mov cl, al
  2362 00001B8F E949000000          <1> 		jmp retnum
  2363                              <1> 	expnum:
  2364 00001B94 8A15[9E1C0000]      <1> 		mov dl, [decimal]
  2365 00001B9A 8815[9F1C0000]      <1> 		mov [decimal2], dl
  2366 00001BA0 BA00000000          <1> 		mov edx, 0
  2367 00001BA5 89C8                <1> 		mov eax, ecx
  2368 00001BA7 89D9                <1> 		mov ecx, ebx
  2369 00001BA9 89C3                <1> 		mov ebx, eax
  2370 00001BAB 81F900000000        <1> 		cmp ecx, 0
  2371 00001BB1 7425                <1> 		je noexpnum
  2372 00001BB3 49                  <1> 		dec ecx
  2373 00001BB4 81F900000000        <1> 		cmp ecx, 0
  2374 00001BBA 7415                <1> 		je noexpnumlp
  2375 00001BBC F7E3                <1> 	expnumlp: mul ebx
  2376 00001BBE 8A15[9F1C0000]      <1> 		mov dl, [decimal2]
  2377 00001BC4 0015[9E1C0000]      <1> 		add [decimal], dl
  2378 00001BCA BA00000000          <1> 		mov edx, 0
  2379 00001BCF E2EB                <1> 		loop expnumlp
  2380                              <1> 	noexpnumlp:
  2381 00001BD1 89C1                <1> 		mov ecx, eax
  2382 00001BD3 E905000000          <1> 		jmp retnum
  2383                              <1> 	noexpnum:
  2384 00001BD8 B901000000          <1> 		mov ecx, 1
  2385                              <1> 	retnum: 
  2386 00001BDD 5A                  <1> 		pop edx
  2387 00001BDE BE[80550000]        <1> 		mov esi, numbuf
  2388 00001BE3 890D[A01C0000]      <1> 		mov [result], ecx
  2389 00001BE9 E833F3FFFF          <1> 		call convert
  2390 00001BEE BE[80550000]        <1> 		mov esi, numbuf
  2391 00001BF3 8A25[9E1C0000]      <1> 		mov ah, [decimal]
  2392 00001BF9 80FC00              <1> 		cmp ah, 0
  2393 00001BFC 0F8425000000        <1> 		je near noputdecimal
  2394                              <1> 	putdecimal:
  2395 00001C02 4E                  <1> 		dec esi
  2396 00001C03 FECC                <1> 		dec ah
  2397 00001C05 80FC00              <1> 		cmp ah, 0
  2398 00001C08 0F87F4FFFFFF        <1> 		ja near putdecimal
  2399 00001C0E 4E                  <1> 		dec esi
  2400 00001C0F 8A06                <1> 		mov al, [esi]
  2401 00001C11 C6062E              <1> 		mov byte [esi], '.'
  2402                              <1> 	decputloop:
  2403 00001C14 4E                  <1> 		dec esi
  2404 00001C15 8A26                <1> 		mov ah, [esi]
  2405 00001C17 8806                <1> 		mov [esi], al
  2406 00001C19 88E0                <1> 		mov al, ah
  2407 00001C1B 81FE[6C550000]      <1> 		cmp esi, buf2
  2408 00001C21 0F87EDFFFFFF        <1> 		ja near decputloop
  2409                              <1> 	noputdecimal:
  2410 00001C27 BE[6C550000]        <1> 		mov esi, buf2
  2411 00001C2C E809000000          <1> 		call chkadd
  2412 00001C31 E9AEF0FFFF          <1> 		jmp nwcmd
  2413 00001C36 00000000            <1> edxnumbuf dw 0,0
  2414 00001C3A 8A06                <1> 	chkadd: mov al, [esi]
  2415 00001C3C 3C30                <1> 		cmp al, '0'
  2416 00001C3E 750C                <1> 		jne dnadd
  2417 00001C40 46                  <1> 		inc esi
  2418 00001C41 81FE[80550000]      <1> 		cmp esi, numbuf
  2419 00001C47 7402                <1> 		je dnaddm1
  2420 00001C49 EBEF                <1> 		jmp chkadd
  2421 00001C4B 4E                  <1> 	dnaddm1: dec esi
  2422 00001C4C E83BEEFFFF          <1> 	dnadd:	call print
  2423 00001C51 BE[B33F0000]        <1> 		mov esi, line
  2424 00001C56 E831EEFFFF          <1> 		call print
  2425 00001C5B C3                  <1> 		ret
  2426                              <1> 		
  2427                              <1> 	decaddfix:
  2428 00001C5C A0[9F1C0000]        <1> 		mov al, [decimal2]
  2429 00001C61 8A25[9E1C0000]      <1> 		mov ah, [decimal]
  2430 00001C67 38E0                <1> 		cmp al, ah
  2431 00001C69 7432                <1> 		je gooddecadd
  2432 00001C6B 38E0                <1> 		cmp al, ah
  2433 00001C6D 721A                <1> 		jb lowdecadd
  2434                              <1> 	highdecadd:
  2435 00001C6F FEC4                <1> 		inc ah
  2436 00001C71 89CA                <1> 		mov edx, ecx
  2437 00001C73 C1E103              <1> 		shl ecx, 3
  2438 00001C76 01D1                <1> 		add ecx, edx
  2439 00001C78 01D1                <1> 		add ecx, edx
  2440 00001C7A 38E0                <1> 		cmp al, ah
  2441 00001C7C 77F1                <1> 		ja highdecadd
  2442 00001C7E 8825[9E1C0000]      <1> 		mov [decimal], ah
  2443 00001C84 E914000000          <1> 		jmp gooddecadd
  2444                              <1> 	lowdecadd:
  2445 00001C89 FEC0                <1> 		inc al
  2446 00001C8B 89DA                <1> 		mov edx, ebx
  2447 00001C8D C1E303              <1> 		shl ebx, 3
  2448 00001C90 01D3                <1> 		add ebx, edx
  2449 00001C92 01D3                <1> 		add ebx, edx
  2450 00001C94 38E0                <1> 		cmp al, ah
  2451 00001C96 72F1                <1> 		jb lowdecadd
  2452 00001C98 A2[9E1C0000]        <1> 		mov [decimal], al
  2453                              <1> 	gooddecadd:
  2454 00001C9D C3                  <1> 		ret
  2455                              <1> 		
  2456 00001C9E 00                  <1> decimal db 0
  2457 00001C9F 00                  <1> decimal2 db 0
  2458 00001CA0 00000000            <1> result db 0,0,0,0
  2459                              <1> 	
  2460 00001CA4 05042500            <1> db 5,4,"%",0
  2461 00001CA8 E85FF2FFFF          <1> 	ans:	call clearbuffer
  2462 00001CAD 8B0D[A01C0000]      <1> 		mov ecx, [result]
  2463 00001CB3 BE[6C550000]        <1> 		mov esi, buf2
  2464 00001CB8 E864F2FFFF          <1> 		call convert
  2465 00001CBD BE[6C550000]        <1> 		mov esi, buf2
  2466 00001CC2 E873FFFFFF          <1> 		call chkadd
  2467 00001CC7 E918F0FFFF          <1> 		jmp nwcmd
  2468                              <1> 
  2469 00001CCC 05042400            <1> db 5,4,"$",0
  2470 00001CD0 BE[6C530000]        <1> var:	mov esi, buftxt
  2471 00001CD5 BB[6C4E0000]        <1> 	mov ebx, variables
  2472 00001CDA 8A06                <1> lkeq:	mov al, [esi]
  2473 00001CDC 3C3D                <1> 	cmp al, '='
  2474 00001CDE 741F                <1> 	je eqfnd	;is there an '=' sign?
  2475 00001CE0 3C00                <1> 	cmp al, 0
  2476 00001CE2 7403                <1> 	je echovars
  2477 00001CE4 46                  <1> 	inc esi
  2478 00001CE5 EBF3                <1> 	jmp lkeq
  2479 00001CE7 BE[6C4E0000]        <1> echovars: mov esi, variables
  2480 00001CEC BB[6C530000]        <1> 	mov ebx, varend
  2481 00001CF1 B105                <1> 	mov cl, 5
  2482 00001CF3 B504                <1> 	mov ch, 4
  2483 00001CF5 E8B1F1FFFF          <1> 	call array
  2484 00001CFA E9E5EFFFFF          <1> 	jmp nwcmd
  2485 00001CFF 46                  <1> eqfnd:	inc esi
  2486 00001D00 8A06                <1> 	mov al, [esi]
  2487 00001D02 3C00                <1> 	cmp al, 0
  2488 00001D04 740F                <1> 	je readvar
  2489 00001D06 BE[6C530000]        <1> 	mov esi, buftxt
  2490 00001D0B BB[6C4E0000]        <1> 	mov ebx, variables
  2491 00001D10 E917000000          <1> 	jmp seek
  2492                              <1> readvar: 
  2493 00001D15 B00D                <1> 	mov al, 13
  2494 00001D17 B404                <1> 	mov ah, 4
  2495 00001D19 B307                <1> 	mov bl, 7
  2496 00001D1B E88BEBFFFF          <1> 	call intx4
  2497 00001D20 BE[B33F0000]        <1> 	mov esi, line
  2498 00001D25 E862EDFFFF          <1> 	call print
  2499 00001D2A EBA4                <1> 	jmp var
  2500 00001D2C 668B03              <1> seek:	mov ax, [ebx]
  2501 00001D2F B105                <1> 	mov cl, 5
  2502 00001D31 B504                <1> 	mov ch, 4
  2503 00001D33 663D0000            <1> 	cmp ax, 0
  2504 00001D37 0F8459000000        <1> 	je near save
  2505 00001D3D 6639C8              <1> 	cmp ax, cx
  2506 00001D40 7403                <1> 	je skfnd
  2507 00001D42 43                  <1> 	inc ebx
  2508 00001D43 EBE7                <1> 	jmp seek
  2509 00001D45 BE[6C530000]        <1> skfnd:	mov esi, buftxt
  2510 00001D4A 46                  <1> 	inc esi
  2511 00001D4B 81C302000000        <1> 	add ebx, 2
  2512 00001D51 89DF                <1> 	mov edi, ebx
  2513 00001D53 B13D                <1> 	mov cl, '='
  2514 00001D55 E88FF0FFFF          <1> 	call cndtest
  2515 00001D5A 3C01                <1> 	cmp al, 1	
  2516 00001D5C 7417                <1> 	je varfnd
  2517 00001D5E 89FB                <1> 	mov ebx, edi
  2518 00001D60 BE[6C530000]        <1> 	mov esi, buftxt
  2519 00001D65 668B03              <1> 	mov ax, [ebx]
  2520 00001D68 663D0000            <1> 	cmp ax, 0
  2521 00001D6C 0F8424000000        <1> 	je near save
  2522 00001D72 43                  <1> 	inc ebx
  2523 00001D73 EBB7                <1> 	jmp seek
  2524 00001D75 8A03                <1> varfnd:	mov al, [ebx]
  2525 00001D77 3C04                <1> 	cmp al, 4
  2526 00001D79 7404                <1> 	je save2
  2527 00001D7B 4B                  <1> 	dec ebx
  2528 00001D7C 4E                  <1> 	dec esi
  2529 00001D7D EBF6                <1> 	jmp varfnd
  2530 00001D7F 4B                  <1> save2:	dec ebx
  2531 00001D80 4E                  <1> 	dec esi
  2532 00001D81 8A03                <1> 	mov al, [ebx]
  2533 00001D83 3C05                <1> 	cmp al, 5
  2534 00001D85 7402                <1> 	je remove
  2535 00001D87 EBEC                <1> 	jmp varfnd
  2536 00001D89 8A03                <1> remove: mov al, [ebx]
  2537 00001D8B 3C00                <1> 	cmp al, 0
  2538 00001D8D 749D                <1> 	je seek
  2539 00001D8F B000                <1> 	mov al, 0
  2540 00001D91 8803                <1> 	mov [ebx], al
  2541 00001D93 43                  <1> 	inc ebx
  2542 00001D94 EBF3                <1> 	jmp remove	;do not need for now-need defragmentation
  2543 00001D96 BE[6C530000]        <1> save:	mov esi, buftxt
  2544 00001D9B 43                  <1> 	inc ebx
  2545 00001D9C B005                <1> 	mov al, 5
  2546 00001D9E B404                <1> 	mov ah, 4
  2547 00001DA0 668903              <1> 	mov [ebx], ax
  2548 00001DA3 43                  <1> 	inc ebx
  2549 00001DA4 43                  <1> svhere:	inc ebx
  2550 00001DA5 46                  <1> 	inc esi
  2551 00001DA6 8A06                <1> 	mov al, [esi]
  2552 00001DA8 3C00                <1> 	cmp al, 0
  2553 00001DAA 0F8442000000        <1> 	je near svdone
  2554 00001DB0 3C25                <1> 	cmp al, '%'
  2555 00001DB2 7404                <1> 	je ans2
  2556 00001DB4 8803                <1> 	mov [ebx], al	
  2557 00001DB6 EBEC                <1> 	jmp svhere
  2558 00001DB8 56                  <1> ans2:	push esi
  2559 00001DB9 BE[6C550000]        <1> 	mov esi, buf2
  2560 00001DBE E823000000          <1> 	call ansfnd
  2561 00001DC3 E803000000          <1> 	call anscp
  2562 00001DC8 5E                  <1> 	pop esi
  2563 00001DC9 EBD9                <1> 	jmp svhere
  2564 00001DCB 8A06                <1> anscp:	mov al, [esi]
  2565 00001DCD 8803                <1> 	mov [ebx], al
  2566 00001DCF 81FE[80550000]      <1> 	cmp esi, numbuf
  2567 00001DD5 74CD                <1> 	je svhere
  2568 00001DD7 3C00                <1> 	cmp al, 0
  2569 00001DD9 74C9                <1> 	je svhere
  2570 00001DDB 43                  <1> 	inc ebx
  2571 00001DDC 46                  <1> 	inc esi
  2572 00001DDD EBEC                <1> 	jmp anscp
  2573 00001DDF 5E                  <1> ansnf:	pop esi
  2574 00001DE0 8A06                <1> 	mov al, [esi]
  2575 00001DE2 8803                <1> 	mov [ebx], al
  2576 00001DE4 EBBE                <1> 	jmp svhere
  2577 00001DE6 46                  <1> ansfnd:	inc esi
  2578 00001DE7 8A06                <1> 	mov al, [esi]
  2579 00001DE9 3C00                <1> 	cmp al, 0
  2580 00001DEB 74F2                <1> 	je ansnf
  2581 00001DED 3C30                <1> 	cmp al, '0'
  2582 00001DEF 74F5                <1> 	je ansfnd
  2583 00001DF1 C3                  <1> 	ret
  2584 00001DF2 B000                <1> svdone:	mov al, 0
  2585 00001DF4 8803                <1> 	mov [ebx], al
  2586 00001DF6 E9E9EEFFFF          <1> 	jmp nwcmd
  2587                              <1> 
  2588 00001DFB 050464756D7000      <1> 	db 5,4,"dump",0
  2589 00001E02 BE[6C530000]        <1> 	mov esi, buftxt
  2590 00001E07 81C605000000        <1> 	add esi, 5
  2591 00001E0D B900000000          <1> 	mov ecx, 0
  2592 00001E12 E8B7F3FFFF          <1> 	call cnvrttxt
  2593 00001E17 89CF                <1> 	mov edi, ecx
  2594 00001E19 89FE                <1> 	mov esi, edi
  2595 00001E1B 81C680030000        <1> 	add esi, 896
  2596 00001E21 C605[9D100000]00    <1> 	mov byte [firsthexshown],0
  2597                              <1> dumphexloop:
  2598 00001E28 8B0F                <1> 	mov ecx, [edi]
  2599 00001E2A E86FF2FFFF          <1> 	call showhex
  2600 00001E2F 81C704000000        <1> 	add edi, 4
  2601 00001E35 39F7                <1> 	cmp edi, esi
  2602 00001E37 72EF                <1> 	jb dumphexloop
  2603 00001E39 E9A6EEFFFF          <1> 	jmp nwcmd
  2604                              <1> 	
  2605 00001E3E 050465787000        <1> 	db 5,4,"exp",0
  2606 00001E44 B878563412          <1> 	mov eax, 0x12345678
  2607 00001E49 BBEFCDAB90          <1> 	mov ebx, 0x90ABCDEF
  2608 00001E4E B945584345          <1> 	mov ecx, "EXCE"
  2609 00001E53 BA5054494F          <1> 	mov edx, "PTIO"
  2610 00001E58 BE4E203133          <1> 	mov esi, "N 13"
  2611 00001E5D BF[E40C0000]        <1> 	mov edi, nwcmd
  2612 00001E62 CD0D                <1> exception1:	int 13
  2613                              <1> 	
  2614 00001E64 05042E2F00          <1> 	db 5,4,"./",0
  2615                              <1> rundiskprog:
  2616 00001E69 BF[6C530000]        <1> 	mov edi, buftxt
  2617 00001E6E 81C702000000        <1> 	add edi, 2
  2618 00001E74 BE00001000          <1> 	mov esi, 0x100000
  2619 00001E79 E89A1F0000          <1> 	call loadfile
  2620 00001E7E 81FA94010000        <1> 	cmp edx, 404
  2621 00001E84 7414                <1> 	je noprogfound
  2622 00001E86 BB00001000          <1> 	mov ebx, 0x100000
  2623 00001E8B 66813B4558          <1> 	cmp word [ebx], "EX"
  2624 00001E90 7508                <1> 	jne noprogfound
  2625 00001E92 81C302000000        <1> 	add ebx, 2
  2626 00001E98 FFE3                <1> 	jmp ebx
  2627                              <1> noprogfound:
  2628 00001E9A BE[693F0000]        <1> 	mov esi, notfound1
  2629 00001E9F E8E8EBFFFF          <1> 	call print
  2630 00001EA4 BE[6C530000]        <1> 	mov esi, buftxt
  2631 00001EA9 81C602000000        <1> 	add esi, 2
  2632 00001EAF E8D8EBFFFF          <1> 	call print
  2633 00001EB4 BE[733F0000]        <1> 	mov esi, notfound2
  2634 00001EB9 E8CEEBFFFF          <1> 	call print
  2635 00001EBE E921EEFFFF          <1> 	jmp nwcmd
  2636                              <1> 
  2637 00001EC3 050474696D6500      <1> db 5,4,"time",0
  2638 00001ECA E805000000          <1> 	call time
  2639 00001ECF E910EEFFFF          <1> 	jmp nwcmd
  2640                              <1> time:
  2641 00001ED4 E8C1000000          <1> 	call tstackput1
  2642 00001ED9 B00A                <1> 	mov al,10			;Get RTC register A
  2643 00001EDB E8EB000000          <1> 	call tget1
  2644 00001EE0 A880                <1> 	test al,0x80			;Is update in progress?
  2645 00001EE2 75F0                <1> 	jne time				; yes, wait
  2646                              <1> 
  2647 00001EE4 B000                <1> 	mov al,0			;Get seconds (00 to 59)
  2648 00001EE6 E8E0000000          <1> 	call tget1
  2649 00001EEB A2[09200000]        <1> 	mov [RTCtimeSecond],al
  2650                              <1> 
  2651 00001EF0 B002                <1> 	mov al,0x02			;Get minutes (00 to 59)
  2652 00001EF2 E8D4000000          <1> 	call tget1
  2653 00001EF7 A2[0A200000]        <1> 	mov [RTCtimeMinute],al
  2654                              <1> 
  2655 00001EFC B004                <1> 	mov al,0x04			;Get hours (see notes)
  2656 00001EFE E8C8000000          <1> 	call tget1
  2657 00001F03 A2[0B200000]        <1> 	mov [RTCtimeHour],al
  2658                              <1> 
  2659 00001F08 B007                <1> 	mov al,0x07			;Get day of month (01 to 31)
  2660 00001F0A E8BC000000          <1> 	call tget1
  2661 00001F0F A2[0C200000]        <1> 	mov [RTCtimeDay],al
  2662                              <1> 
  2663 00001F14 B008                <1> 	mov al,0x08			;Get month (01 to 12)
  2664 00001F16 E8B0000000          <1> 	call tget1
  2665 00001F1B A2[0D200000]        <1> 	mov [RTCtimeMonth],al
  2666                              <1> 
  2667 00001F20 B009                <1> 	mov al,0x09			;Get year (00 to 99)
  2668 00001F22 E8A4000000          <1> 	call tget1
  2669 00001F27 A2[0E200000]        <1> 	mov [RTCtimeYear],al
  2670                              <1> 	
  2671 00001F2C BE[0F200000]        <1> 	mov esi, timeshow
  2672 00001F31 8A2D[0B200000]      <1> 	mov ch, [RTCtimeHour]
  2673 00001F37 E89A000000          <1> 	call tput1
  2674 00001F3C 8A2D[0A200000]      <1> 	mov ch, [RTCtimeMinute]
  2675 00001F42 E88F000000          <1> 	call tput1
  2676 00001F47 8A2D[09200000]      <1> 	mov ch, [RTCtimeSecond]
  2677 00001F4D E884000000          <1> 	call tput1
  2678 00001F52 BE[19200000]        <1> 	mov esi, dateshow
  2679 00001F57 8A2D[0D200000]      <1> 	mov ch, [RTCtimeMonth]
  2680 00001F5D E874000000          <1> 	call tput1
  2681 00001F62 8A2D[0C200000]      <1> 	mov ch, [RTCtimeDay]
  2682 00001F68 E869000000          <1> 	call tput1
  2683 00001F6D B520                <1> 	mov ch, 0x20
  2684 00001F6F E862000000          <1> 	call tput1
  2685 00001F74 4E                  <1> 	dec esi
  2686 00001F75 8A2D[0E200000]      <1> 	mov ch, [RTCtimeYear]
  2687 00001F7B E856000000          <1> 	call tput1
  2688 00001F80 E82F000000          <1> 	call tstackget1
  2689 00001F85 BE[0F200000]        <1> 	mov esi, timeshow
  2690 00001F8A 66BB0700            <1> 	mov bx, 7
  2691 00001F8E B401                <1> 	mov ah, 1
  2692 00001F90 B000                <1> 	mov al, 0
  2693 00001F92 CD30                <1> 	int 30h
  2694 00001F94 66B80000            <1> 	mov ax, 0
  2695 00001F98 CD30                <1> 	int 30h
  2696                              <1> 	
  2697                              <1> tstackput1:
  2698 00001F9A 8935[05200000]      <1> 	mov [tstack + 20], esi
  2699 00001FA0 BE[F11F0000]        <1> 	mov esi, tstack
  2700 00001FA5 8906                <1> 	mov [esi], eax
  2701 00001FA7 895E04              <1> 	mov [esi + 4], ebx
  2702 00001FAA 894E08              <1> 	mov [esi + 8], ecx
  2703 00001FAD 89560C              <1> 	mov [esi + 12], edx
  2704 00001FB0 897E10              <1> 	mov [esi + 16], edi
  2705 00001FB3 C3                  <1> 	ret
  2706                              <1> 	
  2707                              <1> tstackget1:
  2708 00001FB4 BE[F11F0000]        <1> 	mov esi, tstack
  2709 00001FB9 8B06                <1> 	mov eax, [esi]
  2710 00001FBB 8B5E04              <1> 	mov ebx, [esi + 4]
  2711 00001FBE 8B4E08              <1> 	mov ecx, [esi + 8]
  2712 00001FC1 8B560C              <1> 	mov edx, [esi + 12]
  2713 00001FC4 8B7E10              <1> 	mov edi, [esi + 16]
  2714 00001FC7 8B7614              <1> 	mov esi, [esi + 20]
  2715 00001FCA C3                  <1> 	ret
  2716                              <1> 	
  2717                              <1> tget1:
  2718 00001FCB 66BA7000            <1> 	mov dx, 0x70
  2719 00001FCF EE                  <1> 	out dx, al
  2720 00001FD0 6642                <1> 	inc dx
  2721 00001FD2 EC                  <1> 	in al, dx
  2722 00001FD3 664A                <1> 	dec dx
  2723 00001FD5 C3                  <1> 	ret
  2724                              <1> 	
  2725                              <1> tput1:
  2726 00001FD6 66C1E904            <1> 	shr cx, 4
  2727 00001FDA B030                <1> 	mov al, 48
  2728 00001FDC 00E8                <1> 	add al, ch
  2729 00001FDE 8806                <1> 	mov [esi], al
  2730 00001FE0 46                  <1> 	inc esi
  2731 00001FE1 B030                <1> 	mov al, 48
  2732 00001FE3 C0E904              <1> 	shr cl, 4
  2733 00001FE6 00C8                <1> 	add al, cl
  2734 00001FE8 8806                <1> 	mov [esi], al
  2735 00001FEA 81C602000000        <1> 	add esi, 2
  2736 00001FF0 C3                  <1> 	ret
  2737                              <1> 		
  2738 00001FF1 000000000000000000- <1> 	tstack dd 0,0,0,0,0,0
  2739 00001FFA 000000000000000000- <1>
  2740 00002003 000000000000        <1>
  2741 00002009 00                  <1> 	RTCtimeSecond db 0
  2742 0000200A 00                  <1> 	RTCtimeMinute db 0
  2743 0000200B 00                  <1> 	RTCtimeHour db 0
  2744 0000200C 00                  <1> 	RTCtimeDay db 0
  2745 0000200D 00                  <1> 	RTCtimeMonth db 0
  2746 0000200E 00                  <1> 	RTCtimeYear db 0
  2747 0000200F 30303A30303A30300D- <1> 	timeshow db "00:00:00",13,10
  2748 00002018 0A                  <1>
  2749 00002019 30302D30302D303030- <1> 	dateshow db "00-00-0000",13,10,0
  2750 00002022 300D0A00            <1>
  2751                                      %include 'source/batchprogs.asm'
  2752                              <1> 	
  2753 00002026 E9B9ECFFFF          <1> notbatch: jmp nwcmd
  2754                              <1> 
  2755 0000202B 05047768696C6500    <1> 	db 5,4,"while",0
  2756 00002033 B000                <1> while:  mov al, 0
  2757 00002035 3805[654C0000]      <1> 	cmp [BATCHISON], al
  2758 0000203B 0F84E5FFFFFF        <1> 	je near notbatch
  2759 00002041 8B35[614C0000]      <1> 	MOV esi, [BATCHPOS]
  2760 00002047 4E                  <1> whilefnd: dec esi
  2761 00002048 8A06                <1> 	mov al, [esi]
  2762 0000204A 3C05                <1> 	cmp al, 5
  2763 0000204C 0F85F5FFFFFF        <1> 	jne near whilefnd
  2764 00002052 8935[674C0000]      <1> 	mov [LOOPPOS], esi
  2765 00002058 C605[664C0000]01    <1> 	mov BYTE [LOOPON], 1
  2766 0000205F 0005[FC4B0000]      <1> 	add [IFON], al
  2767 00002065 BE[6C530000]        <1> 	mov esi, buftxt
  2768 0000206A BB[6C530000]        <1> 	mov ebx, buftxt
  2769 0000206F 81C306000000        <1> 	add ebx, 6
  2770 00002075 E923000000          <1> 	jmp chkeqsn
  2771                              <1> 
  2772                              <1> 
  2773 0000207A 0504696600          <1> 	db 5,4,"if",0
  2774 0000207F B000                <1> if:	mov al, 0
  2775 00002081 3805[654C0000]      <1> 	cmp [BATCHISON], al
  2776 00002087 0F8499FFFFFF        <1> 	je near notbatch
  2777 0000208D BE[6C530000]        <1> 	mov esi, buftxt
  2778 00002092 BB[6C530000]        <1> 	mov ebx, buftxt
  2779 00002097 81C303000000        <1> 	add ebx, 3
  2780 0000209D 8A06                <1> chkeqsn: mov al, [esi]
  2781 0000209F 3C00                <1> 	cmp al, 0
  2782 000020A1 0F847FFFFFFF        <1> 	je near notbatch
  2783 000020A7 3C3D                <1> 	cmp al, '='
  2784 000020A9 0F8403000000        <1> 	je near chkeqdn
  2785 000020AF 46                  <1> 	inc esi
  2786 000020B0 EBEB                <1> 	jmp chkeqsn
  2787 000020B2 B000                <1> chkeqdn: mov al, 0 
  2788 000020B4 8806                <1> 	mov [esi], al
  2789 000020B6 46                  <1> 	inc esi
  2790 000020B7 8A06                <1> 	mov al, [esi]
  2791 000020B9 3C24                <1> 	cmp al, '$'
  2792 000020BB 0F8462000000        <1> 	je near ifvar1
  2793 000020C1 8A03                <1> ifvar2: mov al, [ebx]
  2794 000020C3 3C24                <1> 	cmp al, '$'
  2795 000020C5 0F847B000000        <1> 	je near ifvar3
  2796 000020CB E8DFECFFFF          <1> ifvar4:	call tester
  2797 000020D0 3C01                <1> 	cmp al, 1
  2798 000020D2 0F8405000000        <1> 	je near trueif
  2799 000020D8 E923000000          <1> 	jmp falseif
  2800 000020DD B800000000          <1> trueif:	mov eax, 0
  2801 000020E2 A0[FC4B0000]        <1> 	mov al, [IFON]
  2802 000020E7 FEC0                <1> 	inc al
  2803 000020E9 A2[FC4B0000]        <1> 	mov [IFON], al
  2804 000020EE B400                <1> 	mov ah, 0
  2805 000020F0 BE[FD4B0000]        <1> 	mov esi, IFTRUE
  2806 000020F5 01C6                <1> 	add esi, eax
  2807 000020F7 B401                <1> 	mov ah, 1
  2808 000020F9 8826                <1> 	mov [esi], ah
  2809 000020FB E9E4EBFFFF          <1> 	jmp nwcmd
  2810 00002100 B800000000          <1> falseif: mov eax, 0
  2811 00002105 A0[FC4B0000]        <1> 	mov al, [IFON]
  2812 0000210A FEC0                <1> 	inc al
  2813 0000210C A2[FC4B0000]        <1> 	mov [IFON], al
  2814 00002111 B400                <1> 	mov ah, 0
  2815 00002113 BE[FD4B0000]        <1> 	mov esi, IFTRUE
  2816 00002118 01C6                <1> 	add esi, eax
  2817 0000211A B400                <1> 	mov ah, 0
  2818 0000211C 8826                <1> 	mov [esi], ah
  2819 0000211E E9C1EBFFFF          <1> 	jmp nwcmd
  2820 00002123 89F7                <1> ifvar1: mov edi, esi
  2821 00002125 81EF[6C530000]      <1> 	sub edi, buftxt
  2822 0000212B 47                  <1> 	inc edi
  2823 0000212C BB[6C4E0000]        <1> 	mov ebx, variables
  2824 00002131 E87CF3FFFF          <1> 	call nxtvrech
  2825 00002136 BB[6C530000]        <1> 	mov ebx, buftxt
  2826 0000213B 81C303000000        <1> 	add ebx, 3
  2827 00002141 E97BFFFFFF          <1> 	jmp ifvar2
  2828 00002146 8935[66210000]      <1> ifvar3: mov [esiif], esi
  2829 0000214C BF04000000          <1> 	mov edi, 4
  2830 00002151 BB[6C4E0000]        <1> 	mov ebx, variables
  2831 00002156 E857F3FFFF          <1> 	call nxtvrech
  2832 0000215B 8B35[66210000]      <1> 	mov esi, [esiif]
  2833 00002161 E965FFFFFF          <1> 	jmp ifvar4
  2834                              <1> 
  2835 00002166 00000000            <1> esiif dd 0
  2836                              <1> 	
  2837 0000216A 0504656C736500      <1> 	db 5,4,"else",0
  2838 00002171 B800000000          <1> else:	mov eax, 0
  2839 00002176 A0[FC4B0000]        <1> 	mov al, [IFON]
  2840 0000217B BE[FD4B0000]        <1> 	mov esi, IFTRUE
  2841 00002180 01C6                <1> 	add esi, eax
  2842 00002182 8A06                <1> 	mov al, [esi]
  2843 00002184 3C00                <1> 	cmp al, 0		
  2844 00002186 7409                <1> 	je else1
  2845 00002188 3C01                <1> 	cmp al, 1
  2846 0000218A 740E                <1> 	je else2
  2847 0000218C E953EBFFFF          <1> 	jmp nwcmd
  2848 00002191 B001                <1> else1:  mov al, 1
  2849 00002193 8806                <1> 	mov [esi], al
  2850 00002195 E94AEBFFFF          <1> 	jmp nwcmd
  2851 0000219A B000                <1> else2:	mov al, 0
  2852 0000219C 8806                <1> 	mov [esi], al
  2853 0000219E E941EBFFFF          <1> 	jmp nwcmd
  2854                              <1> 
  2855 000021A3 05046C6F6F7000      <1> 	db 5,4,"loop",0
  2856 000021AA 3805[664C0000]      <1> 	cmp [LOOPON], al
  2857 000021B0 0F8405000000        <1> 	je near filoop
  2858 000021B6 E929EBFFFF          <1> 	jmp nwcmd
  2859 000021BB 8B35[674C0000]      <1> filoop: mov esi, [LOOPPOS]
  2860 000021C1 8935[614C0000]      <1> 	mov [BATCHPOS], esi
  2861 000021C7 E918EBFFFF          <1> 	jmp nwcmd
  2862                              <1> 	
  2863                              <1> 
  2864 000021CC 0504666900          <1> 	db 5,4,"fi",0
  2865 000021D1 B000                <1> 	mov al, 0
  2866 000021D3 3805[654C0000]      <1> 	cmp [BATCHISON], al
  2867 000021D9 0F8447FEFFFF        <1> 	je near notbatch
  2868 000021DF B001                <1> fi:	mov al, 1
  2869 000021E1 2805[FC4B0000]      <1> 	sub [IFON],al
  2870 000021E7 E9F8EAFFFF          <1> 	jmp nwcmd
  2871                              <1> 
  2872 000021EC 050473746F7000      <1> 	db 5,4,"stop",0
  2873 000021F3 B000                <1> stop:	mov al, 0
  2874 000021F5 A2[654C0000]        <1> 	mov [BATCHISON], al
  2875 000021FA A2[FC4B0000]        <1> 	mov [IFON], al
  2876 000021FF A2[FD4B0000]        <1> 	mov [IFTRUE], al
  2877 00002204 A2[664C0000]        <1> 	mov [LOOPON], al
  2878 00002209 E9D6EAFFFF          <1> 	jmp nwcmd
  2879                              <1> 
  2880                              <1> progend:		;programs end here	
  2881                              <1> batchprogend:
  2882                                      %include 'source/input.asm'
  2883                              <1> PS2SET:
  2884 0000220E B0A8                <1>   mov  al, 0xa8		; enable mouse port
  2885 00002210 E664                <1>   out  0x64, al		; write to keyboardcontroller
  2886 00002212 E801000000          <1>   call CHKPRT		; check if command is progressed (demand!)
  2887 00002217 C3                  <1> ret
  2888                              <1> 
  2889                              <1> ;***********************************************************************
  2890                              <1> ;Check if command is accepted. (not got stuck in inputbuffer)
  2891                              <1> ;***********************************************************************
  2892                              <1> CHKPRT:
  2893 00002218 66B96400            <1>   mov  cx, 100
  2894                              <1>  .again:
  2895 0000221C E464                <1>   in   al, 0x64		; read from keyboardcontroller
  2896 0000221E A802                <1>   test al, 2		; Check if input buffer is empty
  2897 00002220 7402                <1>   je .go
  2898 00002222 E2F8                <1>   loop .again
  2899                              <1>  .go:
  2900 00002224 C3                  <1> ret
  2901                              <1> 
  2902                              <1> ;***********************************************************************
  2903                              <1> ;Write to mouse
  2904                              <1> ;***********************************************************************
  2905                              <1> WMOUS:
  2906 00002225 B0D4                <1>   mov  al, 0xd4		; write to mouse device instead of to keyboard
  2907 00002227 E664                <1>   out  0x64, al		; write to keyboardcontroller
  2908 00002229 E8EAFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2909 0000222E C3                  <1> ret
  2910                              <1> 
  2911                              <1> 
  2912                              <1> 
  2913                              <1> ;***********************************************************************
  2914                              <1> ;mouse output buffer full
  2915                              <1> ;***********************************************************************
  2916                              <1> MBUFFUL:
  2917 0000222F 66B96400            <1>   mov cx, 100
  2918                              <1>  .mn:
  2919 00002233 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  2920 00002235 A820                <1>   test al, 0x20		; check if mouse output buffer is full
  2921 00002237 7402                <1>   jz  .mnn
  2922 00002239 E2F8                <1>   loop .mn
  2923                              <1>  .mnn:
  2924 0000223B C3                  <1> ret
  2925                              <1> 
  2926                              <1> 
  2927                              <1> ;***********************************************************************
  2928                              <1> ;Write activate Mouse HardWare
  2929                              <1> ;***********************************************************************
  2930                              <1> ACTMOUS:
  2931 0000223C E8E4FFFFFF          <1>   call WMOUS
  2932 00002241 B0F4                <1>   mov  al, 0xf4 	; Command to activate mouse itselve (Stream mode)
  2933 00002243 E660                <1>   out  0x60, al		; write ps/2 controller output port (activate mouse)
  2934 00002245 E8CEFFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2935 0000224A E801000000          <1>   call CHKMOUS		; check if a byte is available
  2936 0000224F C3                  <1> ret
  2937                              <1> 
  2938                              <1> ;***********************************************************************
  2939                              <1> ;Check if mouse has info for us
  2940                              <1> ;***********************************************************************
  2941                              <1> CHKMOUS:
  2942 00002250 B300                <1>   mov  bl, 0
  2943 00002252 66B96400            <1>   mov cx, 100
  2944                              <1>  .vrd:
  2945 00002256 E464                <1>   in   al, 0x64		; read from keyboardcontroller
  2946 00002258 A801                <1>   test al, 1		; check if controller buffer (60h) has data
  2947 0000225A 7504                <1>   jnz .yy
  2948 0000225C E2F8                <1>   loop .vrd
  2949 0000225E B301                <1>   mov  bl, 1
  2950                              <1>  .yy:
  2951 00002260 C3                  <1> ret
  2952                              <1> 
  2953                              <1> ;***********************************************************************
  2954                              <1> ;Get Mouse Byte
  2955                              <1> ;***********************************************************************
  2956                              <1> GETB:
  2957                              <1>  .cagain:
  2958 00002261 E8EAFFFFFF          <1>   call CHKMOUS		; check if a byte is available
  2959 00002266 08DB                <1>   or bl, bl
  2960 00002268 75F7                <1>   jnz .cagain
  2961 0000226A B0AD                <1>   mov  al, 0xad		; Disable Keyboard
  2962 0000226C E664                <1>   out  0x64, al		; write to keyboardcontroller
  2963 0000226E E8A5FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2964 00002273 6631C0              <1>   xor  ax, ax
  2965 00002276 E460                <1>   in   al, 0x60		; read ps/2 controller output port (mousebyte)
  2966 00002278 88C2                <1>   mov  dl, al
  2967 0000227A B0AE                <1>   mov  al, 0xae		; Enable Keyboard
  2968 0000227C E664                <1>   out  0x64, al		; write to keyboardcontroller
  2969 0000227E E895FFFFFF          <1>   call CHKPRT		; check if command is progressed (demand!)
  2970 00002283 88D0                <1>   mov  al, dl
  2971 00002285 C3                  <1> ret
  2972                              <1> 
  2973 00002286 00                  <1> LBUTTON db 0x00	;	Left   button status 1=PRESSED 0=RELEASED
  2974 00002287 00                  <1> RBUTTON db 0x00	;	Right  button status 1=PRESSED 0=RELEASED
  2975 00002288 00                  <1> MBUTTON db 0x00	;	Middle button status 1=PRESSED 0=RELEASED
  2976 00002289 00                  <1> XCOORD  db 0x00	;	the moved distance  (horizontal)
  2977 0000228A 00                  <1> YCOORD  db 0x00	;	the moved distance  (vertical)
  2978                              <1> 
  2979                              <1> 
  2980                              <1> 	guistartin:
  2981 0000228B B800000000          <1> 		mov eax, 0
  2982 00002290 66A3[590A0000]      <1> 		mov [lastkey], ax
  2983 00002296 E464                <1> 		in al, 64h ; Status
  2984 00002298 A801                <1> 		test al, 1 ; output buffer full?
  2985 0000229A 74EF                <1> 		jz guistartin
  2986 0000229C A820                <1> 		test al, 20h ; PS2-Mouse?
  2987 0000229E 0F85D4000000        <1> 		jnz near maincall2
  2988 000022A4 E460                <1> 		in al, 60h
  2989 000022A6 88C4                <1> 		mov ah, al
  2990 000022A8 B000                <1> 		mov al, 0
  2991 000022AA 8825[5A0A0000]      <1> 		mov [lastkey + 1], ah
  2992 000022B0 88E0                <1> 		mov al, ah
  2993 000022B2 BF[08250000]        <1> 		mov edi, scancode
  2994                              <1> 	guisearchscan: 
  2995 000022B7 3C40                <1> 		cmp al, 40h
  2996 000022B9 7315                <1> 		jae guiscanother
  2997 000022BB B400                <1> 		mov ah, 0
  2998 000022BD D0E0                <1> 		shl al, 1
  2999 000022BF 01C7                <1> 		add edi, eax
  3000 000022C1 D0E8                <1> 		shr al, 1
  3001 000022C3 8A27                <1> 		mov ah, [edi]
  3002 000022C5 80FC00              <1> 		cmp ah, 0
  3003 000022C8 7406                <1> 		je guiscanother
  3004 000022CA E964000000          <1> 		jmp guiscanfound
  3005 000022CF 00                  <1> guiupper db 0
  3006                              <1> guiscanother:
  3007 000022D0 88C4                <1> 		mov ah, al
  3008 000022D2 B000                <1> 		mov al, 0
  3009 000022D4 66A3[590A0000]      <1> 		mov [lastkey], ax
  3010                              <1> 		;cmp ah, 4Dh
  3011                              <1> 		;je near nextimage
  3012 000022DA 80FC2A              <1> 		cmp ah, 2Ah
  3013 000022DD 0F8437000000        <1> 		je near guishifton
  3014 000022E3 80FC36              <1> 		cmp ah, 36h
  3015 000022E6 0F842E000000        <1> 		je near guishifton
  3016 000022EC 80FC1C              <1> 		cmp ah, 1Ch
  3017 000022EF 0F843D000000        <1> 		je near guientdown
  3018 000022F5 80FCAA              <1> 		cmp ah, 0AAh
  3019 000022F8 0F8428000000        <1> 		je near guishiftoff
  3020 000022FE 80FCB6              <1> 		cmp ah, 0B6h
  3021 00002301 0F841F000000        <1> 		je near guishiftoff
  3022 00002307 80FC3A              <1> 		cmp ah, 3Ah
  3023 0000230A 0F8401000000        <1> 		je near guishift
  3024 00002310 C3                  <1> 		ret
  3025                              <1> 	guishift:
  3026 00002311 A0[CF220000]        <1> 		mov al, [guiupper]
  3027 00002316 3C01                <1> 		cmp al, 1
  3028 00002318 730C                <1> 		jae guishiftoff
  3029                              <1> 	guishifton:
  3030 0000231A C605[CF220000]01    <1> 		mov byte [guiupper], 1
  3031 00002321 E965FFFFFF          <1> 		jmp guistartin
  3032                              <1> 	guishiftoff:
  3033 00002326 C605[CF220000]00    <1> 		mov byte [guiupper], 0
  3034 0000232D E959FFFFFF          <1> 		jmp guistartin
  3035                              <1> 	guientdown:
  3036 00002332 C3                  <1> 		ret
  3037                              <1> 	guiscanfound:
  3038 00002333 81C701000000        <1> 		add edi, 1
  3039 00002339 803D[CF220000]01    <1> 		cmp byte [guiupper], 1
  3040 00002340 7306                <1> 		jae uppercasegui
  3041 00002342 81EF01000000        <1> 		sub edi, 1
  3042                              <1> uppercasegui:
  3043 00002348 8A07                <1> 		mov al,[edi]
  3044 0000234A A2[590A0000]        <1> 		mov [lastkey], al
  3045 0000234F C3                  <1> 		ret
  3046                              <1> 		
  3047                              <1> 		
  3048                              <1> 	cursorgui:
  3049 00002350 803D[98380000]01    <1> 		cmp byte [mouseon], 1
  3050 00002357 0F841B000000        <1> 		je near maincall2
  3051                              <1> 
  3052                              <1> 	initmouse:
  3053 0000235D E894050000          <1> 		call switchmousepos2
  3054 00002362 E8A7FEFFFF          <1> 	  	call PS2SET
  3055 00002367 E8D0FEFFFF          <1> 		call ACTMOUS
  3056 0000236C E8F0FEFFFF          <1> 		call GETB 	;;Get the responce byte of the mouse (like: Hey i am active)
  3057                              <1> 				;;If the bytes are mixed up,
  3058                              <1> 				;;remove this line or add another of this line.
  3059                              <1> 		;call GETB
  3060 00002371 C605[98380000]01    <1> 		mov byte [mouseon],1
  3061                              <1> 
  3062                              <1> 	maincall2:  
  3063 00002378 E8E4FEFFFF          <1> 		  call GETB
  3064 0000237D 88C3                <1> 		  mov  bl, al
  3065 0000237F 80E301              <1> 		  and  bl, 1
  3066 00002382 881D[86220000]      <1> 		  mov  BYTE [LBUTTON], bl
  3067 00002388 88C3                <1> 		  mov  bl, al
  3068 0000238A 80E302              <1> 		  and  bl, 2
  3069 0000238D D0EB                <1> 		  shr  bl, 1
  3070 0000238F 881D[87220000]      <1> 		  mov  BYTE [RBUTTON], bl
  3071 00002395 88C3                <1> 		  mov  bl, al
  3072 00002397 80E304              <1> 		  and  bl, 4
  3073 0000239A C0EB02              <1> 		  shr  bl, 2
  3074 0000239D 881D[88220000]      <1> 		  mov  BYTE [MBUTTON], bl
  3075 000023A3 E8B9FEFFFF          <1> 		  call GETB
  3076 000023A8 A2[89220000]        <1> 		  mov  BYTE [XCOORD], al
  3077 000023AD E8AFFEFFFF          <1> 		  call GETB
  3078 000023B2 A2[8A220000]        <1> 		  mov  BYTE [YCOORD], al
  3079                              <1> 
  3080                              <1> 	showpixelcursor:
  3081 000023B7 668B15[04250000]    <1> 		mov dx, [mousecursorposition]
  3082 000023BE 668B0D[06250000]    <1> 		mov cx, [mousecursorposition + 2]
  3083 000023C5 668915[00250000]    <1> 		mov [lastmouseposition], dx
  3084 000023CC 66890D[02250000]    <1> 		mov [lastmouseposition + 2], cx
  3085 000023D3 A0[89220000]        <1> 		mov al, [XCOORD]
  3086 000023D8 3C80                <1> 		cmp al, 128
  3087 000023DA 730C                <1> 		jae subxcoord
  3088 000023DC 00C0                <1> 		add al, al
  3089 000023DE B400                <1> 		mov ah, 0
  3090 000023E0 6601C2              <1> 		add dx, ax
  3091 000023E3 E90B000000          <1> 		jmp subxcoorddn
  3092                              <1> 	subxcoord:
  3093 000023E8 00C0                <1> 		add al, al
  3094 000023EA B300                <1> 		mov bl, 0
  3095 000023EC 28C3                <1> 		sub bl, al
  3096 000023EE B700                <1> 		mov bh, 0
  3097 000023F0 6629DA              <1> 		sub dx, bx
  3098                              <1> 	subxcoorddn:
  3099 000023F3 8A1D[8A220000]      <1> 		mov bl, [YCOORD]
  3100 000023F9 B000                <1> 		mov al, 0
  3101 000023FB 28D8                <1> 		sub al, bl
  3102 000023FD 3C80                <1> 		cmp al, 128
  3103 000023FF 730A                <1> 		jae subycoord
  3104 00002401 B400                <1> 		mov ah, 0
  3105 00002403 6601C1              <1> 		add cx, ax
  3106 00002406 E909000000          <1> 		jmp subycoorddn
  3107                              <1> 	subycoord:
  3108 0000240B B300                <1> 		mov bl, 0
  3109 0000240D 28C3                <1> 		sub bl, al
  3110 0000240F B700                <1> 		mov bh, 0
  3111 00002411 6629D9              <1> 		sub cx, bx
  3112                              <1> 	subycoorddn:
  3113 00002414 6681FA204E          <1> 		cmp dx, 20000
  3114 00002419 7604                <1> 		jbe nooriginx2
  3115 0000241B 66BA0000            <1> 		mov dx, 0
  3116                              <1> 	nooriginx2:
  3117 0000241F 6681F9204E          <1> 		cmp cx, 20000
  3118 00002424 7604                <1> 		jbe nooriginy2
  3119 00002426 66B90000            <1> 		mov cx, 0
  3120                              <1> 	nooriginy2:
  3121 0000242A 6681FA0000          <1> 		cmp dx, 0
  3122 0000242F 7415                <1> 		je nofixxcolumn2
  3123 00002431 663B15[49360000]    <1> 		cmp dx, [resolutionx2]
  3124 00002438 720C                <1> 		jb nofixxcolumn2
  3125 0000243A 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  3126 00002441 6681EA0200          <1> 		sub dx, 2
  3127                              <1> 	nofixxcolumn2:
  3128 00002446 6681F90000          <1> 		cmp cx, 0
  3129 0000244B 7415                <1> 		je nofixyrow2
  3130 0000244D 663B0D[45360000]    <1> 		cmp cx, [resolutiony]
  3131 00002454 720C                <1> 		jb nofixyrow2
  3132 00002456 668B0D[45360000]    <1> 		mov cx, [resolutiony]
  3133 0000245D 6681E90100          <1> 		sub cx, 1
  3134                              <1> 	nofixyrow2:
  3135 00002462 668915[04250000]    <1> 		mov [mousecursorposition], dx
  3136 00002469 66890D[06250000]    <1> 		mov [mousecursorposition + 2], cx
  3137 00002470 E818040000          <1> 		call switchmousepos ;;use dragging code to ensure proper icon drag
  3138 00002475 803D[86220000]01    <1> 		cmp byte [LBUTTON], 1
  3139 0000247C 0F84F1040000        <1> 		je near clickicon
  3140 00002482 803D[87220000]01    <1> 		cmp byte [RBUTTON], 1
  3141 00002489 0F84E4040000        <1> 		je near clickicon
  3142 0000248F A0[60290000]        <1> 		mov al, [pbutton]
  3143 00002494 C705[63290000]0000- <1> 		mov dword [dragging], 0
  3144 0000249C 0000                <1>
  3145 0000249E 3C00                <1> 		cmp al, 0
  3146 000024A0 740F                <1> 		je nopreviousbutton
  3147 000024A2 E883030000          <1> 		call clearmousecursor
  3148 000024A7 E8FB090000          <1> 		call reloadallgraphics
  3149 000024AC E845040000          <1> 		call switchmousepos2
  3150                              <1> 	nopreviousbutton:
  3151 000024B1 B000                <1> 		mov al, 0
  3152 000024B3 A2[60290000]        <1> 		mov [pbutton], al
  3153 000024B8 A0[86220000]        <1> 		mov al, [LBUTTON]
  3154 000024BD A2[61290000]        <1> 		mov [pLBUTTON], al
  3155 000024C2 A0[87220000]        <1> 		mov al, [RBUTTON]
  3156 000024C7 A2[62290000]        <1> 		mov [pRBUTTON], al
  3157 000024CC B900000000          <1> 		mov ecx, 0
  3158 000024D1 BA00000000          <1> 		mov edx, 0
  3159 000024D6 668B15[04250000]    <1> 		mov dx, [mousecursorposition]
  3160 000024DD 668B0D[06250000]    <1> 		mov cx, [mousecursorposition + 2]
  3161 000024E4 66BB9CE7            <1> 		mov bx, 1110011110011100b
  3162 000024E8 B400                <1> 		mov ah, 0
  3163 000024EA B080                <1> 		mov al, 128
  3164 000024EC C605[26280000]01    <1> 		mov byte [showcursorfonton], 1
  3165 000024F3 E861110000          <1> 		call showfontvesa
  3166 000024F8 C605[26280000]00    <1> 		mov byte [showcursorfonton], 0
  3167 000024FF C3                  <1> 		ret
  3168                              <1> 
  3169 00002500 84008400            <1> lastmouseposition dw 132,132
  3170 00002504 84008400            <1> mousecursorposition dw 132,132	
  3171                              <1> 
  3172                              <1> 		
  3173                              <1> 		
  3174                              <1> 	
  3175                              <1> scancode:
  3176 00002508 0000                <1> 	db 0,0		;,0h
  3177 0000250A 0000                <1> 	db 0,0		;,1h
  3178 0000250C 3121                <1> 	db '1','!'	;,2h
  3179 0000250E 3240                <1> 	db '2','@'	;,3h
  3180 00002510 3323                <1> 	db '3','#'	;,4h
  3181 00002512 3424                <1> 	db '4','$'	;,5h
  3182 00002514 3525                <1> 	db '5','%'	;,6h
  3183 00002516 365E                <1> 	db '6','^'	;,7h
  3184 00002518 3726                <1> 	db '7','&'	;,8h
  3185 0000251A 382A                <1> 	db '8','*'	;,9h
  3186 0000251C 3928                <1> 	db '9','('	;,0Ah
  3187 0000251E 3029                <1> 	db '0',')'	;,0Bh
  3188 00002520 2D5F                <1> 	db '-','_'	;,0Ch
  3189 00002522 3D2B                <1> 	db '=','+'	;,0Dh
  3190 00002524 0808                <1> 	db 8,8		;,0Eh
  3191 00002526 0000                <1> 	db 0,0		;,0Fh
  3192 00002528 7151                <1> 	db 'q','Q'	;,10h
  3193 0000252A 7757                <1> 	db 'w','W'	;,11h
  3194 0000252C 6545                <1> 	db 'e','E'	;,12h
  3195 0000252E 7252                <1> 	db 'r','R'	;,13h
  3196 00002530 7454                <1> 	db 't','T'	;,14h
  3197 00002532 7959                <1> 	db 'y','Y'	;,15h
  3198 00002534 7555                <1> 	db 'u','U'	;,16h
  3199 00002536 6949                <1> 	db 'i','I'	;,17h
  3200 00002538 6F4F                <1> 	db 'o','O'	;,18h
  3201 0000253A 7050                <1> 	db 'p','P'	;,19h
  3202 0000253C 5B7B                <1> 	db '[','{'	;,1Ah
  3203 0000253E 5D7D                <1> 	db ']','}'	;,1Bh
  3204 00002540 0000                <1> 	db 0,0		;,1Ch
  3205 00002542 0000                <1> 	db 0,0		;,1Dh
  3206 00002544 6141                <1> 	db 'a','A'	;,1Eh
  3207 00002546 7353                <1> 	db 's','S'	;,1Fh
  3208 00002548 6444                <1> 	db 'd','D'	;,20h
  3209 0000254A 6646                <1> 	db 'f','F'	;,21h
  3210 0000254C 6747                <1> 	db 'g','G'	;,22h
  3211 0000254E 6848                <1> 	db 'h','H'	;,23h
  3212 00002550 6A4A                <1> 	db 'j','J'	;,24h
  3213 00002552 6B4B                <1> 	db 'k','K'	;,25h
  3214 00002554 6C4C                <1> 	db 'l','L'	;,26h
  3215 00002556 3B3A                <1> 	db ';',':'	;,27h
  3216 00002558 2722                <1> 	db 27h,22h	;,28h
  3217 0000255A 607E                <1> 	db '`','~'	;,29h
  3218 0000255C 0000                <1> 	db 0,0		;,2Ah
  3219 0000255E 5C7C                <1> 	db '\','|'	;,2Bh
  3220 00002560 7A5A                <1> 	db 'z','Z'	;,2Ch
  3221 00002562 7858                <1> 	db 'x','X'	;,2Dh
  3222 00002564 6343                <1> 	db 'c','C'	;,2Eh
  3223 00002566 7656                <1> 	db 'v','V'	;,2Fh
  3224 00002568 6242                <1> 	db 'b','B'	;,30h
  3225 0000256A 6E4E                <1> 	db 'n','N'	;,31h
  3226 0000256C 6D4D                <1> 	db 'm','M'	;,32h
  3227 0000256E 2C3C                <1> 	db ',','<'	;,33h
  3228 00002570 2E3E                <1> 	db '.','>'	;,34h
  3229 00002572 2F3F                <1> 	db '/','?'	;,35h
  3230 00002574 0000                <1> 	db 0,0		;,36h
  3231 00002576 0000                <1> 	db 0,0		;,37h
  3232 00002578 0000                <1> 	db 0,0		;,38h
  3233 0000257A 2020                <1> 	db ' ',' '	;,39h
  3234                              <1> noscan:
  3235                                      %include 'source/gui.asm'
  3236                              <1> guiclear:
  3237 0000257C 8B3D[316B0000]      <1> 	mov edi, [physbaseptr]
  3238 00002582 668B15[47360000]    <1> 	mov dx, [resolutionx]
  3239 00002589 668B0D[45360000]    <1> 	mov cx, [resolutiony]
  3240 00002590 66A1[B9250000]      <1> 	mov ax, [background]
  3241                              <1> guiclearloop:
  3242 00002596 668907              <1> 	mov [edi], ax
  3243 00002599 81C702000000        <1> 	add edi, 2
  3244 0000259F 664A                <1> 	dec dx
  3245 000025A1 6681FA0000          <1> 	cmp dx, 0
  3246 000025A6 77EE                <1> 	ja guiclearloop
  3247 000025A8 6649                <1> 	dec cx
  3248 000025AA 668B15[47360000]    <1> 	mov dx, [resolutionx]
  3249 000025B1 6681F90000          <1> 	cmp cx, 0
  3250 000025B6 77DE                <1> 	ja guiclearloop
  3251 000025B8 C3                  <1> 	ret
  3252                              <1> 
  3253 000025B9 CF7B                <1> background dw 0111101111001111b
  3254                              <1> 
  3255                              <1> gui:	;Let's see what I can do
  3256                              <1> 	;I am going to try to make this as freestanding as possible
  3257 000025BB E8B8ECFFFF          <1> 	call indexfiles
  3258 000025C0 8B3D[316B0000]      <1> 	mov edi, [physbaseptr]
  3259 000025C6 668B15[47360000]    <1> 	mov dx, [resolutionx]
  3260 000025CD 668B0D[45360000]    <1> 	mov cx, [resolutiony]
  3261 000025D4 668B1D[B9250000]    <1> 	mov bx, [background]
  3262                              <1> guiclearloop2:
  3263 000025DB 66891F              <1> 	mov [edi], bx
  3264 000025DE 81C702000000        <1> 	add edi, 2
  3265 000025E4 664A                <1> 	dec dx
  3266 000025E6 6681FA0000          <1> 	cmp dx, 0
  3267 000025EB 77EE                <1> 	ja guiclearloop2
  3268 000025ED 6649                <1> 	dec cx
  3269 000025EF 668B15[47360000]    <1> 	mov dx, [resolutionx]
  3270 000025F6 6681F90000          <1> 	cmp cx, 0
  3271 000025FB 77DE                <1> 	ja guiclearloop2
  3272 000025FD C605[29280000]01    <1> 	mov byte [guion], 1
  3273 00002604 B800000000          <1> 	mov eax, 0
  3274 00002609 BB00000000          <1> 	mov ebx, 0
  3275 0000260E B900000000          <1> 	mov ecx, 0
  3276 00002613 BA00000000          <1> 	mov edx, 0
  3277                              <1> 	
  3278 00002618 BE[AD380000]        <1> 	mov esi, pacmsg
  3279 0000261D 66B80000            <1> 	mov ax, 0
  3280 00002621 BB00000000          <1> 	mov ebx, 0
  3281 00002626 66B90200            <1> 	mov cx, 2
  3282 0000262A 66BA0400            <1> 	mov dx, 4
  3283 0000262E E8BA0B0000          <1> 	call showstring
  3284                              <1> 	
  3285 00002633 BE[C3390000]        <1> 	mov esi, interneticon
  3286 00002638 66B80000            <1> 	mov ax, 0
  3287 0000263C BB[22390000]        <1> 	mov ebx, noie
  3288 00002641 66B91800            <1> 	mov cx, 24
  3289 00002645 66BA0400            <1> 	mov dx, 4
  3290 00002649 E81E0F0000          <1> 	call showicon
  3291                              <1> 	
  3292 0000264E BE[453A0000]        <1> 	mov esi, wordicon
  3293 00002653 66B80000            <1> 	mov ax, 0
  3294 00002657 BB00000000          <1> 	mov ebx, 0
  3295 0000265C 66B91800            <1> 	mov cx, 24
  3296 00002660 66BA3000            <1> 	mov dx, 48
  3297 00002664 E8030F0000          <1> 	call showicon
  3298                              <1> 	
  3299 00002669 BE[C73A0000]        <1> 	mov esi, pacmanpellet
  3300 0000266E 66B80000            <1> 	mov ax, 0
  3301 00002672 BB00000000          <1> 	mov ebx, 0
  3302 00002677 66B94000            <1> 	mov cx, 64
  3303 0000267B 66BA0400            <1> 	mov dx, 4
  3304 0000267F E8E80E0000          <1> 	call showicon
  3305                              <1> 	
  3306 00002684 BE[CB3B0000]        <1> 	mov esi, pacman
  3307 00002689 66B80000            <1> 	mov ax, 0
  3308 0000268D BB[07390000]        <1> 	mov ebx, pacmannomnom
  3309 00002692 66B94000            <1> 	mov cx, 64
  3310 00002696 66BA3000            <1> 	mov dx, 48
  3311 0000269A E8CD0E0000          <1> 	call showicon
  3312                              <1> 	
  3313 0000269F BE[493B0000]        <1> 	mov esi, ghostie
  3314 000026A4 66B80000            <1> 	mov ax, 0
  3315 000026A8 BB[EC380000]        <1> 	mov ebx, boo
  3316 000026AD 66B96C00            <1> 	mov cx, 108
  3317 000026B1 66BA0400            <1> 	mov dx, 4
  3318 000026B5 E8B20E0000          <1> 	call showicon
  3319                              <1> 
  3320 000026BA BE[99380000]        <1> 	mov esi, start
  3321 000026BF 668B0D[45360000]    <1> 	mov cx, [resolutiony]
  3322 000026C6 6681E91000          <1> 	sub cx, 16
  3323 000026CB 66BA0200            <1> 	mov dx, 2
  3324 000026CF B400                <1> 	mov ah, 0
  3325 000026D1 B010                <1> 	mov al, 00010000b
  3326 000026D3 BB[70390000]        <1> 	mov ebx, winblows
  3327 000026D8 E8100B0000          <1> 	call showstring
  3328                              <1> 	
  3329 000026DD E86EFCFFFF          <1> 	call cursorgui
  3330                              <1> guistart:
  3331 000026E2 E8A4FBFFFF          <1> 	call guistartin
  3332 000026E7 C605[22280000]00    <1> 	mov byte [copygui], 0
  3333 000026EE EBF2                <1> 	jmp guistart
  3334                              <1> 	
  3335                              <1> guicopy:	;;for double buffering
  3336 000026F0 C605[22280000]01    <1> 	mov byte [copygui], 1
  3337 000026F7 8B3D[356B0000]      <1> 	mov edi, [offscreenmemoffset]
  3338 000026FD BA00000000          <1> 	mov edx, 0
  3339 00002702 B900000000          <1> 	mov ecx, 0
  3340 00002707 668B15[04250000]    <1> 	mov dx, [mousecursorposition]
  3341 0000270E 668B0D[06250000]    <1> 	mov cx, [mousecursorposition + 2]
  3342 00002715 01D7                <1> 	add edi, edx
  3343 00002717 668B15[49360000]    <1> 	mov dx, [resolutionx2]
  3344 0000271E 6641                <1> 	inc cx
  3345                              <1> guicp2:
  3346 00002720 01D7                <1> 	add edi, edx
  3347 00002722 6649                <1> 	dec cx
  3348 00002724 6681F90000          <1> 	cmp cx, 0
  3349 00002729 75F5                <1> 	jne guicp2
  3350 0000272B 29D7                <1> 	sub edi, edx
  3351 0000272D 893D[F5270000]      <1> 	mov [cursorloc], edi
  3352 00002733 BB[7C480000]        <1> 	mov ebx, cursorbmp
  3353 00002738 668B0D[45360000]    <1> 	mov cx, [resolutiony]
  3354 0000273F C1C110              <1> 	rol ecx, 16
  3355 00002742 668B0D[47360000]    <1> 	mov cx, [resolutionx]
  3356 00002749 8B35[316B0000]      <1> 	mov esi, [physbaseptr]
  3357 0000274F 8B3D[356B0000]      <1> 	mov edi, [offscreenmemoffset]
  3358                              <1> guicp1:
  3359 00002755 668B06              <1> 	mov ax, [esi]
  3360 00002758 668907              <1> 	mov [edi], ax
  3361 0000275B 81C602000000        <1> 	add esi, 2
  3362 00002761 81C702000000        <1> 	add edi, 2
  3363 00002767 3B3D[F5270000]      <1> 	cmp edi, [cursorloc]
  3364 0000276D 7427                <1> 	je copycursor
  3365                              <1> dncopycursor:
  3366 0000276F 6649                <1> 	dec cx
  3367 00002771 6681F90000          <1> 	cmp cx, 0
  3368 00002776 75DD                <1> 	jne guicp1
  3369 00002778 668B0D[47360000]    <1> 	mov cx, [resolutionx]
  3370 0000277F C1C110              <1> 	rol ecx, 16
  3371 00002782 6649                <1> 	dec cx
  3372 00002784 6681F90000          <1> 	cmp cx, 0
  3373 00002789 C1C110              <1> 	rol ecx, 16
  3374 0000278C 75C7                <1> 	jne guicp1
  3375 0000278E C605[22280000]00    <1> 	mov byte [copygui], 0
  3376 00002795 C3                  <1> 	ret
  3377                              <1> copycursor:
  3378 00002796 81FB[FC480000]      <1> 	cmp ebx, cursorbmpend
  3379 0000279C 73D1                <1> 	jae dncopycursor
  3380 0000279E 668B15[49360000]    <1> 	mov dx, [resolutionx2]
  3381 000027A5 01D7                <1> 	add edi, edx
  3382 000027A7 893D[F5270000]      <1> 	mov [cursorloc], edi
  3383 000027AD 29D7                <1> 	sub edi, edx
  3384 000027AF 4B                  <1> 	dec ebx
  3385 000027B0 81EF02000000        <1> 	sub edi, 2
  3386 000027B6 81EE02000000        <1> 	sub esi, 2
  3387 000027BC 66BA0900            <1> 	mov dx, 9
  3388                              <1> curscplp:
  3389 000027C0 43                  <1> 	inc ebx
  3390 000027C1 81C602000000        <1> 	add esi, 2
  3391 000027C7 81C702000000        <1> 	add edi, 2
  3392 000027CD 668B06              <1> 	mov ax, [esi]
  3393 000027D0 668907              <1> 	mov [edi], ax
  3394 000027D3 8A03                <1> 	mov al, [ebx]
  3395 000027D5 3C00                <1> 	cmp al, 0
  3396 000027D7 7405                <1> 	je curscplp2
  3397 000027D9 66C7079CE7          <1> 	mov word [edi], 1110011110011100b
  3398                              <1> curscplp2:
  3399 000027DE 6649                <1> 	dec cx
  3400 000027E0 6681F90000          <1> 	cmp cx, 0
  3401 000027E5 7488                <1> 	je dncopycursor
  3402 000027E7 664A                <1> 	dec dx
  3403 000027E9 6681FA0000          <1> 	cmp dx, 0
  3404 000027EE 75D0                <1> 	jne curscplp
  3405 000027F0 E97AFFFFFF          <1> 	jmp dncopycursor
  3406                              <1> 	
  3407                              <1> 	
  3408 000027F5 00000000            <1> cursorloc: dd 0
  3409                              <1> 		
  3410                              <1> nextimage:	
  3411 000027F9 E87EFDFFFF          <1> 	call guiclear
  3412 000027FE 8B35[90380000]      <1> 	mov esi, [bmpend]
  3413 00002804 B800000000          <1> 	mov eax, 0
  3414 00002809 BB00000000          <1> 	mov ebx, 0
  3415 0000280E B900000000          <1> 	mov ecx, 0
  3416 00002813 BA00000000          <1> 	mov edx, 0
  3417 00002818 E8D70F0000          <1> 	call showbmp
  3418 0000281D E969FAFFFF          <1> 	jmp guistartin
  3419                              <1> 		
  3420 00002822 00                  <1> copygui db 0
  3421 00002823 00                  <1> graphicsset db 0
  3422 00002824 0000                <1> graphicspos db 0,0
  3423 00002826 00                  <1> showcursorfonton db 0
  3424 00002827 00                  <1> savefonton db 0
  3425 00002828 00                  <1> mouseselecton db 0
  3426 00002829 00                  <1> guion db 0
  3427                              <1> 
  3428                              <1> 		
  3429                              <1> clearmousecursor:
  3430 0000282A BE[B9250000]        <1> 		mov esi, background
  3431 0000282F 8B3D[316B0000]      <1> 		mov edi, [physbaseptr]
  3432 00002835 BA00000000          <1> 		mov edx, 0
  3433 0000283A B900000000          <1> 		mov ecx, 0
  3434 0000283F 668B15[00250000]    <1> 		mov dx, [lastmouseposition]
  3435 00002846 668B0D[02250000]    <1> 		mov cx, [lastmouseposition + 2]
  3436 0000284D 01D7                <1> 		add edi, edx
  3437 0000284F BA00000000          <1> 		mov edx, 0
  3438 00002854 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  3439 0000285B 6681F90000          <1> 		cmp cx, 0
  3440 00002860 740B                <1> 		je noyclr
  3441 00002862 01D7                <1> yclr:	add edi, edx
  3442 00002864 6649                <1> 		dec cx
  3443 00002866 6681F90000          <1> 		cmp cx, 0
  3444 0000286B 75F5                <1> 		jne yclr
  3445 0000286D 668B06              <1> noyclr:	mov ax, [esi]
  3446 00002870 C1C010              <1> 		rol eax, 16
  3447 00002873 668B06              <1> 		mov ax, [esi]
  3448 00002876 8907                <1> 		mov [edi], eax
  3449 00002878 894704              <1> 		mov [edi + 4], eax
  3450 0000287B 894708              <1> 		mov [edi + 8], eax
  3451 0000287E 89470C              <1> 		mov [edi + 12], eax
  3452 00002881 01D7                <1> 		add edi, edx
  3453 00002883 6641                <1> 		inc cx
  3454 00002885 6681F91000          <1> 		cmp cx, 16
  3455 0000288A 72E1                <1> 		jb noyclr
  3456 0000288C C3                  <1> 		ret
  3457                              <1> 
  3458                              <1> switchmousepos:		;;switch were the mouse is located
  3459 0000288D BE[FC4A0000]        <1> 		mov esi, mousecolorbuf
  3460 00002892 8B3D[316B0000]      <1> 		mov edi, [physbaseptr]
  3461 00002898 BA00000000          <1> 		mov edx, 0
  3462 0000289D B900000000          <1> 		mov ecx, 0
  3463 000028A2 668B15[00250000]    <1> 		mov dx, [lastmouseposition]
  3464 000028A9 668B0D[02250000]    <1> 		mov cx, [lastmouseposition + 2]
  3465 000028B0 01D7                <1> 		add edi, edx
  3466 000028B2 BA00000000          <1> 		mov edx, 0
  3467 000028B7 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  3468 000028BE 6681F90000          <1> 		cmp cx, 0
  3469 000028C3 740B                <1> 		je noswmsy
  3470 000028C5 01D7                <1> swmsy:		add edi, edx
  3471 000028C7 6649                <1> 		dec cx
  3472 000028C9 6681F90000          <1> 		cmp cx, 0
  3473 000028CE 75F5                <1> 		jne swmsy
  3474 000028D0 8B06                <1> noswmsy:	mov eax, [esi]
  3475 000028D2 8B5E04              <1> 		mov ebx, [esi + 4]
  3476 000028D5 8907                <1> 		mov [edi], eax
  3477 000028D7 895F04              <1> 		mov [edi + 4], ebx
  3478 000028DA 8B4608              <1> 		mov eax, [esi + 8]
  3479 000028DD 8B5E0C              <1> 		mov ebx, [esi + 12]
  3480 000028E0 894708              <1> 		mov [edi + 8], eax
  3481 000028E3 895F0C              <1> 		mov [edi + 12], ebx
  3482 000028E6 01D7                <1> 		add edi, edx
  3483 000028E8 81C610000000        <1> 		add esi, 16
  3484 000028EE 81FE[FC4B0000]      <1> 		cmp esi, mcolorend
  3485 000028F4 72DA                <1> 		jb noswmsy
  3486                              <1> 		
  3487                              <1> switchmousepos2:
  3488 000028F6 BE[FC4A0000]        <1> 		mov esi, mousecolorbuf
  3489 000028FB 8B3D[316B0000]      <1> 		mov edi, [physbaseptr]
  3490 00002901 BA00000000          <1> 		mov edx, 0
  3491 00002906 B900000000          <1> 		mov ecx, 0
  3492 0000290B 668B15[04250000]    <1> 		mov dx, [mousecursorposition]
  3493 00002912 668B0D[06250000]    <1> 		mov cx, [mousecursorposition + 2]
  3494 00002919 01D7                <1> 		add edi, edx
  3495 0000291B BA00000000          <1> 		mov edx, 0
  3496 00002920 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  3497 00002927 6681F90000          <1> 		cmp cx, 0
  3498 0000292C 740B                <1> 		je noswmsy2
  3499 0000292E 01D7                <1> swmsy2:		add edi, edx
  3500 00002930 6649                <1> 		dec cx
  3501 00002932 6681F90000          <1> 		cmp cx, 0
  3502 00002937 75F5                <1> 		jne swmsy2
  3503 00002939 8B07                <1> noswmsy2:	mov eax, [edi]
  3504 0000293B 8B5F04              <1> 		mov ebx, [edi + 4]
  3505 0000293E 8906                <1> 		mov [esi], eax
  3506 00002940 895E04              <1> 		mov [esi + 4], ebx
  3507 00002943 8B4708              <1> 		mov eax, [edi + 8]
  3508 00002946 8B5F0C              <1> 		mov ebx, [edi + 12]
  3509 00002949 894608              <1> 		mov [esi + 8], eax
  3510 0000294C 895E0C              <1> 		mov [esi + 12], ebx
  3511 0000294F 01D7                <1> 		add edi, edx
  3512 00002951 81C610000000        <1> 		add esi, 16
  3513 00002957 81FE[FC4B0000]      <1> 		cmp esi, mcolorend
  3514 0000295D 72DA                <1> 		jb noswmsy2
  3515 0000295F C3                  <1> 		ret
  3516                              <1> 
  3517 00002960 00                  <1> pbutton db 0
  3518 00002961 00                  <1> pLBUTTON db 0
  3519 00002962 00                  <1> pRBUTTON db 0
  3520 00002963 00000000            <1> dragging dw 0,0
  3521 00002967 0000000000000000    <1> lastpos dw 0,0,0,0
  3522 0000296F 00000000            <1> colorbuf dw 0,0
  3523                              <1> 	
  3524                              <1> 	clickicon:
  3525 00002973 B001                <1> 		mov al, 1
  3526 00002975 A2[60290000]        <1> 		mov [pbutton], al
  3527 0000297A A0[61290000]        <1> 		mov al, [pLBUTTON]
  3528 0000297F 2205[86220000]      <1> 		and al, [LBUTTON]
  3529 00002985 8A25[62290000]      <1> 		mov ah, [pRBUTTON]
  3530 0000298B 2225[87220000]      <1> 		and ah, [RBUTTON]
  3531 00002991 08E0                <1> 		or al, ah
  3532 00002993 3C00                <1> 		cmp al, 0
  3533 00002995 741B                <1> 		je nodragclick
  3534 00002997 813D[63290000]0100- <1> 		cmp dword [dragging], 1
  3535 0000299F 0000                <1>
  3536 000029A1 732D                <1> 		jae dragclick
  3537 000029A3 C705[63290000]0100- <1> 		mov dword [dragging], 1
  3538 000029AB 0000                <1>
  3539 000029AD E91E000000          <1> 		jmp dragclick
  3540                              <1> 	nodragclick:
  3541 000029B2 C705[63290000]0000- <1> 		mov dword [dragging], 0
  3542 000029BA 0000                <1>
  3543 000029BC A0[86220000]        <1> 		mov al, [LBUTTON]
  3544 000029C1 A2[61290000]        <1> 		mov [pLBUTTON], al
  3545 000029C6 A0[87220000]        <1> 		mov al, [RBUTTON]
  3546 000029CB A2[62290000]        <1> 		mov [pRBUTTON], al
  3547                              <1> 	dragclick:
  3548 000029D0 66B80000            <1> 		mov ax, 0
  3549 000029D4 BE[FC480000]        <1> 		mov esi, graphicstable
  3550 000029D9 C705[E7380000]0000- <1> 		mov dword [codepointer], 0
  3551 000029E1 0000                <1>
  3552                              <1> 	clicon2:
  3553 000029E3 BA00000000          <1> 		mov edx, 0
  3554 000029E8 B900000000          <1> 		mov ecx, 0
  3555 000029ED 66813E0100          <1> 		cmp word [esi], 1
  3556 000029F2 0F841B000000        <1> 		je near iconselect
  3557 000029F8 66813E0200          <1> 		cmp word [esi], 2
  3558 000029FD 0F8472010000        <1> 		je near textselected
  3559 00002A03 66813E0300          <1> 		cmp word [esi], 3
  3560 00002A08 0F84C7020000        <1> 		je near windowselect
  3561 00002A0E E901040000          <1> 		jmp nexticonsel
  3562                              <1> 	iconselect:
  3563 00002A13 668B5606            <1> 		mov dx, [esi + 6]
  3564 00002A17 6689D0              <1> 		mov ax, dx
  3565 00002A1A 668B4E08            <1> 		mov cx, [esi + 8]
  3566 00002A1E 6689CB              <1> 		mov bx, cx
  3567 00002A21 6681C32000          <1> 		add bx, 32
  3568 00002A26 6601D0              <1> 		add ax, dx
  3569 00002A29 813D[63290000]0100- <1> 		cmp dword [dragging], 1
  3570 00002A31 0000                <1>
  3571 00002A33 746F                <1> 		je dragicon
  3572 00002A35 813D[63290000]0000- <1> 		cmp dword [dragging], 0
  3573 00002A3D 0000                <1>
  3574 00002A3F 7411                <1> 		je nodragiconcheck
  3575 00002A41 3935[63290000]      <1> 		cmp dword [dragging], esi
  3576 00002A47 0F85C7030000        <1> 		jne near nexticonsel
  3577 00002A4D E952000000          <1> 		jmp dragicon
  3578                              <1> 	nodragiconcheck:
  3579 00002A52 663905[04250000]    <1> 		cmp [mousecursorposition], ax
  3580 00002A59 0F82B5030000        <1> 		jb near nexticonsel
  3581 00002A5F 66054000            <1> 		add ax, 64
  3582 00002A63 663905[04250000]    <1> 		cmp [mousecursorposition], ax
  3583 00002A6A 0F87A4030000        <1> 		ja near nexticonsel
  3584 00002A70 6629D0              <1> 		sub ax, dx
  3585 00002A73 66390D[06250000]    <1> 		cmp [mousecursorposition + 2], cx
  3586 00002A7A 0F8294030000        <1> 		jb near nexticonsel
  3587 00002A80 66391D[06250000]    <1> 		cmp [mousecursorposition + 2], bx
  3588 00002A87 0F8787030000        <1> 		ja near nexticonsel
  3589 00002A8D 668B460A            <1> 		mov ax, [esi + 10]
  3590 00002A91 66250100            <1> 		and ax, 1
  3591 00002A95 663D0100            <1> 		cmp ax, 1
  3592 00002A99 0F84B6000000        <1> 		je near unselecticon
  3593 00002A9F E98D000000          <1> 		jmp nodragicon
  3594                              <1> 	dragicon:
  3595 00002AA4 663905[00250000]    <1> 		cmp [lastmouseposition], ax
  3596 00002AAB 0F8263030000        <1> 		jb near nexticonsel
  3597 00002AB1 66054000            <1> 		add ax, 64
  3598 00002AB5 663905[00250000]    <1> 		cmp [lastmouseposition], ax
  3599 00002ABC 0F8752030000        <1> 		ja near nexticonsel
  3600 00002AC2 6629D0              <1> 		sub ax, dx
  3601 00002AC5 66390D[02250000]    <1> 		cmp [lastmouseposition + 2], cx
  3602 00002ACC 0F8242030000        <1> 		jb near nexticonsel
  3603 00002AD2 66391D[02250000]    <1> 		cmp [lastmouseposition + 2], bx
  3604 00002AD9 0F8735030000        <1> 		ja near nexticonsel
  3605 00002ADF 668B460A            <1> 		mov ax, [esi + 10]
  3606 00002AE3 2410                <1> 		and al, 00010000b
  3607 00002AE5 3C10                <1> 		cmp al, 00010000b
  3608 00002AE7 7448                <1> 		je nodragicon
  3609 00002AE9 8935[63290000]      <1> 		mov [dragging], esi
  3610 00002AEF 66D1E2              <1> 		shl dx, 1
  3611 00002AF2 662B15[00250000]    <1> 		sub dx, [lastmouseposition]
  3612 00002AF9 660315[04250000]    <1> 		add dx, [mousecursorposition]
  3613 00002B00 66D1EA              <1> 		shr dx, 1
  3614 00002B03 66030D[06250000]    <1> 		add cx, [mousecursorposition + 2]
  3615 00002B0A 662B0D[02250000]    <1> 		sub cx, [lastmouseposition + 2]
  3616 00002B11 663B15[49360000]    <1> 		cmp dx, [resolutionx2]
  3617 00002B18 7607                <1> 		jbe chkyresdrgicn
  3618 00002B1A 668B15[04250000]    <1> 		mov dx, [mousecursorposition]
  3619                              <1> 	chkyresdrgicn:
  3620 00002B21 663B0D[45360000]    <1> 		cmp cx, [resolutiony]
  3621 00002B28 7607                <1> 		jbe nodragicon
  3622 00002B2A 668B0D[06250000]    <1> 		mov cx, [mousecursorposition + 2]
  3623                              <1> 	nodragicon:
  3624 00002B31 66814E0A0100        <1> 		or word [esi + 10], 1
  3625 00002B37 8B5E0C              <1> 		mov ebx, [esi + 12]
  3626 00002B3A 668B460A            <1> 		mov ax, [esi + 10]
  3627 00002B3E 8B7602              <1> 		mov esi, [esi + 2]
  3628 00002B41 C705[E7380000]0000- <1> 		mov dword [codepointer], 0
  3629 00002B49 0000                <1>
  3630 00002B4B E81C0A0000          <1> 		call showicon
  3631 00002B50 E9D8020000          <1> 		jmp doneiconsel
  3632                              <1> 	unselecticon:
  3633 00002B55 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3634 00002B5B 8B5E0C              <1> 		mov ebx, [esi + 12]
  3635 00002B5E 668B460A            <1> 		mov ax, [esi + 10]
  3636 00002B62 8B7602              <1> 		mov esi, [esi + 2]
  3637 00002B65 891D[E7380000]      <1> 		mov [codepointer], ebx
  3638 00002B6B E8FC090000          <1> 		call showicon
  3639 00002B70 E9B8020000          <1> 		jmp doneiconsel
  3640                              <1> 	textselected:
  3641 00002B75 8B5E02              <1> 		mov ebx, [esi + 2]
  3642 00002B78 668B5606            <1> 		mov dx, [esi + 6]
  3643 00002B7C 6689D0              <1> 		mov ax, dx
  3644 00002B7F 668B4E08            <1> 		mov cx, [esi + 8]
  3645                              <1> 	lengthtesttext:
  3646 00002B83 803B00              <1> 		cmp byte [ebx], 0
  3647 00002B86 7407                <1> 		je donetesttextlength
  3648 00002B88 43                  <1> 		inc ebx
  3649 00002B89 66051000            <1> 		add ax, 16
  3650 00002B8D EBF4                <1> 		jmp lengthtesttext
  3651                              <1> 	donetesttextlength:
  3652 00002B8F 6689CB              <1> 		mov bx, cx
  3653 00002B92 6681C30F00          <1> 		add bx, 15
  3654 00002B97 813D[63290000]0100- <1> 		cmp dword [dragging], 1
  3655 00002B9F 0000                <1>
  3656 00002BA1 7468                <1> 		je dragtext
  3657 00002BA3 813D[63290000]0000- <1> 		cmp dword [dragging], 0
  3658 00002BAB 0000                <1>
  3659 00002BAD 7411                <1> 		je nodragtextcheck
  3660 00002BAF 3935[63290000]      <1> 		cmp dword [dragging], esi
  3661 00002BB5 0F8559020000        <1> 		jne near nexticonsel
  3662 00002BBB E94B000000          <1> 		jmp dragtext
  3663                              <1> 	nodragtextcheck:
  3664 00002BC0 663915[04250000]    <1> 		cmp [mousecursorposition], dx
  3665 00002BC7 0F8247020000        <1> 		jb near nexticonsel
  3666 00002BCD 663905[04250000]    <1> 		cmp [mousecursorposition], ax
  3667 00002BD4 0F873A020000        <1> 		ja near nexticonsel
  3668 00002BDA 66390D[06250000]    <1> 		cmp [mousecursorposition + 2], cx
  3669 00002BE1 0F822D020000        <1> 		jb near nexticonsel
  3670 00002BE7 66391D[06250000]    <1> 		cmp [mousecursorposition + 2], bx
  3671 00002BEE 0F8720020000        <1> 		ja near nexticonsel
  3672 00002BF4 668B460A            <1> 		mov ax, [esi + 10]
  3673 00002BF8 66250100            <1> 		and ax, 1
  3674 00002BFC 663D0100            <1> 		cmp ax, 1
  3675 00002C00 0F84AB000000        <1> 		je near unselecttext
  3676 00002C06 E986000000          <1> 		jmp nodragtext
  3677                              <1> 	dragtext:
  3678 00002C0B 663915[00250000]    <1> 		cmp [lastmouseposition], dx
  3679 00002C12 0F82FC010000        <1> 		jb near nexticonsel
  3680 00002C18 663905[00250000]    <1> 		cmp [lastmouseposition], ax
  3681 00002C1F 0F87EF010000        <1> 		ja near nexticonsel
  3682 00002C25 66390D[02250000]    <1> 		cmp [lastmouseposition + 2], cx
  3683 00002C2C 0F82E2010000        <1> 		jb near nexticonsel
  3684 00002C32 66391D[02250000]    <1> 		cmp [lastmouseposition + 2], bx
  3685 00002C39 0F87D5010000        <1> 		ja near nexticonsel
  3686 00002C3F 668B460A            <1> 		mov ax, [esi + 10]
  3687 00002C43 2410                <1> 		and al, 00010000b
  3688 00002C45 663D1000            <1> 		cmp ax, 00010000b
  3689 00002C49 0F8442000000        <1> 		je near nodragtext
  3690 00002C4F 8935[63290000]      <1> 		mov [dragging], esi
  3691 00002C55 662B15[00250000]    <1> 		sub dx, [lastmouseposition]
  3692 00002C5C 660315[04250000]    <1> 		add dx, [mousecursorposition]
  3693 00002C63 66030D[06250000]    <1> 		add cx, [mousecursorposition + 2]
  3694 00002C6A 662B0D[02250000]    <1> 		sub cx, [lastmouseposition + 2]
  3695 00002C71 663B15[49360000]    <1> 		cmp dx, [resolutionx2]
  3696 00002C78 7607                <1> 		jbe chkyresdrgtxt
  3697 00002C7A 668B15[04250000]    <1> 		mov dx, [mousecursorposition]
  3698                              <1> 	chkyresdrgtxt:
  3699 00002C81 663B0D[45360000]    <1> 		cmp cx, [resolutiony]
  3700 00002C88 7607                <1> 		jbe nodragtext
  3701 00002C8A 668B0D[06250000]    <1> 		mov cx, [mousecursorposition + 2]
  3702                              <1> 	nodragtext:
  3703 00002C91 66814E0A0100        <1> 		or word [esi + 10], 1
  3704 00002C97 8B5E0C              <1> 		mov ebx, [esi + 12]
  3705 00002C9A 891D[E7380000]      <1> 		mov [codepointer], ebx
  3706 00002CA0 668B460A            <1> 		mov ax, [esi + 10]
  3707 00002CA4 8B7602              <1> 		mov esi, [esi + 2]
  3708 00002CA7 E841050000          <1> 		call showstring
  3709 00002CAC E97C010000          <1> 		jmp doneiconsel
  3710                              <1> 	unselecttext:
  3711 00002CB1 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3712 00002CB7 8B5E0C              <1> 		mov ebx, [esi + 12]
  3713 00002CBA 668B460A            <1> 		mov ax, [esi + 10]
  3714 00002CBE 8B7602              <1> 		mov esi, [esi + 2]
  3715 00002CC1 C705[E7380000]0000- <1> 		mov dword [codepointer], 0
  3716 00002CC9 0000                <1>
  3717 00002CCB E81D050000          <1> 		call showstring
  3718 00002CD0 E958010000          <1> 		jmp doneiconsel
  3719                              <1> windowselect:
  3720 00002CD5 8B7E02              <1> 		mov edi, [esi + 2]
  3721 00002CD8 668B5606            <1> 		mov dx, [esi + 6]
  3722 00002CDC 6689D0              <1> 		mov ax, dx
  3723 00002CDF 668B4E08            <1> 		mov cx, [esi + 8]
  3724 00002CE3 6689CB              <1> 		mov bx, cx
  3725 00002CE6 6681C31000          <1> 		add bx, 16
  3726 00002CEB 813D[63290000]0100- <1> 		cmp dword [dragging], 1
  3727 00002CF3 0000                <1>
  3728 00002CF5 746D                <1> 		je dragwin
  3729 00002CF7 813D[63290000]0000- <1> 		cmp dword [dragging], 0
  3730 00002CFF 0000                <1>
  3731 00002D01 7411                <1> 		je nodragwincheck
  3732 00002D03 3935[63290000]      <1> 		cmp dword [dragging], esi
  3733 00002D09 0F8505010000        <1> 		jne near nexticonsel
  3734 00002D0F E950000000          <1> 		jmp dragwin
  3735                              <1> 	nodragwincheck:
  3736 00002D14 663905[04250000]    <1> 		cmp [mousecursorposition], ax
  3737 00002D1B 0F82F3000000        <1> 		jb near nexticonsel
  3738 00002D21 660307              <1> 		add ax, [edi]
  3739 00002D24 660307              <1> 		add ax, [edi]
  3740 00002D27 663905[04250000]    <1> 		cmp [mousecursorposition], ax
  3741 00002D2E 0F87E0000000        <1> 		ja near nexticonsel
  3742 00002D34 66390D[06250000]    <1> 		cmp [mousecursorposition + 2], cx
  3743 00002D3B 0F82D3000000        <1> 		jb near nexticonsel
  3744 00002D41 66391D[06250000]    <1> 		cmp [mousecursorposition + 2], bx
  3745 00002D48 0F87C6000000        <1> 		ja near nexticonsel
  3746 00002D4E 662D1400            <1> 		sub ax, 20
  3747 00002D52 663905[04250000]    <1> 		cmp [mousecursorposition], ax
  3748 00002D59 0F8795000000        <1> 		ja near killwin
  3749 00002D5F E97C000000          <1> 		jmp nodragwin
  3750                              <1> 	dragwin:
  3751 00002D64 663905[00250000]    <1> 		cmp [lastmouseposition], ax
  3752 00002D6B 0F82A3000000        <1> 		jb near nexticonsel
  3753 00002D71 660307              <1> 		add ax, [edi]
  3754 00002D74 660307              <1> 		add ax, [edi]
  3755 00002D77 663905[00250000]    <1> 		cmp [lastmouseposition], ax
  3756 00002D7E 0F8790000000        <1> 		ja near nexticonsel
  3757 00002D84 66390D[02250000]    <1> 		cmp [lastmouseposition + 2], cx
  3758 00002D8B 0F8283000000        <1> 		jb near nexticonsel
  3759 00002D91 66391D[02250000]    <1> 		cmp [lastmouseposition + 2], bx
  3760 00002D98 0F8776000000        <1> 		ja near nexticonsel
  3761 00002D9E 8935[63290000]      <1> 		mov [dragging], esi
  3762 00002DA4 662B15[00250000]    <1> 		sub dx, [lastmouseposition]
  3763 00002DAB 660315[04250000]    <1> 		add dx, [mousecursorposition]
  3764 00002DB2 66030D[06250000]    <1> 		add cx, [mousecursorposition + 2]
  3765 00002DB9 662B0D[02250000]    <1> 		sub cx, [lastmouseposition + 2]
  3766 00002DC0 663B15[49360000]    <1> 		cmp dx, [resolutionx2]
  3767 00002DC7 7607                <1> 		jbe chkyresdrgwin
  3768 00002DC9 668B15[04250000]    <1> 		mov dx, [mousecursorposition]
  3769                              <1> 	chkyresdrgwin:
  3770 00002DD0 663B0D[45360000]    <1> 		cmp cx, [resolutiony]
  3771 00002DD7 7607                <1> 		jbe nodragwin
  3772 00002DD9 668B0D[06250000]    <1> 		mov cx, [mousecursorposition + 2]
  3773                              <1> 	nodragwin:
  3774 00002DE0 8B5E0C              <1> 		mov ebx, [esi + 12]
  3775 00002DE3 668B460A            <1> 		mov ax, [esi + 10]
  3776 00002DE7 8B7602              <1> 		mov esi, [esi + 2]
  3777 00002DEA E853040000          <1> 		call showwindow
  3778 00002DEF E939000000          <1> 		jmp doneiconsel
  3779                              <1> 	killwin:
  3780 00002DF4 66C7060000          <1> 		mov word [esi], 0
  3781 00002DF9 C705[CF020000]0000- <1> 		mov dword [user2codepoint], 0
  3782 00002E01 0000                <1>
  3783 00002E03 C605[D8080000]00    <1> 		mov byte [termguion], 0
  3784 00002E0A E86DF7FFFF          <1> 		call guiclear
  3785 00002E0F E939000000          <1> 		jmp doneiconsel2
  3786                              <1> 	nexticonsel:
  3787 00002E14 6681660AFEFF        <1> 		and word [esi + 10], 0xFFFE
  3788 00002E1A 81C610000000        <1> 		add esi, 16
  3789 00002E20 81FE[FC4A0000]      <1> 		cmp esi, graphicstableend
  3790 00002E26 7305                <1> 		jae doneiconsel
  3791 00002E28 E9B6FBFFFF          <1> 		jmp clicon2
  3792                              <1> 	doneiconsel:
  3793 00002E2D 813D[63290000]0100- <1> 		cmp dword [dragging], 1
  3794 00002E35 0000                <1>
  3795 00002E37 7314                <1> 		jae doneiconsel2
  3796 00002E39 813D[E7380000]0000- <1> 		cmp dword [codepointer], 0
  3797 00002E41 0000                <1>
  3798 00002E43 7408                <1> 		je doneiconsel2
  3799 00002E45 8B1D[E7380000]      <1> 		mov ebx, [codepointer]
  3800 00002E4B FFE3                <1> 		jmp ebx 
  3801                              <1> 	doneiconsel2:
  3802 00002E4D A0[86220000]        <1> 		mov al, [LBUTTON]
  3803 00002E52 A2[61290000]        <1> 		mov [pLBUTTON], al
  3804 00002E57 A0[87220000]        <1> 		mov al, [RBUTTON]
  3805 00002E5C A2[62290000]        <1> 		mov [pRBUTTON], al
  3806 00002E61 E8C4F9FFFF          <1> call clearmousecursor
  3807 00002E66 E83C000000          <1> call reloadallgraphics
  3808 00002E6B B900000000          <1> 		mov ecx, 0
  3809 00002E70 BA00000000          <1> 		mov edx, 0
  3810 00002E75 B400                <1> 		mov ah, 0
  3811 00002E77 B080                <1> 		mov al, 128
  3812 00002E79 668B15[04250000]    <1> 		mov dx, [mousecursorposition]
  3813 00002E80 668B0D[06250000]    <1> 		mov cx, [mousecursorposition + 2]
  3814 00002E87 66BBE738            <1> 		mov bx, 0011100011100111b
  3815 00002E8B C605[26280000]01    <1> 		mov byte [showcursorfonton], 1
  3816 00002E92 E8C2070000          <1> 		call showfontvesa
  3817 00002E97 C605[26280000]00    <1> 		mov byte [showcursorfonton], 0
  3818 00002E9E C3                  <1> 		ret
  3819 00002E9F 00000000            <1> lastdrag dw 0,0
  3820 00002EA3 00000000            <1> grpctblpos dw 0,0
  3821                              <1> 
  3822                              <1> reloadallgraphics:
  3823 00002EA7 BF[FC480000]        <1> 		mov edi, graphicstable
  3824                              <1> reloadgraphicsloop:
  3825 00002EAC 8B7702              <1> 		mov esi, [edi + 2]
  3826 00002EAF 668B5706            <1> 		mov dx, [edi + 6]
  3827 00002EB3 668B4F08            <1> 		mov cx, [edi + 8]
  3828 00002EB7 668B07              <1> 		mov ax, [edi]
  3829 00002EBA 668B5F0A            <1> 		mov bx, [edi + 10]
  3830 00002EBE 893D[A32E0000]      <1> 		mov [grpctblpos], edi
  3831 00002EC4 3B3D[63290000]      <1> 		cmp edi, [dragging]
  3832 00002ECA 741E                <1> 		je loadedgraphic
  3833 00002ECC 663D0100            <1> 		cmp ax, 1
  3834 00002ED0 0F8431000000        <1> 		je near icongraphic
  3835 00002ED6 663D0200            <1> 		cmp ax, 2
  3836 00002EDA 0F8437000000        <1> 		je near stringgraphic
  3837 00002EE0 663D0300            <1> 		cmp ax, 3
  3838 00002EE4 0F8416000000        <1> 		je near windowgraphic
  3839 00002EEA 8B3D[A32E0000]      <1> loadedgraphic:  mov edi, [grpctblpos]
  3840 00002EF0 81C710000000        <1> 		add edi, 16
  3841 00002EF6 81FF[FC4A0000]      <1> 		cmp edi, graphicstableend
  3842 00002EFC 7329                <1> 		jae donereloadgraphics
  3843 00002EFE EBAC                <1> 		jmp reloadgraphicsloop
  3844 00002F00 E890030000          <1> windowgraphic:	call showwindow2
  3845 00002F05 EBE3                <1> 		jmp loadedgraphic
  3846 00002F07 80E301              <1> icongraphic:	and bl, 1
  3847 00002F0A 881D[EB380000]      <1> 		mov [iconselected], bl
  3848 00002F10 E86A060000          <1> 		call showicon2
  3849 00002F15 EBD3                <1> 		jmp loadedgraphic
  3850 00002F17 80E301              <1> stringgraphic:  and bl, 1
  3851 00002F1A 881D[28280000]      <1> 		mov [mouseselecton], bl
  3852 00002F20 E8DB020000          <1> 		call showstring2
  3853 00002F25 EBC3                <1> 		jmp loadedgraphic
  3854                              <1> donereloadgraphics:
  3855 00002F27 8B3D[63290000]      <1> 		mov edi, [dragging]
  3856 00002F2D 81FF[FC480000]      <1> 		cmp edi, graphicstable
  3857 00002F33 723B                <1> 		jb notcorrectdrag
  3858 00002F35 668B07              <1> 		mov ax, [edi]
  3859 00002F38 8B7702              <1> 		mov esi, [edi + 2]
  3860 00002F3B 668B5706            <1> 		mov dx, [edi + 6]
  3861 00002F3F 668B4F08            <1> 		mov cx, [edi + 8]
  3862 00002F43 668B5F0A            <1> 		mov bx, [edi + 10]
  3863 00002F47 663D0100            <1> 		cmp ax, 1
  3864 00002F4B 750F                <1> 		jne noticondragging
  3865 00002F4D 80E301              <1> 		and bl, 1
  3866 00002F50 881D[EB380000]      <1> 		mov [iconselected], bl
  3867 00002F56 E824060000          <1> 		call showicon2
  3868 00002F5B C3                  <1> 		ret
  3869                              <1> 
  3870                              <1> 	noticondragging:
  3871 00002F5C 663D0200            <1> 		cmp ax, 2
  3872 00002F60 750E                <1> 		jne notcorrectdrag
  3873 00002F62 80E301              <1> 		and bl, 1
  3874 00002F65 881D[28280000]      <1> 		mov [mouseselecton], bl
  3875 00002F6B E890020000          <1> 		call showstring2
  3876                              <1> 	notcorrectdrag:
  3877 00002F70 C3                  <1> 		ret
  3878                              <1> 
  3879 00002F71 00<rept>            <1> grphbuf times 16 db 0
  3880                              <1> 	graphicsadd:
  3881 00002F81 BF[FC480000]        <1> 		mov edi, graphicstable
  3882                              <1> 	shwgrph1:
  3883 00002F86 397702              <1> 		cmp dword [edi + 2], esi
  3884 00002F89 7414                <1> 		je showgraphicsreplace2
  3885 00002F8B 81C710000000        <1> 		add edi, 16
  3886 00002F91 81FF[FC4A0000]      <1> 		cmp edi, graphicstableend
  3887 00002F97 0F8335020000        <1> 		jae near showgraphicsnew
  3888 00002F9D EBE7                <1> 		jmp shwgrph1
  3889                              <1> 	showgraphicsreplace2:
  3890 00002F9F 8935[732F0000]      <1> 		mov [grphbuf + 2], esi
  3891 00002FA5 668915[772F0000]    <1> 		mov [grphbuf + 6], dx
  3892 00002FAC 66890D[792F0000]    <1> 		mov [grphbuf + 8], cx
  3893 00002FB3 891D[7D2F0000]      <1> 		mov [grphbuf + 12], ebx
  3894 00002FB9 B700                <1> 		mov bh, 0
  3895 00002FBB 88E3                <1> 		mov bl, ah
  3896 00002FBD B400                <1> 		mov ah, 0
  3897 00002FBF 66A3[7B2F0000]      <1> 		mov [grphbuf + 10], ax	
  3898 00002FC5 66891D[712F0000]    <1> 		mov [grphbuf], bx
  3899 00002FCC 66A1[712F0000]      <1> 		mov ax, [grphbuf]
  3900 00002FD2 663D0100            <1> 		cmp ax, 1
  3901 00002FD6 0F8419000000        <1> 		je near replaceicon
  3902 00002FDC 663D0200            <1> 		cmp ax, 2
  3903 00002FE0 0F8493000000        <1> 		je near replacestring
  3904 00002FE6 663D0300            <1> 		cmp ax, 3
  3905 00002FEA 0F840F010000        <1> 		je near replacewindow
  3906 00002FF0 E9BA010000          <1> 		jmp showgraphicsreplace
  3907                              <1> 	replaceicon:
  3908 00002FF5 893D[67290000]      <1> 		mov [lastpos], edi
  3909 00002FFB 8935[6B290000]      <1> 		mov [lastpos + 4], esi
  3910 00003001 8B7702              <1> 		mov esi, [edi + 2]
  3911 00003004 668B5F0C            <1> 		mov bx, [edi + 12]
  3912 00003008 668B5706            <1> 		mov dx, [edi + 6]
  3913 0000300C 668B4F08            <1> 		mov cx, [edi + 8]
  3914 00003010 668B06              <1> 		mov ax, [esi]
  3915 00003013 66A3[6F290000]      <1> 		mov [colorbuf], ax
  3916 00003019 66A1[B9250000]      <1> 		mov ax, [background]
  3917 0000301F 668906              <1> 		mov [esi], ax
  3918 00003022 8B5F0C              <1> 		mov ebx, [edi + 12]
  3919 00003025 668B470A            <1> 		mov ax, [edi + 10]
  3920 00003029 2401                <1> 		and al, 1
  3921 0000302B A2[EB380000]        <1> 		mov [iconselected], al
  3922 00003030 668B470A            <1> 		mov ax, [edi + 10]
  3923 00003034 E846050000          <1> 		call showicon2
  3924 00003039 8B3D[67290000]      <1> 		mov edi, [lastpos]
  3925 0000303F 8B7702              <1> 		mov esi, [edi + 2]
  3926 00003042 66A1[6F290000]      <1> 		mov ax, [colorbuf]
  3927 00003048 668906              <1> 		mov [esi], ax
  3928 0000304B 8B35[6B290000]      <1> 		mov esi, [lastpos + 4]
  3929 00003051 668B15[772F0000]    <1> 		mov dx, [grphbuf + 6]
  3930 00003058 668B0D[792F0000]    <1> 		mov cx, [grphbuf + 8]
  3931 0000305F 668B1D[712F0000]    <1> 		mov bx, [grphbuf]
  3932 00003066 66A1[7B2F0000]      <1> 		mov ax, [grphbuf + 10]
  3933 0000306C 88DC                <1> 		mov ah, bl
  3934 0000306E 8B1D[7D2F0000]      <1> 		mov ebx, [grphbuf + 12]
  3935 00003074 E936010000          <1> 		jmp showgraphicsreplace
  3936                              <1> 	replacestring:
  3937 00003079 893D[67290000]      <1> 		mov [lastpos], edi
  3938 0000307F 8935[6B290000]      <1> 		mov [lastpos + 4], esi
  3939 00003085 8B5F0C              <1> 		mov ebx, [edi + 12]
  3940 00003088 8B7702              <1> 		mov esi, [edi + 2]
  3941 0000308B 668B5706            <1> 		mov dx, [edi + 6]
  3942 0000308F 668B4F08            <1> 		mov cx, [edi + 8]
  3943 00003093 66A1[30320000]      <1> 		mov ax, [colorfont2]
  3944 00003099 66A3[6F290000]      <1> 		mov [colorbuf], ax
  3945 0000309F 66A1[B9250000]      <1> 		mov ax, [background]
  3946 000030A5 66A3[30320000]      <1> 		mov [colorfont2], ax		
  3947 000030AB 8B5F0C              <1> 		mov ebx, [edi + 12]
  3948 000030AE 668B470A            <1> 		mov ax, [edi + 10]
  3949 000030B2 2401                <1> 		and al, 1
  3950 000030B4 A2[28280000]        <1> 		mov [mouseselecton], al
  3951 000030B9 668B470A            <1> 		mov ax, [edi + 10]
  3952 000030BD E83E010000          <1> 		call showstring2
  3953 000030C2 66A1[6F290000]      <1> 		mov ax, [colorbuf]
  3954 000030C8 66A3[30320000]      <1> 		mov [colorfont2], ax
  3955 000030CE 8B3D[67290000]      <1> 		mov edi, [lastpos]
  3956 000030D4 8B7702              <1> 		mov esi, [edi + 2]
  3957 000030D7 668B15[772F0000]    <1> 		mov dx, [grphbuf + 6]
  3958 000030DE 668B0D[792F0000]    <1> 		mov cx, [grphbuf + 8]
  3959 000030E5 668B1D[712F0000]    <1> 		mov bx, [grphbuf]
  3960 000030EC 66A1[7B2F0000]      <1> 		mov ax, [grphbuf + 10]
  3961 000030F2 88DC                <1> 		mov ah, bl
  3962 000030F4 8B1D[7D2F0000]      <1> 		mov ebx, [grphbuf + 12]
  3963 000030FA E9B0000000          <1> 		jmp showgraphicsreplace
  3964                              <1> 	replacewindow:
  3965 000030FF 893D[67290000]      <1> 		mov [lastpos], edi
  3966 00003105 8935[6B290000]      <1> 		mov [lastpos + 4], esi
  3967 0000310B 8B7702              <1> 		mov esi, [edi + 2]
  3968 0000310E 8B3D[3E320000]      <1> 		mov edi, [windowbufloc]
  3969 00003114 BA00000000          <1> 		mov edx, 0
  3970 00003119 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  3971 00003120 C1E204              <1> 		shl edx, 4
  3972 00003123 29D7                <1> 		sub edi, edx
  3973 00003125 BA00000000          <1> 		mov edx, 0
  3974 0000312A 668B16              <1> 		mov dx, [esi]
  3975 0000312D 660316              <1> 		add dx, [esi]
  3976 00003130 668B4E02            <1> 		mov cx, [esi + 2]
  3977 00003134 6681C11000          <1> 		add cx, 16
  3978 00003139 66A1[B9250000]      <1> 		mov ax, [background]
  3979                              <1> 	clearwindow:
  3980 0000313F 668907              <1> 		mov [edi], ax
  3981 00003142 81C702000000        <1> 		add edi, 2
  3982 00003148 81EA02000000        <1> 		sub edx, 2
  3983 0000314E 81FA00000000        <1> 		cmp edx, 0
  3984 00003154 75E9                <1> 		jne clearwindow
  3985 00003156 6649                <1> 		dec cx
  3986 00003158 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  3987 0000315F 662B16              <1> 		sub dx, [esi]
  3988 00003162 662B16              <1> 		sub dx, [esi]
  3989 00003165 01D7                <1> 		add edi, edx
  3990 00003167 668B16              <1> 		mov dx, [esi]
  3991 0000316A 660316              <1> 		add dx, [esi]
  3992 0000316D 6681F90000          <1> 		cmp cx, 0
  3993 00003172 75CB                <1> 		jne clearwindow
  3994 00003174 C605[D9080000]00    <1> 		mov byte [termcopyon], 0
  3995 0000317B 8B3D[67290000]      <1> 		mov edi, [lastpos]
  3996 00003181 8B35[732F0000]      <1> 		mov esi, [grphbuf + 2]
  3997 00003187 668B15[772F0000]    <1> 		mov dx, [grphbuf + 6]
  3998 0000318E 668B0D[792F0000]    <1> 		mov cx, [grphbuf + 8]
  3999 00003195 668B1D[712F0000]    <1> 		mov bx, [grphbuf]
  4000 0000319C 66A1[7B2F0000]      <1> 		mov ax, [grphbuf + 10]
  4001 000031A2 88DC                <1> 		mov ah, bl
  4002 000031A4 8B1D[7D2F0000]      <1> 		mov ebx, [grphbuf + 12]
  4003 000031AA E900000000          <1> 		jmp showgraphicsreplace
  4004                              <1> 	showgraphicsreplace:
  4005 000031AF 897702              <1> 		mov [edi + 2], esi
  4006 000031B2 66895706            <1> 		mov [edi + 6], dx
  4007 000031B6 66894F08            <1> 		mov [edi + 8], cx
  4008 000031BA 895F0C              <1> 		mov [edi + 12], ebx
  4009 000031BD B700                <1> 		mov bh, 0
  4010 000031BF 88E3                <1> 		mov bl, ah
  4011 000031C1 B400                <1> 		mov ah, 0
  4012 000031C3 6689470A            <1> 		mov [edi + 10], ax
  4013 000031C7 66891F              <1> 		mov [edi], bx
  4014 000031CA 8B5F0C              <1> 		mov ebx, [edi + 12]
  4015 000031CD 668B470A            <1> 		mov ax, [edi + 10]
  4016 000031D1 C3                  <1> 		ret
  4017                              <1> 	showgraphicsnew:
  4018 000031D2 BF[FC480000]        <1> 		mov edi, graphicstable
  4019                              <1> 	shwgrph2:
  4020 000031D7 66813F0000          <1> 		cmp word [edi], 0
  4021 000031DC 74D1                <1> 		je showgraphicsreplace
  4022 000031DE 81C710000000        <1> 		add edi, 16
  4023 000031E4 81FF[FC4A0000]      <1> 		cmp edi, graphicstableend
  4024 000031EA 72EB                <1> 		jb shwgrph2
  4025                              <1> 	showgraphicsdone:
  4026 000031EC C3                  <1> 		ret
  4027                              <1> 
  4028                              <1> 	showstring:
  4029 000031ED A2[28280000]        <1> 		mov [mouseselecton], al
  4030 000031F2 8025[28280000]01    <1> 		and byte [mouseselecton], 1
  4031 000031F9 B402                <1> 		mov ah, 2
  4032 000031FB E881FDFFFF          <1> 		call graphicsadd
  4033                              <1> 	showstring2:
  4034 00003200 B400                <1> 		mov ah, 0
  4035 00003202 8A06                <1> 		mov al, [esi]
  4036 00003204 3C00                <1> 		cmp al, 0
  4037 00003206 7420                <1> 		je doneshowstring
  4038 00003208 46                  <1> 		inc esi
  4039 00003209 8935[94380000]      <1> 		mov [showstringesi], esi
  4040 0000320F 668B1D[30320000]    <1> 		mov bx, [colorfont2]
  4041 00003216 E83E040000          <1> 		call showfontvesa
  4042 0000321B 6681C20800          <1> 		add dx, 8
  4043 00003220 8B35[94380000]      <1> 		mov esi, [showstringesi]
  4044 00003226 EBD8                <1> 		jmp showstring2
  4045                              <1> 	doneshowstring:
  4046 00003228 C605[28280000]00    <1> 		mov byte [mouseselecton], 0
  4047 0000322F C3                  <1> 		ret
  4048                              <1> 
  4049 00003230 FFFF                <1> colorfont2 dw 0xFFFF
  4050 00003232 0000                <1> winvcopystx dw 0
  4051 00003234 0000                <1> winvcopysty dw 0
  4052 00003236 0000                <1> winvcopydx dw 0
  4053 00003238 0000                <1> winvcopycx dw 0
  4054 0000323A FFFF0000            <1> windowcolor dw 0xFFFF,0x0
  4055 0000323E 00000000            <1> windowbufloc: dw 0,0
  4056                              <1> 
  4057                              <1> 	showwindow:	;;windowstuff in si, position in (dx, cx), nothing in ax, code in bx
  4058 00003242 C605[D8080000]01    <1> 		mov byte [termguion], 1
  4059 00003249 6681C11000          <1> 		add cx, 16
  4060 0000324E 668915[32320000]    <1> 		mov [winvcopystx], dx
  4061 00003255 66890D[34320000]    <1> 		mov [winvcopysty], cx
  4062 0000325C 668B16              <1> 		mov dx, [esi]
  4063 0000325F 668B4E02            <1> 		mov cx, [esi + 2]
  4064 00003263 6601D2              <1> 		add dx, dx
  4065 00003266 668915[36320000]    <1> 		mov [winvcopydx], dx
  4066 0000326D 66890D[38320000]    <1> 		mov [winvcopycx], cx
  4067 00003274 668B0D[34320000]    <1> 		mov cx, [winvcopysty]
  4068 0000327B 6681E91000          <1> 		sub cx, 16
  4069 00003280 668B15[32320000]    <1> 		mov dx, [winvcopystx]
  4070 00003287 C605[D9080000]00    <1> 		mov byte [termcopyon], 0
  4071 0000328E B403                <1> 		mov ah, 3
  4072 00003290 E8ECFCFFFF          <1> 		call graphicsadd
  4073                              <1> 	showwindow2:
  4074 00003295 6681C11000          <1> 		add cx, 16
  4075 0000329A 668915[32320000]    <1> 		mov [winvcopystx], dx
  4076 000032A1 66890D[34320000]    <1> 		mov [winvcopysty], cx
  4077 000032A8 668B16              <1> 		mov dx, [esi]
  4078 000032AB 668B4E02            <1> 		mov cx, [esi + 2]
  4079 000032AF 6601D2              <1> 		add dx, dx
  4080 000032B2 668915[36320000]    <1> 		mov [winvcopydx], dx
  4081 000032B9 66890D[38320000]    <1> 		mov [winvcopycx], cx
  4082 000032C0 8B3D[3E320000]      <1> 		mov edi, [windowbufloc]
  4083 000032C6 BA00000000          <1> 		mov edx, 0
  4084 000032CB 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4085 000032D2 C1E204              <1> 		shl edx, 4
  4086 000032D5 29D7                <1> 		sub edi, edx
  4087 000032D7 803D[D9080000]00    <1> 		cmp byte [termcopyon], 0
  4088 000032DE 753E                <1> 		jne nocleartitlebarpos
  4089 000032E0 8B3D[316B0000]      <1> 		mov edi, [physbaseptr]
  4090 000032E6 BA00000000          <1> 		mov edx, 0
  4091 000032EB 668B15[32320000]    <1> 		mov dx, [winvcopystx]
  4092 000032F2 01D7                <1> 		add edi, edx
  4093 000032F4 668B0D[34320000]    <1> 		mov cx, [winvcopysty]
  4094 000032FB 6681E91000          <1> 		sub cx, 16
  4095 00003300 6681F90000          <1> 		cmp cx, 0
  4096 00003305 7417                <1> 		je nocleartitlebarpos
  4097                              <1> 	cleartitlebarpos:
  4098 00003307 BA00000000          <1> 		mov edx, 0
  4099 0000330C 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4100 00003313 01D7                <1> 		add edi, edx
  4101 00003315 6649                <1> 		dec cx
  4102 00003317 6681F90000          <1> 		cmp cx, 0
  4103 0000331C 75E9                <1> 		jne cleartitlebarpos
  4104                              <1> 	nocleartitlebarpos:
  4105 0000331E 66B91000            <1> 		mov cx, 16
  4106 00003322 668B15[36320000]    <1> 		mov dx, [winvcopydx]
  4107 00003329 6681F90000          <1> 		cmp cx, 0
  4108 0000332E 0F844B000000        <1> 		je near canceltitlebarput
  4109 00003334 6681FA0000          <1> 		cmp dx, 0
  4110 00003339 0F8440000000        <1> 		je near canceltitlebarput
  4111                              <1> 	titlebarput:
  4112 0000333F 66A1[3A320000]      <1> 		mov ax, [windowcolor]
  4113 00003345 668907              <1> 		mov [edi], ax
  4114 00003348 6681EA0200          <1> 		sub dx, 2
  4115 0000334D 81C702000000        <1> 		add edi, 2
  4116 00003353 6681FA0000          <1> 		cmp dx, 0
  4117 00003358 75E5                <1> 		jne titlebarput
  4118 0000335A BA00000000          <1> 		mov edx, 0
  4119 0000335F 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4120 00003366 6649                <1> 		dec cx
  4121 00003368 662B15[36320000]    <1> 		sub dx, [winvcopydx]
  4122 0000336F 01D7                <1> 		add edi, edx
  4123 00003371 668B15[36320000]    <1> 		mov dx, [winvcopydx]
  4124 00003378 6681F90000          <1> 		cmp cx, 0
  4125 0000337D 75C0                <1> 		jne titlebarput
  4126                              <1> 	canceltitlebarput:
  4127 0000337F 893D[3E320000]      <1> 		mov [windowbufloc], edi
  4128 00003385 803D[D9080000]02    <1> 		cmp byte [termcopyon], 2
  4129 0000338C 0F8463000000        <1> 		je near winvcpst
  4130 00003392 66B80000            <1> 		mov ax, 0
  4131 00003396 81C604000000        <1> 		add esi, 4
  4132 0000339C 668B15[32320000]    <1> 		mov dx, [winvcopystx]
  4133 000033A3 668B0D[34320000]    <1> 		mov cx, [winvcopysty]
  4134 000033AA 6681E91000          <1> 		sub cx, 16
  4135 000033AF 66BB0000            <1> 		mov bx, 0
  4136 000033B3 C605[28280000]01    <1> 		mov byte [mouseselecton], 1
  4137 000033BA E841FEFFFF          <1> 		call showstring2
  4138 000033BF B058                <1> 		mov al, "X"
  4139 000033C1 B400                <1> 		mov ah, 0
  4140 000033C3 668B1D[30320000]    <1> 		mov bx, [colorfont2]
  4141 000033CA 668B15[32320000]    <1> 		mov dx, [winvcopystx]
  4142 000033D1 668B0D[34320000]    <1> 		mov cx, [winvcopysty]
  4143 000033D8 6681E91000          <1> 		sub cx, 16
  4144 000033DD 6681EA1400          <1> 		sub dx, 20
  4145 000033E2 660315[36320000]    <1> 		add dx, [winvcopydx]
  4146 000033E9 C605[28280000]01    <1> 		mov byte [mouseselecton], 1
  4147 000033F0 E864020000          <1> 		call showfontvesa
  4148                              <1> 	winvcpst:
  4149 000033F5 8B3D[3E320000]      <1> 		mov edi, [windowbufloc]
  4150 000033FB E957000000          <1> 		jmp windowvideocopyset
  4151                              <1> 
  4152                              <1> 	windowvideocopy:
  4153 00003400 8B3D[3E320000]      <1> 		mov edi, [windowbufloc]
  4154 00003406 3B3D[316B0000]      <1> 		cmp edi, [physbaseptr]
  4155 0000340C 0F8345000000        <1> 		jae near windowvideocopyset
  4156 00003412 B900000000          <1> 		mov ecx, 0
  4157 00003417 BA00000000          <1> 		mov edx, 0
  4158 0000341C 668B15[32320000]    <1> 		mov dx, [winvcopystx]
  4159 00003423 668B0D[34320000]    <1> 		mov cx, [winvcopysty]
  4160 0000342A 8B3D[316B0000]      <1> 		mov edi, [physbaseptr]
  4161 00003430 01D7                <1> 		add edi, edx
  4162 00003432 81F900000000        <1> 		cmp ecx, 0
  4163 00003438 741D                <1> 		je windowvideocopyset
  4164                              <1> 	yrescopylp:
  4165 0000343A BA00000000          <1> 		mov edx, 0
  4166 0000343F 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4167 00003446 01D7                <1> 		add edi, edx
  4168 00003448 6649                <1> 		dec cx
  4169 0000344A 6681F90000          <1> 		cmp cx, 0
  4170 0000344F 75E9                <1> 		jne yrescopylp
  4171 00003451 893D[3E320000]      <1> 		mov [windowbufloc], edi
  4172                              <1> 	windowvideocopyset:
  4173 00003457 66B90000            <1> 		mov cx, 0
  4174 0000345B 66890D[64350000]    <1> 		mov [charposline], cx
  4175 00003462 BE[81550000]        <1> 		mov esi, videobuf2
  4176 00003467 8935[66350000]      <1> 		mov [charposvbuf], esi
  4177 0000346D 8A1E                <1> 		mov bl, [esi]
  4178 0000346F B700                <1> 		mov bh, 0
  4179 00003471 66C1E304            <1> 		shl bx, 4
  4180 00003475 678AB7[5C40]        <1> 		mov dh, [fonts + bx]
  4181 0000347A D0CE                <1> 		ror dh, 1
  4182 0000347C 89FE                <1> 		mov esi, edi
  4183                              <1> 	copywindow:
  4184 0000347E B201                <1> 		mov dl, 1
  4185 00003480 D0C6                <1> 		rol dh, 1
  4186 00003482 20F2                <1> 		and dl, dh
  4187 00003484 66A1[3C320000]      <1> 		mov ax, [windowcolor + 2]
  4188 0000348A 668907              <1> 		mov [edi], ax
  4189 0000348D 80FA00              <1> 		cmp dl, 0
  4190 00003490 7409                <1> 		je nowritewin
  4191 00003492 66A1[3A320000]      <1> 		mov ax, [windowcolor]
  4192 00003498 668907              <1> 		mov [edi], ax
  4193                              <1> 	nowritewin:
  4194 0000349B 81C702000000        <1> 		add edi, 2
  4195 000034A1 FEC1                <1> 		inc cl
  4196 000034A3 80F908              <1> 		cmp cl, 8
  4197 000034A6 75D6                <1> 		jne copywindow
  4198 000034A8 6643                <1> 		inc bx
  4199 000034AA B100                <1> 		mov cl, 0
  4200 000034AC BA00000000          <1> 		mov edx, 0
  4201 000034B1 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4202 000034B8 01D6                <1> 		add esi, edx
  4203 000034BA 89F7                <1> 		mov edi, esi
  4204 000034BC 678AB7[5C40]        <1> 		mov dh, [fonts + bx]
  4205 000034C1 D0CE                <1> 		ror dh, 1
  4206 000034C3 FEC5                <1> 		inc ch
  4207 000034C5 80FD10              <1> 		cmp ch, 16
  4208 000034C8 75B4                <1> 		jne copywindow
  4209 000034CA 66B90000            <1> 		mov cx, 0
  4210 000034CE 8B3D[66350000]      <1> 		mov edi, [charposvbuf]
  4211 000034D4 81C702000000        <1> 		add edi, 2
  4212 000034DA 81FF[41680000]      <1> 		cmp edi, videobufend
  4213 000034E0 7370                <1> 		jae donewincopynow
  4214 000034E2 8A1F                <1> 		mov bl, [edi]
  4215 000034E4 B700                <1> 		mov bh, 0
  4216 000034E6 66C1E304            <1> 		shl bx, 4
  4217 000034EA 893D[66350000]      <1> 		mov [charposvbuf], edi
  4218 000034F0 BA00000000          <1> 		mov edx, 0
  4219 000034F5 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4220 000034FC C1E204              <1> 		shl edx, 4
  4221 000034FF 29D6                <1> 		sub esi, edx
  4222 00003501 81C610000000        <1> 		add esi, 16
  4223 00003507 89F7                <1> 		mov edi, esi
  4224 00003509 668B0D[64350000]    <1> 		mov cx, [charposline]
  4225 00003510 6641                <1> 		inc cx
  4226 00003512 6681F95000          <1> 		cmp cx, 80
  4227 00003517 7317                <1> 		jae fixwindowcopy
  4228 00003519 66890D[64350000]    <1> 		mov [charposline], cx
  4229 00003520 66B90000            <1> 		mov cx, 0
  4230 00003524 678AB7[5C40]        <1> 		mov dh, [fonts + bx]
  4231 00003529 D0CE                <1> 		ror dh, 1
  4232 0000352B E94EFFFFFF          <1> 		jmp copywindow
  4233                              <1> fixwindowcopy:
  4234 00003530 66B90000            <1> 		mov cx, 0
  4235 00003534 66890D[64350000]    <1> 		mov [charposline], cx
  4236 0000353B 662B15[36320000]    <1> 		sub dx, [winvcopydx]
  4237 00003542 01D6                <1> 		add esi, edx
  4238 00003544 89F7                <1> 		mov edi, esi
  4239 00003546 678AB7[5C40]        <1> 		mov dh, [fonts + bx]
  4240 0000354B D0CE                <1> 		ror dh, 1
  4241 0000354D E92CFFFFFF          <1> 		jmp copywindow
  4242                              <1> donewincopynow:
  4243 00003552 803D[D9080000]01    <1> 		cmp byte [termcopyon], 1
  4244 00003559 7501                <1> 		jne forgetresetstuff
  4245 0000355B 61                  <1> 		popa
  4246                              <1> forgetresetstuff:
  4247 0000355C C605[D9080000]00    <1> 		mov byte [termcopyon], 0
  4248 00003563 C3                  <1> 		ret
  4249                              <1> 
  4250 00003564 0000                <1> charposline dw 0
  4251 00003566 00000000            <1> charposvbuf dw 0,0
  4252 0000356A 0000                <1> iconcolor dw 0
  4253                              <1> 	showicon:	;;icon in si, position in (dx,cx), selected in ax, code in bx
  4254 0000356C A2[EB380000]        <1> 		mov [iconselected], al
  4255 00003571 8025[EB380000]01    <1> 		and byte [iconselected], 1
  4256 00003578 B401                <1> 		mov ah, 1
  4257 0000357A E802FAFFFF          <1> 		call graphicsadd
  4258                              <1> 	showicon2:
  4259 0000357F 8B3D[316B0000]      <1> 		mov edi, [physbaseptr]
  4260 00003585 6601D2              <1> 		add dx, dx
  4261 00003588 663B15[49360000]    <1> 		cmp dx, [resolutionx2]
  4262 0000358F 720C                <1> 		jb screenxgood
  4263 00003591 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4264 00003598 6681EA4000          <1> 		sub dx, 64
  4265                              <1> 	screenxgood:
  4266 0000359D 6681F90000          <1> 		cmp cx, 0
  4267 000035A2 7425                <1> 		je noscreenygoodchk
  4268 000035A4 663B0D[45360000]    <1> 		cmp cx, [resolutiony]
  4269 000035AB 720C                <1> 		jb screenygood
  4270 000035AD 668B0D[45360000]    <1> 		mov cx, [resolutiony]
  4271 000035B4 6681E92000          <1> 		sub cx, 32
  4272                              <1> 	screenygood:
  4273 000035B9 BB00000000          <1> 		mov ebx, 0
  4274 000035BE 668B1D[49360000]    <1> 		mov bx, [resolutionx2]
  4275 000035C5 01DF                <1> 		add edi, ebx
  4276 000035C7 E2F0                <1> 		loop screenygood
  4277                              <1> 	noscreenygoodchk:
  4278 000035C9 BB00000000          <1> 		mov ebx, 0
  4279 000035CE 6689D3              <1> 		mov bx, dx
  4280 000035D1 01DF                <1> 		add edi, ebx
  4281 000035D3 66B90000            <1> 		mov cx, 0
  4282 000035D7 668B06              <1> 		mov ax, [esi]
  4283 000035DA 81C602000000        <1> 		add esi, 2
  4284 000035E0 66A3[6A350000]      <1> 		mov [iconcolor], ax
  4285                              <1> 	writeicon:
  4286 000035E6 8B06                <1> 		mov eax, [esi]
  4287 000035E8 D1C0                <1> 		rol eax, 1
  4288 000035EA B100                <1> 		mov cl, 0
  4289                              <1> 	writeiconline:
  4290 000035EC B201                <1> 		mov dl, 1
  4291 000035EE 20C2                <1> 		and dl, al
  4292 000035F0 3215[EB380000]      <1> 		xor dl, [iconselected]
  4293 000035F6 668B1D[B9250000]    <1> 		mov bx, [background]
  4294 000035FD 66891F              <1> 		mov [edi], bx
  4295 00003600 80FA00              <1> 		cmp dl, 0
  4296 00003603 740A                <1> 		je noiconline
  4297 00003605 668B15[6A350000]    <1> 		mov dx, [iconcolor]
  4298 0000360C 668917              <1> 		mov [edi], dx
  4299                              <1> 	noiconline:
  4300 0000360F 81C702000000        <1> 		add edi, 2
  4301 00003615 D1C0                <1> 		rol eax, 1
  4302 00003617 FEC1                <1> 		inc cl
  4303 00003619 80F920              <1> 		cmp cl, 32
  4304 0000361C 72CE                <1> 		jb writeiconline
  4305 0000361E 81C604000000        <1> 		add esi, 4
  4306 00003624 FEC5                <1> 		inc ch
  4307 00003626 BA00000000          <1> 		mov edx, 0
  4308 0000362B 668B15[49360000]    <1> 		mov dx, [resolutionx2]
  4309 00003632 01D7                <1> 		add edi, edx
  4310 00003634 81EF40000000        <1> 		sub edi, 64
  4311 0000363A 80FD20              <1> 		cmp ch, 32
  4312 0000363D 72A7                <1> 		jb writeicon
  4313 0000363F B800000000          <1> 		mov eax, 0
  4314 00003644 C3                  <1> 		ret
  4315                              <1> 
  4316 00003645 0000                <1> resolutiony dw 0
  4317 00003647 0000                <1> resolutionx dw 0
  4318 00003649 0000                <1> resolutionx2 dw 0
  4319 0000364B 02                  <1> resolutionbytes db 2
  4320 0000364C 0000                <1> posxvesa dw 0
  4321 0000364E 0000                <1> posyvesa dw 0
  4322 00003650 FFFF                <1> colorfont dw 0xFFFF
  4323                              <1> savefontvesa:		;;same rules as showfontvesa
  4324 00003652 C605[27280000]01    <1> 	mov byte [savefonton], 1
  4325                              <1> showfontvesa:		;;position in (dx,cx), color in bx, char in al
  4326 00003659 25FF000000          <1> 	and eax, 0xFF
  4327 0000365E 66890D[4E360000]    <1> 	mov [posyvesa], cx
  4328 00003665 668915[4C360000]    <1> 	mov [posxvesa], dx
  4329 0000366C 8B3D[316B0000]      <1> 	mov edi, [physbaseptr]
  4330 00003672 66891D[50360000]    <1> 	mov [colorfont], bx
  4331 00003679 BB00000000          <1> 	mov ebx, 0
  4332 0000367E 6689D3              <1> 	mov bx, dx
  4333 00003681 89DA                <1> 	mov edx, ebx
  4334 00003683 BB00000000          <1> 	mov ebx, 0
  4335 00003688 6681F90000          <1> 	cmp cx, 0
  4336 0000368D 7415                <1> 	je vesaposloopdn
  4337 0000368F 668B1D[49360000]    <1> 	mov bx, [resolutionx2]
  4338                              <1> vesaposloop:
  4339 00003696 01DA                <1> 	add edx, ebx
  4340 00003698 6681E90100          <1> 	sub cx, 1
  4341 0000369D 6681F90000          <1> 	cmp cx, 0
  4342 000036A2 75F2                <1> 	jne vesaposloop
  4343                              <1> vesaposloopdn:
  4344 000036A4 01D7                <1> 	add edi, edx
  4345 000036A6 BE[5C400000]        <1> 	mov esi, fonts
  4346                              <1> findfontvesa:
  4347 000036AB B400                <1> 	mov ah, 0
  4348 000036AD C1E004              <1> 	shl eax, 4
  4349 000036B0 01C6                <1> 	add esi, eax
  4350 000036B2 C1E804              <1> 	shr eax, 4
  4351 000036B5 81FE[7C480000]      <1> 	cmp esi, fontend
  4352 000036BB 0F83BF000000        <1> 	jae near donefontvesa
  4353 000036C1 4E                  <1> 	dec esi
  4354                              <1> foundfontvesa:
  4355 000036C2 46                  <1> 	inc esi
  4356 000036C3 803D[27280000]01    <1> 	cmp byte [savefonton], 1
  4357 000036CA 0F84E1000000        <1> 	je near vesafontsaver
  4358 000036D0 B100                <1> 	mov cl, 0
  4359 000036D2 8A06                <1> 	mov al, [esi]
  4360 000036D4 668B15[49360000]    <1> 	mov dx, [resolutionx2]
  4361 000036DB 662B15[4C360000]    <1> 	sub dx, [posxvesa]
  4362 000036E2 6681FA1000          <1> 	cmp dx, 16
  4363 000036E7 7708                <1> 	ja paintfontvesa
  4364 000036E9 D0EA                <1> 	shr dl, 1
  4365 000036EB 8815[B0370000]      <1> 	mov [charwidth], dl
  4366                              <1> paintfontvesa:
  4367 000036F1 B201                <1> 	mov dl, 1
  4368 000036F3 20C2                <1> 	and dl, al
  4369 000036F5 803D[26280000]01    <1> 	cmp byte [showcursorfonton], 1
  4370 000036FC 0F8435000000        <1> 	je near nodelpaintedfont
  4371 00003702 803D[26280000]02    <1> 	cmp byte [showcursorfonton], 2
  4372 00003709 0F8518000000        <1> 	jne near noswitchcursorfonton
  4373 0000370F 80FA00              <1> 	cmp dl, 0
  4374 00003712 0F842E000000        <1> 	je near nopixelset
  4375 00003718 668B1D[50360000]    <1> 	mov bx, [colorfont]
  4376 0000371F 66891F              <1> 	mov [edi], bx
  4377 00003722 E91F000000          <1> 	jmp nopixelset
  4378                              <1> noswitchcursorfonton:
  4379 00003727 3215[28280000]      <1> 	xor dl, [mouseselecton]
  4380 0000372D 668B1D[B9250000]    <1> 	mov bx, [background]
  4381 00003734 66891F              <1> 	mov [edi], bx
  4382                              <1> nodelpaintedfont:
  4383 00003737 80FA00              <1> 	cmp dl, 0
  4384 0000373A 740A                <1> 	je nopixelset
  4385 0000373C 668B15[50360000]    <1> 	mov dx, [colorfont]
  4386 00003743 668917              <1> 	mov [edi], dx
  4387                              <1> nopixelset:
  4388 00003746 81C702000000        <1> 	add edi, 2
  4389 0000374C D0C0                <1> 	rol al, 1
  4390 0000374E FEC1                <1> 	inc cl
  4391 00003750 3A0D[B0370000]      <1> 	cmp cl, [charwidth]
  4392 00003756 7299                <1> 	jb paintfontvesa
  4393 00003758 FEC5                <1> 	inc ch
  4394 0000375A BA00000000          <1> 	mov edx, 0
  4395 0000375F 668B15[49360000]    <1> 	mov dx, [resolutionx2]
  4396 00003766 01D7                <1> 	add edi, edx
  4397 00003768 BA00000000          <1> 	mov edx, 0
  4398 0000376D 8A15[B0370000]      <1> 	mov dl, [charwidth]
  4399 00003773 00D2                <1> 	add dl, dl
  4400 00003775 29D7                <1> 	sub edi, edx
  4401 00003777 80FD10              <1> 	cmp ch, 16
  4402 0000377A 0F8242FFFFFF        <1> 	jb foundfontvesa
  4403                              <1> donefontvesa:
  4404 00003780 B208                <1> 	mov dl, 8
  4405 00003782 8815[B0370000]      <1> 	mov [charwidth], dl
  4406 00003788 668B15[4C360000]    <1> 	mov dx, [posxvesa]
  4407 0000378F 8A1D[B0370000]      <1> 	mov bl, [charwidth]
  4408 00003795 B700                <1> 	mov bh, 0
  4409 00003797 6601DA              <1> 	add dx, bx
  4410 0000379A 668B1D[50360000]    <1> 	mov bx, [colorfont]
  4411 000037A1 668B0D[4E360000]    <1> 	mov cx, [posyvesa]
  4412 000037A8 C605[27280000]00    <1> 	mov byte [savefonton], 0
  4413 000037AF C3                  <1> 	ret
  4414 000037B0 08                  <1> charwidth db 8
  4415                              <1> vesafontsaver:
  4416 000037B1 B000                <1> 	mov al, 0
  4417 000037B3 B100                <1> 	mov cl, 0
  4418                              <1> vesafontsaver2:
  4419 000037B5 668B17              <1> 	mov dx, [edi]
  4420 000037B8 663B15[50360000]    <1> 	cmp dx, [colorfont]
  4421 000037BF 742F                <1> 	je colorfontmatch
  4422                              <1> donecolormatch:
  4423 000037C1 81C702000000        <1> 	add edi, 2
  4424 000037C7 D0C0                <1> 	rol al, 1
  4425 000037C9 FEC1                <1> 	inc cl
  4426 000037CB 80F908              <1> 	cmp cl, 8
  4427 000037CE 72E5                <1> 	jb vesafontsaver2
  4428 000037D0 8806                <1> 	mov [esi], al
  4429 000037D2 46                  <1> 	inc esi
  4430 000037D3 FEC5                <1> 	inc ch
  4431 000037D5 BA00000000          <1> 	mov edx, 0
  4432 000037DA 668B15[49360000]    <1> 	mov dx, [resolutionx2]
  4433 000037E1 01D7                <1> 	add edi, edx
  4434 000037E3 81EF10000000        <1> 	sub edi, 16
  4435 000037E9 80FD10              <1> 	cmp ch, 16
  4436 000037EC 72C3                <1> 	jb vesafontsaver
  4437 000037EE EB90                <1> 	jmp donefontvesa
  4438                              <1> colorfontmatch:
  4439 000037F0 0401                <1> 	add al, 1
  4440 000037F2 EBCD                <1> 	jmp donecolormatch
  4441                              <1> 	
  4442                              <1> showbmp:
  4443 000037F4 668B06              <1> 	mov ax, [esi]
  4444 000037F7 663D424D            <1> 	cmp ax, "BM"
  4445 000037FB 0F858E000000        <1> 	jne near endedbmp
  4446 00003801 8B3D[316B0000]      <1> 	mov edi, [physbaseptr]
  4447 00003807 6689D0              <1> 	mov ax, dx
  4448 0000380A 6689CB              <1> 	mov bx, cx
  4449 0000380D B900000000          <1> 	mov ecx, 0
  4450 00003812 BA00000000          <1> 	mov edx, 0
  4451 00003817 6689D9              <1> 	mov cx, bx
  4452 0000381A 6689C2              <1> 	mov dx, ax
  4453 0000381D 01D7                <1> 	add edi, edx
  4454 0000381F 01D7                <1> 	add edi, edx
  4455 00003821 BA00000000          <1> 	mov edx, 0
  4456 00003826 668B15[49360000]    <1> 	mov dx, [resolutionx2]
  4457 0000382D 41                  <1> 	inc ecx
  4458 0000382E 034E16              <1> 	add ecx, [esi + 22]
  4459                              <1> bmplocloop:
  4460 00003831 01D7                <1> 	add edi, edx
  4461 00003833 E2FC                <1> 	loop bmplocloop
  4462 00003835 29D7                <1> 	sub edi, edx
  4463 00003837 8B5612              <1> 	mov edx, [esi + 18]
  4464 0000383A 8B4E16              <1> 	mov ecx, [esi + 22]
  4465 0000383D 8B460A              <1> 	mov eax, [esi + 10]
  4466 00003840 8B5E02              <1> 	mov ebx, [esi + 2]
  4467 00003843 01F3                <1> 	add ebx, esi
  4468 00003845 891D[90380000]      <1> 	mov [bmpend], ebx
  4469 0000384B 89D3                <1> 	mov ebx, edx
  4470 0000384D 01C6                <1> 	add esi, eax
  4471                              <1> ldxbmp:
  4472 0000384F 668B06              <1> 	mov ax, [esi]
  4473 00003852 668907              <1> 	mov [edi], ax
  4474 00003855 81C702000000        <1> 	add edi, 2
  4475 0000385B 81C602000000        <1> 	add esi, 2
  4476 00003861 3B35[90380000]      <1> 	cmp esi, [bmpend]
  4477 00003867 7726                <1> 	ja endedbmp
  4478 00003869 4A                  <1> 	dec edx
  4479 0000386A 81FA00000000        <1> 	cmp edx, 0
  4480 00003870 77DD                <1> 	ja ldxbmp
  4481 00003872 BA00000000          <1> 	mov edx, 0
  4482 00003877 668B15[49360000]    <1> 	mov dx, [resolutionx2]
  4483 0000387E 29DF                <1> 	sub edi, ebx
  4484 00003880 29DF                <1> 	sub edi, ebx
  4485 00003882 29D7                <1> 	sub edi, edx
  4486 00003884 49                  <1> 	dec ecx
  4487 00003885 89DA                <1> 	mov edx, ebx
  4488 00003887 81F900000000        <1> 	cmp ecx, 0
  4489 0000388D 77C0                <1> 	ja ldxbmp
  4490                              <1> endedbmp:
  4491 0000388F C3                  <1> 	ret
  4492                              <1> 	
  4493 00003890 00000000            <1> 	bmpend dd 0
  4494                              <1> 
  4495                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Here are some vars;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4496 00003894 00000000            <1> 	showstringesi dw 0,0
  4497 00003898 00                  <1> 	mouseon db 0
  4498 00003899 737461727400        <1> 	start	db "start",0
  4499 0000389F 536F6C6C65724F5300  <1> 	gotomenu db "SollerOS",0
  4500 000038A8 426F6F2100          <1> 	boomsg db "Boo!",0
  4501 000038AD 5061636D616E207761- <1> 	pacmsg	db "Pacman was easy to draw.",0
  4502 000038B6 73206561737920746F- <1>
  4503 000038BF 20647261772E00      <1>
  4504 000038C6 4F6D206E6F6D206E6F- <1> 	pacnom  db "Om nom nom nom",0
  4505 000038CF 6D206E6F6D00        <1>
  4506 000038D5 77696E646F77732073- <1> 	winmsg	db "windows sucks",0
  4507 000038DE 75636B7300          <1>
  4508 000038E3 5800                <1> 	xmsg db "X",0
  4509 000038E5 0000                <1> 	icon dw 0	;pointer to icon
  4510 000038E7 00000000            <1> 	codepointer dw 0,0 ;pointer to code
  4511 000038EB 00                  <1> 	iconselected db 0
  4512                              <1> 	
  4513                              <1> 	boo:
  4514 000038EC BE[A8380000]        <1> 		mov esi, boomsg
  4515 000038F1 66BA6400            <1> 		mov dx, 100
  4516 000038F5 66B94001            <1> 		mov cx, 320
  4517 000038F9 BB00000000          <1> 		mov ebx, 0
  4518 000038FE 66B80000            <1> 		mov ax, 0
  4519 00003902 E9E6F8FFFF          <1> 		jmp showstring
  4520                              <1> 
  4521                              <1> 	pacmannomnom:
  4522 00003907 BE[C6380000]        <1> 		mov esi, pacnom
  4523 0000390C 66BA8200            <1> 		mov dx, 130
  4524 00003910 66B93C00            <1> 		mov cx, 60
  4525 00003914 BB00000000          <1> 		mov ebx, 0
  4526 00003919 66B80000            <1> 		mov ax, 0
  4527 0000391D E9CBF8FFFF          <1> 		jmp showstring	
  4528                              <1> 	
  4529                              <1> 	noie:
  4530 00003922 BE[B6390000]        <1> 		mov esi, termwindow
  4531 00003927 66BA0000            <1> 		mov dx, 0
  4532 0000392B 66B90000            <1> 		mov cx, 0
  4533 0000392F BB[E40C0000]        <1> 		mov ebx, nwcmd
  4534                              <1> ;;		mov ebx, internettest
  4535 00003934 891D[CF020000]      <1> 		mov [user2codepoint], ebx
  4536 0000393A 66B80000            <1> 		mov ax, 0
  4537 0000393E E8FFF8FFFF          <1> 		call showwindow
  4538                              <1> ;;		jmp internettest
  4539 00003943 E99CD3FFFF          <1> 		jmp nwcmd
  4540 00003948 C3                  <1> 		ret
  4541                              <1> 
  4542                              <1> 	gotomenuboot:
  4543 00003949 BE[B6390000]        <1> 		mov esi, termwindow
  4544 0000394E 66BA0000            <1> 		mov dx, 0
  4545 00003952 66B90000            <1> 		mov cx, 0
  4546 00003956 BB[2F0C0000]        <1> 		mov ebx, os
  4547 0000395B 891D[CF020000]      <1> 		mov [user2codepoint], ebx
  4548 00003961 66B80000            <1> 		mov ax, 0
  4549 00003965 E8D8F8FFFF          <1> 		call showwindow
  4550 0000396A E9C0D2FFFF          <1> jmp os
  4551 0000396F C3                  <1> 		ret
  4552                              <1> 
  4553                              <1> 	winblows:
  4554 00003970 BE[D5380000]        <1> 		mov esi, winmsg
  4555 00003975 66BA0000            <1> 		mov dx, 0
  4556 00003979 668B0D[45360000]    <1> 		mov cx, [resolutiony]
  4557 00003980 6681E92000          <1> 		sub cx, 32
  4558 00003985 BB00000000          <1> 		mov ebx, 0
  4559 0000398A B400                <1> 		mov ah, 0
  4560 0000398C B011                <1> 		mov al, 00010001b
  4561 0000398E E85AF8FFFF          <1> 		call showstring
  4562 00003993 BE[9F380000]        <1> 		mov esi, gotomenu
  4563 00003998 668B0D[45360000]    <1> 		mov cx, [resolutiony]
  4564 0000399F 6681E93000          <1> 		sub cx, 48
  4565 000039A4 66BA0000            <1> 		mov dx, 0
  4566 000039A8 B400                <1> 		mov ah, 0
  4567 000039AA B010                <1> 		mov al, 00010000b
  4568 000039AC BB[49390000]        <1> 		mov ebx, gotomenuboot
  4569 000039B1 E937F8FFFF          <1> 		jmp showstring
  4570                              <1> 
  4571 000039B6 8002E001            <1> 	termwindow:	dw 640,480	;;window size
  4572 000039BA 5445524D494E414C00  <1> 	termmsg:	db "TERMINAL",0	;;window title
  4573 000039BA <incbin>            <1> interneticon: 	incbin 'source/precompiled/interneticon.pak'
  4574 000039BA <incbin>            <1> wordicon: 	incbin 'source/precompiled/wordicon.pak'
  4575 000039BA <incbin>            <1> pacmanpellet: incbin 'source/precompiled/pacmanpellet.pak'
  4576 000039BA <incbin>            <1> ghostie	incbin 'source/precompiled/ghostie.pak'
  4577 000039BA <incbin>            <1> pacman	incbin 'source/precompiled/pacman.pak'
  4578                                      ;%include 'source/network.asm'
  4579                                  	%include 'source/pci.asm'
  4580 00003C4D 00                  <1> pcibus		db 0
  4581 00003C4E 00                  <1> pcidevice	db 0
  4582 00003C4F 00                  <1> pcifunction	db 0
  4583 00003C50 00                  <1> pciregister	db 0
  4584 00003C51 00                  <1> pcireqtype db 0
  4585                              <1> 
  4586                              <1> getpciport:
  4587 00003C52 B001                <1> 	mov al, 1
  4588 00003C54 A2[513C0000]        <1> 	mov [pcireqtype], al
  4589 00003C59 E91E000000          <1> 	jmp searchpci
  4590                              <1> pcidump:
  4591 00003C5E B800000000          <1> 	mov eax, 0
  4592 00003C63 A2[4F3C0000]        <1> 	mov [pcifunction], al
  4593 00003C68 A2[4D3C0000]        <1> 	mov [pcibus], al
  4594 00003C6D A2[4E3C0000]        <1> 	mov [pcidevice], al
  4595 00003C72 A2[513C0000]        <1> 	mov [pcireqtype], al
  4596 00003C77 E900000000          <1> 	jmp searchpci
  4597                              <1> searchpci:		;;return in ebx, start X in pciX
  4598 00003C7C B000                <1> 	mov al, 0
  4599 00003C7E A2[503C0000]        <1> 	mov [pciregister], al
  4600 00003C83 E84F010000          <1> 	call getpciaddr
  4601 00003C88 BAF80C0000          <1> 	mov edx, 0xCF8
  4602 00003C8D EF                  <1> 	out dx, eax	;;request pci config
  4603 00003C8E BAFC0C0000          <1> 	mov edx, 0xCFC
  4604 00003C93 ED                  <1> 	in eax, dx 	;;read in pci config
  4605 00003C94 3D0000FFFF          <1> 	cmp eax, 0xFFFF0000
  4606 00003C99 0F8237000000        <1> 	jb near checkpcidevice
  4607                              <1> searchpciret:
  4608                              <1> nextpcidevice:
  4609 00003C9F B000                <1> 	mov al, 0
  4610 00003CA1 A2[4F3C0000]        <1> 	mov [pcifunction], al
  4611 00003CA6 A0[4E3C0000]        <1> 	mov al, [pcidevice]
  4612 00003CAB 3C1F                <1> 	cmp al, 11111b
  4613 00003CAD 0F83B8000000        <1> 	jae near nextpcibus
  4614 00003CB3 FEC0                <1> 	inc al
  4615 00003CB5 A2[4E3C0000]        <1> 	mov [pcidevice], al
  4616 00003CBA EBC0                <1> 	jmp searchpci
  4617 00003CBC A0[4F3C0000]        <1> 	mov al, [pcifunction]
  4618 00003CC1 3C07                <1> 	cmp al, 111b
  4619 00003CC3 0F83D6FFFFFF        <1> 	jae near nextpcidevice
  4620 00003CC9 FEC0                <1> 	inc al
  4621 00003CCB A2[4F3C0000]        <1> 	mov [pcifunction], al
  4622 00003CD0 EBAA                <1> 	jmp searchpci
  4623 00003CD2 00000000            <1> pcitype: db 0,0,0,0
  4624                              <1> checkpcidevice:
  4625 00003CD6 B000                <1> 	mov al, 0
  4626 00003CD8 3805[513C0000]      <1> 	cmp [pcireqtype], al
  4627 00003CDE 0F842B000000        <1> 	je near dumppcidevice
  4628 00003CE4 B008                <1> 	mov al, 0x08
  4629 00003CE6 A2[503C0000]        <1> 	mov [pciregister], al	;;class code, subclass, revision id
  4630 00003CEB E8E7000000          <1> 	call getpciaddr
  4631 00003CF0 BAF80C0000          <1> 	mov edx, 0xCF8
  4632 00003CF5 EF                  <1> 	out dx, eax
  4633 00003CF6 BAFC0C0000          <1> 	mov edx, 0xCFC
  4634 00003CFB ED                  <1> 	in eax, dx
  4635 00003CFC C1C008              <1> 	rol eax, 8
  4636 00003CFF 8A1D[D23C0000]      <1> 	mov bl, [pcitype]
  4637 00003D05 38D8                <1> 	cmp al, bl
  4638 00003D07 0F8480000000        <1> 	je near foundpciaddr
  4639 00003D0D EB90                <1> 	jmp searchpciret
  4640                              <1> dumppcidevice:
  4641 00003D0F B000                <1> 	mov al, 0
  4642 00003D11 A2[503C0000]        <1> 	mov [pciregister], al
  4643 00003D16 E8BC000000          <1> 	call getpciaddr
  4644 00003D1B 89C1                <1> 	mov ecx, eax
  4645 00003D1D C605[9D100000]03    <1> 	mov byte [firsthexshown],3
  4646 00003D24 E875D3FFFF          <1> 	call showhex
  4647                              <1> dumppcidevicelp:
  4648 00003D29 A2[503C0000]        <1> 	mov [pciregister], al
  4649 00003D2E E8A4000000          <1> 	call getpciaddr
  4650 00003D33 BAF80C0000          <1> 	mov edx, 0xCF8
  4651 00003D38 EF                  <1> 	out dx, eax
  4652 00003D39 BAFC0C0000          <1> 	mov edx, 0xCFC
  4653 00003D3E ED                  <1> 	in eax, dx
  4654 00003D3F 89C1                <1> 	mov ecx, eax
  4655 00003D41 A0[503C0000]        <1> 	mov al, [pciregister]
  4656 00003D46 0404                <1> 	add al, 4
  4657 00003D48 3C3C                <1> 	cmp al, 0x3C
  4658 00003D4A 730E                <1> 	jae dumppcidn
  4659 00003D4C C605[9D100000]00    <1> 	mov byte [firsthexshown],0
  4660 00003D53 E846D3FFFF          <1> 	call showhex
  4661 00003D58 EBCF                <1> 	jmp dumppcidevicelp
  4662                              <1> dumppcidn:
  4663 00003D5A C605[9D100000]02    <1> 	mov byte [firsthexshown],2
  4664 00003D61 E838D3FFFF          <1> 	call showhex
  4665 00003D66 E934FFFFFF          <1> 	jmp searchpciret
  4666                              <1> nextpcibus:
  4667 00003D6B B000                <1> 	mov al, 0
  4668 00003D6D A2[4E3C0000]        <1> 	mov [pcidevice], al
  4669 00003D72 A0[4D3C0000]        <1> 	mov al, [pcibus]
  4670 00003D77 3C7F                <1> 	cmp al, 1111111b
  4671 00003D79 730C                <1> 	jae donesearchpci
  4672 00003D7B FEC0                <1> 	inc al
  4673 00003D7D A2[4D3C0000]        <1> 	mov [pcibus], al
  4674 00003D82 E9F5FEFFFF          <1> 	jmp searchpci
  4675                              <1> donesearchpci:
  4676 00003D87 BA00000000          <1> 	mov edx, 0
  4677 00003D8C C3                  <1> 	ret
  4678                              <1> foundpciaddr:
  4679 00003D8D B010                <1> 	mov al, 0x10
  4680 00003D8F A2[503C0000]        <1> 	mov [pciregister], al
  4681                              <1> findpciioaddr:
  4682 00003D94 E83E000000          <1> 	call getpciaddr
  4683 00003D99 BAF80C0000          <1> 	mov edx, 0xCF8
  4684 00003D9E EF                  <1> 	out dx, eax
  4685 00003D9F BAFC0C0000          <1> 	mov edx, 0xCFC
  4686 00003DA4 ED                  <1> 	in eax, dx
  4687 00003DA5 89C3                <1> 	mov ebx, eax
  4688 00003DA7 81E301000000        <1> 	and ebx, 1
  4689 00003DAD 81FB00000000        <1> 	cmp ebx, 0
  4690 00003DB3 0F8408000000        <1> 	je near notpciioaddr
  4691 00003DB9 2D01000000          <1> 	sub eax, 1
  4692 00003DBE 89C2                <1> 	mov edx, eax
  4693 00003DC0 C3                  <1> 	ret
  4694                              <1> notpciioaddr:
  4695 00003DC1 A0[503C0000]        <1> 	mov al, [pciregister]
  4696 00003DC6 0404                <1> 	add al, 4
  4697 00003DC8 3C28                <1> 	cmp al, 0x28
  4698 00003DCA 0F87CFFEFFFF        <1> 	ja near searchpciret
  4699 00003DD0 A2[503C0000]        <1> 	mov [pciregister], al
  4700 00003DD5 EBBD                <1> 	jmp findpciioaddr
  4701                              <1> getpciaddr:		;;puts it in eax and ebx
  4702 00003DD7 B800000000          <1> 			mov eax, 0
  4703 00003DDC BB00000080          <1> 			mov ebx, 0x80000000
  4704 00003DE1 A0[4D3C0000]        <1> 			mov al, [pcibus]
  4705 00003DE6 C1E010              <1> 			shl eax, 16
  4706 00003DE9 01C3                <1> 			add ebx, eax
  4707 00003DEB B800000000          <1> 			mov eax, 0
  4708 00003DF0 A0[4E3C0000]        <1> 			mov al, [pcidevice]
  4709 00003DF5 C1E00B              <1> 			shl eax, 11
  4710 00003DF8 01C3                <1> 			add ebx, eax
  4711 00003DFA B800000000          <1> 			mov eax, 0
  4712 00003DFF A0[4F3C0000]        <1> 			mov al, [pcifunction]
  4713 00003E04 C1E008              <1> 			shl eax, 8
  4714 00003E07 01C3                <1> 			add ebx, eax
  4715 00003E09 B800000000          <1> 			mov eax, 0
  4716 00003E0E A0[503C0000]        <1> 			mov al, [pciregister]
  4717 00003E13 01C3                <1> 			add ebx, eax
  4718 00003E15 89D8                <1> 			mov eax, ebx
  4719 00003E17 C3                  <1> 			ret
  4720                                  	;%include 'source/process.asm'
  4721                                      %include 'source/disk.asm'
  4722                              <1> ;;disk.asm - new - using lba
  4723                              <1> loadfile:	;;loads a file with the name buffer's location in edi into location in esi
  4724 00003E18 803F00              <1> 	cmp byte [edi], 0
  4725 00003E1B 0F8440000000        <1> 	je near nofileload
  4726 00003E21 89FA                <1> 	mov edx, edi
  4727 00003E23 BB[096C0000]        <1> 	mov ebx, diskfileindex
  4728                              <1> nextnamechar:
  4729 00003E28 8A07                <1> 	mov al, [edi]
  4730 00003E2A 8A23                <1> 	mov ah, [ebx]
  4731 00003E2C 47                  <1> 	inc edi
  4732 00003E2D 43                  <1> 	inc ebx
  4733 00003E2E 88C1                <1> 	mov cl, al
  4734 00003E30 08E1                <1> 	or cl, ah
  4735 00003E32 80F900              <1> 	cmp cl, 0
  4736 00003E35 7430                <1> 	je equalfilenames
  4737 00003E37 80F920              <1> 	cmp cl, ' '
  4738 00003E3A 742B                <1> 	je equalfilenames
  4739 00003E3C 80FC00              <1> 	cmp ah, 0
  4740 00003E3F 7410                <1> 	je nextfilename
  4741 00003E41 3C00                <1> 	cmp al, 0
  4742 00003E43 740C                <1> 	je nextfilename
  4743 00003E45 38E0                <1> 	cmp al, ah
  4744 00003E47 74DF                <1> 	je nextnamechar
  4745                              <1> getebxzero:
  4746 00003E49 8A23                <1> 	mov ah, [ebx]
  4747 00003E4B 43                  <1> 	inc ebx
  4748 00003E4C 80FC00              <1> 	cmp ah, 0
  4749 00003E4F 75F8                <1> 	jne getebxzero
  4750                              <1> nextfilename:
  4751 00003E51 81C308000000        <1> 	add ebx, 8		;;next descriptor
  4752 00003E57 89D7                <1> 	mov edi, edx
  4753 00003E59 81FB[626C0000]      <1> 	cmp ebx, enddiskfileindex
  4754 00003E5F 72C7                <1> 	jb nextnamechar
  4755                              <1> nofileload:
  4756 00003E61 BA94010000          <1> 	mov edx, 404	;;indicate not found error
  4757 00003E66 C3                  <1> 	ret
  4758                              <1> equalfilenames:
  4759 00003E67 8B4304              <1> 	mov eax, [ebx + 4] 	;;put file size in eax
  4760 00003E6A 8B1B                <1> 	mov ebx, [ebx]		;;put file beginning in ebx
  4761 00003E6C 031D[2C000000]      <1> 	add ebx, [lbaad]	;;add offset to solleros
  4762 00003E72 B900000000          <1> 	mov ecx, 0
  4763 00003E77 88C1                <1> 	mov cl, al			;;get excess number of sectors
  4764 00003E79 D0E1                <1> 	shl cl, 1
  4765 00003E7B D0E9                <1> 	shr cl, 1			;;cut off at 128
  4766 00003E7D 29C8                <1> 	sub eax, ecx		;;get rid of excess sectors
  4767 00003E7F B500                <1> 	mov ch, 0			;;drive 0
  4768 00003E81 C1E807              <1> 	shr eax, 7			;;get number of 128 sector tracks
  4769                              <1> loaddiskfile:		;;tracks in eax, excess sectors in cl, drive in ch, buffer in esi, address in ebx
  4770 00003E84 A3[C23E0000]        <1> 	mov [filetracks], eax
  4771 00003E89 89F7                <1> 	mov edi, esi		;;just in case cl is 0
  4772 00003E8B 89DA                <1> 	mov edx, ebx
  4773 00003E8D 80F900              <1> 	cmp cl, 0
  4774 00003E90 7405                <1> 	je copytracksforfile
  4775 00003E92 E831000000          <1> 	call diskr		;;take care of excess sectors
  4776                              <1> copytracksforfile:
  4777 00003E97 A1[C23E0000]        <1> 	mov eax, [filetracks]
  4778 00003E9C 3D00000000          <1> 	cmp eax, 0
  4779 00003EA1 7419                <1> 	je donecopyfile
  4780 00003EA3 48                  <1> 	dec eax
  4781 00003EA4 A3[C23E0000]        <1> 	mov [filetracks], eax
  4782 00003EA9 89D3                <1> 	mov ebx, edx	;;get end lba
  4783 00003EAB B180                <1> 	mov cl, 0x80
  4784 00003EAD 8A2D[2B000000]      <1> 	mov ch, [DriveNumber]
  4785 00003EB3 89FE                <1> 	mov esi, edi	;;reset buffer
  4786 00003EB5 E80E000000          <1> 	call diskr
  4787 00003EBA EBDB                <1> 	jmp copytracksforfile
  4788                              <1> donecopyfile:
  4789 00003EBC BA00000000          <1> 	mov edx, 0	;;no error
  4790 00003EC1 C3                  <1> 	ret
  4791                              <1> 	
  4792 00003EC2 00000000            <1> filetracks dd 0
  4793                              <1> 	
  4794 00003EC6 6400                <1> segments dw 100
  4795                              <1> 
  4796                              <1> diskr:		;;sector count in cl, disk number in ch, 28 bit address in first 28 bits of ebx, buffer in esi, puts end buffer in edi and end lba in edx
  4797 00003EC8 8935[603F0000]      <1> 	mov [bufferstartesi], esi
  4798 00003ECE 891D[5C3F0000]      <1> 	mov [lbaadstartebx], ebx
  4799 00003ED4 BA00000000          <1> 	mov edx, 0
  4800 00003ED9 88CA                <1> 	mov dl, cl
  4801 00003EDB 01DA                <1> 	add edx, ebx
  4802 00003EDD 8915[583F0000]      <1> 	mov [lbaadend], edx
  4803 00003EE3 66B80000            <1> 	mov ax, 0
  4804 00003EE7 66BAF101            <1> 	mov dx, 0x1F1
  4805 00003EEB EE                  <1> 	out dx, al	;;send null byte to port
  4806 00003EEC 6642                <1> 	inc dx	;;0x1F2
  4807 00003EEE 88C8                <1> 	mov al, cl	;;get sector count
  4808 00003EF0 EE                  <1> 	out dx, al	;;send sector count
  4809 00003EF1 6642                <1> 	inc dx	;;0x1F3
  4810 00003EF3 88D8                <1> 	mov al, bl	;;get first 8 bits of address
  4811 00003EF5 EE                  <1> 	out dx, al	;;send them
  4812 00003EF6 6642                <1> 	inc dx	;;0x1F4
  4813 00003EF8 C1CB08              <1> 	ror ebx, 8	;;get next 8 bits
  4814 00003EFB 88D8                <1> 	mov al, bl
  4815 00003EFD EE                  <1> 	out dx, al
  4816 00003EFE 6642                <1> 	inc dx	;;0x1F5
  4817 00003F00 C1CB08              <1> 	ror ebx, 8	;;again
  4818 00003F03 88D8                <1> 	mov al, bl
  4819 00003F05 EE                  <1> 	out dx, al
  4820 00003F06 6642                <1> 	inc dx	;;0x1F6
  4821 00003F08 C1CB08              <1> 	ror ebx, 8
  4822 00003F0B 88D8                <1> 	mov al, bl
  4823 00003F0D 240F                <1> 	and al, 00001111b	;;last 4 bits of address
  4824 00003F0F 0CE0                <1> 	or al, 0xE0			;;majic number
  4825 00003F11 C0E504              <1> 	shl ch, 4
  4826 00003F14 08E8                <1> 	or al, ch
  4827 00003F16 EE                  <1> 	out dx, al			;;send drive indicator, magic bits, and highest 4 bits of address
  4828 00003F17 6642                <1> 	inc dx	;;0x1F7
  4829 00003F19 B020                <1> 	mov al, 0x20
  4830 00003F1B EE                  <1> 	out dx, al			;;execute read command
  4831                              <1> diskrwait:
  4832 00003F1C 66BAF701            <1> 	mov dx, 0x1F7
  4833 00003F20 EC                  <1> 	in al, dx
  4834 00003F21 2408                <1> 	and al, 0x08
  4835 00003F23 3C08                <1> 	cmp al, 0x08
  4836 00003F25 75F5                <1> 	jne diskrwait
  4837 00003F27 88CD                <1> 	mov ch, cl	;;move sector data into ch, multiplying it by 256
  4838 00003F29 B100                <1> 	mov cl, 0
  4839                              <1> diskdataread:
  4840 00003F2B 66BAF001            <1> 	mov dx, 0x1F0
  4841 00003F2F 66ED                <1> 	in ax, dx
  4842 00003F31 668906              <1> 	mov [esi], ax
  4843 00003F34 81C602000000        <1> 	add esi, 2
  4844 00003F3A 6649                <1> 	dec cx
  4845 00003F3C 6681F90000          <1> 	cmp cx, 0
  4846 00003F41 75E8                <1> 	jne diskdataread		;;read all sectors
  4847 00003F43 89F7                <1> 	mov edi, esi
  4848 00003F45 8B15[583F0000]      <1> 	mov edx, [lbaadend]
  4849 00003F4B 8B35[603F0000]      <1> 	mov esi, [bufferstartesi]
  4850 00003F51 8B1D[5C3F0000]      <1> 	mov ebx, [lbaadstartebx]
  4851 00003F57 C3                  <1> 	ret
  4852                              <1> 	
  4853 00003F58 00000000            <1> lbaadend dd 0
  4854 00003F5C 00000000            <1> lbaadstartebx dd 0
  4855 00003F60 00000000            <1> bufferstartesi dd 0
  4856                                      %include 'source/msg.asm'
  4857 00003F64 6578697400          <1> 	exitmsg db	"exit",0
  4858 00003F69 50726F6772616D2022- <1> 	notfound1 db "Program ",34,0
  4859 00003F72 00                  <1>
  4860 00003F73 22206E6F7420666F75- <1> 	notfound2 db  34," not found.",13,10,0
  4861 00003F7C 6E642E0D0A00        <1>
  4862 00003F82 456E74657220506173- <1> 	pwdask	db	"Enter Password:",0
  4863 00003F8B 73776F72643A00      <1>
  4864 00003F92 70617373776F726400  <1> 	pwd	db	"password",0
  4865 00003F9B 5B7573657240536F6C- <1> 	cmd	db	"[user@SollerOS-v0.9.0$]",0
  4866 00003FA4 6C65724F532D76302E- <1>
  4867 00003FAD 392E30245D00        <1>
  4868 00003FB3 0D0A00              <1> 	line	db	13,10,0
  4869 00003FB6 536F6C6C65724F5320- <1>     msg:       db "SollerOS Beta version 0.9.0 - compiled by Jeremy Soller.",13,10,0
  4870 00003FBF 426574612076657273- <1>
  4871 00003FC8 696F6E20302E392E30- <1>
  4872 00003FD1 202D20636F6D70696C- <1>
  4873 00003FDA 6564206279204A6572- <1>
  4874 00003FE3 656D7920536F6C6C65- <1>
  4875 00003FEC 722E0D0A00          <1>
  4876 00003FF1 506C65617365207365- <1>     wrongmsg:  db "Please select one of the options above.",13,10,"You selected: ",0
  4877 00003FFA 6C656374206F6E6520- <1>
  4878 00004003 6F6620746865206F70- <1>
  4879 0000400C 74696F6E732061626F- <1>
  4880 00004015 76652E0D0A596F7520- <1>
  4881 0000401E 73656C65637465643A- <1>
  4882 00004027 2000                <1>
  4883 00004029 546F2072756E207468- <1> 	batchmsg db "To run this batch type runbatch and press enter.",10,13,0
  4884 00004032 697320626174636820- <1>
  4885 0000403B 747970652072756E62- <1>
  4886 00004044 6174636820616E6420- <1>
  4887 0000404D 707265737320656E74- <1>
  4888 00004056 65722E0A0D00        <1>
  4889                              <1> 	
  4890 00004056 <incbin>            <1> fonts:	incbin 'source/precompiled/fonts.pak'
  4891                              <1> fontend2:
  4892                              <1> mcursor:
  4893 0000486C 01                  <1> 	db	00000001b
  4894 0000486D 81                  <1> 	db	10000001b
  4895 0000486E C1                  <1> 	db	11000001b
  4896 0000486F E1                  <1> 	db	11100001b
  4897 00004870 F1                  <1> 	db	11110001b
  4898 00004871 F9                  <1> 	db	11111001b
  4899 00004872 FD                  <1> 	db	11111101b
  4900 00004873 FF                  <1> 	db	11111111b
  4901 00004874 F9                  <1> 	db	11111001b
  4902 00004875 B9                  <1> 	db	10111001b
  4903 00004876 39                  <1> 	db	00111001b
  4904 00004877 1C                  <1> 	db	00011100b
  4905 00004878 1C                  <1> 	db	00011100b
  4906 00004879 0E                  <1> 	db	00001110b
  4907 0000487A 0E                  <1> 	db	00001110b
  4908 0000487B 0C                  <1> 	db	00001100b
  4909                              <1> fontend:
  4910                              <1> 
  4911                              <1> cursorbmp:
  4912 0000487C 0100000000000000    <1> 	db	1,0,0,0,0,0,0,0
  4913 00004884 0101000000000000    <1> 	db	1,1,0,0,0,0,0,0
  4914 0000488C 0101010000000000    <1> 	db	1,1,1,0,0,0,0,0
  4915 00004894 0101010100000000    <1> 	db	1,1,1,1,0,0,0,0
  4916 0000489C 0101010101000000    <1> 	db	1,1,1,1,1,0,0,0
  4917 000048A4 0101010101010000    <1> 	db	1,1,1,1,1,1,0,0
  4918 000048AC 0101010101010100    <1> 	db	1,1,1,1,1,1,1,0
  4919 000048B4 0101010101010101    <1> 	db	1,1,1,1,1,1,1,1
  4920 000048BC 0101010101010000    <1> 	db	1,1,1,1,1,1,0,0
  4921 000048C4 0101000101010000    <1> 	db	1,1,0,1,1,1,0,0
  4922 000048CC 0100000101010000    <1> 	db	1,0,0,1,1,1,0,0
  4923 000048D4 0000000001010100    <1> 	db	0,0,0,0,1,1,1,0
  4924 000048DC 0000000001010100    <1> 	db	0,0,0,0,1,1,1,0
  4925 000048E4 0000000000010101    <1> 	db	0,0,0,0,0,1,1,1
  4926 000048EC 0000000000010101    <1> 	db	0,0,0,0,0,1,1,1
  4927 000048F4 0000000000010100    <1> 	db	0,0,0,0,0,1,1,0
  4928                              <1> cursorbmpend:
  4929                              <1> ;;; ZEROS-THESE DO NOT NEED TO BE COMPILED BUT ADDRESSES SHOULD BE USED
  4930                              <1> ;;[section .bss] compile these
  4931                              <1> 
  4932                              <1> graphicstable: ;w type, dw datalocation, w locationx, w locationy, w selected, dw code
  4933 000048FC 00<rept>            <1> 	times 200h db 0
  4934                              <1> 	graphicstableend:
  4935                              <1> mousecolorbuf: ;where the gui under the mouse is stored
  4936 00004AFC 00<rept>            <1> times 256 db 0
  4937                              <1> mcolorend:
  4938 00004BFC 00                  <1> IFON times 1 db 0
  4939 00004BFD 00<rept>            <1> IFTRUE times 100 db 0
  4940 00004C61 00<rept>            <1> BATCHPOS times 4 db 0
  4941 00004C65 00                  <1> BATCHISON times 1 db 0
  4942 00004C66 00                  <1> LOOPON times 1 db 0
  4943 00004C67 00<rept>            <1> LOOPPOS	times 4 db 0
  4944 00004C6B 00<rept>            <1> fileindex: times 200h db 0	
  4945                              <1> fileindexend:
  4946 00004E6B 00                  <1> bufferhelper:	db 0
  4947 00004E6C 00<rept>            <1> variables: 	times 500h db 0
  4948                              <1> varend:
  4949 0000536C 00<rept>            <1> buftxt: times 200h db 0
  4950 0000556C 00<rept>            <1> buf2:	times 20 db 0	;;should be initialized as '0'
  4951 00005580 00                  <1> numbuf:  db 0
  4952 00005581 00<rept>            <1> videobuf2 	times 0x12C0 db 0
  4953                              <1> videobufend:
  4954 00006841 00<rept>            <1> 	times 200 db 0
  4955                              <1> 
  4956                              <1> VBEMODEBLOCK:
  4957 00006909 00<rept>            <1> vbesignature 	times 4 db 0	;VBE Signature
  4958 0000690D 00<rept>            <1> vbeversion  		times 2 db 0   ;VBE Version
  4959 0000690F 00<rept>            <1> oemstringptr  		times 4 db 0 ;Pointer to OEM String
  4960 00006913 00<rept>            <1> capabilities 	times 4 db 0  	;Capabilities of graphics cont.
  4961 00006917 00<rept>            <1> videomodeptr 		times 4 db 0	;Pointer to Video Mode List
  4962 0000691B 00<rept>            <1> totalmemory   		times 2 db 0    ;number of 64Kb memory blocks
  4963 0000691D 00<rept>            <1> oemsoftwarerev  	times 2	db 0	;VBE implementation Software revision
  4964 0000691F 00<rept>            <1> oemvendornameptr 	times 4 db 0	;Pointer to Vendor Name String
  4965 00006923 00<rept>            <1> oemproductnameptr 	times 4 db 0	;Pointer to Product Name String
  4966 00006927 00<rept>            <1> oemproductrevptr 	times 4 db 0 	;Pointer to Product Revision String
  4967 0000692B 00<rept>            <1> reserved	times 222 db 0	;Reserved for VBE implementation scratch area
  4968 00006A09 00<rept>            <1> oemdata 	times 256 db 0	;Data Area for OEM Strings
  4969                              <1> 
  4970                              <1> 
  4971                              <1> VBEMODEINFOBLOCK:
  4972                              <1> ;Mandatory information for all VBE revision
  4973 00006B09 00<rept>            <1> modeattributes   times 2 db 0 ;Mode attributes
  4974 00006B0B 00                  <1> winaattributes   times 1 db 0 ;Window A attributes
  4975 00006B0C 00                  <1> winbattributes   times 1 db 0 ;Window B attributes
  4976 00006B0D 00<rept>            <1> wingranularity   times 2 db 0 ;Window granularity
  4977 00006B0F 00<rept>            <1> winsize          times 2 db 0 ;Window size
  4978 00006B11 00<rept>            <1> winasegment      times 2 db 0 ;Window A start segment
  4979 00006B13 00<rept>            <1> winbsegment      times 2 db 0 ;Window B start segment
  4980 00006B15 00<rept>            <1> winfuncptr       times 4 db 0 ;pointer to window function
  4981 00006B19 00<rept>            <1> bytesperscanline times 2 db 0 ;Bytes per scan line
  4982                              <1> 
  4983                              <1> ;Mandatory information for VBE 1.2 and above
  4984 00006B1B 00<rept>            <1> xresolution     times 2	db 0    ;Horizontal resolution in pixel or chars
  4985 00006B1D 00<rept>            <1> yresolution	times 2 db 0       ;Vertical resolution in pixel or chars
  4986 00006B1F 00                  <1> xcharsize       times 1	db 0    ;Character cell width in pixel
  4987 00006B20 00                  <1> ycharsize       times 1	db 0    ;Character cell height in pixel
  4988 00006B21 00                  <1> numberofplanes  times 1	db 0    ;Number of memory planes
  4989 00006B22 00                  <1> bitsperpixel    times 1	db 0    ;Bits per pixel
  4990 00006B23 00                  <1> numberofbanks   times 1	db 0    ;Number of banks
  4991 00006B24 00                  <1> memorymodel     times 1	db 0    ;Memory model type
  4992 00006B25 00                  <1> banksize        times 1 db 0	    ;Bank size in KB
  4993 00006B26 00                  <1> numberofimagepages    times 1 db 0 ;Number of images
  4994 00006B27 00                  <1> reserved1       times 1	db 0    ;Reserved for page function
  4995                              <1> 
  4996                              <1> ;Direct Color fields (required for direct/6 and YUV/7 memory models)
  4997 00006B28 00                  <1> redmasksize		times 1 db 0       ;Size of direct color red mask in bits
  4998 00006B29 00                  <1> redfieldposition	times 1	db 0    ;Bit position of lsb of red bask
  4999 00006B2A 00                  <1> greenmasksize   	times 1	db 0    ;Size of direct color green mask in bits
  5000 00006B2B 00                  <1> greenfieldposition	times 1	db 0    ;Bit position of lsb of green bask
  5001 00006B2C 00                  <1> bluemasksize		times 1 db 0     ;Size of direct color blue mask in bits
  5002 00006B2D 00                  <1> bluefieldposition	times 1	db 0    ;Bit position of lsb of blue bask
  5003 00006B2E 00                  <1> rsvdmasksize        times 1	db 0    ;Size of direct color reserved mask in bits
  5004 00006B2F 00                  <1> rsvdfieldposition	times 1	db 0    ;Bit position of lsb of reserved bask
  5005 00006B30 00                  <1> directcolormodeinfo	times 1	db 0    ;Direct color mode attributes
  5006                              <1> 
  5007                              <1> ;Mandatory information for VBE 2.0 and above
  5008 00006B31 00<rept>            <1> physbaseptr times 4 db 0        ;Physical address for flat frame buffer
  5009 00006B35 00<rept>            <1> offscreenmemoffset times 4 db 0 ;Pointer to start of off screen memory
  5010 00006B39 00<rept>            <1> offscreenmemsize times 2 db 0     ;Amount of off screen memory in 1Kb units
  5011 00006B3B 00<rept>            <1> reserved2 times 206 db 0  ;Remainder of ModeInfoBlock
  5012                                      %include 'files.asm'
  5013                              <1> diskfileindex:
  5014 00006C09 736F6C6C65726F732E- <1> db "solleros.bmp",0
  5015 00006C12 626D7000            <1>
  5016 00006C16 37000000            <1> dd (f0-$$)/512
  5017 00006C1A B0020000            <1> dd (f1-f0)/512
  5018 00006C1E 736F6C6C65726F732E- <1> db "solleros.txt",0
  5019 00006C27 74787400            <1>
  5020 00006C2B E7020000            <1> dd (f1-$$)/512
  5021 00006C2F 01000000            <1> dd (f2-f1)/512
  5022 00006C33 74656C7900          <1> db "tely",0
  5023 00006C38 E8020000            <1> dd (f2-$$)/512
  5024 00006C3C 01000000            <1> dd (f3-f2)/512
  5025 00006C40 74696D6500          <1> db "time",0
  5026 00006C45 E9020000            <1> dd (f3-$$)/512
  5027 00006C49 01000000            <1> dd (f4-f3)/512
  5028 00006C4D 7475746F7269616C2E- <1> db "tutorial.bat",0
  5029 00006C56 62617400            <1>
  5030 00006C5A EA020000            <1> dd (f4-$$)/512
  5031 00006C5E 02000000            <1> dd (f5-f4)/512
  5032                              <1> enddiskfileindex:
  5033                              <1> 
  5034 00006C62 00<rept>            <1> align 512,db 0
  5035                              <1> f0:
  5036 00006C62 <incbin>            <1> incbin "included/solleros.bmp"
  5037 0005CDE6 00<rept>            <1> align 512,db 0
  5038                              <1> f1:
  5039 0005CDE6 <incbin>            <1> incbin "included/solleros.txt"
  5040 0005CF97 00<rept>            <1> align 512,db 0
  5041                              <1> f2:
  5042 0005CF97 <incbin>            <1> incbin "included/tely"
  5043 0005D1BD 00<rept>            <1> align 512,db 0
  5044                              <1> f3:
  5045 0005D1BD <incbin>            <1> incbin "included/time"
  5046 0005D354 00<rept>            <1> align 512,db 0
  5047                              <1> f4:
  5048 0005D354 <incbin>            <1> incbin "included/tutorial.bat"
  5049 0005D757 00<rept>            <1> align 512,db 0
  5050                              <1> f5:
